// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package latest

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// An A record.
type ARecord struct {
	// The IPv4 address of this A record.
	Ipv4Address *string `pulumi:"ipv4Address"`
}

// ARecordInput is an input type that accepts ARecordArgs and ARecordOutput values.
// You can construct a concrete instance of `ARecordInput` via:
//
//          ARecordArgs{...}
type ARecordInput interface {
	pulumi.Input

	ToARecordOutput() ARecordOutput
	ToARecordOutputWithContext(context.Context) ARecordOutput
}

// An A record.
type ARecordArgs struct {
	// The IPv4 address of this A record.
	Ipv4Address pulumi.StringPtrInput `pulumi:"ipv4Address"`
}

func (ARecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ARecord)(nil)).Elem()
}

func (i ARecordArgs) ToARecordOutput() ARecordOutput {
	return i.ToARecordOutputWithContext(context.Background())
}

func (i ARecordArgs) ToARecordOutputWithContext(ctx context.Context) ARecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ARecordOutput)
}

// ARecordArrayInput is an input type that accepts ARecordArray and ARecordArrayOutput values.
// You can construct a concrete instance of `ARecordArrayInput` via:
//
//          ARecordArray{ ARecordArgs{...} }
type ARecordArrayInput interface {
	pulumi.Input

	ToARecordArrayOutput() ARecordArrayOutput
	ToARecordArrayOutputWithContext(context.Context) ARecordArrayOutput
}

type ARecordArray []ARecordInput

func (ARecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ARecord)(nil)).Elem()
}

func (i ARecordArray) ToARecordArrayOutput() ARecordArrayOutput {
	return i.ToARecordArrayOutputWithContext(context.Background())
}

func (i ARecordArray) ToARecordArrayOutputWithContext(ctx context.Context) ARecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ARecordArrayOutput)
}

// An A record.
type ARecordOutput struct{ *pulumi.OutputState }

func (ARecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ARecord)(nil)).Elem()
}

func (o ARecordOutput) ToARecordOutput() ARecordOutput {
	return o
}

func (o ARecordOutput) ToARecordOutputWithContext(ctx context.Context) ARecordOutput {
	return o
}

// The IPv4 address of this A record.
func (o ARecordOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ARecord) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

type ARecordArrayOutput struct{ *pulumi.OutputState }

func (ARecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ARecord)(nil)).Elem()
}

func (o ARecordArrayOutput) ToARecordArrayOutput() ARecordArrayOutput {
	return o
}

func (o ARecordArrayOutput) ToARecordArrayOutputWithContext(ctx context.Context) ARecordArrayOutput {
	return o
}

func (o ARecordArrayOutput) Index(i pulumi.IntInput) ARecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ARecord {
		return vs[0].([]ARecord)[vs[1].(int)]
	}).(ARecordOutput)
}

// An A record.
type ARecordResponse struct {
	// The IPv4 address of this A record.
	Ipv4Address *string `pulumi:"ipv4Address"`
}

// ARecordResponseInput is an input type that accepts ARecordResponseArgs and ARecordResponseOutput values.
// You can construct a concrete instance of `ARecordResponseInput` via:
//
//          ARecordResponseArgs{...}
type ARecordResponseInput interface {
	pulumi.Input

	ToARecordResponseOutput() ARecordResponseOutput
	ToARecordResponseOutputWithContext(context.Context) ARecordResponseOutput
}

// An A record.
type ARecordResponseArgs struct {
	// The IPv4 address of this A record.
	Ipv4Address pulumi.StringPtrInput `pulumi:"ipv4Address"`
}

func (ARecordResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ARecordResponse)(nil)).Elem()
}

func (i ARecordResponseArgs) ToARecordResponseOutput() ARecordResponseOutput {
	return i.ToARecordResponseOutputWithContext(context.Background())
}

func (i ARecordResponseArgs) ToARecordResponseOutputWithContext(ctx context.Context) ARecordResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ARecordResponseOutput)
}

// ARecordResponseArrayInput is an input type that accepts ARecordResponseArray and ARecordResponseArrayOutput values.
// You can construct a concrete instance of `ARecordResponseArrayInput` via:
//
//          ARecordResponseArray{ ARecordResponseArgs{...} }
type ARecordResponseArrayInput interface {
	pulumi.Input

	ToARecordResponseArrayOutput() ARecordResponseArrayOutput
	ToARecordResponseArrayOutputWithContext(context.Context) ARecordResponseArrayOutput
}

type ARecordResponseArray []ARecordResponseInput

func (ARecordResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ARecordResponse)(nil)).Elem()
}

func (i ARecordResponseArray) ToARecordResponseArrayOutput() ARecordResponseArrayOutput {
	return i.ToARecordResponseArrayOutputWithContext(context.Background())
}

func (i ARecordResponseArray) ToARecordResponseArrayOutputWithContext(ctx context.Context) ARecordResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ARecordResponseArrayOutput)
}

// An A record.
type ARecordResponseOutput struct{ *pulumi.OutputState }

func (ARecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ARecordResponse)(nil)).Elem()
}

func (o ARecordResponseOutput) ToARecordResponseOutput() ARecordResponseOutput {
	return o
}

func (o ARecordResponseOutput) ToARecordResponseOutputWithContext(ctx context.Context) ARecordResponseOutput {
	return o
}

// The IPv4 address of this A record.
func (o ARecordResponseOutput) Ipv4Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ARecordResponse) *string { return v.Ipv4Address }).(pulumi.StringPtrOutput)
}

type ARecordResponseArrayOutput struct{ *pulumi.OutputState }

func (ARecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ARecordResponse)(nil)).Elem()
}

func (o ARecordResponseArrayOutput) ToARecordResponseArrayOutput() ARecordResponseArrayOutput {
	return o
}

func (o ARecordResponseArrayOutput) ToARecordResponseArrayOutputWithContext(ctx context.Context) ARecordResponseArrayOutput {
	return o
}

func (o ARecordResponseArrayOutput) Index(i pulumi.IntInput) ARecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ARecordResponse {
		return vs[0].([]ARecordResponse)[vs[1].(int)]
	}).(ARecordResponseOutput)
}

// An AAAA record.
type AaaaRecord struct {
	// The IPv6 address of this AAAA record.
	Ipv6Address *string `pulumi:"ipv6Address"`
}

// AaaaRecordInput is an input type that accepts AaaaRecordArgs and AaaaRecordOutput values.
// You can construct a concrete instance of `AaaaRecordInput` via:
//
//          AaaaRecordArgs{...}
type AaaaRecordInput interface {
	pulumi.Input

	ToAaaaRecordOutput() AaaaRecordOutput
	ToAaaaRecordOutputWithContext(context.Context) AaaaRecordOutput
}

// An AAAA record.
type AaaaRecordArgs struct {
	// The IPv6 address of this AAAA record.
	Ipv6Address pulumi.StringPtrInput `pulumi:"ipv6Address"`
}

func (AaaaRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AaaaRecord)(nil)).Elem()
}

func (i AaaaRecordArgs) ToAaaaRecordOutput() AaaaRecordOutput {
	return i.ToAaaaRecordOutputWithContext(context.Background())
}

func (i AaaaRecordArgs) ToAaaaRecordOutputWithContext(ctx context.Context) AaaaRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AaaaRecordOutput)
}

// AaaaRecordArrayInput is an input type that accepts AaaaRecordArray and AaaaRecordArrayOutput values.
// You can construct a concrete instance of `AaaaRecordArrayInput` via:
//
//          AaaaRecordArray{ AaaaRecordArgs{...} }
type AaaaRecordArrayInput interface {
	pulumi.Input

	ToAaaaRecordArrayOutput() AaaaRecordArrayOutput
	ToAaaaRecordArrayOutputWithContext(context.Context) AaaaRecordArrayOutput
}

type AaaaRecordArray []AaaaRecordInput

func (AaaaRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AaaaRecord)(nil)).Elem()
}

func (i AaaaRecordArray) ToAaaaRecordArrayOutput() AaaaRecordArrayOutput {
	return i.ToAaaaRecordArrayOutputWithContext(context.Background())
}

func (i AaaaRecordArray) ToAaaaRecordArrayOutputWithContext(ctx context.Context) AaaaRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AaaaRecordArrayOutput)
}

// An AAAA record.
type AaaaRecordOutput struct{ *pulumi.OutputState }

func (AaaaRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AaaaRecord)(nil)).Elem()
}

func (o AaaaRecordOutput) ToAaaaRecordOutput() AaaaRecordOutput {
	return o
}

func (o AaaaRecordOutput) ToAaaaRecordOutputWithContext(ctx context.Context) AaaaRecordOutput {
	return o
}

// The IPv6 address of this AAAA record.
func (o AaaaRecordOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AaaaRecord) *string { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

type AaaaRecordArrayOutput struct{ *pulumi.OutputState }

func (AaaaRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AaaaRecord)(nil)).Elem()
}

func (o AaaaRecordArrayOutput) ToAaaaRecordArrayOutput() AaaaRecordArrayOutput {
	return o
}

func (o AaaaRecordArrayOutput) ToAaaaRecordArrayOutputWithContext(ctx context.Context) AaaaRecordArrayOutput {
	return o
}

func (o AaaaRecordArrayOutput) Index(i pulumi.IntInput) AaaaRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AaaaRecord {
		return vs[0].([]AaaaRecord)[vs[1].(int)]
	}).(AaaaRecordOutput)
}

// An AAAA record.
type AaaaRecordResponse struct {
	// The IPv6 address of this AAAA record.
	Ipv6Address *string `pulumi:"ipv6Address"`
}

// AaaaRecordResponseInput is an input type that accepts AaaaRecordResponseArgs and AaaaRecordResponseOutput values.
// You can construct a concrete instance of `AaaaRecordResponseInput` via:
//
//          AaaaRecordResponseArgs{...}
type AaaaRecordResponseInput interface {
	pulumi.Input

	ToAaaaRecordResponseOutput() AaaaRecordResponseOutput
	ToAaaaRecordResponseOutputWithContext(context.Context) AaaaRecordResponseOutput
}

// An AAAA record.
type AaaaRecordResponseArgs struct {
	// The IPv6 address of this AAAA record.
	Ipv6Address pulumi.StringPtrInput `pulumi:"ipv6Address"`
}

func (AaaaRecordResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AaaaRecordResponse)(nil)).Elem()
}

func (i AaaaRecordResponseArgs) ToAaaaRecordResponseOutput() AaaaRecordResponseOutput {
	return i.ToAaaaRecordResponseOutputWithContext(context.Background())
}

func (i AaaaRecordResponseArgs) ToAaaaRecordResponseOutputWithContext(ctx context.Context) AaaaRecordResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AaaaRecordResponseOutput)
}

// AaaaRecordResponseArrayInput is an input type that accepts AaaaRecordResponseArray and AaaaRecordResponseArrayOutput values.
// You can construct a concrete instance of `AaaaRecordResponseArrayInput` via:
//
//          AaaaRecordResponseArray{ AaaaRecordResponseArgs{...} }
type AaaaRecordResponseArrayInput interface {
	pulumi.Input

	ToAaaaRecordResponseArrayOutput() AaaaRecordResponseArrayOutput
	ToAaaaRecordResponseArrayOutputWithContext(context.Context) AaaaRecordResponseArrayOutput
}

type AaaaRecordResponseArray []AaaaRecordResponseInput

func (AaaaRecordResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AaaaRecordResponse)(nil)).Elem()
}

func (i AaaaRecordResponseArray) ToAaaaRecordResponseArrayOutput() AaaaRecordResponseArrayOutput {
	return i.ToAaaaRecordResponseArrayOutputWithContext(context.Background())
}

func (i AaaaRecordResponseArray) ToAaaaRecordResponseArrayOutputWithContext(ctx context.Context) AaaaRecordResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AaaaRecordResponseArrayOutput)
}

// An AAAA record.
type AaaaRecordResponseOutput struct{ *pulumi.OutputState }

func (AaaaRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AaaaRecordResponse)(nil)).Elem()
}

func (o AaaaRecordResponseOutput) ToAaaaRecordResponseOutput() AaaaRecordResponseOutput {
	return o
}

func (o AaaaRecordResponseOutput) ToAaaaRecordResponseOutputWithContext(ctx context.Context) AaaaRecordResponseOutput {
	return o
}

// The IPv6 address of this AAAA record.
func (o AaaaRecordResponseOutput) Ipv6Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AaaaRecordResponse) *string { return v.Ipv6Address }).(pulumi.StringPtrOutput)
}

type AaaaRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (AaaaRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AaaaRecordResponse)(nil)).Elem()
}

func (o AaaaRecordResponseArrayOutput) ToAaaaRecordResponseArrayOutput() AaaaRecordResponseArrayOutput {
	return o
}

func (o AaaaRecordResponseArrayOutput) ToAaaaRecordResponseArrayOutputWithContext(ctx context.Context) AaaaRecordResponseArrayOutput {
	return o
}

func (o AaaaRecordResponseArrayOutput) Index(i pulumi.IntInput) AaaaRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AaaaRecordResponse {
		return vs[0].([]AaaaRecordResponse)[vs[1].(int)]
	}).(AaaaRecordResponseOutput)
}

// AAD Vpn authentication type related parameters.
type AadAuthenticationParameters struct {
	// AAD Vpn authentication parameter AAD audience.
	AadAudience *string `pulumi:"aadAudience"`
	// AAD Vpn authentication parameter AAD issuer.
	AadIssuer *string `pulumi:"aadIssuer"`
	// AAD Vpn authentication parameter AAD tenant.
	AadTenant *string `pulumi:"aadTenant"`
}

// AadAuthenticationParametersInput is an input type that accepts AadAuthenticationParametersArgs and AadAuthenticationParametersOutput values.
// You can construct a concrete instance of `AadAuthenticationParametersInput` via:
//
//          AadAuthenticationParametersArgs{...}
type AadAuthenticationParametersInput interface {
	pulumi.Input

	ToAadAuthenticationParametersOutput() AadAuthenticationParametersOutput
	ToAadAuthenticationParametersOutputWithContext(context.Context) AadAuthenticationParametersOutput
}

// AAD Vpn authentication type related parameters.
type AadAuthenticationParametersArgs struct {
	// AAD Vpn authentication parameter AAD audience.
	AadAudience pulumi.StringPtrInput `pulumi:"aadAudience"`
	// AAD Vpn authentication parameter AAD issuer.
	AadIssuer pulumi.StringPtrInput `pulumi:"aadIssuer"`
	// AAD Vpn authentication parameter AAD tenant.
	AadTenant pulumi.StringPtrInput `pulumi:"aadTenant"`
}

func (AadAuthenticationParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AadAuthenticationParameters)(nil)).Elem()
}

func (i AadAuthenticationParametersArgs) ToAadAuthenticationParametersOutput() AadAuthenticationParametersOutput {
	return i.ToAadAuthenticationParametersOutputWithContext(context.Background())
}

func (i AadAuthenticationParametersArgs) ToAadAuthenticationParametersOutputWithContext(ctx context.Context) AadAuthenticationParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AadAuthenticationParametersOutput)
}

func (i AadAuthenticationParametersArgs) ToAadAuthenticationParametersPtrOutput() AadAuthenticationParametersPtrOutput {
	return i.ToAadAuthenticationParametersPtrOutputWithContext(context.Background())
}

func (i AadAuthenticationParametersArgs) ToAadAuthenticationParametersPtrOutputWithContext(ctx context.Context) AadAuthenticationParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AadAuthenticationParametersOutput).ToAadAuthenticationParametersPtrOutputWithContext(ctx)
}

// AadAuthenticationParametersPtrInput is an input type that accepts AadAuthenticationParametersArgs, AadAuthenticationParametersPtr and AadAuthenticationParametersPtrOutput values.
// You can construct a concrete instance of `AadAuthenticationParametersPtrInput` via:
//
//          AadAuthenticationParametersArgs{...}
//
//  or:
//
//          nil
type AadAuthenticationParametersPtrInput interface {
	pulumi.Input

	ToAadAuthenticationParametersPtrOutput() AadAuthenticationParametersPtrOutput
	ToAadAuthenticationParametersPtrOutputWithContext(context.Context) AadAuthenticationParametersPtrOutput
}

type aadAuthenticationParametersPtrType AadAuthenticationParametersArgs

func AadAuthenticationParametersPtr(v *AadAuthenticationParametersArgs) AadAuthenticationParametersPtrInput {
	return (*aadAuthenticationParametersPtrType)(v)
}

func (*aadAuthenticationParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AadAuthenticationParameters)(nil)).Elem()
}

func (i *aadAuthenticationParametersPtrType) ToAadAuthenticationParametersPtrOutput() AadAuthenticationParametersPtrOutput {
	return i.ToAadAuthenticationParametersPtrOutputWithContext(context.Background())
}

func (i *aadAuthenticationParametersPtrType) ToAadAuthenticationParametersPtrOutputWithContext(ctx context.Context) AadAuthenticationParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AadAuthenticationParametersPtrOutput)
}

// AAD Vpn authentication type related parameters.
type AadAuthenticationParametersOutput struct{ *pulumi.OutputState }

func (AadAuthenticationParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AadAuthenticationParameters)(nil)).Elem()
}

func (o AadAuthenticationParametersOutput) ToAadAuthenticationParametersOutput() AadAuthenticationParametersOutput {
	return o
}

func (o AadAuthenticationParametersOutput) ToAadAuthenticationParametersOutputWithContext(ctx context.Context) AadAuthenticationParametersOutput {
	return o
}

func (o AadAuthenticationParametersOutput) ToAadAuthenticationParametersPtrOutput() AadAuthenticationParametersPtrOutput {
	return o.ToAadAuthenticationParametersPtrOutputWithContext(context.Background())
}

func (o AadAuthenticationParametersOutput) ToAadAuthenticationParametersPtrOutputWithContext(ctx context.Context) AadAuthenticationParametersPtrOutput {
	return o.ApplyT(func(v AadAuthenticationParameters) *AadAuthenticationParameters {
		return &v
	}).(AadAuthenticationParametersPtrOutput)
}

// AAD Vpn authentication parameter AAD audience.
func (o AadAuthenticationParametersOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AadAuthenticationParameters) *string { return v.AadAudience }).(pulumi.StringPtrOutput)
}

// AAD Vpn authentication parameter AAD issuer.
func (o AadAuthenticationParametersOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AadAuthenticationParameters) *string { return v.AadIssuer }).(pulumi.StringPtrOutput)
}

// AAD Vpn authentication parameter AAD tenant.
func (o AadAuthenticationParametersOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AadAuthenticationParameters) *string { return v.AadTenant }).(pulumi.StringPtrOutput)
}

type AadAuthenticationParametersPtrOutput struct{ *pulumi.OutputState }

func (AadAuthenticationParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AadAuthenticationParameters)(nil)).Elem()
}

func (o AadAuthenticationParametersPtrOutput) ToAadAuthenticationParametersPtrOutput() AadAuthenticationParametersPtrOutput {
	return o
}

func (o AadAuthenticationParametersPtrOutput) ToAadAuthenticationParametersPtrOutputWithContext(ctx context.Context) AadAuthenticationParametersPtrOutput {
	return o
}

func (o AadAuthenticationParametersPtrOutput) Elem() AadAuthenticationParametersOutput {
	return o.ApplyT(func(v *AadAuthenticationParameters) AadAuthenticationParameters { return *v }).(AadAuthenticationParametersOutput)
}

// AAD Vpn authentication parameter AAD audience.
func (o AadAuthenticationParametersPtrOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AadAuthenticationParameters) *string {
		if v == nil {
			return nil
		}
		return v.AadAudience
	}).(pulumi.StringPtrOutput)
}

// AAD Vpn authentication parameter AAD issuer.
func (o AadAuthenticationParametersPtrOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AadAuthenticationParameters) *string {
		if v == nil {
			return nil
		}
		return v.AadIssuer
	}).(pulumi.StringPtrOutput)
}

// AAD Vpn authentication parameter AAD tenant.
func (o AadAuthenticationParametersPtrOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AadAuthenticationParameters) *string {
		if v == nil {
			return nil
		}
		return v.AadTenant
	}).(pulumi.StringPtrOutput)
}

// AAD Vpn authentication type related parameters.
type AadAuthenticationParametersResponse struct {
	// AAD Vpn authentication parameter AAD audience.
	AadAudience *string `pulumi:"aadAudience"`
	// AAD Vpn authentication parameter AAD issuer.
	AadIssuer *string `pulumi:"aadIssuer"`
	// AAD Vpn authentication parameter AAD tenant.
	AadTenant *string `pulumi:"aadTenant"`
}

// AadAuthenticationParametersResponseInput is an input type that accepts AadAuthenticationParametersResponseArgs and AadAuthenticationParametersResponseOutput values.
// You can construct a concrete instance of `AadAuthenticationParametersResponseInput` via:
//
//          AadAuthenticationParametersResponseArgs{...}
type AadAuthenticationParametersResponseInput interface {
	pulumi.Input

	ToAadAuthenticationParametersResponseOutput() AadAuthenticationParametersResponseOutput
	ToAadAuthenticationParametersResponseOutputWithContext(context.Context) AadAuthenticationParametersResponseOutput
}

// AAD Vpn authentication type related parameters.
type AadAuthenticationParametersResponseArgs struct {
	// AAD Vpn authentication parameter AAD audience.
	AadAudience pulumi.StringPtrInput `pulumi:"aadAudience"`
	// AAD Vpn authentication parameter AAD issuer.
	AadIssuer pulumi.StringPtrInput `pulumi:"aadIssuer"`
	// AAD Vpn authentication parameter AAD tenant.
	AadTenant pulumi.StringPtrInput `pulumi:"aadTenant"`
}

func (AadAuthenticationParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AadAuthenticationParametersResponse)(nil)).Elem()
}

func (i AadAuthenticationParametersResponseArgs) ToAadAuthenticationParametersResponseOutput() AadAuthenticationParametersResponseOutput {
	return i.ToAadAuthenticationParametersResponseOutputWithContext(context.Background())
}

func (i AadAuthenticationParametersResponseArgs) ToAadAuthenticationParametersResponseOutputWithContext(ctx context.Context) AadAuthenticationParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AadAuthenticationParametersResponseOutput)
}

func (i AadAuthenticationParametersResponseArgs) ToAadAuthenticationParametersResponsePtrOutput() AadAuthenticationParametersResponsePtrOutput {
	return i.ToAadAuthenticationParametersResponsePtrOutputWithContext(context.Background())
}

func (i AadAuthenticationParametersResponseArgs) ToAadAuthenticationParametersResponsePtrOutputWithContext(ctx context.Context) AadAuthenticationParametersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AadAuthenticationParametersResponseOutput).ToAadAuthenticationParametersResponsePtrOutputWithContext(ctx)
}

// AadAuthenticationParametersResponsePtrInput is an input type that accepts AadAuthenticationParametersResponseArgs, AadAuthenticationParametersResponsePtr and AadAuthenticationParametersResponsePtrOutput values.
// You can construct a concrete instance of `AadAuthenticationParametersResponsePtrInput` via:
//
//          AadAuthenticationParametersResponseArgs{...}
//
//  or:
//
//          nil
type AadAuthenticationParametersResponsePtrInput interface {
	pulumi.Input

	ToAadAuthenticationParametersResponsePtrOutput() AadAuthenticationParametersResponsePtrOutput
	ToAadAuthenticationParametersResponsePtrOutputWithContext(context.Context) AadAuthenticationParametersResponsePtrOutput
}

type aadAuthenticationParametersResponsePtrType AadAuthenticationParametersResponseArgs

func AadAuthenticationParametersResponsePtr(v *AadAuthenticationParametersResponseArgs) AadAuthenticationParametersResponsePtrInput {
	return (*aadAuthenticationParametersResponsePtrType)(v)
}

func (*aadAuthenticationParametersResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AadAuthenticationParametersResponse)(nil)).Elem()
}

func (i *aadAuthenticationParametersResponsePtrType) ToAadAuthenticationParametersResponsePtrOutput() AadAuthenticationParametersResponsePtrOutput {
	return i.ToAadAuthenticationParametersResponsePtrOutputWithContext(context.Background())
}

func (i *aadAuthenticationParametersResponsePtrType) ToAadAuthenticationParametersResponsePtrOutputWithContext(ctx context.Context) AadAuthenticationParametersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AadAuthenticationParametersResponsePtrOutput)
}

// AAD Vpn authentication type related parameters.
type AadAuthenticationParametersResponseOutput struct{ *pulumi.OutputState }

func (AadAuthenticationParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AadAuthenticationParametersResponse)(nil)).Elem()
}

func (o AadAuthenticationParametersResponseOutput) ToAadAuthenticationParametersResponseOutput() AadAuthenticationParametersResponseOutput {
	return o
}

func (o AadAuthenticationParametersResponseOutput) ToAadAuthenticationParametersResponseOutputWithContext(ctx context.Context) AadAuthenticationParametersResponseOutput {
	return o
}

func (o AadAuthenticationParametersResponseOutput) ToAadAuthenticationParametersResponsePtrOutput() AadAuthenticationParametersResponsePtrOutput {
	return o.ToAadAuthenticationParametersResponsePtrOutputWithContext(context.Background())
}

func (o AadAuthenticationParametersResponseOutput) ToAadAuthenticationParametersResponsePtrOutputWithContext(ctx context.Context) AadAuthenticationParametersResponsePtrOutput {
	return o.ApplyT(func(v AadAuthenticationParametersResponse) *AadAuthenticationParametersResponse {
		return &v
	}).(AadAuthenticationParametersResponsePtrOutput)
}

// AAD Vpn authentication parameter AAD audience.
func (o AadAuthenticationParametersResponseOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AadAuthenticationParametersResponse) *string { return v.AadAudience }).(pulumi.StringPtrOutput)
}

// AAD Vpn authentication parameter AAD issuer.
func (o AadAuthenticationParametersResponseOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AadAuthenticationParametersResponse) *string { return v.AadIssuer }).(pulumi.StringPtrOutput)
}

// AAD Vpn authentication parameter AAD tenant.
func (o AadAuthenticationParametersResponseOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AadAuthenticationParametersResponse) *string { return v.AadTenant }).(pulumi.StringPtrOutput)
}

type AadAuthenticationParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (AadAuthenticationParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AadAuthenticationParametersResponse)(nil)).Elem()
}

func (o AadAuthenticationParametersResponsePtrOutput) ToAadAuthenticationParametersResponsePtrOutput() AadAuthenticationParametersResponsePtrOutput {
	return o
}

func (o AadAuthenticationParametersResponsePtrOutput) ToAadAuthenticationParametersResponsePtrOutputWithContext(ctx context.Context) AadAuthenticationParametersResponsePtrOutput {
	return o
}

func (o AadAuthenticationParametersResponsePtrOutput) Elem() AadAuthenticationParametersResponseOutput {
	return o.ApplyT(func(v *AadAuthenticationParametersResponse) AadAuthenticationParametersResponse { return *v }).(AadAuthenticationParametersResponseOutput)
}

// AAD Vpn authentication parameter AAD audience.
func (o AadAuthenticationParametersResponsePtrOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AadAuthenticationParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadAudience
	}).(pulumi.StringPtrOutput)
}

// AAD Vpn authentication parameter AAD issuer.
func (o AadAuthenticationParametersResponsePtrOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AadAuthenticationParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadIssuer
	}).(pulumi.StringPtrOutput)
}

// AAD Vpn authentication parameter AAD tenant.
func (o AadAuthenticationParametersResponsePtrOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AadAuthenticationParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadTenant
	}).(pulumi.StringPtrOutput)
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpace struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
}

// AddressSpaceInput is an input type that accepts AddressSpaceArgs and AddressSpaceOutput values.
// You can construct a concrete instance of `AddressSpaceInput` via:
//
//          AddressSpaceArgs{...}
type AddressSpaceInput interface {
	pulumi.Input

	ToAddressSpaceOutput() AddressSpaceOutput
	ToAddressSpaceOutputWithContext(context.Context) AddressSpaceOutput
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceArgs struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
}

func (AddressSpaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpace)(nil)).Elem()
}

func (i AddressSpaceArgs) ToAddressSpaceOutput() AddressSpaceOutput {
	return i.ToAddressSpaceOutputWithContext(context.Background())
}

func (i AddressSpaceArgs) ToAddressSpaceOutputWithContext(ctx context.Context) AddressSpaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceOutput)
}

func (i AddressSpaceArgs) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return i.ToAddressSpacePtrOutputWithContext(context.Background())
}

func (i AddressSpaceArgs) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceOutput).ToAddressSpacePtrOutputWithContext(ctx)
}

// AddressSpacePtrInput is an input type that accepts AddressSpaceArgs, AddressSpacePtr and AddressSpacePtrOutput values.
// You can construct a concrete instance of `AddressSpacePtrInput` via:
//
//          AddressSpaceArgs{...}
//
//  or:
//
//          nil
type AddressSpacePtrInput interface {
	pulumi.Input

	ToAddressSpacePtrOutput() AddressSpacePtrOutput
	ToAddressSpacePtrOutputWithContext(context.Context) AddressSpacePtrOutput
}

type addressSpacePtrType AddressSpaceArgs

func AddressSpacePtr(v *AddressSpaceArgs) AddressSpacePtrInput {
	return (*addressSpacePtrType)(v)
}

func (*addressSpacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpace)(nil)).Elem()
}

func (i *addressSpacePtrType) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return i.ToAddressSpacePtrOutputWithContext(context.Background())
}

func (i *addressSpacePtrType) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpacePtrOutput)
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceOutput struct{ *pulumi.OutputState }

func (AddressSpaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpace)(nil)).Elem()
}

func (o AddressSpaceOutput) ToAddressSpaceOutput() AddressSpaceOutput {
	return o
}

func (o AddressSpaceOutput) ToAddressSpaceOutputWithContext(ctx context.Context) AddressSpaceOutput {
	return o
}

func (o AddressSpaceOutput) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return o.ToAddressSpacePtrOutputWithContext(context.Background())
}

func (o AddressSpaceOutput) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return o.ApplyT(func(v AddressSpace) *AddressSpace {
		return &v
	}).(AddressSpacePtrOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpaceOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AddressSpace) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

type AddressSpacePtrOutput struct{ *pulumi.OutputState }

func (AddressSpacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpace)(nil)).Elem()
}

func (o AddressSpacePtrOutput) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return o
}

func (o AddressSpacePtrOutput) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return o
}

func (o AddressSpacePtrOutput) Elem() AddressSpaceOutput {
	return o.ApplyT(func(v *AddressSpace) AddressSpace { return *v }).(AddressSpaceOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpacePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AddressSpace) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceResponse struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
}

// AddressSpaceResponseInput is an input type that accepts AddressSpaceResponseArgs and AddressSpaceResponseOutput values.
// You can construct a concrete instance of `AddressSpaceResponseInput` via:
//
//          AddressSpaceResponseArgs{...}
type AddressSpaceResponseInput interface {
	pulumi.Input

	ToAddressSpaceResponseOutput() AddressSpaceResponseOutput
	ToAddressSpaceResponseOutputWithContext(context.Context) AddressSpaceResponseOutput
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceResponseArgs struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
}

func (AddressSpaceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceResponse)(nil)).Elem()
}

func (i AddressSpaceResponseArgs) ToAddressSpaceResponseOutput() AddressSpaceResponseOutput {
	return i.ToAddressSpaceResponseOutputWithContext(context.Background())
}

func (i AddressSpaceResponseArgs) ToAddressSpaceResponseOutputWithContext(ctx context.Context) AddressSpaceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceResponseOutput)
}

func (i AddressSpaceResponseArgs) ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput {
	return i.ToAddressSpaceResponsePtrOutputWithContext(context.Background())
}

func (i AddressSpaceResponseArgs) ToAddressSpaceResponsePtrOutputWithContext(ctx context.Context) AddressSpaceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceResponseOutput).ToAddressSpaceResponsePtrOutputWithContext(ctx)
}

// AddressSpaceResponsePtrInput is an input type that accepts AddressSpaceResponseArgs, AddressSpaceResponsePtr and AddressSpaceResponsePtrOutput values.
// You can construct a concrete instance of `AddressSpaceResponsePtrInput` via:
//
//          AddressSpaceResponseArgs{...}
//
//  or:
//
//          nil
type AddressSpaceResponsePtrInput interface {
	pulumi.Input

	ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput
	ToAddressSpaceResponsePtrOutputWithContext(context.Context) AddressSpaceResponsePtrOutput
}

type addressSpaceResponsePtrType AddressSpaceResponseArgs

func AddressSpaceResponsePtr(v *AddressSpaceResponseArgs) AddressSpaceResponsePtrInput {
	return (*addressSpaceResponsePtrType)(v)
}

func (*addressSpaceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceResponse)(nil)).Elem()
}

func (i *addressSpaceResponsePtrType) ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput {
	return i.ToAddressSpaceResponsePtrOutputWithContext(context.Background())
}

func (i *addressSpaceResponsePtrType) ToAddressSpaceResponsePtrOutputWithContext(ctx context.Context) AddressSpaceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceResponsePtrOutput)
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceResponseOutput struct{ *pulumi.OutputState }

func (AddressSpaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceResponse)(nil)).Elem()
}

func (o AddressSpaceResponseOutput) ToAddressSpaceResponseOutput() AddressSpaceResponseOutput {
	return o
}

func (o AddressSpaceResponseOutput) ToAddressSpaceResponseOutputWithContext(ctx context.Context) AddressSpaceResponseOutput {
	return o
}

func (o AddressSpaceResponseOutput) ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput {
	return o.ToAddressSpaceResponsePtrOutputWithContext(context.Background())
}

func (o AddressSpaceResponseOutput) ToAddressSpaceResponsePtrOutputWithContext(ctx context.Context) AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v AddressSpaceResponse) *AddressSpaceResponse {
		return &v
	}).(AddressSpaceResponsePtrOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpaceResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AddressSpaceResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

type AddressSpaceResponsePtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceResponse)(nil)).Elem()
}

func (o AddressSpaceResponsePtrOutput) ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput {
	return o
}

func (o AddressSpaceResponsePtrOutput) ToAddressSpaceResponsePtrOutputWithContext(ctx context.Context) AddressSpaceResponsePtrOutput {
	return o
}

func (o AddressSpaceResponsePtrOutput) Elem() AddressSpaceResponseOutput {
	return o.ApplyT(func(v *AddressSpaceResponse) AddressSpaceResponse { return *v }).(AddressSpaceResponseOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpaceResponsePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AddressSpaceResponse) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificate struct {
	// Certificate public data.
	Data *string `pulumi:"data"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the authentication certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
}

// ApplicationGatewayAuthenticationCertificateInput is an input type that accepts ApplicationGatewayAuthenticationCertificateArgs and ApplicationGatewayAuthenticationCertificateOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificateInput` via:
//
//          ApplicationGatewayAuthenticationCertificateArgs{...}
type ApplicationGatewayAuthenticationCertificateInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificateOutput() ApplicationGatewayAuthenticationCertificateOutput
	ToApplicationGatewayAuthenticationCertificateOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificateOutput
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificateArgs struct {
	// Certificate public data.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the authentication certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ApplicationGatewayAuthenticationCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (i ApplicationGatewayAuthenticationCertificateArgs) ToApplicationGatewayAuthenticationCertificateOutput() ApplicationGatewayAuthenticationCertificateOutput {
	return i.ToApplicationGatewayAuthenticationCertificateOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificateArgs) ToApplicationGatewayAuthenticationCertificateOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificateOutput)
}

// ApplicationGatewayAuthenticationCertificateArrayInput is an input type that accepts ApplicationGatewayAuthenticationCertificateArray and ApplicationGatewayAuthenticationCertificateArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificateArrayInput` via:
//
//          ApplicationGatewayAuthenticationCertificateArray{ ApplicationGatewayAuthenticationCertificateArgs{...} }
type ApplicationGatewayAuthenticationCertificateArrayInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificateArrayOutput() ApplicationGatewayAuthenticationCertificateArrayOutput
	ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificateArrayOutput
}

type ApplicationGatewayAuthenticationCertificateArray []ApplicationGatewayAuthenticationCertificateInput

func (ApplicationGatewayAuthenticationCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (i ApplicationGatewayAuthenticationCertificateArray) ToApplicationGatewayAuthenticationCertificateArrayOutput() ApplicationGatewayAuthenticationCertificateArrayOutput {
	return i.ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificateArray) ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificateArrayOutput)
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificateOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificateOutput) ToApplicationGatewayAuthenticationCertificateOutput() ApplicationGatewayAuthenticationCertificateOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateOutput) ToApplicationGatewayAuthenticationCertificateOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateOutput {
	return o
}

// Certificate public data.
func (o ApplicationGatewayAuthenticationCertificateOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayAuthenticationCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the authentication certificate that is unique within an Application Gateway.
func (o ApplicationGatewayAuthenticationCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayAuthenticationCertificateArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificateArrayOutput) ToApplicationGatewayAuthenticationCertificateArrayOutput() ApplicationGatewayAuthenticationCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateArrayOutput) ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayAuthenticationCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayAuthenticationCertificate {
		return vs[0].([]ApplicationGatewayAuthenticationCertificate)[vs[1].(int)]
	}).(ApplicationGatewayAuthenticationCertificateOutput)
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificateResponse struct {
	// Certificate public data.
	Data *string `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the authentication certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the authentication certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// ApplicationGatewayAuthenticationCertificateResponseInput is an input type that accepts ApplicationGatewayAuthenticationCertificateResponseArgs and ApplicationGatewayAuthenticationCertificateResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificateResponseInput` via:
//
//          ApplicationGatewayAuthenticationCertificateResponseArgs{...}
type ApplicationGatewayAuthenticationCertificateResponseInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificateResponseOutput() ApplicationGatewayAuthenticationCertificateResponseOutput
	ToApplicationGatewayAuthenticationCertificateResponseOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificateResponseOutput
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificateResponseArgs struct {
	// Certificate public data.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the authentication certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the authentication certificate resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationGatewayAuthenticationCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewayAuthenticationCertificateResponseArgs) ToApplicationGatewayAuthenticationCertificateResponseOutput() ApplicationGatewayAuthenticationCertificateResponseOutput {
	return i.ToApplicationGatewayAuthenticationCertificateResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificateResponseArgs) ToApplicationGatewayAuthenticationCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificateResponseOutput)
}

// ApplicationGatewayAuthenticationCertificateResponseArrayInput is an input type that accepts ApplicationGatewayAuthenticationCertificateResponseArray and ApplicationGatewayAuthenticationCertificateResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificateResponseArrayInput` via:
//
//          ApplicationGatewayAuthenticationCertificateResponseArray{ ApplicationGatewayAuthenticationCertificateResponseArgs{...} }
type ApplicationGatewayAuthenticationCertificateResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificateResponseArrayOutput() ApplicationGatewayAuthenticationCertificateResponseArrayOutput
	ToApplicationGatewayAuthenticationCertificateResponseArrayOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificateResponseArrayOutput
}

type ApplicationGatewayAuthenticationCertificateResponseArray []ApplicationGatewayAuthenticationCertificateResponseInput

func (ApplicationGatewayAuthenticationCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayAuthenticationCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewayAuthenticationCertificateResponseArray) ToApplicationGatewayAuthenticationCertificateResponseArrayOutput() ApplicationGatewayAuthenticationCertificateResponseArrayOutput {
	return i.ToApplicationGatewayAuthenticationCertificateResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificateResponseArray) ToApplicationGatewayAuthenticationCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificateResponseArrayOutput)
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificateResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificateResponseOutput) ToApplicationGatewayAuthenticationCertificateResponseOutput() ApplicationGatewayAuthenticationCertificateResponseOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateResponseOutput) ToApplicationGatewayAuthenticationCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateResponseOutput {
	return o
}

// Certificate public data.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the authentication certificate that is unique within an Application Gateway.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the authentication certificate resource.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayAuthenticationCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayAuthenticationCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificateResponseArrayOutput) ToApplicationGatewayAuthenticationCertificateResponseArrayOutput() ApplicationGatewayAuthenticationCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateResponseArrayOutput) ToApplicationGatewayAuthenticationCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayAuthenticationCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayAuthenticationCertificateResponse {
		return vs[0].([]ApplicationGatewayAuthenticationCertificateResponse)[vs[1].(int)]
	}).(ApplicationGatewayAuthenticationCertificateResponseOutput)
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfiguration struct {
	// Upper bound on number of Application Gateway capacity.
	MaxCapacity *int `pulumi:"maxCapacity"`
	// Lower bound on number of Application Gateway capacity.
	MinCapacity int `pulumi:"minCapacity"`
}

// ApplicationGatewayAutoscaleConfigurationInput is an input type that accepts ApplicationGatewayAutoscaleConfigurationArgs and ApplicationGatewayAutoscaleConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleConfigurationInput` via:
//
//          ApplicationGatewayAutoscaleConfigurationArgs{...}
type ApplicationGatewayAutoscaleConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleConfigurationOutput() ApplicationGatewayAutoscaleConfigurationOutput
	ToApplicationGatewayAutoscaleConfigurationOutputWithContext(context.Context) ApplicationGatewayAutoscaleConfigurationOutput
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfigurationArgs struct {
	// Upper bound on number of Application Gateway capacity.
	MaxCapacity pulumi.IntPtrInput `pulumi:"maxCapacity"`
	// Lower bound on number of Application Gateway capacity.
	MinCapacity pulumi.IntInput `pulumi:"minCapacity"`
}

func (ApplicationGatewayAutoscaleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationOutput() ApplicationGatewayAutoscaleConfigurationOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationOutput)
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationOutput).ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx)
}

// ApplicationGatewayAutoscaleConfigurationPtrInput is an input type that accepts ApplicationGatewayAutoscaleConfigurationArgs, ApplicationGatewayAutoscaleConfigurationPtr and ApplicationGatewayAutoscaleConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleConfigurationPtrInput` via:
//
//          ApplicationGatewayAutoscaleConfigurationArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayAutoscaleConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput
	ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput
}

type applicationGatewayAutoscaleConfigurationPtrType ApplicationGatewayAutoscaleConfigurationArgs

func ApplicationGatewayAutoscaleConfigurationPtr(v *ApplicationGatewayAutoscaleConfigurationArgs) ApplicationGatewayAutoscaleConfigurationPtrInput {
	return (*applicationGatewayAutoscaleConfigurationPtrType)(v)
}

func (*applicationGatewayAutoscaleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (i *applicationGatewayAutoscaleConfigurationPtrType) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayAutoscaleConfigurationPtrType) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationPtrOutput)
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationOutput() ApplicationGatewayAutoscaleConfigurationOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o.ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfiguration) *ApplicationGatewayAutoscaleConfiguration {
		return &v
	}).(ApplicationGatewayAutoscaleConfigurationPtrOutput)
}

// Upper bound on number of Application Gateway capacity.
func (o ApplicationGatewayAutoscaleConfigurationOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfiguration) *int { return v.MaxCapacity }).(pulumi.IntPtrOutput)
}

// Lower bound on number of Application Gateway capacity.
func (o ApplicationGatewayAutoscaleConfigurationOutput) MinCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfiguration) int { return v.MinCapacity }).(pulumi.IntOutput)
}

type ApplicationGatewayAutoscaleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) Elem() ApplicationGatewayAutoscaleConfigurationOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfiguration) ApplicationGatewayAutoscaleConfiguration { return *v }).(ApplicationGatewayAutoscaleConfigurationOutput)
}

// Upper bound on number of Application Gateway capacity.
func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxCapacity
	}).(pulumi.IntPtrOutput)
}

// Lower bound on number of Application Gateway capacity.
func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfigurationResponse struct {
	// Upper bound on number of Application Gateway capacity.
	MaxCapacity *int `pulumi:"maxCapacity"`
	// Lower bound on number of Application Gateway capacity.
	MinCapacity int `pulumi:"minCapacity"`
}

// ApplicationGatewayAutoscaleConfigurationResponseInput is an input type that accepts ApplicationGatewayAutoscaleConfigurationResponseArgs and ApplicationGatewayAutoscaleConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleConfigurationResponseInput` via:
//
//          ApplicationGatewayAutoscaleConfigurationResponseArgs{...}
type ApplicationGatewayAutoscaleConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleConfigurationResponseOutput() ApplicationGatewayAutoscaleConfigurationResponseOutput
	ToApplicationGatewayAutoscaleConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayAutoscaleConfigurationResponseOutput
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfigurationResponseArgs struct {
	// Upper bound on number of Application Gateway capacity.
	MaxCapacity pulumi.IntPtrInput `pulumi:"maxCapacity"`
	// Lower bound on number of Application Gateway capacity.
	MinCapacity pulumi.IntInput `pulumi:"minCapacity"`
}

func (ApplicationGatewayAutoscaleConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayAutoscaleConfigurationResponseArgs) ToApplicationGatewayAutoscaleConfigurationResponseOutput() ApplicationGatewayAutoscaleConfigurationResponseOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleConfigurationResponseArgs) ToApplicationGatewayAutoscaleConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationResponseOutput)
}

func (i ApplicationGatewayAutoscaleConfigurationResponseArgs) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutput() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleConfigurationResponseArgs) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationResponseOutput).ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayAutoscaleConfigurationResponsePtrInput is an input type that accepts ApplicationGatewayAutoscaleConfigurationResponseArgs, ApplicationGatewayAutoscaleConfigurationResponsePtr and ApplicationGatewayAutoscaleConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleConfigurationResponsePtrInput` via:
//
//          ApplicationGatewayAutoscaleConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayAutoscaleConfigurationResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleConfigurationResponsePtrOutput() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput
	ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(context.Context) ApplicationGatewayAutoscaleConfigurationResponsePtrOutput
}

type applicationGatewayAutoscaleConfigurationResponsePtrType ApplicationGatewayAutoscaleConfigurationResponseArgs

func ApplicationGatewayAutoscaleConfigurationResponsePtr(v *ApplicationGatewayAutoscaleConfigurationResponseArgs) ApplicationGatewayAutoscaleConfigurationResponsePtrInput {
	return (*applicationGatewayAutoscaleConfigurationResponsePtrType)(v)
}

func (*applicationGatewayAutoscaleConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleConfigurationResponse)(nil)).Elem()
}

func (i *applicationGatewayAutoscaleConfigurationResponsePtrType) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutput() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayAutoscaleConfigurationResponsePtrType) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationResponsePtrOutput)
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) ToApplicationGatewayAutoscaleConfigurationResponseOutput() ApplicationGatewayAutoscaleConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) ToApplicationGatewayAutoscaleConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutput() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return o.ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfigurationResponse) *ApplicationGatewayAutoscaleConfigurationResponse {
		return &v
	}).(ApplicationGatewayAutoscaleConfigurationResponsePtrOutput)
}

// Upper bound on number of Application Gateway capacity.
func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfigurationResponse) *int { return v.MaxCapacity }).(pulumi.IntPtrOutput)
}

// Lower bound on number of Application Gateway capacity.
func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) MinCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfigurationResponse) int { return v.MinCapacity }).(pulumi.IntOutput)
}

type ApplicationGatewayAutoscaleConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutput() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) Elem() ApplicationGatewayAutoscaleConfigurationResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfigurationResponse) ApplicationGatewayAutoscaleConfigurationResponse {
		return *v
	}).(ApplicationGatewayAutoscaleConfigurationResponseOutput)
}

// Upper bound on number of Application Gateway capacity.
func (o ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxCapacity
	}).(pulumi.IntPtrOutput)
}

// Lower bound on number of Application Gateway capacity.
func (o ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return &v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddress struct {
	// Fully qualified domain name (FQDN).
	Fqdn *string `pulumi:"fqdn"`
	// IP address.
	IpAddress *string `pulumi:"ipAddress"`
}

// ApplicationGatewayBackendAddressInput is an input type that accepts ApplicationGatewayBackendAddressArgs and ApplicationGatewayBackendAddressOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressInput` via:
//
//          ApplicationGatewayBackendAddressArgs{...}
type ApplicationGatewayBackendAddressInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressOutput() ApplicationGatewayBackendAddressOutput
	ToApplicationGatewayBackendAddressOutputWithContext(context.Context) ApplicationGatewayBackendAddressOutput
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressArgs struct {
	// Fully qualified domain name (FQDN).
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// IP address.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (ApplicationGatewayBackendAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressArgs) ToApplicationGatewayBackendAddressOutput() ApplicationGatewayBackendAddressOutput {
	return i.ToApplicationGatewayBackendAddressOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressArgs) ToApplicationGatewayBackendAddressOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressOutput)
}

// ApplicationGatewayBackendAddressArrayInput is an input type that accepts ApplicationGatewayBackendAddressArray and ApplicationGatewayBackendAddressArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressArrayInput` via:
//
//          ApplicationGatewayBackendAddressArray{ ApplicationGatewayBackendAddressArgs{...} }
type ApplicationGatewayBackendAddressArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressArrayOutput() ApplicationGatewayBackendAddressArrayOutput
	ToApplicationGatewayBackendAddressArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressArrayOutput
}

type ApplicationGatewayBackendAddressArray []ApplicationGatewayBackendAddressInput

func (ApplicationGatewayBackendAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressArray) ToApplicationGatewayBackendAddressArrayOutput() ApplicationGatewayBackendAddressArrayOutput {
	return i.ToApplicationGatewayBackendAddressArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressArray) ToApplicationGatewayBackendAddressArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressArrayOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressOutput) ToApplicationGatewayBackendAddressOutput() ApplicationGatewayBackendAddressOutput {
	return o
}

func (o ApplicationGatewayBackendAddressOutput) ToApplicationGatewayBackendAddressOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressOutput {
	return o
}

// Fully qualified domain name (FQDN).
func (o ApplicationGatewayBackendAddressOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddress) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// IP address.
func (o ApplicationGatewayBackendAddressOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddress) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressArrayOutput) ToApplicationGatewayBackendAddressArrayOutput() ApplicationGatewayBackendAddressArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressArrayOutput) ToApplicationGatewayBackendAddressArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddress {
		return vs[0].([]ApplicationGatewayBackendAddress)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPool struct {
	// Backend addresses.
	BackendAddresses []ApplicationGatewayBackendAddress `pulumi:"backendAddresses"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend address pool that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
}

// ApplicationGatewayBackendAddressPoolInput is an input type that accepts ApplicationGatewayBackendAddressPoolArgs and ApplicationGatewayBackendAddressPoolOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolInput` via:
//
//          ApplicationGatewayBackendAddressPoolArgs{...}
type ApplicationGatewayBackendAddressPoolInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolOutput() ApplicationGatewayBackendAddressPoolOutput
	ToApplicationGatewayBackendAddressPoolOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolOutput
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolArgs struct {
	// Backend addresses.
	BackendAddresses ApplicationGatewayBackendAddressArrayInput `pulumi:"backendAddresses"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the backend address pool that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ApplicationGatewayBackendAddressPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolArgs) ToApplicationGatewayBackendAddressPoolOutput() ApplicationGatewayBackendAddressPoolOutput {
	return i.ToApplicationGatewayBackendAddressPoolOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolArgs) ToApplicationGatewayBackendAddressPoolOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolOutput)
}

// ApplicationGatewayBackendAddressPoolArrayInput is an input type that accepts ApplicationGatewayBackendAddressPoolArray and ApplicationGatewayBackendAddressPoolArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolArrayInput` via:
//
//          ApplicationGatewayBackendAddressPoolArray{ ApplicationGatewayBackendAddressPoolArgs{...} }
type ApplicationGatewayBackendAddressPoolArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolArrayOutput() ApplicationGatewayBackendAddressPoolArrayOutput
	ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolArrayOutput
}

type ApplicationGatewayBackendAddressPoolArray []ApplicationGatewayBackendAddressPoolInput

func (ApplicationGatewayBackendAddressPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolArray) ToApplicationGatewayBackendAddressPoolArrayOutput() ApplicationGatewayBackendAddressPoolArrayOutput {
	return i.ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolArray) ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolArrayOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolOutput) ToApplicationGatewayBackendAddressPoolOutput() ApplicationGatewayBackendAddressPoolOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolOutput) ToApplicationGatewayBackendAddressPoolOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolOutput {
	return o
}

// Backend addresses.
func (o ApplicationGatewayBackendAddressPoolOutput) BackendAddresses() ApplicationGatewayBackendAddressArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) []ApplicationGatewayBackendAddress {
		return v.BackendAddresses
	}).(ApplicationGatewayBackendAddressArrayOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendAddressPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend address pool that is unique within an Application Gateway.
func (o ApplicationGatewayBackendAddressPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressPoolArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolArrayOutput) ToApplicationGatewayBackendAddressPoolArrayOutput() ApplicationGatewayBackendAddressPoolArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolArrayOutput) ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressPool {
		return vs[0].([]ApplicationGatewayBackendAddressPool)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressPoolOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolResponse struct {
	// Backend addresses.
	BackendAddresses []ApplicationGatewayBackendAddressResponse `pulumi:"backendAddresses"`
	// Collection of references to IPs defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend address pool that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the backend address pool resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// ApplicationGatewayBackendAddressPoolResponseInput is an input type that accepts ApplicationGatewayBackendAddressPoolResponseArgs and ApplicationGatewayBackendAddressPoolResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolResponseInput` via:
//
//          ApplicationGatewayBackendAddressPoolResponseArgs{...}
type ApplicationGatewayBackendAddressPoolResponseInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolResponseOutput() ApplicationGatewayBackendAddressPoolResponseOutput
	ToApplicationGatewayBackendAddressPoolResponseOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolResponseOutput
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolResponseArgs struct {
	// Backend addresses.
	BackendAddresses ApplicationGatewayBackendAddressResponseArrayInput `pulumi:"backendAddresses"`
	// Collection of references to IPs defined in network interfaces.
	BackendIPConfigurations NetworkInterfaceIPConfigurationResponseArrayInput `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the backend address pool that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the backend address pool resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationGatewayBackendAddressPoolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolResponseArgs) ToApplicationGatewayBackendAddressPoolResponseOutput() ApplicationGatewayBackendAddressPoolResponseOutput {
	return i.ToApplicationGatewayBackendAddressPoolResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolResponseArgs) ToApplicationGatewayBackendAddressPoolResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolResponseOutput)
}

// ApplicationGatewayBackendAddressPoolResponseArrayInput is an input type that accepts ApplicationGatewayBackendAddressPoolResponseArray and ApplicationGatewayBackendAddressPoolResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolResponseArrayInput` via:
//
//          ApplicationGatewayBackendAddressPoolResponseArray{ ApplicationGatewayBackendAddressPoolResponseArgs{...} }
type ApplicationGatewayBackendAddressPoolResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolResponseArrayOutput() ApplicationGatewayBackendAddressPoolResponseArrayOutput
	ToApplicationGatewayBackendAddressPoolResponseArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolResponseArrayOutput
}

type ApplicationGatewayBackendAddressPoolResponseArray []ApplicationGatewayBackendAddressPoolResponseInput

func (ApplicationGatewayBackendAddressPoolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolResponseArray) ToApplicationGatewayBackendAddressPoolResponseArrayOutput() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return i.ToApplicationGatewayBackendAddressPoolResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolResponseArray) ToApplicationGatewayBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolResponseOutput) ToApplicationGatewayBackendAddressPoolResponseOutput() ApplicationGatewayBackendAddressPoolResponseOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseOutput) ToApplicationGatewayBackendAddressPoolResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseOutput {
	return o
}

// Backend addresses.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) BackendAddresses() ApplicationGatewayBackendAddressResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) []ApplicationGatewayBackendAddressResponse {
		return v.BackendAddresses
	}).(ApplicationGatewayBackendAddressResponseArrayOutput)
}

// Collection of references to IPs defined in network interfaces.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) []NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend address pool that is unique within an Application Gateway.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the backend address pool resource.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayBackendAddressPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) ToApplicationGatewayBackendAddressPoolResponseArrayOutput() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) ToApplicationGatewayBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressPoolResponse {
		return vs[0].([]ApplicationGatewayBackendAddressPoolResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressPoolResponseOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressResponse struct {
	// Fully qualified domain name (FQDN).
	Fqdn *string `pulumi:"fqdn"`
	// IP address.
	IpAddress *string `pulumi:"ipAddress"`
}

// ApplicationGatewayBackendAddressResponseInput is an input type that accepts ApplicationGatewayBackendAddressResponseArgs and ApplicationGatewayBackendAddressResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressResponseInput` via:
//
//          ApplicationGatewayBackendAddressResponseArgs{...}
type ApplicationGatewayBackendAddressResponseInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressResponseOutput() ApplicationGatewayBackendAddressResponseOutput
	ToApplicationGatewayBackendAddressResponseOutputWithContext(context.Context) ApplicationGatewayBackendAddressResponseOutput
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressResponseArgs struct {
	// Fully qualified domain name (FQDN).
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// IP address.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (ApplicationGatewayBackendAddressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressResponseArgs) ToApplicationGatewayBackendAddressResponseOutput() ApplicationGatewayBackendAddressResponseOutput {
	return i.ToApplicationGatewayBackendAddressResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressResponseArgs) ToApplicationGatewayBackendAddressResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressResponseOutput)
}

// ApplicationGatewayBackendAddressResponseArrayInput is an input type that accepts ApplicationGatewayBackendAddressResponseArray and ApplicationGatewayBackendAddressResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressResponseArrayInput` via:
//
//          ApplicationGatewayBackendAddressResponseArray{ ApplicationGatewayBackendAddressResponseArgs{...} }
type ApplicationGatewayBackendAddressResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressResponseArrayOutput() ApplicationGatewayBackendAddressResponseArrayOutput
	ToApplicationGatewayBackendAddressResponseArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressResponseArrayOutput
}

type ApplicationGatewayBackendAddressResponseArray []ApplicationGatewayBackendAddressResponseInput

func (ApplicationGatewayBackendAddressResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressResponseArray) ToApplicationGatewayBackendAddressResponseArrayOutput() ApplicationGatewayBackendAddressResponseArrayOutput {
	return i.ToApplicationGatewayBackendAddressResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressResponseArray) ToApplicationGatewayBackendAddressResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressResponseArrayOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressResponseOutput) ToApplicationGatewayBackendAddressResponseOutput() ApplicationGatewayBackendAddressResponseOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseOutput) ToApplicationGatewayBackendAddressResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseOutput {
	return o
}

// Fully qualified domain name (FQDN).
func (o ApplicationGatewayBackendAddressResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// IP address.
func (o ApplicationGatewayBackendAddressResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) ToApplicationGatewayBackendAddressResponseArrayOutput() ApplicationGatewayBackendAddressResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) ToApplicationGatewayBackendAddressResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressResponse {
		return vs[0].([]ApplicationGatewayBackendAddressResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressResponseOutput)
}

// Application gateway BackendHealthHttp settings.
type ApplicationGatewayBackendHealthHttpSettingsResponse struct {
	// Reference to an ApplicationGatewayBackendHttpSettings resource.
	BackendHttpSettings *ApplicationGatewayBackendHttpSettingsResponse `pulumi:"backendHttpSettings"`
	// List of ApplicationGatewayBackendHealthServer resources.
	Servers []ApplicationGatewayBackendHealthServerResponse `pulumi:"servers"`
}

// ApplicationGatewayBackendHealthHttpSettingsResponseInput is an input type that accepts ApplicationGatewayBackendHealthHttpSettingsResponseArgs and ApplicationGatewayBackendHealthHttpSettingsResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHealthHttpSettingsResponseInput` via:
//
//          ApplicationGatewayBackendHealthHttpSettingsResponseArgs{...}
type ApplicationGatewayBackendHealthHttpSettingsResponseInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHealthHttpSettingsResponseOutput() ApplicationGatewayBackendHealthHttpSettingsResponseOutput
	ToApplicationGatewayBackendHealthHttpSettingsResponseOutputWithContext(context.Context) ApplicationGatewayBackendHealthHttpSettingsResponseOutput
}

// Application gateway BackendHealthHttp settings.
type ApplicationGatewayBackendHealthHttpSettingsResponseArgs struct {
	// Reference to an ApplicationGatewayBackendHttpSettings resource.
	BackendHttpSettings ApplicationGatewayBackendHttpSettingsResponsePtrInput `pulumi:"backendHttpSettings"`
	// List of ApplicationGatewayBackendHealthServer resources.
	Servers ApplicationGatewayBackendHealthServerResponseArrayInput `pulumi:"servers"`
}

func (ApplicationGatewayBackendHealthHttpSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHealthHttpSettingsResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendHealthHttpSettingsResponseArgs) ToApplicationGatewayBackendHealthHttpSettingsResponseOutput() ApplicationGatewayBackendHealthHttpSettingsResponseOutput {
	return i.ToApplicationGatewayBackendHealthHttpSettingsResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHealthHttpSettingsResponseArgs) ToApplicationGatewayBackendHealthHttpSettingsResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendHealthHttpSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHealthHttpSettingsResponseOutput)
}

// Application gateway BackendHealthHttp settings.
type ApplicationGatewayBackendHealthHttpSettingsResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHealthHttpSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHealthHttpSettingsResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHealthHttpSettingsResponseOutput) ToApplicationGatewayBackendHealthHttpSettingsResponseOutput() ApplicationGatewayBackendHealthHttpSettingsResponseOutput {
	return o
}

func (o ApplicationGatewayBackendHealthHttpSettingsResponseOutput) ToApplicationGatewayBackendHealthHttpSettingsResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendHealthHttpSettingsResponseOutput {
	return o
}

// Reference to an ApplicationGatewayBackendHttpSettings resource.
func (o ApplicationGatewayBackendHealthHttpSettingsResponseOutput) BackendHttpSettings() ApplicationGatewayBackendHttpSettingsResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHealthHttpSettingsResponse) *ApplicationGatewayBackendHttpSettingsResponse {
		return v.BackendHttpSettings
	}).(ApplicationGatewayBackendHttpSettingsResponsePtrOutput)
}

// List of ApplicationGatewayBackendHealthServer resources.
func (o ApplicationGatewayBackendHealthHttpSettingsResponseOutput) Servers() ApplicationGatewayBackendHealthServerResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHealthHttpSettingsResponse) []ApplicationGatewayBackendHealthServerResponse {
		return v.Servers
	}).(ApplicationGatewayBackendHealthServerResponseArrayOutput)
}

// Application gateway backendhealth http settings.
type ApplicationGatewayBackendHealthServerResponse struct {
	// IP address or FQDN of backend server.
	Address *string `pulumi:"address"`
	// Health of backend server.
	Health *string `pulumi:"health"`
	// Health Probe Log.
	HealthProbeLog *string `pulumi:"healthProbeLog"`
	// Reference to IP configuration of backend server.
	IpConfiguration *NetworkInterfaceIPConfigurationResponse `pulumi:"ipConfiguration"`
}

// ApplicationGatewayBackendHealthServerResponseInput is an input type that accepts ApplicationGatewayBackendHealthServerResponseArgs and ApplicationGatewayBackendHealthServerResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHealthServerResponseInput` via:
//
//          ApplicationGatewayBackendHealthServerResponseArgs{...}
type ApplicationGatewayBackendHealthServerResponseInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHealthServerResponseOutput() ApplicationGatewayBackendHealthServerResponseOutput
	ToApplicationGatewayBackendHealthServerResponseOutputWithContext(context.Context) ApplicationGatewayBackendHealthServerResponseOutput
}

// Application gateway backendhealth http settings.
type ApplicationGatewayBackendHealthServerResponseArgs struct {
	// IP address or FQDN of backend server.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Health of backend server.
	Health pulumi.StringPtrInput `pulumi:"health"`
	// Health Probe Log.
	HealthProbeLog pulumi.StringPtrInput `pulumi:"healthProbeLog"`
	// Reference to IP configuration of backend server.
	IpConfiguration NetworkInterfaceIPConfigurationResponsePtrInput `pulumi:"ipConfiguration"`
}

func (ApplicationGatewayBackendHealthServerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHealthServerResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendHealthServerResponseArgs) ToApplicationGatewayBackendHealthServerResponseOutput() ApplicationGatewayBackendHealthServerResponseOutput {
	return i.ToApplicationGatewayBackendHealthServerResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHealthServerResponseArgs) ToApplicationGatewayBackendHealthServerResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendHealthServerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHealthServerResponseOutput)
}

// ApplicationGatewayBackendHealthServerResponseArrayInput is an input type that accepts ApplicationGatewayBackendHealthServerResponseArray and ApplicationGatewayBackendHealthServerResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHealthServerResponseArrayInput` via:
//
//          ApplicationGatewayBackendHealthServerResponseArray{ ApplicationGatewayBackendHealthServerResponseArgs{...} }
type ApplicationGatewayBackendHealthServerResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHealthServerResponseArrayOutput() ApplicationGatewayBackendHealthServerResponseArrayOutput
	ToApplicationGatewayBackendHealthServerResponseArrayOutputWithContext(context.Context) ApplicationGatewayBackendHealthServerResponseArrayOutput
}

type ApplicationGatewayBackendHealthServerResponseArray []ApplicationGatewayBackendHealthServerResponseInput

func (ApplicationGatewayBackendHealthServerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHealthServerResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendHealthServerResponseArray) ToApplicationGatewayBackendHealthServerResponseArrayOutput() ApplicationGatewayBackendHealthServerResponseArrayOutput {
	return i.ToApplicationGatewayBackendHealthServerResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHealthServerResponseArray) ToApplicationGatewayBackendHealthServerResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHealthServerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHealthServerResponseArrayOutput)
}

// Application gateway backendhealth http settings.
type ApplicationGatewayBackendHealthServerResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHealthServerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHealthServerResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHealthServerResponseOutput) ToApplicationGatewayBackendHealthServerResponseOutput() ApplicationGatewayBackendHealthServerResponseOutput {
	return o
}

func (o ApplicationGatewayBackendHealthServerResponseOutput) ToApplicationGatewayBackendHealthServerResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendHealthServerResponseOutput {
	return o
}

// IP address or FQDN of backend server.
func (o ApplicationGatewayBackendHealthServerResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHealthServerResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Health of backend server.
func (o ApplicationGatewayBackendHealthServerResponseOutput) Health() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHealthServerResponse) *string { return v.Health }).(pulumi.StringPtrOutput)
}

// Health Probe Log.
func (o ApplicationGatewayBackendHealthServerResponseOutput) HealthProbeLog() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHealthServerResponse) *string { return v.HealthProbeLog }).(pulumi.StringPtrOutput)
}

// Reference to IP configuration of backend server.
func (o ApplicationGatewayBackendHealthServerResponseOutput) IpConfiguration() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHealthServerResponse) *NetworkInterfaceIPConfigurationResponse {
		return v.IpConfiguration
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

type ApplicationGatewayBackendHealthServerResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHealthServerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHealthServerResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHealthServerResponseArrayOutput) ToApplicationGatewayBackendHealthServerResponseArrayOutput() ApplicationGatewayBackendHealthServerResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHealthServerResponseArrayOutput) ToApplicationGatewayBackendHealthServerResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHealthServerResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHealthServerResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendHealthServerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendHealthServerResponse {
		return vs[0].([]ApplicationGatewayBackendHealthServerResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendHealthServerResponseOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettings struct {
	// Cookie name to use for the affinity cookie.
	AffinityCookieName *string `pulumi:"affinityCookieName"`
	// Array of references to application gateway authentication certificates.
	AuthenticationCertificates []SubResource `pulumi:"authenticationCertificates"`
	// Connection draining of the backend http settings resource.
	ConnectionDraining *ApplicationGatewayConnectionDraining `pulumi:"connectionDraining"`
	// Cookie based affinity.
	CookieBasedAffinity *string `pulumi:"cookieBasedAffinity"`
	// Host header to be sent to the backend servers.
	HostName *string `pulumi:"hostName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend http settings that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
	Path *string `pulumi:"path"`
	// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
	PickHostNameFromBackendAddress *bool `pulumi:"pickHostNameFromBackendAddress"`
	// The destination port on the backend.
	Port *int `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe *SubResource `pulumi:"probe"`
	// Whether the probe is enabled. Default value is false.
	ProbeEnabled *bool `pulumi:"probeEnabled"`
	// The protocol used to communicate with the backend.
	Protocol *string `pulumi:"protocol"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout *int `pulumi:"requestTimeout"`
	// Array of references to application gateway trusted root certificates.
	TrustedRootCertificates []SubResource `pulumi:"trustedRootCertificates"`
}

// ApplicationGatewayBackendHttpSettingsInput is an input type that accepts ApplicationGatewayBackendHttpSettingsArgs and ApplicationGatewayBackendHttpSettingsOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsInput` via:
//
//          ApplicationGatewayBackendHttpSettingsArgs{...}
type ApplicationGatewayBackendHttpSettingsInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsOutput() ApplicationGatewayBackendHttpSettingsOutput
	ToApplicationGatewayBackendHttpSettingsOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsOutput
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsArgs struct {
	// Cookie name to use for the affinity cookie.
	AffinityCookieName pulumi.StringPtrInput `pulumi:"affinityCookieName"`
	// Array of references to application gateway authentication certificates.
	AuthenticationCertificates SubResourceArrayInput `pulumi:"authenticationCertificates"`
	// Connection draining of the backend http settings resource.
	ConnectionDraining ApplicationGatewayConnectionDrainingPtrInput `pulumi:"connectionDraining"`
	// Cookie based affinity.
	CookieBasedAffinity pulumi.StringPtrInput `pulumi:"cookieBasedAffinity"`
	// Host header to be sent to the backend servers.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the backend http settings that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
	PickHostNameFromBackendAddress pulumi.BoolPtrInput `pulumi:"pickHostNameFromBackendAddress"`
	// The destination port on the backend.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe SubResourcePtrInput `pulumi:"probe"`
	// Whether the probe is enabled. Default value is false.
	ProbeEnabled pulumi.BoolPtrInput `pulumi:"probeEnabled"`
	// The protocol used to communicate with the backend.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout pulumi.IntPtrInput `pulumi:"requestTimeout"`
	// Array of references to application gateway trusted root certificates.
	TrustedRootCertificates SubResourceArrayInput `pulumi:"trustedRootCertificates"`
}

func (ApplicationGatewayBackendHttpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsArgs) ToApplicationGatewayBackendHttpSettingsOutput() ApplicationGatewayBackendHttpSettingsOutput {
	return i.ToApplicationGatewayBackendHttpSettingsOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsArgs) ToApplicationGatewayBackendHttpSettingsOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsOutput)
}

// ApplicationGatewayBackendHttpSettingsArrayInput is an input type that accepts ApplicationGatewayBackendHttpSettingsArray and ApplicationGatewayBackendHttpSettingsArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsArrayInput` via:
//
//          ApplicationGatewayBackendHttpSettingsArray{ ApplicationGatewayBackendHttpSettingsArgs{...} }
type ApplicationGatewayBackendHttpSettingsArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsArrayOutput() ApplicationGatewayBackendHttpSettingsArrayOutput
	ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsArrayOutput
}

type ApplicationGatewayBackendHttpSettingsArray []ApplicationGatewayBackendHttpSettingsInput

func (ApplicationGatewayBackendHttpSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsArray) ToApplicationGatewayBackendHttpSettingsArrayOutput() ApplicationGatewayBackendHttpSettingsArrayOutput {
	return i.ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsArray) ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsArrayOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsOutput) ToApplicationGatewayBackendHttpSettingsOutput() ApplicationGatewayBackendHttpSettingsOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsOutput) ToApplicationGatewayBackendHttpSettingsOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsOutput {
	return o
}

// Cookie name to use for the affinity cookie.
func (o ApplicationGatewayBackendHttpSettingsOutput) AffinityCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.AffinityCookieName }).(pulumi.StringPtrOutput)
}

// Array of references to application gateway authentication certificates.
func (o ApplicationGatewayBackendHttpSettingsOutput) AuthenticationCertificates() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) []SubResource { return v.AuthenticationCertificates }).(SubResourceArrayOutput)
}

// Connection draining of the backend http settings resource.
func (o ApplicationGatewayBackendHttpSettingsOutput) ConnectionDraining() ApplicationGatewayConnectionDrainingPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *ApplicationGatewayConnectionDraining {
		return v.ConnectionDraining
	}).(ApplicationGatewayConnectionDrainingPtrOutput)
}

// Cookie based affinity.
func (o ApplicationGatewayBackendHttpSettingsOutput) CookieBasedAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.CookieBasedAffinity }).(pulumi.StringPtrOutput)
}

// Host header to be sent to the backend servers.
func (o ApplicationGatewayBackendHttpSettingsOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendHttpSettingsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend http settings that is unique within an Application Gateway.
func (o ApplicationGatewayBackendHttpSettingsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
func (o ApplicationGatewayBackendHttpSettingsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsOutput) PickHostNameFromBackendAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *bool { return v.PickHostNameFromBackendAddress }).(pulumi.BoolPtrOutput)
}

// The destination port on the backend.
func (o ApplicationGatewayBackendHttpSettingsOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Probe resource of an application gateway.
func (o ApplicationGatewayBackendHttpSettingsOutput) Probe() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *SubResource { return v.Probe }).(SubResourcePtrOutput)
}

// Whether the probe is enabled. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsOutput) ProbeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *bool { return v.ProbeEnabled }).(pulumi.BoolPtrOutput)
}

// The protocol used to communicate with the backend.
func (o ApplicationGatewayBackendHttpSettingsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayBackendHttpSettingsOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *int { return v.RequestTimeout }).(pulumi.IntPtrOutput)
}

// Array of references to application gateway trusted root certificates.
func (o ApplicationGatewayBackendHttpSettingsOutput) TrustedRootCertificates() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) []SubResource { return v.TrustedRootCertificates }).(SubResourceArrayOutput)
}

type ApplicationGatewayBackendHttpSettingsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsArrayOutput) ToApplicationGatewayBackendHttpSettingsArrayOutput() ApplicationGatewayBackendHttpSettingsArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsArrayOutput) ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendHttpSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendHttpSettings {
		return vs[0].([]ApplicationGatewayBackendHttpSettings)[vs[1].(int)]
	}).(ApplicationGatewayBackendHttpSettingsOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsResponse struct {
	// Cookie name to use for the affinity cookie.
	AffinityCookieName *string `pulumi:"affinityCookieName"`
	// Array of references to application gateway authentication certificates.
	AuthenticationCertificates []SubResourceResponse `pulumi:"authenticationCertificates"`
	// Connection draining of the backend http settings resource.
	ConnectionDraining *ApplicationGatewayConnectionDrainingResponse `pulumi:"connectionDraining"`
	// Cookie based affinity.
	CookieBasedAffinity *string `pulumi:"cookieBasedAffinity"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Host header to be sent to the backend servers.
	HostName *string `pulumi:"hostName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend http settings that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
	Path *string `pulumi:"path"`
	// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
	PickHostNameFromBackendAddress *bool `pulumi:"pickHostNameFromBackendAddress"`
	// The destination port on the backend.
	Port *int `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe *SubResourceResponse `pulumi:"probe"`
	// Whether the probe is enabled. Default value is false.
	ProbeEnabled *bool `pulumi:"probeEnabled"`
	// The protocol used to communicate with the backend.
	Protocol *string `pulumi:"protocol"`
	// The provisioning state of the backend HTTP settings resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout *int `pulumi:"requestTimeout"`
	// Array of references to application gateway trusted root certificates.
	TrustedRootCertificates []SubResourceResponse `pulumi:"trustedRootCertificates"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// ApplicationGatewayBackendHttpSettingsResponseInput is an input type that accepts ApplicationGatewayBackendHttpSettingsResponseArgs and ApplicationGatewayBackendHttpSettingsResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsResponseInput` via:
//
//          ApplicationGatewayBackendHttpSettingsResponseArgs{...}
type ApplicationGatewayBackendHttpSettingsResponseInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsResponseOutput() ApplicationGatewayBackendHttpSettingsResponseOutput
	ToApplicationGatewayBackendHttpSettingsResponseOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsResponseOutput
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsResponseArgs struct {
	// Cookie name to use for the affinity cookie.
	AffinityCookieName pulumi.StringPtrInput `pulumi:"affinityCookieName"`
	// Array of references to application gateway authentication certificates.
	AuthenticationCertificates SubResourceResponseArrayInput `pulumi:"authenticationCertificates"`
	// Connection draining of the backend http settings resource.
	ConnectionDraining ApplicationGatewayConnectionDrainingResponsePtrInput `pulumi:"connectionDraining"`
	// Cookie based affinity.
	CookieBasedAffinity pulumi.StringPtrInput `pulumi:"cookieBasedAffinity"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Host header to be sent to the backend servers.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the backend http settings that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
	PickHostNameFromBackendAddress pulumi.BoolPtrInput `pulumi:"pickHostNameFromBackendAddress"`
	// The destination port on the backend.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe SubResourceResponsePtrInput `pulumi:"probe"`
	// Whether the probe is enabled. Default value is false.
	ProbeEnabled pulumi.BoolPtrInput `pulumi:"probeEnabled"`
	// The protocol used to communicate with the backend.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The provisioning state of the backend HTTP settings resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout pulumi.IntPtrInput `pulumi:"requestTimeout"`
	// Array of references to application gateway trusted root certificates.
	TrustedRootCertificates SubResourceResponseArrayInput `pulumi:"trustedRootCertificates"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationGatewayBackendHttpSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsResponseArgs) ToApplicationGatewayBackendHttpSettingsResponseOutput() ApplicationGatewayBackendHttpSettingsResponseOutput {
	return i.ToApplicationGatewayBackendHttpSettingsResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsResponseArgs) ToApplicationGatewayBackendHttpSettingsResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsResponseOutput)
}

func (i ApplicationGatewayBackendHttpSettingsResponseArgs) ToApplicationGatewayBackendHttpSettingsResponsePtrOutput() ApplicationGatewayBackendHttpSettingsResponsePtrOutput {
	return i.ToApplicationGatewayBackendHttpSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsResponseArgs) ToApplicationGatewayBackendHttpSettingsResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsResponseOutput).ToApplicationGatewayBackendHttpSettingsResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayBackendHttpSettingsResponsePtrInput is an input type that accepts ApplicationGatewayBackendHttpSettingsResponseArgs, ApplicationGatewayBackendHttpSettingsResponsePtr and ApplicationGatewayBackendHttpSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsResponsePtrInput` via:
//
//          ApplicationGatewayBackendHttpSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayBackendHttpSettingsResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsResponsePtrOutput() ApplicationGatewayBackendHttpSettingsResponsePtrOutput
	ToApplicationGatewayBackendHttpSettingsResponsePtrOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsResponsePtrOutput
}

type applicationGatewayBackendHttpSettingsResponsePtrType ApplicationGatewayBackendHttpSettingsResponseArgs

func ApplicationGatewayBackendHttpSettingsResponsePtr(v *ApplicationGatewayBackendHttpSettingsResponseArgs) ApplicationGatewayBackendHttpSettingsResponsePtrInput {
	return (*applicationGatewayBackendHttpSettingsResponsePtrType)(v)
}

func (*applicationGatewayBackendHttpSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (i *applicationGatewayBackendHttpSettingsResponsePtrType) ToApplicationGatewayBackendHttpSettingsResponsePtrOutput() ApplicationGatewayBackendHttpSettingsResponsePtrOutput {
	return i.ToApplicationGatewayBackendHttpSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayBackendHttpSettingsResponsePtrType) ToApplicationGatewayBackendHttpSettingsResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsResponsePtrOutput)
}

// ApplicationGatewayBackendHttpSettingsResponseArrayInput is an input type that accepts ApplicationGatewayBackendHttpSettingsResponseArray and ApplicationGatewayBackendHttpSettingsResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsResponseArrayInput` via:
//
//          ApplicationGatewayBackendHttpSettingsResponseArray{ ApplicationGatewayBackendHttpSettingsResponseArgs{...} }
type ApplicationGatewayBackendHttpSettingsResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsResponseArrayOutput() ApplicationGatewayBackendHttpSettingsResponseArrayOutput
	ToApplicationGatewayBackendHttpSettingsResponseArrayOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsResponseArrayOutput
}

type ApplicationGatewayBackendHttpSettingsResponseArray []ApplicationGatewayBackendHttpSettingsResponseInput

func (ApplicationGatewayBackendHttpSettingsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsResponseArray) ToApplicationGatewayBackendHttpSettingsResponseArrayOutput() ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return i.ToApplicationGatewayBackendHttpSettingsResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsResponseArray) ToApplicationGatewayBackendHttpSettingsResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsResponseArrayOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ToApplicationGatewayBackendHttpSettingsResponseOutput() ApplicationGatewayBackendHttpSettingsResponseOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ToApplicationGatewayBackendHttpSettingsResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponseOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ToApplicationGatewayBackendHttpSettingsResponsePtrOutput() ApplicationGatewayBackendHttpSettingsResponsePtrOutput {
	return o.ToApplicationGatewayBackendHttpSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ToApplicationGatewayBackendHttpSettingsResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *ApplicationGatewayBackendHttpSettingsResponse {
		return &v
	}).(ApplicationGatewayBackendHttpSettingsResponsePtrOutput)
}

// Cookie name to use for the affinity cookie.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) AffinityCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.AffinityCookieName }).(pulumi.StringPtrOutput)
}

// Array of references to application gateway authentication certificates.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) AuthenticationCertificates() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) []SubResourceResponse {
		return v.AuthenticationCertificates
	}).(SubResourceResponseArrayOutput)
}

// Connection draining of the backend http settings resource.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ConnectionDraining() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *ApplicationGatewayConnectionDrainingResponse {
		return v.ConnectionDraining
	}).(ApplicationGatewayConnectionDrainingResponsePtrOutput)
}

// Cookie based affinity.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) CookieBasedAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.CookieBasedAffinity }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Host header to be sent to the backend servers.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend http settings that is unique within an Application Gateway.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) PickHostNameFromBackendAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *bool { return v.PickHostNameFromBackendAddress }).(pulumi.BoolPtrOutput)
}

// The destination port on the backend.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Probe resource of an application gateway.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Probe() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *SubResourceResponse { return v.Probe }).(SubResourceResponsePtrOutput)
}

// Whether the probe is enabled. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ProbeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *bool { return v.ProbeEnabled }).(pulumi.BoolPtrOutput)
}

// The protocol used to communicate with the backend.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The provisioning state of the backend HTTP settings resource.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *int { return v.RequestTimeout }).(pulumi.IntPtrOutput)
}

// Array of references to application gateway trusted root certificates.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) TrustedRootCertificates() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) []SubResourceResponse {
		return v.TrustedRootCertificates
	}).(SubResourceResponseArrayOutput)
}

// Type of the resource.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayBackendHttpSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) ToApplicationGatewayBackendHttpSettingsResponsePtrOutput() ApplicationGatewayBackendHttpSettingsResponsePtrOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) ToApplicationGatewayBackendHttpSettingsResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponsePtrOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) Elem() ApplicationGatewayBackendHttpSettingsResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) ApplicationGatewayBackendHttpSettingsResponse {
		return *v
	}).(ApplicationGatewayBackendHttpSettingsResponseOutput)
}

// Cookie name to use for the affinity cookie.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) AffinityCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.AffinityCookieName
	}).(pulumi.StringPtrOutput)
}

// Array of references to application gateway authentication certificates.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) AuthenticationCertificates() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.AuthenticationCertificates
	}).(SubResourceResponseArrayOutput)
}

// Connection draining of the backend http settings resource.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) ConnectionDraining() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *ApplicationGatewayConnectionDrainingResponse {
		if v == nil {
			return nil
		}
		return v.ConnectionDraining
	}).(ApplicationGatewayConnectionDrainingResponsePtrOutput)
}

// Cookie based affinity.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) CookieBasedAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.CookieBasedAffinity
	}).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Host header to be sent to the backend servers.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.HostName
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the backend http settings that is unique within an Application Gateway.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) PickHostNameFromBackendAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.PickHostNameFromBackendAddress
	}).(pulumi.BoolPtrOutput)
}

// The destination port on the backend.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Probe resource of an application gateway.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) Probe() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.Probe
	}).(SubResourceResponsePtrOutput)
}

// Whether the probe is enabled. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) ProbeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ProbeEnabled
	}).(pulumi.BoolPtrOutput)
}

// The protocol used to communicate with the backend.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the backend HTTP settings resource.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.RequestTimeout
	}).(pulumi.IntPtrOutput)
}

// Array of references to application gateway trusted root certificates.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) TrustedRootCertificates() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.TrustedRootCertificates
	}).(SubResourceResponseArrayOutput)
}

// Type of the resource.
func (o ApplicationGatewayBackendHttpSettingsResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayBackendHttpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendHttpSettingsResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsResponseArrayOutput) ToApplicationGatewayBackendHttpSettingsResponseArrayOutput() ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponseArrayOutput) ToApplicationGatewayBackendHttpSettingsResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendHttpSettingsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendHttpSettingsResponse {
		return vs[0].([]ApplicationGatewayBackendHttpSettingsResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendHttpSettingsResponseOutput)
}

// Application gateway client authentication configuration.
type ApplicationGatewayClientAuthConfiguration struct {
	// Verify client certificate issuer name on the application gateway.
	VerifyClientCertIssuerDN *bool `pulumi:"verifyClientCertIssuerDN"`
}

// ApplicationGatewayClientAuthConfigurationInput is an input type that accepts ApplicationGatewayClientAuthConfigurationArgs and ApplicationGatewayClientAuthConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayClientAuthConfigurationInput` via:
//
//          ApplicationGatewayClientAuthConfigurationArgs{...}
type ApplicationGatewayClientAuthConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayClientAuthConfigurationOutput() ApplicationGatewayClientAuthConfigurationOutput
	ToApplicationGatewayClientAuthConfigurationOutputWithContext(context.Context) ApplicationGatewayClientAuthConfigurationOutput
}

// Application gateway client authentication configuration.
type ApplicationGatewayClientAuthConfigurationArgs struct {
	// Verify client certificate issuer name on the application gateway.
	VerifyClientCertIssuerDN pulumi.BoolPtrInput `pulumi:"verifyClientCertIssuerDN"`
}

func (ApplicationGatewayClientAuthConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayClientAuthConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayClientAuthConfigurationArgs) ToApplicationGatewayClientAuthConfigurationOutput() ApplicationGatewayClientAuthConfigurationOutput {
	return i.ToApplicationGatewayClientAuthConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayClientAuthConfigurationArgs) ToApplicationGatewayClientAuthConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayClientAuthConfigurationOutput)
}

func (i ApplicationGatewayClientAuthConfigurationArgs) ToApplicationGatewayClientAuthConfigurationPtrOutput() ApplicationGatewayClientAuthConfigurationPtrOutput {
	return i.ToApplicationGatewayClientAuthConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayClientAuthConfigurationArgs) ToApplicationGatewayClientAuthConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayClientAuthConfigurationOutput).ToApplicationGatewayClientAuthConfigurationPtrOutputWithContext(ctx)
}

// ApplicationGatewayClientAuthConfigurationPtrInput is an input type that accepts ApplicationGatewayClientAuthConfigurationArgs, ApplicationGatewayClientAuthConfigurationPtr and ApplicationGatewayClientAuthConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayClientAuthConfigurationPtrInput` via:
//
//          ApplicationGatewayClientAuthConfigurationArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayClientAuthConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationGatewayClientAuthConfigurationPtrOutput() ApplicationGatewayClientAuthConfigurationPtrOutput
	ToApplicationGatewayClientAuthConfigurationPtrOutputWithContext(context.Context) ApplicationGatewayClientAuthConfigurationPtrOutput
}

type applicationGatewayClientAuthConfigurationPtrType ApplicationGatewayClientAuthConfigurationArgs

func ApplicationGatewayClientAuthConfigurationPtr(v *ApplicationGatewayClientAuthConfigurationArgs) ApplicationGatewayClientAuthConfigurationPtrInput {
	return (*applicationGatewayClientAuthConfigurationPtrType)(v)
}

func (*applicationGatewayClientAuthConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayClientAuthConfiguration)(nil)).Elem()
}

func (i *applicationGatewayClientAuthConfigurationPtrType) ToApplicationGatewayClientAuthConfigurationPtrOutput() ApplicationGatewayClientAuthConfigurationPtrOutput {
	return i.ToApplicationGatewayClientAuthConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayClientAuthConfigurationPtrType) ToApplicationGatewayClientAuthConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayClientAuthConfigurationPtrOutput)
}

// Application gateway client authentication configuration.
type ApplicationGatewayClientAuthConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayClientAuthConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayClientAuthConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayClientAuthConfigurationOutput) ToApplicationGatewayClientAuthConfigurationOutput() ApplicationGatewayClientAuthConfigurationOutput {
	return o
}

func (o ApplicationGatewayClientAuthConfigurationOutput) ToApplicationGatewayClientAuthConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationOutput {
	return o
}

func (o ApplicationGatewayClientAuthConfigurationOutput) ToApplicationGatewayClientAuthConfigurationPtrOutput() ApplicationGatewayClientAuthConfigurationPtrOutput {
	return o.ToApplicationGatewayClientAuthConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayClientAuthConfigurationOutput) ToApplicationGatewayClientAuthConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayClientAuthConfiguration) *ApplicationGatewayClientAuthConfiguration {
		return &v
	}).(ApplicationGatewayClientAuthConfigurationPtrOutput)
}

// Verify client certificate issuer name on the application gateway.
func (o ApplicationGatewayClientAuthConfigurationOutput) VerifyClientCertIssuerDN() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayClientAuthConfiguration) *bool { return v.VerifyClientCertIssuerDN }).(pulumi.BoolPtrOutput)
}

type ApplicationGatewayClientAuthConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayClientAuthConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayClientAuthConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayClientAuthConfigurationPtrOutput) ToApplicationGatewayClientAuthConfigurationPtrOutput() ApplicationGatewayClientAuthConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayClientAuthConfigurationPtrOutput) ToApplicationGatewayClientAuthConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayClientAuthConfigurationPtrOutput) Elem() ApplicationGatewayClientAuthConfigurationOutput {
	return o.ApplyT(func(v *ApplicationGatewayClientAuthConfiguration) ApplicationGatewayClientAuthConfiguration {
		return *v
	}).(ApplicationGatewayClientAuthConfigurationOutput)
}

// Verify client certificate issuer name on the application gateway.
func (o ApplicationGatewayClientAuthConfigurationPtrOutput) VerifyClientCertIssuerDN() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayClientAuthConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.VerifyClientCertIssuerDN
	}).(pulumi.BoolPtrOutput)
}

// Application gateway client authentication configuration.
type ApplicationGatewayClientAuthConfigurationResponse struct {
	// Verify client certificate issuer name on the application gateway.
	VerifyClientCertIssuerDN *bool `pulumi:"verifyClientCertIssuerDN"`
}

// ApplicationGatewayClientAuthConfigurationResponseInput is an input type that accepts ApplicationGatewayClientAuthConfigurationResponseArgs and ApplicationGatewayClientAuthConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayClientAuthConfigurationResponseInput` via:
//
//          ApplicationGatewayClientAuthConfigurationResponseArgs{...}
type ApplicationGatewayClientAuthConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayClientAuthConfigurationResponseOutput() ApplicationGatewayClientAuthConfigurationResponseOutput
	ToApplicationGatewayClientAuthConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayClientAuthConfigurationResponseOutput
}

// Application gateway client authentication configuration.
type ApplicationGatewayClientAuthConfigurationResponseArgs struct {
	// Verify client certificate issuer name on the application gateway.
	VerifyClientCertIssuerDN pulumi.BoolPtrInput `pulumi:"verifyClientCertIssuerDN"`
}

func (ApplicationGatewayClientAuthConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayClientAuthConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayClientAuthConfigurationResponseArgs) ToApplicationGatewayClientAuthConfigurationResponseOutput() ApplicationGatewayClientAuthConfigurationResponseOutput {
	return i.ToApplicationGatewayClientAuthConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayClientAuthConfigurationResponseArgs) ToApplicationGatewayClientAuthConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayClientAuthConfigurationResponseOutput)
}

func (i ApplicationGatewayClientAuthConfigurationResponseArgs) ToApplicationGatewayClientAuthConfigurationResponsePtrOutput() ApplicationGatewayClientAuthConfigurationResponsePtrOutput {
	return i.ToApplicationGatewayClientAuthConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayClientAuthConfigurationResponseArgs) ToApplicationGatewayClientAuthConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayClientAuthConfigurationResponseOutput).ToApplicationGatewayClientAuthConfigurationResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayClientAuthConfigurationResponsePtrInput is an input type that accepts ApplicationGatewayClientAuthConfigurationResponseArgs, ApplicationGatewayClientAuthConfigurationResponsePtr and ApplicationGatewayClientAuthConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayClientAuthConfigurationResponsePtrInput` via:
//
//          ApplicationGatewayClientAuthConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayClientAuthConfigurationResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayClientAuthConfigurationResponsePtrOutput() ApplicationGatewayClientAuthConfigurationResponsePtrOutput
	ToApplicationGatewayClientAuthConfigurationResponsePtrOutputWithContext(context.Context) ApplicationGatewayClientAuthConfigurationResponsePtrOutput
}

type applicationGatewayClientAuthConfigurationResponsePtrType ApplicationGatewayClientAuthConfigurationResponseArgs

func ApplicationGatewayClientAuthConfigurationResponsePtr(v *ApplicationGatewayClientAuthConfigurationResponseArgs) ApplicationGatewayClientAuthConfigurationResponsePtrInput {
	return (*applicationGatewayClientAuthConfigurationResponsePtrType)(v)
}

func (*applicationGatewayClientAuthConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayClientAuthConfigurationResponse)(nil)).Elem()
}

func (i *applicationGatewayClientAuthConfigurationResponsePtrType) ToApplicationGatewayClientAuthConfigurationResponsePtrOutput() ApplicationGatewayClientAuthConfigurationResponsePtrOutput {
	return i.ToApplicationGatewayClientAuthConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayClientAuthConfigurationResponsePtrType) ToApplicationGatewayClientAuthConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayClientAuthConfigurationResponsePtrOutput)
}

// Application gateway client authentication configuration.
type ApplicationGatewayClientAuthConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayClientAuthConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayClientAuthConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayClientAuthConfigurationResponseOutput) ToApplicationGatewayClientAuthConfigurationResponseOutput() ApplicationGatewayClientAuthConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayClientAuthConfigurationResponseOutput) ToApplicationGatewayClientAuthConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayClientAuthConfigurationResponseOutput) ToApplicationGatewayClientAuthConfigurationResponsePtrOutput() ApplicationGatewayClientAuthConfigurationResponsePtrOutput {
	return o.ToApplicationGatewayClientAuthConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayClientAuthConfigurationResponseOutput) ToApplicationGatewayClientAuthConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayClientAuthConfigurationResponse) *ApplicationGatewayClientAuthConfigurationResponse {
		return &v
	}).(ApplicationGatewayClientAuthConfigurationResponsePtrOutput)
}

// Verify client certificate issuer name on the application gateway.
func (o ApplicationGatewayClientAuthConfigurationResponseOutput) VerifyClientCertIssuerDN() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayClientAuthConfigurationResponse) *bool { return v.VerifyClientCertIssuerDN }).(pulumi.BoolPtrOutput)
}

type ApplicationGatewayClientAuthConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayClientAuthConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayClientAuthConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayClientAuthConfigurationResponsePtrOutput) ToApplicationGatewayClientAuthConfigurationResponsePtrOutput() ApplicationGatewayClientAuthConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayClientAuthConfigurationResponsePtrOutput) ToApplicationGatewayClientAuthConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayClientAuthConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayClientAuthConfigurationResponsePtrOutput) Elem() ApplicationGatewayClientAuthConfigurationResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayClientAuthConfigurationResponse) ApplicationGatewayClientAuthConfigurationResponse {
		return *v
	}).(ApplicationGatewayClientAuthConfigurationResponseOutput)
}

// Verify client certificate issuer name on the application gateway.
func (o ApplicationGatewayClientAuthConfigurationResponsePtrOutput) VerifyClientCertIssuerDN() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayClientAuthConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.VerifyClientCertIssuerDN
	}).(pulumi.BoolPtrOutput)
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDraining struct {
	// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
	DrainTimeoutInSec int `pulumi:"drainTimeoutInSec"`
	// Whether connection draining is enabled or not.
	Enabled bool `pulumi:"enabled"`
}

// ApplicationGatewayConnectionDrainingInput is an input type that accepts ApplicationGatewayConnectionDrainingArgs and ApplicationGatewayConnectionDrainingOutput values.
// You can construct a concrete instance of `ApplicationGatewayConnectionDrainingInput` via:
//
//          ApplicationGatewayConnectionDrainingArgs{...}
type ApplicationGatewayConnectionDrainingInput interface {
	pulumi.Input

	ToApplicationGatewayConnectionDrainingOutput() ApplicationGatewayConnectionDrainingOutput
	ToApplicationGatewayConnectionDrainingOutputWithContext(context.Context) ApplicationGatewayConnectionDrainingOutput
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDrainingArgs struct {
	// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
	DrainTimeoutInSec pulumi.IntInput `pulumi:"drainTimeoutInSec"`
	// Whether connection draining is enabled or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ApplicationGatewayConnectionDrainingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayConnectionDraining)(nil)).Elem()
}

func (i ApplicationGatewayConnectionDrainingArgs) ToApplicationGatewayConnectionDrainingOutput() ApplicationGatewayConnectionDrainingOutput {
	return i.ToApplicationGatewayConnectionDrainingOutputWithContext(context.Background())
}

func (i ApplicationGatewayConnectionDrainingArgs) ToApplicationGatewayConnectionDrainingOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingOutput)
}

func (i ApplicationGatewayConnectionDrainingArgs) ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput {
	return i.ToApplicationGatewayConnectionDrainingPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayConnectionDrainingArgs) ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingOutput).ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx)
}

// ApplicationGatewayConnectionDrainingPtrInput is an input type that accepts ApplicationGatewayConnectionDrainingArgs, ApplicationGatewayConnectionDrainingPtr and ApplicationGatewayConnectionDrainingPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayConnectionDrainingPtrInput` via:
//
//          ApplicationGatewayConnectionDrainingArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayConnectionDrainingPtrInput interface {
	pulumi.Input

	ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput
	ToApplicationGatewayConnectionDrainingPtrOutputWithContext(context.Context) ApplicationGatewayConnectionDrainingPtrOutput
}

type applicationGatewayConnectionDrainingPtrType ApplicationGatewayConnectionDrainingArgs

func ApplicationGatewayConnectionDrainingPtr(v *ApplicationGatewayConnectionDrainingArgs) ApplicationGatewayConnectionDrainingPtrInput {
	return (*applicationGatewayConnectionDrainingPtrType)(v)
}

func (*applicationGatewayConnectionDrainingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayConnectionDraining)(nil)).Elem()
}

func (i *applicationGatewayConnectionDrainingPtrType) ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput {
	return i.ToApplicationGatewayConnectionDrainingPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayConnectionDrainingPtrType) ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingPtrOutput)
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDrainingOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayConnectionDrainingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayConnectionDraining)(nil)).Elem()
}

func (o ApplicationGatewayConnectionDrainingOutput) ToApplicationGatewayConnectionDrainingOutput() ApplicationGatewayConnectionDrainingOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingOutput) ToApplicationGatewayConnectionDrainingOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingOutput) ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput {
	return o.ToApplicationGatewayConnectionDrainingPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayConnectionDrainingOutput) ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDraining) *ApplicationGatewayConnectionDraining {
		return &v
	}).(ApplicationGatewayConnectionDrainingPtrOutput)
}

// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
func (o ApplicationGatewayConnectionDrainingOutput) DrainTimeoutInSec() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDraining) int { return v.DrainTimeoutInSec }).(pulumi.IntOutput)
}

// Whether connection draining is enabled or not.
func (o ApplicationGatewayConnectionDrainingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDraining) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ApplicationGatewayConnectionDrainingPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayConnectionDrainingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayConnectionDraining)(nil)).Elem()
}

func (o ApplicationGatewayConnectionDrainingPtrOutput) ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingPtrOutput) ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingPtrOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingPtrOutput) Elem() ApplicationGatewayConnectionDrainingOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDraining) ApplicationGatewayConnectionDraining { return *v }).(ApplicationGatewayConnectionDrainingOutput)
}

// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
func (o ApplicationGatewayConnectionDrainingPtrOutput) DrainTimeoutInSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDraining) *int {
		if v == nil {
			return nil
		}
		return &v.DrainTimeoutInSec
	}).(pulumi.IntPtrOutput)
}

// Whether connection draining is enabled or not.
func (o ApplicationGatewayConnectionDrainingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDraining) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDrainingResponse struct {
	// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
	DrainTimeoutInSec int `pulumi:"drainTimeoutInSec"`
	// Whether connection draining is enabled or not.
	Enabled bool `pulumi:"enabled"`
}

// ApplicationGatewayConnectionDrainingResponseInput is an input type that accepts ApplicationGatewayConnectionDrainingResponseArgs and ApplicationGatewayConnectionDrainingResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayConnectionDrainingResponseInput` via:
//
//          ApplicationGatewayConnectionDrainingResponseArgs{...}
type ApplicationGatewayConnectionDrainingResponseInput interface {
	pulumi.Input

	ToApplicationGatewayConnectionDrainingResponseOutput() ApplicationGatewayConnectionDrainingResponseOutput
	ToApplicationGatewayConnectionDrainingResponseOutputWithContext(context.Context) ApplicationGatewayConnectionDrainingResponseOutput
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDrainingResponseArgs struct {
	// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
	DrainTimeoutInSec pulumi.IntInput `pulumi:"drainTimeoutInSec"`
	// Whether connection draining is enabled or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ApplicationGatewayConnectionDrainingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayConnectionDrainingResponse)(nil)).Elem()
}

func (i ApplicationGatewayConnectionDrainingResponseArgs) ToApplicationGatewayConnectionDrainingResponseOutput() ApplicationGatewayConnectionDrainingResponseOutput {
	return i.ToApplicationGatewayConnectionDrainingResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayConnectionDrainingResponseArgs) ToApplicationGatewayConnectionDrainingResponseOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingResponseOutput)
}

func (i ApplicationGatewayConnectionDrainingResponseArgs) ToApplicationGatewayConnectionDrainingResponsePtrOutput() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return i.ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayConnectionDrainingResponseArgs) ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingResponseOutput).ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayConnectionDrainingResponsePtrInput is an input type that accepts ApplicationGatewayConnectionDrainingResponseArgs, ApplicationGatewayConnectionDrainingResponsePtr and ApplicationGatewayConnectionDrainingResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayConnectionDrainingResponsePtrInput` via:
//
//          ApplicationGatewayConnectionDrainingResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayConnectionDrainingResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayConnectionDrainingResponsePtrOutput() ApplicationGatewayConnectionDrainingResponsePtrOutput
	ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(context.Context) ApplicationGatewayConnectionDrainingResponsePtrOutput
}

type applicationGatewayConnectionDrainingResponsePtrType ApplicationGatewayConnectionDrainingResponseArgs

func ApplicationGatewayConnectionDrainingResponsePtr(v *ApplicationGatewayConnectionDrainingResponseArgs) ApplicationGatewayConnectionDrainingResponsePtrInput {
	return (*applicationGatewayConnectionDrainingResponsePtrType)(v)
}

func (*applicationGatewayConnectionDrainingResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayConnectionDrainingResponse)(nil)).Elem()
}

func (i *applicationGatewayConnectionDrainingResponsePtrType) ToApplicationGatewayConnectionDrainingResponsePtrOutput() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return i.ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayConnectionDrainingResponsePtrType) ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingResponsePtrOutput)
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDrainingResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayConnectionDrainingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayConnectionDrainingResponse)(nil)).Elem()
}

func (o ApplicationGatewayConnectionDrainingResponseOutput) ToApplicationGatewayConnectionDrainingResponseOutput() ApplicationGatewayConnectionDrainingResponseOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingResponseOutput) ToApplicationGatewayConnectionDrainingResponseOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponseOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingResponseOutput) ToApplicationGatewayConnectionDrainingResponsePtrOutput() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o.ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayConnectionDrainingResponseOutput) ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDrainingResponse) *ApplicationGatewayConnectionDrainingResponse {
		return &v
	}).(ApplicationGatewayConnectionDrainingResponsePtrOutput)
}

// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
func (o ApplicationGatewayConnectionDrainingResponseOutput) DrainTimeoutInSec() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDrainingResponse) int { return v.DrainTimeoutInSec }).(pulumi.IntOutput)
}

// Whether connection draining is enabled or not.
func (o ApplicationGatewayConnectionDrainingResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDrainingResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ApplicationGatewayConnectionDrainingResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayConnectionDrainingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayConnectionDrainingResponse)(nil)).Elem()
}

func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) ToApplicationGatewayConnectionDrainingResponsePtrOutput() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) Elem() ApplicationGatewayConnectionDrainingResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDrainingResponse) ApplicationGatewayConnectionDrainingResponse {
		return *v
	}).(ApplicationGatewayConnectionDrainingResponseOutput)
}

// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) DrainTimeoutInSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDrainingResponse) *int {
		if v == nil {
			return nil
		}
		return &v.DrainTimeoutInSec
	}).(pulumi.IntPtrOutput)
}

// Whether connection draining is enabled or not.
func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDrainingResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Customer error of an application gateway.
type ApplicationGatewayCustomError struct {
	// Error page URL of the application gateway customer error.
	CustomErrorPageUrl *string `pulumi:"customErrorPageUrl"`
	// Status code of the application gateway customer error.
	StatusCode *string `pulumi:"statusCode"`
}

// ApplicationGatewayCustomErrorInput is an input type that accepts ApplicationGatewayCustomErrorArgs and ApplicationGatewayCustomErrorOutput values.
// You can construct a concrete instance of `ApplicationGatewayCustomErrorInput` via:
//
//          ApplicationGatewayCustomErrorArgs{...}
type ApplicationGatewayCustomErrorInput interface {
	pulumi.Input

	ToApplicationGatewayCustomErrorOutput() ApplicationGatewayCustomErrorOutput
	ToApplicationGatewayCustomErrorOutputWithContext(context.Context) ApplicationGatewayCustomErrorOutput
}

// Customer error of an application gateway.
type ApplicationGatewayCustomErrorArgs struct {
	// Error page URL of the application gateway customer error.
	CustomErrorPageUrl pulumi.StringPtrInput `pulumi:"customErrorPageUrl"`
	// Status code of the application gateway customer error.
	StatusCode pulumi.StringPtrInput `pulumi:"statusCode"`
}

func (ApplicationGatewayCustomErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayCustomError)(nil)).Elem()
}

func (i ApplicationGatewayCustomErrorArgs) ToApplicationGatewayCustomErrorOutput() ApplicationGatewayCustomErrorOutput {
	return i.ToApplicationGatewayCustomErrorOutputWithContext(context.Background())
}

func (i ApplicationGatewayCustomErrorArgs) ToApplicationGatewayCustomErrorOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayCustomErrorOutput)
}

// ApplicationGatewayCustomErrorArrayInput is an input type that accepts ApplicationGatewayCustomErrorArray and ApplicationGatewayCustomErrorArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayCustomErrorArrayInput` via:
//
//          ApplicationGatewayCustomErrorArray{ ApplicationGatewayCustomErrorArgs{...} }
type ApplicationGatewayCustomErrorArrayInput interface {
	pulumi.Input

	ToApplicationGatewayCustomErrorArrayOutput() ApplicationGatewayCustomErrorArrayOutput
	ToApplicationGatewayCustomErrorArrayOutputWithContext(context.Context) ApplicationGatewayCustomErrorArrayOutput
}

type ApplicationGatewayCustomErrorArray []ApplicationGatewayCustomErrorInput

func (ApplicationGatewayCustomErrorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayCustomError)(nil)).Elem()
}

func (i ApplicationGatewayCustomErrorArray) ToApplicationGatewayCustomErrorArrayOutput() ApplicationGatewayCustomErrorArrayOutput {
	return i.ToApplicationGatewayCustomErrorArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayCustomErrorArray) ToApplicationGatewayCustomErrorArrayOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayCustomErrorArrayOutput)
}

// Customer error of an application gateway.
type ApplicationGatewayCustomErrorOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayCustomErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayCustomError)(nil)).Elem()
}

func (o ApplicationGatewayCustomErrorOutput) ToApplicationGatewayCustomErrorOutput() ApplicationGatewayCustomErrorOutput {
	return o
}

func (o ApplicationGatewayCustomErrorOutput) ToApplicationGatewayCustomErrorOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorOutput {
	return o
}

// Error page URL of the application gateway customer error.
func (o ApplicationGatewayCustomErrorOutput) CustomErrorPageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayCustomError) *string { return v.CustomErrorPageUrl }).(pulumi.StringPtrOutput)
}

// Status code of the application gateway customer error.
func (o ApplicationGatewayCustomErrorOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayCustomError) *string { return v.StatusCode }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayCustomErrorArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayCustomErrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayCustomError)(nil)).Elem()
}

func (o ApplicationGatewayCustomErrorArrayOutput) ToApplicationGatewayCustomErrorArrayOutput() ApplicationGatewayCustomErrorArrayOutput {
	return o
}

func (o ApplicationGatewayCustomErrorArrayOutput) ToApplicationGatewayCustomErrorArrayOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorArrayOutput {
	return o
}

func (o ApplicationGatewayCustomErrorArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayCustomErrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayCustomError {
		return vs[0].([]ApplicationGatewayCustomError)[vs[1].(int)]
	}).(ApplicationGatewayCustomErrorOutput)
}

// Customer error of an application gateway.
type ApplicationGatewayCustomErrorResponse struct {
	// Error page URL of the application gateway customer error.
	CustomErrorPageUrl *string `pulumi:"customErrorPageUrl"`
	// Status code of the application gateway customer error.
	StatusCode *string `pulumi:"statusCode"`
}

// ApplicationGatewayCustomErrorResponseInput is an input type that accepts ApplicationGatewayCustomErrorResponseArgs and ApplicationGatewayCustomErrorResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayCustomErrorResponseInput` via:
//
//          ApplicationGatewayCustomErrorResponseArgs{...}
type ApplicationGatewayCustomErrorResponseInput interface {
	pulumi.Input

	ToApplicationGatewayCustomErrorResponseOutput() ApplicationGatewayCustomErrorResponseOutput
	ToApplicationGatewayCustomErrorResponseOutputWithContext(context.Context) ApplicationGatewayCustomErrorResponseOutput
}

// Customer error of an application gateway.
type ApplicationGatewayCustomErrorResponseArgs struct {
	// Error page URL of the application gateway customer error.
	CustomErrorPageUrl pulumi.StringPtrInput `pulumi:"customErrorPageUrl"`
	// Status code of the application gateway customer error.
	StatusCode pulumi.StringPtrInput `pulumi:"statusCode"`
}

func (ApplicationGatewayCustomErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayCustomErrorResponse)(nil)).Elem()
}

func (i ApplicationGatewayCustomErrorResponseArgs) ToApplicationGatewayCustomErrorResponseOutput() ApplicationGatewayCustomErrorResponseOutput {
	return i.ToApplicationGatewayCustomErrorResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayCustomErrorResponseArgs) ToApplicationGatewayCustomErrorResponseOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayCustomErrorResponseOutput)
}

// ApplicationGatewayCustomErrorResponseArrayInput is an input type that accepts ApplicationGatewayCustomErrorResponseArray and ApplicationGatewayCustomErrorResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayCustomErrorResponseArrayInput` via:
//
//          ApplicationGatewayCustomErrorResponseArray{ ApplicationGatewayCustomErrorResponseArgs{...} }
type ApplicationGatewayCustomErrorResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayCustomErrorResponseArrayOutput() ApplicationGatewayCustomErrorResponseArrayOutput
	ToApplicationGatewayCustomErrorResponseArrayOutputWithContext(context.Context) ApplicationGatewayCustomErrorResponseArrayOutput
}

type ApplicationGatewayCustomErrorResponseArray []ApplicationGatewayCustomErrorResponseInput

func (ApplicationGatewayCustomErrorResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayCustomErrorResponse)(nil)).Elem()
}

func (i ApplicationGatewayCustomErrorResponseArray) ToApplicationGatewayCustomErrorResponseArrayOutput() ApplicationGatewayCustomErrorResponseArrayOutput {
	return i.ToApplicationGatewayCustomErrorResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayCustomErrorResponseArray) ToApplicationGatewayCustomErrorResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayCustomErrorResponseArrayOutput)
}

// Customer error of an application gateway.
type ApplicationGatewayCustomErrorResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayCustomErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayCustomErrorResponse)(nil)).Elem()
}

func (o ApplicationGatewayCustomErrorResponseOutput) ToApplicationGatewayCustomErrorResponseOutput() ApplicationGatewayCustomErrorResponseOutput {
	return o
}

func (o ApplicationGatewayCustomErrorResponseOutput) ToApplicationGatewayCustomErrorResponseOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorResponseOutput {
	return o
}

// Error page URL of the application gateway customer error.
func (o ApplicationGatewayCustomErrorResponseOutput) CustomErrorPageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayCustomErrorResponse) *string { return v.CustomErrorPageUrl }).(pulumi.StringPtrOutput)
}

// Status code of the application gateway customer error.
func (o ApplicationGatewayCustomErrorResponseOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayCustomErrorResponse) *string { return v.StatusCode }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayCustomErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayCustomErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayCustomErrorResponse)(nil)).Elem()
}

func (o ApplicationGatewayCustomErrorResponseArrayOutput) ToApplicationGatewayCustomErrorResponseArrayOutput() ApplicationGatewayCustomErrorResponseArrayOutput {
	return o
}

func (o ApplicationGatewayCustomErrorResponseArrayOutput) ToApplicationGatewayCustomErrorResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayCustomErrorResponseArrayOutput {
	return o
}

func (o ApplicationGatewayCustomErrorResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayCustomErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayCustomErrorResponse {
		return vs[0].([]ApplicationGatewayCustomErrorResponse)[vs[1].(int)]
	}).(ApplicationGatewayCustomErrorResponseOutput)
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroup struct {
	// The name of the rule group that will be disabled.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
	Rules []int `pulumi:"rules"`
}

// ApplicationGatewayFirewallDisabledRuleGroupInput is an input type that accepts ApplicationGatewayFirewallDisabledRuleGroupArgs and ApplicationGatewayFirewallDisabledRuleGroupOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallDisabledRuleGroupInput` via:
//
//          ApplicationGatewayFirewallDisabledRuleGroupArgs{...}
type ApplicationGatewayFirewallDisabledRuleGroupInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallDisabledRuleGroupOutput() ApplicationGatewayFirewallDisabledRuleGroupOutput
	ToApplicationGatewayFirewallDisabledRuleGroupOutputWithContext(context.Context) ApplicationGatewayFirewallDisabledRuleGroupOutput
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroupArgs struct {
	// The name of the rule group that will be disabled.
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
	Rules pulumi.IntArrayInput `pulumi:"rules"`
}

func (ApplicationGatewayFirewallDisabledRuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallDisabledRuleGroup)(nil)).Elem()
}

func (i ApplicationGatewayFirewallDisabledRuleGroupArgs) ToApplicationGatewayFirewallDisabledRuleGroupOutput() ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return i.ToApplicationGatewayFirewallDisabledRuleGroupOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallDisabledRuleGroupArgs) ToApplicationGatewayFirewallDisabledRuleGroupOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallDisabledRuleGroupOutput)
}

// ApplicationGatewayFirewallDisabledRuleGroupArrayInput is an input type that accepts ApplicationGatewayFirewallDisabledRuleGroupArray and ApplicationGatewayFirewallDisabledRuleGroupArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallDisabledRuleGroupArrayInput` via:
//
//          ApplicationGatewayFirewallDisabledRuleGroupArray{ ApplicationGatewayFirewallDisabledRuleGroupArgs{...} }
type ApplicationGatewayFirewallDisabledRuleGroupArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallDisabledRuleGroupArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput
	ToApplicationGatewayFirewallDisabledRuleGroupArrayOutputWithContext(context.Context) ApplicationGatewayFirewallDisabledRuleGroupArrayOutput
}

type ApplicationGatewayFirewallDisabledRuleGroupArray []ApplicationGatewayFirewallDisabledRuleGroupInput

func (ApplicationGatewayFirewallDisabledRuleGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallDisabledRuleGroup)(nil)).Elem()
}

func (i ApplicationGatewayFirewallDisabledRuleGroupArray) ToApplicationGatewayFirewallDisabledRuleGroupArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return i.ToApplicationGatewayFirewallDisabledRuleGroupArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallDisabledRuleGroupArray) ToApplicationGatewayFirewallDisabledRuleGroupArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallDisabledRuleGroupArrayOutput)
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroupOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallDisabledRuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallDisabledRuleGroup)(nil)).Elem()
}

func (o ApplicationGatewayFirewallDisabledRuleGroupOutput) ToApplicationGatewayFirewallDisabledRuleGroupOutput() ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupOutput) ToApplicationGatewayFirewallDisabledRuleGroupOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return o
}

// The name of the rule group that will be disabled.
func (o ApplicationGatewayFirewallDisabledRuleGroupOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallDisabledRuleGroup) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
func (o ApplicationGatewayFirewallDisabledRuleGroupOutput) Rules() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallDisabledRuleGroup) []int { return v.Rules }).(pulumi.IntArrayOutput)
}

type ApplicationGatewayFirewallDisabledRuleGroupArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallDisabledRuleGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallDisabledRuleGroup)(nil)).Elem()
}

func (o ApplicationGatewayFirewallDisabledRuleGroupArrayOutput) ToApplicationGatewayFirewallDisabledRuleGroupArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupArrayOutput) ToApplicationGatewayFirewallDisabledRuleGroupArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFirewallDisabledRuleGroup {
		return vs[0].([]ApplicationGatewayFirewallDisabledRuleGroup)[vs[1].(int)]
	}).(ApplicationGatewayFirewallDisabledRuleGroupOutput)
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroupResponse struct {
	// The name of the rule group that will be disabled.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
	Rules []int `pulumi:"rules"`
}

// ApplicationGatewayFirewallDisabledRuleGroupResponseInput is an input type that accepts ApplicationGatewayFirewallDisabledRuleGroupResponseArgs and ApplicationGatewayFirewallDisabledRuleGroupResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallDisabledRuleGroupResponseInput` via:
//
//          ApplicationGatewayFirewallDisabledRuleGroupResponseArgs{...}
type ApplicationGatewayFirewallDisabledRuleGroupResponseInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallDisabledRuleGroupResponseOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseOutput
	ToApplicationGatewayFirewallDisabledRuleGroupResponseOutputWithContext(context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseOutput
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroupResponseArgs struct {
	// The name of the rule group that will be disabled.
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
	Rules pulumi.IntArrayInput `pulumi:"rules"`
}

func (ApplicationGatewayFirewallDisabledRuleGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallDisabledRuleGroupResponse)(nil)).Elem()
}

func (i ApplicationGatewayFirewallDisabledRuleGroupResponseArgs) ToApplicationGatewayFirewallDisabledRuleGroupResponseOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseOutput {
	return i.ToApplicationGatewayFirewallDisabledRuleGroupResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallDisabledRuleGroupResponseArgs) ToApplicationGatewayFirewallDisabledRuleGroupResponseOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallDisabledRuleGroupResponseOutput)
}

// ApplicationGatewayFirewallDisabledRuleGroupResponseArrayInput is an input type that accepts ApplicationGatewayFirewallDisabledRuleGroupResponseArray and ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallDisabledRuleGroupResponseArrayInput` via:
//
//          ApplicationGatewayFirewallDisabledRuleGroupResponseArray{ ApplicationGatewayFirewallDisabledRuleGroupResponseArgs{...} }
type ApplicationGatewayFirewallDisabledRuleGroupResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput
	ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutputWithContext(context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput
}

type ApplicationGatewayFirewallDisabledRuleGroupResponseArray []ApplicationGatewayFirewallDisabledRuleGroupResponseInput

func (ApplicationGatewayFirewallDisabledRuleGroupResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallDisabledRuleGroupResponse)(nil)).Elem()
}

func (i ApplicationGatewayFirewallDisabledRuleGroupResponseArray) ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return i.ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallDisabledRuleGroupResponseArray) ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput)
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroupResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallDisabledRuleGroupResponse)(nil)).Elem()
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) ToApplicationGatewayFirewallDisabledRuleGroupResponseOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) ToApplicationGatewayFirewallDisabledRuleGroupResponseOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseOutput {
	return o
}

// The name of the rule group that will be disabled.
func (o ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallDisabledRuleGroupResponse) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
func (o ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) Rules() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallDisabledRuleGroupResponse) []int { return v.Rules }).(pulumi.IntArrayOutput)
}

type ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallDisabledRuleGroupResponse)(nil)).Elem()
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput) ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput) ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFirewallDisabledRuleGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFirewallDisabledRuleGroupResponse {
		return vs[0].([]ApplicationGatewayFirewallDisabledRuleGroupResponse)[vs[1].(int)]
	}).(ApplicationGatewayFirewallDisabledRuleGroupResponseOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ApplicationGatewayFirewallExclusion struct {
	// The variable to be excluded.
	MatchVariable string `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
	Selector string `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
}

// ApplicationGatewayFirewallExclusionInput is an input type that accepts ApplicationGatewayFirewallExclusionArgs and ApplicationGatewayFirewallExclusionOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallExclusionInput` via:
//
//          ApplicationGatewayFirewallExclusionArgs{...}
type ApplicationGatewayFirewallExclusionInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallExclusionOutput() ApplicationGatewayFirewallExclusionOutput
	ToApplicationGatewayFirewallExclusionOutputWithContext(context.Context) ApplicationGatewayFirewallExclusionOutput
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ApplicationGatewayFirewallExclusionArgs struct {
	// The variable to be excluded.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
	Selector pulumi.StringInput `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
	SelectorMatchOperator pulumi.StringInput `pulumi:"selectorMatchOperator"`
}

func (ApplicationGatewayFirewallExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallExclusion)(nil)).Elem()
}

func (i ApplicationGatewayFirewallExclusionArgs) ToApplicationGatewayFirewallExclusionOutput() ApplicationGatewayFirewallExclusionOutput {
	return i.ToApplicationGatewayFirewallExclusionOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallExclusionArgs) ToApplicationGatewayFirewallExclusionOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallExclusionOutput)
}

// ApplicationGatewayFirewallExclusionArrayInput is an input type that accepts ApplicationGatewayFirewallExclusionArray and ApplicationGatewayFirewallExclusionArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallExclusionArrayInput` via:
//
//          ApplicationGatewayFirewallExclusionArray{ ApplicationGatewayFirewallExclusionArgs{...} }
type ApplicationGatewayFirewallExclusionArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallExclusionArrayOutput() ApplicationGatewayFirewallExclusionArrayOutput
	ToApplicationGatewayFirewallExclusionArrayOutputWithContext(context.Context) ApplicationGatewayFirewallExclusionArrayOutput
}

type ApplicationGatewayFirewallExclusionArray []ApplicationGatewayFirewallExclusionInput

func (ApplicationGatewayFirewallExclusionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallExclusion)(nil)).Elem()
}

func (i ApplicationGatewayFirewallExclusionArray) ToApplicationGatewayFirewallExclusionArrayOutput() ApplicationGatewayFirewallExclusionArrayOutput {
	return i.ToApplicationGatewayFirewallExclusionArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallExclusionArray) ToApplicationGatewayFirewallExclusionArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallExclusionArrayOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ApplicationGatewayFirewallExclusionOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallExclusion)(nil)).Elem()
}

func (o ApplicationGatewayFirewallExclusionOutput) ToApplicationGatewayFirewallExclusionOutput() ApplicationGatewayFirewallExclusionOutput {
	return o
}

func (o ApplicationGatewayFirewallExclusionOutput) ToApplicationGatewayFirewallExclusionOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionOutput {
	return o
}

// The variable to be excluded.
func (o ApplicationGatewayFirewallExclusionOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallExclusion) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
func (o ApplicationGatewayFirewallExclusionOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallExclusion) string { return v.Selector }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
func (o ApplicationGatewayFirewallExclusionOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallExclusion) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

type ApplicationGatewayFirewallExclusionArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallExclusionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallExclusion)(nil)).Elem()
}

func (o ApplicationGatewayFirewallExclusionArrayOutput) ToApplicationGatewayFirewallExclusionArrayOutput() ApplicationGatewayFirewallExclusionArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallExclusionArrayOutput) ToApplicationGatewayFirewallExclusionArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallExclusionArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFirewallExclusionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFirewallExclusion {
		return vs[0].([]ApplicationGatewayFirewallExclusion)[vs[1].(int)]
	}).(ApplicationGatewayFirewallExclusionOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ApplicationGatewayFirewallExclusionResponse struct {
	// The variable to be excluded.
	MatchVariable string `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
	Selector string `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
}

// ApplicationGatewayFirewallExclusionResponseInput is an input type that accepts ApplicationGatewayFirewallExclusionResponseArgs and ApplicationGatewayFirewallExclusionResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallExclusionResponseInput` via:
//
//          ApplicationGatewayFirewallExclusionResponseArgs{...}
type ApplicationGatewayFirewallExclusionResponseInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallExclusionResponseOutput() ApplicationGatewayFirewallExclusionResponseOutput
	ToApplicationGatewayFirewallExclusionResponseOutputWithContext(context.Context) ApplicationGatewayFirewallExclusionResponseOutput
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ApplicationGatewayFirewallExclusionResponseArgs struct {
	// The variable to be excluded.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
	Selector pulumi.StringInput `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
	SelectorMatchOperator pulumi.StringInput `pulumi:"selectorMatchOperator"`
}

func (ApplicationGatewayFirewallExclusionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallExclusionResponse)(nil)).Elem()
}

func (i ApplicationGatewayFirewallExclusionResponseArgs) ToApplicationGatewayFirewallExclusionResponseOutput() ApplicationGatewayFirewallExclusionResponseOutput {
	return i.ToApplicationGatewayFirewallExclusionResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallExclusionResponseArgs) ToApplicationGatewayFirewallExclusionResponseOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallExclusionResponseOutput)
}

// ApplicationGatewayFirewallExclusionResponseArrayInput is an input type that accepts ApplicationGatewayFirewallExclusionResponseArray and ApplicationGatewayFirewallExclusionResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallExclusionResponseArrayInput` via:
//
//          ApplicationGatewayFirewallExclusionResponseArray{ ApplicationGatewayFirewallExclusionResponseArgs{...} }
type ApplicationGatewayFirewallExclusionResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallExclusionResponseArrayOutput() ApplicationGatewayFirewallExclusionResponseArrayOutput
	ToApplicationGatewayFirewallExclusionResponseArrayOutputWithContext(context.Context) ApplicationGatewayFirewallExclusionResponseArrayOutput
}

type ApplicationGatewayFirewallExclusionResponseArray []ApplicationGatewayFirewallExclusionResponseInput

func (ApplicationGatewayFirewallExclusionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallExclusionResponse)(nil)).Elem()
}

func (i ApplicationGatewayFirewallExclusionResponseArray) ToApplicationGatewayFirewallExclusionResponseArrayOutput() ApplicationGatewayFirewallExclusionResponseArrayOutput {
	return i.ToApplicationGatewayFirewallExclusionResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallExclusionResponseArray) ToApplicationGatewayFirewallExclusionResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallExclusionResponseArrayOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ApplicationGatewayFirewallExclusionResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallExclusionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallExclusionResponse)(nil)).Elem()
}

func (o ApplicationGatewayFirewallExclusionResponseOutput) ToApplicationGatewayFirewallExclusionResponseOutput() ApplicationGatewayFirewallExclusionResponseOutput {
	return o
}

func (o ApplicationGatewayFirewallExclusionResponseOutput) ToApplicationGatewayFirewallExclusionResponseOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionResponseOutput {
	return o
}

// The variable to be excluded.
func (o ApplicationGatewayFirewallExclusionResponseOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallExclusionResponse) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
func (o ApplicationGatewayFirewallExclusionResponseOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallExclusionResponse) string { return v.Selector }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
func (o ApplicationGatewayFirewallExclusionResponseOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallExclusionResponse) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

type ApplicationGatewayFirewallExclusionResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallExclusionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallExclusionResponse)(nil)).Elem()
}

func (o ApplicationGatewayFirewallExclusionResponseArrayOutput) ToApplicationGatewayFirewallExclusionResponseArrayOutput() ApplicationGatewayFirewallExclusionResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallExclusionResponseArrayOutput) ToApplicationGatewayFirewallExclusionResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallExclusionResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallExclusionResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFirewallExclusionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFirewallExclusionResponse {
		return vs[0].([]ApplicationGatewayFirewallExclusionResponse)[vs[1].(int)]
	}).(ApplicationGatewayFirewallExclusionResponseOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the frontend IP configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Reference to the application gateway private link configuration.
	PrivateLinkConfiguration *SubResource `pulumi:"privateLinkConfiguration"`
	// Reference to the PublicIP resource.
	PublicIPAddress *SubResource `pulumi:"publicIPAddress"`
	// Reference to the subnet resource.
	Subnet *SubResource `pulumi:"subnet"`
}

// ApplicationGatewayFrontendIPConfigurationInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationArgs and ApplicationGatewayFrontendIPConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationArgs{...}
type ApplicationGatewayFrontendIPConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationOutput() ApplicationGatewayFrontendIPConfigurationOutput
	ToApplicationGatewayFrontendIPConfigurationOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationOutput
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the frontend IP configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Reference to the application gateway private link configuration.
	PrivateLinkConfiguration SubResourcePtrInput `pulumi:"privateLinkConfiguration"`
	// Reference to the PublicIP resource.
	PublicIPAddress SubResourcePtrInput `pulumi:"publicIPAddress"`
	// Reference to the subnet resource.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (ApplicationGatewayFrontendIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationArgs) ToApplicationGatewayFrontendIPConfigurationOutput() ApplicationGatewayFrontendIPConfigurationOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationArgs) ToApplicationGatewayFrontendIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationOutput)
}

// ApplicationGatewayFrontendIPConfigurationArrayInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationArray and ApplicationGatewayFrontendIPConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationArrayInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationArray{ ApplicationGatewayFrontendIPConfigurationArgs{...} }
type ApplicationGatewayFrontendIPConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationArrayOutput() ApplicationGatewayFrontendIPConfigurationArrayOutput
	ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationArrayOutput
}

type ApplicationGatewayFrontendIPConfigurationArray []ApplicationGatewayFrontendIPConfigurationInput

func (ApplicationGatewayFrontendIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationArray) ToApplicationGatewayFrontendIPConfigurationArrayOutput() ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationArray) ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationArrayOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationOutput) ToApplicationGatewayFrontendIPConfigurationOutput() ApplicationGatewayFrontendIPConfigurationOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationOutput) ToApplicationGatewayFrontendIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationOutput {
	return o
}

// Resource ID.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the frontend IP configuration that is unique within an Application Gateway.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// PrivateIPAddress of the network interface IP Configuration.
func (o ApplicationGatewayFrontendIPConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o ApplicationGatewayFrontendIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Reference to the application gateway private link configuration.
func (o ApplicationGatewayFrontendIPConfigurationOutput) PrivateLinkConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *SubResource { return v.PrivateLinkConfiguration }).(SubResourcePtrOutput)
}

// Reference to the PublicIP resource.
func (o ApplicationGatewayFrontendIPConfigurationOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *SubResource { return v.PublicIPAddress }).(SubResourcePtrOutput)
}

// Reference to the subnet resource.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type ApplicationGatewayFrontendIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationArrayOutput) ToApplicationGatewayFrontendIPConfigurationArrayOutput() ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationArrayOutput) ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendIPConfiguration {
		return vs[0].([]ApplicationGatewayFrontendIPConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayFrontendIPConfigurationOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the frontend IP configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Reference to the application gateway private link configuration.
	PrivateLinkConfiguration *SubResourceResponse `pulumi:"privateLinkConfiguration"`
	// The provisioning state of the frontend IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Reference to the PublicIP resource.
	PublicIPAddress *SubResourceResponse `pulumi:"publicIPAddress"`
	// Reference to the subnet resource.
	Subnet *SubResourceResponse `pulumi:"subnet"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// ApplicationGatewayFrontendIPConfigurationResponseInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationResponseArgs and ApplicationGatewayFrontendIPConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationResponseInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationResponseArgs{...}
type ApplicationGatewayFrontendIPConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationResponseOutput() ApplicationGatewayFrontendIPConfigurationResponseOutput
	ToApplicationGatewayFrontendIPConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationResponseOutput
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the frontend IP configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Reference to the application gateway private link configuration.
	PrivateLinkConfiguration SubResourceResponsePtrInput `pulumi:"privateLinkConfiguration"`
	// The provisioning state of the frontend IP configuration resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Reference to the PublicIP resource.
	PublicIPAddress SubResourceResponsePtrInput `pulumi:"publicIPAddress"`
	// Reference to the subnet resource.
	Subnet SubResourceResponsePtrInput `pulumi:"subnet"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationGatewayFrontendIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationResponseArgs) ToApplicationGatewayFrontendIPConfigurationResponseOutput() ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationResponseArgs) ToApplicationGatewayFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationResponseOutput)
}

// ApplicationGatewayFrontendIPConfigurationResponseArrayInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationResponseArray and ApplicationGatewayFrontendIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationResponseArrayInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationResponseArray{ ApplicationGatewayFrontendIPConfigurationResponseArgs{...} }
type ApplicationGatewayFrontendIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationResponseArrayOutput() ApplicationGatewayFrontendIPConfigurationResponseArrayOutput
	ToApplicationGatewayFrontendIPConfigurationResponseArrayOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationResponseArrayOutput
}

type ApplicationGatewayFrontendIPConfigurationResponseArray []ApplicationGatewayFrontendIPConfigurationResponseInput

func (ApplicationGatewayFrontendIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationResponseArray) ToApplicationGatewayFrontendIPConfigurationResponseArrayOutput() ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationResponseArray) ToApplicationGatewayFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationResponseArrayOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) ToApplicationGatewayFrontendIPConfigurationResponseOutput() ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) ToApplicationGatewayFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the frontend IP configuration that is unique within an Application Gateway.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// PrivateIPAddress of the network interface IP Configuration.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Reference to the application gateway private link configuration.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) PrivateLinkConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *SubResourceResponse {
		return v.PrivateLinkConfiguration
	}).(SubResourceResponsePtrOutput)
}

// The provisioning state of the frontend IP configuration resource.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Reference to the PublicIP resource.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *SubResourceResponse {
		return v.PublicIPAddress
	}).(SubResourceResponsePtrOutput)
}

// Reference to the subnet resource.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayFrontendIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) ToApplicationGatewayFrontendIPConfigurationResponseArrayOutput() ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) ToApplicationGatewayFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendIPConfigurationResponse {
		return vs[0].([]ApplicationGatewayFrontendIPConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayFrontendIPConfigurationResponseOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPort struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the frontend port that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Frontend port.
	Port *int `pulumi:"port"`
}

// ApplicationGatewayFrontendPortInput is an input type that accepts ApplicationGatewayFrontendPortArgs and ApplicationGatewayFrontendPortOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortInput` via:
//
//          ApplicationGatewayFrontendPortArgs{...}
type ApplicationGatewayFrontendPortInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortOutput() ApplicationGatewayFrontendPortOutput
	ToApplicationGatewayFrontendPortOutputWithContext(context.Context) ApplicationGatewayFrontendPortOutput
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the frontend port that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Frontend port.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (ApplicationGatewayFrontendPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortArgs) ToApplicationGatewayFrontendPortOutput() ApplicationGatewayFrontendPortOutput {
	return i.ToApplicationGatewayFrontendPortOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortArgs) ToApplicationGatewayFrontendPortOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortOutput)
}

// ApplicationGatewayFrontendPortArrayInput is an input type that accepts ApplicationGatewayFrontendPortArray and ApplicationGatewayFrontendPortArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortArrayInput` via:
//
//          ApplicationGatewayFrontendPortArray{ ApplicationGatewayFrontendPortArgs{...} }
type ApplicationGatewayFrontendPortArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortArrayOutput() ApplicationGatewayFrontendPortArrayOutput
	ToApplicationGatewayFrontendPortArrayOutputWithContext(context.Context) ApplicationGatewayFrontendPortArrayOutput
}

type ApplicationGatewayFrontendPortArray []ApplicationGatewayFrontendPortInput

func (ApplicationGatewayFrontendPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortArray) ToApplicationGatewayFrontendPortArrayOutput() ApplicationGatewayFrontendPortArrayOutput {
	return i.ToApplicationGatewayFrontendPortArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortArray) ToApplicationGatewayFrontendPortArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortArrayOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortOutput) ToApplicationGatewayFrontendPortOutput() ApplicationGatewayFrontendPortOutput {
	return o
}

func (o ApplicationGatewayFrontendPortOutput) ToApplicationGatewayFrontendPortOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortOutput {
	return o
}

// Resource ID.
func (o ApplicationGatewayFrontendPortOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the frontend port that is unique within an Application Gateway.
func (o ApplicationGatewayFrontendPortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Frontend port.
func (o ApplicationGatewayFrontendPortOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayFrontendPortArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortArrayOutput) ToApplicationGatewayFrontendPortArrayOutput() ApplicationGatewayFrontendPortArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortArrayOutput) ToApplicationGatewayFrontendPortArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendPort {
		return vs[0].([]ApplicationGatewayFrontendPort)[vs[1].(int)]
	}).(ApplicationGatewayFrontendPortOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the frontend port that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Frontend port.
	Port *int `pulumi:"port"`
	// The provisioning state of the frontend port resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// ApplicationGatewayFrontendPortResponseInput is an input type that accepts ApplicationGatewayFrontendPortResponseArgs and ApplicationGatewayFrontendPortResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortResponseInput` via:
//
//          ApplicationGatewayFrontendPortResponseArgs{...}
type ApplicationGatewayFrontendPortResponseInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortResponseOutput() ApplicationGatewayFrontendPortResponseOutput
	ToApplicationGatewayFrontendPortResponseOutputWithContext(context.Context) ApplicationGatewayFrontendPortResponseOutput
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the frontend port that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Frontend port.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The provisioning state of the frontend port resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationGatewayFrontendPortResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPortResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortResponseArgs) ToApplicationGatewayFrontendPortResponseOutput() ApplicationGatewayFrontendPortResponseOutput {
	return i.ToApplicationGatewayFrontendPortResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortResponseArgs) ToApplicationGatewayFrontendPortResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortResponseOutput)
}

// ApplicationGatewayFrontendPortResponseArrayInput is an input type that accepts ApplicationGatewayFrontendPortResponseArray and ApplicationGatewayFrontendPortResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortResponseArrayInput` via:
//
//          ApplicationGatewayFrontendPortResponseArray{ ApplicationGatewayFrontendPortResponseArgs{...} }
type ApplicationGatewayFrontendPortResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortResponseArrayOutput() ApplicationGatewayFrontendPortResponseArrayOutput
	ToApplicationGatewayFrontendPortResponseArrayOutputWithContext(context.Context) ApplicationGatewayFrontendPortResponseArrayOutput
}

type ApplicationGatewayFrontendPortResponseArray []ApplicationGatewayFrontendPortResponseInput

func (ApplicationGatewayFrontendPortResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPortResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortResponseArray) ToApplicationGatewayFrontendPortResponseArrayOutput() ApplicationGatewayFrontendPortResponseArrayOutput {
	return i.ToApplicationGatewayFrontendPortResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortResponseArray) ToApplicationGatewayFrontendPortResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortResponseArrayOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPortResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortResponseOutput) ToApplicationGatewayFrontendPortResponseOutput() ApplicationGatewayFrontendPortResponseOutput {
	return o
}

func (o ApplicationGatewayFrontendPortResponseOutput) ToApplicationGatewayFrontendPortResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayFrontendPortResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayFrontendPortResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the frontend port that is unique within an Application Gateway.
func (o ApplicationGatewayFrontendPortResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Frontend port.
func (o ApplicationGatewayFrontendPortResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The provisioning state of the frontend port resource.
func (o ApplicationGatewayFrontendPortResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewayFrontendPortResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayFrontendPortResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPortResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortResponseArrayOutput) ToApplicationGatewayFrontendPortResponseArrayOutput() ApplicationGatewayFrontendPortResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortResponseArrayOutput) ToApplicationGatewayFrontendPortResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendPortResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendPortResponse {
		return vs[0].([]ApplicationGatewayFrontendPortResponse)[vs[1].(int)]
	}).(ApplicationGatewayFrontendPortResponseOutput)
}

// Header configuration of the Actions set in Application Gateway.
type ApplicationGatewayHeaderConfiguration struct {
	// Header name of the header configuration.
	HeaderName *string `pulumi:"headerName"`
	// Header value of the header configuration.
	HeaderValue *string `pulumi:"headerValue"`
}

// ApplicationGatewayHeaderConfigurationInput is an input type that accepts ApplicationGatewayHeaderConfigurationArgs and ApplicationGatewayHeaderConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayHeaderConfigurationInput` via:
//
//          ApplicationGatewayHeaderConfigurationArgs{...}
type ApplicationGatewayHeaderConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayHeaderConfigurationOutput() ApplicationGatewayHeaderConfigurationOutput
	ToApplicationGatewayHeaderConfigurationOutputWithContext(context.Context) ApplicationGatewayHeaderConfigurationOutput
}

// Header configuration of the Actions set in Application Gateway.
type ApplicationGatewayHeaderConfigurationArgs struct {
	// Header name of the header configuration.
	HeaderName pulumi.StringPtrInput `pulumi:"headerName"`
	// Header value of the header configuration.
	HeaderValue pulumi.StringPtrInput `pulumi:"headerValue"`
}

func (ApplicationGatewayHeaderConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHeaderConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayHeaderConfigurationArgs) ToApplicationGatewayHeaderConfigurationOutput() ApplicationGatewayHeaderConfigurationOutput {
	return i.ToApplicationGatewayHeaderConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayHeaderConfigurationArgs) ToApplicationGatewayHeaderConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHeaderConfigurationOutput)
}

// ApplicationGatewayHeaderConfigurationArrayInput is an input type that accepts ApplicationGatewayHeaderConfigurationArray and ApplicationGatewayHeaderConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayHeaderConfigurationArrayInput` via:
//
//          ApplicationGatewayHeaderConfigurationArray{ ApplicationGatewayHeaderConfigurationArgs{...} }
type ApplicationGatewayHeaderConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayHeaderConfigurationArrayOutput() ApplicationGatewayHeaderConfigurationArrayOutput
	ToApplicationGatewayHeaderConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayHeaderConfigurationArrayOutput
}

type ApplicationGatewayHeaderConfigurationArray []ApplicationGatewayHeaderConfigurationInput

func (ApplicationGatewayHeaderConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHeaderConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayHeaderConfigurationArray) ToApplicationGatewayHeaderConfigurationArrayOutput() ApplicationGatewayHeaderConfigurationArrayOutput {
	return i.ToApplicationGatewayHeaderConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayHeaderConfigurationArray) ToApplicationGatewayHeaderConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHeaderConfigurationArrayOutput)
}

// Header configuration of the Actions set in Application Gateway.
type ApplicationGatewayHeaderConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHeaderConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHeaderConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayHeaderConfigurationOutput) ToApplicationGatewayHeaderConfigurationOutput() ApplicationGatewayHeaderConfigurationOutput {
	return o
}

func (o ApplicationGatewayHeaderConfigurationOutput) ToApplicationGatewayHeaderConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationOutput {
	return o
}

// Header name of the header configuration.
func (o ApplicationGatewayHeaderConfigurationOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHeaderConfiguration) *string { return v.HeaderName }).(pulumi.StringPtrOutput)
}

// Header value of the header configuration.
func (o ApplicationGatewayHeaderConfigurationOutput) HeaderValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHeaderConfiguration) *string { return v.HeaderValue }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayHeaderConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHeaderConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHeaderConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayHeaderConfigurationArrayOutput) ToApplicationGatewayHeaderConfigurationArrayOutput() ApplicationGatewayHeaderConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayHeaderConfigurationArrayOutput) ToApplicationGatewayHeaderConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayHeaderConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayHeaderConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayHeaderConfiguration {
		return vs[0].([]ApplicationGatewayHeaderConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayHeaderConfigurationOutput)
}

// Header configuration of the Actions set in Application Gateway.
type ApplicationGatewayHeaderConfigurationResponse struct {
	// Header name of the header configuration.
	HeaderName *string `pulumi:"headerName"`
	// Header value of the header configuration.
	HeaderValue *string `pulumi:"headerValue"`
}

// ApplicationGatewayHeaderConfigurationResponseInput is an input type that accepts ApplicationGatewayHeaderConfigurationResponseArgs and ApplicationGatewayHeaderConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayHeaderConfigurationResponseInput` via:
//
//          ApplicationGatewayHeaderConfigurationResponseArgs{...}
type ApplicationGatewayHeaderConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayHeaderConfigurationResponseOutput() ApplicationGatewayHeaderConfigurationResponseOutput
	ToApplicationGatewayHeaderConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayHeaderConfigurationResponseOutput
}

// Header configuration of the Actions set in Application Gateway.
type ApplicationGatewayHeaderConfigurationResponseArgs struct {
	// Header name of the header configuration.
	HeaderName pulumi.StringPtrInput `pulumi:"headerName"`
	// Header value of the header configuration.
	HeaderValue pulumi.StringPtrInput `pulumi:"headerValue"`
}

func (ApplicationGatewayHeaderConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHeaderConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayHeaderConfigurationResponseArgs) ToApplicationGatewayHeaderConfigurationResponseOutput() ApplicationGatewayHeaderConfigurationResponseOutput {
	return i.ToApplicationGatewayHeaderConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayHeaderConfigurationResponseArgs) ToApplicationGatewayHeaderConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHeaderConfigurationResponseOutput)
}

// ApplicationGatewayHeaderConfigurationResponseArrayInput is an input type that accepts ApplicationGatewayHeaderConfigurationResponseArray and ApplicationGatewayHeaderConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayHeaderConfigurationResponseArrayInput` via:
//
//          ApplicationGatewayHeaderConfigurationResponseArray{ ApplicationGatewayHeaderConfigurationResponseArgs{...} }
type ApplicationGatewayHeaderConfigurationResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayHeaderConfigurationResponseArrayOutput() ApplicationGatewayHeaderConfigurationResponseArrayOutput
	ToApplicationGatewayHeaderConfigurationResponseArrayOutputWithContext(context.Context) ApplicationGatewayHeaderConfigurationResponseArrayOutput
}

type ApplicationGatewayHeaderConfigurationResponseArray []ApplicationGatewayHeaderConfigurationResponseInput

func (ApplicationGatewayHeaderConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHeaderConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayHeaderConfigurationResponseArray) ToApplicationGatewayHeaderConfigurationResponseArrayOutput() ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return i.ToApplicationGatewayHeaderConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayHeaderConfigurationResponseArray) ToApplicationGatewayHeaderConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHeaderConfigurationResponseArrayOutput)
}

// Header configuration of the Actions set in Application Gateway.
type ApplicationGatewayHeaderConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHeaderConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHeaderConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayHeaderConfigurationResponseOutput) ToApplicationGatewayHeaderConfigurationResponseOutput() ApplicationGatewayHeaderConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayHeaderConfigurationResponseOutput) ToApplicationGatewayHeaderConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationResponseOutput {
	return o
}

// Header name of the header configuration.
func (o ApplicationGatewayHeaderConfigurationResponseOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHeaderConfigurationResponse) *string { return v.HeaderName }).(pulumi.StringPtrOutput)
}

// Header value of the header configuration.
func (o ApplicationGatewayHeaderConfigurationResponseOutput) HeaderValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHeaderConfigurationResponse) *string { return v.HeaderValue }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayHeaderConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHeaderConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHeaderConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayHeaderConfigurationResponseArrayOutput) ToApplicationGatewayHeaderConfigurationResponseArrayOutput() ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayHeaderConfigurationResponseArrayOutput) ToApplicationGatewayHeaderConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayHeaderConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayHeaderConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayHeaderConfigurationResponse {
		return vs[0].([]ApplicationGatewayHeaderConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayHeaderConfigurationResponseOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListener struct {
	// Custom error configurations of the HTTP listener.
	CustomErrorConfigurations []ApplicationGatewayCustomError `pulumi:"customErrorConfigurations"`
	// Reference to the FirewallPolicy resource.
	FirewallPolicy *SubResource `pulumi:"firewallPolicy"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort *SubResource `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName *string `pulumi:"hostName"`
	// List of Host names for HTTP Listener that allows special wildcard characters as well.
	HostNames []string `pulumi:"hostNames"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the HTTP listener that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Protocol of the HTTP listener.
	Protocol *string `pulumi:"protocol"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication *bool `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate *SubResource `pulumi:"sslCertificate"`
	// SSL profile resource of the application gateway.
	SslProfile *SubResource `pulumi:"sslProfile"`
}

// ApplicationGatewayHttpListenerInput is an input type that accepts ApplicationGatewayHttpListenerArgs and ApplicationGatewayHttpListenerOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerInput` via:
//
//          ApplicationGatewayHttpListenerArgs{...}
type ApplicationGatewayHttpListenerInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerOutput() ApplicationGatewayHttpListenerOutput
	ToApplicationGatewayHttpListenerOutputWithContext(context.Context) ApplicationGatewayHttpListenerOutput
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerArgs struct {
	// Custom error configurations of the HTTP listener.
	CustomErrorConfigurations ApplicationGatewayCustomErrorArrayInput `pulumi:"customErrorConfigurations"`
	// Reference to the FirewallPolicy resource.
	FirewallPolicy SubResourcePtrInput `pulumi:"firewallPolicy"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort SubResourcePtrInput `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// List of Host names for HTTP Listener that allows special wildcard characters as well.
	HostNames pulumi.StringArrayInput `pulumi:"hostNames"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the HTTP listener that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Protocol of the HTTP listener.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication pulumi.BoolPtrInput `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate SubResourcePtrInput `pulumi:"sslCertificate"`
	// SSL profile resource of the application gateway.
	SslProfile SubResourcePtrInput `pulumi:"sslProfile"`
}

func (ApplicationGatewayHttpListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListener)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerArgs) ToApplicationGatewayHttpListenerOutput() ApplicationGatewayHttpListenerOutput {
	return i.ToApplicationGatewayHttpListenerOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerArgs) ToApplicationGatewayHttpListenerOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerOutput)
}

// ApplicationGatewayHttpListenerArrayInput is an input type that accepts ApplicationGatewayHttpListenerArray and ApplicationGatewayHttpListenerArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerArrayInput` via:
//
//          ApplicationGatewayHttpListenerArray{ ApplicationGatewayHttpListenerArgs{...} }
type ApplicationGatewayHttpListenerArrayInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerArrayOutput() ApplicationGatewayHttpListenerArrayOutput
	ToApplicationGatewayHttpListenerArrayOutputWithContext(context.Context) ApplicationGatewayHttpListenerArrayOutput
}

type ApplicationGatewayHttpListenerArray []ApplicationGatewayHttpListenerInput

func (ApplicationGatewayHttpListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListener)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerArray) ToApplicationGatewayHttpListenerArrayOutput() ApplicationGatewayHttpListenerArrayOutput {
	return i.ToApplicationGatewayHttpListenerArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerArray) ToApplicationGatewayHttpListenerArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerArrayOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListener)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerOutput) ToApplicationGatewayHttpListenerOutput() ApplicationGatewayHttpListenerOutput {
	return o
}

func (o ApplicationGatewayHttpListenerOutput) ToApplicationGatewayHttpListenerOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerOutput {
	return o
}

// Custom error configurations of the HTTP listener.
func (o ApplicationGatewayHttpListenerOutput) CustomErrorConfigurations() ApplicationGatewayCustomErrorArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) []ApplicationGatewayCustomError {
		return v.CustomErrorConfigurations
	}).(ApplicationGatewayCustomErrorArrayOutput)
}

// Reference to the FirewallPolicy resource.
func (o ApplicationGatewayHttpListenerOutput) FirewallPolicy() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *SubResource { return v.FirewallPolicy }).(SubResourcePtrOutput)
}

// Frontend IP configuration resource of an application gateway.
func (o ApplicationGatewayHttpListenerOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// Frontend port resource of an application gateway.
func (o ApplicationGatewayHttpListenerOutput) FrontendPort() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *SubResource { return v.FrontendPort }).(SubResourcePtrOutput)
}

// Host name of HTTP listener.
func (o ApplicationGatewayHttpListenerOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// List of Host names for HTTP Listener that allows special wildcard characters as well.
func (o ApplicationGatewayHttpListenerOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) []string { return v.HostNames }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o ApplicationGatewayHttpListenerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the HTTP listener that is unique within an Application Gateway.
func (o ApplicationGatewayHttpListenerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol of the HTTP listener.
func (o ApplicationGatewayHttpListenerOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Applicable only if protocol is https. Enables SNI for multi-hosting.
func (o ApplicationGatewayHttpListenerOutput) RequireServerNameIndication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *bool { return v.RequireServerNameIndication }).(pulumi.BoolPtrOutput)
}

// SSL certificate resource of an application gateway.
func (o ApplicationGatewayHttpListenerOutput) SslCertificate() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *SubResource { return v.SslCertificate }).(SubResourcePtrOutput)
}

// SSL profile resource of the application gateway.
func (o ApplicationGatewayHttpListenerOutput) SslProfile() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *SubResource { return v.SslProfile }).(SubResourcePtrOutput)
}

type ApplicationGatewayHttpListenerArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListener)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerArrayOutput) ToApplicationGatewayHttpListenerArrayOutput() ApplicationGatewayHttpListenerArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerArrayOutput) ToApplicationGatewayHttpListenerArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayHttpListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayHttpListener {
		return vs[0].([]ApplicationGatewayHttpListener)[vs[1].(int)]
	}).(ApplicationGatewayHttpListenerOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerResponse struct {
	// Custom error configurations of the HTTP listener.
	CustomErrorConfigurations []ApplicationGatewayCustomErrorResponse `pulumi:"customErrorConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Reference to the FirewallPolicy resource.
	FirewallPolicy *SubResourceResponse `pulumi:"firewallPolicy"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort *SubResourceResponse `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName *string `pulumi:"hostName"`
	// List of Host names for HTTP Listener that allows special wildcard characters as well.
	HostNames []string `pulumi:"hostNames"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the HTTP listener that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Protocol of the HTTP listener.
	Protocol *string `pulumi:"protocol"`
	// The provisioning state of the HTTP listener resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication *bool `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate *SubResourceResponse `pulumi:"sslCertificate"`
	// SSL profile resource of the application gateway.
	SslProfile *SubResourceResponse `pulumi:"sslProfile"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// ApplicationGatewayHttpListenerResponseInput is an input type that accepts ApplicationGatewayHttpListenerResponseArgs and ApplicationGatewayHttpListenerResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerResponseInput` via:
//
//          ApplicationGatewayHttpListenerResponseArgs{...}
type ApplicationGatewayHttpListenerResponseInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerResponseOutput() ApplicationGatewayHttpListenerResponseOutput
	ToApplicationGatewayHttpListenerResponseOutputWithContext(context.Context) ApplicationGatewayHttpListenerResponseOutput
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerResponseArgs struct {
	// Custom error configurations of the HTTP listener.
	CustomErrorConfigurations ApplicationGatewayCustomErrorResponseArrayInput `pulumi:"customErrorConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Reference to the FirewallPolicy resource.
	FirewallPolicy SubResourceResponsePtrInput `pulumi:"firewallPolicy"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration SubResourceResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort SubResourceResponsePtrInput `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// List of Host names for HTTP Listener that allows special wildcard characters as well.
	HostNames pulumi.StringArrayInput `pulumi:"hostNames"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the HTTP listener that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Protocol of the HTTP listener.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The provisioning state of the HTTP listener resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication pulumi.BoolPtrInput `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate SubResourceResponsePtrInput `pulumi:"sslCertificate"`
	// SSL profile resource of the application gateway.
	SslProfile SubResourceResponsePtrInput `pulumi:"sslProfile"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationGatewayHttpListenerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListenerResponse)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerResponseArgs) ToApplicationGatewayHttpListenerResponseOutput() ApplicationGatewayHttpListenerResponseOutput {
	return i.ToApplicationGatewayHttpListenerResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerResponseArgs) ToApplicationGatewayHttpListenerResponseOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerResponseOutput)
}

// ApplicationGatewayHttpListenerResponseArrayInput is an input type that accepts ApplicationGatewayHttpListenerResponseArray and ApplicationGatewayHttpListenerResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerResponseArrayInput` via:
//
//          ApplicationGatewayHttpListenerResponseArray{ ApplicationGatewayHttpListenerResponseArgs{...} }
type ApplicationGatewayHttpListenerResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerResponseArrayOutput() ApplicationGatewayHttpListenerResponseArrayOutput
	ToApplicationGatewayHttpListenerResponseArrayOutputWithContext(context.Context) ApplicationGatewayHttpListenerResponseArrayOutput
}

type ApplicationGatewayHttpListenerResponseArray []ApplicationGatewayHttpListenerResponseInput

func (ApplicationGatewayHttpListenerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListenerResponse)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerResponseArray) ToApplicationGatewayHttpListenerResponseArrayOutput() ApplicationGatewayHttpListenerResponseArrayOutput {
	return i.ToApplicationGatewayHttpListenerResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerResponseArray) ToApplicationGatewayHttpListenerResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerResponseArrayOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListenerResponse)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerResponseOutput) ToApplicationGatewayHttpListenerResponseOutput() ApplicationGatewayHttpListenerResponseOutput {
	return o
}

func (o ApplicationGatewayHttpListenerResponseOutput) ToApplicationGatewayHttpListenerResponseOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerResponseOutput {
	return o
}

// Custom error configurations of the HTTP listener.
func (o ApplicationGatewayHttpListenerResponseOutput) CustomErrorConfigurations() ApplicationGatewayCustomErrorResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) []ApplicationGatewayCustomErrorResponse {
		return v.CustomErrorConfigurations
	}).(ApplicationGatewayCustomErrorResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayHttpListenerResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Reference to the FirewallPolicy resource.
func (o ApplicationGatewayHttpListenerResponseOutput) FirewallPolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *SubResourceResponse { return v.FirewallPolicy }).(SubResourceResponsePtrOutput)
}

// Frontend IP configuration resource of an application gateway.
func (o ApplicationGatewayHttpListenerResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// Frontend port resource of an application gateway.
func (o ApplicationGatewayHttpListenerResponseOutput) FrontendPort() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *SubResourceResponse { return v.FrontendPort }).(SubResourceResponsePtrOutput)
}

// Host name of HTTP listener.
func (o ApplicationGatewayHttpListenerResponseOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// List of Host names for HTTP Listener that allows special wildcard characters as well.
func (o ApplicationGatewayHttpListenerResponseOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) []string { return v.HostNames }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o ApplicationGatewayHttpListenerResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the HTTP listener that is unique within an Application Gateway.
func (o ApplicationGatewayHttpListenerResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol of the HTTP listener.
func (o ApplicationGatewayHttpListenerResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The provisioning state of the HTTP listener resource.
func (o ApplicationGatewayHttpListenerResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Applicable only if protocol is https. Enables SNI for multi-hosting.
func (o ApplicationGatewayHttpListenerResponseOutput) RequireServerNameIndication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *bool { return v.RequireServerNameIndication }).(pulumi.BoolPtrOutput)
}

// SSL certificate resource of an application gateway.
func (o ApplicationGatewayHttpListenerResponseOutput) SslCertificate() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *SubResourceResponse { return v.SslCertificate }).(SubResourceResponsePtrOutput)
}

// SSL profile resource of the application gateway.
func (o ApplicationGatewayHttpListenerResponseOutput) SslProfile() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *SubResourceResponse { return v.SslProfile }).(SubResourceResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayHttpListenerResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayHttpListenerResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListenerResponse)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerResponseArrayOutput) ToApplicationGatewayHttpListenerResponseArrayOutput() ApplicationGatewayHttpListenerResponseArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerResponseArrayOutput) ToApplicationGatewayHttpListenerResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerResponseArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayHttpListenerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayHttpListenerResponse {
		return vs[0].([]ApplicationGatewayHttpListenerResponse)[vs[1].(int)]
	}).(ApplicationGatewayHttpListenerResponseOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the IP configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Reference to the subnet resource. A subnet from where application gateway gets its private address.
	Subnet *SubResource `pulumi:"subnet"`
}

// ApplicationGatewayIPConfigurationInput is an input type that accepts ApplicationGatewayIPConfigurationArgs and ApplicationGatewayIPConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationInput` via:
//
//          ApplicationGatewayIPConfigurationArgs{...}
type ApplicationGatewayIPConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationOutput() ApplicationGatewayIPConfigurationOutput
	ToApplicationGatewayIPConfigurationOutputWithContext(context.Context) ApplicationGatewayIPConfigurationOutput
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the IP configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference to the subnet resource. A subnet from where application gateway gets its private address.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (ApplicationGatewayIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationArgs) ToApplicationGatewayIPConfigurationOutput() ApplicationGatewayIPConfigurationOutput {
	return i.ToApplicationGatewayIPConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationArgs) ToApplicationGatewayIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationOutput)
}

// ApplicationGatewayIPConfigurationArrayInput is an input type that accepts ApplicationGatewayIPConfigurationArray and ApplicationGatewayIPConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationArrayInput` via:
//
//          ApplicationGatewayIPConfigurationArray{ ApplicationGatewayIPConfigurationArgs{...} }
type ApplicationGatewayIPConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationArrayOutput() ApplicationGatewayIPConfigurationArrayOutput
	ToApplicationGatewayIPConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayIPConfigurationArrayOutput
}

type ApplicationGatewayIPConfigurationArray []ApplicationGatewayIPConfigurationInput

func (ApplicationGatewayIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationArray) ToApplicationGatewayIPConfigurationArrayOutput() ApplicationGatewayIPConfigurationArrayOutput {
	return i.ToApplicationGatewayIPConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationArray) ToApplicationGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationArrayOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationOutput) ToApplicationGatewayIPConfigurationOutput() ApplicationGatewayIPConfigurationOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationOutput) ToApplicationGatewayIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationOutput {
	return o
}

// Resource ID.
func (o ApplicationGatewayIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the IP configuration that is unique within an Application Gateway.
func (o ApplicationGatewayIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to the subnet resource. A subnet from where application gateway gets its private address.
func (o ApplicationGatewayIPConfigurationOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type ApplicationGatewayIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationArrayOutput) ToApplicationGatewayIPConfigurationArrayOutput() ApplicationGatewayIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationArrayOutput) ToApplicationGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayIPConfiguration {
		return vs[0].([]ApplicationGatewayIPConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayIPConfigurationOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the IP configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the application gateway IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Reference to the subnet resource. A subnet from where application gateway gets its private address.
	Subnet *SubResourceResponse `pulumi:"subnet"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// ApplicationGatewayIPConfigurationResponseInput is an input type that accepts ApplicationGatewayIPConfigurationResponseArgs and ApplicationGatewayIPConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationResponseInput` via:
//
//          ApplicationGatewayIPConfigurationResponseArgs{...}
type ApplicationGatewayIPConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationResponseOutput() ApplicationGatewayIPConfigurationResponseOutput
	ToApplicationGatewayIPConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayIPConfigurationResponseOutput
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the IP configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the application gateway IP configuration resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Reference to the subnet resource. A subnet from where application gateway gets its private address.
	Subnet SubResourceResponsePtrInput `pulumi:"subnet"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationGatewayIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationResponseArgs) ToApplicationGatewayIPConfigurationResponseOutput() ApplicationGatewayIPConfigurationResponseOutput {
	return i.ToApplicationGatewayIPConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationResponseArgs) ToApplicationGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationResponseOutput)
}

// ApplicationGatewayIPConfigurationResponseArrayInput is an input type that accepts ApplicationGatewayIPConfigurationResponseArray and ApplicationGatewayIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationResponseArrayInput` via:
//
//          ApplicationGatewayIPConfigurationResponseArray{ ApplicationGatewayIPConfigurationResponseArgs{...} }
type ApplicationGatewayIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationResponseArrayOutput() ApplicationGatewayIPConfigurationResponseArrayOutput
	ToApplicationGatewayIPConfigurationResponseArrayOutputWithContext(context.Context) ApplicationGatewayIPConfigurationResponseArrayOutput
}

type ApplicationGatewayIPConfigurationResponseArray []ApplicationGatewayIPConfigurationResponseInput

func (ApplicationGatewayIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationResponseArray) ToApplicationGatewayIPConfigurationResponseArrayOutput() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return i.ToApplicationGatewayIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationResponseArray) ToApplicationGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationResponseArrayOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationResponseOutput) ToApplicationGatewayIPConfigurationResponseOutput() ApplicationGatewayIPConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationResponseOutput) ToApplicationGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the IP configuration that is unique within an Application Gateway.
func (o ApplicationGatewayIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the application gateway IP configuration resource.
func (o ApplicationGatewayIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Reference to the subnet resource. A subnet from where application gateway gets its private address.
func (o ApplicationGatewayIPConfigurationResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayIPConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationResponseArrayOutput) ToApplicationGatewayIPConfigurationResponseArrayOutput() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationResponseArrayOutput) ToApplicationGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayIPConfigurationResponse {
		return vs[0].([]ApplicationGatewayIPConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayIPConfigurationResponseOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRule struct {
	// Backend address pool resource of URL path map path rule.
	BackendAddressPool *SubResource `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map path rule.
	BackendHttpSettings *SubResource `pulumi:"backendHttpSettings"`
	// Reference to the FirewallPolicy resource.
	FirewallPolicy *SubResource `pulumi:"firewallPolicy"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the path rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path rules of URL path map.
	Paths []string `pulumi:"paths"`
	// Redirect configuration resource of URL path map path rule.
	RedirectConfiguration *SubResource `pulumi:"redirectConfiguration"`
	// Rewrite rule set resource of URL path map path rule.
	RewriteRuleSet *SubResource `pulumi:"rewriteRuleSet"`
}

// ApplicationGatewayPathRuleInput is an input type that accepts ApplicationGatewayPathRuleArgs and ApplicationGatewayPathRuleOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleInput` via:
//
//          ApplicationGatewayPathRuleArgs{...}
type ApplicationGatewayPathRuleInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleOutput() ApplicationGatewayPathRuleOutput
	ToApplicationGatewayPathRuleOutputWithContext(context.Context) ApplicationGatewayPathRuleOutput
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleArgs struct {
	// Backend address pool resource of URL path map path rule.
	BackendAddressPool SubResourcePtrInput `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map path rule.
	BackendHttpSettings SubResourcePtrInput `pulumi:"backendHttpSettings"`
	// Reference to the FirewallPolicy resource.
	FirewallPolicy SubResourcePtrInput `pulumi:"firewallPolicy"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the path rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rules of URL path map.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// Redirect configuration resource of URL path map path rule.
	RedirectConfiguration SubResourcePtrInput `pulumi:"redirectConfiguration"`
	// Rewrite rule set resource of URL path map path rule.
	RewriteRuleSet SubResourcePtrInput `pulumi:"rewriteRuleSet"`
}

func (ApplicationGatewayPathRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRule)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleArgs) ToApplicationGatewayPathRuleOutput() ApplicationGatewayPathRuleOutput {
	return i.ToApplicationGatewayPathRuleOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleArgs) ToApplicationGatewayPathRuleOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleOutput)
}

// ApplicationGatewayPathRuleArrayInput is an input type that accepts ApplicationGatewayPathRuleArray and ApplicationGatewayPathRuleArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleArrayInput` via:
//
//          ApplicationGatewayPathRuleArray{ ApplicationGatewayPathRuleArgs{...} }
type ApplicationGatewayPathRuleArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleArrayOutput() ApplicationGatewayPathRuleArrayOutput
	ToApplicationGatewayPathRuleArrayOutputWithContext(context.Context) ApplicationGatewayPathRuleArrayOutput
}

type ApplicationGatewayPathRuleArray []ApplicationGatewayPathRuleInput

func (ApplicationGatewayPathRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRule)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleArray) ToApplicationGatewayPathRuleArrayOutput() ApplicationGatewayPathRuleArrayOutput {
	return i.ToApplicationGatewayPathRuleArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleArray) ToApplicationGatewayPathRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleArrayOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRule)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleOutput) ToApplicationGatewayPathRuleOutput() ApplicationGatewayPathRuleOutput {
	return o
}

func (o ApplicationGatewayPathRuleOutput) ToApplicationGatewayPathRuleOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleOutput {
	return o
}

// Backend address pool resource of URL path map path rule.
func (o ApplicationGatewayPathRuleOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *SubResource { return v.BackendAddressPool }).(SubResourcePtrOutput)
}

// Backend http settings resource of URL path map path rule.
func (o ApplicationGatewayPathRuleOutput) BackendHttpSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *SubResource { return v.BackendHttpSettings }).(SubResourcePtrOutput)
}

// Reference to the FirewallPolicy resource.
func (o ApplicationGatewayPathRuleOutput) FirewallPolicy() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *SubResource { return v.FirewallPolicy }).(SubResourcePtrOutput)
}

// Resource ID.
func (o ApplicationGatewayPathRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the path rule that is unique within an Application Gateway.
func (o ApplicationGatewayPathRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rules of URL path map.
func (o ApplicationGatewayPathRuleOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Redirect configuration resource of URL path map path rule.
func (o ApplicationGatewayPathRuleOutput) RedirectConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *SubResource { return v.RedirectConfiguration }).(SubResourcePtrOutput)
}

// Rewrite rule set resource of URL path map path rule.
func (o ApplicationGatewayPathRuleOutput) RewriteRuleSet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *SubResource { return v.RewriteRuleSet }).(SubResourcePtrOutput)
}

type ApplicationGatewayPathRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRule)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleArrayOutput) ToApplicationGatewayPathRuleArrayOutput() ApplicationGatewayPathRuleArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleArrayOutput) ToApplicationGatewayPathRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPathRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPathRule {
		return vs[0].([]ApplicationGatewayPathRule)[vs[1].(int)]
	}).(ApplicationGatewayPathRuleOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleResponse struct {
	// Backend address pool resource of URL path map path rule.
	BackendAddressPool *SubResourceResponse `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map path rule.
	BackendHttpSettings *SubResourceResponse `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Reference to the FirewallPolicy resource.
	FirewallPolicy *SubResourceResponse `pulumi:"firewallPolicy"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the path rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path rules of URL path map.
	Paths []string `pulumi:"paths"`
	// The provisioning state of the path rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Redirect configuration resource of URL path map path rule.
	RedirectConfiguration *SubResourceResponse `pulumi:"redirectConfiguration"`
	// Rewrite rule set resource of URL path map path rule.
	RewriteRuleSet *SubResourceResponse `pulumi:"rewriteRuleSet"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// ApplicationGatewayPathRuleResponseInput is an input type that accepts ApplicationGatewayPathRuleResponseArgs and ApplicationGatewayPathRuleResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleResponseInput` via:
//
//          ApplicationGatewayPathRuleResponseArgs{...}
type ApplicationGatewayPathRuleResponseInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleResponseOutput() ApplicationGatewayPathRuleResponseOutput
	ToApplicationGatewayPathRuleResponseOutputWithContext(context.Context) ApplicationGatewayPathRuleResponseOutput
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleResponseArgs struct {
	// Backend address pool resource of URL path map path rule.
	BackendAddressPool SubResourceResponsePtrInput `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map path rule.
	BackendHttpSettings SubResourceResponsePtrInput `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Reference to the FirewallPolicy resource.
	FirewallPolicy SubResourceResponsePtrInput `pulumi:"firewallPolicy"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the path rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rules of URL path map.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// The provisioning state of the path rule resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Redirect configuration resource of URL path map path rule.
	RedirectConfiguration SubResourceResponsePtrInput `pulumi:"redirectConfiguration"`
	// Rewrite rule set resource of URL path map path rule.
	RewriteRuleSet SubResourceResponsePtrInput `pulumi:"rewriteRuleSet"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationGatewayPathRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleResponseArgs) ToApplicationGatewayPathRuleResponseOutput() ApplicationGatewayPathRuleResponseOutput {
	return i.ToApplicationGatewayPathRuleResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleResponseArgs) ToApplicationGatewayPathRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleResponseOutput)
}

// ApplicationGatewayPathRuleResponseArrayInput is an input type that accepts ApplicationGatewayPathRuleResponseArray and ApplicationGatewayPathRuleResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleResponseArrayInput` via:
//
//          ApplicationGatewayPathRuleResponseArray{ ApplicationGatewayPathRuleResponseArgs{...} }
type ApplicationGatewayPathRuleResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleResponseArrayOutput() ApplicationGatewayPathRuleResponseArrayOutput
	ToApplicationGatewayPathRuleResponseArrayOutputWithContext(context.Context) ApplicationGatewayPathRuleResponseArrayOutput
}

type ApplicationGatewayPathRuleResponseArray []ApplicationGatewayPathRuleResponseInput

func (ApplicationGatewayPathRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleResponseArray) ToApplicationGatewayPathRuleResponseArrayOutput() ApplicationGatewayPathRuleResponseArrayOutput {
	return i.ToApplicationGatewayPathRuleResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleResponseArray) ToApplicationGatewayPathRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleResponseArrayOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleResponseOutput) ToApplicationGatewayPathRuleResponseOutput() ApplicationGatewayPathRuleResponseOutput {
	return o
}

func (o ApplicationGatewayPathRuleResponseOutput) ToApplicationGatewayPathRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleResponseOutput {
	return o
}

// Backend address pool resource of URL path map path rule.
func (o ApplicationGatewayPathRuleResponseOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponsePtrOutput)
}

// Backend http settings resource of URL path map path rule.
func (o ApplicationGatewayPathRuleResponseOutput) BackendHttpSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *SubResourceResponse { return v.BackendHttpSettings }).(SubResourceResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayPathRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Reference to the FirewallPolicy resource.
func (o ApplicationGatewayPathRuleResponseOutput) FirewallPolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *SubResourceResponse { return v.FirewallPolicy }).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o ApplicationGatewayPathRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the path rule that is unique within an Application Gateway.
func (o ApplicationGatewayPathRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rules of URL path map.
func (o ApplicationGatewayPathRuleResponseOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// The provisioning state of the path rule resource.
func (o ApplicationGatewayPathRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Redirect configuration resource of URL path map path rule.
func (o ApplicationGatewayPathRuleResponseOutput) RedirectConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *SubResourceResponse { return v.RedirectConfiguration }).(SubResourceResponsePtrOutput)
}

// Rewrite rule set resource of URL path map path rule.
func (o ApplicationGatewayPathRuleResponseOutput) RewriteRuleSet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *SubResourceResponse { return v.RewriteRuleSet }).(SubResourceResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayPathRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayPathRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleResponseArrayOutput) ToApplicationGatewayPathRuleResponseArrayOutput() ApplicationGatewayPathRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleResponseArrayOutput) ToApplicationGatewayPathRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPathRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPathRuleResponse {
		return vs[0].([]ApplicationGatewayPathRuleResponse)[vs[1].(int)]
	}).(ApplicationGatewayPathRuleResponseOutput)
}

// Private Endpoint connection on an application gateway.
type ApplicationGatewayPrivateEndpointConnectionResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The consumer link id.
	LinkIdentifier string `pulumi:"linkIdentifier"`
	// Name of the private endpoint connection on an application gateway.
	Name *string `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the application gateway private endpoint connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// ApplicationGatewayPrivateEndpointConnectionResponseInput is an input type that accepts ApplicationGatewayPrivateEndpointConnectionResponseArgs and ApplicationGatewayPrivateEndpointConnectionResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateEndpointConnectionResponseInput` via:
//
//          ApplicationGatewayPrivateEndpointConnectionResponseArgs{...}
type ApplicationGatewayPrivateEndpointConnectionResponseInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateEndpointConnectionResponseOutput() ApplicationGatewayPrivateEndpointConnectionResponseOutput
	ToApplicationGatewayPrivateEndpointConnectionResponseOutputWithContext(context.Context) ApplicationGatewayPrivateEndpointConnectionResponseOutput
}

// Private Endpoint connection on an application gateway.
type ApplicationGatewayPrivateEndpointConnectionResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The consumer link id.
	LinkIdentifier pulumi.StringInput `pulumi:"linkIdentifier"`
	// Name of the private endpoint connection on an application gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint PrivateEndpointResponseInput `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponsePtrInput `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the application gateway private endpoint connection resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationGatewayPrivateEndpointConnectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateEndpointConnectionResponse)(nil)).Elem()
}

func (i ApplicationGatewayPrivateEndpointConnectionResponseArgs) ToApplicationGatewayPrivateEndpointConnectionResponseOutput() ApplicationGatewayPrivateEndpointConnectionResponseOutput {
	return i.ToApplicationGatewayPrivateEndpointConnectionResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateEndpointConnectionResponseArgs) ToApplicationGatewayPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) ApplicationGatewayPrivateEndpointConnectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateEndpointConnectionResponseOutput)
}

// ApplicationGatewayPrivateEndpointConnectionResponseArrayInput is an input type that accepts ApplicationGatewayPrivateEndpointConnectionResponseArray and ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateEndpointConnectionResponseArrayInput` via:
//
//          ApplicationGatewayPrivateEndpointConnectionResponseArray{ ApplicationGatewayPrivateEndpointConnectionResponseArgs{...} }
type ApplicationGatewayPrivateEndpointConnectionResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateEndpointConnectionResponseArrayOutput() ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput
	ToApplicationGatewayPrivateEndpointConnectionResponseArrayOutputWithContext(context.Context) ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput
}

type ApplicationGatewayPrivateEndpointConnectionResponseArray []ApplicationGatewayPrivateEndpointConnectionResponseInput

func (ApplicationGatewayPrivateEndpointConnectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateEndpointConnectionResponse)(nil)).Elem()
}

func (i ApplicationGatewayPrivateEndpointConnectionResponseArray) ToApplicationGatewayPrivateEndpointConnectionResponseArrayOutput() ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput {
	return i.ToApplicationGatewayPrivateEndpointConnectionResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateEndpointConnectionResponseArray) ToApplicationGatewayPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput)
}

// Private Endpoint connection on an application gateway.
type ApplicationGatewayPrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) ToApplicationGatewayPrivateEndpointConnectionResponseOutput() ApplicationGatewayPrivateEndpointConnectionResponseOutput {
	return o
}

func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) ToApplicationGatewayPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) ApplicationGatewayPrivateEndpointConnectionResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateEndpointConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateEndpointConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The consumer link id.
func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) LinkIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateEndpointConnectionResponse) string { return v.LinkIdentifier }).(pulumi.StringOutput)
}

// Name of the private endpoint connection on an application gateway.
func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateEndpointConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource of private end point.
func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateEndpointConnectionResponse) PrivateEndpointResponse {
		return v.PrivateEndpoint
	}).(PrivateEndpointResponseOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateEndpointConnectionResponse) *PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// The provisioning state of the application gateway private endpoint connection resource.
func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewayPrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput) ToApplicationGatewayPrivateEndpointConnectionResponseArrayOutput() ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput) ToApplicationGatewayPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPrivateEndpointConnectionResponse {
		return vs[0].([]ApplicationGatewayPrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(ApplicationGatewayPrivateEndpointConnectionResponseOutput)
}

// Private Link Configuration on an application gateway.
type ApplicationGatewayPrivateLinkConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of application gateway private link ip configurations.
	IpConfigurations []ApplicationGatewayPrivateLinkIpConfiguration `pulumi:"ipConfigurations"`
	// Name of the private link configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
}

// ApplicationGatewayPrivateLinkConfigurationInput is an input type that accepts ApplicationGatewayPrivateLinkConfigurationArgs and ApplicationGatewayPrivateLinkConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateLinkConfigurationInput` via:
//
//          ApplicationGatewayPrivateLinkConfigurationArgs{...}
type ApplicationGatewayPrivateLinkConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateLinkConfigurationOutput() ApplicationGatewayPrivateLinkConfigurationOutput
	ToApplicationGatewayPrivateLinkConfigurationOutputWithContext(context.Context) ApplicationGatewayPrivateLinkConfigurationOutput
}

// Private Link Configuration on an application gateway.
type ApplicationGatewayPrivateLinkConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// An array of application gateway private link ip configurations.
	IpConfigurations ApplicationGatewayPrivateLinkIpConfigurationArrayInput `pulumi:"ipConfigurations"`
	// Name of the private link configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ApplicationGatewayPrivateLinkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateLinkConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayPrivateLinkConfigurationArgs) ToApplicationGatewayPrivateLinkConfigurationOutput() ApplicationGatewayPrivateLinkConfigurationOutput {
	return i.ToApplicationGatewayPrivateLinkConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateLinkConfigurationArgs) ToApplicationGatewayPrivateLinkConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateLinkConfigurationOutput)
}

// ApplicationGatewayPrivateLinkConfigurationArrayInput is an input type that accepts ApplicationGatewayPrivateLinkConfigurationArray and ApplicationGatewayPrivateLinkConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateLinkConfigurationArrayInput` via:
//
//          ApplicationGatewayPrivateLinkConfigurationArray{ ApplicationGatewayPrivateLinkConfigurationArgs{...} }
type ApplicationGatewayPrivateLinkConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateLinkConfigurationArrayOutput() ApplicationGatewayPrivateLinkConfigurationArrayOutput
	ToApplicationGatewayPrivateLinkConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayPrivateLinkConfigurationArrayOutput
}

type ApplicationGatewayPrivateLinkConfigurationArray []ApplicationGatewayPrivateLinkConfigurationInput

func (ApplicationGatewayPrivateLinkConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateLinkConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayPrivateLinkConfigurationArray) ToApplicationGatewayPrivateLinkConfigurationArrayOutput() ApplicationGatewayPrivateLinkConfigurationArrayOutput {
	return i.ToApplicationGatewayPrivateLinkConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateLinkConfigurationArray) ToApplicationGatewayPrivateLinkConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateLinkConfigurationArrayOutput)
}

// Private Link Configuration on an application gateway.
type ApplicationGatewayPrivateLinkConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateLinkConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkConfigurationOutput) ToApplicationGatewayPrivateLinkConfigurationOutput() ApplicationGatewayPrivateLinkConfigurationOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkConfigurationOutput) ToApplicationGatewayPrivateLinkConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationOutput {
	return o
}

// Resource ID.
func (o ApplicationGatewayPrivateLinkConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of application gateway private link ip configurations.
func (o ApplicationGatewayPrivateLinkConfigurationOutput) IpConfigurations() ApplicationGatewayPrivateLinkIpConfigurationArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfiguration) []ApplicationGatewayPrivateLinkIpConfiguration {
		return v.IpConfigurations
	}).(ApplicationGatewayPrivateLinkIpConfigurationArrayOutput)
}

// Name of the private link configuration that is unique within an Application Gateway.
func (o ApplicationGatewayPrivateLinkConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayPrivateLinkConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateLinkConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkConfigurationArrayOutput) ToApplicationGatewayPrivateLinkConfigurationArrayOutput() ApplicationGatewayPrivateLinkConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkConfigurationArrayOutput) ToApplicationGatewayPrivateLinkConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPrivateLinkConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPrivateLinkConfiguration {
		return vs[0].([]ApplicationGatewayPrivateLinkConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayPrivateLinkConfigurationOutput)
}

// Private Link Configuration on an application gateway.
type ApplicationGatewayPrivateLinkConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of application gateway private link ip configurations.
	IpConfigurations []ApplicationGatewayPrivateLinkIpConfigurationResponse `pulumi:"ipConfigurations"`
	// Name of the private link configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the application gateway private link configuration.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// ApplicationGatewayPrivateLinkConfigurationResponseInput is an input type that accepts ApplicationGatewayPrivateLinkConfigurationResponseArgs and ApplicationGatewayPrivateLinkConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateLinkConfigurationResponseInput` via:
//
//          ApplicationGatewayPrivateLinkConfigurationResponseArgs{...}
type ApplicationGatewayPrivateLinkConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateLinkConfigurationResponseOutput() ApplicationGatewayPrivateLinkConfigurationResponseOutput
	ToApplicationGatewayPrivateLinkConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayPrivateLinkConfigurationResponseOutput
}

// Private Link Configuration on an application gateway.
type ApplicationGatewayPrivateLinkConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// An array of application gateway private link ip configurations.
	IpConfigurations ApplicationGatewayPrivateLinkIpConfigurationResponseArrayInput `pulumi:"ipConfigurations"`
	// Name of the private link configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the application gateway private link configuration.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationGatewayPrivateLinkConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateLinkConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayPrivateLinkConfigurationResponseArgs) ToApplicationGatewayPrivateLinkConfigurationResponseOutput() ApplicationGatewayPrivateLinkConfigurationResponseOutput {
	return i.ToApplicationGatewayPrivateLinkConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateLinkConfigurationResponseArgs) ToApplicationGatewayPrivateLinkConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateLinkConfigurationResponseOutput)
}

// ApplicationGatewayPrivateLinkConfigurationResponseArrayInput is an input type that accepts ApplicationGatewayPrivateLinkConfigurationResponseArray and ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateLinkConfigurationResponseArrayInput` via:
//
//          ApplicationGatewayPrivateLinkConfigurationResponseArray{ ApplicationGatewayPrivateLinkConfigurationResponseArgs{...} }
type ApplicationGatewayPrivateLinkConfigurationResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateLinkConfigurationResponseArrayOutput() ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput
	ToApplicationGatewayPrivateLinkConfigurationResponseArrayOutputWithContext(context.Context) ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput
}

type ApplicationGatewayPrivateLinkConfigurationResponseArray []ApplicationGatewayPrivateLinkConfigurationResponseInput

func (ApplicationGatewayPrivateLinkConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateLinkConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayPrivateLinkConfigurationResponseArray) ToApplicationGatewayPrivateLinkConfigurationResponseArrayOutput() ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput {
	return i.ToApplicationGatewayPrivateLinkConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateLinkConfigurationResponseArray) ToApplicationGatewayPrivateLinkConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput)
}

// Private Link Configuration on an application gateway.
type ApplicationGatewayPrivateLinkConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateLinkConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkConfigurationResponseOutput) ToApplicationGatewayPrivateLinkConfigurationResponseOutput() ApplicationGatewayPrivateLinkConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkConfigurationResponseOutput) ToApplicationGatewayPrivateLinkConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayPrivateLinkConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayPrivateLinkConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of application gateway private link ip configurations.
func (o ApplicationGatewayPrivateLinkConfigurationResponseOutput) IpConfigurations() ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfigurationResponse) []ApplicationGatewayPrivateLinkIpConfigurationResponse {
		return v.IpConfigurations
	}).(ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput)
}

// Name of the private link configuration that is unique within an Application Gateway.
func (o ApplicationGatewayPrivateLinkConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the application gateway private link configuration.
func (o ApplicationGatewayPrivateLinkConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewayPrivateLinkConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateLinkConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput) ToApplicationGatewayPrivateLinkConfigurationResponseArrayOutput() ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput) ToApplicationGatewayPrivateLinkConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPrivateLinkConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPrivateLinkConfigurationResponse {
		return vs[0].([]ApplicationGatewayPrivateLinkConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayPrivateLinkConfigurationResponseOutput)
}

// The application gateway private link ip configuration.
type ApplicationGatewayPrivateLinkIpConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of application gateway private link ip configuration.
	Name *string `pulumi:"name"`
	// Whether the ip configuration is primary or not.
	Primary *bool `pulumi:"primary"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Reference to the subnet resource.
	Subnet *SubResource `pulumi:"subnet"`
}

// ApplicationGatewayPrivateLinkIpConfigurationInput is an input type that accepts ApplicationGatewayPrivateLinkIpConfigurationArgs and ApplicationGatewayPrivateLinkIpConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateLinkIpConfigurationInput` via:
//
//          ApplicationGatewayPrivateLinkIpConfigurationArgs{...}
type ApplicationGatewayPrivateLinkIpConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateLinkIpConfigurationOutput() ApplicationGatewayPrivateLinkIpConfigurationOutput
	ToApplicationGatewayPrivateLinkIpConfigurationOutputWithContext(context.Context) ApplicationGatewayPrivateLinkIpConfigurationOutput
}

// The application gateway private link ip configuration.
type ApplicationGatewayPrivateLinkIpConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of application gateway private link ip configuration.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether the ip configuration is primary or not.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Reference to the subnet resource.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (ApplicationGatewayPrivateLinkIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateLinkIpConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayPrivateLinkIpConfigurationArgs) ToApplicationGatewayPrivateLinkIpConfigurationOutput() ApplicationGatewayPrivateLinkIpConfigurationOutput {
	return i.ToApplicationGatewayPrivateLinkIpConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateLinkIpConfigurationArgs) ToApplicationGatewayPrivateLinkIpConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateLinkIpConfigurationOutput)
}

// ApplicationGatewayPrivateLinkIpConfigurationArrayInput is an input type that accepts ApplicationGatewayPrivateLinkIpConfigurationArray and ApplicationGatewayPrivateLinkIpConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateLinkIpConfigurationArrayInput` via:
//
//          ApplicationGatewayPrivateLinkIpConfigurationArray{ ApplicationGatewayPrivateLinkIpConfigurationArgs{...} }
type ApplicationGatewayPrivateLinkIpConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateLinkIpConfigurationArrayOutput() ApplicationGatewayPrivateLinkIpConfigurationArrayOutput
	ToApplicationGatewayPrivateLinkIpConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayPrivateLinkIpConfigurationArrayOutput
}

type ApplicationGatewayPrivateLinkIpConfigurationArray []ApplicationGatewayPrivateLinkIpConfigurationInput

func (ApplicationGatewayPrivateLinkIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateLinkIpConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayPrivateLinkIpConfigurationArray) ToApplicationGatewayPrivateLinkIpConfigurationArrayOutput() ApplicationGatewayPrivateLinkIpConfigurationArrayOutput {
	return i.ToApplicationGatewayPrivateLinkIpConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateLinkIpConfigurationArray) ToApplicationGatewayPrivateLinkIpConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateLinkIpConfigurationArrayOutput)
}

// The application gateway private link ip configuration.
type ApplicationGatewayPrivateLinkIpConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateLinkIpConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkIpConfigurationOutput) ToApplicationGatewayPrivateLinkIpConfigurationOutput() ApplicationGatewayPrivateLinkIpConfigurationOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkIpConfigurationOutput) ToApplicationGatewayPrivateLinkIpConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkIpConfigurationOutput {
	return o
}

// Resource ID.
func (o ApplicationGatewayPrivateLinkIpConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of application gateway private link ip configuration.
func (o ApplicationGatewayPrivateLinkIpConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether the ip configuration is primary or not.
func (o ApplicationGatewayPrivateLinkIpConfigurationOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfiguration) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// The private IP address of the IP configuration.
func (o ApplicationGatewayPrivateLinkIpConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o ApplicationGatewayPrivateLinkIpConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Reference to the subnet resource.
func (o ApplicationGatewayPrivateLinkIpConfigurationOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfiguration) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type ApplicationGatewayPrivateLinkIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateLinkIpConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkIpConfigurationArrayOutput) ToApplicationGatewayPrivateLinkIpConfigurationArrayOutput() ApplicationGatewayPrivateLinkIpConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkIpConfigurationArrayOutput) ToApplicationGatewayPrivateLinkIpConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkIpConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkIpConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPrivateLinkIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPrivateLinkIpConfiguration {
		return vs[0].([]ApplicationGatewayPrivateLinkIpConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayPrivateLinkIpConfigurationOutput)
}

// The application gateway private link ip configuration.
type ApplicationGatewayPrivateLinkIpConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of application gateway private link ip configuration.
	Name *string `pulumi:"name"`
	// Whether the ip configuration is primary or not.
	Primary *bool `pulumi:"primary"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the application gateway private link IP configuration.
	ProvisioningState string `pulumi:"provisioningState"`
	// Reference to the subnet resource.
	Subnet *SubResourceResponse `pulumi:"subnet"`
	// The resource type.
	Type string `pulumi:"type"`
}

// ApplicationGatewayPrivateLinkIpConfigurationResponseInput is an input type that accepts ApplicationGatewayPrivateLinkIpConfigurationResponseArgs and ApplicationGatewayPrivateLinkIpConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateLinkIpConfigurationResponseInput` via:
//
//          ApplicationGatewayPrivateLinkIpConfigurationResponseArgs{...}
type ApplicationGatewayPrivateLinkIpConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateLinkIpConfigurationResponseOutput() ApplicationGatewayPrivateLinkIpConfigurationResponseOutput
	ToApplicationGatewayPrivateLinkIpConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayPrivateLinkIpConfigurationResponseOutput
}

// The application gateway private link ip configuration.
type ApplicationGatewayPrivateLinkIpConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of application gateway private link ip configuration.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether the ip configuration is primary or not.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the application gateway private link IP configuration.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Reference to the subnet resource.
	Subnet SubResourceResponsePtrInput `pulumi:"subnet"`
	// The resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationGatewayPrivateLinkIpConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateLinkIpConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayPrivateLinkIpConfigurationResponseArgs) ToApplicationGatewayPrivateLinkIpConfigurationResponseOutput() ApplicationGatewayPrivateLinkIpConfigurationResponseOutput {
	return i.ToApplicationGatewayPrivateLinkIpConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateLinkIpConfigurationResponseArgs) ToApplicationGatewayPrivateLinkIpConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkIpConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateLinkIpConfigurationResponseOutput)
}

// ApplicationGatewayPrivateLinkIpConfigurationResponseArrayInput is an input type that accepts ApplicationGatewayPrivateLinkIpConfigurationResponseArray and ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPrivateLinkIpConfigurationResponseArrayInput` via:
//
//          ApplicationGatewayPrivateLinkIpConfigurationResponseArray{ ApplicationGatewayPrivateLinkIpConfigurationResponseArgs{...} }
type ApplicationGatewayPrivateLinkIpConfigurationResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput() ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput
	ToApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutputWithContext(context.Context) ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput
}

type ApplicationGatewayPrivateLinkIpConfigurationResponseArray []ApplicationGatewayPrivateLinkIpConfigurationResponseInput

func (ApplicationGatewayPrivateLinkIpConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateLinkIpConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayPrivateLinkIpConfigurationResponseArray) ToApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput() ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput {
	return i.ToApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPrivateLinkIpConfigurationResponseArray) ToApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput)
}

// The application gateway private link ip configuration.
type ApplicationGatewayPrivateLinkIpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPrivateLinkIpConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) ToApplicationGatewayPrivateLinkIpConfigurationResponseOutput() ApplicationGatewayPrivateLinkIpConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) ToApplicationGatewayPrivateLinkIpConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkIpConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of application gateway private link ip configuration.
func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether the ip configuration is primary or not.
func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfigurationResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// The private IP address of the IP configuration.
func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfigurationResponse) *string {
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the application gateway private link IP configuration.
func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Reference to the subnet resource.
func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfigurationResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

// The resource type.
func (o ApplicationGatewayPrivateLinkIpConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayPrivateLinkIpConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPrivateLinkIpConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput) ToApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput() ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput) ToApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPrivateLinkIpConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPrivateLinkIpConfigurationResponse {
		return vs[0].([]ApplicationGatewayPrivateLinkIpConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayPrivateLinkIpConfigurationResponseOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbe struct {
	// Host name to send the probe to.
	Host *string `pulumi:"host"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval *int `pulumi:"interval"`
	// Criterion for classifying a healthy probe response.
	Match *ApplicationGatewayProbeHealthResponseMatch `pulumi:"match"`
	// Minimum number of servers that are always marked healthy. Default value is 0.
	MinServers *int `pulumi:"minServers"`
	// Name of the probe that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>.
	Path *string `pulumi:"path"`
	// Whether the host header should be picked from the backend http settings. Default value is false.
	PickHostNameFromBackendHttpSettings *bool `pulumi:"pickHostNameFromBackendHttpSettings"`
	// Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
	Port *int `pulumi:"port"`
	// The protocol used for the probe.
	Protocol *string `pulumi:"protocol"`
	// The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout *int `pulumi:"timeout"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// ApplicationGatewayProbeInput is an input type that accepts ApplicationGatewayProbeArgs and ApplicationGatewayProbeOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeInput` via:
//
//          ApplicationGatewayProbeArgs{...}
type ApplicationGatewayProbeInput interface {
	pulumi.Input

	ToApplicationGatewayProbeOutput() ApplicationGatewayProbeOutput
	ToApplicationGatewayProbeOutputWithContext(context.Context) ApplicationGatewayProbeOutput
}

// Probe of the application gateway.
type ApplicationGatewayProbeArgs struct {
	// Host name to send the probe to.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Criterion for classifying a healthy probe response.
	Match ApplicationGatewayProbeHealthResponseMatchPtrInput `pulumi:"match"`
	// Minimum number of servers that are always marked healthy. Default value is 0.
	MinServers pulumi.IntPtrInput `pulumi:"minServers"`
	// Name of the probe that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Whether the host header should be picked from the backend http settings. Default value is false.
	PickHostNameFromBackendHttpSettings pulumi.BoolPtrInput `pulumi:"pickHostNameFromBackendHttpSettings"`
	// Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The protocol used for the probe.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (ApplicationGatewayProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbe)(nil)).Elem()
}

func (i ApplicationGatewayProbeArgs) ToApplicationGatewayProbeOutput() ApplicationGatewayProbeOutput {
	return i.ToApplicationGatewayProbeOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeArgs) ToApplicationGatewayProbeOutputWithContext(ctx context.Context) ApplicationGatewayProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeOutput)
}

// ApplicationGatewayProbeArrayInput is an input type that accepts ApplicationGatewayProbeArray and ApplicationGatewayProbeArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeArrayInput` via:
//
//          ApplicationGatewayProbeArray{ ApplicationGatewayProbeArgs{...} }
type ApplicationGatewayProbeArrayInput interface {
	pulumi.Input

	ToApplicationGatewayProbeArrayOutput() ApplicationGatewayProbeArrayOutput
	ToApplicationGatewayProbeArrayOutputWithContext(context.Context) ApplicationGatewayProbeArrayOutput
}

type ApplicationGatewayProbeArray []ApplicationGatewayProbeInput

func (ApplicationGatewayProbeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbe)(nil)).Elem()
}

func (i ApplicationGatewayProbeArray) ToApplicationGatewayProbeArrayOutput() ApplicationGatewayProbeArrayOutput {
	return i.ToApplicationGatewayProbeArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeArray) ToApplicationGatewayProbeArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeArrayOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbeOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbe)(nil)).Elem()
}

func (o ApplicationGatewayProbeOutput) ToApplicationGatewayProbeOutput() ApplicationGatewayProbeOutput {
	return o
}

func (o ApplicationGatewayProbeOutput) ToApplicationGatewayProbeOutputWithContext(ctx context.Context) ApplicationGatewayProbeOutput {
	return o
}

// Host name to send the probe to.
func (o ApplicationGatewayProbeOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayProbeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbeOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Criterion for classifying a healthy probe response.
func (o ApplicationGatewayProbeOutput) Match() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *ApplicationGatewayProbeHealthResponseMatch { return v.Match }).(ApplicationGatewayProbeHealthResponseMatchPtrOutput)
}

// Minimum number of servers that are always marked healthy. Default value is 0.
func (o ApplicationGatewayProbeOutput) MinServers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *int { return v.MinServers }).(pulumi.IntPtrOutput)
}

// Name of the probe that is unique within an Application Gateway.
func (o ApplicationGatewayProbeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>.
func (o ApplicationGatewayProbeOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Whether the host header should be picked from the backend http settings. Default value is false.
func (o ApplicationGatewayProbeOutput) PickHostNameFromBackendHttpSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *bool { return v.PickHostNameFromBackendHttpSettings }).(pulumi.BoolPtrOutput)
}

// Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
func (o ApplicationGatewayProbeOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The protocol used for the probe.
func (o ApplicationGatewayProbeOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbeOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
func (o ApplicationGatewayProbeOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayProbeArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbe)(nil)).Elem()
}

func (o ApplicationGatewayProbeArrayOutput) ToApplicationGatewayProbeArrayOutput() ApplicationGatewayProbeArrayOutput {
	return o
}

func (o ApplicationGatewayProbeArrayOutput) ToApplicationGatewayProbeArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeArrayOutput {
	return o
}

func (o ApplicationGatewayProbeArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayProbeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayProbe {
		return vs[0].([]ApplicationGatewayProbe)[vs[1].(int)]
	}).(ApplicationGatewayProbeOutput)
}

// Application gateway probe health response match.
type ApplicationGatewayProbeHealthResponseMatch struct {
	// Body that must be contained in the health response. Default value is empty.
	Body *string `pulumi:"body"`
	// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
	StatusCodes []string `pulumi:"statusCodes"`
}

// ApplicationGatewayProbeHealthResponseMatchInput is an input type that accepts ApplicationGatewayProbeHealthResponseMatchArgs and ApplicationGatewayProbeHealthResponseMatchOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeHealthResponseMatchInput` via:
//
//          ApplicationGatewayProbeHealthResponseMatchArgs{...}
type ApplicationGatewayProbeHealthResponseMatchInput interface {
	pulumi.Input

	ToApplicationGatewayProbeHealthResponseMatchOutput() ApplicationGatewayProbeHealthResponseMatchOutput
	ToApplicationGatewayProbeHealthResponseMatchOutputWithContext(context.Context) ApplicationGatewayProbeHealthResponseMatchOutput
}

// Application gateway probe health response match.
type ApplicationGatewayProbeHealthResponseMatchArgs struct {
	// Body that must be contained in the health response. Default value is empty.
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
	StatusCodes pulumi.StringArrayInput `pulumi:"statusCodes"`
}

func (ApplicationGatewayProbeHealthResponseMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeHealthResponseMatch)(nil)).Elem()
}

func (i ApplicationGatewayProbeHealthResponseMatchArgs) ToApplicationGatewayProbeHealthResponseMatchOutput() ApplicationGatewayProbeHealthResponseMatchOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeHealthResponseMatchArgs) ToApplicationGatewayProbeHealthResponseMatchOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchOutput)
}

func (i ApplicationGatewayProbeHealthResponseMatchArgs) ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeHealthResponseMatchArgs) ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchOutput).ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx)
}

// ApplicationGatewayProbeHealthResponseMatchPtrInput is an input type that accepts ApplicationGatewayProbeHealthResponseMatchArgs, ApplicationGatewayProbeHealthResponseMatchPtr and ApplicationGatewayProbeHealthResponseMatchPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeHealthResponseMatchPtrInput` via:
//
//          ApplicationGatewayProbeHealthResponseMatchArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayProbeHealthResponseMatchPtrInput interface {
	pulumi.Input

	ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput
	ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput
}

type applicationGatewayProbeHealthResponseMatchPtrType ApplicationGatewayProbeHealthResponseMatchArgs

func ApplicationGatewayProbeHealthResponseMatchPtr(v *ApplicationGatewayProbeHealthResponseMatchArgs) ApplicationGatewayProbeHealthResponseMatchPtrInput {
	return (*applicationGatewayProbeHealthResponseMatchPtrType)(v)
}

func (*applicationGatewayProbeHealthResponseMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbeHealthResponseMatch)(nil)).Elem()
}

func (i *applicationGatewayProbeHealthResponseMatchPtrType) ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayProbeHealthResponseMatchPtrType) ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchPtrOutput)
}

// Application gateway probe health response match.
type ApplicationGatewayProbeHealthResponseMatchOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeHealthResponseMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeHealthResponseMatch)(nil)).Elem()
}

func (o ApplicationGatewayProbeHealthResponseMatchOutput) ToApplicationGatewayProbeHealthResponseMatchOutput() ApplicationGatewayProbeHealthResponseMatchOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchOutput) ToApplicationGatewayProbeHealthResponseMatchOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchOutput) ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o.ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayProbeHealthResponseMatchOutput) ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatch) *ApplicationGatewayProbeHealthResponseMatch {
		return &v
	}).(ApplicationGatewayProbeHealthResponseMatchPtrOutput)
}

// Body that must be contained in the health response. Default value is empty.
func (o ApplicationGatewayProbeHealthResponseMatchOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatch) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
func (o ApplicationGatewayProbeHealthResponseMatchOutput) StatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatch) []string { return v.StatusCodes }).(pulumi.StringArrayOutput)
}

type ApplicationGatewayProbeHealthResponseMatchPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeHealthResponseMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbeHealthResponseMatch)(nil)).Elem()
}

func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) Elem() ApplicationGatewayProbeHealthResponseMatchOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatch) ApplicationGatewayProbeHealthResponseMatch {
		return *v
	}).(ApplicationGatewayProbeHealthResponseMatchOutput)
}

// Body that must be contained in the health response. Default value is empty.
func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatch) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) StatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatch) []string {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(pulumi.StringArrayOutput)
}

// Application gateway probe health response match.
type ApplicationGatewayProbeHealthResponseMatchResponse struct {
	// Body that must be contained in the health response. Default value is empty.
	Body *string `pulumi:"body"`
	// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
	StatusCodes []string `pulumi:"statusCodes"`
}

// ApplicationGatewayProbeHealthResponseMatchResponseInput is an input type that accepts ApplicationGatewayProbeHealthResponseMatchResponseArgs and ApplicationGatewayProbeHealthResponseMatchResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeHealthResponseMatchResponseInput` via:
//
//          ApplicationGatewayProbeHealthResponseMatchResponseArgs{...}
type ApplicationGatewayProbeHealthResponseMatchResponseInput interface {
	pulumi.Input

	ToApplicationGatewayProbeHealthResponseMatchResponseOutput() ApplicationGatewayProbeHealthResponseMatchResponseOutput
	ToApplicationGatewayProbeHealthResponseMatchResponseOutputWithContext(context.Context) ApplicationGatewayProbeHealthResponseMatchResponseOutput
}

// Application gateway probe health response match.
type ApplicationGatewayProbeHealthResponseMatchResponseArgs struct {
	// Body that must be contained in the health response. Default value is empty.
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
	StatusCodes pulumi.StringArrayInput `pulumi:"statusCodes"`
}

func (ApplicationGatewayProbeHealthResponseMatchResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeHealthResponseMatchResponse)(nil)).Elem()
}

func (i ApplicationGatewayProbeHealthResponseMatchResponseArgs) ToApplicationGatewayProbeHealthResponseMatchResponseOutput() ApplicationGatewayProbeHealthResponseMatchResponseOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeHealthResponseMatchResponseArgs) ToApplicationGatewayProbeHealthResponseMatchResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchResponseOutput)
}

func (i ApplicationGatewayProbeHealthResponseMatchResponseArgs) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutput() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeHealthResponseMatchResponseArgs) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchResponseOutput).ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayProbeHealthResponseMatchResponsePtrInput is an input type that accepts ApplicationGatewayProbeHealthResponseMatchResponseArgs, ApplicationGatewayProbeHealthResponseMatchResponsePtr and ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeHealthResponseMatchResponsePtrInput` via:
//
//          ApplicationGatewayProbeHealthResponseMatchResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayProbeHealthResponseMatchResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutput() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput
	ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(context.Context) ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput
}

type applicationGatewayProbeHealthResponseMatchResponsePtrType ApplicationGatewayProbeHealthResponseMatchResponseArgs

func ApplicationGatewayProbeHealthResponseMatchResponsePtr(v *ApplicationGatewayProbeHealthResponseMatchResponseArgs) ApplicationGatewayProbeHealthResponseMatchResponsePtrInput {
	return (*applicationGatewayProbeHealthResponseMatchResponsePtrType)(v)
}

func (*applicationGatewayProbeHealthResponseMatchResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbeHealthResponseMatchResponse)(nil)).Elem()
}

func (i *applicationGatewayProbeHealthResponseMatchResponsePtrType) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutput() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayProbeHealthResponseMatchResponsePtrType) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput)
}

// Application gateway probe health response match.
type ApplicationGatewayProbeHealthResponseMatchResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeHealthResponseMatchResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeHealthResponseMatchResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) ToApplicationGatewayProbeHealthResponseMatchResponseOutput() ApplicationGatewayProbeHealthResponseMatchResponseOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) ToApplicationGatewayProbeHealthResponseMatchResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponseOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutput() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return o.ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatchResponse) *ApplicationGatewayProbeHealthResponseMatchResponse {
		return &v
	}).(ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput)
}

// Body that must be contained in the health response. Default value is empty.
func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatchResponse) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) StatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatchResponse) []string { return v.StatusCodes }).(pulumi.StringArrayOutput)
}

type ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbeHealthResponseMatchResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutput() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) Elem() ApplicationGatewayProbeHealthResponseMatchResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatchResponse) ApplicationGatewayProbeHealthResponseMatchResponse {
		return *v
	}).(ApplicationGatewayProbeHealthResponseMatchResponseOutput)
}

// Body that must be contained in the health response. Default value is empty.
func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatchResponse) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) StatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatchResponse) []string {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(pulumi.StringArrayOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Host name to send the probe to.
	Host *string `pulumi:"host"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval *int `pulumi:"interval"`
	// Criterion for classifying a healthy probe response.
	Match *ApplicationGatewayProbeHealthResponseMatchResponse `pulumi:"match"`
	// Minimum number of servers that are always marked healthy. Default value is 0.
	MinServers *int `pulumi:"minServers"`
	// Name of the probe that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>.
	Path *string `pulumi:"path"`
	// Whether the host header should be picked from the backend http settings. Default value is false.
	PickHostNameFromBackendHttpSettings *bool `pulumi:"pickHostNameFromBackendHttpSettings"`
	// Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
	Port *int `pulumi:"port"`
	// The protocol used for the probe.
	Protocol *string `pulumi:"protocol"`
	// The provisioning state of the probe resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout *int `pulumi:"timeout"`
	// Type of the resource.
	Type string `pulumi:"type"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// ApplicationGatewayProbeResponseInput is an input type that accepts ApplicationGatewayProbeResponseArgs and ApplicationGatewayProbeResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeResponseInput` via:
//
//          ApplicationGatewayProbeResponseArgs{...}
type ApplicationGatewayProbeResponseInput interface {
	pulumi.Input

	ToApplicationGatewayProbeResponseOutput() ApplicationGatewayProbeResponseOutput
	ToApplicationGatewayProbeResponseOutputWithContext(context.Context) ApplicationGatewayProbeResponseOutput
}

// Probe of the application gateway.
type ApplicationGatewayProbeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Host name to send the probe to.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Criterion for classifying a healthy probe response.
	Match ApplicationGatewayProbeHealthResponseMatchResponsePtrInput `pulumi:"match"`
	// Minimum number of servers that are always marked healthy. Default value is 0.
	MinServers pulumi.IntPtrInput `pulumi:"minServers"`
	// Name of the probe that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Whether the host header should be picked from the backend http settings. Default value is false.
	PickHostNameFromBackendHttpSettings pulumi.BoolPtrInput `pulumi:"pickHostNameFromBackendHttpSettings"`
	// Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The protocol used for the probe.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The provisioning state of the probe resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (ApplicationGatewayProbeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeResponse)(nil)).Elem()
}

func (i ApplicationGatewayProbeResponseArgs) ToApplicationGatewayProbeResponseOutput() ApplicationGatewayProbeResponseOutput {
	return i.ToApplicationGatewayProbeResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeResponseArgs) ToApplicationGatewayProbeResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeResponseOutput)
}

// ApplicationGatewayProbeResponseArrayInput is an input type that accepts ApplicationGatewayProbeResponseArray and ApplicationGatewayProbeResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeResponseArrayInput` via:
//
//          ApplicationGatewayProbeResponseArray{ ApplicationGatewayProbeResponseArgs{...} }
type ApplicationGatewayProbeResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayProbeResponseArrayOutput() ApplicationGatewayProbeResponseArrayOutput
	ToApplicationGatewayProbeResponseArrayOutputWithContext(context.Context) ApplicationGatewayProbeResponseArrayOutput
}

type ApplicationGatewayProbeResponseArray []ApplicationGatewayProbeResponseInput

func (ApplicationGatewayProbeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbeResponse)(nil)).Elem()
}

func (i ApplicationGatewayProbeResponseArray) ToApplicationGatewayProbeResponseArrayOutput() ApplicationGatewayProbeResponseArrayOutput {
	return i.ToApplicationGatewayProbeResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeResponseArray) ToApplicationGatewayProbeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeResponseArrayOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbeResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeResponseOutput) ToApplicationGatewayProbeResponseOutput() ApplicationGatewayProbeResponseOutput {
	return o
}

func (o ApplicationGatewayProbeResponseOutput) ToApplicationGatewayProbeResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayProbeResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Host name to send the probe to.
func (o ApplicationGatewayProbeResponseOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayProbeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbeResponseOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Criterion for classifying a healthy probe response.
func (o ApplicationGatewayProbeResponseOutput) Match() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *ApplicationGatewayProbeHealthResponseMatchResponse {
		return v.Match
	}).(ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput)
}

// Minimum number of servers that are always marked healthy. Default value is 0.
func (o ApplicationGatewayProbeResponseOutput) MinServers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *int { return v.MinServers }).(pulumi.IntPtrOutput)
}

// Name of the probe that is unique within an Application Gateway.
func (o ApplicationGatewayProbeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>.
func (o ApplicationGatewayProbeResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Whether the host header should be picked from the backend http settings. Default value is false.
func (o ApplicationGatewayProbeResponseOutput) PickHostNameFromBackendHttpSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *bool { return v.PickHostNameFromBackendHttpSettings }).(pulumi.BoolPtrOutput)
}

// Custom port which will be used for probing the backend servers. The valid value ranges from 1 to 65535. In case not set, port from http settings will be used. This property is valid for Standard_v2 and WAF_v2 only.
func (o ApplicationGatewayProbeResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The protocol used for the probe.
func (o ApplicationGatewayProbeResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The provisioning state of the probe resource.
func (o ApplicationGatewayProbeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbeResponseOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayProbeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
func (o ApplicationGatewayProbeResponseOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayProbeResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbeResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeResponseArrayOutput) ToApplicationGatewayProbeResponseArrayOutput() ApplicationGatewayProbeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayProbeResponseArrayOutput) ToApplicationGatewayProbeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayProbeResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayProbeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayProbeResponse {
		return vs[0].([]ApplicationGatewayProbeResponse)[vs[1].(int)]
	}).(ApplicationGatewayProbeResponseOutput)
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Include path in the redirected url.
	IncludePath *bool `pulumi:"includePath"`
	// Include query string in the redirected url.
	IncludeQueryString *bool `pulumi:"includeQueryString"`
	// Name of the redirect configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path rules specifying redirect configuration.
	PathRules []SubResource `pulumi:"pathRules"`
	// HTTP redirection type.
	RedirectType *string `pulumi:"redirectType"`
	// Request routing specifying redirect configuration.
	RequestRoutingRules []SubResource `pulumi:"requestRoutingRules"`
	// Reference to a listener to redirect the request to.
	TargetListener *SubResource `pulumi:"targetListener"`
	// Url to redirect the request to.
	TargetUrl *string `pulumi:"targetUrl"`
	// Url path maps specifying default redirect configuration.
	UrlPathMaps []SubResource `pulumi:"urlPathMaps"`
}

// ApplicationGatewayRedirectConfigurationInput is an input type that accepts ApplicationGatewayRedirectConfigurationArgs and ApplicationGatewayRedirectConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationInput` via:
//
//          ApplicationGatewayRedirectConfigurationArgs{...}
type ApplicationGatewayRedirectConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationOutput() ApplicationGatewayRedirectConfigurationOutput
	ToApplicationGatewayRedirectConfigurationOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationOutput
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Include path in the redirected url.
	IncludePath pulumi.BoolPtrInput `pulumi:"includePath"`
	// Include query string in the redirected url.
	IncludeQueryString pulumi.BoolPtrInput `pulumi:"includeQueryString"`
	// Name of the redirect configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rules specifying redirect configuration.
	PathRules SubResourceArrayInput `pulumi:"pathRules"`
	// HTTP redirection type.
	RedirectType pulumi.StringPtrInput `pulumi:"redirectType"`
	// Request routing specifying redirect configuration.
	RequestRoutingRules SubResourceArrayInput `pulumi:"requestRoutingRules"`
	// Reference to a listener to redirect the request to.
	TargetListener SubResourcePtrInput `pulumi:"targetListener"`
	// Url to redirect the request to.
	TargetUrl pulumi.StringPtrInput `pulumi:"targetUrl"`
	// Url path maps specifying default redirect configuration.
	UrlPathMaps SubResourceArrayInput `pulumi:"urlPathMaps"`
}

func (ApplicationGatewayRedirectConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayRedirectConfigurationArgs) ToApplicationGatewayRedirectConfigurationOutput() ApplicationGatewayRedirectConfigurationOutput {
	return i.ToApplicationGatewayRedirectConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationArgs) ToApplicationGatewayRedirectConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationOutput)
}

// ApplicationGatewayRedirectConfigurationArrayInput is an input type that accepts ApplicationGatewayRedirectConfigurationArray and ApplicationGatewayRedirectConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationArrayInput` via:
//
//          ApplicationGatewayRedirectConfigurationArray{ ApplicationGatewayRedirectConfigurationArgs{...} }
type ApplicationGatewayRedirectConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationArrayOutput() ApplicationGatewayRedirectConfigurationArrayOutput
	ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationArrayOutput
}

type ApplicationGatewayRedirectConfigurationArray []ApplicationGatewayRedirectConfigurationInput

func (ApplicationGatewayRedirectConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayRedirectConfigurationArray) ToApplicationGatewayRedirectConfigurationArrayOutput() ApplicationGatewayRedirectConfigurationArrayOutput {
	return i.ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationArray) ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationArrayOutput)
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationOutput) ToApplicationGatewayRedirectConfigurationOutput() ApplicationGatewayRedirectConfigurationOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationOutput) ToApplicationGatewayRedirectConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationOutput {
	return o
}

// Resource ID.
func (o ApplicationGatewayRedirectConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Include path in the redirected url.
func (o ApplicationGatewayRedirectConfigurationOutput) IncludePath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *bool { return v.IncludePath }).(pulumi.BoolPtrOutput)
}

// Include query string in the redirected url.
func (o ApplicationGatewayRedirectConfigurationOutput) IncludeQueryString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *bool { return v.IncludeQueryString }).(pulumi.BoolPtrOutput)
}

// Name of the redirect configuration that is unique within an Application Gateway.
func (o ApplicationGatewayRedirectConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rules specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationOutput) PathRules() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) []SubResource { return v.PathRules }).(SubResourceArrayOutput)
}

// HTTP redirection type.
func (o ApplicationGatewayRedirectConfigurationOutput) RedirectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.RedirectType }).(pulumi.StringPtrOutput)
}

// Request routing specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationOutput) RequestRoutingRules() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) []SubResource { return v.RequestRoutingRules }).(SubResourceArrayOutput)
}

// Reference to a listener to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationOutput) TargetListener() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *SubResource { return v.TargetListener }).(SubResourcePtrOutput)
}

// Url to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationOutput) TargetUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.TargetUrl }).(pulumi.StringPtrOutput)
}

// Url path maps specifying default redirect configuration.
func (o ApplicationGatewayRedirectConfigurationOutput) UrlPathMaps() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) []SubResource { return v.UrlPathMaps }).(SubResourceArrayOutput)
}

type ApplicationGatewayRedirectConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationArrayOutput) ToApplicationGatewayRedirectConfigurationArrayOutput() ApplicationGatewayRedirectConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationArrayOutput) ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRedirectConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRedirectConfiguration {
		return vs[0].([]ApplicationGatewayRedirectConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayRedirectConfigurationOutput)
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Include path in the redirected url.
	IncludePath *bool `pulumi:"includePath"`
	// Include query string in the redirected url.
	IncludeQueryString *bool `pulumi:"includeQueryString"`
	// Name of the redirect configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path rules specifying redirect configuration.
	PathRules []SubResourceResponse `pulumi:"pathRules"`
	// HTTP redirection type.
	RedirectType *string `pulumi:"redirectType"`
	// Request routing specifying redirect configuration.
	RequestRoutingRules []SubResourceResponse `pulumi:"requestRoutingRules"`
	// Reference to a listener to redirect the request to.
	TargetListener *SubResourceResponse `pulumi:"targetListener"`
	// Url to redirect the request to.
	TargetUrl *string `pulumi:"targetUrl"`
	// Type of the resource.
	Type string `pulumi:"type"`
	// Url path maps specifying default redirect configuration.
	UrlPathMaps []SubResourceResponse `pulumi:"urlPathMaps"`
}

// ApplicationGatewayRedirectConfigurationResponseInput is an input type that accepts ApplicationGatewayRedirectConfigurationResponseArgs and ApplicationGatewayRedirectConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationResponseInput` via:
//
//          ApplicationGatewayRedirectConfigurationResponseArgs{...}
type ApplicationGatewayRedirectConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationResponseOutput() ApplicationGatewayRedirectConfigurationResponseOutput
	ToApplicationGatewayRedirectConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationResponseOutput
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Include path in the redirected url.
	IncludePath pulumi.BoolPtrInput `pulumi:"includePath"`
	// Include query string in the redirected url.
	IncludeQueryString pulumi.BoolPtrInput `pulumi:"includeQueryString"`
	// Name of the redirect configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rules specifying redirect configuration.
	PathRules SubResourceResponseArrayInput `pulumi:"pathRules"`
	// HTTP redirection type.
	RedirectType pulumi.StringPtrInput `pulumi:"redirectType"`
	// Request routing specifying redirect configuration.
	RequestRoutingRules SubResourceResponseArrayInput `pulumi:"requestRoutingRules"`
	// Reference to a listener to redirect the request to.
	TargetListener SubResourceResponsePtrInput `pulumi:"targetListener"`
	// Url to redirect the request to.
	TargetUrl pulumi.StringPtrInput `pulumi:"targetUrl"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
	// Url path maps specifying default redirect configuration.
	UrlPathMaps SubResourceResponseArrayInput `pulumi:"urlPathMaps"`
}

func (ApplicationGatewayRedirectConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayRedirectConfigurationResponseArgs) ToApplicationGatewayRedirectConfigurationResponseOutput() ApplicationGatewayRedirectConfigurationResponseOutput {
	return i.ToApplicationGatewayRedirectConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationResponseArgs) ToApplicationGatewayRedirectConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationResponseOutput)
}

// ApplicationGatewayRedirectConfigurationResponseArrayInput is an input type that accepts ApplicationGatewayRedirectConfigurationResponseArray and ApplicationGatewayRedirectConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationResponseArrayInput` via:
//
//          ApplicationGatewayRedirectConfigurationResponseArray{ ApplicationGatewayRedirectConfigurationResponseArgs{...} }
type ApplicationGatewayRedirectConfigurationResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationResponseArrayOutput() ApplicationGatewayRedirectConfigurationResponseArrayOutput
	ToApplicationGatewayRedirectConfigurationResponseArrayOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationResponseArrayOutput
}

type ApplicationGatewayRedirectConfigurationResponseArray []ApplicationGatewayRedirectConfigurationResponseInput

func (ApplicationGatewayRedirectConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRedirectConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayRedirectConfigurationResponseArray) ToApplicationGatewayRedirectConfigurationResponseArrayOutput() ApplicationGatewayRedirectConfigurationResponseArrayOutput {
	return i.ToApplicationGatewayRedirectConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationResponseArray) ToApplicationGatewayRedirectConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationResponseArrayOutput)
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationResponseOutput) ToApplicationGatewayRedirectConfigurationResponseOutput() ApplicationGatewayRedirectConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationResponseOutput) ToApplicationGatewayRedirectConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Include path in the redirected url.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) IncludePath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *bool { return v.IncludePath }).(pulumi.BoolPtrOutput)
}

// Include query string in the redirected url.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) IncludeQueryString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *bool { return v.IncludeQueryString }).(pulumi.BoolPtrOutput)
}

// Name of the redirect configuration that is unique within an Application Gateway.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rules specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) PathRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) []SubResourceResponse { return v.PathRules }).(SubResourceResponseArrayOutput)
}

// HTTP redirection type.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) RedirectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *string { return v.RedirectType }).(pulumi.StringPtrOutput)
}

// Request routing specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) RequestRoutingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) []SubResourceResponse {
		return v.RequestRoutingRules
	}).(SubResourceResponseArrayOutput)
}

// Reference to a listener to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) TargetListener() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *SubResourceResponse { return v.TargetListener }).(SubResourceResponsePtrOutput)
}

// Url to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) TargetUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *string { return v.TargetUrl }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Url path maps specifying default redirect configuration.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) UrlPathMaps() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) []SubResourceResponse { return v.UrlPathMaps }).(SubResourceResponseArrayOutput)
}

type ApplicationGatewayRedirectConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRedirectConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationResponseArrayOutput) ToApplicationGatewayRedirectConfigurationResponseArrayOutput() ApplicationGatewayRedirectConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationResponseArrayOutput) ToApplicationGatewayRedirectConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRedirectConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRedirectConfigurationResponse {
		return vs[0].([]ApplicationGatewayRedirectConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayRedirectConfigurationResponseOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRule struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool *SubResource `pulumi:"backendAddressPool"`
	// Backend http settings resource of the application gateway.
	BackendHttpSettings *SubResource `pulumi:"backendHttpSettings"`
	// Http listener resource of the application gateway.
	HttpListener *SubResource `pulumi:"httpListener"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the request routing rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Priority of the request routing rule.
	Priority *int `pulumi:"priority"`
	// Redirect configuration resource of the application gateway.
	RedirectConfiguration *SubResource `pulumi:"redirectConfiguration"`
	// Rewrite Rule Set resource in Basic rule of the application gateway.
	RewriteRuleSet *SubResource `pulumi:"rewriteRuleSet"`
	// Rule type.
	RuleType *string `pulumi:"ruleType"`
	// URL path map resource of the application gateway.
	UrlPathMap *SubResource `pulumi:"urlPathMap"`
}

// ApplicationGatewayRequestRoutingRuleInput is an input type that accepts ApplicationGatewayRequestRoutingRuleArgs and ApplicationGatewayRequestRoutingRuleOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleInput` via:
//
//          ApplicationGatewayRequestRoutingRuleArgs{...}
type ApplicationGatewayRequestRoutingRuleInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleOutput() ApplicationGatewayRequestRoutingRuleOutput
	ToApplicationGatewayRequestRoutingRuleOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleOutput
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleArgs struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool SubResourcePtrInput `pulumi:"backendAddressPool"`
	// Backend http settings resource of the application gateway.
	BackendHttpSettings SubResourcePtrInput `pulumi:"backendHttpSettings"`
	// Http listener resource of the application gateway.
	HttpListener SubResourcePtrInput `pulumi:"httpListener"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the request routing rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the request routing rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Redirect configuration resource of the application gateway.
	RedirectConfiguration SubResourcePtrInput `pulumi:"redirectConfiguration"`
	// Rewrite Rule Set resource in Basic rule of the application gateway.
	RewriteRuleSet SubResourcePtrInput `pulumi:"rewriteRuleSet"`
	// Rule type.
	RuleType pulumi.StringPtrInput `pulumi:"ruleType"`
	// URL path map resource of the application gateway.
	UrlPathMap SubResourcePtrInput `pulumi:"urlPathMap"`
}

func (ApplicationGatewayRequestRoutingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleArgs) ToApplicationGatewayRequestRoutingRuleOutput() ApplicationGatewayRequestRoutingRuleOutput {
	return i.ToApplicationGatewayRequestRoutingRuleOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleArgs) ToApplicationGatewayRequestRoutingRuleOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleOutput)
}

// ApplicationGatewayRequestRoutingRuleArrayInput is an input type that accepts ApplicationGatewayRequestRoutingRuleArray and ApplicationGatewayRequestRoutingRuleArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleArrayInput` via:
//
//          ApplicationGatewayRequestRoutingRuleArray{ ApplicationGatewayRequestRoutingRuleArgs{...} }
type ApplicationGatewayRequestRoutingRuleArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleArrayOutput() ApplicationGatewayRequestRoutingRuleArrayOutput
	ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleArrayOutput
}

type ApplicationGatewayRequestRoutingRuleArray []ApplicationGatewayRequestRoutingRuleInput

func (ApplicationGatewayRequestRoutingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleArray) ToApplicationGatewayRequestRoutingRuleArrayOutput() ApplicationGatewayRequestRoutingRuleArrayOutput {
	return i.ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleArray) ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleArrayOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleOutput) ToApplicationGatewayRequestRoutingRuleOutput() ApplicationGatewayRequestRoutingRuleOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleOutput) ToApplicationGatewayRequestRoutingRuleOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleOutput {
	return o
}

// Backend address pool resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.BackendAddressPool }).(SubResourcePtrOutput)
}

// Backend http settings resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) BackendHttpSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.BackendHttpSettings }).(SubResourcePtrOutput)
}

// Http listener resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) HttpListener() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.HttpListener }).(SubResourcePtrOutput)
}

// Resource ID.
func (o ApplicationGatewayRequestRoutingRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the request routing rule that is unique within an Application Gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the request routing rule.
func (o ApplicationGatewayRequestRoutingRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Redirect configuration resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) RedirectConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.RedirectConfiguration }).(SubResourcePtrOutput)
}

// Rewrite Rule Set resource in Basic rule of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) RewriteRuleSet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.RewriteRuleSet }).(SubResourcePtrOutput)
}

// Rule type.
func (o ApplicationGatewayRequestRoutingRuleOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.RuleType }).(pulumi.StringPtrOutput)
}

// URL path map resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) UrlPathMap() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.UrlPathMap }).(SubResourcePtrOutput)
}

type ApplicationGatewayRequestRoutingRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleArrayOutput) ToApplicationGatewayRequestRoutingRuleArrayOutput() ApplicationGatewayRequestRoutingRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleArrayOutput) ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRequestRoutingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRequestRoutingRule {
		return vs[0].([]ApplicationGatewayRequestRoutingRule)[vs[1].(int)]
	}).(ApplicationGatewayRequestRoutingRuleOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleResponse struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool *SubResourceResponse `pulumi:"backendAddressPool"`
	// Backend http settings resource of the application gateway.
	BackendHttpSettings *SubResourceResponse `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Http listener resource of the application gateway.
	HttpListener *SubResourceResponse `pulumi:"httpListener"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the request routing rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Priority of the request routing rule.
	Priority *int `pulumi:"priority"`
	// The provisioning state of the request routing rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Redirect configuration resource of the application gateway.
	RedirectConfiguration *SubResourceResponse `pulumi:"redirectConfiguration"`
	// Rewrite Rule Set resource in Basic rule of the application gateway.
	RewriteRuleSet *SubResourceResponse `pulumi:"rewriteRuleSet"`
	// Rule type.
	RuleType *string `pulumi:"ruleType"`
	// Type of the resource.
	Type string `pulumi:"type"`
	// URL path map resource of the application gateway.
	UrlPathMap *SubResourceResponse `pulumi:"urlPathMap"`
}

// ApplicationGatewayRequestRoutingRuleResponseInput is an input type that accepts ApplicationGatewayRequestRoutingRuleResponseArgs and ApplicationGatewayRequestRoutingRuleResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleResponseInput` via:
//
//          ApplicationGatewayRequestRoutingRuleResponseArgs{...}
type ApplicationGatewayRequestRoutingRuleResponseInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleResponseOutput() ApplicationGatewayRequestRoutingRuleResponseOutput
	ToApplicationGatewayRequestRoutingRuleResponseOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleResponseOutput
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleResponseArgs struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool SubResourceResponsePtrInput `pulumi:"backendAddressPool"`
	// Backend http settings resource of the application gateway.
	BackendHttpSettings SubResourceResponsePtrInput `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Http listener resource of the application gateway.
	HttpListener SubResourceResponsePtrInput `pulumi:"httpListener"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the request routing rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the request routing rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The provisioning state of the request routing rule resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Redirect configuration resource of the application gateway.
	RedirectConfiguration SubResourceResponsePtrInput `pulumi:"redirectConfiguration"`
	// Rewrite Rule Set resource in Basic rule of the application gateway.
	RewriteRuleSet SubResourceResponsePtrInput `pulumi:"rewriteRuleSet"`
	// Rule type.
	RuleType pulumi.StringPtrInput `pulumi:"ruleType"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
	// URL path map resource of the application gateway.
	UrlPathMap SubResourceResponsePtrInput `pulumi:"urlPathMap"`
}

func (ApplicationGatewayRequestRoutingRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleResponseArgs) ToApplicationGatewayRequestRoutingRuleResponseOutput() ApplicationGatewayRequestRoutingRuleResponseOutput {
	return i.ToApplicationGatewayRequestRoutingRuleResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleResponseArgs) ToApplicationGatewayRequestRoutingRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleResponseOutput)
}

// ApplicationGatewayRequestRoutingRuleResponseArrayInput is an input type that accepts ApplicationGatewayRequestRoutingRuleResponseArray and ApplicationGatewayRequestRoutingRuleResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleResponseArrayInput` via:
//
//          ApplicationGatewayRequestRoutingRuleResponseArray{ ApplicationGatewayRequestRoutingRuleResponseArgs{...} }
type ApplicationGatewayRequestRoutingRuleResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleResponseArrayOutput() ApplicationGatewayRequestRoutingRuleResponseArrayOutput
	ToApplicationGatewayRequestRoutingRuleResponseArrayOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleResponseArrayOutput
}

type ApplicationGatewayRequestRoutingRuleResponseArray []ApplicationGatewayRequestRoutingRuleResponseInput

func (ApplicationGatewayRequestRoutingRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleResponseArray) ToApplicationGatewayRequestRoutingRuleResponseArrayOutput() ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return i.ToApplicationGatewayRequestRoutingRuleResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleResponseArray) ToApplicationGatewayRequestRoutingRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleResponseArrayOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleResponseOutput) ToApplicationGatewayRequestRoutingRuleResponseOutput() ApplicationGatewayRequestRoutingRuleResponseOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleResponseOutput) ToApplicationGatewayRequestRoutingRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleResponseOutput {
	return o
}

// Backend address pool resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponsePtrOutput)
}

// Backend http settings resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) BackendHttpSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse {
		return v.BackendHttpSettings
	}).(SubResourceResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Http listener resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) HttpListener() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse { return v.HttpListener }).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the request routing rule that is unique within an Application Gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the request routing rule.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The provisioning state of the request routing rule resource.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Redirect configuration resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) RedirectConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse {
		return v.RedirectConfiguration
	}).(SubResourceResponsePtrOutput)
}

// Rewrite Rule Set resource in Basic rule of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) RewriteRuleSet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse { return v.RewriteRuleSet }).(SubResourceResponsePtrOutput)
}

// Rule type.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.RuleType }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

// URL path map resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) UrlPathMap() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse { return v.UrlPathMap }).(SubResourceResponsePtrOutput)
}

type ApplicationGatewayRequestRoutingRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleResponseArrayOutput) ToApplicationGatewayRequestRoutingRuleResponseArrayOutput() ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleResponseArrayOutput) ToApplicationGatewayRequestRoutingRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRequestRoutingRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRequestRoutingRuleResponse {
		return vs[0].([]ApplicationGatewayRequestRoutingRuleResponse)[vs[1].(int)]
	}).(ApplicationGatewayRequestRoutingRuleResponseOutput)
}

// Application gateway resource.
type ApplicationGatewayResponse struct {
	// Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	AuthenticationCertificates []ApplicationGatewayAuthenticationCertificateResponse `pulumi:"authenticationCertificates"`
	// Autoscale Configuration.
	AutoscaleConfiguration *ApplicationGatewayAutoscaleConfigurationResponse `pulumi:"autoscaleConfiguration"`
	// Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	BackendAddressPools []ApplicationGatewayBackendAddressPoolResponse `pulumi:"backendAddressPools"`
	// Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	BackendHttpSettingsCollection []ApplicationGatewayBackendHttpSettingsResponse `pulumi:"backendHttpSettingsCollection"`
	// Custom error configurations of the application gateway resource.
	CustomErrorConfigurations []ApplicationGatewayCustomErrorResponse `pulumi:"customErrorConfigurations"`
	// Whether FIPS is enabled on the application gateway resource.
	EnableFips *bool `pulumi:"enableFips"`
	// Whether HTTP2 is enabled on the application gateway resource.
	EnableHttp2 *bool `pulumi:"enableHttp2"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Reference to the FirewallPolicy resource.
	FirewallPolicy *SubResourceResponse `pulumi:"firewallPolicy"`
	// If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.
	ForceFirewallPolicyAssociation *bool `pulumi:"forceFirewallPolicyAssociation"`
	// Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	FrontendIPConfigurations []ApplicationGatewayFrontendIPConfigurationResponse `pulumi:"frontendIPConfigurations"`
	// Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	FrontendPorts []ApplicationGatewayFrontendPortResponse `pulumi:"frontendPorts"`
	// Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	GatewayIPConfigurations []ApplicationGatewayIPConfigurationResponse `pulumi:"gatewayIPConfigurations"`
	// Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	HttpListeners []ApplicationGatewayHttpListenerResponse `pulumi:"httpListeners"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The identity of the application gateway, if configured.
	Identity *ManagedServiceIdentityResponse `pulumi:"identity"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Operational state of the application gateway resource.
	OperationalState string `pulumi:"operationalState"`
	// Private Endpoint connections on application gateway.
	PrivateEndpointConnections []ApplicationGatewayPrivateEndpointConnectionResponse `pulumi:"privateEndpointConnections"`
	// PrivateLink configurations on application gateway.
	PrivateLinkConfigurations []ApplicationGatewayPrivateLinkConfigurationResponse `pulumi:"privateLinkConfigurations"`
	// Probes of the application gateway resource.
	Probes []ApplicationGatewayProbeResponse `pulumi:"probes"`
	// The provisioning state of the application gateway resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	RedirectConfigurations []ApplicationGatewayRedirectConfigurationResponse `pulumi:"redirectConfigurations"`
	// Request routing rules of the application gateway resource.
	RequestRoutingRules []ApplicationGatewayRequestRoutingRuleResponse `pulumi:"requestRoutingRules"`
	// The resource GUID property of the application gateway resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Rewrite rules for the application gateway resource.
	RewriteRuleSets []ApplicationGatewayRewriteRuleSetResponse `pulumi:"rewriteRuleSets"`
	// SKU of the application gateway resource.
	Sku *ApplicationGatewaySkuResponse `pulumi:"sku"`
	// SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	SslCertificates []ApplicationGatewaySslCertificateResponse `pulumi:"sslCertificates"`
	// SSL policy of the application gateway resource.
	SslPolicy *ApplicationGatewaySslPolicyResponse `pulumi:"sslPolicy"`
	// SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	SslProfiles []ApplicationGatewaySslProfileResponse `pulumi:"sslProfiles"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	TrustedClientCertificates []ApplicationGatewayTrustedClientCertificateResponse `pulumi:"trustedClientCertificates"`
	// Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	TrustedRootCertificates []ApplicationGatewayTrustedRootCertificateResponse `pulumi:"trustedRootCertificates"`
	// Resource type.
	Type string `pulumi:"type"`
	// URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	UrlPathMaps []ApplicationGatewayUrlPathMapResponse `pulumi:"urlPathMaps"`
	// Web application firewall configuration.
	WebApplicationFirewallConfiguration *ApplicationGatewayWebApplicationFirewallConfigurationResponse `pulumi:"webApplicationFirewallConfiguration"`
	// A list of availability zones denoting where the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// ApplicationGatewayResponseInput is an input type that accepts ApplicationGatewayResponseArgs and ApplicationGatewayResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayResponseInput` via:
//
//          ApplicationGatewayResponseArgs{...}
type ApplicationGatewayResponseInput interface {
	pulumi.Input

	ToApplicationGatewayResponseOutput() ApplicationGatewayResponseOutput
	ToApplicationGatewayResponseOutputWithContext(context.Context) ApplicationGatewayResponseOutput
}

// Application gateway resource.
type ApplicationGatewayResponseArgs struct {
	// Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	AuthenticationCertificates ApplicationGatewayAuthenticationCertificateResponseArrayInput `pulumi:"authenticationCertificates"`
	// Autoscale Configuration.
	AutoscaleConfiguration ApplicationGatewayAutoscaleConfigurationResponsePtrInput `pulumi:"autoscaleConfiguration"`
	// Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	BackendAddressPools ApplicationGatewayBackendAddressPoolResponseArrayInput `pulumi:"backendAddressPools"`
	// Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	BackendHttpSettingsCollection ApplicationGatewayBackendHttpSettingsResponseArrayInput `pulumi:"backendHttpSettingsCollection"`
	// Custom error configurations of the application gateway resource.
	CustomErrorConfigurations ApplicationGatewayCustomErrorResponseArrayInput `pulumi:"customErrorConfigurations"`
	// Whether FIPS is enabled on the application gateway resource.
	EnableFips pulumi.BoolPtrInput `pulumi:"enableFips"`
	// Whether HTTP2 is enabled on the application gateway resource.
	EnableHttp2 pulumi.BoolPtrInput `pulumi:"enableHttp2"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Reference to the FirewallPolicy resource.
	FirewallPolicy SubResourceResponsePtrInput `pulumi:"firewallPolicy"`
	// If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.
	ForceFirewallPolicyAssociation pulumi.BoolPtrInput `pulumi:"forceFirewallPolicyAssociation"`
	// Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	FrontendIPConfigurations ApplicationGatewayFrontendIPConfigurationResponseArrayInput `pulumi:"frontendIPConfigurations"`
	// Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	FrontendPorts ApplicationGatewayFrontendPortResponseArrayInput `pulumi:"frontendPorts"`
	// Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	GatewayIPConfigurations ApplicationGatewayIPConfigurationResponseArrayInput `pulumi:"gatewayIPConfigurations"`
	// Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	HttpListeners ApplicationGatewayHttpListenerResponseArrayInput `pulumi:"httpListeners"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The identity of the application gateway, if configured.
	Identity ManagedServiceIdentityResponsePtrInput `pulumi:"identity"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Operational state of the application gateway resource.
	OperationalState pulumi.StringInput `pulumi:"operationalState"`
	// Private Endpoint connections on application gateway.
	PrivateEndpointConnections ApplicationGatewayPrivateEndpointConnectionResponseArrayInput `pulumi:"privateEndpointConnections"`
	// PrivateLink configurations on application gateway.
	PrivateLinkConfigurations ApplicationGatewayPrivateLinkConfigurationResponseArrayInput `pulumi:"privateLinkConfigurations"`
	// Probes of the application gateway resource.
	Probes ApplicationGatewayProbeResponseArrayInput `pulumi:"probes"`
	// The provisioning state of the application gateway resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	RedirectConfigurations ApplicationGatewayRedirectConfigurationResponseArrayInput `pulumi:"redirectConfigurations"`
	// Request routing rules of the application gateway resource.
	RequestRoutingRules ApplicationGatewayRequestRoutingRuleResponseArrayInput `pulumi:"requestRoutingRules"`
	// The resource GUID property of the application gateway resource.
	ResourceGuid pulumi.StringInput `pulumi:"resourceGuid"`
	// Rewrite rules for the application gateway resource.
	RewriteRuleSets ApplicationGatewayRewriteRuleSetResponseArrayInput `pulumi:"rewriteRuleSets"`
	// SKU of the application gateway resource.
	Sku ApplicationGatewaySkuResponsePtrInput `pulumi:"sku"`
	// SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	SslCertificates ApplicationGatewaySslCertificateResponseArrayInput `pulumi:"sslCertificates"`
	// SSL policy of the application gateway resource.
	SslPolicy ApplicationGatewaySslPolicyResponsePtrInput `pulumi:"sslPolicy"`
	// SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	SslProfiles ApplicationGatewaySslProfileResponseArrayInput `pulumi:"sslProfiles"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	TrustedClientCertificates ApplicationGatewayTrustedClientCertificateResponseArrayInput `pulumi:"trustedClientCertificates"`
	// Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	TrustedRootCertificates ApplicationGatewayTrustedRootCertificateResponseArrayInput `pulumi:"trustedRootCertificates"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
	UrlPathMaps ApplicationGatewayUrlPathMapResponseArrayInput `pulumi:"urlPathMaps"`
	// Web application firewall configuration.
	WebApplicationFirewallConfiguration ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrInput `pulumi:"webApplicationFirewallConfiguration"`
	// A list of availability zones denoting where the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (ApplicationGatewayResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayResponse)(nil)).Elem()
}

func (i ApplicationGatewayResponseArgs) ToApplicationGatewayResponseOutput() ApplicationGatewayResponseOutput {
	return i.ToApplicationGatewayResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayResponseArgs) ToApplicationGatewayResponseOutputWithContext(ctx context.Context) ApplicationGatewayResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayResponseOutput)
}

// ApplicationGatewayResponseArrayInput is an input type that accepts ApplicationGatewayResponseArray and ApplicationGatewayResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayResponseArrayInput` via:
//
//          ApplicationGatewayResponseArray{ ApplicationGatewayResponseArgs{...} }
type ApplicationGatewayResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayResponseArrayOutput() ApplicationGatewayResponseArrayOutput
	ToApplicationGatewayResponseArrayOutputWithContext(context.Context) ApplicationGatewayResponseArrayOutput
}

type ApplicationGatewayResponseArray []ApplicationGatewayResponseInput

func (ApplicationGatewayResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayResponse)(nil)).Elem()
}

func (i ApplicationGatewayResponseArray) ToApplicationGatewayResponseArrayOutput() ApplicationGatewayResponseArrayOutput {
	return i.ToApplicationGatewayResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayResponseArray) ToApplicationGatewayResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayResponseArrayOutput)
}

// Application gateway resource.
type ApplicationGatewayResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayResponse)(nil)).Elem()
}

func (o ApplicationGatewayResponseOutput) ToApplicationGatewayResponseOutput() ApplicationGatewayResponseOutput {
	return o
}

func (o ApplicationGatewayResponseOutput) ToApplicationGatewayResponseOutputWithContext(ctx context.Context) ApplicationGatewayResponseOutput {
	return o
}

// Authentication certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) AuthenticationCertificates() ApplicationGatewayAuthenticationCertificateResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayAuthenticationCertificateResponse {
		return v.AuthenticationCertificates
	}).(ApplicationGatewayAuthenticationCertificateResponseArrayOutput)
}

// Autoscale Configuration.
func (o ApplicationGatewayResponseOutput) AutoscaleConfiguration() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *ApplicationGatewayAutoscaleConfigurationResponse {
		return v.AutoscaleConfiguration
	}).(ApplicationGatewayAutoscaleConfigurationResponsePtrOutput)
}

// Backend address pool of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) BackendAddressPools() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayBackendAddressPoolResponse {
		return v.BackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Backend http settings of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) BackendHttpSettingsCollection() ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayBackendHttpSettingsResponse {
		return v.BackendHttpSettingsCollection
	}).(ApplicationGatewayBackendHttpSettingsResponseArrayOutput)
}

// Custom error configurations of the application gateway resource.
func (o ApplicationGatewayResponseOutput) CustomErrorConfigurations() ApplicationGatewayCustomErrorResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayCustomErrorResponse {
		return v.CustomErrorConfigurations
	}).(ApplicationGatewayCustomErrorResponseArrayOutput)
}

// Whether FIPS is enabled on the application gateway resource.
func (o ApplicationGatewayResponseOutput) EnableFips() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *bool { return v.EnableFips }).(pulumi.BoolPtrOutput)
}

// Whether HTTP2 is enabled on the application gateway resource.
func (o ApplicationGatewayResponseOutput) EnableHttp2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *bool { return v.EnableHttp2 }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Reference to the FirewallPolicy resource.
func (o ApplicationGatewayResponseOutput) FirewallPolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *SubResourceResponse { return v.FirewallPolicy }).(SubResourceResponsePtrOutput)
}

// If true, associates a firewall policy with an application gateway regardless whether the policy differs from the WAF Config.
func (o ApplicationGatewayResponseOutput) ForceFirewallPolicyAssociation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *bool { return v.ForceFirewallPolicyAssociation }).(pulumi.BoolPtrOutput)
}

// Frontend IP addresses of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) FrontendIPConfigurations() ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayFrontendIPConfigurationResponse {
		return v.FrontendIPConfigurations
	}).(ApplicationGatewayFrontendIPConfigurationResponseArrayOutput)
}

// Frontend ports of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) FrontendPorts() ApplicationGatewayFrontendPortResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayFrontendPortResponse { return v.FrontendPorts }).(ApplicationGatewayFrontendPortResponseArrayOutput)
}

// Subnets of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) GatewayIPConfigurations() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayIPConfigurationResponse {
		return v.GatewayIPConfigurations
	}).(ApplicationGatewayIPConfigurationResponseArrayOutput)
}

// Http listeners of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) HttpListeners() ApplicationGatewayHttpListenerResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayHttpListenerResponse { return v.HttpListeners }).(ApplicationGatewayHttpListenerResponseArrayOutput)
}

// Resource ID.
func (o ApplicationGatewayResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The identity of the application gateway, if configured.
func (o ApplicationGatewayResponseOutput) Identity() ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *ManagedServiceIdentityResponse { return v.Identity }).(ManagedServiceIdentityResponsePtrOutput)
}

// Resource location.
func (o ApplicationGatewayResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ApplicationGatewayResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Operational state of the application gateway resource.
func (o ApplicationGatewayResponseOutput) OperationalState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) string { return v.OperationalState }).(pulumi.StringOutput)
}

// Private Endpoint connections on application gateway.
func (o ApplicationGatewayResponseOutput) PrivateEndpointConnections() ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayPrivateEndpointConnectionResponse {
		return v.PrivateEndpointConnections
	}).(ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput)
}

// PrivateLink configurations on application gateway.
func (o ApplicationGatewayResponseOutput) PrivateLinkConfigurations() ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayPrivateLinkConfigurationResponse {
		return v.PrivateLinkConfigurations
	}).(ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput)
}

// Probes of the application gateway resource.
func (o ApplicationGatewayResponseOutput) Probes() ApplicationGatewayProbeResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayProbeResponse { return v.Probes }).(ApplicationGatewayProbeResponseArrayOutput)
}

// The provisioning state of the application gateway resource.
func (o ApplicationGatewayResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Redirect configurations of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) RedirectConfigurations() ApplicationGatewayRedirectConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayRedirectConfigurationResponse {
		return v.RedirectConfigurations
	}).(ApplicationGatewayRedirectConfigurationResponseArrayOutput)
}

// Request routing rules of the application gateway resource.
func (o ApplicationGatewayResponseOutput) RequestRoutingRules() ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayRequestRoutingRuleResponse {
		return v.RequestRoutingRules
	}).(ApplicationGatewayRequestRoutingRuleResponseArrayOutput)
}

// The resource GUID property of the application gateway resource.
func (o ApplicationGatewayResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Rewrite rules for the application gateway resource.
func (o ApplicationGatewayResponseOutput) RewriteRuleSets() ApplicationGatewayRewriteRuleSetResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayRewriteRuleSetResponse {
		return v.RewriteRuleSets
	}).(ApplicationGatewayRewriteRuleSetResponseArrayOutput)
}

// SKU of the application gateway resource.
func (o ApplicationGatewayResponseOutput) Sku() ApplicationGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *ApplicationGatewaySkuResponse { return v.Sku }).(ApplicationGatewaySkuResponsePtrOutput)
}

// SSL certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) SslCertificates() ApplicationGatewaySslCertificateResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewaySslCertificateResponse {
		return v.SslCertificates
	}).(ApplicationGatewaySslCertificateResponseArrayOutput)
}

// SSL policy of the application gateway resource.
func (o ApplicationGatewayResponseOutput) SslPolicy() ApplicationGatewaySslPolicyResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *ApplicationGatewaySslPolicyResponse { return v.SslPolicy }).(ApplicationGatewaySslPolicyResponsePtrOutput)
}

// SSL profiles of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) SslProfiles() ApplicationGatewaySslProfileResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewaySslProfileResponse { return v.SslProfiles }).(ApplicationGatewaySslProfileResponseArrayOutput)
}

// Resource tags.
func (o ApplicationGatewayResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Trusted client certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) TrustedClientCertificates() ApplicationGatewayTrustedClientCertificateResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayTrustedClientCertificateResponse {
		return v.TrustedClientCertificates
	}).(ApplicationGatewayTrustedClientCertificateResponseArrayOutput)
}

// Trusted Root certificates of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) TrustedRootCertificates() ApplicationGatewayTrustedRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayTrustedRootCertificateResponse {
		return v.TrustedRootCertificates
	}).(ApplicationGatewayTrustedRootCertificateResponseArrayOutput)
}

// Resource type.
func (o ApplicationGatewayResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) string { return v.Type }).(pulumi.StringOutput)
}

// URL path map of the application gateway resource. For default limits, see [Application Gateway limits](https://docs.microsoft.com/azure/azure-subscription-service-limits#application-gateway-limits).
func (o ApplicationGatewayResponseOutput) UrlPathMaps() ApplicationGatewayUrlPathMapResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []ApplicationGatewayUrlPathMapResponse { return v.UrlPathMaps }).(ApplicationGatewayUrlPathMapResponseArrayOutput)
}

// Web application firewall configuration.
func (o ApplicationGatewayResponseOutput) WebApplicationFirewallConfiguration() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) *ApplicationGatewayWebApplicationFirewallConfigurationResponse {
		return v.WebApplicationFirewallConfiguration
	}).(ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput)
}

// A list of availability zones denoting where the resource needs to come from.
func (o ApplicationGatewayResponseOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayResponse) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type ApplicationGatewayResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayResponse)(nil)).Elem()
}

func (o ApplicationGatewayResponseArrayOutput) ToApplicationGatewayResponseArrayOutput() ApplicationGatewayResponseArrayOutput {
	return o
}

func (o ApplicationGatewayResponseArrayOutput) ToApplicationGatewayResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayResponseArrayOutput {
	return o
}

func (o ApplicationGatewayResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayResponse {
		return vs[0].([]ApplicationGatewayResponse)[vs[1].(int)]
	}).(ApplicationGatewayResponseOutput)
}

// Rewrite rule of an application gateway.
type ApplicationGatewayRewriteRule struct {
	// Set of actions to be done as part of the rewrite Rule.
	ActionSet *ApplicationGatewayRewriteRuleActionSet `pulumi:"actionSet"`
	// Conditions based on which the action set execution will be evaluated.
	Conditions []ApplicationGatewayRewriteRuleCondition `pulumi:"conditions"`
	// Name of the rewrite rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.
	RuleSequence *int `pulumi:"ruleSequence"`
}

// ApplicationGatewayRewriteRuleInput is an input type that accepts ApplicationGatewayRewriteRuleArgs and ApplicationGatewayRewriteRuleOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleInput` via:
//
//          ApplicationGatewayRewriteRuleArgs{...}
type ApplicationGatewayRewriteRuleInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleOutput() ApplicationGatewayRewriteRuleOutput
	ToApplicationGatewayRewriteRuleOutputWithContext(context.Context) ApplicationGatewayRewriteRuleOutput
}

// Rewrite rule of an application gateway.
type ApplicationGatewayRewriteRuleArgs struct {
	// Set of actions to be done as part of the rewrite Rule.
	ActionSet ApplicationGatewayRewriteRuleActionSetPtrInput `pulumi:"actionSet"`
	// Conditions based on which the action set execution will be evaluated.
	Conditions ApplicationGatewayRewriteRuleConditionArrayInput `pulumi:"conditions"`
	// Name of the rewrite rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.
	RuleSequence pulumi.IntPtrInput `pulumi:"ruleSequence"`
}

func (ApplicationGatewayRewriteRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRule)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleArgs) ToApplicationGatewayRewriteRuleOutput() ApplicationGatewayRewriteRuleOutput {
	return i.ToApplicationGatewayRewriteRuleOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleArgs) ToApplicationGatewayRewriteRuleOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleOutput)
}

// ApplicationGatewayRewriteRuleArrayInput is an input type that accepts ApplicationGatewayRewriteRuleArray and ApplicationGatewayRewriteRuleArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleArrayInput` via:
//
//          ApplicationGatewayRewriteRuleArray{ ApplicationGatewayRewriteRuleArgs{...} }
type ApplicationGatewayRewriteRuleArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleArrayOutput() ApplicationGatewayRewriteRuleArrayOutput
	ToApplicationGatewayRewriteRuleArrayOutputWithContext(context.Context) ApplicationGatewayRewriteRuleArrayOutput
}

type ApplicationGatewayRewriteRuleArray []ApplicationGatewayRewriteRuleInput

func (ApplicationGatewayRewriteRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRule)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleArray) ToApplicationGatewayRewriteRuleArrayOutput() ApplicationGatewayRewriteRuleArrayOutput {
	return i.ToApplicationGatewayRewriteRuleArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleArray) ToApplicationGatewayRewriteRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleArrayOutput)
}

// Rewrite rule of an application gateway.
type ApplicationGatewayRewriteRuleOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRule)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleOutput) ToApplicationGatewayRewriteRuleOutput() ApplicationGatewayRewriteRuleOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleOutput) ToApplicationGatewayRewriteRuleOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleOutput {
	return o
}

// Set of actions to be done as part of the rewrite Rule.
func (o ApplicationGatewayRewriteRuleOutput) ActionSet() ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRule) *ApplicationGatewayRewriteRuleActionSet { return v.ActionSet }).(ApplicationGatewayRewriteRuleActionSetPtrOutput)
}

// Conditions based on which the action set execution will be evaluated.
func (o ApplicationGatewayRewriteRuleOutput) Conditions() ApplicationGatewayRewriteRuleConditionArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRule) []ApplicationGatewayRewriteRuleCondition { return v.Conditions }).(ApplicationGatewayRewriteRuleConditionArrayOutput)
}

// Name of the rewrite rule that is unique within an Application Gateway.
func (o ApplicationGatewayRewriteRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.
func (o ApplicationGatewayRewriteRuleOutput) RuleSequence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRule) *int { return v.RuleSequence }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayRewriteRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRule)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleArrayOutput) ToApplicationGatewayRewriteRuleArrayOutput() ApplicationGatewayRewriteRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleArrayOutput) ToApplicationGatewayRewriteRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRule {
		return vs[0].([]ApplicationGatewayRewriteRule)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleOutput)
}

// Set of actions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleActionSet struct {
	// Request Header Actions in the Action Set.
	RequestHeaderConfigurations []ApplicationGatewayHeaderConfiguration `pulumi:"requestHeaderConfigurations"`
	// Response Header Actions in the Action Set.
	ResponseHeaderConfigurations []ApplicationGatewayHeaderConfiguration `pulumi:"responseHeaderConfigurations"`
	// Url Configuration Action in the Action Set.
	UrlConfiguration *ApplicationGatewayUrlConfiguration `pulumi:"urlConfiguration"`
}

// ApplicationGatewayRewriteRuleActionSetInput is an input type that accepts ApplicationGatewayRewriteRuleActionSetArgs and ApplicationGatewayRewriteRuleActionSetOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleActionSetInput` via:
//
//          ApplicationGatewayRewriteRuleActionSetArgs{...}
type ApplicationGatewayRewriteRuleActionSetInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleActionSetOutput() ApplicationGatewayRewriteRuleActionSetOutput
	ToApplicationGatewayRewriteRuleActionSetOutputWithContext(context.Context) ApplicationGatewayRewriteRuleActionSetOutput
}

// Set of actions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleActionSetArgs struct {
	// Request Header Actions in the Action Set.
	RequestHeaderConfigurations ApplicationGatewayHeaderConfigurationArrayInput `pulumi:"requestHeaderConfigurations"`
	// Response Header Actions in the Action Set.
	ResponseHeaderConfigurations ApplicationGatewayHeaderConfigurationArrayInput `pulumi:"responseHeaderConfigurations"`
	// Url Configuration Action in the Action Set.
	UrlConfiguration ApplicationGatewayUrlConfigurationPtrInput `pulumi:"urlConfiguration"`
}

func (ApplicationGatewayRewriteRuleActionSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleActionSet)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleActionSetArgs) ToApplicationGatewayRewriteRuleActionSetOutput() ApplicationGatewayRewriteRuleActionSetOutput {
	return i.ToApplicationGatewayRewriteRuleActionSetOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleActionSetArgs) ToApplicationGatewayRewriteRuleActionSetOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleActionSetOutput)
}

func (i ApplicationGatewayRewriteRuleActionSetArgs) ToApplicationGatewayRewriteRuleActionSetPtrOutput() ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return i.ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleActionSetArgs) ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleActionSetOutput).ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(ctx)
}

// ApplicationGatewayRewriteRuleActionSetPtrInput is an input type that accepts ApplicationGatewayRewriteRuleActionSetArgs, ApplicationGatewayRewriteRuleActionSetPtr and ApplicationGatewayRewriteRuleActionSetPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleActionSetPtrInput` via:
//
//          ApplicationGatewayRewriteRuleActionSetArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayRewriteRuleActionSetPtrInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleActionSetPtrOutput() ApplicationGatewayRewriteRuleActionSetPtrOutput
	ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(context.Context) ApplicationGatewayRewriteRuleActionSetPtrOutput
}

type applicationGatewayRewriteRuleActionSetPtrType ApplicationGatewayRewriteRuleActionSetArgs

func ApplicationGatewayRewriteRuleActionSetPtr(v *ApplicationGatewayRewriteRuleActionSetArgs) ApplicationGatewayRewriteRuleActionSetPtrInput {
	return (*applicationGatewayRewriteRuleActionSetPtrType)(v)
}

func (*applicationGatewayRewriteRuleActionSetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRewriteRuleActionSet)(nil)).Elem()
}

func (i *applicationGatewayRewriteRuleActionSetPtrType) ToApplicationGatewayRewriteRuleActionSetPtrOutput() ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return i.ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayRewriteRuleActionSetPtrType) ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleActionSetPtrOutput)
}

// Set of actions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleActionSetOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleActionSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleActionSet)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleActionSetOutput) ToApplicationGatewayRewriteRuleActionSetOutput() ApplicationGatewayRewriteRuleActionSetOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetOutput) ToApplicationGatewayRewriteRuleActionSetOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetOutput) ToApplicationGatewayRewriteRuleActionSetPtrOutput() ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return o.ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayRewriteRuleActionSetOutput) ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSet) *ApplicationGatewayRewriteRuleActionSet {
		return &v
	}).(ApplicationGatewayRewriteRuleActionSetPtrOutput)
}

// Request Header Actions in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetOutput) RequestHeaderConfigurations() ApplicationGatewayHeaderConfigurationArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSet) []ApplicationGatewayHeaderConfiguration {
		return v.RequestHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationArrayOutput)
}

// Response Header Actions in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetOutput) ResponseHeaderConfigurations() ApplicationGatewayHeaderConfigurationArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSet) []ApplicationGatewayHeaderConfiguration {
		return v.ResponseHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationArrayOutput)
}

// Url Configuration Action in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetOutput) UrlConfiguration() ApplicationGatewayUrlConfigurationPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSet) *ApplicationGatewayUrlConfiguration {
		return v.UrlConfiguration
	}).(ApplicationGatewayUrlConfigurationPtrOutput)
}

type ApplicationGatewayRewriteRuleActionSetPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleActionSetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRewriteRuleActionSet)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleActionSetPtrOutput) ToApplicationGatewayRewriteRuleActionSetPtrOutput() ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetPtrOutput) ToApplicationGatewayRewriteRuleActionSetPtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetPtrOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetPtrOutput) Elem() ApplicationGatewayRewriteRuleActionSetOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSet) ApplicationGatewayRewriteRuleActionSet { return *v }).(ApplicationGatewayRewriteRuleActionSetOutput)
}

// Request Header Actions in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetPtrOutput) RequestHeaderConfigurations() ApplicationGatewayHeaderConfigurationArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSet) []ApplicationGatewayHeaderConfiguration {
		if v == nil {
			return nil
		}
		return v.RequestHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationArrayOutput)
}

// Response Header Actions in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetPtrOutput) ResponseHeaderConfigurations() ApplicationGatewayHeaderConfigurationArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSet) []ApplicationGatewayHeaderConfiguration {
		if v == nil {
			return nil
		}
		return v.ResponseHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationArrayOutput)
}

// Url Configuration Action in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetPtrOutput) UrlConfiguration() ApplicationGatewayUrlConfigurationPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSet) *ApplicationGatewayUrlConfiguration {
		if v == nil {
			return nil
		}
		return v.UrlConfiguration
	}).(ApplicationGatewayUrlConfigurationPtrOutput)
}

// Set of actions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleActionSetResponse struct {
	// Request Header Actions in the Action Set.
	RequestHeaderConfigurations []ApplicationGatewayHeaderConfigurationResponse `pulumi:"requestHeaderConfigurations"`
	// Response Header Actions in the Action Set.
	ResponseHeaderConfigurations []ApplicationGatewayHeaderConfigurationResponse `pulumi:"responseHeaderConfigurations"`
	// Url Configuration Action in the Action Set.
	UrlConfiguration *ApplicationGatewayUrlConfigurationResponse `pulumi:"urlConfiguration"`
}

// ApplicationGatewayRewriteRuleActionSetResponseInput is an input type that accepts ApplicationGatewayRewriteRuleActionSetResponseArgs and ApplicationGatewayRewriteRuleActionSetResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleActionSetResponseInput` via:
//
//          ApplicationGatewayRewriteRuleActionSetResponseArgs{...}
type ApplicationGatewayRewriteRuleActionSetResponseInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleActionSetResponseOutput() ApplicationGatewayRewriteRuleActionSetResponseOutput
	ToApplicationGatewayRewriteRuleActionSetResponseOutputWithContext(context.Context) ApplicationGatewayRewriteRuleActionSetResponseOutput
}

// Set of actions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleActionSetResponseArgs struct {
	// Request Header Actions in the Action Set.
	RequestHeaderConfigurations ApplicationGatewayHeaderConfigurationResponseArrayInput `pulumi:"requestHeaderConfigurations"`
	// Response Header Actions in the Action Set.
	ResponseHeaderConfigurations ApplicationGatewayHeaderConfigurationResponseArrayInput `pulumi:"responseHeaderConfigurations"`
	// Url Configuration Action in the Action Set.
	UrlConfiguration ApplicationGatewayUrlConfigurationResponsePtrInput `pulumi:"urlConfiguration"`
}

func (ApplicationGatewayRewriteRuleActionSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleActionSetResponse)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleActionSetResponseArgs) ToApplicationGatewayRewriteRuleActionSetResponseOutput() ApplicationGatewayRewriteRuleActionSetResponseOutput {
	return i.ToApplicationGatewayRewriteRuleActionSetResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleActionSetResponseArgs) ToApplicationGatewayRewriteRuleActionSetResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleActionSetResponseOutput)
}

func (i ApplicationGatewayRewriteRuleActionSetResponseArgs) ToApplicationGatewayRewriteRuleActionSetResponsePtrOutput() ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return i.ToApplicationGatewayRewriteRuleActionSetResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleActionSetResponseArgs) ToApplicationGatewayRewriteRuleActionSetResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleActionSetResponseOutput).ToApplicationGatewayRewriteRuleActionSetResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayRewriteRuleActionSetResponsePtrInput is an input type that accepts ApplicationGatewayRewriteRuleActionSetResponseArgs, ApplicationGatewayRewriteRuleActionSetResponsePtr and ApplicationGatewayRewriteRuleActionSetResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleActionSetResponsePtrInput` via:
//
//          ApplicationGatewayRewriteRuleActionSetResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayRewriteRuleActionSetResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleActionSetResponsePtrOutput() ApplicationGatewayRewriteRuleActionSetResponsePtrOutput
	ToApplicationGatewayRewriteRuleActionSetResponsePtrOutputWithContext(context.Context) ApplicationGatewayRewriteRuleActionSetResponsePtrOutput
}

type applicationGatewayRewriteRuleActionSetResponsePtrType ApplicationGatewayRewriteRuleActionSetResponseArgs

func ApplicationGatewayRewriteRuleActionSetResponsePtr(v *ApplicationGatewayRewriteRuleActionSetResponseArgs) ApplicationGatewayRewriteRuleActionSetResponsePtrInput {
	return (*applicationGatewayRewriteRuleActionSetResponsePtrType)(v)
}

func (*applicationGatewayRewriteRuleActionSetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRewriteRuleActionSetResponse)(nil)).Elem()
}

func (i *applicationGatewayRewriteRuleActionSetResponsePtrType) ToApplicationGatewayRewriteRuleActionSetResponsePtrOutput() ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return i.ToApplicationGatewayRewriteRuleActionSetResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayRewriteRuleActionSetResponsePtrType) ToApplicationGatewayRewriteRuleActionSetResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleActionSetResponsePtrOutput)
}

// Set of actions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleActionSetResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleActionSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleActionSetResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleActionSetResponseOutput) ToApplicationGatewayRewriteRuleActionSetResponseOutput() ApplicationGatewayRewriteRuleActionSetResponseOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetResponseOutput) ToApplicationGatewayRewriteRuleActionSetResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetResponseOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetResponseOutput) ToApplicationGatewayRewriteRuleActionSetResponsePtrOutput() ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return o.ToApplicationGatewayRewriteRuleActionSetResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayRewriteRuleActionSetResponseOutput) ToApplicationGatewayRewriteRuleActionSetResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSetResponse) *ApplicationGatewayRewriteRuleActionSetResponse {
		return &v
	}).(ApplicationGatewayRewriteRuleActionSetResponsePtrOutput)
}

// Request Header Actions in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetResponseOutput) RequestHeaderConfigurations() ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSetResponse) []ApplicationGatewayHeaderConfigurationResponse {
		return v.RequestHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationResponseArrayOutput)
}

// Response Header Actions in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetResponseOutput) ResponseHeaderConfigurations() ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSetResponse) []ApplicationGatewayHeaderConfigurationResponse {
		return v.ResponseHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationResponseArrayOutput)
}

// Url Configuration Action in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetResponseOutput) UrlConfiguration() ApplicationGatewayUrlConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleActionSetResponse) *ApplicationGatewayUrlConfigurationResponse {
		return v.UrlConfiguration
	}).(ApplicationGatewayUrlConfigurationResponsePtrOutput)
}

type ApplicationGatewayRewriteRuleActionSetResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayRewriteRuleActionSetResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) ToApplicationGatewayRewriteRuleActionSetResponsePtrOutput() ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) ToApplicationGatewayRewriteRuleActionSetResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) Elem() ApplicationGatewayRewriteRuleActionSetResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSetResponse) ApplicationGatewayRewriteRuleActionSetResponse {
		return *v
	}).(ApplicationGatewayRewriteRuleActionSetResponseOutput)
}

// Request Header Actions in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) RequestHeaderConfigurations() ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSetResponse) []ApplicationGatewayHeaderConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.RequestHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationResponseArrayOutput)
}

// Response Header Actions in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) ResponseHeaderConfigurations() ApplicationGatewayHeaderConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSetResponse) []ApplicationGatewayHeaderConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.ResponseHeaderConfigurations
	}).(ApplicationGatewayHeaderConfigurationResponseArrayOutput)
}

// Url Configuration Action in the Action Set.
func (o ApplicationGatewayRewriteRuleActionSetResponsePtrOutput) UrlConfiguration() ApplicationGatewayUrlConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayRewriteRuleActionSetResponse) *ApplicationGatewayUrlConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.UrlConfiguration
	}).(ApplicationGatewayUrlConfigurationResponsePtrOutput)
}

// Set of conditions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleCondition struct {
	// Setting this paramter to truth value with force the pattern to do a case in-sensitive comparison.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// Setting this value as truth will force to check the negation of the condition given by the user.
	Negate *bool `pulumi:"negate"`
	// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
	Pattern *string `pulumi:"pattern"`
	// The condition parameter of the RewriteRuleCondition.
	Variable *string `pulumi:"variable"`
}

// ApplicationGatewayRewriteRuleConditionInput is an input type that accepts ApplicationGatewayRewriteRuleConditionArgs and ApplicationGatewayRewriteRuleConditionOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleConditionInput` via:
//
//          ApplicationGatewayRewriteRuleConditionArgs{...}
type ApplicationGatewayRewriteRuleConditionInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleConditionOutput() ApplicationGatewayRewriteRuleConditionOutput
	ToApplicationGatewayRewriteRuleConditionOutputWithContext(context.Context) ApplicationGatewayRewriteRuleConditionOutput
}

// Set of conditions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleConditionArgs struct {
	// Setting this paramter to truth value with force the pattern to do a case in-sensitive comparison.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// Setting this value as truth will force to check the negation of the condition given by the user.
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// The condition parameter of the RewriteRuleCondition.
	Variable pulumi.StringPtrInput `pulumi:"variable"`
}

func (ApplicationGatewayRewriteRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleCondition)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleConditionArgs) ToApplicationGatewayRewriteRuleConditionOutput() ApplicationGatewayRewriteRuleConditionOutput {
	return i.ToApplicationGatewayRewriteRuleConditionOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleConditionArgs) ToApplicationGatewayRewriteRuleConditionOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleConditionOutput)
}

// ApplicationGatewayRewriteRuleConditionArrayInput is an input type that accepts ApplicationGatewayRewriteRuleConditionArray and ApplicationGatewayRewriteRuleConditionArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleConditionArrayInput` via:
//
//          ApplicationGatewayRewriteRuleConditionArray{ ApplicationGatewayRewriteRuleConditionArgs{...} }
type ApplicationGatewayRewriteRuleConditionArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleConditionArrayOutput() ApplicationGatewayRewriteRuleConditionArrayOutput
	ToApplicationGatewayRewriteRuleConditionArrayOutputWithContext(context.Context) ApplicationGatewayRewriteRuleConditionArrayOutput
}

type ApplicationGatewayRewriteRuleConditionArray []ApplicationGatewayRewriteRuleConditionInput

func (ApplicationGatewayRewriteRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleCondition)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleConditionArray) ToApplicationGatewayRewriteRuleConditionArrayOutput() ApplicationGatewayRewriteRuleConditionArrayOutput {
	return i.ToApplicationGatewayRewriteRuleConditionArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleConditionArray) ToApplicationGatewayRewriteRuleConditionArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleConditionArrayOutput)
}

// Set of conditions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleConditionOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleCondition)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleConditionOutput) ToApplicationGatewayRewriteRuleConditionOutput() ApplicationGatewayRewriteRuleConditionOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleConditionOutput) ToApplicationGatewayRewriteRuleConditionOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleConditionOutput {
	return o
}

// Setting this paramter to truth value with force the pattern to do a case in-sensitive comparison.
func (o ApplicationGatewayRewriteRuleConditionOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleCondition) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// Setting this value as truth will force to check the negation of the condition given by the user.
func (o ApplicationGatewayRewriteRuleConditionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleCondition) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
func (o ApplicationGatewayRewriteRuleConditionOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleCondition) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// The condition parameter of the RewriteRuleCondition.
func (o ApplicationGatewayRewriteRuleConditionOutput) Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleCondition) *string { return v.Variable }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayRewriteRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleCondition)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleConditionArrayOutput) ToApplicationGatewayRewriteRuleConditionArrayOutput() ApplicationGatewayRewriteRuleConditionArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleConditionArrayOutput) ToApplicationGatewayRewriteRuleConditionArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleConditionArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleConditionArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRuleCondition {
		return vs[0].([]ApplicationGatewayRewriteRuleCondition)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleConditionOutput)
}

// Set of conditions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleConditionResponse struct {
	// Setting this paramter to truth value with force the pattern to do a case in-sensitive comparison.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// Setting this value as truth will force to check the negation of the condition given by the user.
	Negate *bool `pulumi:"negate"`
	// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
	Pattern *string `pulumi:"pattern"`
	// The condition parameter of the RewriteRuleCondition.
	Variable *string `pulumi:"variable"`
}

// ApplicationGatewayRewriteRuleConditionResponseInput is an input type that accepts ApplicationGatewayRewriteRuleConditionResponseArgs and ApplicationGatewayRewriteRuleConditionResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleConditionResponseInput` via:
//
//          ApplicationGatewayRewriteRuleConditionResponseArgs{...}
type ApplicationGatewayRewriteRuleConditionResponseInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleConditionResponseOutput() ApplicationGatewayRewriteRuleConditionResponseOutput
	ToApplicationGatewayRewriteRuleConditionResponseOutputWithContext(context.Context) ApplicationGatewayRewriteRuleConditionResponseOutput
}

// Set of conditions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleConditionResponseArgs struct {
	// Setting this paramter to truth value with force the pattern to do a case in-sensitive comparison.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// Setting this value as truth will force to check the negation of the condition given by the user.
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
	Pattern pulumi.StringPtrInput `pulumi:"pattern"`
	// The condition parameter of the RewriteRuleCondition.
	Variable pulumi.StringPtrInput `pulumi:"variable"`
}

func (ApplicationGatewayRewriteRuleConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleConditionResponse)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleConditionResponseArgs) ToApplicationGatewayRewriteRuleConditionResponseOutput() ApplicationGatewayRewriteRuleConditionResponseOutput {
	return i.ToApplicationGatewayRewriteRuleConditionResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleConditionResponseArgs) ToApplicationGatewayRewriteRuleConditionResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleConditionResponseOutput)
}

// ApplicationGatewayRewriteRuleConditionResponseArrayInput is an input type that accepts ApplicationGatewayRewriteRuleConditionResponseArray and ApplicationGatewayRewriteRuleConditionResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleConditionResponseArrayInput` via:
//
//          ApplicationGatewayRewriteRuleConditionResponseArray{ ApplicationGatewayRewriteRuleConditionResponseArgs{...} }
type ApplicationGatewayRewriteRuleConditionResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleConditionResponseArrayOutput() ApplicationGatewayRewriteRuleConditionResponseArrayOutput
	ToApplicationGatewayRewriteRuleConditionResponseArrayOutputWithContext(context.Context) ApplicationGatewayRewriteRuleConditionResponseArrayOutput
}

type ApplicationGatewayRewriteRuleConditionResponseArray []ApplicationGatewayRewriteRuleConditionResponseInput

func (ApplicationGatewayRewriteRuleConditionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleConditionResponse)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleConditionResponseArray) ToApplicationGatewayRewriteRuleConditionResponseArrayOutput() ApplicationGatewayRewriteRuleConditionResponseArrayOutput {
	return i.ToApplicationGatewayRewriteRuleConditionResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleConditionResponseArray) ToApplicationGatewayRewriteRuleConditionResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleConditionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleConditionResponseArrayOutput)
}

// Set of conditions in the Rewrite Rule in Application Gateway.
type ApplicationGatewayRewriteRuleConditionResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleConditionResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleConditionResponseOutput) ToApplicationGatewayRewriteRuleConditionResponseOutput() ApplicationGatewayRewriteRuleConditionResponseOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleConditionResponseOutput) ToApplicationGatewayRewriteRuleConditionResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleConditionResponseOutput {
	return o
}

// Setting this paramter to truth value with force the pattern to do a case in-sensitive comparison.
func (o ApplicationGatewayRewriteRuleConditionResponseOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleConditionResponse) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// Setting this value as truth will force to check the negation of the condition given by the user.
func (o ApplicationGatewayRewriteRuleConditionResponseOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleConditionResponse) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
func (o ApplicationGatewayRewriteRuleConditionResponseOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleConditionResponse) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

// The condition parameter of the RewriteRuleCondition.
func (o ApplicationGatewayRewriteRuleConditionResponseOutput) Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleConditionResponse) *string { return v.Variable }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayRewriteRuleConditionResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleConditionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleConditionResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleConditionResponseArrayOutput) ToApplicationGatewayRewriteRuleConditionResponseArrayOutput() ApplicationGatewayRewriteRuleConditionResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleConditionResponseArrayOutput) ToApplicationGatewayRewriteRuleConditionResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleConditionResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleConditionResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleConditionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRuleConditionResponse {
		return vs[0].([]ApplicationGatewayRewriteRuleConditionResponse)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleConditionResponseOutput)
}

// Rewrite rule of an application gateway.
type ApplicationGatewayRewriteRuleResponse struct {
	// Set of actions to be done as part of the rewrite Rule.
	ActionSet *ApplicationGatewayRewriteRuleActionSetResponse `pulumi:"actionSet"`
	// Conditions based on which the action set execution will be evaluated.
	Conditions []ApplicationGatewayRewriteRuleConditionResponse `pulumi:"conditions"`
	// Name of the rewrite rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.
	RuleSequence *int `pulumi:"ruleSequence"`
}

// ApplicationGatewayRewriteRuleResponseInput is an input type that accepts ApplicationGatewayRewriteRuleResponseArgs and ApplicationGatewayRewriteRuleResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleResponseInput` via:
//
//          ApplicationGatewayRewriteRuleResponseArgs{...}
type ApplicationGatewayRewriteRuleResponseInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleResponseOutput() ApplicationGatewayRewriteRuleResponseOutput
	ToApplicationGatewayRewriteRuleResponseOutputWithContext(context.Context) ApplicationGatewayRewriteRuleResponseOutput
}

// Rewrite rule of an application gateway.
type ApplicationGatewayRewriteRuleResponseArgs struct {
	// Set of actions to be done as part of the rewrite Rule.
	ActionSet ApplicationGatewayRewriteRuleActionSetResponsePtrInput `pulumi:"actionSet"`
	// Conditions based on which the action set execution will be evaluated.
	Conditions ApplicationGatewayRewriteRuleConditionResponseArrayInput `pulumi:"conditions"`
	// Name of the rewrite rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.
	RuleSequence pulumi.IntPtrInput `pulumi:"ruleSequence"`
}

func (ApplicationGatewayRewriteRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleResponseArgs) ToApplicationGatewayRewriteRuleResponseOutput() ApplicationGatewayRewriteRuleResponseOutput {
	return i.ToApplicationGatewayRewriteRuleResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleResponseArgs) ToApplicationGatewayRewriteRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleResponseOutput)
}

// ApplicationGatewayRewriteRuleResponseArrayInput is an input type that accepts ApplicationGatewayRewriteRuleResponseArray and ApplicationGatewayRewriteRuleResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleResponseArrayInput` via:
//
//          ApplicationGatewayRewriteRuleResponseArray{ ApplicationGatewayRewriteRuleResponseArgs{...} }
type ApplicationGatewayRewriteRuleResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleResponseArrayOutput() ApplicationGatewayRewriteRuleResponseArrayOutput
	ToApplicationGatewayRewriteRuleResponseArrayOutputWithContext(context.Context) ApplicationGatewayRewriteRuleResponseArrayOutput
}

type ApplicationGatewayRewriteRuleResponseArray []ApplicationGatewayRewriteRuleResponseInput

func (ApplicationGatewayRewriteRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleResponseArray) ToApplicationGatewayRewriteRuleResponseArrayOutput() ApplicationGatewayRewriteRuleResponseArrayOutput {
	return i.ToApplicationGatewayRewriteRuleResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleResponseArray) ToApplicationGatewayRewriteRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleResponseArrayOutput)
}

// Rewrite rule of an application gateway.
type ApplicationGatewayRewriteRuleResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleResponseOutput) ToApplicationGatewayRewriteRuleResponseOutput() ApplicationGatewayRewriteRuleResponseOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleResponseOutput) ToApplicationGatewayRewriteRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleResponseOutput {
	return o
}

// Set of actions to be done as part of the rewrite Rule.
func (o ApplicationGatewayRewriteRuleResponseOutput) ActionSet() ApplicationGatewayRewriteRuleActionSetResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleResponse) *ApplicationGatewayRewriteRuleActionSetResponse {
		return v.ActionSet
	}).(ApplicationGatewayRewriteRuleActionSetResponsePtrOutput)
}

// Conditions based on which the action set execution will be evaluated.
func (o ApplicationGatewayRewriteRuleResponseOutput) Conditions() ApplicationGatewayRewriteRuleConditionResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleResponse) []ApplicationGatewayRewriteRuleConditionResponse {
		return v.Conditions
	}).(ApplicationGatewayRewriteRuleConditionResponseArrayOutput)
}

// Name of the rewrite rule that is unique within an Application Gateway.
func (o ApplicationGatewayRewriteRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Sequence of the rewrite rule that determines the order of execution of a particular rule in a RewriteRuleSet.
func (o ApplicationGatewayRewriteRuleResponseOutput) RuleSequence() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleResponse) *int { return v.RuleSequence }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayRewriteRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleResponseArrayOutput) ToApplicationGatewayRewriteRuleResponseArrayOutput() ApplicationGatewayRewriteRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleResponseArrayOutput) ToApplicationGatewayRewriteRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRuleResponse {
		return vs[0].([]ApplicationGatewayRewriteRuleResponse)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleResponseOutput)
}

// Rewrite rule set of an application gateway.
type ApplicationGatewayRewriteRuleSet struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the rewrite rule set that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Rewrite rules in the rewrite rule set.
	RewriteRules []ApplicationGatewayRewriteRule `pulumi:"rewriteRules"`
}

// ApplicationGatewayRewriteRuleSetInput is an input type that accepts ApplicationGatewayRewriteRuleSetArgs and ApplicationGatewayRewriteRuleSetOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetInput` via:
//
//          ApplicationGatewayRewriteRuleSetArgs{...}
type ApplicationGatewayRewriteRuleSetInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetOutput() ApplicationGatewayRewriteRuleSetOutput
	ToApplicationGatewayRewriteRuleSetOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetOutput
}

// Rewrite rule set of an application gateway.
type ApplicationGatewayRewriteRuleSetArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the rewrite rule set that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rewrite rules in the rewrite rule set.
	RewriteRules ApplicationGatewayRewriteRuleArrayInput `pulumi:"rewriteRules"`
}

func (ApplicationGatewayRewriteRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetArgs) ToApplicationGatewayRewriteRuleSetOutput() ApplicationGatewayRewriteRuleSetOutput {
	return i.ToApplicationGatewayRewriteRuleSetOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetArgs) ToApplicationGatewayRewriteRuleSetOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetOutput)
}

// ApplicationGatewayRewriteRuleSetArrayInput is an input type that accepts ApplicationGatewayRewriteRuleSetArray and ApplicationGatewayRewriteRuleSetArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetArrayInput` via:
//
//          ApplicationGatewayRewriteRuleSetArray{ ApplicationGatewayRewriteRuleSetArgs{...} }
type ApplicationGatewayRewriteRuleSetArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetArrayOutput() ApplicationGatewayRewriteRuleSetArrayOutput
	ToApplicationGatewayRewriteRuleSetArrayOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetArrayOutput
}

type ApplicationGatewayRewriteRuleSetArray []ApplicationGatewayRewriteRuleSetInput

func (ApplicationGatewayRewriteRuleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetArray) ToApplicationGatewayRewriteRuleSetArrayOutput() ApplicationGatewayRewriteRuleSetArrayOutput {
	return i.ToApplicationGatewayRewriteRuleSetArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetArray) ToApplicationGatewayRewriteRuleSetArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetArrayOutput)
}

// Rewrite rule set of an application gateway.
type ApplicationGatewayRewriteRuleSetOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetOutput) ToApplicationGatewayRewriteRuleSetOutput() ApplicationGatewayRewriteRuleSetOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetOutput) ToApplicationGatewayRewriteRuleSetOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetOutput {
	return o
}

// Resource ID.
func (o ApplicationGatewayRewriteRuleSetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSet) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the rewrite rule set that is unique within an Application Gateway.
func (o ApplicationGatewayRewriteRuleSetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSet) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rewrite rules in the rewrite rule set.
func (o ApplicationGatewayRewriteRuleSetOutput) RewriteRules() ApplicationGatewayRewriteRuleArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSet) []ApplicationGatewayRewriteRule { return v.RewriteRules }).(ApplicationGatewayRewriteRuleArrayOutput)
}

type ApplicationGatewayRewriteRuleSetArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSet)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetArrayOutput) ToApplicationGatewayRewriteRuleSetArrayOutput() ApplicationGatewayRewriteRuleSetArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetArrayOutput) ToApplicationGatewayRewriteRuleSetArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRuleSet {
		return vs[0].([]ApplicationGatewayRewriteRuleSet)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleSetOutput)
}

// Rewrite rule set of an application gateway.
type ApplicationGatewayRewriteRuleSetResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the rewrite rule set that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the rewrite rule set resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Rewrite rules in the rewrite rule set.
	RewriteRules []ApplicationGatewayRewriteRuleResponse `pulumi:"rewriteRules"`
}

// ApplicationGatewayRewriteRuleSetResponseInput is an input type that accepts ApplicationGatewayRewriteRuleSetResponseArgs and ApplicationGatewayRewriteRuleSetResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetResponseInput` via:
//
//          ApplicationGatewayRewriteRuleSetResponseArgs{...}
type ApplicationGatewayRewriteRuleSetResponseInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetResponseOutput() ApplicationGatewayRewriteRuleSetResponseOutput
	ToApplicationGatewayRewriteRuleSetResponseOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetResponseOutput
}

// Rewrite rule set of an application gateway.
type ApplicationGatewayRewriteRuleSetResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the rewrite rule set that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the rewrite rule set resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Rewrite rules in the rewrite rule set.
	RewriteRules ApplicationGatewayRewriteRuleResponseArrayInput `pulumi:"rewriteRules"`
}

func (ApplicationGatewayRewriteRuleSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSetResponse)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetResponseArgs) ToApplicationGatewayRewriteRuleSetResponseOutput() ApplicationGatewayRewriteRuleSetResponseOutput {
	return i.ToApplicationGatewayRewriteRuleSetResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetResponseArgs) ToApplicationGatewayRewriteRuleSetResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetResponseOutput)
}

// ApplicationGatewayRewriteRuleSetResponseArrayInput is an input type that accepts ApplicationGatewayRewriteRuleSetResponseArray and ApplicationGatewayRewriteRuleSetResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRewriteRuleSetResponseArrayInput` via:
//
//          ApplicationGatewayRewriteRuleSetResponseArray{ ApplicationGatewayRewriteRuleSetResponseArgs{...} }
type ApplicationGatewayRewriteRuleSetResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRewriteRuleSetResponseArrayOutput() ApplicationGatewayRewriteRuleSetResponseArrayOutput
	ToApplicationGatewayRewriteRuleSetResponseArrayOutputWithContext(context.Context) ApplicationGatewayRewriteRuleSetResponseArrayOutput
}

type ApplicationGatewayRewriteRuleSetResponseArray []ApplicationGatewayRewriteRuleSetResponseInput

func (ApplicationGatewayRewriteRuleSetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSetResponse)(nil)).Elem()
}

func (i ApplicationGatewayRewriteRuleSetResponseArray) ToApplicationGatewayRewriteRuleSetResponseArrayOutput() ApplicationGatewayRewriteRuleSetResponseArrayOutput {
	return i.ToApplicationGatewayRewriteRuleSetResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRewriteRuleSetResponseArray) ToApplicationGatewayRewriteRuleSetResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRewriteRuleSetResponseArrayOutput)
}

// Rewrite rule set of an application gateway.
type ApplicationGatewayRewriteRuleSetResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRewriteRuleSetResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetResponseOutput) ToApplicationGatewayRewriteRuleSetResponseOutput() ApplicationGatewayRewriteRuleSetResponseOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetResponseOutput) ToApplicationGatewayRewriteRuleSetResponseOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayRewriteRuleSetResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayRewriteRuleSetResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the rewrite rule set that is unique within an Application Gateway.
func (o ApplicationGatewayRewriteRuleSetResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the rewrite rule set resource.
func (o ApplicationGatewayRewriteRuleSetResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Rewrite rules in the rewrite rule set.
func (o ApplicationGatewayRewriteRuleSetResponseOutput) RewriteRules() ApplicationGatewayRewriteRuleResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRewriteRuleSetResponse) []ApplicationGatewayRewriteRuleResponse {
		return v.RewriteRules
	}).(ApplicationGatewayRewriteRuleResponseArrayOutput)
}

type ApplicationGatewayRewriteRuleSetResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRewriteRuleSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRewriteRuleSetResponse)(nil)).Elem()
}

func (o ApplicationGatewayRewriteRuleSetResponseArrayOutput) ToApplicationGatewayRewriteRuleSetResponseArrayOutput() ApplicationGatewayRewriteRuleSetResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetResponseArrayOutput) ToApplicationGatewayRewriteRuleSetResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRewriteRuleSetResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRewriteRuleSetResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRewriteRuleSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRewriteRuleSetResponse {
		return vs[0].([]ApplicationGatewayRewriteRuleSetResponse)[vs[1].(int)]
	}).(ApplicationGatewayRewriteRuleSetResponseOutput)
}

// SKU of an application gateway.
type ApplicationGatewaySku struct {
	// Capacity (instance count) of an application gateway.
	Capacity *int `pulumi:"capacity"`
	// Name of an application gateway SKU.
	Name *string `pulumi:"name"`
	// Tier of an application gateway.
	Tier *string `pulumi:"tier"`
}

// ApplicationGatewaySkuInput is an input type that accepts ApplicationGatewaySkuArgs and ApplicationGatewaySkuOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuInput` via:
//
//          ApplicationGatewaySkuArgs{...}
type ApplicationGatewaySkuInput interface {
	pulumi.Input

	ToApplicationGatewaySkuOutput() ApplicationGatewaySkuOutput
	ToApplicationGatewaySkuOutputWithContext(context.Context) ApplicationGatewaySkuOutput
}

// SKU of an application gateway.
type ApplicationGatewaySkuArgs struct {
	// Capacity (instance count) of an application gateway.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Name of an application gateway SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of an application gateway.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ApplicationGatewaySkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySku)(nil)).Elem()
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuOutput() ApplicationGatewaySkuOutput {
	return i.ToApplicationGatewaySkuOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuOutputWithContext(ctx context.Context) ApplicationGatewaySkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuOutput)
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return i.ToApplicationGatewaySkuPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuOutput).ToApplicationGatewaySkuPtrOutputWithContext(ctx)
}

// ApplicationGatewaySkuPtrInput is an input type that accepts ApplicationGatewaySkuArgs, ApplicationGatewaySkuPtr and ApplicationGatewaySkuPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuPtrInput` via:
//
//          ApplicationGatewaySkuArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewaySkuPtrInput interface {
	pulumi.Input

	ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput
	ToApplicationGatewaySkuPtrOutputWithContext(context.Context) ApplicationGatewaySkuPtrOutput
}

type applicationGatewaySkuPtrType ApplicationGatewaySkuArgs

func ApplicationGatewaySkuPtr(v *ApplicationGatewaySkuArgs) ApplicationGatewaySkuPtrInput {
	return (*applicationGatewaySkuPtrType)(v)
}

func (*applicationGatewaySkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySku)(nil)).Elem()
}

func (i *applicationGatewaySkuPtrType) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return i.ToApplicationGatewaySkuPtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySkuPtrType) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuPtrOutput)
}

// SKU of an application gateway.
type ApplicationGatewaySkuOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySku)(nil)).Elem()
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuOutput() ApplicationGatewaySkuOutput {
	return o
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuOutputWithContext(ctx context.Context) ApplicationGatewaySkuOutput {
	return o
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return o.ToApplicationGatewaySkuPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *ApplicationGatewaySku {
		return &v
	}).(ApplicationGatewaySkuPtrOutput)
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU.
func (o ApplicationGatewaySkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySkuPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySku)(nil)).Elem()
}

func (o ApplicationGatewaySkuPtrOutput) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return o
}

func (o ApplicationGatewaySkuPtrOutput) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return o
}

func (o ApplicationGatewaySkuPtrOutput) Elem() ApplicationGatewaySkuOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) ApplicationGatewaySku { return *v }).(ApplicationGatewaySkuOutput)
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU.
func (o ApplicationGatewaySkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU of an application gateway.
type ApplicationGatewaySkuResponse struct {
	// Capacity (instance count) of an application gateway.
	Capacity *int `pulumi:"capacity"`
	// Name of an application gateway SKU.
	Name *string `pulumi:"name"`
	// Tier of an application gateway.
	Tier *string `pulumi:"tier"`
}

// ApplicationGatewaySkuResponseInput is an input type that accepts ApplicationGatewaySkuResponseArgs and ApplicationGatewaySkuResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuResponseInput` via:
//
//          ApplicationGatewaySkuResponseArgs{...}
type ApplicationGatewaySkuResponseInput interface {
	pulumi.Input

	ToApplicationGatewaySkuResponseOutput() ApplicationGatewaySkuResponseOutput
	ToApplicationGatewaySkuResponseOutputWithContext(context.Context) ApplicationGatewaySkuResponseOutput
}

// SKU of an application gateway.
type ApplicationGatewaySkuResponseArgs struct {
	// Capacity (instance count) of an application gateway.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Name of an application gateway SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of an application gateway.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ApplicationGatewaySkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySkuResponse)(nil)).Elem()
}

func (i ApplicationGatewaySkuResponseArgs) ToApplicationGatewaySkuResponseOutput() ApplicationGatewaySkuResponseOutput {
	return i.ToApplicationGatewaySkuResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuResponseArgs) ToApplicationGatewaySkuResponseOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuResponseOutput)
}

func (i ApplicationGatewaySkuResponseArgs) ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput {
	return i.ToApplicationGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuResponseArgs) ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuResponseOutput).ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewaySkuResponsePtrInput is an input type that accepts ApplicationGatewaySkuResponseArgs, ApplicationGatewaySkuResponsePtr and ApplicationGatewaySkuResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuResponsePtrInput` via:
//
//          ApplicationGatewaySkuResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewaySkuResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput
	ToApplicationGatewaySkuResponsePtrOutputWithContext(context.Context) ApplicationGatewaySkuResponsePtrOutput
}

type applicationGatewaySkuResponsePtrType ApplicationGatewaySkuResponseArgs

func ApplicationGatewaySkuResponsePtr(v *ApplicationGatewaySkuResponseArgs) ApplicationGatewaySkuResponsePtrInput {
	return (*applicationGatewaySkuResponsePtrType)(v)
}

func (*applicationGatewaySkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySkuResponse)(nil)).Elem()
}

func (i *applicationGatewaySkuResponsePtrType) ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput {
	return i.ToApplicationGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySkuResponsePtrType) ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuResponsePtrOutput)
}

// SKU of an application gateway.
type ApplicationGatewaySkuResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySkuResponse)(nil)).Elem()
}

func (o ApplicationGatewaySkuResponseOutput) ToApplicationGatewaySkuResponseOutput() ApplicationGatewaySkuResponseOutput {
	return o
}

func (o ApplicationGatewaySkuResponseOutput) ToApplicationGatewaySkuResponseOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponseOutput {
	return o
}

func (o ApplicationGatewaySkuResponseOutput) ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput {
	return o.ToApplicationGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySkuResponseOutput) ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuResponse) *ApplicationGatewaySkuResponse {
		return &v
	}).(ApplicationGatewaySkuResponsePtrOutput)
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU.
func (o ApplicationGatewaySkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySkuResponse)(nil)).Elem()
}

func (o ApplicationGatewaySkuResponsePtrOutput) ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySkuResponsePtrOutput) ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySkuResponsePtrOutput) Elem() ApplicationGatewaySkuResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) ApplicationGatewaySkuResponse { return *v }).(ApplicationGatewaySkuResponseOutput)
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU.
func (o ApplicationGatewaySkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificate struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data *string `pulumi:"data"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId *string `pulumi:"keyVaultSecretId"`
	// Name of the SSL certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password *string `pulumi:"password"`
}

// ApplicationGatewaySslCertificateInput is an input type that accepts ApplicationGatewaySslCertificateArgs and ApplicationGatewaySslCertificateOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateInput` via:
//
//          ApplicationGatewaySslCertificateArgs{...}
type ApplicationGatewaySslCertificateInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateOutput() ApplicationGatewaySslCertificateOutput
	ToApplicationGatewaySslCertificateOutputWithContext(context.Context) ApplicationGatewaySslCertificateOutput
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateArgs struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId pulumi.StringPtrInput `pulumi:"keyVaultSecretId"`
	// Name of the SSL certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password pulumi.StringPtrInput `pulumi:"password"`
}

func (ApplicationGatewaySslCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateArgs) ToApplicationGatewaySslCertificateOutput() ApplicationGatewaySslCertificateOutput {
	return i.ToApplicationGatewaySslCertificateOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateArgs) ToApplicationGatewaySslCertificateOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateOutput)
}

// ApplicationGatewaySslCertificateArrayInput is an input type that accepts ApplicationGatewaySslCertificateArray and ApplicationGatewaySslCertificateArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateArrayInput` via:
//
//          ApplicationGatewaySslCertificateArray{ ApplicationGatewaySslCertificateArgs{...} }
type ApplicationGatewaySslCertificateArrayInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateArrayOutput() ApplicationGatewaySslCertificateArrayOutput
	ToApplicationGatewaySslCertificateArrayOutputWithContext(context.Context) ApplicationGatewaySslCertificateArrayOutput
}

type ApplicationGatewaySslCertificateArray []ApplicationGatewaySslCertificateInput

func (ApplicationGatewaySslCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateArray) ToApplicationGatewaySslCertificateArrayOutput() ApplicationGatewaySslCertificateArrayOutput {
	return i.ToApplicationGatewaySslCertificateArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateArray) ToApplicationGatewaySslCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateArrayOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateOutput) ToApplicationGatewaySslCertificateOutput() ApplicationGatewaySslCertificateOutput {
	return o
}

func (o ApplicationGatewaySslCertificateOutput) ToApplicationGatewaySslCertificateOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateOutput {
	return o
}

// Base-64 encoded pfx certificate. Only applicable in PUT Request.
func (o ApplicationGatewaySslCertificateOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewaySslCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o ApplicationGatewaySslCertificateOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.KeyVaultSecretId }).(pulumi.StringPtrOutput)
}

// Name of the SSL certificate that is unique within an Application Gateway.
func (o ApplicationGatewaySslCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Password for the pfx file specified in data. Only applicable in PUT request.
func (o ApplicationGatewaySslCertificateOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Password }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslCertificateArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateArrayOutput) ToApplicationGatewaySslCertificateArrayOutput() ApplicationGatewaySslCertificateArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateArrayOutput) ToApplicationGatewaySslCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateArrayOutput) Index(i pulumi.IntInput) ApplicationGatewaySslCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewaySslCertificate {
		return vs[0].([]ApplicationGatewaySslCertificate)[vs[1].(int)]
	}).(ApplicationGatewaySslCertificateOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateResponse struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data *string `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId *string `pulumi:"keyVaultSecretId"`
	// Name of the SSL certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password *string `pulumi:"password"`
	// The provisioning state of the SSL certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
	PublicCertData string `pulumi:"publicCertData"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// ApplicationGatewaySslCertificateResponseInput is an input type that accepts ApplicationGatewaySslCertificateResponseArgs and ApplicationGatewaySslCertificateResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateResponseInput` via:
//
//          ApplicationGatewaySslCertificateResponseArgs{...}
type ApplicationGatewaySslCertificateResponseInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateResponseOutput() ApplicationGatewaySslCertificateResponseOutput
	ToApplicationGatewaySslCertificateResponseOutputWithContext(context.Context) ApplicationGatewaySslCertificateResponseOutput
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateResponseArgs struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId pulumi.StringPtrInput `pulumi:"keyVaultSecretId"`
	// Name of the SSL certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The provisioning state of the SSL certificate resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationGatewaySslCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateResponseArgs) ToApplicationGatewaySslCertificateResponseOutput() ApplicationGatewaySslCertificateResponseOutput {
	return i.ToApplicationGatewaySslCertificateResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateResponseArgs) ToApplicationGatewaySslCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateResponseOutput)
}

// ApplicationGatewaySslCertificateResponseArrayInput is an input type that accepts ApplicationGatewaySslCertificateResponseArray and ApplicationGatewaySslCertificateResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateResponseArrayInput` via:
//
//          ApplicationGatewaySslCertificateResponseArray{ ApplicationGatewaySslCertificateResponseArgs{...} }
type ApplicationGatewaySslCertificateResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateResponseArrayOutput() ApplicationGatewaySslCertificateResponseArrayOutput
	ToApplicationGatewaySslCertificateResponseArrayOutputWithContext(context.Context) ApplicationGatewaySslCertificateResponseArrayOutput
}

type ApplicationGatewaySslCertificateResponseArray []ApplicationGatewaySslCertificateResponseInput

func (ApplicationGatewaySslCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateResponseArray) ToApplicationGatewaySslCertificateResponseArrayOutput() ApplicationGatewaySslCertificateResponseArrayOutput {
	return i.ToApplicationGatewaySslCertificateResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateResponseArray) ToApplicationGatewaySslCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateResponseArrayOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateResponseOutput) ToApplicationGatewaySslCertificateResponseOutput() ApplicationGatewaySslCertificateResponseOutput {
	return o
}

func (o ApplicationGatewaySslCertificateResponseOutput) ToApplicationGatewaySslCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateResponseOutput {
	return o
}

// Base-64 encoded pfx certificate. Only applicable in PUT Request.
func (o ApplicationGatewaySslCertificateResponseOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewaySslCertificateResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewaySslCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o ApplicationGatewaySslCertificateResponseOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.KeyVaultSecretId }).(pulumi.StringPtrOutput)
}

// Name of the SSL certificate that is unique within an Application Gateway.
func (o ApplicationGatewaySslCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Password for the pfx file specified in data. Only applicable in PUT request.
func (o ApplicationGatewaySslCertificateResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The provisioning state of the SSL certificate resource.
func (o ApplicationGatewaySslCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
func (o ApplicationGatewaySslCertificateResponseOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) string { return v.PublicCertData }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewaySslCertificateResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewaySslCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateResponseArrayOutput) ToApplicationGatewaySslCertificateResponseArrayOutput() ApplicationGatewaySslCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateResponseArrayOutput) ToApplicationGatewaySslCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewaySslCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewaySslCertificateResponse {
		return vs[0].([]ApplicationGatewaySslCertificateResponse)[vs[1].(int)]
	}).(ApplicationGatewaySslCertificateResponseOutput)
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicy struct {
	// Ssl cipher suites to be enabled in the specified order to application gateway.
	CipherSuites []string `pulumi:"cipherSuites"`
	// Ssl protocols to be disabled on application gateway.
	DisabledSslProtocols []string `pulumi:"disabledSslProtocols"`
	// Minimum version of Ssl protocol to be supported on application gateway.
	MinProtocolVersion *string `pulumi:"minProtocolVersion"`
	// Name of Ssl predefined policy.
	PolicyName *string `pulumi:"policyName"`
	// Type of Ssl Policy.
	PolicyType *string `pulumi:"policyType"`
}

// ApplicationGatewaySslPolicyInput is an input type that accepts ApplicationGatewaySslPolicyArgs and ApplicationGatewaySslPolicyOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslPolicyInput` via:
//
//          ApplicationGatewaySslPolicyArgs{...}
type ApplicationGatewaySslPolicyInput interface {
	pulumi.Input

	ToApplicationGatewaySslPolicyOutput() ApplicationGatewaySslPolicyOutput
	ToApplicationGatewaySslPolicyOutputWithContext(context.Context) ApplicationGatewaySslPolicyOutput
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicyArgs struct {
	// Ssl cipher suites to be enabled in the specified order to application gateway.
	CipherSuites pulumi.StringArrayInput `pulumi:"cipherSuites"`
	// Ssl protocols to be disabled on application gateway.
	DisabledSslProtocols pulumi.StringArrayInput `pulumi:"disabledSslProtocols"`
	// Minimum version of Ssl protocol to be supported on application gateway.
	MinProtocolVersion pulumi.StringPtrInput `pulumi:"minProtocolVersion"`
	// Name of Ssl predefined policy.
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Type of Ssl Policy.
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
}

func (ApplicationGatewaySslPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyOutput() ApplicationGatewaySslPolicyOutput {
	return i.ToApplicationGatewaySslPolicyOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyOutput)
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return i.ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyOutput).ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx)
}

// ApplicationGatewaySslPolicyPtrInput is an input type that accepts ApplicationGatewaySslPolicyArgs, ApplicationGatewaySslPolicyPtr and ApplicationGatewaySslPolicyPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslPolicyPtrInput` via:
//
//          ApplicationGatewaySslPolicyArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewaySslPolicyPtrInput interface {
	pulumi.Input

	ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput
	ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Context) ApplicationGatewaySslPolicyPtrOutput
}

type applicationGatewaySslPolicyPtrType ApplicationGatewaySslPolicyArgs

func ApplicationGatewaySslPolicyPtr(v *ApplicationGatewaySslPolicyArgs) ApplicationGatewaySslPolicyPtrInput {
	return (*applicationGatewaySslPolicyPtrType)(v)
}

func (*applicationGatewaySslPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (i *applicationGatewaySslPolicyPtrType) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return i.ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySslPolicyPtrType) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyPtrOutput)
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicyOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyOutput() ApplicationGatewaySslPolicyOutput {
	return o
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyOutput {
	return o
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return o.ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) *ApplicationGatewaySslPolicy {
		return &v
	}).(ApplicationGatewaySslPolicyPtrOutput)
}

// Ssl cipher suites to be enabled in the specified order to application gateway.
func (o ApplicationGatewaySslPolicyOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) []string { return v.CipherSuites }).(pulumi.StringArrayOutput)
}

// Ssl protocols to be disabled on application gateway.
func (o ApplicationGatewaySslPolicyOutput) DisabledSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) []string { return v.DisabledSslProtocols }).(pulumi.StringArrayOutput)
}

// Minimum version of Ssl protocol to be supported on application gateway.
func (o ApplicationGatewaySslPolicyOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) *string { return v.MinProtocolVersion }).(pulumi.StringPtrOutput)
}

// Name of Ssl predefined policy.
func (o ApplicationGatewaySslPolicyOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Type of Ssl Policy.
func (o ApplicationGatewaySslPolicyOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslPolicyPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (o ApplicationGatewaySslPolicyPtrOutput) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return o
}

func (o ApplicationGatewaySslPolicyPtrOutput) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return o
}

func (o ApplicationGatewaySslPolicyPtrOutput) Elem() ApplicationGatewaySslPolicyOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) ApplicationGatewaySslPolicy { return *v }).(ApplicationGatewaySslPolicyOutput)
}

// Ssl cipher suites to be enabled in the specified order to application gateway.
func (o ApplicationGatewaySslPolicyPtrOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) []string {
		if v == nil {
			return nil
		}
		return v.CipherSuites
	}).(pulumi.StringArrayOutput)
}

// Ssl protocols to be disabled on application gateway.
func (o ApplicationGatewaySslPolicyPtrOutput) DisabledSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) []string {
		if v == nil {
			return nil
		}
		return v.DisabledSslProtocols
	}).(pulumi.StringArrayOutput)
}

// Minimum version of Ssl protocol to be supported on application gateway.
func (o ApplicationGatewaySslPolicyPtrOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) *string {
		if v == nil {
			return nil
		}
		return v.MinProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// Name of Ssl predefined policy.
func (o ApplicationGatewaySslPolicyPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Type of Ssl Policy.
func (o ApplicationGatewaySslPolicyPtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicyResponse struct {
	// Ssl cipher suites to be enabled in the specified order to application gateway.
	CipherSuites []string `pulumi:"cipherSuites"`
	// Ssl protocols to be disabled on application gateway.
	DisabledSslProtocols []string `pulumi:"disabledSslProtocols"`
	// Minimum version of Ssl protocol to be supported on application gateway.
	MinProtocolVersion *string `pulumi:"minProtocolVersion"`
	// Name of Ssl predefined policy.
	PolicyName *string `pulumi:"policyName"`
	// Type of Ssl Policy.
	PolicyType *string `pulumi:"policyType"`
}

// ApplicationGatewaySslPolicyResponseInput is an input type that accepts ApplicationGatewaySslPolicyResponseArgs and ApplicationGatewaySslPolicyResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslPolicyResponseInput` via:
//
//          ApplicationGatewaySslPolicyResponseArgs{...}
type ApplicationGatewaySslPolicyResponseInput interface {
	pulumi.Input

	ToApplicationGatewaySslPolicyResponseOutput() ApplicationGatewaySslPolicyResponseOutput
	ToApplicationGatewaySslPolicyResponseOutputWithContext(context.Context) ApplicationGatewaySslPolicyResponseOutput
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicyResponseArgs struct {
	// Ssl cipher suites to be enabled in the specified order to application gateway.
	CipherSuites pulumi.StringArrayInput `pulumi:"cipherSuites"`
	// Ssl protocols to be disabled on application gateway.
	DisabledSslProtocols pulumi.StringArrayInput `pulumi:"disabledSslProtocols"`
	// Minimum version of Ssl protocol to be supported on application gateway.
	MinProtocolVersion pulumi.StringPtrInput `pulumi:"minProtocolVersion"`
	// Name of Ssl predefined policy.
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Type of Ssl Policy.
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
}

func (ApplicationGatewaySslPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslPolicyResponse)(nil)).Elem()
}

func (i ApplicationGatewaySslPolicyResponseArgs) ToApplicationGatewaySslPolicyResponseOutput() ApplicationGatewaySslPolicyResponseOutput {
	return i.ToApplicationGatewaySslPolicyResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslPolicyResponseArgs) ToApplicationGatewaySslPolicyResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyResponseOutput)
}

func (i ApplicationGatewaySslPolicyResponseArgs) ToApplicationGatewaySslPolicyResponsePtrOutput() ApplicationGatewaySslPolicyResponsePtrOutput {
	return i.ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslPolicyResponseArgs) ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyResponseOutput).ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewaySslPolicyResponsePtrInput is an input type that accepts ApplicationGatewaySslPolicyResponseArgs, ApplicationGatewaySslPolicyResponsePtr and ApplicationGatewaySslPolicyResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslPolicyResponsePtrInput` via:
//
//          ApplicationGatewaySslPolicyResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewaySslPolicyResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewaySslPolicyResponsePtrOutput() ApplicationGatewaySslPolicyResponsePtrOutput
	ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(context.Context) ApplicationGatewaySslPolicyResponsePtrOutput
}

type applicationGatewaySslPolicyResponsePtrType ApplicationGatewaySslPolicyResponseArgs

func ApplicationGatewaySslPolicyResponsePtr(v *ApplicationGatewaySslPolicyResponseArgs) ApplicationGatewaySslPolicyResponsePtrInput {
	return (*applicationGatewaySslPolicyResponsePtrType)(v)
}

func (*applicationGatewaySslPolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslPolicyResponse)(nil)).Elem()
}

func (i *applicationGatewaySslPolicyResponsePtrType) ToApplicationGatewaySslPolicyResponsePtrOutput() ApplicationGatewaySslPolicyResponsePtrOutput {
	return i.ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySslPolicyResponsePtrType) ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyResponsePtrOutput)
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicyResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslPolicyResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslPolicyResponseOutput) ToApplicationGatewaySslPolicyResponseOutput() ApplicationGatewaySslPolicyResponseOutput {
	return o
}

func (o ApplicationGatewaySslPolicyResponseOutput) ToApplicationGatewaySslPolicyResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponseOutput {
	return o
}

func (o ApplicationGatewaySslPolicyResponseOutput) ToApplicationGatewaySslPolicyResponsePtrOutput() ApplicationGatewaySslPolicyResponsePtrOutput {
	return o.ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySslPolicyResponseOutput) ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) *ApplicationGatewaySslPolicyResponse {
		return &v
	}).(ApplicationGatewaySslPolicyResponsePtrOutput)
}

// Ssl cipher suites to be enabled in the specified order to application gateway.
func (o ApplicationGatewaySslPolicyResponseOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) []string { return v.CipherSuites }).(pulumi.StringArrayOutput)
}

// Ssl protocols to be disabled on application gateway.
func (o ApplicationGatewaySslPolicyResponseOutput) DisabledSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) []string { return v.DisabledSslProtocols }).(pulumi.StringArrayOutput)
}

// Minimum version of Ssl protocol to be supported on application gateway.
func (o ApplicationGatewaySslPolicyResponseOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) *string { return v.MinProtocolVersion }).(pulumi.StringPtrOutput)
}

// Name of Ssl predefined policy.
func (o ApplicationGatewaySslPolicyResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Type of Ssl Policy.
func (o ApplicationGatewaySslPolicyResponseOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslPolicyResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslPolicyResponsePtrOutput) ToApplicationGatewaySslPolicyResponsePtrOutput() ApplicationGatewaySslPolicyResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySslPolicyResponsePtrOutput) ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySslPolicyResponsePtrOutput) Elem() ApplicationGatewaySslPolicyResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) ApplicationGatewaySslPolicyResponse { return *v }).(ApplicationGatewaySslPolicyResponseOutput)
}

// Ssl cipher suites to be enabled in the specified order to application gateway.
func (o ApplicationGatewaySslPolicyResponsePtrOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) []string {
		if v == nil {
			return nil
		}
		return v.CipherSuites
	}).(pulumi.StringArrayOutput)
}

// Ssl protocols to be disabled on application gateway.
func (o ApplicationGatewaySslPolicyResponsePtrOutput) DisabledSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) []string {
		if v == nil {
			return nil
		}
		return v.DisabledSslProtocols
	}).(pulumi.StringArrayOutput)
}

// Minimum version of Ssl protocol to be supported on application gateway.
func (o ApplicationGatewaySslPolicyResponsePtrOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// Name of Ssl predefined policy.
func (o ApplicationGatewaySslPolicyResponsePtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Type of Ssl Policy.
func (o ApplicationGatewaySslPolicyResponsePtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// SSL profile of an application gateway.
type ApplicationGatewaySslProfile struct {
	// Client authentication configuration of the application gateway resource.
	ClientAuthConfiguration *ApplicationGatewayClientAuthConfiguration `pulumi:"clientAuthConfiguration"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the SSL profile that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// SSL policy of the application gateway resource.
	SslPolicy *ApplicationGatewaySslPolicy `pulumi:"sslPolicy"`
	// Array of references to application gateway trusted client certificates.
	TrustedClientCertificates []SubResource `pulumi:"trustedClientCertificates"`
}

// ApplicationGatewaySslProfileInput is an input type that accepts ApplicationGatewaySslProfileArgs and ApplicationGatewaySslProfileOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslProfileInput` via:
//
//          ApplicationGatewaySslProfileArgs{...}
type ApplicationGatewaySslProfileInput interface {
	pulumi.Input

	ToApplicationGatewaySslProfileOutput() ApplicationGatewaySslProfileOutput
	ToApplicationGatewaySslProfileOutputWithContext(context.Context) ApplicationGatewaySslProfileOutput
}

// SSL profile of an application gateway.
type ApplicationGatewaySslProfileArgs struct {
	// Client authentication configuration of the application gateway resource.
	ClientAuthConfiguration ApplicationGatewayClientAuthConfigurationPtrInput `pulumi:"clientAuthConfiguration"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the SSL profile that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// SSL policy of the application gateway resource.
	SslPolicy ApplicationGatewaySslPolicyPtrInput `pulumi:"sslPolicy"`
	// Array of references to application gateway trusted client certificates.
	TrustedClientCertificates SubResourceArrayInput `pulumi:"trustedClientCertificates"`
}

func (ApplicationGatewaySslProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslProfile)(nil)).Elem()
}

func (i ApplicationGatewaySslProfileArgs) ToApplicationGatewaySslProfileOutput() ApplicationGatewaySslProfileOutput {
	return i.ToApplicationGatewaySslProfileOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslProfileArgs) ToApplicationGatewaySslProfileOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslProfileOutput)
}

// ApplicationGatewaySslProfileArrayInput is an input type that accepts ApplicationGatewaySslProfileArray and ApplicationGatewaySslProfileArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslProfileArrayInput` via:
//
//          ApplicationGatewaySslProfileArray{ ApplicationGatewaySslProfileArgs{...} }
type ApplicationGatewaySslProfileArrayInput interface {
	pulumi.Input

	ToApplicationGatewaySslProfileArrayOutput() ApplicationGatewaySslProfileArrayOutput
	ToApplicationGatewaySslProfileArrayOutputWithContext(context.Context) ApplicationGatewaySslProfileArrayOutput
}

type ApplicationGatewaySslProfileArray []ApplicationGatewaySslProfileInput

func (ApplicationGatewaySslProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslProfile)(nil)).Elem()
}

func (i ApplicationGatewaySslProfileArray) ToApplicationGatewaySslProfileArrayOutput() ApplicationGatewaySslProfileArrayOutput {
	return i.ToApplicationGatewaySslProfileArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslProfileArray) ToApplicationGatewaySslProfileArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslProfileArrayOutput)
}

// SSL profile of an application gateway.
type ApplicationGatewaySslProfileOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslProfile)(nil)).Elem()
}

func (o ApplicationGatewaySslProfileOutput) ToApplicationGatewaySslProfileOutput() ApplicationGatewaySslProfileOutput {
	return o
}

func (o ApplicationGatewaySslProfileOutput) ToApplicationGatewaySslProfileOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileOutput {
	return o
}

// Client authentication configuration of the application gateway resource.
func (o ApplicationGatewaySslProfileOutput) ClientAuthConfiguration() ApplicationGatewayClientAuthConfigurationPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfile) *ApplicationGatewayClientAuthConfiguration {
		return v.ClientAuthConfiguration
	}).(ApplicationGatewayClientAuthConfigurationPtrOutput)
}

// Resource ID.
func (o ApplicationGatewaySslProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the SSL profile that is unique within an Application Gateway.
func (o ApplicationGatewaySslProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// SSL policy of the application gateway resource.
func (o ApplicationGatewaySslProfileOutput) SslPolicy() ApplicationGatewaySslPolicyPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfile) *ApplicationGatewaySslPolicy { return v.SslPolicy }).(ApplicationGatewaySslPolicyPtrOutput)
}

// Array of references to application gateway trusted client certificates.
func (o ApplicationGatewaySslProfileOutput) TrustedClientCertificates() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfile) []SubResource { return v.TrustedClientCertificates }).(SubResourceArrayOutput)
}

type ApplicationGatewaySslProfileArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslProfile)(nil)).Elem()
}

func (o ApplicationGatewaySslProfileArrayOutput) ToApplicationGatewaySslProfileArrayOutput() ApplicationGatewaySslProfileArrayOutput {
	return o
}

func (o ApplicationGatewaySslProfileArrayOutput) ToApplicationGatewaySslProfileArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileArrayOutput {
	return o
}

func (o ApplicationGatewaySslProfileArrayOutput) Index(i pulumi.IntInput) ApplicationGatewaySslProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewaySslProfile {
		return vs[0].([]ApplicationGatewaySslProfile)[vs[1].(int)]
	}).(ApplicationGatewaySslProfileOutput)
}

// SSL profile of an application gateway.
type ApplicationGatewaySslProfileResponse struct {
	// Client authentication configuration of the application gateway resource.
	ClientAuthConfiguration *ApplicationGatewayClientAuthConfigurationResponse `pulumi:"clientAuthConfiguration"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the SSL profile that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the HTTP listener resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// SSL policy of the application gateway resource.
	SslPolicy *ApplicationGatewaySslPolicyResponse `pulumi:"sslPolicy"`
	// Array of references to application gateway trusted client certificates.
	TrustedClientCertificates []SubResourceResponse `pulumi:"trustedClientCertificates"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// ApplicationGatewaySslProfileResponseInput is an input type that accepts ApplicationGatewaySslProfileResponseArgs and ApplicationGatewaySslProfileResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslProfileResponseInput` via:
//
//          ApplicationGatewaySslProfileResponseArgs{...}
type ApplicationGatewaySslProfileResponseInput interface {
	pulumi.Input

	ToApplicationGatewaySslProfileResponseOutput() ApplicationGatewaySslProfileResponseOutput
	ToApplicationGatewaySslProfileResponseOutputWithContext(context.Context) ApplicationGatewaySslProfileResponseOutput
}

// SSL profile of an application gateway.
type ApplicationGatewaySslProfileResponseArgs struct {
	// Client authentication configuration of the application gateway resource.
	ClientAuthConfiguration ApplicationGatewayClientAuthConfigurationResponsePtrInput `pulumi:"clientAuthConfiguration"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the SSL profile that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the HTTP listener resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// SSL policy of the application gateway resource.
	SslPolicy ApplicationGatewaySslPolicyResponsePtrInput `pulumi:"sslPolicy"`
	// Array of references to application gateway trusted client certificates.
	TrustedClientCertificates SubResourceResponseArrayInput `pulumi:"trustedClientCertificates"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationGatewaySslProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslProfileResponse)(nil)).Elem()
}

func (i ApplicationGatewaySslProfileResponseArgs) ToApplicationGatewaySslProfileResponseOutput() ApplicationGatewaySslProfileResponseOutput {
	return i.ToApplicationGatewaySslProfileResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslProfileResponseArgs) ToApplicationGatewaySslProfileResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslProfileResponseOutput)
}

// ApplicationGatewaySslProfileResponseArrayInput is an input type that accepts ApplicationGatewaySslProfileResponseArray and ApplicationGatewaySslProfileResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslProfileResponseArrayInput` via:
//
//          ApplicationGatewaySslProfileResponseArray{ ApplicationGatewaySslProfileResponseArgs{...} }
type ApplicationGatewaySslProfileResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewaySslProfileResponseArrayOutput() ApplicationGatewaySslProfileResponseArrayOutput
	ToApplicationGatewaySslProfileResponseArrayOutputWithContext(context.Context) ApplicationGatewaySslProfileResponseArrayOutput
}

type ApplicationGatewaySslProfileResponseArray []ApplicationGatewaySslProfileResponseInput

func (ApplicationGatewaySslProfileResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslProfileResponse)(nil)).Elem()
}

func (i ApplicationGatewaySslProfileResponseArray) ToApplicationGatewaySslProfileResponseArrayOutput() ApplicationGatewaySslProfileResponseArrayOutput {
	return i.ToApplicationGatewaySslProfileResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslProfileResponseArray) ToApplicationGatewaySslProfileResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslProfileResponseArrayOutput)
}

// SSL profile of an application gateway.
type ApplicationGatewaySslProfileResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslProfileResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslProfileResponseOutput) ToApplicationGatewaySslProfileResponseOutput() ApplicationGatewaySslProfileResponseOutput {
	return o
}

func (o ApplicationGatewaySslProfileResponseOutput) ToApplicationGatewaySslProfileResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileResponseOutput {
	return o
}

// Client authentication configuration of the application gateway resource.
func (o ApplicationGatewaySslProfileResponseOutput) ClientAuthConfiguration() ApplicationGatewayClientAuthConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileResponse) *ApplicationGatewayClientAuthConfigurationResponse {
		return v.ClientAuthConfiguration
	}).(ApplicationGatewayClientAuthConfigurationResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewaySslProfileResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewaySslProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the SSL profile that is unique within an Application Gateway.
func (o ApplicationGatewaySslProfileResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the HTTP listener resource.
func (o ApplicationGatewaySslProfileResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// SSL policy of the application gateway resource.
func (o ApplicationGatewaySslProfileResponseOutput) SslPolicy() ApplicationGatewaySslPolicyResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileResponse) *ApplicationGatewaySslPolicyResponse { return v.SslPolicy }).(ApplicationGatewaySslPolicyResponsePtrOutput)
}

// Array of references to application gateway trusted client certificates.
func (o ApplicationGatewaySslProfileResponseOutput) TrustedClientCertificates() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileResponse) []SubResourceResponse { return v.TrustedClientCertificates }).(SubResourceResponseArrayOutput)
}

// Type of the resource.
func (o ApplicationGatewaySslProfileResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewaySslProfileResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewaySslProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslProfileResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslProfileResponseArrayOutput) ToApplicationGatewaySslProfileResponseArrayOutput() ApplicationGatewaySslProfileResponseArrayOutput {
	return o
}

func (o ApplicationGatewaySslProfileResponseArrayOutput) ToApplicationGatewaySslProfileResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslProfileResponseArrayOutput {
	return o
}

func (o ApplicationGatewaySslProfileResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewaySslProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewaySslProfileResponse {
		return vs[0].([]ApplicationGatewaySslProfileResponse)[vs[1].(int)]
	}).(ApplicationGatewaySslProfileResponseOutput)
}

// Trusted client certificates of an application gateway.
type ApplicationGatewayTrustedClientCertificate struct {
	// Certificate public data.
	Data *string `pulumi:"data"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the trusted client certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
}

// ApplicationGatewayTrustedClientCertificateInput is an input type that accepts ApplicationGatewayTrustedClientCertificateArgs and ApplicationGatewayTrustedClientCertificateOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedClientCertificateInput` via:
//
//          ApplicationGatewayTrustedClientCertificateArgs{...}
type ApplicationGatewayTrustedClientCertificateInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedClientCertificateOutput() ApplicationGatewayTrustedClientCertificateOutput
	ToApplicationGatewayTrustedClientCertificateOutputWithContext(context.Context) ApplicationGatewayTrustedClientCertificateOutput
}

// Trusted client certificates of an application gateway.
type ApplicationGatewayTrustedClientCertificateArgs struct {
	// Certificate public data.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the trusted client certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ApplicationGatewayTrustedClientCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedClientCertificate)(nil)).Elem()
}

func (i ApplicationGatewayTrustedClientCertificateArgs) ToApplicationGatewayTrustedClientCertificateOutput() ApplicationGatewayTrustedClientCertificateOutput {
	return i.ToApplicationGatewayTrustedClientCertificateOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedClientCertificateArgs) ToApplicationGatewayTrustedClientCertificateOutputWithContext(ctx context.Context) ApplicationGatewayTrustedClientCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedClientCertificateOutput)
}

// ApplicationGatewayTrustedClientCertificateArrayInput is an input type that accepts ApplicationGatewayTrustedClientCertificateArray and ApplicationGatewayTrustedClientCertificateArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedClientCertificateArrayInput` via:
//
//          ApplicationGatewayTrustedClientCertificateArray{ ApplicationGatewayTrustedClientCertificateArgs{...} }
type ApplicationGatewayTrustedClientCertificateArrayInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedClientCertificateArrayOutput() ApplicationGatewayTrustedClientCertificateArrayOutput
	ToApplicationGatewayTrustedClientCertificateArrayOutputWithContext(context.Context) ApplicationGatewayTrustedClientCertificateArrayOutput
}

type ApplicationGatewayTrustedClientCertificateArray []ApplicationGatewayTrustedClientCertificateInput

func (ApplicationGatewayTrustedClientCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedClientCertificate)(nil)).Elem()
}

func (i ApplicationGatewayTrustedClientCertificateArray) ToApplicationGatewayTrustedClientCertificateArrayOutput() ApplicationGatewayTrustedClientCertificateArrayOutput {
	return i.ToApplicationGatewayTrustedClientCertificateArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedClientCertificateArray) ToApplicationGatewayTrustedClientCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedClientCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedClientCertificateArrayOutput)
}

// Trusted client certificates of an application gateway.
type ApplicationGatewayTrustedClientCertificateOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedClientCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedClientCertificate)(nil)).Elem()
}

func (o ApplicationGatewayTrustedClientCertificateOutput) ToApplicationGatewayTrustedClientCertificateOutput() ApplicationGatewayTrustedClientCertificateOutput {
	return o
}

func (o ApplicationGatewayTrustedClientCertificateOutput) ToApplicationGatewayTrustedClientCertificateOutputWithContext(ctx context.Context) ApplicationGatewayTrustedClientCertificateOutput {
	return o
}

// Certificate public data.
func (o ApplicationGatewayTrustedClientCertificateOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificate) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayTrustedClientCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the trusted client certificate that is unique within an Application Gateway.
func (o ApplicationGatewayTrustedClientCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayTrustedClientCertificateArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedClientCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedClientCertificate)(nil)).Elem()
}

func (o ApplicationGatewayTrustedClientCertificateArrayOutput) ToApplicationGatewayTrustedClientCertificateArrayOutput() ApplicationGatewayTrustedClientCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedClientCertificateArrayOutput) ToApplicationGatewayTrustedClientCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedClientCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedClientCertificateArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayTrustedClientCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayTrustedClientCertificate {
		return vs[0].([]ApplicationGatewayTrustedClientCertificate)[vs[1].(int)]
	}).(ApplicationGatewayTrustedClientCertificateOutput)
}

// Trusted client certificates of an application gateway.
type ApplicationGatewayTrustedClientCertificateResponse struct {
	// Certificate public data.
	Data *string `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the trusted client certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the trusted client certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// ApplicationGatewayTrustedClientCertificateResponseInput is an input type that accepts ApplicationGatewayTrustedClientCertificateResponseArgs and ApplicationGatewayTrustedClientCertificateResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedClientCertificateResponseInput` via:
//
//          ApplicationGatewayTrustedClientCertificateResponseArgs{...}
type ApplicationGatewayTrustedClientCertificateResponseInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedClientCertificateResponseOutput() ApplicationGatewayTrustedClientCertificateResponseOutput
	ToApplicationGatewayTrustedClientCertificateResponseOutputWithContext(context.Context) ApplicationGatewayTrustedClientCertificateResponseOutput
}

// Trusted client certificates of an application gateway.
type ApplicationGatewayTrustedClientCertificateResponseArgs struct {
	// Certificate public data.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the trusted client certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the trusted client certificate resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationGatewayTrustedClientCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedClientCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewayTrustedClientCertificateResponseArgs) ToApplicationGatewayTrustedClientCertificateResponseOutput() ApplicationGatewayTrustedClientCertificateResponseOutput {
	return i.ToApplicationGatewayTrustedClientCertificateResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedClientCertificateResponseArgs) ToApplicationGatewayTrustedClientCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewayTrustedClientCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedClientCertificateResponseOutput)
}

// ApplicationGatewayTrustedClientCertificateResponseArrayInput is an input type that accepts ApplicationGatewayTrustedClientCertificateResponseArray and ApplicationGatewayTrustedClientCertificateResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedClientCertificateResponseArrayInput` via:
//
//          ApplicationGatewayTrustedClientCertificateResponseArray{ ApplicationGatewayTrustedClientCertificateResponseArgs{...} }
type ApplicationGatewayTrustedClientCertificateResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedClientCertificateResponseArrayOutput() ApplicationGatewayTrustedClientCertificateResponseArrayOutput
	ToApplicationGatewayTrustedClientCertificateResponseArrayOutputWithContext(context.Context) ApplicationGatewayTrustedClientCertificateResponseArrayOutput
}

type ApplicationGatewayTrustedClientCertificateResponseArray []ApplicationGatewayTrustedClientCertificateResponseInput

func (ApplicationGatewayTrustedClientCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedClientCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewayTrustedClientCertificateResponseArray) ToApplicationGatewayTrustedClientCertificateResponseArrayOutput() ApplicationGatewayTrustedClientCertificateResponseArrayOutput {
	return i.ToApplicationGatewayTrustedClientCertificateResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedClientCertificateResponseArray) ToApplicationGatewayTrustedClientCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedClientCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedClientCertificateResponseArrayOutput)
}

// Trusted client certificates of an application gateway.
type ApplicationGatewayTrustedClientCertificateResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedClientCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedClientCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewayTrustedClientCertificateResponseOutput) ToApplicationGatewayTrustedClientCertificateResponseOutput() ApplicationGatewayTrustedClientCertificateResponseOutput {
	return o
}

func (o ApplicationGatewayTrustedClientCertificateResponseOutput) ToApplicationGatewayTrustedClientCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewayTrustedClientCertificateResponseOutput {
	return o
}

// Certificate public data.
func (o ApplicationGatewayTrustedClientCertificateResponseOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificateResponse) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayTrustedClientCertificateResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificateResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayTrustedClientCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the trusted client certificate that is unique within an Application Gateway.
func (o ApplicationGatewayTrustedClientCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the trusted client certificate resource.
func (o ApplicationGatewayTrustedClientCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewayTrustedClientCertificateResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedClientCertificateResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayTrustedClientCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedClientCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedClientCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewayTrustedClientCertificateResponseArrayOutput) ToApplicationGatewayTrustedClientCertificateResponseArrayOutput() ApplicationGatewayTrustedClientCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedClientCertificateResponseArrayOutput) ToApplicationGatewayTrustedClientCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedClientCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedClientCertificateResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayTrustedClientCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayTrustedClientCertificateResponse {
		return vs[0].([]ApplicationGatewayTrustedClientCertificateResponse)[vs[1].(int)]
	}).(ApplicationGatewayTrustedClientCertificateResponseOutput)
}

// Trusted Root certificates of an application gateway.
type ApplicationGatewayTrustedRootCertificate struct {
	// Certificate public data.
	Data *string `pulumi:"data"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId *string `pulumi:"keyVaultSecretId"`
	// Name of the trusted root certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
}

// ApplicationGatewayTrustedRootCertificateInput is an input type that accepts ApplicationGatewayTrustedRootCertificateArgs and ApplicationGatewayTrustedRootCertificateOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedRootCertificateInput` via:
//
//          ApplicationGatewayTrustedRootCertificateArgs{...}
type ApplicationGatewayTrustedRootCertificateInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedRootCertificateOutput() ApplicationGatewayTrustedRootCertificateOutput
	ToApplicationGatewayTrustedRootCertificateOutputWithContext(context.Context) ApplicationGatewayTrustedRootCertificateOutput
}

// Trusted Root certificates of an application gateway.
type ApplicationGatewayTrustedRootCertificateArgs struct {
	// Certificate public data.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId pulumi.StringPtrInput `pulumi:"keyVaultSecretId"`
	// Name of the trusted root certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ApplicationGatewayTrustedRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (i ApplicationGatewayTrustedRootCertificateArgs) ToApplicationGatewayTrustedRootCertificateOutput() ApplicationGatewayTrustedRootCertificateOutput {
	return i.ToApplicationGatewayTrustedRootCertificateOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedRootCertificateArgs) ToApplicationGatewayTrustedRootCertificateOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedRootCertificateOutput)
}

// ApplicationGatewayTrustedRootCertificateArrayInput is an input type that accepts ApplicationGatewayTrustedRootCertificateArray and ApplicationGatewayTrustedRootCertificateArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedRootCertificateArrayInput` via:
//
//          ApplicationGatewayTrustedRootCertificateArray{ ApplicationGatewayTrustedRootCertificateArgs{...} }
type ApplicationGatewayTrustedRootCertificateArrayInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedRootCertificateArrayOutput() ApplicationGatewayTrustedRootCertificateArrayOutput
	ToApplicationGatewayTrustedRootCertificateArrayOutputWithContext(context.Context) ApplicationGatewayTrustedRootCertificateArrayOutput
}

type ApplicationGatewayTrustedRootCertificateArray []ApplicationGatewayTrustedRootCertificateInput

func (ApplicationGatewayTrustedRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (i ApplicationGatewayTrustedRootCertificateArray) ToApplicationGatewayTrustedRootCertificateArrayOutput() ApplicationGatewayTrustedRootCertificateArrayOutput {
	return i.ToApplicationGatewayTrustedRootCertificateArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedRootCertificateArray) ToApplicationGatewayTrustedRootCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedRootCertificateArrayOutput)
}

// Trusted Root certificates of an application gateway.
type ApplicationGatewayTrustedRootCertificateOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (o ApplicationGatewayTrustedRootCertificateOutput) ToApplicationGatewayTrustedRootCertificateOutput() ApplicationGatewayTrustedRootCertificateOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateOutput) ToApplicationGatewayTrustedRootCertificateOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateOutput {
	return o
}

// Certificate public data.
func (o ApplicationGatewayTrustedRootCertificateOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificate) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayTrustedRootCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o ApplicationGatewayTrustedRootCertificateOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificate) *string { return v.KeyVaultSecretId }).(pulumi.StringPtrOutput)
}

// Name of the trusted root certificate that is unique within an Application Gateway.
func (o ApplicationGatewayTrustedRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayTrustedRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedRootCertificate)(nil)).Elem()
}

func (o ApplicationGatewayTrustedRootCertificateArrayOutput) ToApplicationGatewayTrustedRootCertificateArrayOutput() ApplicationGatewayTrustedRootCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateArrayOutput) ToApplicationGatewayTrustedRootCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayTrustedRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayTrustedRootCertificate {
		return vs[0].([]ApplicationGatewayTrustedRootCertificate)[vs[1].(int)]
	}).(ApplicationGatewayTrustedRootCertificateOutput)
}

// Trusted Root certificates of an application gateway.
type ApplicationGatewayTrustedRootCertificateResponse struct {
	// Certificate public data.
	Data *string `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId *string `pulumi:"keyVaultSecretId"`
	// Name of the trusted root certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// The provisioning state of the trusted root certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// ApplicationGatewayTrustedRootCertificateResponseInput is an input type that accepts ApplicationGatewayTrustedRootCertificateResponseArgs and ApplicationGatewayTrustedRootCertificateResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedRootCertificateResponseInput` via:
//
//          ApplicationGatewayTrustedRootCertificateResponseArgs{...}
type ApplicationGatewayTrustedRootCertificateResponseInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedRootCertificateResponseOutput() ApplicationGatewayTrustedRootCertificateResponseOutput
	ToApplicationGatewayTrustedRootCertificateResponseOutputWithContext(context.Context) ApplicationGatewayTrustedRootCertificateResponseOutput
}

// Trusted Root certificates of an application gateway.
type ApplicationGatewayTrustedRootCertificateResponseArgs struct {
	// Certificate public data.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId pulumi.StringPtrInput `pulumi:"keyVaultSecretId"`
	// Name of the trusted root certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the trusted root certificate resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationGatewayTrustedRootCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedRootCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewayTrustedRootCertificateResponseArgs) ToApplicationGatewayTrustedRootCertificateResponseOutput() ApplicationGatewayTrustedRootCertificateResponseOutput {
	return i.ToApplicationGatewayTrustedRootCertificateResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedRootCertificateResponseArgs) ToApplicationGatewayTrustedRootCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedRootCertificateResponseOutput)
}

// ApplicationGatewayTrustedRootCertificateResponseArrayInput is an input type that accepts ApplicationGatewayTrustedRootCertificateResponseArray and ApplicationGatewayTrustedRootCertificateResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayTrustedRootCertificateResponseArrayInput` via:
//
//          ApplicationGatewayTrustedRootCertificateResponseArray{ ApplicationGatewayTrustedRootCertificateResponseArgs{...} }
type ApplicationGatewayTrustedRootCertificateResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayTrustedRootCertificateResponseArrayOutput() ApplicationGatewayTrustedRootCertificateResponseArrayOutput
	ToApplicationGatewayTrustedRootCertificateResponseArrayOutputWithContext(context.Context) ApplicationGatewayTrustedRootCertificateResponseArrayOutput
}

type ApplicationGatewayTrustedRootCertificateResponseArray []ApplicationGatewayTrustedRootCertificateResponseInput

func (ApplicationGatewayTrustedRootCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedRootCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewayTrustedRootCertificateResponseArray) ToApplicationGatewayTrustedRootCertificateResponseArrayOutput() ApplicationGatewayTrustedRootCertificateResponseArrayOutput {
	return i.ToApplicationGatewayTrustedRootCertificateResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayTrustedRootCertificateResponseArray) ToApplicationGatewayTrustedRootCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayTrustedRootCertificateResponseArrayOutput)
}

// Trusted Root certificates of an application gateway.
type ApplicationGatewayTrustedRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayTrustedRootCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewayTrustedRootCertificateResponseOutput) ToApplicationGatewayTrustedRootCertificateResponseOutput() ApplicationGatewayTrustedRootCertificateResponseOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateResponseOutput) ToApplicationGatewayTrustedRootCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateResponseOutput {
	return o
}

// Certificate public data.
func (o ApplicationGatewayTrustedRootCertificateResponseOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificateResponse) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayTrustedRootCertificateResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificateResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayTrustedRootCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o ApplicationGatewayTrustedRootCertificateResponseOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificateResponse) *string { return v.KeyVaultSecretId }).(pulumi.StringPtrOutput)
}

// Name of the trusted root certificate that is unique within an Application Gateway.
func (o ApplicationGatewayTrustedRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the trusted root certificate resource.
func (o ApplicationGatewayTrustedRootCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewayTrustedRootCertificateResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayTrustedRootCertificateResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayTrustedRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayTrustedRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayTrustedRootCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewayTrustedRootCertificateResponseArrayOutput) ToApplicationGatewayTrustedRootCertificateResponseArrayOutput() ApplicationGatewayTrustedRootCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateResponseArrayOutput) ToApplicationGatewayTrustedRootCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayTrustedRootCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewayTrustedRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayTrustedRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayTrustedRootCertificateResponse {
		return vs[0].([]ApplicationGatewayTrustedRootCertificateResponse)[vs[1].(int)]
	}).(ApplicationGatewayTrustedRootCertificateResponseOutput)
}

// Url configuration of the Actions set in Application Gateway.
type ApplicationGatewayUrlConfiguration struct {
	// Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
	ModifiedPath *string `pulumi:"modifiedPath"`
	// Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
	ModifiedQueryString *string `pulumi:"modifiedQueryString"`
	// If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
	Reroute *bool `pulumi:"reroute"`
}

// ApplicationGatewayUrlConfigurationInput is an input type that accepts ApplicationGatewayUrlConfigurationArgs and ApplicationGatewayUrlConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlConfigurationInput` via:
//
//          ApplicationGatewayUrlConfigurationArgs{...}
type ApplicationGatewayUrlConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayUrlConfigurationOutput() ApplicationGatewayUrlConfigurationOutput
	ToApplicationGatewayUrlConfigurationOutputWithContext(context.Context) ApplicationGatewayUrlConfigurationOutput
}

// Url configuration of the Actions set in Application Gateway.
type ApplicationGatewayUrlConfigurationArgs struct {
	// Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
	ModifiedPath pulumi.StringPtrInput `pulumi:"modifiedPath"`
	// Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
	ModifiedQueryString pulumi.StringPtrInput `pulumi:"modifiedQueryString"`
	// If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
	Reroute pulumi.BoolPtrInput `pulumi:"reroute"`
}

func (ApplicationGatewayUrlConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayUrlConfigurationArgs) ToApplicationGatewayUrlConfigurationOutput() ApplicationGatewayUrlConfigurationOutput {
	return i.ToApplicationGatewayUrlConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlConfigurationArgs) ToApplicationGatewayUrlConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlConfigurationOutput)
}

func (i ApplicationGatewayUrlConfigurationArgs) ToApplicationGatewayUrlConfigurationPtrOutput() ApplicationGatewayUrlConfigurationPtrOutput {
	return i.ToApplicationGatewayUrlConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlConfigurationArgs) ToApplicationGatewayUrlConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlConfigurationOutput).ToApplicationGatewayUrlConfigurationPtrOutputWithContext(ctx)
}

// ApplicationGatewayUrlConfigurationPtrInput is an input type that accepts ApplicationGatewayUrlConfigurationArgs, ApplicationGatewayUrlConfigurationPtr and ApplicationGatewayUrlConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlConfigurationPtrInput` via:
//
//          ApplicationGatewayUrlConfigurationArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayUrlConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationGatewayUrlConfigurationPtrOutput() ApplicationGatewayUrlConfigurationPtrOutput
	ToApplicationGatewayUrlConfigurationPtrOutputWithContext(context.Context) ApplicationGatewayUrlConfigurationPtrOutput
}

type applicationGatewayUrlConfigurationPtrType ApplicationGatewayUrlConfigurationArgs

func ApplicationGatewayUrlConfigurationPtr(v *ApplicationGatewayUrlConfigurationArgs) ApplicationGatewayUrlConfigurationPtrInput {
	return (*applicationGatewayUrlConfigurationPtrType)(v)
}

func (*applicationGatewayUrlConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayUrlConfiguration)(nil)).Elem()
}

func (i *applicationGatewayUrlConfigurationPtrType) ToApplicationGatewayUrlConfigurationPtrOutput() ApplicationGatewayUrlConfigurationPtrOutput {
	return i.ToApplicationGatewayUrlConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayUrlConfigurationPtrType) ToApplicationGatewayUrlConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlConfigurationPtrOutput)
}

// Url configuration of the Actions set in Application Gateway.
type ApplicationGatewayUrlConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayUrlConfigurationOutput) ToApplicationGatewayUrlConfigurationOutput() ApplicationGatewayUrlConfigurationOutput {
	return o
}

func (o ApplicationGatewayUrlConfigurationOutput) ToApplicationGatewayUrlConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationOutput {
	return o
}

func (o ApplicationGatewayUrlConfigurationOutput) ToApplicationGatewayUrlConfigurationPtrOutput() ApplicationGatewayUrlConfigurationPtrOutput {
	return o.ToApplicationGatewayUrlConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayUrlConfigurationOutput) ToApplicationGatewayUrlConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlConfiguration) *ApplicationGatewayUrlConfiguration {
		return &v
	}).(ApplicationGatewayUrlConfigurationPtrOutput)
}

// Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
func (o ApplicationGatewayUrlConfigurationOutput) ModifiedPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlConfiguration) *string { return v.ModifiedPath }).(pulumi.StringPtrOutput)
}

// Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
func (o ApplicationGatewayUrlConfigurationOutput) ModifiedQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlConfiguration) *string { return v.ModifiedQueryString }).(pulumi.StringPtrOutput)
}

// If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
func (o ApplicationGatewayUrlConfigurationOutput) Reroute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlConfiguration) *bool { return v.Reroute }).(pulumi.BoolPtrOutput)
}

type ApplicationGatewayUrlConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayUrlConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayUrlConfigurationPtrOutput) ToApplicationGatewayUrlConfigurationPtrOutput() ApplicationGatewayUrlConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayUrlConfigurationPtrOutput) ToApplicationGatewayUrlConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayUrlConfigurationPtrOutput) Elem() ApplicationGatewayUrlConfigurationOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlConfiguration) ApplicationGatewayUrlConfiguration { return *v }).(ApplicationGatewayUrlConfigurationOutput)
}

// Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
func (o ApplicationGatewayUrlConfigurationPtrOutput) ModifiedPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ModifiedPath
	}).(pulumi.StringPtrOutput)
}

// Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
func (o ApplicationGatewayUrlConfigurationPtrOutput) ModifiedQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ModifiedQueryString
	}).(pulumi.StringPtrOutput)
}

// If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
func (o ApplicationGatewayUrlConfigurationPtrOutput) Reroute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Reroute
	}).(pulumi.BoolPtrOutput)
}

// Url configuration of the Actions set in Application Gateway.
type ApplicationGatewayUrlConfigurationResponse struct {
	// Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
	ModifiedPath *string `pulumi:"modifiedPath"`
	// Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
	ModifiedQueryString *string `pulumi:"modifiedQueryString"`
	// If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
	Reroute *bool `pulumi:"reroute"`
}

// ApplicationGatewayUrlConfigurationResponseInput is an input type that accepts ApplicationGatewayUrlConfigurationResponseArgs and ApplicationGatewayUrlConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlConfigurationResponseInput` via:
//
//          ApplicationGatewayUrlConfigurationResponseArgs{...}
type ApplicationGatewayUrlConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayUrlConfigurationResponseOutput() ApplicationGatewayUrlConfigurationResponseOutput
	ToApplicationGatewayUrlConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayUrlConfigurationResponseOutput
}

// Url configuration of the Actions set in Application Gateway.
type ApplicationGatewayUrlConfigurationResponseArgs struct {
	// Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
	ModifiedPath pulumi.StringPtrInput `pulumi:"modifiedPath"`
	// Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
	ModifiedQueryString pulumi.StringPtrInput `pulumi:"modifiedQueryString"`
	// If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
	Reroute pulumi.BoolPtrInput `pulumi:"reroute"`
}

func (ApplicationGatewayUrlConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayUrlConfigurationResponseArgs) ToApplicationGatewayUrlConfigurationResponseOutput() ApplicationGatewayUrlConfigurationResponseOutput {
	return i.ToApplicationGatewayUrlConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlConfigurationResponseArgs) ToApplicationGatewayUrlConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlConfigurationResponseOutput)
}

func (i ApplicationGatewayUrlConfigurationResponseArgs) ToApplicationGatewayUrlConfigurationResponsePtrOutput() ApplicationGatewayUrlConfigurationResponsePtrOutput {
	return i.ToApplicationGatewayUrlConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlConfigurationResponseArgs) ToApplicationGatewayUrlConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlConfigurationResponseOutput).ToApplicationGatewayUrlConfigurationResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayUrlConfigurationResponsePtrInput is an input type that accepts ApplicationGatewayUrlConfigurationResponseArgs, ApplicationGatewayUrlConfigurationResponsePtr and ApplicationGatewayUrlConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlConfigurationResponsePtrInput` via:
//
//          ApplicationGatewayUrlConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayUrlConfigurationResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayUrlConfigurationResponsePtrOutput() ApplicationGatewayUrlConfigurationResponsePtrOutput
	ToApplicationGatewayUrlConfigurationResponsePtrOutputWithContext(context.Context) ApplicationGatewayUrlConfigurationResponsePtrOutput
}

type applicationGatewayUrlConfigurationResponsePtrType ApplicationGatewayUrlConfigurationResponseArgs

func ApplicationGatewayUrlConfigurationResponsePtr(v *ApplicationGatewayUrlConfigurationResponseArgs) ApplicationGatewayUrlConfigurationResponsePtrInput {
	return (*applicationGatewayUrlConfigurationResponsePtrType)(v)
}

func (*applicationGatewayUrlConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayUrlConfigurationResponse)(nil)).Elem()
}

func (i *applicationGatewayUrlConfigurationResponsePtrType) ToApplicationGatewayUrlConfigurationResponsePtrOutput() ApplicationGatewayUrlConfigurationResponsePtrOutput {
	return i.ToApplicationGatewayUrlConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayUrlConfigurationResponsePtrType) ToApplicationGatewayUrlConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlConfigurationResponsePtrOutput)
}

// Url configuration of the Actions set in Application Gateway.
type ApplicationGatewayUrlConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayUrlConfigurationResponseOutput) ToApplicationGatewayUrlConfigurationResponseOutput() ApplicationGatewayUrlConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayUrlConfigurationResponseOutput) ToApplicationGatewayUrlConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayUrlConfigurationResponseOutput) ToApplicationGatewayUrlConfigurationResponsePtrOutput() ApplicationGatewayUrlConfigurationResponsePtrOutput {
	return o.ToApplicationGatewayUrlConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayUrlConfigurationResponseOutput) ToApplicationGatewayUrlConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlConfigurationResponse) *ApplicationGatewayUrlConfigurationResponse {
		return &v
	}).(ApplicationGatewayUrlConfigurationResponsePtrOutput)
}

// Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
func (o ApplicationGatewayUrlConfigurationResponseOutput) ModifiedPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlConfigurationResponse) *string { return v.ModifiedPath }).(pulumi.StringPtrOutput)
}

// Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
func (o ApplicationGatewayUrlConfigurationResponseOutput) ModifiedQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlConfigurationResponse) *string { return v.ModifiedQueryString }).(pulumi.StringPtrOutput)
}

// If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
func (o ApplicationGatewayUrlConfigurationResponseOutput) Reroute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlConfigurationResponse) *bool { return v.Reroute }).(pulumi.BoolPtrOutput)
}

type ApplicationGatewayUrlConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayUrlConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayUrlConfigurationResponsePtrOutput) ToApplicationGatewayUrlConfigurationResponsePtrOutput() ApplicationGatewayUrlConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayUrlConfigurationResponsePtrOutput) ToApplicationGatewayUrlConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayUrlConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayUrlConfigurationResponsePtrOutput) Elem() ApplicationGatewayUrlConfigurationResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlConfigurationResponse) ApplicationGatewayUrlConfigurationResponse {
		return *v
	}).(ApplicationGatewayUrlConfigurationResponseOutput)
}

// Url path which user has provided for url rewrite. Null means no path will be updated. Default value is null.
func (o ApplicationGatewayUrlConfigurationResponsePtrOutput) ModifiedPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ModifiedPath
	}).(pulumi.StringPtrOutput)
}

// Query string which user has provided for url rewrite. Null means no query string will be updated. Default value is null.
func (o ApplicationGatewayUrlConfigurationResponsePtrOutput) ModifiedQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ModifiedQueryString
	}).(pulumi.StringPtrOutput)
}

// If set as true, it will re-evaluate the url path map provided in path based request routing rules using modified path. Default value is false.
func (o ApplicationGatewayUrlConfigurationResponsePtrOutput) Reroute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayUrlConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Reroute
	}).(pulumi.BoolPtrOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMap struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool *SubResource `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings *SubResource `pulumi:"defaultBackendHttpSettings"`
	// Default redirect configuration resource of URL path map.
	DefaultRedirectConfiguration *SubResource `pulumi:"defaultRedirectConfiguration"`
	// Default Rewrite rule set resource of URL path map.
	DefaultRewriteRuleSet *SubResource `pulumi:"defaultRewriteRuleSet"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the URL path map that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path rule of URL path map resource.
	PathRules []ApplicationGatewayPathRule `pulumi:"pathRules"`
}

// ApplicationGatewayUrlPathMapInput is an input type that accepts ApplicationGatewayUrlPathMap and ApplicationGatewayUrlPathMapOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapInput` via:
//
//          ApplicationGatewayUrlPathMap{ "key": ApplicationGatewayUrlPathArgs{...} }
type ApplicationGatewayUrlPathMapInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapOutput() ApplicationGatewayUrlPathMapOutput
	ToApplicationGatewayUrlPathMapOutputWithContext(context.Context) ApplicationGatewayUrlPathMapOutput
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapArgs struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool SubResourcePtrInput `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings SubResourcePtrInput `pulumi:"defaultBackendHttpSettings"`
	// Default redirect configuration resource of URL path map.
	DefaultRedirectConfiguration SubResourcePtrInput `pulumi:"defaultRedirectConfiguration"`
	// Default Rewrite rule set resource of URL path map.
	DefaultRewriteRuleSet SubResourcePtrInput `pulumi:"defaultRewriteRuleSet"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the URL path map that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rule of URL path map resource.
	PathRules ApplicationGatewayPathRuleArrayInput `pulumi:"pathRules"`
}

func (ApplicationGatewayUrlPathMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapArgs) ToApplicationGatewayUrlPathMapOutput() ApplicationGatewayUrlPathMapOutput {
	return i.ToApplicationGatewayUrlPathMapOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapArgs) ToApplicationGatewayUrlPathMapOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapOutput)
}

// ApplicationGatewayUrlPathMapArrayInput is an input type that accepts ApplicationGatewayUrlPathMapArray and ApplicationGatewayUrlPathMapArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapArrayInput` via:
//
//          ApplicationGatewayUrlPathMapArray{ ApplicationGatewayUrlPathMapArgs{...} }
type ApplicationGatewayUrlPathMapArrayInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapArrayOutput() ApplicationGatewayUrlPathMapArrayOutput
	ToApplicationGatewayUrlPathMapArrayOutputWithContext(context.Context) ApplicationGatewayUrlPathMapArrayOutput
}

type ApplicationGatewayUrlPathMapArray []ApplicationGatewayUrlPathMapInput

func (ApplicationGatewayUrlPathMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapArray) ToApplicationGatewayUrlPathMapArrayOutput() ApplicationGatewayUrlPathMapArrayOutput {
	return i.ToApplicationGatewayUrlPathMapArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapArray) ToApplicationGatewayUrlPathMapArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapArrayOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapOutput) ToApplicationGatewayUrlPathMapOutput() ApplicationGatewayUrlPathMapOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapOutput) ToApplicationGatewayUrlPathMapOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapOutput {
	return o
}

// Default backend address pool resource of URL path map.
func (o ApplicationGatewayUrlPathMapOutput) DefaultBackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *SubResource { return v.DefaultBackendAddressPool }).(SubResourcePtrOutput)
}

// Default backend http settings resource of URL path map.
func (o ApplicationGatewayUrlPathMapOutput) DefaultBackendHttpSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *SubResource { return v.DefaultBackendHttpSettings }).(SubResourcePtrOutput)
}

// Default redirect configuration resource of URL path map.
func (o ApplicationGatewayUrlPathMapOutput) DefaultRedirectConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *SubResource { return v.DefaultRedirectConfiguration }).(SubResourcePtrOutput)
}

// Default Rewrite rule set resource of URL path map.
func (o ApplicationGatewayUrlPathMapOutput) DefaultRewriteRuleSet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *SubResource { return v.DefaultRewriteRuleSet }).(SubResourcePtrOutput)
}

// Resource ID.
func (o ApplicationGatewayUrlPathMapOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the URL path map that is unique within an Application Gateway.
func (o ApplicationGatewayUrlPathMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rule of URL path map resource.
func (o ApplicationGatewayUrlPathMapOutput) PathRules() ApplicationGatewayPathRuleArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) []ApplicationGatewayPathRule { return v.PathRules }).(ApplicationGatewayPathRuleArrayOutput)
}

type ApplicationGatewayUrlPathMapArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapArrayOutput) ToApplicationGatewayUrlPathMapArrayOutput() ApplicationGatewayUrlPathMapArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapArrayOutput) ToApplicationGatewayUrlPathMapArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayUrlPathMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayUrlPathMap {
		return vs[0].([]ApplicationGatewayUrlPathMap)[vs[1].(int)]
	}).(ApplicationGatewayUrlPathMapOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapResponse struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool *SubResourceResponse `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings *SubResourceResponse `pulumi:"defaultBackendHttpSettings"`
	// Default redirect configuration resource of URL path map.
	DefaultRedirectConfiguration *SubResourceResponse `pulumi:"defaultRedirectConfiguration"`
	// Default Rewrite rule set resource of URL path map.
	DefaultRewriteRuleSet *SubResourceResponse `pulumi:"defaultRewriteRuleSet"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the URL path map that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path rule of URL path map resource.
	PathRules []ApplicationGatewayPathRuleResponse `pulumi:"pathRules"`
	// The provisioning state of the URL path map resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// ApplicationGatewayUrlPathMapResponseInput is an input type that accepts ApplicationGatewayUrlPathMapResponseArgs and ApplicationGatewayUrlPathMapResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapResponseInput` via:
//
//          ApplicationGatewayUrlPathMapResponseArgs{...}
type ApplicationGatewayUrlPathMapResponseInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapResponseOutput() ApplicationGatewayUrlPathMapResponseOutput
	ToApplicationGatewayUrlPathMapResponseOutputWithContext(context.Context) ApplicationGatewayUrlPathMapResponseOutput
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapResponseArgs struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool SubResourceResponsePtrInput `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings SubResourceResponsePtrInput `pulumi:"defaultBackendHttpSettings"`
	// Default redirect configuration resource of URL path map.
	DefaultRedirectConfiguration SubResourceResponsePtrInput `pulumi:"defaultRedirectConfiguration"`
	// Default Rewrite rule set resource of URL path map.
	DefaultRewriteRuleSet SubResourceResponsePtrInput `pulumi:"defaultRewriteRuleSet"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the URL path map that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rule of URL path map resource.
	PathRules ApplicationGatewayPathRuleResponseArrayInput `pulumi:"pathRules"`
	// The provisioning state of the URL path map resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationGatewayUrlPathMapResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMapResponse)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapResponseArgs) ToApplicationGatewayUrlPathMapResponseOutput() ApplicationGatewayUrlPathMapResponseOutput {
	return i.ToApplicationGatewayUrlPathMapResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapResponseArgs) ToApplicationGatewayUrlPathMapResponseOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapResponseOutput)
}

// ApplicationGatewayUrlPathMapResponseArrayInput is an input type that accepts ApplicationGatewayUrlPathMapResponseArray and ApplicationGatewayUrlPathMapResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapResponseArrayInput` via:
//
//          ApplicationGatewayUrlPathMapResponseArray{ ApplicationGatewayUrlPathMapResponseArgs{...} }
type ApplicationGatewayUrlPathMapResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapResponseArrayOutput() ApplicationGatewayUrlPathMapResponseArrayOutput
	ToApplicationGatewayUrlPathMapResponseArrayOutputWithContext(context.Context) ApplicationGatewayUrlPathMapResponseArrayOutput
}

type ApplicationGatewayUrlPathMapResponseArray []ApplicationGatewayUrlPathMapResponseInput

func (ApplicationGatewayUrlPathMapResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMapResponse)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapResponseArray) ToApplicationGatewayUrlPathMapResponseArrayOutput() ApplicationGatewayUrlPathMapResponseArrayOutput {
	return i.ToApplicationGatewayUrlPathMapResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapResponseArray) ToApplicationGatewayUrlPathMapResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapResponseArrayOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMapResponse)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapResponseOutput) ToApplicationGatewayUrlPathMapResponseOutput() ApplicationGatewayUrlPathMapResponseOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapResponseOutput) ToApplicationGatewayUrlPathMapResponseOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapResponseOutput {
	return o
}

// Default backend address pool resource of URL path map.
func (o ApplicationGatewayUrlPathMapResponseOutput) DefaultBackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *SubResourceResponse { return v.DefaultBackendAddressPool }).(SubResourceResponsePtrOutput)
}

// Default backend http settings resource of URL path map.
func (o ApplicationGatewayUrlPathMapResponseOutput) DefaultBackendHttpSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *SubResourceResponse { return v.DefaultBackendHttpSettings }).(SubResourceResponsePtrOutput)
}

// Default redirect configuration resource of URL path map.
func (o ApplicationGatewayUrlPathMapResponseOutput) DefaultRedirectConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *SubResourceResponse {
		return v.DefaultRedirectConfiguration
	}).(SubResourceResponsePtrOutput)
}

// Default Rewrite rule set resource of URL path map.
func (o ApplicationGatewayUrlPathMapResponseOutput) DefaultRewriteRuleSet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *SubResourceResponse { return v.DefaultRewriteRuleSet }).(SubResourceResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayUrlPathMapResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationGatewayUrlPathMapResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the URL path map that is unique within an Application Gateway.
func (o ApplicationGatewayUrlPathMapResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rule of URL path map resource.
func (o ApplicationGatewayUrlPathMapResponseOutput) PathRules() ApplicationGatewayPathRuleResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) []ApplicationGatewayPathRuleResponse { return v.PathRules }).(ApplicationGatewayPathRuleResponseArrayOutput)
}

// The provisioning state of the URL path map resource.
func (o ApplicationGatewayUrlPathMapResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ApplicationGatewayUrlPathMapResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationGatewayUrlPathMapResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMapResponse)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapResponseArrayOutput) ToApplicationGatewayUrlPathMapResponseArrayOutput() ApplicationGatewayUrlPathMapResponseArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapResponseArrayOutput) ToApplicationGatewayUrlPathMapResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapResponseArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayUrlPathMapResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayUrlPathMapResponse {
		return vs[0].([]ApplicationGatewayUrlPathMapResponse)[vs[1].(int)]
	}).(ApplicationGatewayUrlPathMapResponseOutput)
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfiguration struct {
	// The disabled rule groups.
	DisabledRuleGroups []ApplicationGatewayFirewallDisabledRuleGroup `pulumi:"disabledRuleGroups"`
	// Whether the web application firewall is enabled or not.
	Enabled bool `pulumi:"enabled"`
	// The exclusion list.
	Exclusions []ApplicationGatewayFirewallExclusion `pulumi:"exclusions"`
	// Maximum file upload size in Mb for WAF.
	FileUploadLimitInMb *int `pulumi:"fileUploadLimitInMb"`
	// Web application firewall mode.
	FirewallMode string `pulumi:"firewallMode"`
	// Maximum request body size for WAF.
	MaxRequestBodySize *int `pulumi:"maxRequestBodySize"`
	// Maximum request body size in Kb for WAF.
	MaxRequestBodySizeInKb *int `pulumi:"maxRequestBodySizeInKb"`
	// Whether allow WAF to check request Body.
	RequestBodyCheck *bool `pulumi:"requestBodyCheck"`
	// The type of the web application firewall rule set. Possible values are: 'OWASP'.
	RuleSetType string `pulumi:"ruleSetType"`
	// The version of the rule set type.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// ApplicationGatewayWebApplicationFirewallConfigurationInput is an input type that accepts ApplicationGatewayWebApplicationFirewallConfigurationArgs and ApplicationGatewayWebApplicationFirewallConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayWebApplicationFirewallConfigurationInput` via:
//
//          ApplicationGatewayWebApplicationFirewallConfigurationArgs{...}
type ApplicationGatewayWebApplicationFirewallConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayWebApplicationFirewallConfigurationOutput() ApplicationGatewayWebApplicationFirewallConfigurationOutput
	ToApplicationGatewayWebApplicationFirewallConfigurationOutputWithContext(context.Context) ApplicationGatewayWebApplicationFirewallConfigurationOutput
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfigurationArgs struct {
	// The disabled rule groups.
	DisabledRuleGroups ApplicationGatewayFirewallDisabledRuleGroupArrayInput `pulumi:"disabledRuleGroups"`
	// Whether the web application firewall is enabled or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The exclusion list.
	Exclusions ApplicationGatewayFirewallExclusionArrayInput `pulumi:"exclusions"`
	// Maximum file upload size in Mb for WAF.
	FileUploadLimitInMb pulumi.IntPtrInput `pulumi:"fileUploadLimitInMb"`
	// Web application firewall mode.
	FirewallMode pulumi.StringInput `pulumi:"firewallMode"`
	// Maximum request body size for WAF.
	MaxRequestBodySize pulumi.IntPtrInput `pulumi:"maxRequestBodySize"`
	// Maximum request body size in Kb for WAF.
	MaxRequestBodySizeInKb pulumi.IntPtrInput `pulumi:"maxRequestBodySizeInKb"`
	// Whether allow WAF to check request Body.
	RequestBodyCheck pulumi.BoolPtrInput `pulumi:"requestBodyCheck"`
	// The type of the web application firewall rule set. Possible values are: 'OWASP'.
	RuleSetType pulumi.StringInput `pulumi:"ruleSetType"`
	// The version of the rule set type.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (ApplicationGatewayWebApplicationFirewallConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWebApplicationFirewallConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationArgs) ToApplicationGatewayWebApplicationFirewallConfigurationOutput() ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationArgs) ToApplicationGatewayWebApplicationFirewallConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationOutput)
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationArgs) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationArgs) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationOutput).ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx)
}

// ApplicationGatewayWebApplicationFirewallConfigurationPtrInput is an input type that accepts ApplicationGatewayWebApplicationFirewallConfigurationArgs, ApplicationGatewayWebApplicationFirewallConfigurationPtr and ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayWebApplicationFirewallConfigurationPtrInput` via:
//
//          ApplicationGatewayWebApplicationFirewallConfigurationArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayWebApplicationFirewallConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput
	ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput
}

type applicationGatewayWebApplicationFirewallConfigurationPtrType ApplicationGatewayWebApplicationFirewallConfigurationArgs

func ApplicationGatewayWebApplicationFirewallConfigurationPtr(v *ApplicationGatewayWebApplicationFirewallConfigurationArgs) ApplicationGatewayWebApplicationFirewallConfigurationPtrInput {
	return (*applicationGatewayWebApplicationFirewallConfigurationPtrType)(v)
}

func (*applicationGatewayWebApplicationFirewallConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayWebApplicationFirewallConfiguration)(nil)).Elem()
}

func (i *applicationGatewayWebApplicationFirewallConfigurationPtrType) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayWebApplicationFirewallConfigurationPtrType) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput)
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWebApplicationFirewallConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWebApplicationFirewallConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) ToApplicationGatewayWebApplicationFirewallConfigurationOutput() ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) ToApplicationGatewayWebApplicationFirewallConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return o.ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) *ApplicationGatewayWebApplicationFirewallConfiguration {
		return &v
	}).(ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput)
}

// The disabled rule groups.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) DisabledRuleGroups() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) []ApplicationGatewayFirewallDisabledRuleGroup {
		return v.DisabledRuleGroups
	}).(ApplicationGatewayFirewallDisabledRuleGroupArrayOutput)
}

// Whether the web application firewall is enabled or not.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The exclusion list.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) Exclusions() ApplicationGatewayFirewallExclusionArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) []ApplicationGatewayFirewallExclusion {
		return v.Exclusions
	}).(ApplicationGatewayFirewallExclusionArrayOutput)
}

// Maximum file upload size in Mb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) *int { return v.FileUploadLimitInMb }).(pulumi.IntPtrOutput)
}

// Web application firewall mode.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) FirewallMode() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) string { return v.FirewallMode }).(pulumi.StringOutput)
}

// Maximum request body size for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) MaxRequestBodySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) *int { return v.MaxRequestBodySize }).(pulumi.IntPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) *int { return v.MaxRequestBodySizeInKb }).(pulumi.IntPtrOutput)
}

// Whether allow WAF to check request Body.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) *bool { return v.RequestBodyCheck }).(pulumi.BoolPtrOutput)
}

// The type of the web application firewall rule set. Possible values are: 'OWASP'.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// The version of the rule set type.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayWebApplicationFirewallConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) Elem() ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) ApplicationGatewayWebApplicationFirewallConfiguration {
		return *v
	}).(ApplicationGatewayWebApplicationFirewallConfigurationOutput)
}

// The disabled rule groups.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) DisabledRuleGroups() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) []ApplicationGatewayFirewallDisabledRuleGroup {
		if v == nil {
			return nil
		}
		return v.DisabledRuleGroups
	}).(ApplicationGatewayFirewallDisabledRuleGroupArrayOutput)
}

// Whether the web application firewall is enabled or not.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The exclusion list.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) Exclusions() ApplicationGatewayFirewallExclusionArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) []ApplicationGatewayFirewallExclusion {
		if v == nil {
			return nil
		}
		return v.Exclusions
	}).(ApplicationGatewayFirewallExclusionArrayOutput)
}

// Maximum file upload size in Mb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.FileUploadLimitInMb
	}).(pulumi.IntPtrOutput)
}

// Web application firewall mode.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) FirewallMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.FirewallMode
	}).(pulumi.StringPtrOutput)
}

// Maximum request body size for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) MaxRequestBodySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySize
	}).(pulumi.IntPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySizeInKb
	}).(pulumi.IntPtrOutput)
}

// Whether allow WAF to check request Body.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.RequestBodyCheck
	}).(pulumi.BoolPtrOutput)
}

// The type of the web application firewall rule set. Possible values are: 'OWASP'.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) RuleSetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RuleSetType
	}).(pulumi.StringPtrOutput)
}

// The version of the rule set type.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) RuleSetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RuleSetVersion
	}).(pulumi.StringPtrOutput)
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfigurationResponse struct {
	// The disabled rule groups.
	DisabledRuleGroups []ApplicationGatewayFirewallDisabledRuleGroupResponse `pulumi:"disabledRuleGroups"`
	// Whether the web application firewall is enabled or not.
	Enabled bool `pulumi:"enabled"`
	// The exclusion list.
	Exclusions []ApplicationGatewayFirewallExclusionResponse `pulumi:"exclusions"`
	// Maximum file upload size in Mb for WAF.
	FileUploadLimitInMb *int `pulumi:"fileUploadLimitInMb"`
	// Web application firewall mode.
	FirewallMode string `pulumi:"firewallMode"`
	// Maximum request body size for WAF.
	MaxRequestBodySize *int `pulumi:"maxRequestBodySize"`
	// Maximum request body size in Kb for WAF.
	MaxRequestBodySizeInKb *int `pulumi:"maxRequestBodySizeInKb"`
	// Whether allow WAF to check request Body.
	RequestBodyCheck *bool `pulumi:"requestBodyCheck"`
	// The type of the web application firewall rule set. Possible values are: 'OWASP'.
	RuleSetType string `pulumi:"ruleSetType"`
	// The version of the rule set type.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// ApplicationGatewayWebApplicationFirewallConfigurationResponseInput is an input type that accepts ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs and ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayWebApplicationFirewallConfigurationResponseInput` via:
//
//          ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs{...}
type ApplicationGatewayWebApplicationFirewallConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput
	ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs struct {
	// The disabled rule groups.
	DisabledRuleGroups ApplicationGatewayFirewallDisabledRuleGroupResponseArrayInput `pulumi:"disabledRuleGroups"`
	// Whether the web application firewall is enabled or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The exclusion list.
	Exclusions ApplicationGatewayFirewallExclusionResponseArrayInput `pulumi:"exclusions"`
	// Maximum file upload size in Mb for WAF.
	FileUploadLimitInMb pulumi.IntPtrInput `pulumi:"fileUploadLimitInMb"`
	// Web application firewall mode.
	FirewallMode pulumi.StringInput `pulumi:"firewallMode"`
	// Maximum request body size for WAF.
	MaxRequestBodySize pulumi.IntPtrInput `pulumi:"maxRequestBodySize"`
	// Maximum request body size in Kb for WAF.
	MaxRequestBodySizeInKb pulumi.IntPtrInput `pulumi:"maxRequestBodySizeInKb"`
	// Whether allow WAF to check request Body.
	RequestBodyCheck pulumi.BoolPtrInput `pulumi:"requestBodyCheck"`
	// The type of the web application firewall rule set. Possible values are: 'OWASP'.
	RuleSetType pulumi.StringInput `pulumi:"ruleSetType"`
	// The version of the rule set type.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWebApplicationFirewallConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs) ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs) ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput)
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput).ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrInput is an input type that accepts ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs, ApplicationGatewayWebApplicationFirewallConfigurationResponsePtr and ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrInput` via:
//
//          ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput
	ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput
}

type applicationGatewayWebApplicationFirewallConfigurationResponsePtrType ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs

func ApplicationGatewayWebApplicationFirewallConfigurationResponsePtr(v *ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs) ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrInput {
	return (*applicationGatewayWebApplicationFirewallConfigurationResponsePtrType)(v)
}

func (*applicationGatewayWebApplicationFirewallConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayWebApplicationFirewallConfigurationResponse)(nil)).Elem()
}

func (i *applicationGatewayWebApplicationFirewallConfigurationResponsePtrType) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayWebApplicationFirewallConfigurationResponsePtrType) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput)
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWebApplicationFirewallConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return o.ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) *ApplicationGatewayWebApplicationFirewallConfigurationResponse {
		return &v
	}).(ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput)
}

// The disabled rule groups.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) DisabledRuleGroups() ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) []ApplicationGatewayFirewallDisabledRuleGroupResponse {
		return v.DisabledRuleGroups
	}).(ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput)
}

// Whether the web application firewall is enabled or not.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The exclusion list.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) Exclusions() ApplicationGatewayFirewallExclusionResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) []ApplicationGatewayFirewallExclusionResponse {
		return v.Exclusions
	}).(ApplicationGatewayFirewallExclusionResponseArrayOutput)
}

// Maximum file upload size in Mb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		return v.FileUploadLimitInMb
	}).(pulumi.IntPtrOutput)
}

// Web application firewall mode.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) FirewallMode() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) string { return v.FirewallMode }).(pulumi.StringOutput)
}

// Maximum request body size for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) MaxRequestBodySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		return v.MaxRequestBodySize
	}).(pulumi.IntPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		return v.MaxRequestBodySizeInKb
	}).(pulumi.IntPtrOutput)
}

// Whether allow WAF to check request Body.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) *bool { return v.RequestBodyCheck }).(pulumi.BoolPtrOutput)
}

// The type of the web application firewall rule set. Possible values are: 'OWASP'.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// The version of the rule set type.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayWebApplicationFirewallConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) Elem() ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) ApplicationGatewayWebApplicationFirewallConfigurationResponse {
		return *v
	}).(ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput)
}

// The disabled rule groups.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) DisabledRuleGroups() ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) []ApplicationGatewayFirewallDisabledRuleGroupResponse {
		if v == nil {
			return nil
		}
		return v.DisabledRuleGroups
	}).(ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput)
}

// Whether the web application firewall is enabled or not.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The exclusion list.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) Exclusions() ApplicationGatewayFirewallExclusionResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) []ApplicationGatewayFirewallExclusionResponse {
		if v == nil {
			return nil
		}
		return v.Exclusions
	}).(ApplicationGatewayFirewallExclusionResponseArrayOutput)
}

// Maximum file upload size in Mb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.FileUploadLimitInMb
	}).(pulumi.IntPtrOutput)
}

// Web application firewall mode.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) FirewallMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FirewallMode
	}).(pulumi.StringPtrOutput)
}

// Maximum request body size for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) MaxRequestBodySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySize
	}).(pulumi.IntPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySizeInKb
	}).(pulumi.IntPtrOutput)
}

// Whether allow WAF to check request Body.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequestBodyCheck
	}).(pulumi.BoolPtrOutput)
}

// The type of the web application firewall rule set. Possible values are: 'OWASP'.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) RuleSetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RuleSetType
	}).(pulumi.StringPtrOutput)
}

// The version of the rule set type.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) RuleSetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RuleSetVersion
	}).(pulumi.StringPtrOutput)
}

// Rule of type application.
type ApplicationRule struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of FQDN Tags for this rule.
	FqdnTags []string `pulumi:"fqdnTags"`
	// Name of the rule.
	Name *string `pulumi:"name"`
	// Array of Application Protocols.
	Protocols []FirewallPolicyRuleApplicationProtocol `pulumi:"protocols"`
	// Rule Type.
	RuleType string `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule.
	TargetFqdns []string `pulumi:"targetFqdns"`
	// List of Urls for this rule condition.
	TargetUrls []string `pulumi:"targetUrls"`
	// Terminate TLS connections for this rule.
	TerminateTLS *bool `pulumi:"terminateTLS"`
	// List of destination azure web categories.
	WebCategories []string `pulumi:"webCategories"`
}

// ApplicationRuleInput is an input type that accepts ApplicationRuleArgs and ApplicationRuleOutput values.
// You can construct a concrete instance of `ApplicationRuleInput` via:
//
//          ApplicationRuleArgs{...}
type ApplicationRuleInput interface {
	pulumi.Input

	ToApplicationRuleOutput() ApplicationRuleOutput
	ToApplicationRuleOutputWithContext(context.Context) ApplicationRuleOutput
}

// Rule of type application.
type ApplicationRuleArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of FQDN Tags for this rule.
	FqdnTags pulumi.StringArrayInput `pulumi:"fqdnTags"`
	// Name of the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of Application Protocols.
	Protocols FirewallPolicyRuleApplicationProtocolArrayInput `pulumi:"protocols"`
	// Rule Type.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule.
	TargetFqdns pulumi.StringArrayInput `pulumi:"targetFqdns"`
	// List of Urls for this rule condition.
	TargetUrls pulumi.StringArrayInput `pulumi:"targetUrls"`
	// Terminate TLS connections for this rule.
	TerminateTLS pulumi.BoolPtrInput `pulumi:"terminateTLS"`
	// List of destination azure web categories.
	WebCategories pulumi.StringArrayInput `pulumi:"webCategories"`
}

func (ApplicationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRule)(nil)).Elem()
}

func (i ApplicationRuleArgs) ToApplicationRuleOutput() ApplicationRuleOutput {
	return i.ToApplicationRuleOutputWithContext(context.Background())
}

func (i ApplicationRuleArgs) ToApplicationRuleOutputWithContext(ctx context.Context) ApplicationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationRuleOutput)
}

// Rule of type application.
type ApplicationRuleOutput struct{ *pulumi.OutputState }

func (ApplicationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRule)(nil)).Elem()
}

func (o ApplicationRuleOutput) ToApplicationRuleOutput() ApplicationRuleOutput {
	return o
}

func (o ApplicationRuleOutput) ToApplicationRuleOutputWithContext(ctx context.Context) ApplicationRuleOutput {
	return o
}

// Description of the rule.
func (o ApplicationRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o ApplicationRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of FQDN Tags for this rule.
func (o ApplicationRuleOutput) FqdnTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRule) []string { return v.FqdnTags }).(pulumi.StringArrayOutput)
}

// Name of the rule.
func (o ApplicationRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of Application Protocols.
func (o ApplicationRuleOutput) Protocols() FirewallPolicyRuleApplicationProtocolArrayOutput {
	return o.ApplyT(func(v ApplicationRule) []FirewallPolicyRuleApplicationProtocol { return v.Protocols }).(FirewallPolicyRuleApplicationProtocolArrayOutput)
}

// Rule Type.
func (o ApplicationRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o ApplicationRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o ApplicationRuleOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRule) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// List of FQDNs for this rule.
func (o ApplicationRuleOutput) TargetFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRule) []string { return v.TargetFqdns }).(pulumi.StringArrayOutput)
}

// List of Urls for this rule condition.
func (o ApplicationRuleOutput) TargetUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRule) []string { return v.TargetUrls }).(pulumi.StringArrayOutput)
}

// Terminate TLS connections for this rule.
func (o ApplicationRuleOutput) TerminateTLS() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationRule) *bool { return v.TerminateTLS }).(pulumi.BoolPtrOutput)
}

// List of destination azure web categories.
func (o ApplicationRuleOutput) WebCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRule) []string { return v.WebCategories }).(pulumi.StringArrayOutput)
}

// Rule condition of type application.
type ApplicationRuleCondition struct {
	// Description of the rule condition.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of FQDN Tags for this rule condition.
	FqdnTags []string `pulumi:"fqdnTags"`
	// Name of the rule condition.
	Name *string `pulumi:"name"`
	// Array of Application Protocols.
	Protocols []FirewallPolicyRuleConditionApplicationProtocol `pulumi:"protocols"`
	// Rule Condition Type.
	RuleConditionType string `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule condition.
	TargetFqdns []string `pulumi:"targetFqdns"`
}

// ApplicationRuleConditionInput is an input type that accepts ApplicationRuleConditionArgs and ApplicationRuleConditionOutput values.
// You can construct a concrete instance of `ApplicationRuleConditionInput` via:
//
//          ApplicationRuleConditionArgs{...}
type ApplicationRuleConditionInput interface {
	pulumi.Input

	ToApplicationRuleConditionOutput() ApplicationRuleConditionOutput
	ToApplicationRuleConditionOutputWithContext(context.Context) ApplicationRuleConditionOutput
}

// Rule condition of type application.
type ApplicationRuleConditionArgs struct {
	// Description of the rule condition.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of FQDN Tags for this rule condition.
	FqdnTags pulumi.StringArrayInput `pulumi:"fqdnTags"`
	// Name of the rule condition.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of Application Protocols.
	Protocols FirewallPolicyRuleConditionApplicationProtocolArrayInput `pulumi:"protocols"`
	// Rule Condition Type.
	RuleConditionType pulumi.StringInput `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule condition.
	TargetFqdns pulumi.StringArrayInput `pulumi:"targetFqdns"`
}

func (ApplicationRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRuleCondition)(nil)).Elem()
}

func (i ApplicationRuleConditionArgs) ToApplicationRuleConditionOutput() ApplicationRuleConditionOutput {
	return i.ToApplicationRuleConditionOutputWithContext(context.Background())
}

func (i ApplicationRuleConditionArgs) ToApplicationRuleConditionOutputWithContext(ctx context.Context) ApplicationRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationRuleConditionOutput)
}

// Rule condition of type application.
type ApplicationRuleConditionOutput struct{ *pulumi.OutputState }

func (ApplicationRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRuleCondition)(nil)).Elem()
}

func (o ApplicationRuleConditionOutput) ToApplicationRuleConditionOutput() ApplicationRuleConditionOutput {
	return o
}

func (o ApplicationRuleConditionOutput) ToApplicationRuleConditionOutputWithContext(ctx context.Context) ApplicationRuleConditionOutput {
	return o
}

// Description of the rule condition.
func (o ApplicationRuleConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationRuleCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o ApplicationRuleConditionOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleCondition) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of FQDN Tags for this rule condition.
func (o ApplicationRuleConditionOutput) FqdnTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleCondition) []string { return v.FqdnTags }).(pulumi.StringArrayOutput)
}

// Name of the rule condition.
func (o ApplicationRuleConditionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationRuleCondition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of Application Protocols.
func (o ApplicationRuleConditionOutput) Protocols() FirewallPolicyRuleConditionApplicationProtocolArrayOutput {
	return o.ApplyT(func(v ApplicationRuleCondition) []FirewallPolicyRuleConditionApplicationProtocol { return v.Protocols }).(FirewallPolicyRuleConditionApplicationProtocolArrayOutput)
}

// Rule Condition Type.
func (o ApplicationRuleConditionOutput) RuleConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationRuleCondition) string { return v.RuleConditionType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o ApplicationRuleConditionOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleCondition) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o ApplicationRuleConditionOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleCondition) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// List of FQDNs for this rule condition.
func (o ApplicationRuleConditionOutput) TargetFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleCondition) []string { return v.TargetFqdns }).(pulumi.StringArrayOutput)
}

// Rule condition of type application.
type ApplicationRuleConditionResponse struct {
	// Description of the rule condition.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of FQDN Tags for this rule condition.
	FqdnTags []string `pulumi:"fqdnTags"`
	// Name of the rule condition.
	Name *string `pulumi:"name"`
	// Array of Application Protocols.
	Protocols []FirewallPolicyRuleConditionApplicationProtocolResponse `pulumi:"protocols"`
	// Rule Condition Type.
	RuleConditionType string `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule condition.
	TargetFqdns []string `pulumi:"targetFqdns"`
}

// ApplicationRuleConditionResponseInput is an input type that accepts ApplicationRuleConditionResponseArgs and ApplicationRuleConditionResponseOutput values.
// You can construct a concrete instance of `ApplicationRuleConditionResponseInput` via:
//
//          ApplicationRuleConditionResponseArgs{...}
type ApplicationRuleConditionResponseInput interface {
	pulumi.Input

	ToApplicationRuleConditionResponseOutput() ApplicationRuleConditionResponseOutput
	ToApplicationRuleConditionResponseOutputWithContext(context.Context) ApplicationRuleConditionResponseOutput
}

// Rule condition of type application.
type ApplicationRuleConditionResponseArgs struct {
	// Description of the rule condition.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of FQDN Tags for this rule condition.
	FqdnTags pulumi.StringArrayInput `pulumi:"fqdnTags"`
	// Name of the rule condition.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of Application Protocols.
	Protocols FirewallPolicyRuleConditionApplicationProtocolResponseArrayInput `pulumi:"protocols"`
	// Rule Condition Type.
	RuleConditionType pulumi.StringInput `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule condition.
	TargetFqdns pulumi.StringArrayInput `pulumi:"targetFqdns"`
}

func (ApplicationRuleConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRuleConditionResponse)(nil)).Elem()
}

func (i ApplicationRuleConditionResponseArgs) ToApplicationRuleConditionResponseOutput() ApplicationRuleConditionResponseOutput {
	return i.ToApplicationRuleConditionResponseOutputWithContext(context.Background())
}

func (i ApplicationRuleConditionResponseArgs) ToApplicationRuleConditionResponseOutputWithContext(ctx context.Context) ApplicationRuleConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationRuleConditionResponseOutput)
}

// Rule condition of type application.
type ApplicationRuleConditionResponseOutput struct{ *pulumi.OutputState }

func (ApplicationRuleConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRuleConditionResponse)(nil)).Elem()
}

func (o ApplicationRuleConditionResponseOutput) ToApplicationRuleConditionResponseOutput() ApplicationRuleConditionResponseOutput {
	return o
}

func (o ApplicationRuleConditionResponseOutput) ToApplicationRuleConditionResponseOutputWithContext(ctx context.Context) ApplicationRuleConditionResponseOutput {
	return o
}

// Description of the rule condition.
func (o ApplicationRuleConditionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationRuleConditionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o ApplicationRuleConditionResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleConditionResponse) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of FQDN Tags for this rule condition.
func (o ApplicationRuleConditionResponseOutput) FqdnTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleConditionResponse) []string { return v.FqdnTags }).(pulumi.StringArrayOutput)
}

// Name of the rule condition.
func (o ApplicationRuleConditionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationRuleConditionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of Application Protocols.
func (o ApplicationRuleConditionResponseOutput) Protocols() FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput {
	return o.ApplyT(func(v ApplicationRuleConditionResponse) []FirewallPolicyRuleConditionApplicationProtocolResponse {
		return v.Protocols
	}).(FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput)
}

// Rule Condition Type.
func (o ApplicationRuleConditionResponseOutput) RuleConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationRuleConditionResponse) string { return v.RuleConditionType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o ApplicationRuleConditionResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleConditionResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o ApplicationRuleConditionResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleConditionResponse) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// List of FQDNs for this rule condition.
func (o ApplicationRuleConditionResponseOutput) TargetFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleConditionResponse) []string { return v.TargetFqdns }).(pulumi.StringArrayOutput)
}

// Rule of type application.
type ApplicationRuleResponse struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of FQDN Tags for this rule.
	FqdnTags []string `pulumi:"fqdnTags"`
	// Name of the rule.
	Name *string `pulumi:"name"`
	// Array of Application Protocols.
	Protocols []FirewallPolicyRuleApplicationProtocolResponse `pulumi:"protocols"`
	// Rule Type.
	RuleType string `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule.
	TargetFqdns []string `pulumi:"targetFqdns"`
	// List of Urls for this rule condition.
	TargetUrls []string `pulumi:"targetUrls"`
	// Terminate TLS connections for this rule.
	TerminateTLS *bool `pulumi:"terminateTLS"`
	// List of destination azure web categories.
	WebCategories []string `pulumi:"webCategories"`
}

// ApplicationRuleResponseInput is an input type that accepts ApplicationRuleResponseArgs and ApplicationRuleResponseOutput values.
// You can construct a concrete instance of `ApplicationRuleResponseInput` via:
//
//          ApplicationRuleResponseArgs{...}
type ApplicationRuleResponseInput interface {
	pulumi.Input

	ToApplicationRuleResponseOutput() ApplicationRuleResponseOutput
	ToApplicationRuleResponseOutputWithContext(context.Context) ApplicationRuleResponseOutput
}

// Rule of type application.
type ApplicationRuleResponseArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of FQDN Tags for this rule.
	FqdnTags pulumi.StringArrayInput `pulumi:"fqdnTags"`
	// Name of the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of Application Protocols.
	Protocols FirewallPolicyRuleApplicationProtocolResponseArrayInput `pulumi:"protocols"`
	// Rule Type.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule.
	TargetFqdns pulumi.StringArrayInput `pulumi:"targetFqdns"`
	// List of Urls for this rule condition.
	TargetUrls pulumi.StringArrayInput `pulumi:"targetUrls"`
	// Terminate TLS connections for this rule.
	TerminateTLS pulumi.BoolPtrInput `pulumi:"terminateTLS"`
	// List of destination azure web categories.
	WebCategories pulumi.StringArrayInput `pulumi:"webCategories"`
}

func (ApplicationRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRuleResponse)(nil)).Elem()
}

func (i ApplicationRuleResponseArgs) ToApplicationRuleResponseOutput() ApplicationRuleResponseOutput {
	return i.ToApplicationRuleResponseOutputWithContext(context.Background())
}

func (i ApplicationRuleResponseArgs) ToApplicationRuleResponseOutputWithContext(ctx context.Context) ApplicationRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationRuleResponseOutput)
}

// Rule of type application.
type ApplicationRuleResponseOutput struct{ *pulumi.OutputState }

func (ApplicationRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationRuleResponse)(nil)).Elem()
}

func (o ApplicationRuleResponseOutput) ToApplicationRuleResponseOutput() ApplicationRuleResponseOutput {
	return o
}

func (o ApplicationRuleResponseOutput) ToApplicationRuleResponseOutputWithContext(ctx context.Context) ApplicationRuleResponseOutput {
	return o
}

// Description of the rule.
func (o ApplicationRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o ApplicationRuleResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of FQDN Tags for this rule.
func (o ApplicationRuleResponseOutput) FqdnTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) []string { return v.FqdnTags }).(pulumi.StringArrayOutput)
}

// Name of the rule.
func (o ApplicationRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of Application Protocols.
func (o ApplicationRuleResponseOutput) Protocols() FirewallPolicyRuleApplicationProtocolResponseArrayOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) []FirewallPolicyRuleApplicationProtocolResponse { return v.Protocols }).(FirewallPolicyRuleApplicationProtocolResponseArrayOutput)
}

// Rule Type.
func (o ApplicationRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o ApplicationRuleResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o ApplicationRuleResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// List of FQDNs for this rule.
func (o ApplicationRuleResponseOutput) TargetFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) []string { return v.TargetFqdns }).(pulumi.StringArrayOutput)
}

// List of Urls for this rule condition.
func (o ApplicationRuleResponseOutput) TargetUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) []string { return v.TargetUrls }).(pulumi.StringArrayOutput)
}

// Terminate TLS connections for this rule.
func (o ApplicationRuleResponseOutput) TerminateTLS() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) *bool { return v.TerminateTLS }).(pulumi.BoolPtrOutput)
}

// List of destination azure web categories.
func (o ApplicationRuleResponseOutput) WebCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationRuleResponse) []string { return v.WebCategories }).(pulumi.StringArrayOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroupType struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// ApplicationSecurityGroupTypeInput is an input type that accepts ApplicationSecurityGroupTypeArgs and ApplicationSecurityGroupTypeOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupTypeInput` via:
//
//          ApplicationSecurityGroupTypeArgs{...}
type ApplicationSecurityGroupTypeInput interface {
	pulumi.Input

	ToApplicationSecurityGroupTypeOutput() ApplicationSecurityGroupTypeOutput
	ToApplicationSecurityGroupTypeOutputWithContext(context.Context) ApplicationSecurityGroupTypeOutput
}

// An application security group in a resource group.
type ApplicationSecurityGroupTypeArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ApplicationSecurityGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupType)(nil)).Elem()
}

func (i ApplicationSecurityGroupTypeArgs) ToApplicationSecurityGroupTypeOutput() ApplicationSecurityGroupTypeOutput {
	return i.ToApplicationSecurityGroupTypeOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupTypeArgs) ToApplicationSecurityGroupTypeOutputWithContext(ctx context.Context) ApplicationSecurityGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupTypeOutput)
}

// ApplicationSecurityGroupTypeArrayInput is an input type that accepts ApplicationSecurityGroupTypeArray and ApplicationSecurityGroupTypeArrayOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupTypeArrayInput` via:
//
//          ApplicationSecurityGroupTypeArray{ ApplicationSecurityGroupTypeArgs{...} }
type ApplicationSecurityGroupTypeArrayInput interface {
	pulumi.Input

	ToApplicationSecurityGroupTypeArrayOutput() ApplicationSecurityGroupTypeArrayOutput
	ToApplicationSecurityGroupTypeArrayOutputWithContext(context.Context) ApplicationSecurityGroupTypeArrayOutput
}

type ApplicationSecurityGroupTypeArray []ApplicationSecurityGroupTypeInput

func (ApplicationSecurityGroupTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroupType)(nil)).Elem()
}

func (i ApplicationSecurityGroupTypeArray) ToApplicationSecurityGroupTypeArrayOutput() ApplicationSecurityGroupTypeArrayOutput {
	return i.ToApplicationSecurityGroupTypeArrayOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupTypeArray) ToApplicationSecurityGroupTypeArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupTypeArrayOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroupTypeOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupType)(nil)).Elem()
}

func (o ApplicationSecurityGroupTypeOutput) ToApplicationSecurityGroupTypeOutput() ApplicationSecurityGroupTypeOutput {
	return o
}

func (o ApplicationSecurityGroupTypeOutput) ToApplicationSecurityGroupTypeOutputWithContext(ctx context.Context) ApplicationSecurityGroupTypeOutput {
	return o
}

// Resource ID.
func (o ApplicationSecurityGroupTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ApplicationSecurityGroupTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o ApplicationSecurityGroupTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ApplicationSecurityGroupTypeArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroupType)(nil)).Elem()
}

func (o ApplicationSecurityGroupTypeArrayOutput) ToApplicationSecurityGroupTypeArrayOutput() ApplicationSecurityGroupTypeArrayOutput {
	return o
}

func (o ApplicationSecurityGroupTypeArrayOutput) ToApplicationSecurityGroupTypeArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupTypeArrayOutput {
	return o
}

func (o ApplicationSecurityGroupTypeArrayOutput) Index(i pulumi.IntInput) ApplicationSecurityGroupTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSecurityGroupType {
		return vs[0].([]ApplicationSecurityGroupType)[vs[1].(int)]
	}).(ApplicationSecurityGroupTypeOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroupResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the application security group resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ApplicationSecurityGroupResponseInput is an input type that accepts ApplicationSecurityGroupResponseArgs and ApplicationSecurityGroupResponseOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupResponseInput` via:
//
//          ApplicationSecurityGroupResponseArgs{...}
type ApplicationSecurityGroupResponseInput interface {
	pulumi.Input

	ToApplicationSecurityGroupResponseOutput() ApplicationSecurityGroupResponseOutput
	ToApplicationSecurityGroupResponseOutputWithContext(context.Context) ApplicationSecurityGroupResponseOutput
}

// An application security group in a resource group.
type ApplicationSecurityGroupResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the application security group resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
	ResourceGuid pulumi.StringInput `pulumi:"resourceGuid"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationSecurityGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupResponse)(nil)).Elem()
}

func (i ApplicationSecurityGroupResponseArgs) ToApplicationSecurityGroupResponseOutput() ApplicationSecurityGroupResponseOutput {
	return i.ToApplicationSecurityGroupResponseOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupResponseArgs) ToApplicationSecurityGroupResponseOutputWithContext(ctx context.Context) ApplicationSecurityGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupResponseOutput)
}

// ApplicationSecurityGroupResponseArrayInput is an input type that accepts ApplicationSecurityGroupResponseArray and ApplicationSecurityGroupResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupResponseArrayInput` via:
//
//          ApplicationSecurityGroupResponseArray{ ApplicationSecurityGroupResponseArgs{...} }
type ApplicationSecurityGroupResponseArrayInput interface {
	pulumi.Input

	ToApplicationSecurityGroupResponseArrayOutput() ApplicationSecurityGroupResponseArrayOutput
	ToApplicationSecurityGroupResponseArrayOutputWithContext(context.Context) ApplicationSecurityGroupResponseArrayOutput
}

type ApplicationSecurityGroupResponseArray []ApplicationSecurityGroupResponseInput

func (ApplicationSecurityGroupResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroupResponse)(nil)).Elem()
}

func (i ApplicationSecurityGroupResponseArray) ToApplicationSecurityGroupResponseArrayOutput() ApplicationSecurityGroupResponseArrayOutput {
	return i.ToApplicationSecurityGroupResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupResponseArray) ToApplicationSecurityGroupResponseArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupResponseArrayOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroupResponseOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupResponse)(nil)).Elem()
}

func (o ApplicationSecurityGroupResponseOutput) ToApplicationSecurityGroupResponseOutput() ApplicationSecurityGroupResponseOutput {
	return o
}

func (o ApplicationSecurityGroupResponseOutput) ToApplicationSecurityGroupResponseOutputWithContext(ctx context.Context) ApplicationSecurityGroupResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationSecurityGroupResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationSecurityGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ApplicationSecurityGroupResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ApplicationSecurityGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the application security group resource.
func (o ApplicationSecurityGroupResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
func (o ApplicationSecurityGroupResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Resource tags.
func (o ApplicationSecurityGroupResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o ApplicationSecurityGroupResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationSecurityGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroupResponse)(nil)).Elem()
}

func (o ApplicationSecurityGroupResponseArrayOutput) ToApplicationSecurityGroupResponseArrayOutput() ApplicationSecurityGroupResponseArrayOutput {
	return o
}

func (o ApplicationSecurityGroupResponseArrayOutput) ToApplicationSecurityGroupResponseArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupResponseArrayOutput {
	return o
}

func (o ApplicationSecurityGroupResponseArrayOutput) Index(i pulumi.IntInput) ApplicationSecurityGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSecurityGroupResponse {
		return vs[0].([]ApplicationSecurityGroupResponse)[vs[1].(int)]
	}).(ApplicationSecurityGroupResponseOutput)
}

// Properties of an application rule.
type AzureFirewallApplicationRule struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of FQDN Tags for this rule.
	FqdnTags []string `pulumi:"fqdnTags"`
	// Name of the application rule.
	Name *string `pulumi:"name"`
	// Array of ApplicationRuleProtocols.
	Protocols []AzureFirewallApplicationRuleProtocol `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule.
	TargetFqdns []string `pulumi:"targetFqdns"`
}

// AzureFirewallApplicationRuleInput is an input type that accepts AzureFirewallApplicationRuleArgs and AzureFirewallApplicationRuleOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleInput` via:
//
//          AzureFirewallApplicationRuleArgs{...}
type AzureFirewallApplicationRuleInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleOutput() AzureFirewallApplicationRuleOutput
	ToAzureFirewallApplicationRuleOutputWithContext(context.Context) AzureFirewallApplicationRuleOutput
}

// Properties of an application rule.
type AzureFirewallApplicationRuleArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of FQDN Tags for this rule.
	FqdnTags pulumi.StringArrayInput `pulumi:"fqdnTags"`
	// Name of the application rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of ApplicationRuleProtocols.
	Protocols AzureFirewallApplicationRuleProtocolArrayInput `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule.
	TargetFqdns pulumi.StringArrayInput `pulumi:"targetFqdns"`
}

func (AzureFirewallApplicationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRule)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleArgs) ToAzureFirewallApplicationRuleOutput() AzureFirewallApplicationRuleOutput {
	return i.ToAzureFirewallApplicationRuleOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleArgs) ToAzureFirewallApplicationRuleOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleOutput)
}

// AzureFirewallApplicationRuleArrayInput is an input type that accepts AzureFirewallApplicationRuleArray and AzureFirewallApplicationRuleArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleArrayInput` via:
//
//          AzureFirewallApplicationRuleArray{ AzureFirewallApplicationRuleArgs{...} }
type AzureFirewallApplicationRuleArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleArrayOutput() AzureFirewallApplicationRuleArrayOutput
	ToAzureFirewallApplicationRuleArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleArrayOutput
}

type AzureFirewallApplicationRuleArray []AzureFirewallApplicationRuleInput

func (AzureFirewallApplicationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRule)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleArray) ToAzureFirewallApplicationRuleArrayOutput() AzureFirewallApplicationRuleArrayOutput {
	return i.ToAzureFirewallApplicationRuleArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleArray) ToAzureFirewallApplicationRuleArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleArrayOutput)
}

// Properties of an application rule.
type AzureFirewallApplicationRuleOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRule)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleOutput) ToAzureFirewallApplicationRuleOutput() AzureFirewallApplicationRuleOutput {
	return o
}

func (o AzureFirewallApplicationRuleOutput) ToAzureFirewallApplicationRuleOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallApplicationRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of FQDN Tags for this rule.
func (o AzureFirewallApplicationRuleOutput) FqdnTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) []string { return v.FqdnTags }).(pulumi.StringArrayOutput)
}

// Name of the application rule.
func (o AzureFirewallApplicationRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of ApplicationRuleProtocols.
func (o AzureFirewallApplicationRuleOutput) Protocols() AzureFirewallApplicationRuleProtocolArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) []AzureFirewallApplicationRuleProtocol { return v.Protocols }).(AzureFirewallApplicationRuleProtocolArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallApplicationRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o AzureFirewallApplicationRuleOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// List of FQDNs for this rule.
func (o AzureFirewallApplicationRuleOutput) TargetFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) []string { return v.TargetFqdns }).(pulumi.StringArrayOutput)
}

type AzureFirewallApplicationRuleArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRule)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleArrayOutput) ToAzureFirewallApplicationRuleArrayOutput() AzureFirewallApplicationRuleArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleArrayOutput) ToAzureFirewallApplicationRuleArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRule {
		return vs[0].([]AzureFirewallApplicationRule)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleOutput)
}

// Application rule collection resource.
type AzureFirewallApplicationRuleCollection struct {
	// The action type of a rule collection.
	Action *AzureFirewallRCAction `pulumi:"action"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the application rule collection resource.
	Priority *int `pulumi:"priority"`
	// Collection of rules used by a application rule collection.
	Rules []AzureFirewallApplicationRule `pulumi:"rules"`
}

// AzureFirewallApplicationRuleCollectionInput is an input type that accepts AzureFirewallApplicationRuleCollectionArgs and AzureFirewallApplicationRuleCollectionOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleCollectionInput` via:
//
//          AzureFirewallApplicationRuleCollectionArgs{...}
type AzureFirewallApplicationRuleCollectionInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleCollectionOutput() AzureFirewallApplicationRuleCollectionOutput
	ToAzureFirewallApplicationRuleCollectionOutputWithContext(context.Context) AzureFirewallApplicationRuleCollectionOutput
}

// Application rule collection resource.
type AzureFirewallApplicationRuleCollectionArgs struct {
	// The action type of a rule collection.
	Action AzureFirewallRCActionPtrInput `pulumi:"action"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the application rule collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Collection of rules used by a application rule collection.
	Rules AzureFirewallApplicationRuleArrayInput `pulumi:"rules"`
}

func (AzureFirewallApplicationRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleCollection)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleCollectionArgs) ToAzureFirewallApplicationRuleCollectionOutput() AzureFirewallApplicationRuleCollectionOutput {
	return i.ToAzureFirewallApplicationRuleCollectionOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleCollectionArgs) ToAzureFirewallApplicationRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionOutput)
}

// AzureFirewallApplicationRuleCollectionArrayInput is an input type that accepts AzureFirewallApplicationRuleCollectionArray and AzureFirewallApplicationRuleCollectionArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleCollectionArrayInput` via:
//
//          AzureFirewallApplicationRuleCollectionArray{ AzureFirewallApplicationRuleCollectionArgs{...} }
type AzureFirewallApplicationRuleCollectionArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleCollectionArrayOutput() AzureFirewallApplicationRuleCollectionArrayOutput
	ToAzureFirewallApplicationRuleCollectionArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleCollectionArrayOutput
}

type AzureFirewallApplicationRuleCollectionArray []AzureFirewallApplicationRuleCollectionInput

func (AzureFirewallApplicationRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleCollection)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleCollectionArray) ToAzureFirewallApplicationRuleCollectionArrayOutput() AzureFirewallApplicationRuleCollectionArrayOutput {
	return i.ToAzureFirewallApplicationRuleCollectionArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleCollectionArray) ToAzureFirewallApplicationRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionArrayOutput)
}

// Application rule collection resource.
type AzureFirewallApplicationRuleCollectionOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleCollection)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionOutput) ToAzureFirewallApplicationRuleCollectionOutput() AzureFirewallApplicationRuleCollectionOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionOutput) ToAzureFirewallApplicationRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionOutput {
	return o
}

// The action type of a rule collection.
func (o AzureFirewallApplicationRuleCollectionOutput) Action() AzureFirewallRCActionPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollection) *AzureFirewallRCAction { return v.Action }).(AzureFirewallRCActionPtrOutput)
}

// Resource ID.
func (o AzureFirewallApplicationRuleCollectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
func (o AzureFirewallApplicationRuleCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the application rule collection resource.
func (o AzureFirewallApplicationRuleCollectionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollection) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Collection of rules used by a application rule collection.
func (o AzureFirewallApplicationRuleCollectionOutput) Rules() AzureFirewallApplicationRuleArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollection) []AzureFirewallApplicationRule { return v.Rules }).(AzureFirewallApplicationRuleArrayOutput)
}

type AzureFirewallApplicationRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleCollection)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionArrayOutput) ToAzureFirewallApplicationRuleCollectionArrayOutput() AzureFirewallApplicationRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionArrayOutput) ToAzureFirewallApplicationRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleCollection {
		return vs[0].([]AzureFirewallApplicationRuleCollection)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleCollectionOutput)
}

// Application rule collection resource.
type AzureFirewallApplicationRuleCollectionResponse struct {
	// The action type of a rule collection.
	Action *AzureFirewallRCActionResponse `pulumi:"action"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the application rule collection resource.
	Priority *int `pulumi:"priority"`
	// The provisioning state of the application rule collection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Collection of rules used by a application rule collection.
	Rules []AzureFirewallApplicationRuleResponse `pulumi:"rules"`
}

// AzureFirewallApplicationRuleCollectionResponseInput is an input type that accepts AzureFirewallApplicationRuleCollectionResponseArgs and AzureFirewallApplicationRuleCollectionResponseOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleCollectionResponseInput` via:
//
//          AzureFirewallApplicationRuleCollectionResponseArgs{...}
type AzureFirewallApplicationRuleCollectionResponseInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleCollectionResponseOutput() AzureFirewallApplicationRuleCollectionResponseOutput
	ToAzureFirewallApplicationRuleCollectionResponseOutputWithContext(context.Context) AzureFirewallApplicationRuleCollectionResponseOutput
}

// Application rule collection resource.
type AzureFirewallApplicationRuleCollectionResponseArgs struct {
	// The action type of a rule collection.
	Action AzureFirewallRCActionResponsePtrInput `pulumi:"action"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the application rule collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The provisioning state of the application rule collection resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Collection of rules used by a application rule collection.
	Rules AzureFirewallApplicationRuleResponseArrayInput `pulumi:"rules"`
}

func (AzureFirewallApplicationRuleCollectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleCollectionResponse)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleCollectionResponseArgs) ToAzureFirewallApplicationRuleCollectionResponseOutput() AzureFirewallApplicationRuleCollectionResponseOutput {
	return i.ToAzureFirewallApplicationRuleCollectionResponseOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleCollectionResponseArgs) ToAzureFirewallApplicationRuleCollectionResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionResponseOutput)
}

// AzureFirewallApplicationRuleCollectionResponseArrayInput is an input type that accepts AzureFirewallApplicationRuleCollectionResponseArray and AzureFirewallApplicationRuleCollectionResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleCollectionResponseArrayInput` via:
//
//          AzureFirewallApplicationRuleCollectionResponseArray{ AzureFirewallApplicationRuleCollectionResponseArgs{...} }
type AzureFirewallApplicationRuleCollectionResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleCollectionResponseArrayOutput() AzureFirewallApplicationRuleCollectionResponseArrayOutput
	ToAzureFirewallApplicationRuleCollectionResponseArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleCollectionResponseArrayOutput
}

type AzureFirewallApplicationRuleCollectionResponseArray []AzureFirewallApplicationRuleCollectionResponseInput

func (AzureFirewallApplicationRuleCollectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleCollectionResponse)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleCollectionResponseArray) ToAzureFirewallApplicationRuleCollectionResponseArrayOutput() AzureFirewallApplicationRuleCollectionResponseArrayOutput {
	return i.ToAzureFirewallApplicationRuleCollectionResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleCollectionResponseArray) ToAzureFirewallApplicationRuleCollectionResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionResponseArrayOutput)
}

// Application rule collection resource.
type AzureFirewallApplicationRuleCollectionResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionResponseOutput) ToAzureFirewallApplicationRuleCollectionResponseOutput() AzureFirewallApplicationRuleCollectionResponseOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionResponseOutput) ToAzureFirewallApplicationRuleCollectionResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionResponseOutput {
	return o
}

// The action type of a rule collection.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Action() AzureFirewallRCActionResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) *AzureFirewallRCActionResponse { return v.Action }).(AzureFirewallRCActionResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the application rule collection resource.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The provisioning state of the application rule collection resource.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Collection of rules used by a application rule collection.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Rules() AzureFirewallApplicationRuleResponseArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) []AzureFirewallApplicationRuleResponse {
		return v.Rules
	}).(AzureFirewallApplicationRuleResponseArrayOutput)
}

type AzureFirewallApplicationRuleCollectionResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionResponseArrayOutput) ToAzureFirewallApplicationRuleCollectionResponseArrayOutput() AzureFirewallApplicationRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionResponseArrayOutput) ToAzureFirewallApplicationRuleCollectionResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleCollectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleCollectionResponse {
		return vs[0].([]AzureFirewallApplicationRuleCollectionResponse)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleCollectionResponseOutput)
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocol struct {
	// Port number for the protocol, cannot be greater than 64000. This field is optional.
	Port *int `pulumi:"port"`
	// Protocol type.
	ProtocolType *string `pulumi:"protocolType"`
}

// AzureFirewallApplicationRuleProtocolInput is an input type that accepts AzureFirewallApplicationRuleProtocolArgs and AzureFirewallApplicationRuleProtocolOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleProtocolInput` via:
//
//          AzureFirewallApplicationRuleProtocolArgs{...}
type AzureFirewallApplicationRuleProtocolInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleProtocolOutput() AzureFirewallApplicationRuleProtocolOutput
	ToAzureFirewallApplicationRuleProtocolOutputWithContext(context.Context) AzureFirewallApplicationRuleProtocolOutput
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocolArgs struct {
	// Port number for the protocol, cannot be greater than 64000. This field is optional.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Protocol type.
	ProtocolType pulumi.StringPtrInput `pulumi:"protocolType"`
}

func (AzureFirewallApplicationRuleProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleProtocol)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleProtocolArgs) ToAzureFirewallApplicationRuleProtocolOutput() AzureFirewallApplicationRuleProtocolOutput {
	return i.ToAzureFirewallApplicationRuleProtocolOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleProtocolArgs) ToAzureFirewallApplicationRuleProtocolOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleProtocolOutput)
}

// AzureFirewallApplicationRuleProtocolArrayInput is an input type that accepts AzureFirewallApplicationRuleProtocolArray and AzureFirewallApplicationRuleProtocolArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleProtocolArrayInput` via:
//
//          AzureFirewallApplicationRuleProtocolArray{ AzureFirewallApplicationRuleProtocolArgs{...} }
type AzureFirewallApplicationRuleProtocolArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleProtocolArrayOutput() AzureFirewallApplicationRuleProtocolArrayOutput
	ToAzureFirewallApplicationRuleProtocolArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleProtocolArrayOutput
}

type AzureFirewallApplicationRuleProtocolArray []AzureFirewallApplicationRuleProtocolInput

func (AzureFirewallApplicationRuleProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleProtocol)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleProtocolArray) ToAzureFirewallApplicationRuleProtocolArrayOutput() AzureFirewallApplicationRuleProtocolArrayOutput {
	return i.ToAzureFirewallApplicationRuleProtocolArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleProtocolArray) ToAzureFirewallApplicationRuleProtocolArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleProtocolArrayOutput)
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocolOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleProtocol)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleProtocolOutput) ToAzureFirewallApplicationRuleProtocolOutput() AzureFirewallApplicationRuleProtocolOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolOutput) ToAzureFirewallApplicationRuleProtocolOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolOutput {
	return o
}

// Port number for the protocol, cannot be greater than 64000. This field is optional.
func (o AzureFirewallApplicationRuleProtocolOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleProtocol) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol type.
func (o AzureFirewallApplicationRuleProtocolOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleProtocol) *string { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

type AzureFirewallApplicationRuleProtocolArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleProtocol)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleProtocolArrayOutput) ToAzureFirewallApplicationRuleProtocolArrayOutput() AzureFirewallApplicationRuleProtocolArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolArrayOutput) ToAzureFirewallApplicationRuleProtocolArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleProtocol {
		return vs[0].([]AzureFirewallApplicationRuleProtocol)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleProtocolOutput)
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocolResponse struct {
	// Port number for the protocol, cannot be greater than 64000. This field is optional.
	Port *int `pulumi:"port"`
	// Protocol type.
	ProtocolType *string `pulumi:"protocolType"`
}

// AzureFirewallApplicationRuleProtocolResponseInput is an input type that accepts AzureFirewallApplicationRuleProtocolResponseArgs and AzureFirewallApplicationRuleProtocolResponseOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleProtocolResponseInput` via:
//
//          AzureFirewallApplicationRuleProtocolResponseArgs{...}
type AzureFirewallApplicationRuleProtocolResponseInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleProtocolResponseOutput() AzureFirewallApplicationRuleProtocolResponseOutput
	ToAzureFirewallApplicationRuleProtocolResponseOutputWithContext(context.Context) AzureFirewallApplicationRuleProtocolResponseOutput
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocolResponseArgs struct {
	// Port number for the protocol, cannot be greater than 64000. This field is optional.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Protocol type.
	ProtocolType pulumi.StringPtrInput `pulumi:"protocolType"`
}

func (AzureFirewallApplicationRuleProtocolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleProtocolResponse)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleProtocolResponseArgs) ToAzureFirewallApplicationRuleProtocolResponseOutput() AzureFirewallApplicationRuleProtocolResponseOutput {
	return i.ToAzureFirewallApplicationRuleProtocolResponseOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleProtocolResponseArgs) ToAzureFirewallApplicationRuleProtocolResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleProtocolResponseOutput)
}

// AzureFirewallApplicationRuleProtocolResponseArrayInput is an input type that accepts AzureFirewallApplicationRuleProtocolResponseArray and AzureFirewallApplicationRuleProtocolResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleProtocolResponseArrayInput` via:
//
//          AzureFirewallApplicationRuleProtocolResponseArray{ AzureFirewallApplicationRuleProtocolResponseArgs{...} }
type AzureFirewallApplicationRuleProtocolResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleProtocolResponseArrayOutput() AzureFirewallApplicationRuleProtocolResponseArrayOutput
	ToAzureFirewallApplicationRuleProtocolResponseArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleProtocolResponseArrayOutput
}

type AzureFirewallApplicationRuleProtocolResponseArray []AzureFirewallApplicationRuleProtocolResponseInput

func (AzureFirewallApplicationRuleProtocolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleProtocolResponse)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleProtocolResponseArray) ToAzureFirewallApplicationRuleProtocolResponseArrayOutput() AzureFirewallApplicationRuleProtocolResponseArrayOutput {
	return i.ToAzureFirewallApplicationRuleProtocolResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleProtocolResponseArray) ToAzureFirewallApplicationRuleProtocolResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleProtocolResponseArrayOutput)
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocolResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleProtocolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleProtocolResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleProtocolResponseOutput) ToAzureFirewallApplicationRuleProtocolResponseOutput() AzureFirewallApplicationRuleProtocolResponseOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolResponseOutput) ToAzureFirewallApplicationRuleProtocolResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolResponseOutput {
	return o
}

// Port number for the protocol, cannot be greater than 64000. This field is optional.
func (o AzureFirewallApplicationRuleProtocolResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleProtocolResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol type.
func (o AzureFirewallApplicationRuleProtocolResponseOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleProtocolResponse) *string { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

type AzureFirewallApplicationRuleProtocolResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleProtocolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleProtocolResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleProtocolResponseArrayOutput) ToAzureFirewallApplicationRuleProtocolResponseArrayOutput() AzureFirewallApplicationRuleProtocolResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolResponseArrayOutput) ToAzureFirewallApplicationRuleProtocolResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleProtocolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleProtocolResponse {
		return vs[0].([]AzureFirewallApplicationRuleProtocolResponse)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleProtocolResponseOutput)
}

// Properties of an application rule.
type AzureFirewallApplicationRuleResponse struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of FQDN Tags for this rule.
	FqdnTags []string `pulumi:"fqdnTags"`
	// Name of the application rule.
	Name *string `pulumi:"name"`
	// Array of ApplicationRuleProtocols.
	Protocols []AzureFirewallApplicationRuleProtocolResponse `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule.
	TargetFqdns []string `pulumi:"targetFqdns"`
}

// AzureFirewallApplicationRuleResponseInput is an input type that accepts AzureFirewallApplicationRuleResponseArgs and AzureFirewallApplicationRuleResponseOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleResponseInput` via:
//
//          AzureFirewallApplicationRuleResponseArgs{...}
type AzureFirewallApplicationRuleResponseInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleResponseOutput() AzureFirewallApplicationRuleResponseOutput
	ToAzureFirewallApplicationRuleResponseOutputWithContext(context.Context) AzureFirewallApplicationRuleResponseOutput
}

// Properties of an application rule.
type AzureFirewallApplicationRuleResponseArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of FQDN Tags for this rule.
	FqdnTags pulumi.StringArrayInput `pulumi:"fqdnTags"`
	// Name of the application rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of ApplicationRuleProtocols.
	Protocols AzureFirewallApplicationRuleProtocolResponseArrayInput `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
	// List of FQDNs for this rule.
	TargetFqdns pulumi.StringArrayInput `pulumi:"targetFqdns"`
}

func (AzureFirewallApplicationRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleResponse)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleResponseArgs) ToAzureFirewallApplicationRuleResponseOutput() AzureFirewallApplicationRuleResponseOutput {
	return i.ToAzureFirewallApplicationRuleResponseOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleResponseArgs) ToAzureFirewallApplicationRuleResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleResponseOutput)
}

// AzureFirewallApplicationRuleResponseArrayInput is an input type that accepts AzureFirewallApplicationRuleResponseArray and AzureFirewallApplicationRuleResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleResponseArrayInput` via:
//
//          AzureFirewallApplicationRuleResponseArray{ AzureFirewallApplicationRuleResponseArgs{...} }
type AzureFirewallApplicationRuleResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleResponseArrayOutput() AzureFirewallApplicationRuleResponseArrayOutput
	ToAzureFirewallApplicationRuleResponseArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleResponseArrayOutput
}

type AzureFirewallApplicationRuleResponseArray []AzureFirewallApplicationRuleResponseInput

func (AzureFirewallApplicationRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleResponse)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleResponseArray) ToAzureFirewallApplicationRuleResponseArrayOutput() AzureFirewallApplicationRuleResponseArrayOutput {
	return i.ToAzureFirewallApplicationRuleResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleResponseArray) ToAzureFirewallApplicationRuleResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleResponseArrayOutput)
}

// Properties of an application rule.
type AzureFirewallApplicationRuleResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleResponseOutput) ToAzureFirewallApplicationRuleResponseOutput() AzureFirewallApplicationRuleResponseOutput {
	return o
}

func (o AzureFirewallApplicationRuleResponseOutput) ToAzureFirewallApplicationRuleResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleResponseOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallApplicationRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of FQDN Tags for this rule.
func (o AzureFirewallApplicationRuleResponseOutput) FqdnTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) []string { return v.FqdnTags }).(pulumi.StringArrayOutput)
}

// Name of the application rule.
func (o AzureFirewallApplicationRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of ApplicationRuleProtocols.
func (o AzureFirewallApplicationRuleResponseOutput) Protocols() AzureFirewallApplicationRuleProtocolResponseArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) []AzureFirewallApplicationRuleProtocolResponse {
		return v.Protocols
	}).(AzureFirewallApplicationRuleProtocolResponseArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallApplicationRuleResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o AzureFirewallApplicationRuleResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// List of FQDNs for this rule.
func (o AzureFirewallApplicationRuleResponseOutput) TargetFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) []string { return v.TargetFqdns }).(pulumi.StringArrayOutput)
}

type AzureFirewallApplicationRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleResponseArrayOutput) ToAzureFirewallApplicationRuleResponseArrayOutput() AzureFirewallApplicationRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleResponseArrayOutput) ToAzureFirewallApplicationRuleResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleResponse {
		return vs[0].([]AzureFirewallApplicationRuleResponse)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleResponseOutput)
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
	PublicIPAddress *SubResource `pulumi:"publicIPAddress"`
	// Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
	Subnet *SubResource `pulumi:"subnet"`
}

// AzureFirewallIPConfigurationInput is an input type that accepts AzureFirewallIPConfigurationArgs and AzureFirewallIPConfigurationOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationInput` via:
//
//          AzureFirewallIPConfigurationArgs{...}
type AzureFirewallIPConfigurationInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationOutput() AzureFirewallIPConfigurationOutput
	ToAzureFirewallIPConfigurationOutputWithContext(context.Context) AzureFirewallIPConfigurationOutput
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
	PublicIPAddress SubResourcePtrInput `pulumi:"publicIPAddress"`
	// Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (AzureFirewallIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIPConfiguration)(nil)).Elem()
}

func (i AzureFirewallIPConfigurationArgs) ToAzureFirewallIPConfigurationOutput() AzureFirewallIPConfigurationOutput {
	return i.ToAzureFirewallIPConfigurationOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationArgs) ToAzureFirewallIPConfigurationOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationOutput)
}

func (i AzureFirewallIPConfigurationArgs) ToAzureFirewallIPConfigurationPtrOutput() AzureFirewallIPConfigurationPtrOutput {
	return i.ToAzureFirewallIPConfigurationPtrOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationArgs) ToAzureFirewallIPConfigurationPtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationOutput).ToAzureFirewallIPConfigurationPtrOutputWithContext(ctx)
}

// AzureFirewallIPConfigurationPtrInput is an input type that accepts AzureFirewallIPConfigurationArgs, AzureFirewallIPConfigurationPtr and AzureFirewallIPConfigurationPtrOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationPtrInput` via:
//
//          AzureFirewallIPConfigurationArgs{...}
//
//  or:
//
//          nil
type AzureFirewallIPConfigurationPtrInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationPtrOutput() AzureFirewallIPConfigurationPtrOutput
	ToAzureFirewallIPConfigurationPtrOutputWithContext(context.Context) AzureFirewallIPConfigurationPtrOutput
}

type azureFirewallIPConfigurationPtrType AzureFirewallIPConfigurationArgs

func AzureFirewallIPConfigurationPtr(v *AzureFirewallIPConfigurationArgs) AzureFirewallIPConfigurationPtrInput {
	return (*azureFirewallIPConfigurationPtrType)(v)
}

func (*azureFirewallIPConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallIPConfiguration)(nil)).Elem()
}

func (i *azureFirewallIPConfigurationPtrType) ToAzureFirewallIPConfigurationPtrOutput() AzureFirewallIPConfigurationPtrOutput {
	return i.ToAzureFirewallIPConfigurationPtrOutputWithContext(context.Background())
}

func (i *azureFirewallIPConfigurationPtrType) ToAzureFirewallIPConfigurationPtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationPtrOutput)
}

// AzureFirewallIPConfigurationArrayInput is an input type that accepts AzureFirewallIPConfigurationArray and AzureFirewallIPConfigurationArrayOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationArrayInput` via:
//
//          AzureFirewallIPConfigurationArray{ AzureFirewallIPConfigurationArgs{...} }
type AzureFirewallIPConfigurationArrayInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationArrayOutput() AzureFirewallIPConfigurationArrayOutput
	ToAzureFirewallIPConfigurationArrayOutputWithContext(context.Context) AzureFirewallIPConfigurationArrayOutput
}

type AzureFirewallIPConfigurationArray []AzureFirewallIPConfigurationInput

func (AzureFirewallIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallIPConfiguration)(nil)).Elem()
}

func (i AzureFirewallIPConfigurationArray) ToAzureFirewallIPConfigurationArrayOutput() AzureFirewallIPConfigurationArrayOutput {
	return i.ToAzureFirewallIPConfigurationArrayOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationArray) ToAzureFirewallIPConfigurationArrayOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationArrayOutput)
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIPConfiguration)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationOutput) ToAzureFirewallIPConfigurationOutput() AzureFirewallIPConfigurationOutput {
	return o
}

func (o AzureFirewallIPConfigurationOutput) ToAzureFirewallIPConfigurationOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationOutput {
	return o
}

func (o AzureFirewallIPConfigurationOutput) ToAzureFirewallIPConfigurationPtrOutput() AzureFirewallIPConfigurationPtrOutput {
	return o.ToAzureFirewallIPConfigurationPtrOutputWithContext(context.Background())
}

func (o AzureFirewallIPConfigurationOutput) ToAzureFirewallIPConfigurationPtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfiguration) *AzureFirewallIPConfiguration {
		return &v
	}).(AzureFirewallIPConfigurationPtrOutput)
}

// Resource ID.
func (o AzureFirewallIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
func (o AzureFirewallIPConfigurationOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfiguration) *SubResource { return v.PublicIPAddress }).(SubResourcePtrOutput)
}

// Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
func (o AzureFirewallIPConfigurationOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfiguration) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type AzureFirewallIPConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallIPConfiguration)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationPtrOutput) ToAzureFirewallIPConfigurationPtrOutput() AzureFirewallIPConfigurationPtrOutput {
	return o
}

func (o AzureFirewallIPConfigurationPtrOutput) ToAzureFirewallIPConfigurationPtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationPtrOutput {
	return o
}

func (o AzureFirewallIPConfigurationPtrOutput) Elem() AzureFirewallIPConfigurationOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfiguration) AzureFirewallIPConfiguration { return *v }).(AzureFirewallIPConfigurationOutput)
}

// Resource ID.
func (o AzureFirewallIPConfigurationPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallIPConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
func (o AzureFirewallIPConfigurationPtrOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfiguration) *SubResource {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(SubResourcePtrOutput)
}

// Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
func (o AzureFirewallIPConfigurationPtrOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfiguration) *SubResource {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubResourcePtrOutput)
}

type AzureFirewallIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallIPConfiguration)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationArrayOutput) ToAzureFirewallIPConfigurationArrayOutput() AzureFirewallIPConfigurationArrayOutput {
	return o
}

func (o AzureFirewallIPConfigurationArrayOutput) ToAzureFirewallIPConfigurationArrayOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationArrayOutput {
	return o
}

func (o AzureFirewallIPConfigurationArrayOutput) Index(i pulumi.IntInput) AzureFirewallIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallIPConfiguration {
		return vs[0].([]AzureFirewallIPConfiguration)[vs[1].(int)]
	}).(AzureFirewallIPConfigurationOutput)
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
	PrivateIPAddress string `pulumi:"privateIPAddress"`
	// The provisioning state of the Azure firewall IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
	PublicIPAddress *SubResourceResponse `pulumi:"publicIPAddress"`
	// Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
	Subnet *SubResourceResponse `pulumi:"subnet"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// AzureFirewallIPConfigurationResponseInput is an input type that accepts AzureFirewallIPConfigurationResponseArgs and AzureFirewallIPConfigurationResponseOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationResponseInput` via:
//
//          AzureFirewallIPConfigurationResponseArgs{...}
type AzureFirewallIPConfigurationResponseInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationResponseOutput() AzureFirewallIPConfigurationResponseOutput
	ToAzureFirewallIPConfigurationResponseOutputWithContext(context.Context) AzureFirewallIPConfigurationResponseOutput
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
	PrivateIPAddress pulumi.StringInput `pulumi:"privateIPAddress"`
	// The provisioning state of the Azure firewall IP configuration resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
	PublicIPAddress SubResourceResponsePtrInput `pulumi:"publicIPAddress"`
	// Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
	Subnet SubResourceResponsePtrInput `pulumi:"subnet"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (AzureFirewallIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIPConfigurationResponse)(nil)).Elem()
}

func (i AzureFirewallIPConfigurationResponseArgs) ToAzureFirewallIPConfigurationResponseOutput() AzureFirewallIPConfigurationResponseOutput {
	return i.ToAzureFirewallIPConfigurationResponseOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationResponseArgs) ToAzureFirewallIPConfigurationResponseOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationResponseOutput)
}

func (i AzureFirewallIPConfigurationResponseArgs) ToAzureFirewallIPConfigurationResponsePtrOutput() AzureFirewallIPConfigurationResponsePtrOutput {
	return i.ToAzureFirewallIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationResponseArgs) ToAzureFirewallIPConfigurationResponsePtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationResponseOutput).ToAzureFirewallIPConfigurationResponsePtrOutputWithContext(ctx)
}

// AzureFirewallIPConfigurationResponsePtrInput is an input type that accepts AzureFirewallIPConfigurationResponseArgs, AzureFirewallIPConfigurationResponsePtr and AzureFirewallIPConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationResponsePtrInput` via:
//
//          AzureFirewallIPConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type AzureFirewallIPConfigurationResponsePtrInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationResponsePtrOutput() AzureFirewallIPConfigurationResponsePtrOutput
	ToAzureFirewallIPConfigurationResponsePtrOutputWithContext(context.Context) AzureFirewallIPConfigurationResponsePtrOutput
}

type azureFirewallIPConfigurationResponsePtrType AzureFirewallIPConfigurationResponseArgs

func AzureFirewallIPConfigurationResponsePtr(v *AzureFirewallIPConfigurationResponseArgs) AzureFirewallIPConfigurationResponsePtrInput {
	return (*azureFirewallIPConfigurationResponsePtrType)(v)
}

func (*azureFirewallIPConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallIPConfigurationResponse)(nil)).Elem()
}

func (i *azureFirewallIPConfigurationResponsePtrType) ToAzureFirewallIPConfigurationResponsePtrOutput() AzureFirewallIPConfigurationResponsePtrOutput {
	return i.ToAzureFirewallIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *azureFirewallIPConfigurationResponsePtrType) ToAzureFirewallIPConfigurationResponsePtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationResponsePtrOutput)
}

// AzureFirewallIPConfigurationResponseArrayInput is an input type that accepts AzureFirewallIPConfigurationResponseArray and AzureFirewallIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationResponseArrayInput` via:
//
//          AzureFirewallIPConfigurationResponseArray{ AzureFirewallIPConfigurationResponseArgs{...} }
type AzureFirewallIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationResponseArrayOutput() AzureFirewallIPConfigurationResponseArrayOutput
	ToAzureFirewallIPConfigurationResponseArrayOutputWithContext(context.Context) AzureFirewallIPConfigurationResponseArrayOutput
}

type AzureFirewallIPConfigurationResponseArray []AzureFirewallIPConfigurationResponseInput

func (AzureFirewallIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallIPConfigurationResponse)(nil)).Elem()
}

func (i AzureFirewallIPConfigurationResponseArray) ToAzureFirewallIPConfigurationResponseArrayOutput() AzureFirewallIPConfigurationResponseArrayOutput {
	return i.ToAzureFirewallIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationResponseArray) ToAzureFirewallIPConfigurationResponseArrayOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationResponseArrayOutput)
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIPConfigurationResponse)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationResponseOutput) ToAzureFirewallIPConfigurationResponseOutput() AzureFirewallIPConfigurationResponseOutput {
	return o
}

func (o AzureFirewallIPConfigurationResponseOutput) ToAzureFirewallIPConfigurationResponseOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationResponseOutput {
	return o
}

func (o AzureFirewallIPConfigurationResponseOutput) ToAzureFirewallIPConfigurationResponsePtrOutput() AzureFirewallIPConfigurationResponsePtrOutput {
	return o.ToAzureFirewallIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o AzureFirewallIPConfigurationResponseOutput) ToAzureFirewallIPConfigurationResponsePtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) *AzureFirewallIPConfigurationResponse {
		return &v
	}).(AzureFirewallIPConfigurationResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o AzureFirewallIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o AzureFirewallIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
func (o AzureFirewallIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) string { return v.PrivateIPAddress }).(pulumi.StringOutput)
}

// The provisioning state of the Azure firewall IP configuration resource.
func (o AzureFirewallIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
func (o AzureFirewallIPConfigurationResponseOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) *SubResourceResponse { return v.PublicIPAddress }).(SubResourceResponsePtrOutput)
}

// Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
func (o AzureFirewallIPConfigurationResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

// Type of the resource.
func (o AzureFirewallIPConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type AzureFirewallIPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallIPConfigurationResponse)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationResponsePtrOutput) ToAzureFirewallIPConfigurationResponsePtrOutput() AzureFirewallIPConfigurationResponsePtrOutput {
	return o
}

func (o AzureFirewallIPConfigurationResponsePtrOutput) ToAzureFirewallIPConfigurationResponsePtrOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationResponsePtrOutput {
	return o
}

func (o AzureFirewallIPConfigurationResponsePtrOutput) Elem() AzureFirewallIPConfigurationResponseOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationResponse) AzureFirewallIPConfigurationResponse { return *v }).(AzureFirewallIPConfigurationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o AzureFirewallIPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o AzureFirewallIPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallIPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
func (o AzureFirewallIPConfigurationResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the Azure firewall IP configuration resource.
func (o AzureFirewallIPConfigurationResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Reference to the PublicIP resource. This field is a mandatory input if subnet is not null.
func (o AzureFirewallIPConfigurationResponsePtrOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(SubResourceResponsePtrOutput)
}

// Reference to the subnet resource. This resource must be named 'AzureFirewallSubnet' or 'AzureFirewallManagementSubnet'.
func (o AzureFirewallIPConfigurationResponsePtrOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubResourceResponsePtrOutput)
}

// Type of the resource.
func (o AzureFirewallIPConfigurationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AzureFirewallIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallIPConfigurationResponse)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationResponseArrayOutput) ToAzureFirewallIPConfigurationResponseArrayOutput() AzureFirewallIPConfigurationResponseArrayOutput {
	return o
}

func (o AzureFirewallIPConfigurationResponseArrayOutput) ToAzureFirewallIPConfigurationResponseArrayOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationResponseArrayOutput {
	return o
}

func (o AzureFirewallIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallIPConfigurationResponse {
		return vs[0].([]AzureFirewallIPConfigurationResponse)[vs[1].(int)]
	}).(AzureFirewallIPConfigurationResponseOutput)
}

// IpGroups associated with azure firewall.
type AzureFirewallIpGroupsResponse struct {
	// The iteration number.
	ChangeNumber string `pulumi:"changeNumber"`
	// Resource ID.
	Id string `pulumi:"id"`
}

// AzureFirewallIpGroupsResponseInput is an input type that accepts AzureFirewallIpGroupsResponseArgs and AzureFirewallIpGroupsResponseOutput values.
// You can construct a concrete instance of `AzureFirewallIpGroupsResponseInput` via:
//
//          AzureFirewallIpGroupsResponseArgs{...}
type AzureFirewallIpGroupsResponseInput interface {
	pulumi.Input

	ToAzureFirewallIpGroupsResponseOutput() AzureFirewallIpGroupsResponseOutput
	ToAzureFirewallIpGroupsResponseOutputWithContext(context.Context) AzureFirewallIpGroupsResponseOutput
}

// IpGroups associated with azure firewall.
type AzureFirewallIpGroupsResponseArgs struct {
	// The iteration number.
	ChangeNumber pulumi.StringInput `pulumi:"changeNumber"`
	// Resource ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (AzureFirewallIpGroupsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIpGroupsResponse)(nil)).Elem()
}

func (i AzureFirewallIpGroupsResponseArgs) ToAzureFirewallIpGroupsResponseOutput() AzureFirewallIpGroupsResponseOutput {
	return i.ToAzureFirewallIpGroupsResponseOutputWithContext(context.Background())
}

func (i AzureFirewallIpGroupsResponseArgs) ToAzureFirewallIpGroupsResponseOutputWithContext(ctx context.Context) AzureFirewallIpGroupsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIpGroupsResponseOutput)
}

// AzureFirewallIpGroupsResponseArrayInput is an input type that accepts AzureFirewallIpGroupsResponseArray and AzureFirewallIpGroupsResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallIpGroupsResponseArrayInput` via:
//
//          AzureFirewallIpGroupsResponseArray{ AzureFirewallIpGroupsResponseArgs{...} }
type AzureFirewallIpGroupsResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallIpGroupsResponseArrayOutput() AzureFirewallIpGroupsResponseArrayOutput
	ToAzureFirewallIpGroupsResponseArrayOutputWithContext(context.Context) AzureFirewallIpGroupsResponseArrayOutput
}

type AzureFirewallIpGroupsResponseArray []AzureFirewallIpGroupsResponseInput

func (AzureFirewallIpGroupsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallIpGroupsResponse)(nil)).Elem()
}

func (i AzureFirewallIpGroupsResponseArray) ToAzureFirewallIpGroupsResponseArrayOutput() AzureFirewallIpGroupsResponseArrayOutput {
	return i.ToAzureFirewallIpGroupsResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallIpGroupsResponseArray) ToAzureFirewallIpGroupsResponseArrayOutputWithContext(ctx context.Context) AzureFirewallIpGroupsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIpGroupsResponseArrayOutput)
}

// IpGroups associated with azure firewall.
type AzureFirewallIpGroupsResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallIpGroupsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIpGroupsResponse)(nil)).Elem()
}

func (o AzureFirewallIpGroupsResponseOutput) ToAzureFirewallIpGroupsResponseOutput() AzureFirewallIpGroupsResponseOutput {
	return o
}

func (o AzureFirewallIpGroupsResponseOutput) ToAzureFirewallIpGroupsResponseOutputWithContext(ctx context.Context) AzureFirewallIpGroupsResponseOutput {
	return o
}

// The iteration number.
func (o AzureFirewallIpGroupsResponseOutput) ChangeNumber() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallIpGroupsResponse) string { return v.ChangeNumber }).(pulumi.StringOutput)
}

// Resource ID.
func (o AzureFirewallIpGroupsResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallIpGroupsResponse) string { return v.Id }).(pulumi.StringOutput)
}

type AzureFirewallIpGroupsResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallIpGroupsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallIpGroupsResponse)(nil)).Elem()
}

func (o AzureFirewallIpGroupsResponseArrayOutput) ToAzureFirewallIpGroupsResponseArrayOutput() AzureFirewallIpGroupsResponseArrayOutput {
	return o
}

func (o AzureFirewallIpGroupsResponseArrayOutput) ToAzureFirewallIpGroupsResponseArrayOutputWithContext(ctx context.Context) AzureFirewallIpGroupsResponseArrayOutput {
	return o
}

func (o AzureFirewallIpGroupsResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallIpGroupsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallIpGroupsResponse {
		return vs[0].([]AzureFirewallIpGroupsResponse)[vs[1].(int)]
	}).(AzureFirewallIpGroupsResponseOutput)
}

// AzureFirewall NAT Rule Collection Action.
type AzureFirewallNatRCAction struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// AzureFirewallNatRCActionInput is an input type that accepts AzureFirewallNatRCActionArgs and AzureFirewallNatRCActionOutput values.
// You can construct a concrete instance of `AzureFirewallNatRCActionInput` via:
//
//          AzureFirewallNatRCActionArgs{...}
type AzureFirewallNatRCActionInput interface {
	pulumi.Input

	ToAzureFirewallNatRCActionOutput() AzureFirewallNatRCActionOutput
	ToAzureFirewallNatRCActionOutputWithContext(context.Context) AzureFirewallNatRCActionOutput
}

// AzureFirewall NAT Rule Collection Action.
type AzureFirewallNatRCActionArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AzureFirewallNatRCActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRCAction)(nil)).Elem()
}

func (i AzureFirewallNatRCActionArgs) ToAzureFirewallNatRCActionOutput() AzureFirewallNatRCActionOutput {
	return i.ToAzureFirewallNatRCActionOutputWithContext(context.Background())
}

func (i AzureFirewallNatRCActionArgs) ToAzureFirewallNatRCActionOutputWithContext(ctx context.Context) AzureFirewallNatRCActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRCActionOutput)
}

func (i AzureFirewallNatRCActionArgs) ToAzureFirewallNatRCActionPtrOutput() AzureFirewallNatRCActionPtrOutput {
	return i.ToAzureFirewallNatRCActionPtrOutputWithContext(context.Background())
}

func (i AzureFirewallNatRCActionArgs) ToAzureFirewallNatRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRCActionOutput).ToAzureFirewallNatRCActionPtrOutputWithContext(ctx)
}

// AzureFirewallNatRCActionPtrInput is an input type that accepts AzureFirewallNatRCActionArgs, AzureFirewallNatRCActionPtr and AzureFirewallNatRCActionPtrOutput values.
// You can construct a concrete instance of `AzureFirewallNatRCActionPtrInput` via:
//
//          AzureFirewallNatRCActionArgs{...}
//
//  or:
//
//          nil
type AzureFirewallNatRCActionPtrInput interface {
	pulumi.Input

	ToAzureFirewallNatRCActionPtrOutput() AzureFirewallNatRCActionPtrOutput
	ToAzureFirewallNatRCActionPtrOutputWithContext(context.Context) AzureFirewallNatRCActionPtrOutput
}

type azureFirewallNatRCActionPtrType AzureFirewallNatRCActionArgs

func AzureFirewallNatRCActionPtr(v *AzureFirewallNatRCActionArgs) AzureFirewallNatRCActionPtrInput {
	return (*azureFirewallNatRCActionPtrType)(v)
}

func (*azureFirewallNatRCActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallNatRCAction)(nil)).Elem()
}

func (i *azureFirewallNatRCActionPtrType) ToAzureFirewallNatRCActionPtrOutput() AzureFirewallNatRCActionPtrOutput {
	return i.ToAzureFirewallNatRCActionPtrOutputWithContext(context.Background())
}

func (i *azureFirewallNatRCActionPtrType) ToAzureFirewallNatRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRCActionPtrOutput)
}

// AzureFirewall NAT Rule Collection Action.
type AzureFirewallNatRCActionOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRCActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRCAction)(nil)).Elem()
}

func (o AzureFirewallNatRCActionOutput) ToAzureFirewallNatRCActionOutput() AzureFirewallNatRCActionOutput {
	return o
}

func (o AzureFirewallNatRCActionOutput) ToAzureFirewallNatRCActionOutputWithContext(ctx context.Context) AzureFirewallNatRCActionOutput {
	return o
}

func (o AzureFirewallNatRCActionOutput) ToAzureFirewallNatRCActionPtrOutput() AzureFirewallNatRCActionPtrOutput {
	return o.ToAzureFirewallNatRCActionPtrOutputWithContext(context.Background())
}

func (o AzureFirewallNatRCActionOutput) ToAzureFirewallNatRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRCAction) *AzureFirewallNatRCAction {
		return &v
	}).(AzureFirewallNatRCActionPtrOutput)
}

// The type of action.
func (o AzureFirewallNatRCActionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRCAction) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AzureFirewallNatRCActionPtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRCActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallNatRCAction)(nil)).Elem()
}

func (o AzureFirewallNatRCActionPtrOutput) ToAzureFirewallNatRCActionPtrOutput() AzureFirewallNatRCActionPtrOutput {
	return o
}

func (o AzureFirewallNatRCActionPtrOutput) ToAzureFirewallNatRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionPtrOutput {
	return o
}

func (o AzureFirewallNatRCActionPtrOutput) Elem() AzureFirewallNatRCActionOutput {
	return o.ApplyT(func(v *AzureFirewallNatRCAction) AzureFirewallNatRCAction { return *v }).(AzureFirewallNatRCActionOutput)
}

// The type of action.
func (o AzureFirewallNatRCActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallNatRCAction) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// AzureFirewall NAT Rule Collection Action.
type AzureFirewallNatRCActionResponse struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// AzureFirewallNatRCActionResponseInput is an input type that accepts AzureFirewallNatRCActionResponseArgs and AzureFirewallNatRCActionResponseOutput values.
// You can construct a concrete instance of `AzureFirewallNatRCActionResponseInput` via:
//
//          AzureFirewallNatRCActionResponseArgs{...}
type AzureFirewallNatRCActionResponseInput interface {
	pulumi.Input

	ToAzureFirewallNatRCActionResponseOutput() AzureFirewallNatRCActionResponseOutput
	ToAzureFirewallNatRCActionResponseOutputWithContext(context.Context) AzureFirewallNatRCActionResponseOutput
}

// AzureFirewall NAT Rule Collection Action.
type AzureFirewallNatRCActionResponseArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AzureFirewallNatRCActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRCActionResponse)(nil)).Elem()
}

func (i AzureFirewallNatRCActionResponseArgs) ToAzureFirewallNatRCActionResponseOutput() AzureFirewallNatRCActionResponseOutput {
	return i.ToAzureFirewallNatRCActionResponseOutputWithContext(context.Background())
}

func (i AzureFirewallNatRCActionResponseArgs) ToAzureFirewallNatRCActionResponseOutputWithContext(ctx context.Context) AzureFirewallNatRCActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRCActionResponseOutput)
}

func (i AzureFirewallNatRCActionResponseArgs) ToAzureFirewallNatRCActionResponsePtrOutput() AzureFirewallNatRCActionResponsePtrOutput {
	return i.ToAzureFirewallNatRCActionResponsePtrOutputWithContext(context.Background())
}

func (i AzureFirewallNatRCActionResponseArgs) ToAzureFirewallNatRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRCActionResponseOutput).ToAzureFirewallNatRCActionResponsePtrOutputWithContext(ctx)
}

// AzureFirewallNatRCActionResponsePtrInput is an input type that accepts AzureFirewallNatRCActionResponseArgs, AzureFirewallNatRCActionResponsePtr and AzureFirewallNatRCActionResponsePtrOutput values.
// You can construct a concrete instance of `AzureFirewallNatRCActionResponsePtrInput` via:
//
//          AzureFirewallNatRCActionResponseArgs{...}
//
//  or:
//
//          nil
type AzureFirewallNatRCActionResponsePtrInput interface {
	pulumi.Input

	ToAzureFirewallNatRCActionResponsePtrOutput() AzureFirewallNatRCActionResponsePtrOutput
	ToAzureFirewallNatRCActionResponsePtrOutputWithContext(context.Context) AzureFirewallNatRCActionResponsePtrOutput
}

type azureFirewallNatRCActionResponsePtrType AzureFirewallNatRCActionResponseArgs

func AzureFirewallNatRCActionResponsePtr(v *AzureFirewallNatRCActionResponseArgs) AzureFirewallNatRCActionResponsePtrInput {
	return (*azureFirewallNatRCActionResponsePtrType)(v)
}

func (*azureFirewallNatRCActionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallNatRCActionResponse)(nil)).Elem()
}

func (i *azureFirewallNatRCActionResponsePtrType) ToAzureFirewallNatRCActionResponsePtrOutput() AzureFirewallNatRCActionResponsePtrOutput {
	return i.ToAzureFirewallNatRCActionResponsePtrOutputWithContext(context.Background())
}

func (i *azureFirewallNatRCActionResponsePtrType) ToAzureFirewallNatRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRCActionResponsePtrOutput)
}

// AzureFirewall NAT Rule Collection Action.
type AzureFirewallNatRCActionResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRCActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRCActionResponse)(nil)).Elem()
}

func (o AzureFirewallNatRCActionResponseOutput) ToAzureFirewallNatRCActionResponseOutput() AzureFirewallNatRCActionResponseOutput {
	return o
}

func (o AzureFirewallNatRCActionResponseOutput) ToAzureFirewallNatRCActionResponseOutputWithContext(ctx context.Context) AzureFirewallNatRCActionResponseOutput {
	return o
}

func (o AzureFirewallNatRCActionResponseOutput) ToAzureFirewallNatRCActionResponsePtrOutput() AzureFirewallNatRCActionResponsePtrOutput {
	return o.ToAzureFirewallNatRCActionResponsePtrOutputWithContext(context.Background())
}

func (o AzureFirewallNatRCActionResponseOutput) ToAzureFirewallNatRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRCActionResponse) *AzureFirewallNatRCActionResponse {
		return &v
	}).(AzureFirewallNatRCActionResponsePtrOutput)
}

// The type of action.
func (o AzureFirewallNatRCActionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRCActionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AzureFirewallNatRCActionResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRCActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallNatRCActionResponse)(nil)).Elem()
}

func (o AzureFirewallNatRCActionResponsePtrOutput) ToAzureFirewallNatRCActionResponsePtrOutput() AzureFirewallNatRCActionResponsePtrOutput {
	return o
}

func (o AzureFirewallNatRCActionResponsePtrOutput) ToAzureFirewallNatRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallNatRCActionResponsePtrOutput {
	return o
}

func (o AzureFirewallNatRCActionResponsePtrOutput) Elem() AzureFirewallNatRCActionResponseOutput {
	return o.ApplyT(func(v *AzureFirewallNatRCActionResponse) AzureFirewallNatRCActionResponse { return *v }).(AzureFirewallNatRCActionResponseOutput)
}

// The type of action.
func (o AzureFirewallNatRCActionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallNatRCActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of a NAT rule.
type AzureFirewallNatRule struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Name of the NAT rule.
	Name *string `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
	Protocols []string `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// The translated address for this NAT rule.
	TranslatedAddress *string `pulumi:"translatedAddress"`
	// The translated FQDN for this NAT rule.
	TranslatedFqdn *string `pulumi:"translatedFqdn"`
	// The translated port for this NAT rule.
	TranslatedPort *string `pulumi:"translatedPort"`
}

// AzureFirewallNatRuleInput is an input type that accepts AzureFirewallNatRuleArgs and AzureFirewallNatRuleOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleInput` via:
//
//          AzureFirewallNatRuleArgs{...}
type AzureFirewallNatRuleInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleOutput() AzureFirewallNatRuleOutput
	ToAzureFirewallNatRuleOutputWithContext(context.Context) AzureFirewallNatRuleOutput
}

// Properties of a NAT rule.
type AzureFirewallNatRuleArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Name of the NAT rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
	// The translated address for this NAT rule.
	TranslatedAddress pulumi.StringPtrInput `pulumi:"translatedAddress"`
	// The translated FQDN for this NAT rule.
	TranslatedFqdn pulumi.StringPtrInput `pulumi:"translatedFqdn"`
	// The translated port for this NAT rule.
	TranslatedPort pulumi.StringPtrInput `pulumi:"translatedPort"`
}

func (AzureFirewallNatRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRule)(nil)).Elem()
}

func (i AzureFirewallNatRuleArgs) ToAzureFirewallNatRuleOutput() AzureFirewallNatRuleOutput {
	return i.ToAzureFirewallNatRuleOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleArgs) ToAzureFirewallNatRuleOutputWithContext(ctx context.Context) AzureFirewallNatRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleOutput)
}

// AzureFirewallNatRuleArrayInput is an input type that accepts AzureFirewallNatRuleArray and AzureFirewallNatRuleArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleArrayInput` via:
//
//          AzureFirewallNatRuleArray{ AzureFirewallNatRuleArgs{...} }
type AzureFirewallNatRuleArrayInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleArrayOutput() AzureFirewallNatRuleArrayOutput
	ToAzureFirewallNatRuleArrayOutputWithContext(context.Context) AzureFirewallNatRuleArrayOutput
}

type AzureFirewallNatRuleArray []AzureFirewallNatRuleInput

func (AzureFirewallNatRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRule)(nil)).Elem()
}

func (i AzureFirewallNatRuleArray) ToAzureFirewallNatRuleArrayOutput() AzureFirewallNatRuleArrayOutput {
	return i.ToAzureFirewallNatRuleArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleArray) ToAzureFirewallNatRuleArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleArrayOutput)
}

// Properties of a NAT rule.
type AzureFirewallNatRuleOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRule)(nil)).Elem()
}

func (o AzureFirewallNatRuleOutput) ToAzureFirewallNatRuleOutput() AzureFirewallNatRuleOutput {
	return o
}

func (o AzureFirewallNatRuleOutput) ToAzureFirewallNatRuleOutputWithContext(ctx context.Context) AzureFirewallNatRuleOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallNatRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.
func (o AzureFirewallNatRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o AzureFirewallNatRuleOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Name of the NAT rule.
func (o AzureFirewallNatRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
func (o AzureFirewallNatRuleOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallNatRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o AzureFirewallNatRuleOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// The translated address for this NAT rule.
func (o AzureFirewallNatRuleOutput) TranslatedAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) *string { return v.TranslatedAddress }).(pulumi.StringPtrOutput)
}

// The translated FQDN for this NAT rule.
func (o AzureFirewallNatRuleOutput) TranslatedFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) *string { return v.TranslatedFqdn }).(pulumi.StringPtrOutput)
}

// The translated port for this NAT rule.
func (o AzureFirewallNatRuleOutput) TranslatedPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRule) *string { return v.TranslatedPort }).(pulumi.StringPtrOutput)
}

type AzureFirewallNatRuleArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRule)(nil)).Elem()
}

func (o AzureFirewallNatRuleArrayOutput) ToAzureFirewallNatRuleArrayOutput() AzureFirewallNatRuleArrayOutput {
	return o
}

func (o AzureFirewallNatRuleArrayOutput) ToAzureFirewallNatRuleArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleArrayOutput {
	return o
}

func (o AzureFirewallNatRuleArrayOutput) Index(i pulumi.IntInput) AzureFirewallNatRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNatRule {
		return vs[0].([]AzureFirewallNatRule)[vs[1].(int)]
	}).(AzureFirewallNatRuleOutput)
}

// NAT rule collection resource.
type AzureFirewallNatRuleCollection struct {
	// The action type of a NAT rule collection.
	Action *AzureFirewallNatRCAction `pulumi:"action"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the NAT rule collection resource.
	Priority *int `pulumi:"priority"`
	// Collection of rules used by a NAT rule collection.
	Rules []AzureFirewallNatRule `pulumi:"rules"`
}

// AzureFirewallNatRuleCollectionInput is an input type that accepts AzureFirewallNatRuleCollectionArgs and AzureFirewallNatRuleCollectionOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleCollectionInput` via:
//
//          AzureFirewallNatRuleCollectionArgs{...}
type AzureFirewallNatRuleCollectionInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleCollectionOutput() AzureFirewallNatRuleCollectionOutput
	ToAzureFirewallNatRuleCollectionOutputWithContext(context.Context) AzureFirewallNatRuleCollectionOutput
}

// NAT rule collection resource.
type AzureFirewallNatRuleCollectionArgs struct {
	// The action type of a NAT rule collection.
	Action AzureFirewallNatRCActionPtrInput `pulumi:"action"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the NAT rule collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Collection of rules used by a NAT rule collection.
	Rules AzureFirewallNatRuleArrayInput `pulumi:"rules"`
}

func (AzureFirewallNatRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleCollection)(nil)).Elem()
}

func (i AzureFirewallNatRuleCollectionArgs) ToAzureFirewallNatRuleCollectionOutput() AzureFirewallNatRuleCollectionOutput {
	return i.ToAzureFirewallNatRuleCollectionOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleCollectionArgs) ToAzureFirewallNatRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleCollectionOutput)
}

// AzureFirewallNatRuleCollectionArrayInput is an input type that accepts AzureFirewallNatRuleCollectionArray and AzureFirewallNatRuleCollectionArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleCollectionArrayInput` via:
//
//          AzureFirewallNatRuleCollectionArray{ AzureFirewallNatRuleCollectionArgs{...} }
type AzureFirewallNatRuleCollectionArrayInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleCollectionArrayOutput() AzureFirewallNatRuleCollectionArrayOutput
	ToAzureFirewallNatRuleCollectionArrayOutputWithContext(context.Context) AzureFirewallNatRuleCollectionArrayOutput
}

type AzureFirewallNatRuleCollectionArray []AzureFirewallNatRuleCollectionInput

func (AzureFirewallNatRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRuleCollection)(nil)).Elem()
}

func (i AzureFirewallNatRuleCollectionArray) ToAzureFirewallNatRuleCollectionArrayOutput() AzureFirewallNatRuleCollectionArrayOutput {
	return i.ToAzureFirewallNatRuleCollectionArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleCollectionArray) ToAzureFirewallNatRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleCollectionArrayOutput)
}

// NAT rule collection resource.
type AzureFirewallNatRuleCollectionOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleCollection)(nil)).Elem()
}

func (o AzureFirewallNatRuleCollectionOutput) ToAzureFirewallNatRuleCollectionOutput() AzureFirewallNatRuleCollectionOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionOutput) ToAzureFirewallNatRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionOutput {
	return o
}

// The action type of a NAT rule collection.
func (o AzureFirewallNatRuleCollectionOutput) Action() AzureFirewallNatRCActionPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollection) *AzureFirewallNatRCAction { return v.Action }).(AzureFirewallNatRCActionPtrOutput)
}

// Resource ID.
func (o AzureFirewallNatRuleCollectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
func (o AzureFirewallNatRuleCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the NAT rule collection resource.
func (o AzureFirewallNatRuleCollectionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollection) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Collection of rules used by a NAT rule collection.
func (o AzureFirewallNatRuleCollectionOutput) Rules() AzureFirewallNatRuleArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollection) []AzureFirewallNatRule { return v.Rules }).(AzureFirewallNatRuleArrayOutput)
}

type AzureFirewallNatRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRuleCollection)(nil)).Elem()
}

func (o AzureFirewallNatRuleCollectionArrayOutput) ToAzureFirewallNatRuleCollectionArrayOutput() AzureFirewallNatRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionArrayOutput) ToAzureFirewallNatRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionArrayOutput) Index(i pulumi.IntInput) AzureFirewallNatRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNatRuleCollection {
		return vs[0].([]AzureFirewallNatRuleCollection)[vs[1].(int)]
	}).(AzureFirewallNatRuleCollectionOutput)
}

// NAT rule collection resource.
type AzureFirewallNatRuleCollectionResponse struct {
	// The action type of a NAT rule collection.
	Action *AzureFirewallNatRCActionResponse `pulumi:"action"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the NAT rule collection resource.
	Priority *int `pulumi:"priority"`
	// The provisioning state of the NAT rule collection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Collection of rules used by a NAT rule collection.
	Rules []AzureFirewallNatRuleResponse `pulumi:"rules"`
}

// AzureFirewallNatRuleCollectionResponseInput is an input type that accepts AzureFirewallNatRuleCollectionResponseArgs and AzureFirewallNatRuleCollectionResponseOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleCollectionResponseInput` via:
//
//          AzureFirewallNatRuleCollectionResponseArgs{...}
type AzureFirewallNatRuleCollectionResponseInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleCollectionResponseOutput() AzureFirewallNatRuleCollectionResponseOutput
	ToAzureFirewallNatRuleCollectionResponseOutputWithContext(context.Context) AzureFirewallNatRuleCollectionResponseOutput
}

// NAT rule collection resource.
type AzureFirewallNatRuleCollectionResponseArgs struct {
	// The action type of a NAT rule collection.
	Action AzureFirewallNatRCActionResponsePtrInput `pulumi:"action"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the NAT rule collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The provisioning state of the NAT rule collection resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Collection of rules used by a NAT rule collection.
	Rules AzureFirewallNatRuleResponseArrayInput `pulumi:"rules"`
}

func (AzureFirewallNatRuleCollectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleCollectionResponse)(nil)).Elem()
}

func (i AzureFirewallNatRuleCollectionResponseArgs) ToAzureFirewallNatRuleCollectionResponseOutput() AzureFirewallNatRuleCollectionResponseOutput {
	return i.ToAzureFirewallNatRuleCollectionResponseOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleCollectionResponseArgs) ToAzureFirewallNatRuleCollectionResponseOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleCollectionResponseOutput)
}

// AzureFirewallNatRuleCollectionResponseArrayInput is an input type that accepts AzureFirewallNatRuleCollectionResponseArray and AzureFirewallNatRuleCollectionResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleCollectionResponseArrayInput` via:
//
//          AzureFirewallNatRuleCollectionResponseArray{ AzureFirewallNatRuleCollectionResponseArgs{...} }
type AzureFirewallNatRuleCollectionResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleCollectionResponseArrayOutput() AzureFirewallNatRuleCollectionResponseArrayOutput
	ToAzureFirewallNatRuleCollectionResponseArrayOutputWithContext(context.Context) AzureFirewallNatRuleCollectionResponseArrayOutput
}

type AzureFirewallNatRuleCollectionResponseArray []AzureFirewallNatRuleCollectionResponseInput

func (AzureFirewallNatRuleCollectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRuleCollectionResponse)(nil)).Elem()
}

func (i AzureFirewallNatRuleCollectionResponseArray) ToAzureFirewallNatRuleCollectionResponseArrayOutput() AzureFirewallNatRuleCollectionResponseArrayOutput {
	return i.ToAzureFirewallNatRuleCollectionResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleCollectionResponseArray) ToAzureFirewallNatRuleCollectionResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleCollectionResponseArrayOutput)
}

// NAT rule collection resource.
type AzureFirewallNatRuleCollectionResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleCollectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallNatRuleCollectionResponseOutput) ToAzureFirewallNatRuleCollectionResponseOutput() AzureFirewallNatRuleCollectionResponseOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionResponseOutput) ToAzureFirewallNatRuleCollectionResponseOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionResponseOutput {
	return o
}

// The action type of a NAT rule collection.
func (o AzureFirewallNatRuleCollectionResponseOutput) Action() AzureFirewallNatRCActionResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionResponse) *AzureFirewallNatRCActionResponse { return v.Action }).(AzureFirewallNatRCActionResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o AzureFirewallNatRuleCollectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o AzureFirewallNatRuleCollectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
func (o AzureFirewallNatRuleCollectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the NAT rule collection resource.
func (o AzureFirewallNatRuleCollectionResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The provisioning state of the NAT rule collection resource.
func (o AzureFirewallNatRuleCollectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Collection of rules used by a NAT rule collection.
func (o AzureFirewallNatRuleCollectionResponseOutput) Rules() AzureFirewallNatRuleResponseArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleCollectionResponse) []AzureFirewallNatRuleResponse { return v.Rules }).(AzureFirewallNatRuleResponseArrayOutput)
}

type AzureFirewallNatRuleCollectionResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleCollectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallNatRuleCollectionResponseArrayOutput) ToAzureFirewallNatRuleCollectionResponseArrayOutput() AzureFirewallNatRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionResponseArrayOutput) ToAzureFirewallNatRuleCollectionResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallNatRuleCollectionResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallNatRuleCollectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNatRuleCollectionResponse {
		return vs[0].([]AzureFirewallNatRuleCollectionResponse)[vs[1].(int)]
	}).(AzureFirewallNatRuleCollectionResponseOutput)
}

// Properties of a NAT rule.
type AzureFirewallNatRuleResponse struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Name of the NAT rule.
	Name *string `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
	Protocols []string `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// The translated address for this NAT rule.
	TranslatedAddress *string `pulumi:"translatedAddress"`
	// The translated FQDN for this NAT rule.
	TranslatedFqdn *string `pulumi:"translatedFqdn"`
	// The translated port for this NAT rule.
	TranslatedPort *string `pulumi:"translatedPort"`
}

// AzureFirewallNatRuleResponseInput is an input type that accepts AzureFirewallNatRuleResponseArgs and AzureFirewallNatRuleResponseOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleResponseInput` via:
//
//          AzureFirewallNatRuleResponseArgs{...}
type AzureFirewallNatRuleResponseInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleResponseOutput() AzureFirewallNatRuleResponseOutput
	ToAzureFirewallNatRuleResponseOutputWithContext(context.Context) AzureFirewallNatRuleResponseOutput
}

// Properties of a NAT rule.
type AzureFirewallNatRuleResponseArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Name of the NAT rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
	// The translated address for this NAT rule.
	TranslatedAddress pulumi.StringPtrInput `pulumi:"translatedAddress"`
	// The translated FQDN for this NAT rule.
	TranslatedFqdn pulumi.StringPtrInput `pulumi:"translatedFqdn"`
	// The translated port for this NAT rule.
	TranslatedPort pulumi.StringPtrInput `pulumi:"translatedPort"`
}

func (AzureFirewallNatRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleResponse)(nil)).Elem()
}

func (i AzureFirewallNatRuleResponseArgs) ToAzureFirewallNatRuleResponseOutput() AzureFirewallNatRuleResponseOutput {
	return i.ToAzureFirewallNatRuleResponseOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleResponseArgs) ToAzureFirewallNatRuleResponseOutputWithContext(ctx context.Context) AzureFirewallNatRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleResponseOutput)
}

// AzureFirewallNatRuleResponseArrayInput is an input type that accepts AzureFirewallNatRuleResponseArray and AzureFirewallNatRuleResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNatRuleResponseArrayInput` via:
//
//          AzureFirewallNatRuleResponseArray{ AzureFirewallNatRuleResponseArgs{...} }
type AzureFirewallNatRuleResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallNatRuleResponseArrayOutput() AzureFirewallNatRuleResponseArrayOutput
	ToAzureFirewallNatRuleResponseArrayOutputWithContext(context.Context) AzureFirewallNatRuleResponseArrayOutput
}

type AzureFirewallNatRuleResponseArray []AzureFirewallNatRuleResponseInput

func (AzureFirewallNatRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRuleResponse)(nil)).Elem()
}

func (i AzureFirewallNatRuleResponseArray) ToAzureFirewallNatRuleResponseArrayOutput() AzureFirewallNatRuleResponseArrayOutput {
	return i.ToAzureFirewallNatRuleResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNatRuleResponseArray) ToAzureFirewallNatRuleResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNatRuleResponseArrayOutput)
}

// Properties of a NAT rule.
type AzureFirewallNatRuleResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNatRuleResponse)(nil)).Elem()
}

func (o AzureFirewallNatRuleResponseOutput) ToAzureFirewallNatRuleResponseOutput() AzureFirewallNatRuleResponseOutput {
	return o
}

func (o AzureFirewallNatRuleResponseOutput) ToAzureFirewallNatRuleResponseOutputWithContext(ctx context.Context) AzureFirewallNatRuleResponseOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallNatRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses for this rule. Supports IP ranges, prefixes, and service tags.
func (o AzureFirewallNatRuleResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o AzureFirewallNatRuleResponseOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Name of the NAT rule.
func (o AzureFirewallNatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of AzureFirewallNetworkRuleProtocols applicable to this NAT rule.
func (o AzureFirewallNatRuleResponseOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallNatRuleResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o AzureFirewallNatRuleResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// The translated address for this NAT rule.
func (o AzureFirewallNatRuleResponseOutput) TranslatedAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) *string { return v.TranslatedAddress }).(pulumi.StringPtrOutput)
}

// The translated FQDN for this NAT rule.
func (o AzureFirewallNatRuleResponseOutput) TranslatedFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) *string { return v.TranslatedFqdn }).(pulumi.StringPtrOutput)
}

// The translated port for this NAT rule.
func (o AzureFirewallNatRuleResponseOutput) TranslatedPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNatRuleResponse) *string { return v.TranslatedPort }).(pulumi.StringPtrOutput)
}

type AzureFirewallNatRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNatRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNatRuleResponse)(nil)).Elem()
}

func (o AzureFirewallNatRuleResponseArrayOutput) ToAzureFirewallNatRuleResponseArrayOutput() AzureFirewallNatRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallNatRuleResponseArrayOutput) ToAzureFirewallNatRuleResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNatRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallNatRuleResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallNatRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNatRuleResponse {
		return vs[0].([]AzureFirewallNatRuleResponse)[vs[1].(int)]
	}).(AzureFirewallNatRuleResponseOutput)
}

// Properties of the network rule.
type AzureFirewallNetworkRule struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination FQDNs.
	DestinationFqdns []string `pulumi:"destinationFqdns"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups []string `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Name of the network rule.
	Name *string `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols.
	Protocols []string `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// AzureFirewallNetworkRuleInput is an input type that accepts AzureFirewallNetworkRuleArgs and AzureFirewallNetworkRuleOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleInput` via:
//
//          AzureFirewallNetworkRuleArgs{...}
type AzureFirewallNetworkRuleInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleOutput() AzureFirewallNetworkRuleOutput
	ToAzureFirewallNetworkRuleOutputWithContext(context.Context) AzureFirewallNetworkRuleOutput
}

// Properties of the network rule.
type AzureFirewallNetworkRuleArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination FQDNs.
	DestinationFqdns pulumi.StringArrayInput `pulumi:"destinationFqdns"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups pulumi.StringArrayInput `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Name of the network rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
}

func (AzureFirewallNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRule)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleArgs) ToAzureFirewallNetworkRuleOutput() AzureFirewallNetworkRuleOutput {
	return i.ToAzureFirewallNetworkRuleOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleArgs) ToAzureFirewallNetworkRuleOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleOutput)
}

// AzureFirewallNetworkRuleArrayInput is an input type that accepts AzureFirewallNetworkRuleArray and AzureFirewallNetworkRuleArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleArrayInput` via:
//
//          AzureFirewallNetworkRuleArray{ AzureFirewallNetworkRuleArgs{...} }
type AzureFirewallNetworkRuleArrayInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleArrayOutput() AzureFirewallNetworkRuleArrayOutput
	ToAzureFirewallNetworkRuleArrayOutputWithContext(context.Context) AzureFirewallNetworkRuleArrayOutput
}

type AzureFirewallNetworkRuleArray []AzureFirewallNetworkRuleInput

func (AzureFirewallNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRule)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleArray) ToAzureFirewallNetworkRuleArrayOutput() AzureFirewallNetworkRuleArrayOutput {
	return i.ToAzureFirewallNetworkRuleArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleArray) ToAzureFirewallNetworkRuleArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleArrayOutput)
}

// Properties of the network rule.
type AzureFirewallNetworkRuleOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRule)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleOutput) ToAzureFirewallNetworkRuleOutput() AzureFirewallNetworkRuleOutput {
	return o
}

func (o AzureFirewallNetworkRuleOutput) ToAzureFirewallNetworkRuleOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallNetworkRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses.
func (o AzureFirewallNetworkRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination FQDNs.
func (o AzureFirewallNetworkRuleOutput) DestinationFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.DestinationFqdns }).(pulumi.StringArrayOutput)
}

// List of destination IpGroups for this rule.
func (o AzureFirewallNetworkRuleOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.DestinationIpGroups }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o AzureFirewallNetworkRuleOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Name of the network rule.
func (o AzureFirewallNetworkRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of AzureFirewallNetworkRuleProtocols.
func (o AzureFirewallNetworkRuleOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallNetworkRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o AzureFirewallNetworkRuleOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

type AzureFirewallNetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRule)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleArrayOutput) ToAzureFirewallNetworkRuleArrayOutput() AzureFirewallNetworkRuleArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleArrayOutput) ToAzureFirewallNetworkRuleArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleArrayOutput) Index(i pulumi.IntInput) AzureFirewallNetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNetworkRule {
		return vs[0].([]AzureFirewallNetworkRule)[vs[1].(int)]
	}).(AzureFirewallNetworkRuleOutput)
}

// Network rule collection resource.
type AzureFirewallNetworkRuleCollection struct {
	// The action type of a rule collection.
	Action *AzureFirewallRCAction `pulumi:"action"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the network rule collection resource.
	Priority *int `pulumi:"priority"`
	// Collection of rules used by a network rule collection.
	Rules []AzureFirewallNetworkRule `pulumi:"rules"`
}

// AzureFirewallNetworkRuleCollectionInput is an input type that accepts AzureFirewallNetworkRuleCollectionArgs and AzureFirewallNetworkRuleCollectionOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleCollectionInput` via:
//
//          AzureFirewallNetworkRuleCollectionArgs{...}
type AzureFirewallNetworkRuleCollectionInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleCollectionOutput() AzureFirewallNetworkRuleCollectionOutput
	ToAzureFirewallNetworkRuleCollectionOutputWithContext(context.Context) AzureFirewallNetworkRuleCollectionOutput
}

// Network rule collection resource.
type AzureFirewallNetworkRuleCollectionArgs struct {
	// The action type of a rule collection.
	Action AzureFirewallRCActionPtrInput `pulumi:"action"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the network rule collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Collection of rules used by a network rule collection.
	Rules AzureFirewallNetworkRuleArrayInput `pulumi:"rules"`
}

func (AzureFirewallNetworkRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleCollection)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleCollectionArgs) ToAzureFirewallNetworkRuleCollectionOutput() AzureFirewallNetworkRuleCollectionOutput {
	return i.ToAzureFirewallNetworkRuleCollectionOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleCollectionArgs) ToAzureFirewallNetworkRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionOutput)
}

// AzureFirewallNetworkRuleCollectionArrayInput is an input type that accepts AzureFirewallNetworkRuleCollectionArray and AzureFirewallNetworkRuleCollectionArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleCollectionArrayInput` via:
//
//          AzureFirewallNetworkRuleCollectionArray{ AzureFirewallNetworkRuleCollectionArgs{...} }
type AzureFirewallNetworkRuleCollectionArrayInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleCollectionArrayOutput() AzureFirewallNetworkRuleCollectionArrayOutput
	ToAzureFirewallNetworkRuleCollectionArrayOutputWithContext(context.Context) AzureFirewallNetworkRuleCollectionArrayOutput
}

type AzureFirewallNetworkRuleCollectionArray []AzureFirewallNetworkRuleCollectionInput

func (AzureFirewallNetworkRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleCollection)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleCollectionArray) ToAzureFirewallNetworkRuleCollectionArrayOutput() AzureFirewallNetworkRuleCollectionArrayOutput {
	return i.ToAzureFirewallNetworkRuleCollectionArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleCollectionArray) ToAzureFirewallNetworkRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionArrayOutput)
}

// Network rule collection resource.
type AzureFirewallNetworkRuleCollectionOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleCollection)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionOutput) ToAzureFirewallNetworkRuleCollectionOutput() AzureFirewallNetworkRuleCollectionOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionOutput) ToAzureFirewallNetworkRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionOutput {
	return o
}

// The action type of a rule collection.
func (o AzureFirewallNetworkRuleCollectionOutput) Action() AzureFirewallRCActionPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollection) *AzureFirewallRCAction { return v.Action }).(AzureFirewallRCActionPtrOutput)
}

// Resource ID.
func (o AzureFirewallNetworkRuleCollectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
func (o AzureFirewallNetworkRuleCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the network rule collection resource.
func (o AzureFirewallNetworkRuleCollectionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollection) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Collection of rules used by a network rule collection.
func (o AzureFirewallNetworkRuleCollectionOutput) Rules() AzureFirewallNetworkRuleArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollection) []AzureFirewallNetworkRule { return v.Rules }).(AzureFirewallNetworkRuleArrayOutput)
}

type AzureFirewallNetworkRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleCollection)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionArrayOutput) ToAzureFirewallNetworkRuleCollectionArrayOutput() AzureFirewallNetworkRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionArrayOutput) ToAzureFirewallNetworkRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionArrayOutput) Index(i pulumi.IntInput) AzureFirewallNetworkRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNetworkRuleCollection {
		return vs[0].([]AzureFirewallNetworkRuleCollection)[vs[1].(int)]
	}).(AzureFirewallNetworkRuleCollectionOutput)
}

// Network rule collection resource.
type AzureFirewallNetworkRuleCollectionResponse struct {
	// The action type of a rule collection.
	Action *AzureFirewallRCActionResponse `pulumi:"action"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the network rule collection resource.
	Priority *int `pulumi:"priority"`
	// The provisioning state of the network rule collection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Collection of rules used by a network rule collection.
	Rules []AzureFirewallNetworkRuleResponse `pulumi:"rules"`
}

// AzureFirewallNetworkRuleCollectionResponseInput is an input type that accepts AzureFirewallNetworkRuleCollectionResponseArgs and AzureFirewallNetworkRuleCollectionResponseOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleCollectionResponseInput` via:
//
//          AzureFirewallNetworkRuleCollectionResponseArgs{...}
type AzureFirewallNetworkRuleCollectionResponseInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleCollectionResponseOutput() AzureFirewallNetworkRuleCollectionResponseOutput
	ToAzureFirewallNetworkRuleCollectionResponseOutputWithContext(context.Context) AzureFirewallNetworkRuleCollectionResponseOutput
}

// Network rule collection resource.
type AzureFirewallNetworkRuleCollectionResponseArgs struct {
	// The action type of a rule collection.
	Action AzureFirewallRCActionResponsePtrInput `pulumi:"action"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the network rule collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The provisioning state of the network rule collection resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Collection of rules used by a network rule collection.
	Rules AzureFirewallNetworkRuleResponseArrayInput `pulumi:"rules"`
}

func (AzureFirewallNetworkRuleCollectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleCollectionResponse)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleCollectionResponseArgs) ToAzureFirewallNetworkRuleCollectionResponseOutput() AzureFirewallNetworkRuleCollectionResponseOutput {
	return i.ToAzureFirewallNetworkRuleCollectionResponseOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleCollectionResponseArgs) ToAzureFirewallNetworkRuleCollectionResponseOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionResponseOutput)
}

// AzureFirewallNetworkRuleCollectionResponseArrayInput is an input type that accepts AzureFirewallNetworkRuleCollectionResponseArray and AzureFirewallNetworkRuleCollectionResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleCollectionResponseArrayInput` via:
//
//          AzureFirewallNetworkRuleCollectionResponseArray{ AzureFirewallNetworkRuleCollectionResponseArgs{...} }
type AzureFirewallNetworkRuleCollectionResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleCollectionResponseArrayOutput() AzureFirewallNetworkRuleCollectionResponseArrayOutput
	ToAzureFirewallNetworkRuleCollectionResponseArrayOutputWithContext(context.Context) AzureFirewallNetworkRuleCollectionResponseArrayOutput
}

type AzureFirewallNetworkRuleCollectionResponseArray []AzureFirewallNetworkRuleCollectionResponseInput

func (AzureFirewallNetworkRuleCollectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleCollectionResponse)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleCollectionResponseArray) ToAzureFirewallNetworkRuleCollectionResponseArrayOutput() AzureFirewallNetworkRuleCollectionResponseArrayOutput {
	return i.ToAzureFirewallNetworkRuleCollectionResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleCollectionResponseArray) ToAzureFirewallNetworkRuleCollectionResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionResponseArrayOutput)
}

// Network rule collection resource.
type AzureFirewallNetworkRuleCollectionResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionResponseOutput) ToAzureFirewallNetworkRuleCollectionResponseOutput() AzureFirewallNetworkRuleCollectionResponseOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionResponseOutput) ToAzureFirewallNetworkRuleCollectionResponseOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionResponseOutput {
	return o
}

// The action type of a rule collection.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Action() AzureFirewallRCActionResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) *AzureFirewallRCActionResponse { return v.Action }).(AzureFirewallRCActionResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the Azure firewall. This name can be used to access the resource.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the network rule collection resource.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The provisioning state of the network rule collection resource.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Collection of rules used by a network rule collection.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Rules() AzureFirewallNetworkRuleResponseArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) []AzureFirewallNetworkRuleResponse { return v.Rules }).(AzureFirewallNetworkRuleResponseArrayOutput)
}

type AzureFirewallNetworkRuleCollectionResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionResponseArrayOutput) ToAzureFirewallNetworkRuleCollectionResponseArrayOutput() AzureFirewallNetworkRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionResponseArrayOutput) ToAzureFirewallNetworkRuleCollectionResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallNetworkRuleCollectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNetworkRuleCollectionResponse {
		return vs[0].([]AzureFirewallNetworkRuleCollectionResponse)[vs[1].(int)]
	}).(AzureFirewallNetworkRuleCollectionResponseOutput)
}

// Properties of the network rule.
type AzureFirewallNetworkRuleResponse struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination FQDNs.
	DestinationFqdns []string `pulumi:"destinationFqdns"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups []string `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Name of the network rule.
	Name *string `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols.
	Protocols []string `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// AzureFirewallNetworkRuleResponseInput is an input type that accepts AzureFirewallNetworkRuleResponseArgs and AzureFirewallNetworkRuleResponseOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleResponseInput` via:
//
//          AzureFirewallNetworkRuleResponseArgs{...}
type AzureFirewallNetworkRuleResponseInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleResponseOutput() AzureFirewallNetworkRuleResponseOutput
	ToAzureFirewallNetworkRuleResponseOutputWithContext(context.Context) AzureFirewallNetworkRuleResponseOutput
}

// Properties of the network rule.
type AzureFirewallNetworkRuleResponseArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination FQDNs.
	DestinationFqdns pulumi.StringArrayInput `pulumi:"destinationFqdns"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups pulumi.StringArrayInput `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Name of the network rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
}

func (AzureFirewallNetworkRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleResponse)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleResponseArgs) ToAzureFirewallNetworkRuleResponseOutput() AzureFirewallNetworkRuleResponseOutput {
	return i.ToAzureFirewallNetworkRuleResponseOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleResponseArgs) ToAzureFirewallNetworkRuleResponseOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleResponseOutput)
}

// AzureFirewallNetworkRuleResponseArrayInput is an input type that accepts AzureFirewallNetworkRuleResponseArray and AzureFirewallNetworkRuleResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleResponseArrayInput` via:
//
//          AzureFirewallNetworkRuleResponseArray{ AzureFirewallNetworkRuleResponseArgs{...} }
type AzureFirewallNetworkRuleResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleResponseArrayOutput() AzureFirewallNetworkRuleResponseArrayOutput
	ToAzureFirewallNetworkRuleResponseArrayOutputWithContext(context.Context) AzureFirewallNetworkRuleResponseArrayOutput
}

type AzureFirewallNetworkRuleResponseArray []AzureFirewallNetworkRuleResponseInput

func (AzureFirewallNetworkRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleResponse)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleResponseArray) ToAzureFirewallNetworkRuleResponseArrayOutput() AzureFirewallNetworkRuleResponseArrayOutput {
	return i.ToAzureFirewallNetworkRuleResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleResponseArray) ToAzureFirewallNetworkRuleResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleResponseArrayOutput)
}

// Properties of the network rule.
type AzureFirewallNetworkRuleResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleResponse)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleResponseOutput) ToAzureFirewallNetworkRuleResponseOutput() AzureFirewallNetworkRuleResponseOutput {
	return o
}

func (o AzureFirewallNetworkRuleResponseOutput) ToAzureFirewallNetworkRuleResponseOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleResponseOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallNetworkRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses.
func (o AzureFirewallNetworkRuleResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination FQDNs.
func (o AzureFirewallNetworkRuleResponseOutput) DestinationFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.DestinationFqdns }).(pulumi.StringArrayOutput)
}

// List of destination IpGroups for this rule.
func (o AzureFirewallNetworkRuleResponseOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.DestinationIpGroups }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o AzureFirewallNetworkRuleResponseOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Name of the network rule.
func (o AzureFirewallNetworkRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of AzureFirewallNetworkRuleProtocols.
func (o AzureFirewallNetworkRuleResponseOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallNetworkRuleResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o AzureFirewallNetworkRuleResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

type AzureFirewallNetworkRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleResponse)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleResponseArrayOutput) ToAzureFirewallNetworkRuleResponseArrayOutput() AzureFirewallNetworkRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleResponseArrayOutput) ToAzureFirewallNetworkRuleResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallNetworkRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNetworkRuleResponse {
		return vs[0].([]AzureFirewallNetworkRuleResponse)[vs[1].(int)]
	}).(AzureFirewallNetworkRuleResponseOutput)
}

// Public IP Address associated with azure firewall.
type AzureFirewallPublicIPAddress struct {
	// Public IP Address value.
	Address *string `pulumi:"address"`
}

// AzureFirewallPublicIPAddressInput is an input type that accepts AzureFirewallPublicIPAddressArgs and AzureFirewallPublicIPAddressOutput values.
// You can construct a concrete instance of `AzureFirewallPublicIPAddressInput` via:
//
//          AzureFirewallPublicIPAddressArgs{...}
type AzureFirewallPublicIPAddressInput interface {
	pulumi.Input

	ToAzureFirewallPublicIPAddressOutput() AzureFirewallPublicIPAddressOutput
	ToAzureFirewallPublicIPAddressOutputWithContext(context.Context) AzureFirewallPublicIPAddressOutput
}

// Public IP Address associated with azure firewall.
type AzureFirewallPublicIPAddressArgs struct {
	// Public IP Address value.
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (AzureFirewallPublicIPAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallPublicIPAddress)(nil)).Elem()
}

func (i AzureFirewallPublicIPAddressArgs) ToAzureFirewallPublicIPAddressOutput() AzureFirewallPublicIPAddressOutput {
	return i.ToAzureFirewallPublicIPAddressOutputWithContext(context.Background())
}

func (i AzureFirewallPublicIPAddressArgs) ToAzureFirewallPublicIPAddressOutputWithContext(ctx context.Context) AzureFirewallPublicIPAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallPublicIPAddressOutput)
}

// AzureFirewallPublicIPAddressArrayInput is an input type that accepts AzureFirewallPublicIPAddressArray and AzureFirewallPublicIPAddressArrayOutput values.
// You can construct a concrete instance of `AzureFirewallPublicIPAddressArrayInput` via:
//
//          AzureFirewallPublicIPAddressArray{ AzureFirewallPublicIPAddressArgs{...} }
type AzureFirewallPublicIPAddressArrayInput interface {
	pulumi.Input

	ToAzureFirewallPublicIPAddressArrayOutput() AzureFirewallPublicIPAddressArrayOutput
	ToAzureFirewallPublicIPAddressArrayOutputWithContext(context.Context) AzureFirewallPublicIPAddressArrayOutput
}

type AzureFirewallPublicIPAddressArray []AzureFirewallPublicIPAddressInput

func (AzureFirewallPublicIPAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallPublicIPAddress)(nil)).Elem()
}

func (i AzureFirewallPublicIPAddressArray) ToAzureFirewallPublicIPAddressArrayOutput() AzureFirewallPublicIPAddressArrayOutput {
	return i.ToAzureFirewallPublicIPAddressArrayOutputWithContext(context.Background())
}

func (i AzureFirewallPublicIPAddressArray) ToAzureFirewallPublicIPAddressArrayOutputWithContext(ctx context.Context) AzureFirewallPublicIPAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallPublicIPAddressArrayOutput)
}

// Public IP Address associated with azure firewall.
type AzureFirewallPublicIPAddressOutput struct{ *pulumi.OutputState }

func (AzureFirewallPublicIPAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallPublicIPAddress)(nil)).Elem()
}

func (o AzureFirewallPublicIPAddressOutput) ToAzureFirewallPublicIPAddressOutput() AzureFirewallPublicIPAddressOutput {
	return o
}

func (o AzureFirewallPublicIPAddressOutput) ToAzureFirewallPublicIPAddressOutputWithContext(ctx context.Context) AzureFirewallPublicIPAddressOutput {
	return o
}

// Public IP Address value.
func (o AzureFirewallPublicIPAddressOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallPublicIPAddress) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type AzureFirewallPublicIPAddressArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallPublicIPAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallPublicIPAddress)(nil)).Elem()
}

func (o AzureFirewallPublicIPAddressArrayOutput) ToAzureFirewallPublicIPAddressArrayOutput() AzureFirewallPublicIPAddressArrayOutput {
	return o
}

func (o AzureFirewallPublicIPAddressArrayOutput) ToAzureFirewallPublicIPAddressArrayOutputWithContext(ctx context.Context) AzureFirewallPublicIPAddressArrayOutput {
	return o
}

func (o AzureFirewallPublicIPAddressArrayOutput) Index(i pulumi.IntInput) AzureFirewallPublicIPAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallPublicIPAddress {
		return vs[0].([]AzureFirewallPublicIPAddress)[vs[1].(int)]
	}).(AzureFirewallPublicIPAddressOutput)
}

// Public IP Address associated with azure firewall.
type AzureFirewallPublicIPAddressResponse struct {
	// Public IP Address value.
	Address *string `pulumi:"address"`
}

// AzureFirewallPublicIPAddressResponseInput is an input type that accepts AzureFirewallPublicIPAddressResponseArgs and AzureFirewallPublicIPAddressResponseOutput values.
// You can construct a concrete instance of `AzureFirewallPublicIPAddressResponseInput` via:
//
//          AzureFirewallPublicIPAddressResponseArgs{...}
type AzureFirewallPublicIPAddressResponseInput interface {
	pulumi.Input

	ToAzureFirewallPublicIPAddressResponseOutput() AzureFirewallPublicIPAddressResponseOutput
	ToAzureFirewallPublicIPAddressResponseOutputWithContext(context.Context) AzureFirewallPublicIPAddressResponseOutput
}

// Public IP Address associated with azure firewall.
type AzureFirewallPublicIPAddressResponseArgs struct {
	// Public IP Address value.
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (AzureFirewallPublicIPAddressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallPublicIPAddressResponse)(nil)).Elem()
}

func (i AzureFirewallPublicIPAddressResponseArgs) ToAzureFirewallPublicIPAddressResponseOutput() AzureFirewallPublicIPAddressResponseOutput {
	return i.ToAzureFirewallPublicIPAddressResponseOutputWithContext(context.Background())
}

func (i AzureFirewallPublicIPAddressResponseArgs) ToAzureFirewallPublicIPAddressResponseOutputWithContext(ctx context.Context) AzureFirewallPublicIPAddressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallPublicIPAddressResponseOutput)
}

// AzureFirewallPublicIPAddressResponseArrayInput is an input type that accepts AzureFirewallPublicIPAddressResponseArray and AzureFirewallPublicIPAddressResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallPublicIPAddressResponseArrayInput` via:
//
//          AzureFirewallPublicIPAddressResponseArray{ AzureFirewallPublicIPAddressResponseArgs{...} }
type AzureFirewallPublicIPAddressResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallPublicIPAddressResponseArrayOutput() AzureFirewallPublicIPAddressResponseArrayOutput
	ToAzureFirewallPublicIPAddressResponseArrayOutputWithContext(context.Context) AzureFirewallPublicIPAddressResponseArrayOutput
}

type AzureFirewallPublicIPAddressResponseArray []AzureFirewallPublicIPAddressResponseInput

func (AzureFirewallPublicIPAddressResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallPublicIPAddressResponse)(nil)).Elem()
}

func (i AzureFirewallPublicIPAddressResponseArray) ToAzureFirewallPublicIPAddressResponseArrayOutput() AzureFirewallPublicIPAddressResponseArrayOutput {
	return i.ToAzureFirewallPublicIPAddressResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallPublicIPAddressResponseArray) ToAzureFirewallPublicIPAddressResponseArrayOutputWithContext(ctx context.Context) AzureFirewallPublicIPAddressResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallPublicIPAddressResponseArrayOutput)
}

// Public IP Address associated with azure firewall.
type AzureFirewallPublicIPAddressResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallPublicIPAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallPublicIPAddressResponse)(nil)).Elem()
}

func (o AzureFirewallPublicIPAddressResponseOutput) ToAzureFirewallPublicIPAddressResponseOutput() AzureFirewallPublicIPAddressResponseOutput {
	return o
}

func (o AzureFirewallPublicIPAddressResponseOutput) ToAzureFirewallPublicIPAddressResponseOutputWithContext(ctx context.Context) AzureFirewallPublicIPAddressResponseOutput {
	return o
}

// Public IP Address value.
func (o AzureFirewallPublicIPAddressResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallPublicIPAddressResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type AzureFirewallPublicIPAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallPublicIPAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallPublicIPAddressResponse)(nil)).Elem()
}

func (o AzureFirewallPublicIPAddressResponseArrayOutput) ToAzureFirewallPublicIPAddressResponseArrayOutput() AzureFirewallPublicIPAddressResponseArrayOutput {
	return o
}

func (o AzureFirewallPublicIPAddressResponseArrayOutput) ToAzureFirewallPublicIPAddressResponseArrayOutputWithContext(ctx context.Context) AzureFirewallPublicIPAddressResponseArrayOutput {
	return o
}

func (o AzureFirewallPublicIPAddressResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallPublicIPAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallPublicIPAddressResponse {
		return vs[0].([]AzureFirewallPublicIPAddressResponse)[vs[1].(int)]
	}).(AzureFirewallPublicIPAddressResponseOutput)
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCAction struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// AzureFirewallRCActionInput is an input type that accepts AzureFirewallRCActionArgs and AzureFirewallRCActionOutput values.
// You can construct a concrete instance of `AzureFirewallRCActionInput` via:
//
//          AzureFirewallRCActionArgs{...}
type AzureFirewallRCActionInput interface {
	pulumi.Input

	ToAzureFirewallRCActionOutput() AzureFirewallRCActionOutput
	ToAzureFirewallRCActionOutputWithContext(context.Context) AzureFirewallRCActionOutput
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCActionArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AzureFirewallRCActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallRCAction)(nil)).Elem()
}

func (i AzureFirewallRCActionArgs) ToAzureFirewallRCActionOutput() AzureFirewallRCActionOutput {
	return i.ToAzureFirewallRCActionOutputWithContext(context.Background())
}

func (i AzureFirewallRCActionArgs) ToAzureFirewallRCActionOutputWithContext(ctx context.Context) AzureFirewallRCActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionOutput)
}

func (i AzureFirewallRCActionArgs) ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput {
	return i.ToAzureFirewallRCActionPtrOutputWithContext(context.Background())
}

func (i AzureFirewallRCActionArgs) ToAzureFirewallRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallRCActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionOutput).ToAzureFirewallRCActionPtrOutputWithContext(ctx)
}

// AzureFirewallRCActionPtrInput is an input type that accepts AzureFirewallRCActionArgs, AzureFirewallRCActionPtr and AzureFirewallRCActionPtrOutput values.
// You can construct a concrete instance of `AzureFirewallRCActionPtrInput` via:
//
//          AzureFirewallRCActionArgs{...}
//
//  or:
//
//          nil
type AzureFirewallRCActionPtrInput interface {
	pulumi.Input

	ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput
	ToAzureFirewallRCActionPtrOutputWithContext(context.Context) AzureFirewallRCActionPtrOutput
}

type azureFirewallRCActionPtrType AzureFirewallRCActionArgs

func AzureFirewallRCActionPtr(v *AzureFirewallRCActionArgs) AzureFirewallRCActionPtrInput {
	return (*azureFirewallRCActionPtrType)(v)
}

func (*azureFirewallRCActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallRCAction)(nil)).Elem()
}

func (i *azureFirewallRCActionPtrType) ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput {
	return i.ToAzureFirewallRCActionPtrOutputWithContext(context.Background())
}

func (i *azureFirewallRCActionPtrType) ToAzureFirewallRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallRCActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionPtrOutput)
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCActionOutput struct{ *pulumi.OutputState }

func (AzureFirewallRCActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallRCAction)(nil)).Elem()
}

func (o AzureFirewallRCActionOutput) ToAzureFirewallRCActionOutput() AzureFirewallRCActionOutput {
	return o
}

func (o AzureFirewallRCActionOutput) ToAzureFirewallRCActionOutputWithContext(ctx context.Context) AzureFirewallRCActionOutput {
	return o
}

func (o AzureFirewallRCActionOutput) ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput {
	return o.ToAzureFirewallRCActionPtrOutputWithContext(context.Background())
}

func (o AzureFirewallRCActionOutput) ToAzureFirewallRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallRCActionPtrOutput {
	return o.ApplyT(func(v AzureFirewallRCAction) *AzureFirewallRCAction {
		return &v
	}).(AzureFirewallRCActionPtrOutput)
}

// The type of action.
func (o AzureFirewallRCActionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallRCAction) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AzureFirewallRCActionPtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallRCActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallRCAction)(nil)).Elem()
}

func (o AzureFirewallRCActionPtrOutput) ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput {
	return o
}

func (o AzureFirewallRCActionPtrOutput) ToAzureFirewallRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallRCActionPtrOutput {
	return o
}

func (o AzureFirewallRCActionPtrOutput) Elem() AzureFirewallRCActionOutput {
	return o.ApplyT(func(v *AzureFirewallRCAction) AzureFirewallRCAction { return *v }).(AzureFirewallRCActionOutput)
}

// The type of action.
func (o AzureFirewallRCActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallRCAction) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCActionResponse struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// AzureFirewallRCActionResponseInput is an input type that accepts AzureFirewallRCActionResponseArgs and AzureFirewallRCActionResponseOutput values.
// You can construct a concrete instance of `AzureFirewallRCActionResponseInput` via:
//
//          AzureFirewallRCActionResponseArgs{...}
type AzureFirewallRCActionResponseInput interface {
	pulumi.Input

	ToAzureFirewallRCActionResponseOutput() AzureFirewallRCActionResponseOutput
	ToAzureFirewallRCActionResponseOutputWithContext(context.Context) AzureFirewallRCActionResponseOutput
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCActionResponseArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AzureFirewallRCActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallRCActionResponse)(nil)).Elem()
}

func (i AzureFirewallRCActionResponseArgs) ToAzureFirewallRCActionResponseOutput() AzureFirewallRCActionResponseOutput {
	return i.ToAzureFirewallRCActionResponseOutputWithContext(context.Background())
}

func (i AzureFirewallRCActionResponseArgs) ToAzureFirewallRCActionResponseOutputWithContext(ctx context.Context) AzureFirewallRCActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionResponseOutput)
}

func (i AzureFirewallRCActionResponseArgs) ToAzureFirewallRCActionResponsePtrOutput() AzureFirewallRCActionResponsePtrOutput {
	return i.ToAzureFirewallRCActionResponsePtrOutputWithContext(context.Background())
}

func (i AzureFirewallRCActionResponseArgs) ToAzureFirewallRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallRCActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionResponseOutput).ToAzureFirewallRCActionResponsePtrOutputWithContext(ctx)
}

// AzureFirewallRCActionResponsePtrInput is an input type that accepts AzureFirewallRCActionResponseArgs, AzureFirewallRCActionResponsePtr and AzureFirewallRCActionResponsePtrOutput values.
// You can construct a concrete instance of `AzureFirewallRCActionResponsePtrInput` via:
//
//          AzureFirewallRCActionResponseArgs{...}
//
//  or:
//
//          nil
type AzureFirewallRCActionResponsePtrInput interface {
	pulumi.Input

	ToAzureFirewallRCActionResponsePtrOutput() AzureFirewallRCActionResponsePtrOutput
	ToAzureFirewallRCActionResponsePtrOutputWithContext(context.Context) AzureFirewallRCActionResponsePtrOutput
}

type azureFirewallRCActionResponsePtrType AzureFirewallRCActionResponseArgs

func AzureFirewallRCActionResponsePtr(v *AzureFirewallRCActionResponseArgs) AzureFirewallRCActionResponsePtrInput {
	return (*azureFirewallRCActionResponsePtrType)(v)
}

func (*azureFirewallRCActionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallRCActionResponse)(nil)).Elem()
}

func (i *azureFirewallRCActionResponsePtrType) ToAzureFirewallRCActionResponsePtrOutput() AzureFirewallRCActionResponsePtrOutput {
	return i.ToAzureFirewallRCActionResponsePtrOutputWithContext(context.Background())
}

func (i *azureFirewallRCActionResponsePtrType) ToAzureFirewallRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallRCActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionResponsePtrOutput)
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCActionResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallRCActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallRCActionResponse)(nil)).Elem()
}

func (o AzureFirewallRCActionResponseOutput) ToAzureFirewallRCActionResponseOutput() AzureFirewallRCActionResponseOutput {
	return o
}

func (o AzureFirewallRCActionResponseOutput) ToAzureFirewallRCActionResponseOutputWithContext(ctx context.Context) AzureFirewallRCActionResponseOutput {
	return o
}

func (o AzureFirewallRCActionResponseOutput) ToAzureFirewallRCActionResponsePtrOutput() AzureFirewallRCActionResponsePtrOutput {
	return o.ToAzureFirewallRCActionResponsePtrOutputWithContext(context.Background())
}

func (o AzureFirewallRCActionResponseOutput) ToAzureFirewallRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallRCActionResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallRCActionResponse) *AzureFirewallRCActionResponse {
		return &v
	}).(AzureFirewallRCActionResponsePtrOutput)
}

// The type of action.
func (o AzureFirewallRCActionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallRCActionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AzureFirewallRCActionResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallRCActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallRCActionResponse)(nil)).Elem()
}

func (o AzureFirewallRCActionResponsePtrOutput) ToAzureFirewallRCActionResponsePtrOutput() AzureFirewallRCActionResponsePtrOutput {
	return o
}

func (o AzureFirewallRCActionResponsePtrOutput) ToAzureFirewallRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallRCActionResponsePtrOutput {
	return o
}

func (o AzureFirewallRCActionResponsePtrOutput) Elem() AzureFirewallRCActionResponseOutput {
	return o.ApplyT(func(v *AzureFirewallRCActionResponse) AzureFirewallRCActionResponse { return *v }).(AzureFirewallRCActionResponseOutput)
}

// The type of action.
func (o AzureFirewallRCActionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallRCActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// SKU of an Azure Firewall.
type AzureFirewallSku struct {
	// Name of an Azure Firewall SKU.
	Name *string `pulumi:"name"`
	// Tier of an Azure Firewall.
	Tier *string `pulumi:"tier"`
}

// AzureFirewallSkuInput is an input type that accepts AzureFirewallSkuArgs and AzureFirewallSkuOutput values.
// You can construct a concrete instance of `AzureFirewallSkuInput` via:
//
//          AzureFirewallSkuArgs{...}
type AzureFirewallSkuInput interface {
	pulumi.Input

	ToAzureFirewallSkuOutput() AzureFirewallSkuOutput
	ToAzureFirewallSkuOutputWithContext(context.Context) AzureFirewallSkuOutput
}

// SKU of an Azure Firewall.
type AzureFirewallSkuArgs struct {
	// Name of an Azure Firewall SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of an Azure Firewall.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (AzureFirewallSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallSku)(nil)).Elem()
}

func (i AzureFirewallSkuArgs) ToAzureFirewallSkuOutput() AzureFirewallSkuOutput {
	return i.ToAzureFirewallSkuOutputWithContext(context.Background())
}

func (i AzureFirewallSkuArgs) ToAzureFirewallSkuOutputWithContext(ctx context.Context) AzureFirewallSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallSkuOutput)
}

func (i AzureFirewallSkuArgs) ToAzureFirewallSkuPtrOutput() AzureFirewallSkuPtrOutput {
	return i.ToAzureFirewallSkuPtrOutputWithContext(context.Background())
}

func (i AzureFirewallSkuArgs) ToAzureFirewallSkuPtrOutputWithContext(ctx context.Context) AzureFirewallSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallSkuOutput).ToAzureFirewallSkuPtrOutputWithContext(ctx)
}

// AzureFirewallSkuPtrInput is an input type that accepts AzureFirewallSkuArgs, AzureFirewallSkuPtr and AzureFirewallSkuPtrOutput values.
// You can construct a concrete instance of `AzureFirewallSkuPtrInput` via:
//
//          AzureFirewallSkuArgs{...}
//
//  or:
//
//          nil
type AzureFirewallSkuPtrInput interface {
	pulumi.Input

	ToAzureFirewallSkuPtrOutput() AzureFirewallSkuPtrOutput
	ToAzureFirewallSkuPtrOutputWithContext(context.Context) AzureFirewallSkuPtrOutput
}

type azureFirewallSkuPtrType AzureFirewallSkuArgs

func AzureFirewallSkuPtr(v *AzureFirewallSkuArgs) AzureFirewallSkuPtrInput {
	return (*azureFirewallSkuPtrType)(v)
}

func (*azureFirewallSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallSku)(nil)).Elem()
}

func (i *azureFirewallSkuPtrType) ToAzureFirewallSkuPtrOutput() AzureFirewallSkuPtrOutput {
	return i.ToAzureFirewallSkuPtrOutputWithContext(context.Background())
}

func (i *azureFirewallSkuPtrType) ToAzureFirewallSkuPtrOutputWithContext(ctx context.Context) AzureFirewallSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallSkuPtrOutput)
}

// SKU of an Azure Firewall.
type AzureFirewallSkuOutput struct{ *pulumi.OutputState }

func (AzureFirewallSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallSku)(nil)).Elem()
}

func (o AzureFirewallSkuOutput) ToAzureFirewallSkuOutput() AzureFirewallSkuOutput {
	return o
}

func (o AzureFirewallSkuOutput) ToAzureFirewallSkuOutputWithContext(ctx context.Context) AzureFirewallSkuOutput {
	return o
}

func (o AzureFirewallSkuOutput) ToAzureFirewallSkuPtrOutput() AzureFirewallSkuPtrOutput {
	return o.ToAzureFirewallSkuPtrOutputWithContext(context.Background())
}

func (o AzureFirewallSkuOutput) ToAzureFirewallSkuPtrOutputWithContext(ctx context.Context) AzureFirewallSkuPtrOutput {
	return o.ApplyT(func(v AzureFirewallSku) *AzureFirewallSku {
		return &v
	}).(AzureFirewallSkuPtrOutput)
}

// Name of an Azure Firewall SKU.
func (o AzureFirewallSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of an Azure Firewall.
func (o AzureFirewallSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type AzureFirewallSkuPtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallSku)(nil)).Elem()
}

func (o AzureFirewallSkuPtrOutput) ToAzureFirewallSkuPtrOutput() AzureFirewallSkuPtrOutput {
	return o
}

func (o AzureFirewallSkuPtrOutput) ToAzureFirewallSkuPtrOutputWithContext(ctx context.Context) AzureFirewallSkuPtrOutput {
	return o
}

func (o AzureFirewallSkuPtrOutput) Elem() AzureFirewallSkuOutput {
	return o.ApplyT(func(v *AzureFirewallSku) AzureFirewallSku { return *v }).(AzureFirewallSkuOutput)
}

// Name of an Azure Firewall SKU.
func (o AzureFirewallSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of an Azure Firewall.
func (o AzureFirewallSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU of an Azure Firewall.
type AzureFirewallSkuResponse struct {
	// Name of an Azure Firewall SKU.
	Name *string `pulumi:"name"`
	// Tier of an Azure Firewall.
	Tier *string `pulumi:"tier"`
}

// AzureFirewallSkuResponseInput is an input type that accepts AzureFirewallSkuResponseArgs and AzureFirewallSkuResponseOutput values.
// You can construct a concrete instance of `AzureFirewallSkuResponseInput` via:
//
//          AzureFirewallSkuResponseArgs{...}
type AzureFirewallSkuResponseInput interface {
	pulumi.Input

	ToAzureFirewallSkuResponseOutput() AzureFirewallSkuResponseOutput
	ToAzureFirewallSkuResponseOutputWithContext(context.Context) AzureFirewallSkuResponseOutput
}

// SKU of an Azure Firewall.
type AzureFirewallSkuResponseArgs struct {
	// Name of an Azure Firewall SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of an Azure Firewall.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (AzureFirewallSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallSkuResponse)(nil)).Elem()
}

func (i AzureFirewallSkuResponseArgs) ToAzureFirewallSkuResponseOutput() AzureFirewallSkuResponseOutput {
	return i.ToAzureFirewallSkuResponseOutputWithContext(context.Background())
}

func (i AzureFirewallSkuResponseArgs) ToAzureFirewallSkuResponseOutputWithContext(ctx context.Context) AzureFirewallSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallSkuResponseOutput)
}

func (i AzureFirewallSkuResponseArgs) ToAzureFirewallSkuResponsePtrOutput() AzureFirewallSkuResponsePtrOutput {
	return i.ToAzureFirewallSkuResponsePtrOutputWithContext(context.Background())
}

func (i AzureFirewallSkuResponseArgs) ToAzureFirewallSkuResponsePtrOutputWithContext(ctx context.Context) AzureFirewallSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallSkuResponseOutput).ToAzureFirewallSkuResponsePtrOutputWithContext(ctx)
}

// AzureFirewallSkuResponsePtrInput is an input type that accepts AzureFirewallSkuResponseArgs, AzureFirewallSkuResponsePtr and AzureFirewallSkuResponsePtrOutput values.
// You can construct a concrete instance of `AzureFirewallSkuResponsePtrInput` via:
//
//          AzureFirewallSkuResponseArgs{...}
//
//  or:
//
//          nil
type AzureFirewallSkuResponsePtrInput interface {
	pulumi.Input

	ToAzureFirewallSkuResponsePtrOutput() AzureFirewallSkuResponsePtrOutput
	ToAzureFirewallSkuResponsePtrOutputWithContext(context.Context) AzureFirewallSkuResponsePtrOutput
}

type azureFirewallSkuResponsePtrType AzureFirewallSkuResponseArgs

func AzureFirewallSkuResponsePtr(v *AzureFirewallSkuResponseArgs) AzureFirewallSkuResponsePtrInput {
	return (*azureFirewallSkuResponsePtrType)(v)
}

func (*azureFirewallSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallSkuResponse)(nil)).Elem()
}

func (i *azureFirewallSkuResponsePtrType) ToAzureFirewallSkuResponsePtrOutput() AzureFirewallSkuResponsePtrOutput {
	return i.ToAzureFirewallSkuResponsePtrOutputWithContext(context.Background())
}

func (i *azureFirewallSkuResponsePtrType) ToAzureFirewallSkuResponsePtrOutputWithContext(ctx context.Context) AzureFirewallSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallSkuResponsePtrOutput)
}

// SKU of an Azure Firewall.
type AzureFirewallSkuResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallSkuResponse)(nil)).Elem()
}

func (o AzureFirewallSkuResponseOutput) ToAzureFirewallSkuResponseOutput() AzureFirewallSkuResponseOutput {
	return o
}

func (o AzureFirewallSkuResponseOutput) ToAzureFirewallSkuResponseOutputWithContext(ctx context.Context) AzureFirewallSkuResponseOutput {
	return o
}

func (o AzureFirewallSkuResponseOutput) ToAzureFirewallSkuResponsePtrOutput() AzureFirewallSkuResponsePtrOutput {
	return o.ToAzureFirewallSkuResponsePtrOutputWithContext(context.Background())
}

func (o AzureFirewallSkuResponseOutput) ToAzureFirewallSkuResponsePtrOutputWithContext(ctx context.Context) AzureFirewallSkuResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallSkuResponse) *AzureFirewallSkuResponse {
		return &v
	}).(AzureFirewallSkuResponsePtrOutput)
}

// Name of an Azure Firewall SKU.
func (o AzureFirewallSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of an Azure Firewall.
func (o AzureFirewallSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type AzureFirewallSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallSkuResponse)(nil)).Elem()
}

func (o AzureFirewallSkuResponsePtrOutput) ToAzureFirewallSkuResponsePtrOutput() AzureFirewallSkuResponsePtrOutput {
	return o
}

func (o AzureFirewallSkuResponsePtrOutput) ToAzureFirewallSkuResponsePtrOutputWithContext(ctx context.Context) AzureFirewallSkuResponsePtrOutput {
	return o
}

func (o AzureFirewallSkuResponsePtrOutput) Elem() AzureFirewallSkuResponseOutput {
	return o.ApplyT(func(v *AzureFirewallSkuResponse) AzureFirewallSkuResponse { return *v }).(AzureFirewallSkuResponseOutput)
}

// Name of an Azure Firewall SKU.
func (o AzureFirewallSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of an Azure Firewall.
func (o AzureFirewallSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Backend address of a frontDoor load balancer.
type Backend struct {
	// Location of the backend (IP address or FQDN)
	Address *string `pulumi:"address"`
	// The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.
	BackendHostHeader *string `pulumi:"backendHostHeader"`
	// Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'
	EnabledState *string `pulumi:"enabledState"`
	// The HTTP TCP port number. Must be between 1 and 65535.
	HttpPort *int `pulumi:"httpPort"`
	// The HTTPS TCP port number. Must be between 1 and 65535.
	HttpsPort *int `pulumi:"httpsPort"`
	// Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.
	Priority *int `pulumi:"priority"`
	// The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkAlias *string `pulumi:"privateLinkAlias"`
	// A custom message to be included in the approval request to connect to the Private Link
	PrivateLinkApprovalMessage *string `pulumi:"privateLinkApprovalMessage"`
	// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
	PrivateLinkLocation *string `pulumi:"privateLinkLocation"`
	// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// Weight of this endpoint for load balancing purposes.
	Weight *int `pulumi:"weight"`
}

// BackendInput is an input type that accepts BackendArgs and BackendOutput values.
// You can construct a concrete instance of `BackendInput` via:
//
//          BackendArgs{...}
type BackendInput interface {
	pulumi.Input

	ToBackendOutput() BackendOutput
	ToBackendOutputWithContext(context.Context) BackendOutput
}

// Backend address of a frontDoor load balancer.
type BackendArgs struct {
	// Location of the backend (IP address or FQDN)
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.
	BackendHostHeader pulumi.StringPtrInput `pulumi:"backendHostHeader"`
	// Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// The HTTP TCP port number. Must be between 1 and 65535.
	HttpPort pulumi.IntPtrInput `pulumi:"httpPort"`
	// The HTTPS TCP port number. Must be between 1 and 65535.
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
	// Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkAlias pulumi.StringPtrInput `pulumi:"privateLinkAlias"`
	// A custom message to be included in the approval request to connect to the Private Link
	PrivateLinkApprovalMessage pulumi.StringPtrInput `pulumi:"privateLinkApprovalMessage"`
	// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
	PrivateLinkLocation pulumi.StringPtrInput `pulumi:"privateLinkLocation"`
	// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkResourceId pulumi.StringPtrInput `pulumi:"privateLinkResourceId"`
	// Weight of this endpoint for load balancing purposes.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (BackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Backend)(nil)).Elem()
}

func (i BackendArgs) ToBackendOutput() BackendOutput {
	return i.ToBackendOutputWithContext(context.Background())
}

func (i BackendArgs) ToBackendOutputWithContext(ctx context.Context) BackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendOutput)
}

// BackendArrayInput is an input type that accepts BackendArray and BackendArrayOutput values.
// You can construct a concrete instance of `BackendArrayInput` via:
//
//          BackendArray{ BackendArgs{...} }
type BackendArrayInput interface {
	pulumi.Input

	ToBackendArrayOutput() BackendArrayOutput
	ToBackendArrayOutputWithContext(context.Context) BackendArrayOutput
}

type BackendArray []BackendInput

func (BackendArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Backend)(nil)).Elem()
}

func (i BackendArray) ToBackendArrayOutput() BackendArrayOutput {
	return i.ToBackendArrayOutputWithContext(context.Background())
}

func (i BackendArray) ToBackendArrayOutputWithContext(ctx context.Context) BackendArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendArrayOutput)
}

// Backend address of a frontDoor load balancer.
type BackendOutput struct{ *pulumi.OutputState }

func (BackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Backend)(nil)).Elem()
}

func (o BackendOutput) ToBackendOutput() BackendOutput {
	return o
}

func (o BackendOutput) ToBackendOutputWithContext(ctx context.Context) BackendOutput {
	return o
}

// Location of the backend (IP address or FQDN)
func (o BackendOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Backend) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.
func (o BackendOutput) BackendHostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Backend) *string { return v.BackendHostHeader }).(pulumi.StringPtrOutput)
}

// Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'
func (o BackendOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Backend) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// The HTTP TCP port number. Must be between 1 and 65535.
func (o BackendOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Backend) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The HTTPS TCP port number. Must be between 1 and 65535.
func (o BackendOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Backend) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.
func (o BackendOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Backend) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
func (o BackendOutput) PrivateLinkAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Backend) *string { return v.PrivateLinkAlias }).(pulumi.StringPtrOutput)
}

// A custom message to be included in the approval request to connect to the Private Link
func (o BackendOutput) PrivateLinkApprovalMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Backend) *string { return v.PrivateLinkApprovalMessage }).(pulumi.StringPtrOutput)
}

// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
func (o BackendOutput) PrivateLinkLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Backend) *string { return v.PrivateLinkLocation }).(pulumi.StringPtrOutput)
}

// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
func (o BackendOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Backend) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// Weight of this endpoint for load balancing purposes.
func (o BackendOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Backend) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type BackendArrayOutput struct{ *pulumi.OutputState }

func (BackendArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Backend)(nil)).Elem()
}

func (o BackendArrayOutput) ToBackendArrayOutput() BackendArrayOutput {
	return o
}

func (o BackendArrayOutput) ToBackendArrayOutputWithContext(ctx context.Context) BackendArrayOutput {
	return o
}

func (o BackendArrayOutput) Index(i pulumi.IntInput) BackendOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Backend {
		return vs[0].([]Backend)[vs[1].(int)]
	}).(BackendOutput)
}

// Pool of backend IP addresses.
type BackendAddressPool struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of backend addresses.
	LoadBalancerBackendAddresses []LoadBalancerBackendAddress `pulumi:"loadBalancerBackendAddresses"`
	// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
}

// BackendAddressPoolInput is an input type that accepts BackendAddressPoolArgs and BackendAddressPoolOutput values.
// You can construct a concrete instance of `BackendAddressPoolInput` via:
//
//          BackendAddressPoolArgs{...}
type BackendAddressPoolInput interface {
	pulumi.Input

	ToBackendAddressPoolOutput() BackendAddressPoolOutput
	ToBackendAddressPoolOutputWithContext(context.Context) BackendAddressPoolOutput
}

// Pool of backend IP addresses.
type BackendAddressPoolArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// An array of backend addresses.
	LoadBalancerBackendAddresses LoadBalancerBackendAddressArrayInput `pulumi:"loadBalancerBackendAddresses"`
	// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BackendAddressPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPool)(nil)).Elem()
}

func (i BackendAddressPoolArgs) ToBackendAddressPoolOutput() BackendAddressPoolOutput {
	return i.ToBackendAddressPoolOutputWithContext(context.Background())
}

func (i BackendAddressPoolArgs) ToBackendAddressPoolOutputWithContext(ctx context.Context) BackendAddressPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolOutput)
}

// BackendAddressPoolArrayInput is an input type that accepts BackendAddressPoolArray and BackendAddressPoolArrayOutput values.
// You can construct a concrete instance of `BackendAddressPoolArrayInput` via:
//
//          BackendAddressPoolArray{ BackendAddressPoolArgs{...} }
type BackendAddressPoolArrayInput interface {
	pulumi.Input

	ToBackendAddressPoolArrayOutput() BackendAddressPoolArrayOutput
	ToBackendAddressPoolArrayOutputWithContext(context.Context) BackendAddressPoolArrayOutput
}

type BackendAddressPoolArray []BackendAddressPoolInput

func (BackendAddressPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPool)(nil)).Elem()
}

func (i BackendAddressPoolArray) ToBackendAddressPoolArrayOutput() BackendAddressPoolArrayOutput {
	return i.ToBackendAddressPoolArrayOutputWithContext(context.Background())
}

func (i BackendAddressPoolArray) ToBackendAddressPoolArrayOutputWithContext(ctx context.Context) BackendAddressPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolArrayOutput)
}

// Pool of backend IP addresses.
type BackendAddressPoolOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPool)(nil)).Elem()
}

func (o BackendAddressPoolOutput) ToBackendAddressPoolOutput() BackendAddressPoolOutput {
	return o
}

func (o BackendAddressPoolOutput) ToBackendAddressPoolOutputWithContext(ctx context.Context) BackendAddressPoolOutput {
	return o
}

// Resource ID.
func (o BackendAddressPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of backend addresses.
func (o BackendAddressPoolOutput) LoadBalancerBackendAddresses() LoadBalancerBackendAddressArrayOutput {
	return o.ApplyT(func(v BackendAddressPool) []LoadBalancerBackendAddress { return v.LoadBalancerBackendAddresses }).(LoadBalancerBackendAddressArrayOutput)
}

// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
func (o BackendAddressPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BackendAddressPoolArrayOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPool)(nil)).Elem()
}

func (o BackendAddressPoolArrayOutput) ToBackendAddressPoolArrayOutput() BackendAddressPoolArrayOutput {
	return o
}

func (o BackendAddressPoolArrayOutput) ToBackendAddressPoolArrayOutputWithContext(ctx context.Context) BackendAddressPoolArrayOutput {
	return o
}

func (o BackendAddressPoolArrayOutput) Index(i pulumi.IntInput) BackendAddressPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendAddressPool {
		return vs[0].([]BackendAddressPool)[vs[1].(int)]
	}).(BackendAddressPoolOutput)
}

// Pool of backend IP addresses.
type BackendAddressPoolResponse struct {
	// An array of references to IP addresses defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of backend addresses.
	LoadBalancerBackendAddresses []LoadBalancerBackendAddressResponse `pulumi:"loadBalancerBackendAddresses"`
	// An array of references to load balancing rules that use this backend address pool.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// A reference to an outbound rule that uses this backend address pool.
	OutboundRule SubResourceResponse `pulumi:"outboundRule"`
	// An array of references to outbound rules that use this backend address pool.
	OutboundRules []SubResourceResponse `pulumi:"outboundRules"`
	// The provisioning state of the backend address pool resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// BackendAddressPoolResponseInput is an input type that accepts BackendAddressPoolResponseArgs and BackendAddressPoolResponseOutput values.
// You can construct a concrete instance of `BackendAddressPoolResponseInput` via:
//
//          BackendAddressPoolResponseArgs{...}
type BackendAddressPoolResponseInput interface {
	pulumi.Input

	ToBackendAddressPoolResponseOutput() BackendAddressPoolResponseOutput
	ToBackendAddressPoolResponseOutputWithContext(context.Context) BackendAddressPoolResponseOutput
}

// Pool of backend IP addresses.
type BackendAddressPoolResponseArgs struct {
	// An array of references to IP addresses defined in network interfaces.
	BackendIPConfigurations NetworkInterfaceIPConfigurationResponseArrayInput `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// An array of backend addresses.
	LoadBalancerBackendAddresses LoadBalancerBackendAddressResponseArrayInput `pulumi:"loadBalancerBackendAddresses"`
	// An array of references to load balancing rules that use this backend address pool.
	LoadBalancingRules SubResourceResponseArrayInput `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A reference to an outbound rule that uses this backend address pool.
	OutboundRule SubResourceResponseInput `pulumi:"outboundRule"`
	// An array of references to outbound rules that use this backend address pool.
	OutboundRules SubResourceResponseArrayInput `pulumi:"outboundRules"`
	// The provisioning state of the backend address pool resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BackendAddressPoolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPoolResponse)(nil)).Elem()
}

func (i BackendAddressPoolResponseArgs) ToBackendAddressPoolResponseOutput() BackendAddressPoolResponseOutput {
	return i.ToBackendAddressPoolResponseOutputWithContext(context.Background())
}

func (i BackendAddressPoolResponseArgs) ToBackendAddressPoolResponseOutputWithContext(ctx context.Context) BackendAddressPoolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolResponseOutput)
}

// BackendAddressPoolResponseArrayInput is an input type that accepts BackendAddressPoolResponseArray and BackendAddressPoolResponseArrayOutput values.
// You can construct a concrete instance of `BackendAddressPoolResponseArrayInput` via:
//
//          BackendAddressPoolResponseArray{ BackendAddressPoolResponseArgs{...} }
type BackendAddressPoolResponseArrayInput interface {
	pulumi.Input

	ToBackendAddressPoolResponseArrayOutput() BackendAddressPoolResponseArrayOutput
	ToBackendAddressPoolResponseArrayOutputWithContext(context.Context) BackendAddressPoolResponseArrayOutput
}

type BackendAddressPoolResponseArray []BackendAddressPoolResponseInput

func (BackendAddressPoolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPoolResponse)(nil)).Elem()
}

func (i BackendAddressPoolResponseArray) ToBackendAddressPoolResponseArrayOutput() BackendAddressPoolResponseArrayOutput {
	return i.ToBackendAddressPoolResponseArrayOutputWithContext(context.Background())
}

func (i BackendAddressPoolResponseArray) ToBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) BackendAddressPoolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolResponseArrayOutput)
}

// Pool of backend IP addresses.
type BackendAddressPoolResponseOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPoolResponse)(nil)).Elem()
}

func (o BackendAddressPoolResponseOutput) ToBackendAddressPoolResponseOutput() BackendAddressPoolResponseOutput {
	return o
}

func (o BackendAddressPoolResponseOutput) ToBackendAddressPoolResponseOutputWithContext(ctx context.Context) BackendAddressPoolResponseOutput {
	return o
}

// An array of references to IP addresses defined in network interfaces.
func (o BackendAddressPoolResponseOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o BackendAddressPoolResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o BackendAddressPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of backend addresses.
func (o BackendAddressPoolResponseOutput) LoadBalancerBackendAddresses() LoadBalancerBackendAddressResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []LoadBalancerBackendAddressResponse {
		return v.LoadBalancerBackendAddresses
	}).(LoadBalancerBackendAddressResponseArrayOutput)
}

// An array of references to load balancing rules that use this backend address pool.
func (o BackendAddressPoolResponseOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []SubResourceResponse { return v.LoadBalancingRules }).(SubResourceResponseArrayOutput)
}

// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
func (o BackendAddressPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A reference to an outbound rule that uses this backend address pool.
func (o BackendAddressPoolResponseOutput) OutboundRule() SubResourceResponseOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) SubResourceResponse { return v.OutboundRule }).(SubResourceResponseOutput)
}

// An array of references to outbound rules that use this backend address pool.
func (o BackendAddressPoolResponseOutput) OutboundRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []SubResourceResponse { return v.OutboundRules }).(SubResourceResponseArrayOutput)
}

// The provisioning state of the backend address pool resource.
func (o BackendAddressPoolResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o BackendAddressPoolResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) string { return v.Type }).(pulumi.StringOutput)
}

type BackendAddressPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPoolResponse)(nil)).Elem()
}

func (o BackendAddressPoolResponseArrayOutput) ToBackendAddressPoolResponseArrayOutput() BackendAddressPoolResponseArrayOutput {
	return o
}

func (o BackendAddressPoolResponseArrayOutput) ToBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) BackendAddressPoolResponseArrayOutput {
	return o
}

func (o BackendAddressPoolResponseArrayOutput) Index(i pulumi.IntInput) BackendAddressPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendAddressPoolResponse {
		return vs[0].([]BackendAddressPoolResponse)[vs[1].(int)]
	}).(BackendAddressPoolResponseOutput)
}

// A backend pool is a collection of backends that can be routed to.
type BackendPool struct {
	// The set of backends for this pool
	Backends []Backend `pulumi:"backends"`
	// L7 health probe settings for a backend pool
	HealthProbeSettings *SubResource `pulumi:"healthProbeSettings"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Load balancing settings for a backend pool
	LoadBalancingSettings *SubResource `pulumi:"loadBalancingSettings"`
	// Resource name.
	Name *string `pulumi:"name"`
}

// BackendPoolInput is an input type that accepts BackendPoolArgs and BackendPoolOutput values.
// You can construct a concrete instance of `BackendPoolInput` via:
//
//          BackendPoolArgs{...}
type BackendPoolInput interface {
	pulumi.Input

	ToBackendPoolOutput() BackendPoolOutput
	ToBackendPoolOutputWithContext(context.Context) BackendPoolOutput
}

// A backend pool is a collection of backends that can be routed to.
type BackendPoolArgs struct {
	// The set of backends for this pool
	Backends BackendArrayInput `pulumi:"backends"`
	// L7 health probe settings for a backend pool
	HealthProbeSettings SubResourcePtrInput `pulumi:"healthProbeSettings"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Load balancing settings for a backend pool
	LoadBalancingSettings SubResourcePtrInput `pulumi:"loadBalancingSettings"`
	// Resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (BackendPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendPool)(nil)).Elem()
}

func (i BackendPoolArgs) ToBackendPoolOutput() BackendPoolOutput {
	return i.ToBackendPoolOutputWithContext(context.Background())
}

func (i BackendPoolArgs) ToBackendPoolOutputWithContext(ctx context.Context) BackendPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPoolOutput)
}

// BackendPoolArrayInput is an input type that accepts BackendPoolArray and BackendPoolArrayOutput values.
// You can construct a concrete instance of `BackendPoolArrayInput` via:
//
//          BackendPoolArray{ BackendPoolArgs{...} }
type BackendPoolArrayInput interface {
	pulumi.Input

	ToBackendPoolArrayOutput() BackendPoolArrayOutput
	ToBackendPoolArrayOutputWithContext(context.Context) BackendPoolArrayOutput
}

type BackendPoolArray []BackendPoolInput

func (BackendPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendPool)(nil)).Elem()
}

func (i BackendPoolArray) ToBackendPoolArrayOutput() BackendPoolArrayOutput {
	return i.ToBackendPoolArrayOutputWithContext(context.Background())
}

func (i BackendPoolArray) ToBackendPoolArrayOutputWithContext(ctx context.Context) BackendPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPoolArrayOutput)
}

// A backend pool is a collection of backends that can be routed to.
type BackendPoolOutput struct{ *pulumi.OutputState }

func (BackendPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendPool)(nil)).Elem()
}

func (o BackendPoolOutput) ToBackendPoolOutput() BackendPoolOutput {
	return o
}

func (o BackendPoolOutput) ToBackendPoolOutputWithContext(ctx context.Context) BackendPoolOutput {
	return o
}

// The set of backends for this pool
func (o BackendPoolOutput) Backends() BackendArrayOutput {
	return o.ApplyT(func(v BackendPool) []Backend { return v.Backends }).(BackendArrayOutput)
}

// L7 health probe settings for a backend pool
func (o BackendPoolOutput) HealthProbeSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v BackendPool) *SubResource { return v.HealthProbeSettings }).(SubResourcePtrOutput)
}

// Resource ID.
func (o BackendPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Load balancing settings for a backend pool
func (o BackendPoolOutput) LoadBalancingSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v BackendPool) *SubResource { return v.LoadBalancingSettings }).(SubResourcePtrOutput)
}

// Resource name.
func (o BackendPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type BackendPoolArrayOutput struct{ *pulumi.OutputState }

func (BackendPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendPool)(nil)).Elem()
}

func (o BackendPoolArrayOutput) ToBackendPoolArrayOutput() BackendPoolArrayOutput {
	return o
}

func (o BackendPoolArrayOutput) ToBackendPoolArrayOutputWithContext(ctx context.Context) BackendPoolArrayOutput {
	return o
}

func (o BackendPoolArrayOutput) Index(i pulumi.IntInput) BackendPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendPool {
		return vs[0].([]BackendPool)[vs[1].(int)]
	}).(BackendPoolOutput)
}

// A backend pool is a collection of backends that can be routed to.
type BackendPoolResponse struct {
	// The set of backends for this pool
	Backends []BackendResponse `pulumi:"backends"`
	// L7 health probe settings for a backend pool
	HealthProbeSettings *SubResourceResponse `pulumi:"healthProbeSettings"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Load balancing settings for a backend pool
	LoadBalancingSettings *SubResourceResponse `pulumi:"loadBalancingSettings"`
	// Resource name.
	Name *string `pulumi:"name"`
	// Resource status.
	ResourceState string `pulumi:"resourceState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// BackendPoolResponseInput is an input type that accepts BackendPoolResponseArgs and BackendPoolResponseOutput values.
// You can construct a concrete instance of `BackendPoolResponseInput` via:
//
//          BackendPoolResponseArgs{...}
type BackendPoolResponseInput interface {
	pulumi.Input

	ToBackendPoolResponseOutput() BackendPoolResponseOutput
	ToBackendPoolResponseOutputWithContext(context.Context) BackendPoolResponseOutput
}

// A backend pool is a collection of backends that can be routed to.
type BackendPoolResponseArgs struct {
	// The set of backends for this pool
	Backends BackendResponseArrayInput `pulumi:"backends"`
	// L7 health probe settings for a backend pool
	HealthProbeSettings SubResourceResponsePtrInput `pulumi:"healthProbeSettings"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Load balancing settings for a backend pool
	LoadBalancingSettings SubResourceResponsePtrInput `pulumi:"loadBalancingSettings"`
	// Resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Resource status.
	ResourceState pulumi.StringInput `pulumi:"resourceState"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BackendPoolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendPoolResponse)(nil)).Elem()
}

func (i BackendPoolResponseArgs) ToBackendPoolResponseOutput() BackendPoolResponseOutput {
	return i.ToBackendPoolResponseOutputWithContext(context.Background())
}

func (i BackendPoolResponseArgs) ToBackendPoolResponseOutputWithContext(ctx context.Context) BackendPoolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPoolResponseOutput)
}

// BackendPoolResponseArrayInput is an input type that accepts BackendPoolResponseArray and BackendPoolResponseArrayOutput values.
// You can construct a concrete instance of `BackendPoolResponseArrayInput` via:
//
//          BackendPoolResponseArray{ BackendPoolResponseArgs{...} }
type BackendPoolResponseArrayInput interface {
	pulumi.Input

	ToBackendPoolResponseArrayOutput() BackendPoolResponseArrayOutput
	ToBackendPoolResponseArrayOutputWithContext(context.Context) BackendPoolResponseArrayOutput
}

type BackendPoolResponseArray []BackendPoolResponseInput

func (BackendPoolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendPoolResponse)(nil)).Elem()
}

func (i BackendPoolResponseArray) ToBackendPoolResponseArrayOutput() BackendPoolResponseArrayOutput {
	return i.ToBackendPoolResponseArrayOutputWithContext(context.Background())
}

func (i BackendPoolResponseArray) ToBackendPoolResponseArrayOutputWithContext(ctx context.Context) BackendPoolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPoolResponseArrayOutput)
}

// A backend pool is a collection of backends that can be routed to.
type BackendPoolResponseOutput struct{ *pulumi.OutputState }

func (BackendPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendPoolResponse)(nil)).Elem()
}

func (o BackendPoolResponseOutput) ToBackendPoolResponseOutput() BackendPoolResponseOutput {
	return o
}

func (o BackendPoolResponseOutput) ToBackendPoolResponseOutputWithContext(ctx context.Context) BackendPoolResponseOutput {
	return o
}

// The set of backends for this pool
func (o BackendPoolResponseOutput) Backends() BackendResponseArrayOutput {
	return o.ApplyT(func(v BackendPoolResponse) []BackendResponse { return v.Backends }).(BackendResponseArrayOutput)
}

// L7 health probe settings for a backend pool
func (o BackendPoolResponseOutput) HealthProbeSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v BackendPoolResponse) *SubResourceResponse { return v.HealthProbeSettings }).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o BackendPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Load balancing settings for a backend pool
func (o BackendPoolResponseOutput) LoadBalancingSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v BackendPoolResponse) *SubResourceResponse { return v.LoadBalancingSettings }).(SubResourceResponsePtrOutput)
}

// Resource name.
func (o BackendPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource status.
func (o BackendPoolResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v BackendPoolResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

// Resource type.
func (o BackendPoolResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BackendPoolResponse) string { return v.Type }).(pulumi.StringOutput)
}

type BackendPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (BackendPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendPoolResponse)(nil)).Elem()
}

func (o BackendPoolResponseArrayOutput) ToBackendPoolResponseArrayOutput() BackendPoolResponseArrayOutput {
	return o
}

func (o BackendPoolResponseArrayOutput) ToBackendPoolResponseArrayOutputWithContext(ctx context.Context) BackendPoolResponseArrayOutput {
	return o
}

func (o BackendPoolResponseArrayOutput) Index(i pulumi.IntInput) BackendPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendPoolResponse {
		return vs[0].([]BackendPoolResponse)[vs[1].(int)]
	}).(BackendPoolResponseOutput)
}

// Settings that apply to all backend pools.
type BackendPoolsSettings struct {
	// Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
	EnforceCertificateNameCheck *string `pulumi:"enforceCertificateNameCheck"`
	// Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.
	SendRecvTimeoutSeconds *int `pulumi:"sendRecvTimeoutSeconds"`
}

// BackendPoolsSettingsInput is an input type that accepts BackendPoolsSettingsArgs and BackendPoolsSettingsOutput values.
// You can construct a concrete instance of `BackendPoolsSettingsInput` via:
//
//          BackendPoolsSettingsArgs{...}
type BackendPoolsSettingsInput interface {
	pulumi.Input

	ToBackendPoolsSettingsOutput() BackendPoolsSettingsOutput
	ToBackendPoolsSettingsOutputWithContext(context.Context) BackendPoolsSettingsOutput
}

// Settings that apply to all backend pools.
type BackendPoolsSettingsArgs struct {
	// Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
	EnforceCertificateNameCheck pulumi.StringPtrInput `pulumi:"enforceCertificateNameCheck"`
	// Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.
	SendRecvTimeoutSeconds pulumi.IntPtrInput `pulumi:"sendRecvTimeoutSeconds"`
}

func (BackendPoolsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendPoolsSettings)(nil)).Elem()
}

func (i BackendPoolsSettingsArgs) ToBackendPoolsSettingsOutput() BackendPoolsSettingsOutput {
	return i.ToBackendPoolsSettingsOutputWithContext(context.Background())
}

func (i BackendPoolsSettingsArgs) ToBackendPoolsSettingsOutputWithContext(ctx context.Context) BackendPoolsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPoolsSettingsOutput)
}

func (i BackendPoolsSettingsArgs) ToBackendPoolsSettingsPtrOutput() BackendPoolsSettingsPtrOutput {
	return i.ToBackendPoolsSettingsPtrOutputWithContext(context.Background())
}

func (i BackendPoolsSettingsArgs) ToBackendPoolsSettingsPtrOutputWithContext(ctx context.Context) BackendPoolsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPoolsSettingsOutput).ToBackendPoolsSettingsPtrOutputWithContext(ctx)
}

// BackendPoolsSettingsPtrInput is an input type that accepts BackendPoolsSettingsArgs, BackendPoolsSettingsPtr and BackendPoolsSettingsPtrOutput values.
// You can construct a concrete instance of `BackendPoolsSettingsPtrInput` via:
//
//          BackendPoolsSettingsArgs{...}
//
//  or:
//
//          nil
type BackendPoolsSettingsPtrInput interface {
	pulumi.Input

	ToBackendPoolsSettingsPtrOutput() BackendPoolsSettingsPtrOutput
	ToBackendPoolsSettingsPtrOutputWithContext(context.Context) BackendPoolsSettingsPtrOutput
}

type backendPoolsSettingsPtrType BackendPoolsSettingsArgs

func BackendPoolsSettingsPtr(v *BackendPoolsSettingsArgs) BackendPoolsSettingsPtrInput {
	return (*backendPoolsSettingsPtrType)(v)
}

func (*backendPoolsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendPoolsSettings)(nil)).Elem()
}

func (i *backendPoolsSettingsPtrType) ToBackendPoolsSettingsPtrOutput() BackendPoolsSettingsPtrOutput {
	return i.ToBackendPoolsSettingsPtrOutputWithContext(context.Background())
}

func (i *backendPoolsSettingsPtrType) ToBackendPoolsSettingsPtrOutputWithContext(ctx context.Context) BackendPoolsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPoolsSettingsPtrOutput)
}

// Settings that apply to all backend pools.
type BackendPoolsSettingsOutput struct{ *pulumi.OutputState }

func (BackendPoolsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendPoolsSettings)(nil)).Elem()
}

func (o BackendPoolsSettingsOutput) ToBackendPoolsSettingsOutput() BackendPoolsSettingsOutput {
	return o
}

func (o BackendPoolsSettingsOutput) ToBackendPoolsSettingsOutputWithContext(ctx context.Context) BackendPoolsSettingsOutput {
	return o
}

func (o BackendPoolsSettingsOutput) ToBackendPoolsSettingsPtrOutput() BackendPoolsSettingsPtrOutput {
	return o.ToBackendPoolsSettingsPtrOutputWithContext(context.Background())
}

func (o BackendPoolsSettingsOutput) ToBackendPoolsSettingsPtrOutputWithContext(ctx context.Context) BackendPoolsSettingsPtrOutput {
	return o.ApplyT(func(v BackendPoolsSettings) *BackendPoolsSettings {
		return &v
	}).(BackendPoolsSettingsPtrOutput)
}

// Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
func (o BackendPoolsSettingsOutput) EnforceCertificateNameCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendPoolsSettings) *string { return v.EnforceCertificateNameCheck }).(pulumi.StringPtrOutput)
}

// Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.
func (o BackendPoolsSettingsOutput) SendRecvTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendPoolsSettings) *int { return v.SendRecvTimeoutSeconds }).(pulumi.IntPtrOutput)
}

type BackendPoolsSettingsPtrOutput struct{ *pulumi.OutputState }

func (BackendPoolsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendPoolsSettings)(nil)).Elem()
}

func (o BackendPoolsSettingsPtrOutput) ToBackendPoolsSettingsPtrOutput() BackendPoolsSettingsPtrOutput {
	return o
}

func (o BackendPoolsSettingsPtrOutput) ToBackendPoolsSettingsPtrOutputWithContext(ctx context.Context) BackendPoolsSettingsPtrOutput {
	return o
}

func (o BackendPoolsSettingsPtrOutput) Elem() BackendPoolsSettingsOutput {
	return o.ApplyT(func(v *BackendPoolsSettings) BackendPoolsSettings { return *v }).(BackendPoolsSettingsOutput)
}

// Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
func (o BackendPoolsSettingsPtrOutput) EnforceCertificateNameCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendPoolsSettings) *string {
		if v == nil {
			return nil
		}
		return v.EnforceCertificateNameCheck
	}).(pulumi.StringPtrOutput)
}

// Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.
func (o BackendPoolsSettingsPtrOutput) SendRecvTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendPoolsSettings) *int {
		if v == nil {
			return nil
		}
		return v.SendRecvTimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Settings that apply to all backend pools.
type BackendPoolsSettingsResponse struct {
	// Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
	EnforceCertificateNameCheck *string `pulumi:"enforceCertificateNameCheck"`
	// Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.
	SendRecvTimeoutSeconds *int `pulumi:"sendRecvTimeoutSeconds"`
}

// BackendPoolsSettingsResponseInput is an input type that accepts BackendPoolsSettingsResponseArgs and BackendPoolsSettingsResponseOutput values.
// You can construct a concrete instance of `BackendPoolsSettingsResponseInput` via:
//
//          BackendPoolsSettingsResponseArgs{...}
type BackendPoolsSettingsResponseInput interface {
	pulumi.Input

	ToBackendPoolsSettingsResponseOutput() BackendPoolsSettingsResponseOutput
	ToBackendPoolsSettingsResponseOutputWithContext(context.Context) BackendPoolsSettingsResponseOutput
}

// Settings that apply to all backend pools.
type BackendPoolsSettingsResponseArgs struct {
	// Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
	EnforceCertificateNameCheck pulumi.StringPtrInput `pulumi:"enforceCertificateNameCheck"`
	// Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.
	SendRecvTimeoutSeconds pulumi.IntPtrInput `pulumi:"sendRecvTimeoutSeconds"`
}

func (BackendPoolsSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendPoolsSettingsResponse)(nil)).Elem()
}

func (i BackendPoolsSettingsResponseArgs) ToBackendPoolsSettingsResponseOutput() BackendPoolsSettingsResponseOutput {
	return i.ToBackendPoolsSettingsResponseOutputWithContext(context.Background())
}

func (i BackendPoolsSettingsResponseArgs) ToBackendPoolsSettingsResponseOutputWithContext(ctx context.Context) BackendPoolsSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPoolsSettingsResponseOutput)
}

func (i BackendPoolsSettingsResponseArgs) ToBackendPoolsSettingsResponsePtrOutput() BackendPoolsSettingsResponsePtrOutput {
	return i.ToBackendPoolsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i BackendPoolsSettingsResponseArgs) ToBackendPoolsSettingsResponsePtrOutputWithContext(ctx context.Context) BackendPoolsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPoolsSettingsResponseOutput).ToBackendPoolsSettingsResponsePtrOutputWithContext(ctx)
}

// BackendPoolsSettingsResponsePtrInput is an input type that accepts BackendPoolsSettingsResponseArgs, BackendPoolsSettingsResponsePtr and BackendPoolsSettingsResponsePtrOutput values.
// You can construct a concrete instance of `BackendPoolsSettingsResponsePtrInput` via:
//
//          BackendPoolsSettingsResponseArgs{...}
//
//  or:
//
//          nil
type BackendPoolsSettingsResponsePtrInput interface {
	pulumi.Input

	ToBackendPoolsSettingsResponsePtrOutput() BackendPoolsSettingsResponsePtrOutput
	ToBackendPoolsSettingsResponsePtrOutputWithContext(context.Context) BackendPoolsSettingsResponsePtrOutput
}

type backendPoolsSettingsResponsePtrType BackendPoolsSettingsResponseArgs

func BackendPoolsSettingsResponsePtr(v *BackendPoolsSettingsResponseArgs) BackendPoolsSettingsResponsePtrInput {
	return (*backendPoolsSettingsResponsePtrType)(v)
}

func (*backendPoolsSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendPoolsSettingsResponse)(nil)).Elem()
}

func (i *backendPoolsSettingsResponsePtrType) ToBackendPoolsSettingsResponsePtrOutput() BackendPoolsSettingsResponsePtrOutput {
	return i.ToBackendPoolsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *backendPoolsSettingsResponsePtrType) ToBackendPoolsSettingsResponsePtrOutputWithContext(ctx context.Context) BackendPoolsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendPoolsSettingsResponsePtrOutput)
}

// Settings that apply to all backend pools.
type BackendPoolsSettingsResponseOutput struct{ *pulumi.OutputState }

func (BackendPoolsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendPoolsSettingsResponse)(nil)).Elem()
}

func (o BackendPoolsSettingsResponseOutput) ToBackendPoolsSettingsResponseOutput() BackendPoolsSettingsResponseOutput {
	return o
}

func (o BackendPoolsSettingsResponseOutput) ToBackendPoolsSettingsResponseOutputWithContext(ctx context.Context) BackendPoolsSettingsResponseOutput {
	return o
}

func (o BackendPoolsSettingsResponseOutput) ToBackendPoolsSettingsResponsePtrOutput() BackendPoolsSettingsResponsePtrOutput {
	return o.ToBackendPoolsSettingsResponsePtrOutputWithContext(context.Background())
}

func (o BackendPoolsSettingsResponseOutput) ToBackendPoolsSettingsResponsePtrOutputWithContext(ctx context.Context) BackendPoolsSettingsResponsePtrOutput {
	return o.ApplyT(func(v BackendPoolsSettingsResponse) *BackendPoolsSettingsResponse {
		return &v
	}).(BackendPoolsSettingsResponsePtrOutput)
}

// Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
func (o BackendPoolsSettingsResponseOutput) EnforceCertificateNameCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendPoolsSettingsResponse) *string { return v.EnforceCertificateNameCheck }).(pulumi.StringPtrOutput)
}

// Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.
func (o BackendPoolsSettingsResponseOutput) SendRecvTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendPoolsSettingsResponse) *int { return v.SendRecvTimeoutSeconds }).(pulumi.IntPtrOutput)
}

type BackendPoolsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (BackendPoolsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackendPoolsSettingsResponse)(nil)).Elem()
}

func (o BackendPoolsSettingsResponsePtrOutput) ToBackendPoolsSettingsResponsePtrOutput() BackendPoolsSettingsResponsePtrOutput {
	return o
}

func (o BackendPoolsSettingsResponsePtrOutput) ToBackendPoolsSettingsResponsePtrOutputWithContext(ctx context.Context) BackendPoolsSettingsResponsePtrOutput {
	return o
}

func (o BackendPoolsSettingsResponsePtrOutput) Elem() BackendPoolsSettingsResponseOutput {
	return o.ApplyT(func(v *BackendPoolsSettingsResponse) BackendPoolsSettingsResponse { return *v }).(BackendPoolsSettingsResponseOutput)
}

// Whether to enforce certificate name check on HTTPS requests to all backend pools. No effect on non-HTTPS requests.
func (o BackendPoolsSettingsResponsePtrOutput) EnforceCertificateNameCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackendPoolsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.EnforceCertificateNameCheck
	}).(pulumi.StringPtrOutput)
}

// Send and receive timeout on forwarding request to the backend. When timeout is reached, the request fails and returns.
func (o BackendPoolsSettingsResponsePtrOutput) SendRecvTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BackendPoolsSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SendRecvTimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Backend address of a frontDoor load balancer.
type BackendResponse struct {
	// Location of the backend (IP address or FQDN)
	Address *string `pulumi:"address"`
	// The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.
	BackendHostHeader *string `pulumi:"backendHostHeader"`
	// Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'
	EnabledState *string `pulumi:"enabledState"`
	// The HTTP TCP port number. Must be between 1 and 65535.
	HttpPort *int `pulumi:"httpPort"`
	// The HTTPS TCP port number. Must be between 1 and 65535.
	HttpsPort *int `pulumi:"httpsPort"`
	// Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.
	Priority *int `pulumi:"priority"`
	// The Approval status for the connection to the Private Link
	PrivateEndpointStatus string `pulumi:"privateEndpointStatus"`
	// The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkAlias *string `pulumi:"privateLinkAlias"`
	// A custom message to be included in the approval request to connect to the Private Link
	PrivateLinkApprovalMessage *string `pulumi:"privateLinkApprovalMessage"`
	// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
	PrivateLinkLocation *string `pulumi:"privateLinkLocation"`
	// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkResourceId *string `pulumi:"privateLinkResourceId"`
	// Weight of this endpoint for load balancing purposes.
	Weight *int `pulumi:"weight"`
}

// BackendResponseInput is an input type that accepts BackendResponseArgs and BackendResponseOutput values.
// You can construct a concrete instance of `BackendResponseInput` via:
//
//          BackendResponseArgs{...}
type BackendResponseInput interface {
	pulumi.Input

	ToBackendResponseOutput() BackendResponseOutput
	ToBackendResponseOutputWithContext(context.Context) BackendResponseOutput
}

// Backend address of a frontDoor load balancer.
type BackendResponseArgs struct {
	// Location of the backend (IP address or FQDN)
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.
	BackendHostHeader pulumi.StringPtrInput `pulumi:"backendHostHeader"`
	// Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// The HTTP TCP port number. Must be between 1 and 65535.
	HttpPort pulumi.IntPtrInput `pulumi:"httpPort"`
	// The HTTPS TCP port number. Must be between 1 and 65535.
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
	// Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The Approval status for the connection to the Private Link
	PrivateEndpointStatus pulumi.StringInput `pulumi:"privateEndpointStatus"`
	// The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkAlias pulumi.StringPtrInput `pulumi:"privateLinkAlias"`
	// A custom message to be included in the approval request to connect to the Private Link
	PrivateLinkApprovalMessage pulumi.StringPtrInput `pulumi:"privateLinkApprovalMessage"`
	// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
	PrivateLinkLocation pulumi.StringPtrInput `pulumi:"privateLinkLocation"`
	// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
	PrivateLinkResourceId pulumi.StringPtrInput `pulumi:"privateLinkResourceId"`
	// Weight of this endpoint for load balancing purposes.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (BackendResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendResponse)(nil)).Elem()
}

func (i BackendResponseArgs) ToBackendResponseOutput() BackendResponseOutput {
	return i.ToBackendResponseOutputWithContext(context.Background())
}

func (i BackendResponseArgs) ToBackendResponseOutputWithContext(ctx context.Context) BackendResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendResponseOutput)
}

// BackendResponseArrayInput is an input type that accepts BackendResponseArray and BackendResponseArrayOutput values.
// You can construct a concrete instance of `BackendResponseArrayInput` via:
//
//          BackendResponseArray{ BackendResponseArgs{...} }
type BackendResponseArrayInput interface {
	pulumi.Input

	ToBackendResponseArrayOutput() BackendResponseArrayOutput
	ToBackendResponseArrayOutputWithContext(context.Context) BackendResponseArrayOutput
}

type BackendResponseArray []BackendResponseInput

func (BackendResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendResponse)(nil)).Elem()
}

func (i BackendResponseArray) ToBackendResponseArrayOutput() BackendResponseArrayOutput {
	return i.ToBackendResponseArrayOutputWithContext(context.Background())
}

func (i BackendResponseArray) ToBackendResponseArrayOutputWithContext(ctx context.Context) BackendResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendResponseArrayOutput)
}

// Backend address of a frontDoor load balancer.
type BackendResponseOutput struct{ *pulumi.OutputState }

func (BackendResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendResponse)(nil)).Elem()
}

func (o BackendResponseOutput) ToBackendResponseOutput() BackendResponseOutput {
	return o
}

func (o BackendResponseOutput) ToBackendResponseOutputWithContext(ctx context.Context) BackendResponseOutput {
	return o
}

// Location of the backend (IP address or FQDN)
func (o BackendResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The value to use as the host header sent to the backend. If blank or unspecified, this defaults to the incoming host.
func (o BackendResponseOutput) BackendHostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendResponse) *string { return v.BackendHostHeader }).(pulumi.StringPtrOutput)
}

// Whether to enable use of this backend. Permitted values are 'Enabled' or 'Disabled'
func (o BackendResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// The HTTP TCP port number. Must be between 1 and 65535.
func (o BackendResponseOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendResponse) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The HTTPS TCP port number. Must be between 1 and 65535.
func (o BackendResponseOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendResponse) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy.
func (o BackendResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The Approval status for the connection to the Private Link
func (o BackendResponseOutput) PrivateEndpointStatus() pulumi.StringOutput {
	return o.ApplyT(func(v BackendResponse) string { return v.PrivateEndpointStatus }).(pulumi.StringOutput)
}

// The Alias of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
func (o BackendResponseOutput) PrivateLinkAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendResponse) *string { return v.PrivateLinkAlias }).(pulumi.StringPtrOutput)
}

// A custom message to be included in the approval request to connect to the Private Link
func (o BackendResponseOutput) PrivateLinkApprovalMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendResponse) *string { return v.PrivateLinkApprovalMessage }).(pulumi.StringPtrOutput)
}

// The location of the Private Link resource. Required only if 'privateLinkResourceId' is populated
func (o BackendResponseOutput) PrivateLinkLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendResponse) *string { return v.PrivateLinkLocation }).(pulumi.StringPtrOutput)
}

// The Resource Id of the Private Link resource. Populating this optional field indicates that this backend is 'Private'
func (o BackendResponseOutput) PrivateLinkResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendResponse) *string { return v.PrivateLinkResourceId }).(pulumi.StringPtrOutput)
}

// Weight of this endpoint for load balancing purposes.
func (o BackendResponseOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BackendResponse) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type BackendResponseArrayOutput struct{ *pulumi.OutputState }

func (BackendResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendResponse)(nil)).Elem()
}

func (o BackendResponseArrayOutput) ToBackendResponseArrayOutput() BackendResponseArrayOutput {
	return o
}

func (o BackendResponseArrayOutput) ToBackendResponseArrayOutputWithContext(ctx context.Context) BackendResponseArrayOutput {
	return o
}

func (o BackendResponseArrayOutput) Index(i pulumi.IntInput) BackendResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendResponse {
		return vs[0].([]BackendResponse)[vs[1].(int)]
	}).(BackendResponseOutput)
}

// The session detail for a target.
type BastionActiveSessionResponse struct {
	// The protocol used to connect to the target.
	Protocol string `pulumi:"protocol"`
	// The type of the resource.
	ResourceType string `pulumi:"resourceType"`
	// Duration in mins the session has been active.
	SessionDurationInMins float64 `pulumi:"sessionDurationInMins"`
	// A unique id for the session.
	SessionId string `pulumi:"sessionId"`
	// The time when the session started.
	StartTime interface{} `pulumi:"startTime"`
	// The host name of the target.
	TargetHostName string `pulumi:"targetHostName"`
	// The IP Address of the target.
	TargetIpAddress string `pulumi:"targetIpAddress"`
	// The resource group of the target.
	TargetResourceGroup string `pulumi:"targetResourceGroup"`
	// The resource id of the target.
	TargetResourceId string `pulumi:"targetResourceId"`
	// The subscription id for the target virtual machine.
	TargetSubscriptionId string `pulumi:"targetSubscriptionId"`
	// The user name who is active on this session.
	UserName string `pulumi:"userName"`
}

// BastionActiveSessionResponseInput is an input type that accepts BastionActiveSessionResponseArgs and BastionActiveSessionResponseOutput values.
// You can construct a concrete instance of `BastionActiveSessionResponseInput` via:
//
//          BastionActiveSessionResponseArgs{...}
type BastionActiveSessionResponseInput interface {
	pulumi.Input

	ToBastionActiveSessionResponseOutput() BastionActiveSessionResponseOutput
	ToBastionActiveSessionResponseOutputWithContext(context.Context) BastionActiveSessionResponseOutput
}

// The session detail for a target.
type BastionActiveSessionResponseArgs struct {
	// The protocol used to connect to the target.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The type of the resource.
	ResourceType pulumi.StringInput `pulumi:"resourceType"`
	// Duration in mins the session has been active.
	SessionDurationInMins pulumi.Float64Input `pulumi:"sessionDurationInMins"`
	// A unique id for the session.
	SessionId pulumi.StringInput `pulumi:"sessionId"`
	// The time when the session started.
	StartTime pulumi.Input `pulumi:"startTime"`
	// The host name of the target.
	TargetHostName pulumi.StringInput `pulumi:"targetHostName"`
	// The IP Address of the target.
	TargetIpAddress pulumi.StringInput `pulumi:"targetIpAddress"`
	// The resource group of the target.
	TargetResourceGroup pulumi.StringInput `pulumi:"targetResourceGroup"`
	// The resource id of the target.
	TargetResourceId pulumi.StringInput `pulumi:"targetResourceId"`
	// The subscription id for the target virtual machine.
	TargetSubscriptionId pulumi.StringInput `pulumi:"targetSubscriptionId"`
	// The user name who is active on this session.
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (BastionActiveSessionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionActiveSessionResponse)(nil)).Elem()
}

func (i BastionActiveSessionResponseArgs) ToBastionActiveSessionResponseOutput() BastionActiveSessionResponseOutput {
	return i.ToBastionActiveSessionResponseOutputWithContext(context.Background())
}

func (i BastionActiveSessionResponseArgs) ToBastionActiveSessionResponseOutputWithContext(ctx context.Context) BastionActiveSessionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionActiveSessionResponseOutput)
}

// BastionActiveSessionResponseArrayInput is an input type that accepts BastionActiveSessionResponseArray and BastionActiveSessionResponseArrayOutput values.
// You can construct a concrete instance of `BastionActiveSessionResponseArrayInput` via:
//
//          BastionActiveSessionResponseArray{ BastionActiveSessionResponseArgs{...} }
type BastionActiveSessionResponseArrayInput interface {
	pulumi.Input

	ToBastionActiveSessionResponseArrayOutput() BastionActiveSessionResponseArrayOutput
	ToBastionActiveSessionResponseArrayOutputWithContext(context.Context) BastionActiveSessionResponseArrayOutput
}

type BastionActiveSessionResponseArray []BastionActiveSessionResponseInput

func (BastionActiveSessionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BastionActiveSessionResponse)(nil)).Elem()
}

func (i BastionActiveSessionResponseArray) ToBastionActiveSessionResponseArrayOutput() BastionActiveSessionResponseArrayOutput {
	return i.ToBastionActiveSessionResponseArrayOutputWithContext(context.Background())
}

func (i BastionActiveSessionResponseArray) ToBastionActiveSessionResponseArrayOutputWithContext(ctx context.Context) BastionActiveSessionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionActiveSessionResponseArrayOutput)
}

// The session detail for a target.
type BastionActiveSessionResponseOutput struct{ *pulumi.OutputState }

func (BastionActiveSessionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionActiveSessionResponse)(nil)).Elem()
}

func (o BastionActiveSessionResponseOutput) ToBastionActiveSessionResponseOutput() BastionActiveSessionResponseOutput {
	return o
}

func (o BastionActiveSessionResponseOutput) ToBastionActiveSessionResponseOutputWithContext(ctx context.Context) BastionActiveSessionResponseOutput {
	return o
}

// The protocol used to connect to the target.
func (o BastionActiveSessionResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The type of the resource.
func (o BastionActiveSessionResponseOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) string { return v.ResourceType }).(pulumi.StringOutput)
}

// Duration in mins the session has been active.
func (o BastionActiveSessionResponseOutput) SessionDurationInMins() pulumi.Float64Output {
	return o.ApplyT(func(v BastionActiveSessionResponse) float64 { return v.SessionDurationInMins }).(pulumi.Float64Output)
}

// A unique id for the session.
func (o BastionActiveSessionResponseOutput) SessionId() pulumi.StringOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) string { return v.SessionId }).(pulumi.StringOutput)
}

// The time when the session started.
func (o BastionActiveSessionResponseOutput) StartTime() pulumi.AnyOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) interface{} { return v.StartTime }).(pulumi.AnyOutput)
}

// The host name of the target.
func (o BastionActiveSessionResponseOutput) TargetHostName() pulumi.StringOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) string { return v.TargetHostName }).(pulumi.StringOutput)
}

// The IP Address of the target.
func (o BastionActiveSessionResponseOutput) TargetIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) string { return v.TargetIpAddress }).(pulumi.StringOutput)
}

// The resource group of the target.
func (o BastionActiveSessionResponseOutput) TargetResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) string { return v.TargetResourceGroup }).(pulumi.StringOutput)
}

// The resource id of the target.
func (o BastionActiveSessionResponseOutput) TargetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) string { return v.TargetResourceId }).(pulumi.StringOutput)
}

// The subscription id for the target virtual machine.
func (o BastionActiveSessionResponseOutput) TargetSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) string { return v.TargetSubscriptionId }).(pulumi.StringOutput)
}

// The user name who is active on this session.
func (o BastionActiveSessionResponseOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v BastionActiveSessionResponse) string { return v.UserName }).(pulumi.StringOutput)
}

type BastionActiveSessionResponseArrayOutput struct{ *pulumi.OutputState }

func (BastionActiveSessionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BastionActiveSessionResponse)(nil)).Elem()
}

func (o BastionActiveSessionResponseArrayOutput) ToBastionActiveSessionResponseArrayOutput() BastionActiveSessionResponseArrayOutput {
	return o
}

func (o BastionActiveSessionResponseArrayOutput) ToBastionActiveSessionResponseArrayOutputWithContext(ctx context.Context) BastionActiveSessionResponseArrayOutput {
	return o
}

func (o BastionActiveSessionResponseArrayOutput) Index(i pulumi.IntInput) BastionActiveSessionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BastionActiveSessionResponse {
		return vs[0].([]BastionActiveSessionResponse)[vs[1].(int)]
	}).(BastionActiveSessionResponseOutput)
}

// IP configuration of an Bastion Host.
type BastionHostIPConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Private IP allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Reference of the PublicIP resource.
	PublicIPAddress SubResource `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet SubResource `pulumi:"subnet"`
}

// BastionHostIPConfigurationInput is an input type that accepts BastionHostIPConfigurationArgs and BastionHostIPConfigurationOutput values.
// You can construct a concrete instance of `BastionHostIPConfigurationInput` via:
//
//          BastionHostIPConfigurationArgs{...}
type BastionHostIPConfigurationInput interface {
	pulumi.Input

	ToBastionHostIPConfigurationOutput() BastionHostIPConfigurationOutput
	ToBastionHostIPConfigurationOutputWithContext(context.Context) BastionHostIPConfigurationOutput
}

// IP configuration of an Bastion Host.
type BastionHostIPConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Private IP allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Reference of the PublicIP resource.
	PublicIPAddress SubResourceInput `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet SubResourceInput `pulumi:"subnet"`
}

func (BastionHostIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionHostIPConfiguration)(nil)).Elem()
}

func (i BastionHostIPConfigurationArgs) ToBastionHostIPConfigurationOutput() BastionHostIPConfigurationOutput {
	return i.ToBastionHostIPConfigurationOutputWithContext(context.Background())
}

func (i BastionHostIPConfigurationArgs) ToBastionHostIPConfigurationOutputWithContext(ctx context.Context) BastionHostIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionHostIPConfigurationOutput)
}

// BastionHostIPConfigurationArrayInput is an input type that accepts BastionHostIPConfigurationArray and BastionHostIPConfigurationArrayOutput values.
// You can construct a concrete instance of `BastionHostIPConfigurationArrayInput` via:
//
//          BastionHostIPConfigurationArray{ BastionHostIPConfigurationArgs{...} }
type BastionHostIPConfigurationArrayInput interface {
	pulumi.Input

	ToBastionHostIPConfigurationArrayOutput() BastionHostIPConfigurationArrayOutput
	ToBastionHostIPConfigurationArrayOutputWithContext(context.Context) BastionHostIPConfigurationArrayOutput
}

type BastionHostIPConfigurationArray []BastionHostIPConfigurationInput

func (BastionHostIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BastionHostIPConfiguration)(nil)).Elem()
}

func (i BastionHostIPConfigurationArray) ToBastionHostIPConfigurationArrayOutput() BastionHostIPConfigurationArrayOutput {
	return i.ToBastionHostIPConfigurationArrayOutputWithContext(context.Background())
}

func (i BastionHostIPConfigurationArray) ToBastionHostIPConfigurationArrayOutputWithContext(ctx context.Context) BastionHostIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionHostIPConfigurationArrayOutput)
}

// IP configuration of an Bastion Host.
type BastionHostIPConfigurationOutput struct{ *pulumi.OutputState }

func (BastionHostIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionHostIPConfiguration)(nil)).Elem()
}

func (o BastionHostIPConfigurationOutput) ToBastionHostIPConfigurationOutput() BastionHostIPConfigurationOutput {
	return o
}

func (o BastionHostIPConfigurationOutput) ToBastionHostIPConfigurationOutputWithContext(ctx context.Context) BastionHostIPConfigurationOutput {
	return o
}

// Resource ID.
func (o BastionHostIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BastionHostIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o BastionHostIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BastionHostIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Private IP allocation method.
func (o BastionHostIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BastionHostIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Reference of the PublicIP resource.
func (o BastionHostIPConfigurationOutput) PublicIPAddress() SubResourceOutput {
	return o.ApplyT(func(v BastionHostIPConfiguration) SubResource { return v.PublicIPAddress }).(SubResourceOutput)
}

// Reference of the subnet resource.
func (o BastionHostIPConfigurationOutput) Subnet() SubResourceOutput {
	return o.ApplyT(func(v BastionHostIPConfiguration) SubResource { return v.Subnet }).(SubResourceOutput)
}

type BastionHostIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (BastionHostIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BastionHostIPConfiguration)(nil)).Elem()
}

func (o BastionHostIPConfigurationArrayOutput) ToBastionHostIPConfigurationArrayOutput() BastionHostIPConfigurationArrayOutput {
	return o
}

func (o BastionHostIPConfigurationArrayOutput) ToBastionHostIPConfigurationArrayOutputWithContext(ctx context.Context) BastionHostIPConfigurationArrayOutput {
	return o
}

func (o BastionHostIPConfigurationArrayOutput) Index(i pulumi.IntInput) BastionHostIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BastionHostIPConfiguration {
		return vs[0].([]BastionHostIPConfiguration)[vs[1].(int)]
	}).(BastionHostIPConfigurationOutput)
}

// IP configuration of an Bastion Host.
type BastionHostIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Private IP allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the bastion host IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Reference of the PublicIP resource.
	PublicIPAddress SubResourceResponse `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet SubResourceResponse `pulumi:"subnet"`
	// Ip configuration type.
	Type string `pulumi:"type"`
}

// BastionHostIPConfigurationResponseInput is an input type that accepts BastionHostIPConfigurationResponseArgs and BastionHostIPConfigurationResponseOutput values.
// You can construct a concrete instance of `BastionHostIPConfigurationResponseInput` via:
//
//          BastionHostIPConfigurationResponseArgs{...}
type BastionHostIPConfigurationResponseInput interface {
	pulumi.Input

	ToBastionHostIPConfigurationResponseOutput() BastionHostIPConfigurationResponseOutput
	ToBastionHostIPConfigurationResponseOutputWithContext(context.Context) BastionHostIPConfigurationResponseOutput
}

// IP configuration of an Bastion Host.
type BastionHostIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Private IP allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the bastion host IP configuration resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Reference of the PublicIP resource.
	PublicIPAddress SubResourceResponseInput `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet SubResourceResponseInput `pulumi:"subnet"`
	// Ip configuration type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (BastionHostIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionHostIPConfigurationResponse)(nil)).Elem()
}

func (i BastionHostIPConfigurationResponseArgs) ToBastionHostIPConfigurationResponseOutput() BastionHostIPConfigurationResponseOutput {
	return i.ToBastionHostIPConfigurationResponseOutputWithContext(context.Background())
}

func (i BastionHostIPConfigurationResponseArgs) ToBastionHostIPConfigurationResponseOutputWithContext(ctx context.Context) BastionHostIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionHostIPConfigurationResponseOutput)
}

// BastionHostIPConfigurationResponseArrayInput is an input type that accepts BastionHostIPConfigurationResponseArray and BastionHostIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `BastionHostIPConfigurationResponseArrayInput` via:
//
//          BastionHostIPConfigurationResponseArray{ BastionHostIPConfigurationResponseArgs{...} }
type BastionHostIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToBastionHostIPConfigurationResponseArrayOutput() BastionHostIPConfigurationResponseArrayOutput
	ToBastionHostIPConfigurationResponseArrayOutputWithContext(context.Context) BastionHostIPConfigurationResponseArrayOutput
}

type BastionHostIPConfigurationResponseArray []BastionHostIPConfigurationResponseInput

func (BastionHostIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BastionHostIPConfigurationResponse)(nil)).Elem()
}

func (i BastionHostIPConfigurationResponseArray) ToBastionHostIPConfigurationResponseArrayOutput() BastionHostIPConfigurationResponseArrayOutput {
	return i.ToBastionHostIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i BastionHostIPConfigurationResponseArray) ToBastionHostIPConfigurationResponseArrayOutputWithContext(ctx context.Context) BastionHostIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionHostIPConfigurationResponseArrayOutput)
}

// IP configuration of an Bastion Host.
type BastionHostIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (BastionHostIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionHostIPConfigurationResponse)(nil)).Elem()
}

func (o BastionHostIPConfigurationResponseOutput) ToBastionHostIPConfigurationResponseOutput() BastionHostIPConfigurationResponseOutput {
	return o
}

func (o BastionHostIPConfigurationResponseOutput) ToBastionHostIPConfigurationResponseOutputWithContext(ctx context.Context) BastionHostIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o BastionHostIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v BastionHostIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o BastionHostIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BastionHostIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o BastionHostIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BastionHostIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Private IP allocation method.
func (o BastionHostIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BastionHostIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the bastion host IP configuration resource.
func (o BastionHostIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v BastionHostIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Reference of the PublicIP resource.
func (o BastionHostIPConfigurationResponseOutput) PublicIPAddress() SubResourceResponseOutput {
	return o.ApplyT(func(v BastionHostIPConfigurationResponse) SubResourceResponse { return v.PublicIPAddress }).(SubResourceResponseOutput)
}

// Reference of the subnet resource.
func (o BastionHostIPConfigurationResponseOutput) Subnet() SubResourceResponseOutput {
	return o.ApplyT(func(v BastionHostIPConfigurationResponse) SubResourceResponse { return v.Subnet }).(SubResourceResponseOutput)
}

// Ip configuration type.
func (o BastionHostIPConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BastionHostIPConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type BastionHostIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (BastionHostIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BastionHostIPConfigurationResponse)(nil)).Elem()
}

func (o BastionHostIPConfigurationResponseArrayOutput) ToBastionHostIPConfigurationResponseArrayOutput() BastionHostIPConfigurationResponseArrayOutput {
	return o
}

func (o BastionHostIPConfigurationResponseArrayOutput) ToBastionHostIPConfigurationResponseArrayOutputWithContext(ctx context.Context) BastionHostIPConfigurationResponseArrayOutput {
	return o
}

func (o BastionHostIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) BastionHostIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BastionHostIPConfigurationResponse {
		return vs[0].([]BastionHostIPConfigurationResponse)[vs[1].(int)]
	}).(BastionHostIPConfigurationResponseOutput)
}

// Bastion Shareable Link.
type BastionShareableLink struct {
	// Reference of the virtual machine resource.
	Vm VM `pulumi:"vm"`
}

// BastionShareableLinkInput is an input type that accepts BastionShareableLinkArgs and BastionShareableLinkOutput values.
// You can construct a concrete instance of `BastionShareableLinkInput` via:
//
//          BastionShareableLinkArgs{...}
type BastionShareableLinkInput interface {
	pulumi.Input

	ToBastionShareableLinkOutput() BastionShareableLinkOutput
	ToBastionShareableLinkOutputWithContext(context.Context) BastionShareableLinkOutput
}

// Bastion Shareable Link.
type BastionShareableLinkArgs struct {
	// Reference of the virtual machine resource.
	Vm VMInput `pulumi:"vm"`
}

func (BastionShareableLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionShareableLink)(nil)).Elem()
}

func (i BastionShareableLinkArgs) ToBastionShareableLinkOutput() BastionShareableLinkOutput {
	return i.ToBastionShareableLinkOutputWithContext(context.Background())
}

func (i BastionShareableLinkArgs) ToBastionShareableLinkOutputWithContext(ctx context.Context) BastionShareableLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionShareableLinkOutput)
}

// BastionShareableLinkArrayInput is an input type that accepts BastionShareableLinkArray and BastionShareableLinkArrayOutput values.
// You can construct a concrete instance of `BastionShareableLinkArrayInput` via:
//
//          BastionShareableLinkArray{ BastionShareableLinkArgs{...} }
type BastionShareableLinkArrayInput interface {
	pulumi.Input

	ToBastionShareableLinkArrayOutput() BastionShareableLinkArrayOutput
	ToBastionShareableLinkArrayOutputWithContext(context.Context) BastionShareableLinkArrayOutput
}

type BastionShareableLinkArray []BastionShareableLinkInput

func (BastionShareableLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BastionShareableLink)(nil)).Elem()
}

func (i BastionShareableLinkArray) ToBastionShareableLinkArrayOutput() BastionShareableLinkArrayOutput {
	return i.ToBastionShareableLinkArrayOutputWithContext(context.Background())
}

func (i BastionShareableLinkArray) ToBastionShareableLinkArrayOutputWithContext(ctx context.Context) BastionShareableLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionShareableLinkArrayOutput)
}

// Bastion Shareable Link.
type BastionShareableLinkOutput struct{ *pulumi.OutputState }

func (BastionShareableLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionShareableLink)(nil)).Elem()
}

func (o BastionShareableLinkOutput) ToBastionShareableLinkOutput() BastionShareableLinkOutput {
	return o
}

func (o BastionShareableLinkOutput) ToBastionShareableLinkOutputWithContext(ctx context.Context) BastionShareableLinkOutput {
	return o
}

// Reference of the virtual machine resource.
func (o BastionShareableLinkOutput) Vm() VMOutput {
	return o.ApplyT(func(v BastionShareableLink) VM { return v.Vm }).(VMOutput)
}

type BastionShareableLinkArrayOutput struct{ *pulumi.OutputState }

func (BastionShareableLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BastionShareableLink)(nil)).Elem()
}

func (o BastionShareableLinkArrayOutput) ToBastionShareableLinkArrayOutput() BastionShareableLinkArrayOutput {
	return o
}

func (o BastionShareableLinkArrayOutput) ToBastionShareableLinkArrayOutputWithContext(ctx context.Context) BastionShareableLinkArrayOutput {
	return o
}

func (o BastionShareableLinkArrayOutput) Index(i pulumi.IntInput) BastionShareableLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BastionShareableLink {
		return vs[0].([]BastionShareableLink)[vs[1].(int)]
	}).(BastionShareableLinkOutput)
}

// Bastion Shareable Link.
type BastionShareableLinkResponse struct {
	// The unique Bastion Shareable Link to the virtual machine.
	Bsl string `pulumi:"bsl"`
	// The time when the link was created.
	CreatedAt string `pulumi:"createdAt"`
	// Optional field indicating the warning or error message related to the vm in case of partial failure.
	Message string `pulumi:"message"`
	// Reference of the virtual machine resource.
	Vm VMResponse `pulumi:"vm"`
}

// BastionShareableLinkResponseInput is an input type that accepts BastionShareableLinkResponseArgs and BastionShareableLinkResponseOutput values.
// You can construct a concrete instance of `BastionShareableLinkResponseInput` via:
//
//          BastionShareableLinkResponseArgs{...}
type BastionShareableLinkResponseInput interface {
	pulumi.Input

	ToBastionShareableLinkResponseOutput() BastionShareableLinkResponseOutput
	ToBastionShareableLinkResponseOutputWithContext(context.Context) BastionShareableLinkResponseOutput
}

// Bastion Shareable Link.
type BastionShareableLinkResponseArgs struct {
	// The unique Bastion Shareable Link to the virtual machine.
	Bsl pulumi.StringInput `pulumi:"bsl"`
	// The time when the link was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// Optional field indicating the warning or error message related to the vm in case of partial failure.
	Message pulumi.StringInput `pulumi:"message"`
	// Reference of the virtual machine resource.
	Vm VMResponseInput `pulumi:"vm"`
}

func (BastionShareableLinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionShareableLinkResponse)(nil)).Elem()
}

func (i BastionShareableLinkResponseArgs) ToBastionShareableLinkResponseOutput() BastionShareableLinkResponseOutput {
	return i.ToBastionShareableLinkResponseOutputWithContext(context.Background())
}

func (i BastionShareableLinkResponseArgs) ToBastionShareableLinkResponseOutputWithContext(ctx context.Context) BastionShareableLinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionShareableLinkResponseOutput)
}

// BastionShareableLinkResponseArrayInput is an input type that accepts BastionShareableLinkResponseArray and BastionShareableLinkResponseArrayOutput values.
// You can construct a concrete instance of `BastionShareableLinkResponseArrayInput` via:
//
//          BastionShareableLinkResponseArray{ BastionShareableLinkResponseArgs{...} }
type BastionShareableLinkResponseArrayInput interface {
	pulumi.Input

	ToBastionShareableLinkResponseArrayOutput() BastionShareableLinkResponseArrayOutput
	ToBastionShareableLinkResponseArrayOutputWithContext(context.Context) BastionShareableLinkResponseArrayOutput
}

type BastionShareableLinkResponseArray []BastionShareableLinkResponseInput

func (BastionShareableLinkResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BastionShareableLinkResponse)(nil)).Elem()
}

func (i BastionShareableLinkResponseArray) ToBastionShareableLinkResponseArrayOutput() BastionShareableLinkResponseArrayOutput {
	return i.ToBastionShareableLinkResponseArrayOutputWithContext(context.Background())
}

func (i BastionShareableLinkResponseArray) ToBastionShareableLinkResponseArrayOutputWithContext(ctx context.Context) BastionShareableLinkResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BastionShareableLinkResponseArrayOutput)
}

// Bastion Shareable Link.
type BastionShareableLinkResponseOutput struct{ *pulumi.OutputState }

func (BastionShareableLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BastionShareableLinkResponse)(nil)).Elem()
}

func (o BastionShareableLinkResponseOutput) ToBastionShareableLinkResponseOutput() BastionShareableLinkResponseOutput {
	return o
}

func (o BastionShareableLinkResponseOutput) ToBastionShareableLinkResponseOutputWithContext(ctx context.Context) BastionShareableLinkResponseOutput {
	return o
}

// The unique Bastion Shareable Link to the virtual machine.
func (o BastionShareableLinkResponseOutput) Bsl() pulumi.StringOutput {
	return o.ApplyT(func(v BastionShareableLinkResponse) string { return v.Bsl }).(pulumi.StringOutput)
}

// The time when the link was created.
func (o BastionShareableLinkResponseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v BastionShareableLinkResponse) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Optional field indicating the warning or error message related to the vm in case of partial failure.
func (o BastionShareableLinkResponseOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v BastionShareableLinkResponse) string { return v.Message }).(pulumi.StringOutput)
}

// Reference of the virtual machine resource.
func (o BastionShareableLinkResponseOutput) Vm() VMResponseOutput {
	return o.ApplyT(func(v BastionShareableLinkResponse) VMResponse { return v.Vm }).(VMResponseOutput)
}

type BastionShareableLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (BastionShareableLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BastionShareableLinkResponse)(nil)).Elem()
}

func (o BastionShareableLinkResponseArrayOutput) ToBastionShareableLinkResponseArrayOutput() BastionShareableLinkResponseArrayOutput {
	return o
}

func (o BastionShareableLinkResponseArrayOutput) ToBastionShareableLinkResponseArrayOutputWithContext(ctx context.Context) BastionShareableLinkResponseArrayOutput {
	return o
}

func (o BastionShareableLinkResponseArrayOutput) Index(i pulumi.IntInput) BastionShareableLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BastionShareableLinkResponse {
		return vs[0].([]BastionShareableLinkResponse)[vs[1].(int)]
	}).(BastionShareableLinkResponseOutput)
}

// BGP peer status details.
type BgpPeerStatusResponse struct {
	// The autonomous system number of the remote BGP peer.
	Asn int `pulumi:"asn"`
	// For how long the peering has been up.
	ConnectedDuration string `pulumi:"connectedDuration"`
	// The virtual network gateway's local address.
	LocalAddress string `pulumi:"localAddress"`
	// The number of BGP messages received.
	MessagesReceived int `pulumi:"messagesReceived"`
	// The number of BGP messages sent.
	MessagesSent int `pulumi:"messagesSent"`
	// The remote BGP peer.
	Neighbor string `pulumi:"neighbor"`
	// The number of routes learned from this peer.
	RoutesReceived int `pulumi:"routesReceived"`
	// The BGP peer state.
	State string `pulumi:"state"`
}

// BgpPeerStatusResponseInput is an input type that accepts BgpPeerStatusResponseArgs and BgpPeerStatusResponseOutput values.
// You can construct a concrete instance of `BgpPeerStatusResponseInput` via:
//
//          BgpPeerStatusResponseArgs{...}
type BgpPeerStatusResponseInput interface {
	pulumi.Input

	ToBgpPeerStatusResponseOutput() BgpPeerStatusResponseOutput
	ToBgpPeerStatusResponseOutputWithContext(context.Context) BgpPeerStatusResponseOutput
}

// BGP peer status details.
type BgpPeerStatusResponseArgs struct {
	// The autonomous system number of the remote BGP peer.
	Asn pulumi.IntInput `pulumi:"asn"`
	// For how long the peering has been up.
	ConnectedDuration pulumi.StringInput `pulumi:"connectedDuration"`
	// The virtual network gateway's local address.
	LocalAddress pulumi.StringInput `pulumi:"localAddress"`
	// The number of BGP messages received.
	MessagesReceived pulumi.IntInput `pulumi:"messagesReceived"`
	// The number of BGP messages sent.
	MessagesSent pulumi.IntInput `pulumi:"messagesSent"`
	// The remote BGP peer.
	Neighbor pulumi.StringInput `pulumi:"neighbor"`
	// The number of routes learned from this peer.
	RoutesReceived pulumi.IntInput `pulumi:"routesReceived"`
	// The BGP peer state.
	State pulumi.StringInput `pulumi:"state"`
}

func (BgpPeerStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpPeerStatusResponse)(nil)).Elem()
}

func (i BgpPeerStatusResponseArgs) ToBgpPeerStatusResponseOutput() BgpPeerStatusResponseOutput {
	return i.ToBgpPeerStatusResponseOutputWithContext(context.Background())
}

func (i BgpPeerStatusResponseArgs) ToBgpPeerStatusResponseOutputWithContext(ctx context.Context) BgpPeerStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpPeerStatusResponseOutput)
}

// BgpPeerStatusResponseArrayInput is an input type that accepts BgpPeerStatusResponseArray and BgpPeerStatusResponseArrayOutput values.
// You can construct a concrete instance of `BgpPeerStatusResponseArrayInput` via:
//
//          BgpPeerStatusResponseArray{ BgpPeerStatusResponseArgs{...} }
type BgpPeerStatusResponseArrayInput interface {
	pulumi.Input

	ToBgpPeerStatusResponseArrayOutput() BgpPeerStatusResponseArrayOutput
	ToBgpPeerStatusResponseArrayOutputWithContext(context.Context) BgpPeerStatusResponseArrayOutput
}

type BgpPeerStatusResponseArray []BgpPeerStatusResponseInput

func (BgpPeerStatusResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpPeerStatusResponse)(nil)).Elem()
}

func (i BgpPeerStatusResponseArray) ToBgpPeerStatusResponseArrayOutput() BgpPeerStatusResponseArrayOutput {
	return i.ToBgpPeerStatusResponseArrayOutputWithContext(context.Background())
}

func (i BgpPeerStatusResponseArray) ToBgpPeerStatusResponseArrayOutputWithContext(ctx context.Context) BgpPeerStatusResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpPeerStatusResponseArrayOutput)
}

// BGP peer status details.
type BgpPeerStatusResponseOutput struct{ *pulumi.OutputState }

func (BgpPeerStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpPeerStatusResponse)(nil)).Elem()
}

func (o BgpPeerStatusResponseOutput) ToBgpPeerStatusResponseOutput() BgpPeerStatusResponseOutput {
	return o
}

func (o BgpPeerStatusResponseOutput) ToBgpPeerStatusResponseOutputWithContext(ctx context.Context) BgpPeerStatusResponseOutput {
	return o
}

// The autonomous system number of the remote BGP peer.
func (o BgpPeerStatusResponseOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) int { return v.Asn }).(pulumi.IntOutput)
}

// For how long the peering has been up.
func (o BgpPeerStatusResponseOutput) ConnectedDuration() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) string { return v.ConnectedDuration }).(pulumi.StringOutput)
}

// The virtual network gateway's local address.
func (o BgpPeerStatusResponseOutput) LocalAddress() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) string { return v.LocalAddress }).(pulumi.StringOutput)
}

// The number of BGP messages received.
func (o BgpPeerStatusResponseOutput) MessagesReceived() pulumi.IntOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) int { return v.MessagesReceived }).(pulumi.IntOutput)
}

// The number of BGP messages sent.
func (o BgpPeerStatusResponseOutput) MessagesSent() pulumi.IntOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) int { return v.MessagesSent }).(pulumi.IntOutput)
}

// The remote BGP peer.
func (o BgpPeerStatusResponseOutput) Neighbor() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) string { return v.Neighbor }).(pulumi.StringOutput)
}

// The number of routes learned from this peer.
func (o BgpPeerStatusResponseOutput) RoutesReceived() pulumi.IntOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) int { return v.RoutesReceived }).(pulumi.IntOutput)
}

// The BGP peer state.
func (o BgpPeerStatusResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) string { return v.State }).(pulumi.StringOutput)
}

type BgpPeerStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (BgpPeerStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpPeerStatusResponse)(nil)).Elem()
}

func (o BgpPeerStatusResponseArrayOutput) ToBgpPeerStatusResponseArrayOutput() BgpPeerStatusResponseArrayOutput {
	return o
}

func (o BgpPeerStatusResponseArrayOutput) ToBgpPeerStatusResponseArrayOutputWithContext(ctx context.Context) BgpPeerStatusResponseArrayOutput {
	return o
}

func (o BgpPeerStatusResponseArrayOutput) Index(i pulumi.IntInput) BgpPeerStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpPeerStatusResponse {
		return vs[0].([]BgpPeerStatusResponse)[vs[1].(int)]
	}).(BgpPeerStatusResponseOutput)
}

// BGP settings details.
type BgpSettings struct {
	// The BGP speaker's ASN.
	Asn *int `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress *string `pulumi:"bgpPeeringAddress"`
	// BGP peering address with IP configuration ID for virtual network gateway.
	BgpPeeringAddresses []IPConfigurationBgpPeeringAddress `pulumi:"bgpPeeringAddresses"`
	// The weight added to routes learned from this BGP speaker.
	PeerWeight *int `pulumi:"peerWeight"`
}

// BgpSettingsInput is an input type that accepts BgpSettingsArgs and BgpSettingsOutput values.
// You can construct a concrete instance of `BgpSettingsInput` via:
//
//          BgpSettingsArgs{...}
type BgpSettingsInput interface {
	pulumi.Input

	ToBgpSettingsOutput() BgpSettingsOutput
	ToBgpSettingsOutputWithContext(context.Context) BgpSettingsOutput
}

// BGP settings details.
type BgpSettingsArgs struct {
	// The BGP speaker's ASN.
	Asn pulumi.IntPtrInput `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress pulumi.StringPtrInput `pulumi:"bgpPeeringAddress"`
	// BGP peering address with IP configuration ID for virtual network gateway.
	BgpPeeringAddresses IPConfigurationBgpPeeringAddressArrayInput `pulumi:"bgpPeeringAddresses"`
	// The weight added to routes learned from this BGP speaker.
	PeerWeight pulumi.IntPtrInput `pulumi:"peerWeight"`
}

func (BgpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettings)(nil)).Elem()
}

func (i BgpSettingsArgs) ToBgpSettingsOutput() BgpSettingsOutput {
	return i.ToBgpSettingsOutputWithContext(context.Background())
}

func (i BgpSettingsArgs) ToBgpSettingsOutputWithContext(ctx context.Context) BgpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsOutput)
}

func (i BgpSettingsArgs) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return i.ToBgpSettingsPtrOutputWithContext(context.Background())
}

func (i BgpSettingsArgs) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsOutput).ToBgpSettingsPtrOutputWithContext(ctx)
}

// BgpSettingsPtrInput is an input type that accepts BgpSettingsArgs, BgpSettingsPtr and BgpSettingsPtrOutput values.
// You can construct a concrete instance of `BgpSettingsPtrInput` via:
//
//          BgpSettingsArgs{...}
//
//  or:
//
//          nil
type BgpSettingsPtrInput interface {
	pulumi.Input

	ToBgpSettingsPtrOutput() BgpSettingsPtrOutput
	ToBgpSettingsPtrOutputWithContext(context.Context) BgpSettingsPtrOutput
}

type bgpSettingsPtrType BgpSettingsArgs

func BgpSettingsPtr(v *BgpSettingsArgs) BgpSettingsPtrInput {
	return (*bgpSettingsPtrType)(v)
}

func (*bgpSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettings)(nil)).Elem()
}

func (i *bgpSettingsPtrType) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return i.ToBgpSettingsPtrOutputWithContext(context.Background())
}

func (i *bgpSettingsPtrType) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsPtrOutput)
}

// BGP settings details.
type BgpSettingsOutput struct{ *pulumi.OutputState }

func (BgpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettings)(nil)).Elem()
}

func (o BgpSettingsOutput) ToBgpSettingsOutput() BgpSettingsOutput {
	return o
}

func (o BgpSettingsOutput) ToBgpSettingsOutputWithContext(ctx context.Context) BgpSettingsOutput {
	return o
}

func (o BgpSettingsOutput) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return o.ToBgpSettingsPtrOutputWithContext(context.Background())
}

func (o BgpSettingsOutput) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return o.ApplyT(func(v BgpSettings) *BgpSettings {
		return &v
	}).(BgpSettingsPtrOutput)
}

// The BGP speaker's ASN.
func (o BgpSettingsOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpSettings) *int { return v.Asn }).(pulumi.IntPtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o BgpSettingsOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpSettings) *string { return v.BgpPeeringAddress }).(pulumi.StringPtrOutput)
}

// BGP peering address with IP configuration ID for virtual network gateway.
func (o BgpSettingsOutput) BgpPeeringAddresses() IPConfigurationBgpPeeringAddressArrayOutput {
	return o.ApplyT(func(v BgpSettings) []IPConfigurationBgpPeeringAddress { return v.BgpPeeringAddresses }).(IPConfigurationBgpPeeringAddressArrayOutput)
}

// The weight added to routes learned from this BGP speaker.
func (o BgpSettingsOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpSettings) *int { return v.PeerWeight }).(pulumi.IntPtrOutput)
}

type BgpSettingsPtrOutput struct{ *pulumi.OutputState }

func (BgpSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettings)(nil)).Elem()
}

func (o BgpSettingsPtrOutput) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return o
}

func (o BgpSettingsPtrOutput) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return o
}

func (o BgpSettingsPtrOutput) Elem() BgpSettingsOutput {
	return o.ApplyT(func(v *BgpSettings) BgpSettings { return *v }).(BgpSettingsOutput)
}

// The BGP speaker's ASN.
func (o BgpSettingsPtrOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpSettings) *int {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.IntPtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o BgpSettingsPtrOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpSettings) *string {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddress
	}).(pulumi.StringPtrOutput)
}

// BGP peering address with IP configuration ID for virtual network gateway.
func (o BgpSettingsPtrOutput) BgpPeeringAddresses() IPConfigurationBgpPeeringAddressArrayOutput {
	return o.ApplyT(func(v *BgpSettings) []IPConfigurationBgpPeeringAddress {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddresses
	}).(IPConfigurationBgpPeeringAddressArrayOutput)
}

// The weight added to routes learned from this BGP speaker.
func (o BgpSettingsPtrOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpSettings) *int {
		if v == nil {
			return nil
		}
		return v.PeerWeight
	}).(pulumi.IntPtrOutput)
}

// BGP settings details.
type BgpSettingsResponse struct {
	// The BGP speaker's ASN.
	Asn *int `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress *string `pulumi:"bgpPeeringAddress"`
	// BGP peering address with IP configuration ID for virtual network gateway.
	BgpPeeringAddresses []IPConfigurationBgpPeeringAddressResponse `pulumi:"bgpPeeringAddresses"`
	// The weight added to routes learned from this BGP speaker.
	PeerWeight *int `pulumi:"peerWeight"`
}

// BgpSettingsResponseInput is an input type that accepts BgpSettingsResponseArgs and BgpSettingsResponseOutput values.
// You can construct a concrete instance of `BgpSettingsResponseInput` via:
//
//          BgpSettingsResponseArgs{...}
type BgpSettingsResponseInput interface {
	pulumi.Input

	ToBgpSettingsResponseOutput() BgpSettingsResponseOutput
	ToBgpSettingsResponseOutputWithContext(context.Context) BgpSettingsResponseOutput
}

// BGP settings details.
type BgpSettingsResponseArgs struct {
	// The BGP speaker's ASN.
	Asn pulumi.IntPtrInput `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress pulumi.StringPtrInput `pulumi:"bgpPeeringAddress"`
	// BGP peering address with IP configuration ID for virtual network gateway.
	BgpPeeringAddresses IPConfigurationBgpPeeringAddressResponseArrayInput `pulumi:"bgpPeeringAddresses"`
	// The weight added to routes learned from this BGP speaker.
	PeerWeight pulumi.IntPtrInput `pulumi:"peerWeight"`
}

func (BgpSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettingsResponse)(nil)).Elem()
}

func (i BgpSettingsResponseArgs) ToBgpSettingsResponseOutput() BgpSettingsResponseOutput {
	return i.ToBgpSettingsResponseOutputWithContext(context.Background())
}

func (i BgpSettingsResponseArgs) ToBgpSettingsResponseOutputWithContext(ctx context.Context) BgpSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsResponseOutput)
}

func (i BgpSettingsResponseArgs) ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput {
	return i.ToBgpSettingsResponsePtrOutputWithContext(context.Background())
}

func (i BgpSettingsResponseArgs) ToBgpSettingsResponsePtrOutputWithContext(ctx context.Context) BgpSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsResponseOutput).ToBgpSettingsResponsePtrOutputWithContext(ctx)
}

// BgpSettingsResponsePtrInput is an input type that accepts BgpSettingsResponseArgs, BgpSettingsResponsePtr and BgpSettingsResponsePtrOutput values.
// You can construct a concrete instance of `BgpSettingsResponsePtrInput` via:
//
//          BgpSettingsResponseArgs{...}
//
//  or:
//
//          nil
type BgpSettingsResponsePtrInput interface {
	pulumi.Input

	ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput
	ToBgpSettingsResponsePtrOutputWithContext(context.Context) BgpSettingsResponsePtrOutput
}

type bgpSettingsResponsePtrType BgpSettingsResponseArgs

func BgpSettingsResponsePtr(v *BgpSettingsResponseArgs) BgpSettingsResponsePtrInput {
	return (*bgpSettingsResponsePtrType)(v)
}

func (*bgpSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettingsResponse)(nil)).Elem()
}

func (i *bgpSettingsResponsePtrType) ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput {
	return i.ToBgpSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *bgpSettingsResponsePtrType) ToBgpSettingsResponsePtrOutputWithContext(ctx context.Context) BgpSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsResponsePtrOutput)
}

// BGP settings details.
type BgpSettingsResponseOutput struct{ *pulumi.OutputState }

func (BgpSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettingsResponse)(nil)).Elem()
}

func (o BgpSettingsResponseOutput) ToBgpSettingsResponseOutput() BgpSettingsResponseOutput {
	return o
}

func (o BgpSettingsResponseOutput) ToBgpSettingsResponseOutputWithContext(ctx context.Context) BgpSettingsResponseOutput {
	return o
}

func (o BgpSettingsResponseOutput) ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput {
	return o.ToBgpSettingsResponsePtrOutputWithContext(context.Background())
}

func (o BgpSettingsResponseOutput) ToBgpSettingsResponsePtrOutputWithContext(ctx context.Context) BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v BgpSettingsResponse) *BgpSettingsResponse {
		return &v
	}).(BgpSettingsResponsePtrOutput)
}

// The BGP speaker's ASN.
func (o BgpSettingsResponseOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpSettingsResponse) *int { return v.Asn }).(pulumi.IntPtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o BgpSettingsResponseOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpSettingsResponse) *string { return v.BgpPeeringAddress }).(pulumi.StringPtrOutput)
}

// BGP peering address with IP configuration ID for virtual network gateway.
func (o BgpSettingsResponseOutput) BgpPeeringAddresses() IPConfigurationBgpPeeringAddressResponseArrayOutput {
	return o.ApplyT(func(v BgpSettingsResponse) []IPConfigurationBgpPeeringAddressResponse { return v.BgpPeeringAddresses }).(IPConfigurationBgpPeeringAddressResponseArrayOutput)
}

// The weight added to routes learned from this BGP speaker.
func (o BgpSettingsResponseOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpSettingsResponse) *int { return v.PeerWeight }).(pulumi.IntPtrOutput)
}

type BgpSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (BgpSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettingsResponse)(nil)).Elem()
}

func (o BgpSettingsResponsePtrOutput) ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput {
	return o
}

func (o BgpSettingsResponsePtrOutput) ToBgpSettingsResponsePtrOutputWithContext(ctx context.Context) BgpSettingsResponsePtrOutput {
	return o
}

func (o BgpSettingsResponsePtrOutput) Elem() BgpSettingsResponseOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) BgpSettingsResponse { return *v }).(BgpSettingsResponseOutput)
}

// The BGP speaker's ASN.
func (o BgpSettingsResponsePtrOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.IntPtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o BgpSettingsResponsePtrOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddress
	}).(pulumi.StringPtrOutput)
}

// BGP peering address with IP configuration ID for virtual network gateway.
func (o BgpSettingsResponsePtrOutput) BgpPeeringAddresses() IPConfigurationBgpPeeringAddressResponseArrayOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) []IPConfigurationBgpPeeringAddressResponse {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddresses
	}).(IPConfigurationBgpPeeringAddressResponseArrayOutput)
}

// The weight added to routes learned from this BGP speaker.
func (o BgpSettingsResponsePtrOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.PeerWeight
	}).(pulumi.IntPtrOutput)
}

// Network Virtual Appliance Sku Properties.
type BreakOutCategoryPolicies struct {
	// Flag to control breakout of o365 allow category.
	Allow *bool `pulumi:"allow"`
	// Flag to control breakout of o365 default category.
	Default *bool `pulumi:"default"`
	// Flag to control breakout of o365 optimize category.
	Optimize *bool `pulumi:"optimize"`
}

// BreakOutCategoryPoliciesInput is an input type that accepts BreakOutCategoryPoliciesArgs and BreakOutCategoryPoliciesOutput values.
// You can construct a concrete instance of `BreakOutCategoryPoliciesInput` via:
//
//          BreakOutCategoryPoliciesArgs{...}
type BreakOutCategoryPoliciesInput interface {
	pulumi.Input

	ToBreakOutCategoryPoliciesOutput() BreakOutCategoryPoliciesOutput
	ToBreakOutCategoryPoliciesOutputWithContext(context.Context) BreakOutCategoryPoliciesOutput
}

// Network Virtual Appliance Sku Properties.
type BreakOutCategoryPoliciesArgs struct {
	// Flag to control breakout of o365 allow category.
	Allow pulumi.BoolPtrInput `pulumi:"allow"`
	// Flag to control breakout of o365 default category.
	Default pulumi.BoolPtrInput `pulumi:"default"`
	// Flag to control breakout of o365 optimize category.
	Optimize pulumi.BoolPtrInput `pulumi:"optimize"`
}

func (BreakOutCategoryPoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BreakOutCategoryPolicies)(nil)).Elem()
}

func (i BreakOutCategoryPoliciesArgs) ToBreakOutCategoryPoliciesOutput() BreakOutCategoryPoliciesOutput {
	return i.ToBreakOutCategoryPoliciesOutputWithContext(context.Background())
}

func (i BreakOutCategoryPoliciesArgs) ToBreakOutCategoryPoliciesOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BreakOutCategoryPoliciesOutput)
}

func (i BreakOutCategoryPoliciesArgs) ToBreakOutCategoryPoliciesPtrOutput() BreakOutCategoryPoliciesPtrOutput {
	return i.ToBreakOutCategoryPoliciesPtrOutputWithContext(context.Background())
}

func (i BreakOutCategoryPoliciesArgs) ToBreakOutCategoryPoliciesPtrOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BreakOutCategoryPoliciesOutput).ToBreakOutCategoryPoliciesPtrOutputWithContext(ctx)
}

// BreakOutCategoryPoliciesPtrInput is an input type that accepts BreakOutCategoryPoliciesArgs, BreakOutCategoryPoliciesPtr and BreakOutCategoryPoliciesPtrOutput values.
// You can construct a concrete instance of `BreakOutCategoryPoliciesPtrInput` via:
//
//          BreakOutCategoryPoliciesArgs{...}
//
//  or:
//
//          nil
type BreakOutCategoryPoliciesPtrInput interface {
	pulumi.Input

	ToBreakOutCategoryPoliciesPtrOutput() BreakOutCategoryPoliciesPtrOutput
	ToBreakOutCategoryPoliciesPtrOutputWithContext(context.Context) BreakOutCategoryPoliciesPtrOutput
}

type breakOutCategoryPoliciesPtrType BreakOutCategoryPoliciesArgs

func BreakOutCategoryPoliciesPtr(v *BreakOutCategoryPoliciesArgs) BreakOutCategoryPoliciesPtrInput {
	return (*breakOutCategoryPoliciesPtrType)(v)
}

func (*breakOutCategoryPoliciesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BreakOutCategoryPolicies)(nil)).Elem()
}

func (i *breakOutCategoryPoliciesPtrType) ToBreakOutCategoryPoliciesPtrOutput() BreakOutCategoryPoliciesPtrOutput {
	return i.ToBreakOutCategoryPoliciesPtrOutputWithContext(context.Background())
}

func (i *breakOutCategoryPoliciesPtrType) ToBreakOutCategoryPoliciesPtrOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BreakOutCategoryPoliciesPtrOutput)
}

// Network Virtual Appliance Sku Properties.
type BreakOutCategoryPoliciesOutput struct{ *pulumi.OutputState }

func (BreakOutCategoryPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BreakOutCategoryPolicies)(nil)).Elem()
}

func (o BreakOutCategoryPoliciesOutput) ToBreakOutCategoryPoliciesOutput() BreakOutCategoryPoliciesOutput {
	return o
}

func (o BreakOutCategoryPoliciesOutput) ToBreakOutCategoryPoliciesOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesOutput {
	return o
}

func (o BreakOutCategoryPoliciesOutput) ToBreakOutCategoryPoliciesPtrOutput() BreakOutCategoryPoliciesPtrOutput {
	return o.ToBreakOutCategoryPoliciesPtrOutputWithContext(context.Background())
}

func (o BreakOutCategoryPoliciesOutput) ToBreakOutCategoryPoliciesPtrOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesPtrOutput {
	return o.ApplyT(func(v BreakOutCategoryPolicies) *BreakOutCategoryPolicies {
		return &v
	}).(BreakOutCategoryPoliciesPtrOutput)
}

// Flag to control breakout of o365 allow category.
func (o BreakOutCategoryPoliciesOutput) Allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BreakOutCategoryPolicies) *bool { return v.Allow }).(pulumi.BoolPtrOutput)
}

// Flag to control breakout of o365 default category.
func (o BreakOutCategoryPoliciesOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BreakOutCategoryPolicies) *bool { return v.Default }).(pulumi.BoolPtrOutput)
}

// Flag to control breakout of o365 optimize category.
func (o BreakOutCategoryPoliciesOutput) Optimize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BreakOutCategoryPolicies) *bool { return v.Optimize }).(pulumi.BoolPtrOutput)
}

type BreakOutCategoryPoliciesPtrOutput struct{ *pulumi.OutputState }

func (BreakOutCategoryPoliciesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BreakOutCategoryPolicies)(nil)).Elem()
}

func (o BreakOutCategoryPoliciesPtrOutput) ToBreakOutCategoryPoliciesPtrOutput() BreakOutCategoryPoliciesPtrOutput {
	return o
}

func (o BreakOutCategoryPoliciesPtrOutput) ToBreakOutCategoryPoliciesPtrOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesPtrOutput {
	return o
}

func (o BreakOutCategoryPoliciesPtrOutput) Elem() BreakOutCategoryPoliciesOutput {
	return o.ApplyT(func(v *BreakOutCategoryPolicies) BreakOutCategoryPolicies { return *v }).(BreakOutCategoryPoliciesOutput)
}

// Flag to control breakout of o365 allow category.
func (o BreakOutCategoryPoliciesPtrOutput) Allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BreakOutCategoryPolicies) *bool {
		if v == nil {
			return nil
		}
		return v.Allow
	}).(pulumi.BoolPtrOutput)
}

// Flag to control breakout of o365 default category.
func (o BreakOutCategoryPoliciesPtrOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BreakOutCategoryPolicies) *bool {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.BoolPtrOutput)
}

// Flag to control breakout of o365 optimize category.
func (o BreakOutCategoryPoliciesPtrOutput) Optimize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BreakOutCategoryPolicies) *bool {
		if v == nil {
			return nil
		}
		return v.Optimize
	}).(pulumi.BoolPtrOutput)
}

// Network Virtual Appliance Sku Properties.
type BreakOutCategoryPoliciesResponse struct {
	// Flag to control breakout of o365 allow category.
	Allow *bool `pulumi:"allow"`
	// Flag to control breakout of o365 default category.
	Default *bool `pulumi:"default"`
	// Flag to control breakout of o365 optimize category.
	Optimize *bool `pulumi:"optimize"`
}

// BreakOutCategoryPoliciesResponseInput is an input type that accepts BreakOutCategoryPoliciesResponseArgs and BreakOutCategoryPoliciesResponseOutput values.
// You can construct a concrete instance of `BreakOutCategoryPoliciesResponseInput` via:
//
//          BreakOutCategoryPoliciesResponseArgs{...}
type BreakOutCategoryPoliciesResponseInput interface {
	pulumi.Input

	ToBreakOutCategoryPoliciesResponseOutput() BreakOutCategoryPoliciesResponseOutput
	ToBreakOutCategoryPoliciesResponseOutputWithContext(context.Context) BreakOutCategoryPoliciesResponseOutput
}

// Network Virtual Appliance Sku Properties.
type BreakOutCategoryPoliciesResponseArgs struct {
	// Flag to control breakout of o365 allow category.
	Allow pulumi.BoolPtrInput `pulumi:"allow"`
	// Flag to control breakout of o365 default category.
	Default pulumi.BoolPtrInput `pulumi:"default"`
	// Flag to control breakout of o365 optimize category.
	Optimize pulumi.BoolPtrInput `pulumi:"optimize"`
}

func (BreakOutCategoryPoliciesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BreakOutCategoryPoliciesResponse)(nil)).Elem()
}

func (i BreakOutCategoryPoliciesResponseArgs) ToBreakOutCategoryPoliciesResponseOutput() BreakOutCategoryPoliciesResponseOutput {
	return i.ToBreakOutCategoryPoliciesResponseOutputWithContext(context.Background())
}

func (i BreakOutCategoryPoliciesResponseArgs) ToBreakOutCategoryPoliciesResponseOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BreakOutCategoryPoliciesResponseOutput)
}

func (i BreakOutCategoryPoliciesResponseArgs) ToBreakOutCategoryPoliciesResponsePtrOutput() BreakOutCategoryPoliciesResponsePtrOutput {
	return i.ToBreakOutCategoryPoliciesResponsePtrOutputWithContext(context.Background())
}

func (i BreakOutCategoryPoliciesResponseArgs) ToBreakOutCategoryPoliciesResponsePtrOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BreakOutCategoryPoliciesResponseOutput).ToBreakOutCategoryPoliciesResponsePtrOutputWithContext(ctx)
}

// BreakOutCategoryPoliciesResponsePtrInput is an input type that accepts BreakOutCategoryPoliciesResponseArgs, BreakOutCategoryPoliciesResponsePtr and BreakOutCategoryPoliciesResponsePtrOutput values.
// You can construct a concrete instance of `BreakOutCategoryPoliciesResponsePtrInput` via:
//
//          BreakOutCategoryPoliciesResponseArgs{...}
//
//  or:
//
//          nil
type BreakOutCategoryPoliciesResponsePtrInput interface {
	pulumi.Input

	ToBreakOutCategoryPoliciesResponsePtrOutput() BreakOutCategoryPoliciesResponsePtrOutput
	ToBreakOutCategoryPoliciesResponsePtrOutputWithContext(context.Context) BreakOutCategoryPoliciesResponsePtrOutput
}

type breakOutCategoryPoliciesResponsePtrType BreakOutCategoryPoliciesResponseArgs

func BreakOutCategoryPoliciesResponsePtr(v *BreakOutCategoryPoliciesResponseArgs) BreakOutCategoryPoliciesResponsePtrInput {
	return (*breakOutCategoryPoliciesResponsePtrType)(v)
}

func (*breakOutCategoryPoliciesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BreakOutCategoryPoliciesResponse)(nil)).Elem()
}

func (i *breakOutCategoryPoliciesResponsePtrType) ToBreakOutCategoryPoliciesResponsePtrOutput() BreakOutCategoryPoliciesResponsePtrOutput {
	return i.ToBreakOutCategoryPoliciesResponsePtrOutputWithContext(context.Background())
}

func (i *breakOutCategoryPoliciesResponsePtrType) ToBreakOutCategoryPoliciesResponsePtrOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BreakOutCategoryPoliciesResponsePtrOutput)
}

// Network Virtual Appliance Sku Properties.
type BreakOutCategoryPoliciesResponseOutput struct{ *pulumi.OutputState }

func (BreakOutCategoryPoliciesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BreakOutCategoryPoliciesResponse)(nil)).Elem()
}

func (o BreakOutCategoryPoliciesResponseOutput) ToBreakOutCategoryPoliciesResponseOutput() BreakOutCategoryPoliciesResponseOutput {
	return o
}

func (o BreakOutCategoryPoliciesResponseOutput) ToBreakOutCategoryPoliciesResponseOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesResponseOutput {
	return o
}

func (o BreakOutCategoryPoliciesResponseOutput) ToBreakOutCategoryPoliciesResponsePtrOutput() BreakOutCategoryPoliciesResponsePtrOutput {
	return o.ToBreakOutCategoryPoliciesResponsePtrOutputWithContext(context.Background())
}

func (o BreakOutCategoryPoliciesResponseOutput) ToBreakOutCategoryPoliciesResponsePtrOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesResponsePtrOutput {
	return o.ApplyT(func(v BreakOutCategoryPoliciesResponse) *BreakOutCategoryPoliciesResponse {
		return &v
	}).(BreakOutCategoryPoliciesResponsePtrOutput)
}

// Flag to control breakout of o365 allow category.
func (o BreakOutCategoryPoliciesResponseOutput) Allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BreakOutCategoryPoliciesResponse) *bool { return v.Allow }).(pulumi.BoolPtrOutput)
}

// Flag to control breakout of o365 default category.
func (o BreakOutCategoryPoliciesResponseOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BreakOutCategoryPoliciesResponse) *bool { return v.Default }).(pulumi.BoolPtrOutput)
}

// Flag to control breakout of o365 optimize category.
func (o BreakOutCategoryPoliciesResponseOutput) Optimize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BreakOutCategoryPoliciesResponse) *bool { return v.Optimize }).(pulumi.BoolPtrOutput)
}

type BreakOutCategoryPoliciesResponsePtrOutput struct{ *pulumi.OutputState }

func (BreakOutCategoryPoliciesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BreakOutCategoryPoliciesResponse)(nil)).Elem()
}

func (o BreakOutCategoryPoliciesResponsePtrOutput) ToBreakOutCategoryPoliciesResponsePtrOutput() BreakOutCategoryPoliciesResponsePtrOutput {
	return o
}

func (o BreakOutCategoryPoliciesResponsePtrOutput) ToBreakOutCategoryPoliciesResponsePtrOutputWithContext(ctx context.Context) BreakOutCategoryPoliciesResponsePtrOutput {
	return o
}

func (o BreakOutCategoryPoliciesResponsePtrOutput) Elem() BreakOutCategoryPoliciesResponseOutput {
	return o.ApplyT(func(v *BreakOutCategoryPoliciesResponse) BreakOutCategoryPoliciesResponse { return *v }).(BreakOutCategoryPoliciesResponseOutput)
}

// Flag to control breakout of o365 allow category.
func (o BreakOutCategoryPoliciesResponsePtrOutput) Allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BreakOutCategoryPoliciesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Allow
	}).(pulumi.BoolPtrOutput)
}

// Flag to control breakout of o365 default category.
func (o BreakOutCategoryPoliciesResponsePtrOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BreakOutCategoryPoliciesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.BoolPtrOutput)
}

// Flag to control breakout of o365 optimize category.
func (o BreakOutCategoryPoliciesResponsePtrOutput) Optimize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BreakOutCategoryPoliciesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Optimize
	}).(pulumi.BoolPtrOutput)
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type CacheConfiguration struct {
	// The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year
	CacheDuration *string `pulumi:"cacheDuration"`
	// Whether to use dynamic compression for cached content
	DynamicCompression *string `pulumi:"dynamicCompression"`
	// Treatment of URL query terms when forming the cache key.
	QueryParameterStripDirective *string `pulumi:"queryParameterStripDirective"`
	// query parameters to include or exclude (comma separated).
	QueryParameters *string `pulumi:"queryParameters"`
}

// CacheConfigurationInput is an input type that accepts CacheConfigurationArgs and CacheConfigurationOutput values.
// You can construct a concrete instance of `CacheConfigurationInput` via:
//
//          CacheConfigurationArgs{...}
type CacheConfigurationInput interface {
	pulumi.Input

	ToCacheConfigurationOutput() CacheConfigurationOutput
	ToCacheConfigurationOutputWithContext(context.Context) CacheConfigurationOutput
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type CacheConfigurationArgs struct {
	// The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year
	CacheDuration pulumi.StringPtrInput `pulumi:"cacheDuration"`
	// Whether to use dynamic compression for cached content
	DynamicCompression pulumi.StringPtrInput `pulumi:"dynamicCompression"`
	// Treatment of URL query terms when forming the cache key.
	QueryParameterStripDirective pulumi.StringPtrInput `pulumi:"queryParameterStripDirective"`
	// query parameters to include or exclude (comma separated).
	QueryParameters pulumi.StringPtrInput `pulumi:"queryParameters"`
}

func (CacheConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheConfiguration)(nil)).Elem()
}

func (i CacheConfigurationArgs) ToCacheConfigurationOutput() CacheConfigurationOutput {
	return i.ToCacheConfigurationOutputWithContext(context.Background())
}

func (i CacheConfigurationArgs) ToCacheConfigurationOutputWithContext(ctx context.Context) CacheConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheConfigurationOutput)
}

func (i CacheConfigurationArgs) ToCacheConfigurationPtrOutput() CacheConfigurationPtrOutput {
	return i.ToCacheConfigurationPtrOutputWithContext(context.Background())
}

func (i CacheConfigurationArgs) ToCacheConfigurationPtrOutputWithContext(ctx context.Context) CacheConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheConfigurationOutput).ToCacheConfigurationPtrOutputWithContext(ctx)
}

// CacheConfigurationPtrInput is an input type that accepts CacheConfigurationArgs, CacheConfigurationPtr and CacheConfigurationPtrOutput values.
// You can construct a concrete instance of `CacheConfigurationPtrInput` via:
//
//          CacheConfigurationArgs{...}
//
//  or:
//
//          nil
type CacheConfigurationPtrInput interface {
	pulumi.Input

	ToCacheConfigurationPtrOutput() CacheConfigurationPtrOutput
	ToCacheConfigurationPtrOutputWithContext(context.Context) CacheConfigurationPtrOutput
}

type cacheConfigurationPtrType CacheConfigurationArgs

func CacheConfigurationPtr(v *CacheConfigurationArgs) CacheConfigurationPtrInput {
	return (*cacheConfigurationPtrType)(v)
}

func (*cacheConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheConfiguration)(nil)).Elem()
}

func (i *cacheConfigurationPtrType) ToCacheConfigurationPtrOutput() CacheConfigurationPtrOutput {
	return i.ToCacheConfigurationPtrOutputWithContext(context.Background())
}

func (i *cacheConfigurationPtrType) ToCacheConfigurationPtrOutputWithContext(ctx context.Context) CacheConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheConfigurationPtrOutput)
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type CacheConfigurationOutput struct{ *pulumi.OutputState }

func (CacheConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheConfiguration)(nil)).Elem()
}

func (o CacheConfigurationOutput) ToCacheConfigurationOutput() CacheConfigurationOutput {
	return o
}

func (o CacheConfigurationOutput) ToCacheConfigurationOutputWithContext(ctx context.Context) CacheConfigurationOutput {
	return o
}

func (o CacheConfigurationOutput) ToCacheConfigurationPtrOutput() CacheConfigurationPtrOutput {
	return o.ToCacheConfigurationPtrOutputWithContext(context.Background())
}

func (o CacheConfigurationOutput) ToCacheConfigurationPtrOutputWithContext(ctx context.Context) CacheConfigurationPtrOutput {
	return o.ApplyT(func(v CacheConfiguration) *CacheConfiguration {
		return &v
	}).(CacheConfigurationPtrOutput)
}

// The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year
func (o CacheConfigurationOutput) CacheDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfiguration) *string { return v.CacheDuration }).(pulumi.StringPtrOutput)
}

// Whether to use dynamic compression for cached content
func (o CacheConfigurationOutput) DynamicCompression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfiguration) *string { return v.DynamicCompression }).(pulumi.StringPtrOutput)
}

// Treatment of URL query terms when forming the cache key.
func (o CacheConfigurationOutput) QueryParameterStripDirective() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfiguration) *string { return v.QueryParameterStripDirective }).(pulumi.StringPtrOutput)
}

// query parameters to include or exclude (comma separated).
func (o CacheConfigurationOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfiguration) *string { return v.QueryParameters }).(pulumi.StringPtrOutput)
}

type CacheConfigurationPtrOutput struct{ *pulumi.OutputState }

func (CacheConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheConfiguration)(nil)).Elem()
}

func (o CacheConfigurationPtrOutput) ToCacheConfigurationPtrOutput() CacheConfigurationPtrOutput {
	return o
}

func (o CacheConfigurationPtrOutput) ToCacheConfigurationPtrOutputWithContext(ctx context.Context) CacheConfigurationPtrOutput {
	return o
}

func (o CacheConfigurationPtrOutput) Elem() CacheConfigurationOutput {
	return o.ApplyT(func(v *CacheConfiguration) CacheConfiguration { return *v }).(CacheConfigurationOutput)
}

// The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year
func (o CacheConfigurationPtrOutput) CacheDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CacheDuration
	}).(pulumi.StringPtrOutput)
}

// Whether to use dynamic compression for cached content
func (o CacheConfigurationPtrOutput) DynamicCompression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DynamicCompression
	}).(pulumi.StringPtrOutput)
}

// Treatment of URL query terms when forming the cache key.
func (o CacheConfigurationPtrOutput) QueryParameterStripDirective() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.QueryParameterStripDirective
	}).(pulumi.StringPtrOutput)
}

// query parameters to include or exclude (comma separated).
func (o CacheConfigurationPtrOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(pulumi.StringPtrOutput)
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type CacheConfigurationResponse struct {
	// The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year
	CacheDuration *string `pulumi:"cacheDuration"`
	// Whether to use dynamic compression for cached content
	DynamicCompression *string `pulumi:"dynamicCompression"`
	// Treatment of URL query terms when forming the cache key.
	QueryParameterStripDirective *string `pulumi:"queryParameterStripDirective"`
	// query parameters to include or exclude (comma separated).
	QueryParameters *string `pulumi:"queryParameters"`
}

// CacheConfigurationResponseInput is an input type that accepts CacheConfigurationResponseArgs and CacheConfigurationResponseOutput values.
// You can construct a concrete instance of `CacheConfigurationResponseInput` via:
//
//          CacheConfigurationResponseArgs{...}
type CacheConfigurationResponseInput interface {
	pulumi.Input

	ToCacheConfigurationResponseOutput() CacheConfigurationResponseOutput
	ToCacheConfigurationResponseOutputWithContext(context.Context) CacheConfigurationResponseOutput
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type CacheConfigurationResponseArgs struct {
	// The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year
	CacheDuration pulumi.StringPtrInput `pulumi:"cacheDuration"`
	// Whether to use dynamic compression for cached content
	DynamicCompression pulumi.StringPtrInput `pulumi:"dynamicCompression"`
	// Treatment of URL query terms when forming the cache key.
	QueryParameterStripDirective pulumi.StringPtrInput `pulumi:"queryParameterStripDirective"`
	// query parameters to include or exclude (comma separated).
	QueryParameters pulumi.StringPtrInput `pulumi:"queryParameters"`
}

func (CacheConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheConfigurationResponse)(nil)).Elem()
}

func (i CacheConfigurationResponseArgs) ToCacheConfigurationResponseOutput() CacheConfigurationResponseOutput {
	return i.ToCacheConfigurationResponseOutputWithContext(context.Background())
}

func (i CacheConfigurationResponseArgs) ToCacheConfigurationResponseOutputWithContext(ctx context.Context) CacheConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheConfigurationResponseOutput)
}

func (i CacheConfigurationResponseArgs) ToCacheConfigurationResponsePtrOutput() CacheConfigurationResponsePtrOutput {
	return i.ToCacheConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i CacheConfigurationResponseArgs) ToCacheConfigurationResponsePtrOutputWithContext(ctx context.Context) CacheConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheConfigurationResponseOutput).ToCacheConfigurationResponsePtrOutputWithContext(ctx)
}

// CacheConfigurationResponsePtrInput is an input type that accepts CacheConfigurationResponseArgs, CacheConfigurationResponsePtr and CacheConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `CacheConfigurationResponsePtrInput` via:
//
//          CacheConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type CacheConfigurationResponsePtrInput interface {
	pulumi.Input

	ToCacheConfigurationResponsePtrOutput() CacheConfigurationResponsePtrOutput
	ToCacheConfigurationResponsePtrOutputWithContext(context.Context) CacheConfigurationResponsePtrOutput
}

type cacheConfigurationResponsePtrType CacheConfigurationResponseArgs

func CacheConfigurationResponsePtr(v *CacheConfigurationResponseArgs) CacheConfigurationResponsePtrInput {
	return (*cacheConfigurationResponsePtrType)(v)
}

func (*cacheConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheConfigurationResponse)(nil)).Elem()
}

func (i *cacheConfigurationResponsePtrType) ToCacheConfigurationResponsePtrOutput() CacheConfigurationResponsePtrOutput {
	return i.ToCacheConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *cacheConfigurationResponsePtrType) ToCacheConfigurationResponsePtrOutputWithContext(ctx context.Context) CacheConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheConfigurationResponsePtrOutput)
}

// Caching settings for a caching-type route. To disable caching, do not provide a cacheConfiguration object.
type CacheConfigurationResponseOutput struct{ *pulumi.OutputState }

func (CacheConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheConfigurationResponse)(nil)).Elem()
}

func (o CacheConfigurationResponseOutput) ToCacheConfigurationResponseOutput() CacheConfigurationResponseOutput {
	return o
}

func (o CacheConfigurationResponseOutput) ToCacheConfigurationResponseOutputWithContext(ctx context.Context) CacheConfigurationResponseOutput {
	return o
}

func (o CacheConfigurationResponseOutput) ToCacheConfigurationResponsePtrOutput() CacheConfigurationResponsePtrOutput {
	return o.ToCacheConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o CacheConfigurationResponseOutput) ToCacheConfigurationResponsePtrOutputWithContext(ctx context.Context) CacheConfigurationResponsePtrOutput {
	return o.ApplyT(func(v CacheConfigurationResponse) *CacheConfigurationResponse {
		return &v
	}).(CacheConfigurationResponsePtrOutput)
}

// The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year
func (o CacheConfigurationResponseOutput) CacheDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfigurationResponse) *string { return v.CacheDuration }).(pulumi.StringPtrOutput)
}

// Whether to use dynamic compression for cached content
func (o CacheConfigurationResponseOutput) DynamicCompression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfigurationResponse) *string { return v.DynamicCompression }).(pulumi.StringPtrOutput)
}

// Treatment of URL query terms when forming the cache key.
func (o CacheConfigurationResponseOutput) QueryParameterStripDirective() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfigurationResponse) *string { return v.QueryParameterStripDirective }).(pulumi.StringPtrOutput)
}

// query parameters to include or exclude (comma separated).
func (o CacheConfigurationResponseOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CacheConfigurationResponse) *string { return v.QueryParameters }).(pulumi.StringPtrOutput)
}

type CacheConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (CacheConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheConfigurationResponse)(nil)).Elem()
}

func (o CacheConfigurationResponsePtrOutput) ToCacheConfigurationResponsePtrOutput() CacheConfigurationResponsePtrOutput {
	return o
}

func (o CacheConfigurationResponsePtrOutput) ToCacheConfigurationResponsePtrOutputWithContext(ctx context.Context) CacheConfigurationResponsePtrOutput {
	return o
}

func (o CacheConfigurationResponsePtrOutput) Elem() CacheConfigurationResponseOutput {
	return o.ApplyT(func(v *CacheConfigurationResponse) CacheConfigurationResponse { return *v }).(CacheConfigurationResponseOutput)
}

// The duration for which the content needs to be cached. Allowed format is in ISO 8601 format (http://en.wikipedia.org/wiki/ISO_8601#Durations). HTTP requires the value to be no more than a year
func (o CacheConfigurationResponsePtrOutput) CacheDuration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.CacheDuration
	}).(pulumi.StringPtrOutput)
}

// Whether to use dynamic compression for cached content
func (o CacheConfigurationResponsePtrOutput) DynamicCompression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.DynamicCompression
	}).(pulumi.StringPtrOutput)
}

// Treatment of URL query terms when forming the cache key.
func (o CacheConfigurationResponsePtrOutput) QueryParameterStripDirective() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.QueryParameterStripDirective
	}).(pulumi.StringPtrOutput)
}

// query parameters to include or exclude (comma separated).
func (o CacheConfigurationResponsePtrOutput) QueryParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.QueryParameters
	}).(pulumi.StringPtrOutput)
}

// A CNAME record.
type CnameRecord struct {
	// The canonical name for this CNAME record.
	Cname *string `pulumi:"cname"`
}

// CnameRecordInput is an input type that accepts CnameRecordArgs and CnameRecordOutput values.
// You can construct a concrete instance of `CnameRecordInput` via:
//
//          CnameRecordArgs{...}
type CnameRecordInput interface {
	pulumi.Input

	ToCnameRecordOutput() CnameRecordOutput
	ToCnameRecordOutputWithContext(context.Context) CnameRecordOutput
}

// A CNAME record.
type CnameRecordArgs struct {
	// The canonical name for this CNAME record.
	Cname pulumi.StringPtrInput `pulumi:"cname"`
}

func (CnameRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CnameRecord)(nil)).Elem()
}

func (i CnameRecordArgs) ToCnameRecordOutput() CnameRecordOutput {
	return i.ToCnameRecordOutputWithContext(context.Background())
}

func (i CnameRecordArgs) ToCnameRecordOutputWithContext(ctx context.Context) CnameRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CnameRecordOutput)
}

func (i CnameRecordArgs) ToCnameRecordPtrOutput() CnameRecordPtrOutput {
	return i.ToCnameRecordPtrOutputWithContext(context.Background())
}

func (i CnameRecordArgs) ToCnameRecordPtrOutputWithContext(ctx context.Context) CnameRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CnameRecordOutput).ToCnameRecordPtrOutputWithContext(ctx)
}

// CnameRecordPtrInput is an input type that accepts CnameRecordArgs, CnameRecordPtr and CnameRecordPtrOutput values.
// You can construct a concrete instance of `CnameRecordPtrInput` via:
//
//          CnameRecordArgs{...}
//
//  or:
//
//          nil
type CnameRecordPtrInput interface {
	pulumi.Input

	ToCnameRecordPtrOutput() CnameRecordPtrOutput
	ToCnameRecordPtrOutputWithContext(context.Context) CnameRecordPtrOutput
}

type cnameRecordPtrType CnameRecordArgs

func CnameRecordPtr(v *CnameRecordArgs) CnameRecordPtrInput {
	return (*cnameRecordPtrType)(v)
}

func (*cnameRecordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CnameRecord)(nil)).Elem()
}

func (i *cnameRecordPtrType) ToCnameRecordPtrOutput() CnameRecordPtrOutput {
	return i.ToCnameRecordPtrOutputWithContext(context.Background())
}

func (i *cnameRecordPtrType) ToCnameRecordPtrOutputWithContext(ctx context.Context) CnameRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CnameRecordPtrOutput)
}

// A CNAME record.
type CnameRecordOutput struct{ *pulumi.OutputState }

func (CnameRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CnameRecord)(nil)).Elem()
}

func (o CnameRecordOutput) ToCnameRecordOutput() CnameRecordOutput {
	return o
}

func (o CnameRecordOutput) ToCnameRecordOutputWithContext(ctx context.Context) CnameRecordOutput {
	return o
}

func (o CnameRecordOutput) ToCnameRecordPtrOutput() CnameRecordPtrOutput {
	return o.ToCnameRecordPtrOutputWithContext(context.Background())
}

func (o CnameRecordOutput) ToCnameRecordPtrOutputWithContext(ctx context.Context) CnameRecordPtrOutput {
	return o.ApplyT(func(v CnameRecord) *CnameRecord {
		return &v
	}).(CnameRecordPtrOutput)
}

// The canonical name for this CNAME record.
func (o CnameRecordOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CnameRecord) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

type CnameRecordPtrOutput struct{ *pulumi.OutputState }

func (CnameRecordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CnameRecord)(nil)).Elem()
}

func (o CnameRecordPtrOutput) ToCnameRecordPtrOutput() CnameRecordPtrOutput {
	return o
}

func (o CnameRecordPtrOutput) ToCnameRecordPtrOutputWithContext(ctx context.Context) CnameRecordPtrOutput {
	return o
}

func (o CnameRecordPtrOutput) Elem() CnameRecordOutput {
	return o.ApplyT(func(v *CnameRecord) CnameRecord { return *v }).(CnameRecordOutput)
}

// The canonical name for this CNAME record.
func (o CnameRecordPtrOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CnameRecord) *string {
		if v == nil {
			return nil
		}
		return v.Cname
	}).(pulumi.StringPtrOutput)
}

// A CNAME record.
type CnameRecordResponse struct {
	// The canonical name for this CNAME record.
	Cname *string `pulumi:"cname"`
}

// CnameRecordResponseInput is an input type that accepts CnameRecordResponseArgs and CnameRecordResponseOutput values.
// You can construct a concrete instance of `CnameRecordResponseInput` via:
//
//          CnameRecordResponseArgs{...}
type CnameRecordResponseInput interface {
	pulumi.Input

	ToCnameRecordResponseOutput() CnameRecordResponseOutput
	ToCnameRecordResponseOutputWithContext(context.Context) CnameRecordResponseOutput
}

// A CNAME record.
type CnameRecordResponseArgs struct {
	// The canonical name for this CNAME record.
	Cname pulumi.StringPtrInput `pulumi:"cname"`
}

func (CnameRecordResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CnameRecordResponse)(nil)).Elem()
}

func (i CnameRecordResponseArgs) ToCnameRecordResponseOutput() CnameRecordResponseOutput {
	return i.ToCnameRecordResponseOutputWithContext(context.Background())
}

func (i CnameRecordResponseArgs) ToCnameRecordResponseOutputWithContext(ctx context.Context) CnameRecordResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CnameRecordResponseOutput)
}

func (i CnameRecordResponseArgs) ToCnameRecordResponsePtrOutput() CnameRecordResponsePtrOutput {
	return i.ToCnameRecordResponsePtrOutputWithContext(context.Background())
}

func (i CnameRecordResponseArgs) ToCnameRecordResponsePtrOutputWithContext(ctx context.Context) CnameRecordResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CnameRecordResponseOutput).ToCnameRecordResponsePtrOutputWithContext(ctx)
}

// CnameRecordResponsePtrInput is an input type that accepts CnameRecordResponseArgs, CnameRecordResponsePtr and CnameRecordResponsePtrOutput values.
// You can construct a concrete instance of `CnameRecordResponsePtrInput` via:
//
//          CnameRecordResponseArgs{...}
//
//  or:
//
//          nil
type CnameRecordResponsePtrInput interface {
	pulumi.Input

	ToCnameRecordResponsePtrOutput() CnameRecordResponsePtrOutput
	ToCnameRecordResponsePtrOutputWithContext(context.Context) CnameRecordResponsePtrOutput
}

type cnameRecordResponsePtrType CnameRecordResponseArgs

func CnameRecordResponsePtr(v *CnameRecordResponseArgs) CnameRecordResponsePtrInput {
	return (*cnameRecordResponsePtrType)(v)
}

func (*cnameRecordResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CnameRecordResponse)(nil)).Elem()
}

func (i *cnameRecordResponsePtrType) ToCnameRecordResponsePtrOutput() CnameRecordResponsePtrOutput {
	return i.ToCnameRecordResponsePtrOutputWithContext(context.Background())
}

func (i *cnameRecordResponsePtrType) ToCnameRecordResponsePtrOutputWithContext(ctx context.Context) CnameRecordResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CnameRecordResponsePtrOutput)
}

// A CNAME record.
type CnameRecordResponseOutput struct{ *pulumi.OutputState }

func (CnameRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CnameRecordResponse)(nil)).Elem()
}

func (o CnameRecordResponseOutput) ToCnameRecordResponseOutput() CnameRecordResponseOutput {
	return o
}

func (o CnameRecordResponseOutput) ToCnameRecordResponseOutputWithContext(ctx context.Context) CnameRecordResponseOutput {
	return o
}

func (o CnameRecordResponseOutput) ToCnameRecordResponsePtrOutput() CnameRecordResponsePtrOutput {
	return o.ToCnameRecordResponsePtrOutputWithContext(context.Background())
}

func (o CnameRecordResponseOutput) ToCnameRecordResponsePtrOutputWithContext(ctx context.Context) CnameRecordResponsePtrOutput {
	return o.ApplyT(func(v CnameRecordResponse) *CnameRecordResponse {
		return &v
	}).(CnameRecordResponsePtrOutput)
}

// The canonical name for this CNAME record.
func (o CnameRecordResponseOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CnameRecordResponse) *string { return v.Cname }).(pulumi.StringPtrOutput)
}

type CnameRecordResponsePtrOutput struct{ *pulumi.OutputState }

func (CnameRecordResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CnameRecordResponse)(nil)).Elem()
}

func (o CnameRecordResponsePtrOutput) ToCnameRecordResponsePtrOutput() CnameRecordResponsePtrOutput {
	return o
}

func (o CnameRecordResponsePtrOutput) ToCnameRecordResponsePtrOutputWithContext(ctx context.Context) CnameRecordResponsePtrOutput {
	return o
}

func (o CnameRecordResponsePtrOutput) Elem() CnameRecordResponseOutput {
	return o.ApplyT(func(v *CnameRecordResponse) CnameRecordResponse { return *v }).(CnameRecordResponseOutput)
}

// The canonical name for this CNAME record.
func (o CnameRecordResponsePtrOutput) Cname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CnameRecordResponse) *string {
		if v == nil {
			return nil
		}
		return v.Cname
	}).(pulumi.StringPtrOutput)
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestination struct {
	// Address of the connection monitor destination (IP or domain name).
	Address *string `pulumi:"address"`
	// The destination port used by connection monitor.
	Port *int `pulumi:"port"`
	// The ID of the resource used as the destination by connection monitor.
	ResourceId *string `pulumi:"resourceId"`
}

// ConnectionMonitorDestinationInput is an input type that accepts ConnectionMonitorDestinationArgs and ConnectionMonitorDestinationOutput values.
// You can construct a concrete instance of `ConnectionMonitorDestinationInput` via:
//
//          ConnectionMonitorDestinationArgs{...}
type ConnectionMonitorDestinationInput interface {
	pulumi.Input

	ToConnectionMonitorDestinationOutput() ConnectionMonitorDestinationOutput
	ToConnectionMonitorDestinationOutputWithContext(context.Context) ConnectionMonitorDestinationOutput
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestinationArgs struct {
	// Address of the connection monitor destination (IP or domain name).
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The destination port used by connection monitor.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The ID of the resource used as the destination by connection monitor.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ConnectionMonitorDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorDestination)(nil)).Elem()
}

func (i ConnectionMonitorDestinationArgs) ToConnectionMonitorDestinationOutput() ConnectionMonitorDestinationOutput {
	return i.ToConnectionMonitorDestinationOutputWithContext(context.Background())
}

func (i ConnectionMonitorDestinationArgs) ToConnectionMonitorDestinationOutputWithContext(ctx context.Context) ConnectionMonitorDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationOutput)
}

func (i ConnectionMonitorDestinationArgs) ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput {
	return i.ToConnectionMonitorDestinationPtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorDestinationArgs) ToConnectionMonitorDestinationPtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationOutput).ToConnectionMonitorDestinationPtrOutputWithContext(ctx)
}

// ConnectionMonitorDestinationPtrInput is an input type that accepts ConnectionMonitorDestinationArgs, ConnectionMonitorDestinationPtr and ConnectionMonitorDestinationPtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorDestinationPtrInput` via:
//
//          ConnectionMonitorDestinationArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorDestinationPtrInput interface {
	pulumi.Input

	ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput
	ToConnectionMonitorDestinationPtrOutputWithContext(context.Context) ConnectionMonitorDestinationPtrOutput
}

type connectionMonitorDestinationPtrType ConnectionMonitorDestinationArgs

func ConnectionMonitorDestinationPtr(v *ConnectionMonitorDestinationArgs) ConnectionMonitorDestinationPtrInput {
	return (*connectionMonitorDestinationPtrType)(v)
}

func (*connectionMonitorDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorDestination)(nil)).Elem()
}

func (i *connectionMonitorDestinationPtrType) ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput {
	return i.ToConnectionMonitorDestinationPtrOutputWithContext(context.Background())
}

func (i *connectionMonitorDestinationPtrType) ToConnectionMonitorDestinationPtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationPtrOutput)
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestinationOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorDestination)(nil)).Elem()
}

func (o ConnectionMonitorDestinationOutput) ToConnectionMonitorDestinationOutput() ConnectionMonitorDestinationOutput {
	return o
}

func (o ConnectionMonitorDestinationOutput) ToConnectionMonitorDestinationOutputWithContext(ctx context.Context) ConnectionMonitorDestinationOutput {
	return o
}

func (o ConnectionMonitorDestinationOutput) ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput {
	return o.ToConnectionMonitorDestinationPtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorDestinationOutput) ToConnectionMonitorDestinationPtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestination) *ConnectionMonitorDestination {
		return &v
	}).(ConnectionMonitorDestinationPtrOutput)
}

// Address of the connection monitor destination (IP or domain name).
func (o ConnectionMonitorDestinationOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestination) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The destination port used by connection monitor.
func (o ConnectionMonitorDestinationOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestination) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the destination by connection monitor.
func (o ConnectionMonitorDestinationOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestination) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorDestinationPtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorDestination)(nil)).Elem()
}

func (o ConnectionMonitorDestinationPtrOutput) ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput {
	return o
}

func (o ConnectionMonitorDestinationPtrOutput) ToConnectionMonitorDestinationPtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationPtrOutput {
	return o
}

func (o ConnectionMonitorDestinationPtrOutput) Elem() ConnectionMonitorDestinationOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestination) ConnectionMonitorDestination { return *v }).(ConnectionMonitorDestinationOutput)
}

// Address of the connection monitor destination (IP or domain name).
func (o ConnectionMonitorDestinationPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestination) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The destination port used by connection monitor.
func (o ConnectionMonitorDestinationPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestination) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the destination by connection monitor.
func (o ConnectionMonitorDestinationPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestination) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestinationResponse struct {
	// Address of the connection monitor destination (IP or domain name).
	Address *string `pulumi:"address"`
	// The destination port used by connection monitor.
	Port *int `pulumi:"port"`
	// The ID of the resource used as the destination by connection monitor.
	ResourceId *string `pulumi:"resourceId"`
}

// ConnectionMonitorDestinationResponseInput is an input type that accepts ConnectionMonitorDestinationResponseArgs and ConnectionMonitorDestinationResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorDestinationResponseInput` via:
//
//          ConnectionMonitorDestinationResponseArgs{...}
type ConnectionMonitorDestinationResponseInput interface {
	pulumi.Input

	ToConnectionMonitorDestinationResponseOutput() ConnectionMonitorDestinationResponseOutput
	ToConnectionMonitorDestinationResponseOutputWithContext(context.Context) ConnectionMonitorDestinationResponseOutput
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestinationResponseArgs struct {
	// Address of the connection monitor destination (IP or domain name).
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The destination port used by connection monitor.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The ID of the resource used as the destination by connection monitor.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ConnectionMonitorDestinationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorDestinationResponse)(nil)).Elem()
}

func (i ConnectionMonitorDestinationResponseArgs) ToConnectionMonitorDestinationResponseOutput() ConnectionMonitorDestinationResponseOutput {
	return i.ToConnectionMonitorDestinationResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorDestinationResponseArgs) ToConnectionMonitorDestinationResponseOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationResponseOutput)
}

func (i ConnectionMonitorDestinationResponseArgs) ToConnectionMonitorDestinationResponsePtrOutput() ConnectionMonitorDestinationResponsePtrOutput {
	return i.ToConnectionMonitorDestinationResponsePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorDestinationResponseArgs) ToConnectionMonitorDestinationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationResponseOutput).ToConnectionMonitorDestinationResponsePtrOutputWithContext(ctx)
}

// ConnectionMonitorDestinationResponsePtrInput is an input type that accepts ConnectionMonitorDestinationResponseArgs, ConnectionMonitorDestinationResponsePtr and ConnectionMonitorDestinationResponsePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorDestinationResponsePtrInput` via:
//
//          ConnectionMonitorDestinationResponseArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorDestinationResponsePtrInput interface {
	pulumi.Input

	ToConnectionMonitorDestinationResponsePtrOutput() ConnectionMonitorDestinationResponsePtrOutput
	ToConnectionMonitorDestinationResponsePtrOutputWithContext(context.Context) ConnectionMonitorDestinationResponsePtrOutput
}

type connectionMonitorDestinationResponsePtrType ConnectionMonitorDestinationResponseArgs

func ConnectionMonitorDestinationResponsePtr(v *ConnectionMonitorDestinationResponseArgs) ConnectionMonitorDestinationResponsePtrInput {
	return (*connectionMonitorDestinationResponsePtrType)(v)
}

func (*connectionMonitorDestinationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorDestinationResponse)(nil)).Elem()
}

func (i *connectionMonitorDestinationResponsePtrType) ToConnectionMonitorDestinationResponsePtrOutput() ConnectionMonitorDestinationResponsePtrOutput {
	return i.ToConnectionMonitorDestinationResponsePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorDestinationResponsePtrType) ToConnectionMonitorDestinationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationResponsePtrOutput)
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestinationResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorDestinationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorDestinationResponse)(nil)).Elem()
}

func (o ConnectionMonitorDestinationResponseOutput) ToConnectionMonitorDestinationResponseOutput() ConnectionMonitorDestinationResponseOutput {
	return o
}

func (o ConnectionMonitorDestinationResponseOutput) ToConnectionMonitorDestinationResponseOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponseOutput {
	return o
}

func (o ConnectionMonitorDestinationResponseOutput) ToConnectionMonitorDestinationResponsePtrOutput() ConnectionMonitorDestinationResponsePtrOutput {
	return o.ToConnectionMonitorDestinationResponsePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorDestinationResponseOutput) ToConnectionMonitorDestinationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestinationResponse) *ConnectionMonitorDestinationResponse {
		return &v
	}).(ConnectionMonitorDestinationResponsePtrOutput)
}

// Address of the connection monitor destination (IP or domain name).
func (o ConnectionMonitorDestinationResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestinationResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The destination port used by connection monitor.
func (o ConnectionMonitorDestinationResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestinationResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the destination by connection monitor.
func (o ConnectionMonitorDestinationResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestinationResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorDestinationResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorDestinationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorDestinationResponse)(nil)).Elem()
}

func (o ConnectionMonitorDestinationResponsePtrOutput) ToConnectionMonitorDestinationResponsePtrOutput() ConnectionMonitorDestinationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorDestinationResponsePtrOutput) ToConnectionMonitorDestinationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorDestinationResponsePtrOutput) Elem() ConnectionMonitorDestinationResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestinationResponse) ConnectionMonitorDestinationResponse { return *v }).(ConnectionMonitorDestinationResponseOutput)
}

// Address of the connection monitor destination (IP or domain name).
func (o ConnectionMonitorDestinationResponsePtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestinationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The destination port used by connection monitor.
func (o ConnectionMonitorDestinationResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestinationResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the destination by connection monitor.
func (o ConnectionMonitorDestinationResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestinationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Describes the connection monitor endpoint.
type ConnectionMonitorEndpoint struct {
	// Address of the connection monitor endpoint (IP or domain name).
	Address *string `pulumi:"address"`
	// Test coverage for the endpoint.
	CoverageLevel *string `pulumi:"coverageLevel"`
	// Filter for sub-items within the endpoint.
	Filter *ConnectionMonitorEndpointFilter `pulumi:"filter"`
	// The name of the connection monitor endpoint.
	Name string `pulumi:"name"`
	// Resource ID of the connection monitor endpoint.
	ResourceId *string `pulumi:"resourceId"`
	// Endpoint scope.
	Scope *ConnectionMonitorEndpointScope `pulumi:"scope"`
	// The endpoint type.
	Type *string `pulumi:"type"`
}

// ConnectionMonitorEndpointInput is an input type that accepts ConnectionMonitorEndpointArgs and ConnectionMonitorEndpointOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointInput` via:
//
//          ConnectionMonitorEndpointArgs{...}
type ConnectionMonitorEndpointInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointOutput() ConnectionMonitorEndpointOutput
	ToConnectionMonitorEndpointOutputWithContext(context.Context) ConnectionMonitorEndpointOutput
}

// Describes the connection monitor endpoint.
type ConnectionMonitorEndpointArgs struct {
	// Address of the connection monitor endpoint (IP or domain name).
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Test coverage for the endpoint.
	CoverageLevel pulumi.StringPtrInput `pulumi:"coverageLevel"`
	// Filter for sub-items within the endpoint.
	Filter ConnectionMonitorEndpointFilterPtrInput `pulumi:"filter"`
	// The name of the connection monitor endpoint.
	Name pulumi.StringInput `pulumi:"name"`
	// Resource ID of the connection monitor endpoint.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Endpoint scope.
	Scope ConnectionMonitorEndpointScopePtrInput `pulumi:"scope"`
	// The endpoint type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionMonitorEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpoint)(nil)).Elem()
}

func (i ConnectionMonitorEndpointArgs) ToConnectionMonitorEndpointOutput() ConnectionMonitorEndpointOutput {
	return i.ToConnectionMonitorEndpointOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointArgs) ToConnectionMonitorEndpointOutputWithContext(ctx context.Context) ConnectionMonitorEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointOutput)
}

// ConnectionMonitorEndpointArrayInput is an input type that accepts ConnectionMonitorEndpointArray and ConnectionMonitorEndpointArrayOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointArrayInput` via:
//
//          ConnectionMonitorEndpointArray{ ConnectionMonitorEndpointArgs{...} }
type ConnectionMonitorEndpointArrayInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointArrayOutput() ConnectionMonitorEndpointArrayOutput
	ToConnectionMonitorEndpointArrayOutputWithContext(context.Context) ConnectionMonitorEndpointArrayOutput
}

type ConnectionMonitorEndpointArray []ConnectionMonitorEndpointInput

func (ConnectionMonitorEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpoint)(nil)).Elem()
}

func (i ConnectionMonitorEndpointArray) ToConnectionMonitorEndpointArrayOutput() ConnectionMonitorEndpointArrayOutput {
	return i.ToConnectionMonitorEndpointArrayOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointArray) ToConnectionMonitorEndpointArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointArrayOutput)
}

// Describes the connection monitor endpoint.
type ConnectionMonitorEndpointOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpoint)(nil)).Elem()
}

func (o ConnectionMonitorEndpointOutput) ToConnectionMonitorEndpointOutput() ConnectionMonitorEndpointOutput {
	return o
}

func (o ConnectionMonitorEndpointOutput) ToConnectionMonitorEndpointOutputWithContext(ctx context.Context) ConnectionMonitorEndpointOutput {
	return o
}

// Address of the connection monitor endpoint (IP or domain name).
func (o ConnectionMonitorEndpointOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpoint) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Test coverage for the endpoint.
func (o ConnectionMonitorEndpointOutput) CoverageLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpoint) *string { return v.CoverageLevel }).(pulumi.StringPtrOutput)
}

// Filter for sub-items within the endpoint.
func (o ConnectionMonitorEndpointOutput) Filter() ConnectionMonitorEndpointFilterPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpoint) *ConnectionMonitorEndpointFilter { return v.Filter }).(ConnectionMonitorEndpointFilterPtrOutput)
}

// The name of the connection monitor endpoint.
func (o ConnectionMonitorEndpointOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpoint) string { return v.Name }).(pulumi.StringOutput)
}

// Resource ID of the connection monitor endpoint.
func (o ConnectionMonitorEndpointOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpoint) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Endpoint scope.
func (o ConnectionMonitorEndpointOutput) Scope() ConnectionMonitorEndpointScopePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpoint) *ConnectionMonitorEndpointScope { return v.Scope }).(ConnectionMonitorEndpointScopePtrOutput)
}

// The endpoint type.
func (o ConnectionMonitorEndpointOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpoint) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorEndpointArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpoint)(nil)).Elem()
}

func (o ConnectionMonitorEndpointArrayOutput) ToConnectionMonitorEndpointArrayOutput() ConnectionMonitorEndpointArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointArrayOutput) ToConnectionMonitorEndpointArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorEndpoint {
		return vs[0].([]ConnectionMonitorEndpoint)[vs[1].(int)]
	}).(ConnectionMonitorEndpointOutput)
}

// Describes the connection monitor endpoint filter.
type ConnectionMonitorEndpointFilter struct {
	// List of items in the filter.
	Items []ConnectionMonitorEndpointFilterItem `pulumi:"items"`
	// The behavior of the endpoint filter. Currently only 'Include' is supported.
	Type *string `pulumi:"type"`
}

// ConnectionMonitorEndpointFilterInput is an input type that accepts ConnectionMonitorEndpointFilterArgs and ConnectionMonitorEndpointFilterOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointFilterInput` via:
//
//          ConnectionMonitorEndpointFilterArgs{...}
type ConnectionMonitorEndpointFilterInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointFilterOutput() ConnectionMonitorEndpointFilterOutput
	ToConnectionMonitorEndpointFilterOutputWithContext(context.Context) ConnectionMonitorEndpointFilterOutput
}

// Describes the connection monitor endpoint filter.
type ConnectionMonitorEndpointFilterArgs struct {
	// List of items in the filter.
	Items ConnectionMonitorEndpointFilterItemArrayInput `pulumi:"items"`
	// The behavior of the endpoint filter. Currently only 'Include' is supported.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionMonitorEndpointFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointFilter)(nil)).Elem()
}

func (i ConnectionMonitorEndpointFilterArgs) ToConnectionMonitorEndpointFilterOutput() ConnectionMonitorEndpointFilterOutput {
	return i.ToConnectionMonitorEndpointFilterOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointFilterArgs) ToConnectionMonitorEndpointFilterOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointFilterOutput)
}

func (i ConnectionMonitorEndpointFilterArgs) ToConnectionMonitorEndpointFilterPtrOutput() ConnectionMonitorEndpointFilterPtrOutput {
	return i.ToConnectionMonitorEndpointFilterPtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointFilterArgs) ToConnectionMonitorEndpointFilterPtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointFilterOutput).ToConnectionMonitorEndpointFilterPtrOutputWithContext(ctx)
}

// ConnectionMonitorEndpointFilterPtrInput is an input type that accepts ConnectionMonitorEndpointFilterArgs, ConnectionMonitorEndpointFilterPtr and ConnectionMonitorEndpointFilterPtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointFilterPtrInput` via:
//
//          ConnectionMonitorEndpointFilterArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorEndpointFilterPtrInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointFilterPtrOutput() ConnectionMonitorEndpointFilterPtrOutput
	ToConnectionMonitorEndpointFilterPtrOutputWithContext(context.Context) ConnectionMonitorEndpointFilterPtrOutput
}

type connectionMonitorEndpointFilterPtrType ConnectionMonitorEndpointFilterArgs

func ConnectionMonitorEndpointFilterPtr(v *ConnectionMonitorEndpointFilterArgs) ConnectionMonitorEndpointFilterPtrInput {
	return (*connectionMonitorEndpointFilterPtrType)(v)
}

func (*connectionMonitorEndpointFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorEndpointFilter)(nil)).Elem()
}

func (i *connectionMonitorEndpointFilterPtrType) ToConnectionMonitorEndpointFilterPtrOutput() ConnectionMonitorEndpointFilterPtrOutput {
	return i.ToConnectionMonitorEndpointFilterPtrOutputWithContext(context.Background())
}

func (i *connectionMonitorEndpointFilterPtrType) ToConnectionMonitorEndpointFilterPtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointFilterPtrOutput)
}

// Describes the connection monitor endpoint filter.
type ConnectionMonitorEndpointFilterOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointFilter)(nil)).Elem()
}

func (o ConnectionMonitorEndpointFilterOutput) ToConnectionMonitorEndpointFilterOutput() ConnectionMonitorEndpointFilterOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterOutput) ToConnectionMonitorEndpointFilterOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterOutput) ToConnectionMonitorEndpointFilterPtrOutput() ConnectionMonitorEndpointFilterPtrOutput {
	return o.ToConnectionMonitorEndpointFilterPtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorEndpointFilterOutput) ToConnectionMonitorEndpointFilterPtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointFilter) *ConnectionMonitorEndpointFilter {
		return &v
	}).(ConnectionMonitorEndpointFilterPtrOutput)
}

// List of items in the filter.
func (o ConnectionMonitorEndpointFilterOutput) Items() ConnectionMonitorEndpointFilterItemArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointFilter) []ConnectionMonitorEndpointFilterItem { return v.Items }).(ConnectionMonitorEndpointFilterItemArrayOutput)
}

// The behavior of the endpoint filter. Currently only 'Include' is supported.
func (o ConnectionMonitorEndpointFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorEndpointFilterPtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorEndpointFilter)(nil)).Elem()
}

func (o ConnectionMonitorEndpointFilterPtrOutput) ToConnectionMonitorEndpointFilterPtrOutput() ConnectionMonitorEndpointFilterPtrOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterPtrOutput) ToConnectionMonitorEndpointFilterPtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterPtrOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterPtrOutput) Elem() ConnectionMonitorEndpointFilterOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointFilter) ConnectionMonitorEndpointFilter { return *v }).(ConnectionMonitorEndpointFilterOutput)
}

// List of items in the filter.
func (o ConnectionMonitorEndpointFilterPtrOutput) Items() ConnectionMonitorEndpointFilterItemArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointFilter) []ConnectionMonitorEndpointFilterItem {
		if v == nil {
			return nil
		}
		return v.Items
	}).(ConnectionMonitorEndpointFilterItemArrayOutput)
}

// The behavior of the endpoint filter. Currently only 'Include' is supported.
func (o ConnectionMonitorEndpointFilterPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointFilter) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Describes the connection monitor endpoint filter item.
type ConnectionMonitorEndpointFilterItem struct {
	// The address of the filter item.
	Address *string `pulumi:"address"`
	// The type of item included in the filter. Currently only 'AgentAddress' is supported.
	Type *string `pulumi:"type"`
}

// ConnectionMonitorEndpointFilterItemInput is an input type that accepts ConnectionMonitorEndpointFilterItemArgs and ConnectionMonitorEndpointFilterItemOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointFilterItemInput` via:
//
//          ConnectionMonitorEndpointFilterItemArgs{...}
type ConnectionMonitorEndpointFilterItemInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointFilterItemOutput() ConnectionMonitorEndpointFilterItemOutput
	ToConnectionMonitorEndpointFilterItemOutputWithContext(context.Context) ConnectionMonitorEndpointFilterItemOutput
}

// Describes the connection monitor endpoint filter item.
type ConnectionMonitorEndpointFilterItemArgs struct {
	// The address of the filter item.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The type of item included in the filter. Currently only 'AgentAddress' is supported.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionMonitorEndpointFilterItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointFilterItem)(nil)).Elem()
}

func (i ConnectionMonitorEndpointFilterItemArgs) ToConnectionMonitorEndpointFilterItemOutput() ConnectionMonitorEndpointFilterItemOutput {
	return i.ToConnectionMonitorEndpointFilterItemOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointFilterItemArgs) ToConnectionMonitorEndpointFilterItemOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointFilterItemOutput)
}

// ConnectionMonitorEndpointFilterItemArrayInput is an input type that accepts ConnectionMonitorEndpointFilterItemArray and ConnectionMonitorEndpointFilterItemArrayOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointFilterItemArrayInput` via:
//
//          ConnectionMonitorEndpointFilterItemArray{ ConnectionMonitorEndpointFilterItemArgs{...} }
type ConnectionMonitorEndpointFilterItemArrayInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointFilterItemArrayOutput() ConnectionMonitorEndpointFilterItemArrayOutput
	ToConnectionMonitorEndpointFilterItemArrayOutputWithContext(context.Context) ConnectionMonitorEndpointFilterItemArrayOutput
}

type ConnectionMonitorEndpointFilterItemArray []ConnectionMonitorEndpointFilterItemInput

func (ConnectionMonitorEndpointFilterItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpointFilterItem)(nil)).Elem()
}

func (i ConnectionMonitorEndpointFilterItemArray) ToConnectionMonitorEndpointFilterItemArrayOutput() ConnectionMonitorEndpointFilterItemArrayOutput {
	return i.ToConnectionMonitorEndpointFilterItemArrayOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointFilterItemArray) ToConnectionMonitorEndpointFilterItemArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointFilterItemArrayOutput)
}

// Describes the connection monitor endpoint filter item.
type ConnectionMonitorEndpointFilterItemOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointFilterItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointFilterItem)(nil)).Elem()
}

func (o ConnectionMonitorEndpointFilterItemOutput) ToConnectionMonitorEndpointFilterItemOutput() ConnectionMonitorEndpointFilterItemOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterItemOutput) ToConnectionMonitorEndpointFilterItemOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterItemOutput {
	return o
}

// The address of the filter item.
func (o ConnectionMonitorEndpointFilterItemOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointFilterItem) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The type of item included in the filter. Currently only 'AgentAddress' is supported.
func (o ConnectionMonitorEndpointFilterItemOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointFilterItem) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorEndpointFilterItemArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointFilterItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpointFilterItem)(nil)).Elem()
}

func (o ConnectionMonitorEndpointFilterItemArrayOutput) ToConnectionMonitorEndpointFilterItemArrayOutput() ConnectionMonitorEndpointFilterItemArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterItemArrayOutput) ToConnectionMonitorEndpointFilterItemArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterItemArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterItemArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorEndpointFilterItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorEndpointFilterItem {
		return vs[0].([]ConnectionMonitorEndpointFilterItem)[vs[1].(int)]
	}).(ConnectionMonitorEndpointFilterItemOutput)
}

// Describes the connection monitor endpoint filter item.
type ConnectionMonitorEndpointFilterItemResponse struct {
	// The address of the filter item.
	Address *string `pulumi:"address"`
	// The type of item included in the filter. Currently only 'AgentAddress' is supported.
	Type *string `pulumi:"type"`
}

// ConnectionMonitorEndpointFilterItemResponseInput is an input type that accepts ConnectionMonitorEndpointFilterItemResponseArgs and ConnectionMonitorEndpointFilterItemResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointFilterItemResponseInput` via:
//
//          ConnectionMonitorEndpointFilterItemResponseArgs{...}
type ConnectionMonitorEndpointFilterItemResponseInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointFilterItemResponseOutput() ConnectionMonitorEndpointFilterItemResponseOutput
	ToConnectionMonitorEndpointFilterItemResponseOutputWithContext(context.Context) ConnectionMonitorEndpointFilterItemResponseOutput
}

// Describes the connection monitor endpoint filter item.
type ConnectionMonitorEndpointFilterItemResponseArgs struct {
	// The address of the filter item.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The type of item included in the filter. Currently only 'AgentAddress' is supported.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionMonitorEndpointFilterItemResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointFilterItemResponse)(nil)).Elem()
}

func (i ConnectionMonitorEndpointFilterItemResponseArgs) ToConnectionMonitorEndpointFilterItemResponseOutput() ConnectionMonitorEndpointFilterItemResponseOutput {
	return i.ToConnectionMonitorEndpointFilterItemResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointFilterItemResponseArgs) ToConnectionMonitorEndpointFilterItemResponseOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterItemResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointFilterItemResponseOutput)
}

// ConnectionMonitorEndpointFilterItemResponseArrayInput is an input type that accepts ConnectionMonitorEndpointFilterItemResponseArray and ConnectionMonitorEndpointFilterItemResponseArrayOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointFilterItemResponseArrayInput` via:
//
//          ConnectionMonitorEndpointFilterItemResponseArray{ ConnectionMonitorEndpointFilterItemResponseArgs{...} }
type ConnectionMonitorEndpointFilterItemResponseArrayInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointFilterItemResponseArrayOutput() ConnectionMonitorEndpointFilterItemResponseArrayOutput
	ToConnectionMonitorEndpointFilterItemResponseArrayOutputWithContext(context.Context) ConnectionMonitorEndpointFilterItemResponseArrayOutput
}

type ConnectionMonitorEndpointFilterItemResponseArray []ConnectionMonitorEndpointFilterItemResponseInput

func (ConnectionMonitorEndpointFilterItemResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpointFilterItemResponse)(nil)).Elem()
}

func (i ConnectionMonitorEndpointFilterItemResponseArray) ToConnectionMonitorEndpointFilterItemResponseArrayOutput() ConnectionMonitorEndpointFilterItemResponseArrayOutput {
	return i.ToConnectionMonitorEndpointFilterItemResponseArrayOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointFilterItemResponseArray) ToConnectionMonitorEndpointFilterItemResponseArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterItemResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointFilterItemResponseArrayOutput)
}

// Describes the connection monitor endpoint filter item.
type ConnectionMonitorEndpointFilterItemResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointFilterItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointFilterItemResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointFilterItemResponseOutput) ToConnectionMonitorEndpointFilterItemResponseOutput() ConnectionMonitorEndpointFilterItemResponseOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterItemResponseOutput) ToConnectionMonitorEndpointFilterItemResponseOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterItemResponseOutput {
	return o
}

// The address of the filter item.
func (o ConnectionMonitorEndpointFilterItemResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointFilterItemResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The type of item included in the filter. Currently only 'AgentAddress' is supported.
func (o ConnectionMonitorEndpointFilterItemResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointFilterItemResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorEndpointFilterItemResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointFilterItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpointFilterItemResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointFilterItemResponseArrayOutput) ToConnectionMonitorEndpointFilterItemResponseArrayOutput() ConnectionMonitorEndpointFilterItemResponseArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterItemResponseArrayOutput) ToConnectionMonitorEndpointFilterItemResponseArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterItemResponseArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterItemResponseArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorEndpointFilterItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorEndpointFilterItemResponse {
		return vs[0].([]ConnectionMonitorEndpointFilterItemResponse)[vs[1].(int)]
	}).(ConnectionMonitorEndpointFilterItemResponseOutput)
}

// Describes the connection monitor endpoint filter.
type ConnectionMonitorEndpointFilterResponse struct {
	// List of items in the filter.
	Items []ConnectionMonitorEndpointFilterItemResponse `pulumi:"items"`
	// The behavior of the endpoint filter. Currently only 'Include' is supported.
	Type *string `pulumi:"type"`
}

// ConnectionMonitorEndpointFilterResponseInput is an input type that accepts ConnectionMonitorEndpointFilterResponseArgs and ConnectionMonitorEndpointFilterResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointFilterResponseInput` via:
//
//          ConnectionMonitorEndpointFilterResponseArgs{...}
type ConnectionMonitorEndpointFilterResponseInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointFilterResponseOutput() ConnectionMonitorEndpointFilterResponseOutput
	ToConnectionMonitorEndpointFilterResponseOutputWithContext(context.Context) ConnectionMonitorEndpointFilterResponseOutput
}

// Describes the connection monitor endpoint filter.
type ConnectionMonitorEndpointFilterResponseArgs struct {
	// List of items in the filter.
	Items ConnectionMonitorEndpointFilterItemResponseArrayInput `pulumi:"items"`
	// The behavior of the endpoint filter. Currently only 'Include' is supported.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionMonitorEndpointFilterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointFilterResponse)(nil)).Elem()
}

func (i ConnectionMonitorEndpointFilterResponseArgs) ToConnectionMonitorEndpointFilterResponseOutput() ConnectionMonitorEndpointFilterResponseOutput {
	return i.ToConnectionMonitorEndpointFilterResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointFilterResponseArgs) ToConnectionMonitorEndpointFilterResponseOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointFilterResponseOutput)
}

func (i ConnectionMonitorEndpointFilterResponseArgs) ToConnectionMonitorEndpointFilterResponsePtrOutput() ConnectionMonitorEndpointFilterResponsePtrOutput {
	return i.ToConnectionMonitorEndpointFilterResponsePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointFilterResponseArgs) ToConnectionMonitorEndpointFilterResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointFilterResponseOutput).ToConnectionMonitorEndpointFilterResponsePtrOutputWithContext(ctx)
}

// ConnectionMonitorEndpointFilterResponsePtrInput is an input type that accepts ConnectionMonitorEndpointFilterResponseArgs, ConnectionMonitorEndpointFilterResponsePtr and ConnectionMonitorEndpointFilterResponsePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointFilterResponsePtrInput` via:
//
//          ConnectionMonitorEndpointFilterResponseArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorEndpointFilterResponsePtrInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointFilterResponsePtrOutput() ConnectionMonitorEndpointFilterResponsePtrOutput
	ToConnectionMonitorEndpointFilterResponsePtrOutputWithContext(context.Context) ConnectionMonitorEndpointFilterResponsePtrOutput
}

type connectionMonitorEndpointFilterResponsePtrType ConnectionMonitorEndpointFilterResponseArgs

func ConnectionMonitorEndpointFilterResponsePtr(v *ConnectionMonitorEndpointFilterResponseArgs) ConnectionMonitorEndpointFilterResponsePtrInput {
	return (*connectionMonitorEndpointFilterResponsePtrType)(v)
}

func (*connectionMonitorEndpointFilterResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorEndpointFilterResponse)(nil)).Elem()
}

func (i *connectionMonitorEndpointFilterResponsePtrType) ToConnectionMonitorEndpointFilterResponsePtrOutput() ConnectionMonitorEndpointFilterResponsePtrOutput {
	return i.ToConnectionMonitorEndpointFilterResponsePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorEndpointFilterResponsePtrType) ToConnectionMonitorEndpointFilterResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointFilterResponsePtrOutput)
}

// Describes the connection monitor endpoint filter.
type ConnectionMonitorEndpointFilterResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointFilterResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointFilterResponseOutput) ToConnectionMonitorEndpointFilterResponseOutput() ConnectionMonitorEndpointFilterResponseOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterResponseOutput) ToConnectionMonitorEndpointFilterResponseOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterResponseOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterResponseOutput) ToConnectionMonitorEndpointFilterResponsePtrOutput() ConnectionMonitorEndpointFilterResponsePtrOutput {
	return o.ToConnectionMonitorEndpointFilterResponsePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorEndpointFilterResponseOutput) ToConnectionMonitorEndpointFilterResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointFilterResponse) *ConnectionMonitorEndpointFilterResponse {
		return &v
	}).(ConnectionMonitorEndpointFilterResponsePtrOutput)
}

// List of items in the filter.
func (o ConnectionMonitorEndpointFilterResponseOutput) Items() ConnectionMonitorEndpointFilterItemResponseArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointFilterResponse) []ConnectionMonitorEndpointFilterItemResponse {
		return v.Items
	}).(ConnectionMonitorEndpointFilterItemResponseArrayOutput)
}

// The behavior of the endpoint filter. Currently only 'Include' is supported.
func (o ConnectionMonitorEndpointFilterResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointFilterResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorEndpointFilterResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointFilterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorEndpointFilterResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointFilterResponsePtrOutput) ToConnectionMonitorEndpointFilterResponsePtrOutput() ConnectionMonitorEndpointFilterResponsePtrOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterResponsePtrOutput) ToConnectionMonitorEndpointFilterResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointFilterResponsePtrOutput {
	return o
}

func (o ConnectionMonitorEndpointFilterResponsePtrOutput) Elem() ConnectionMonitorEndpointFilterResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointFilterResponse) ConnectionMonitorEndpointFilterResponse { return *v }).(ConnectionMonitorEndpointFilterResponseOutput)
}

// List of items in the filter.
func (o ConnectionMonitorEndpointFilterResponsePtrOutput) Items() ConnectionMonitorEndpointFilterItemResponseArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointFilterResponse) []ConnectionMonitorEndpointFilterItemResponse {
		if v == nil {
			return nil
		}
		return v.Items
	}).(ConnectionMonitorEndpointFilterItemResponseArrayOutput)
}

// The behavior of the endpoint filter. Currently only 'Include' is supported.
func (o ConnectionMonitorEndpointFilterResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointFilterResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Describes the connection monitor endpoint.
type ConnectionMonitorEndpointResponse struct {
	// Address of the connection monitor endpoint (IP or domain name).
	Address *string `pulumi:"address"`
	// Test coverage for the endpoint.
	CoverageLevel *string `pulumi:"coverageLevel"`
	// Filter for sub-items within the endpoint.
	Filter *ConnectionMonitorEndpointFilterResponse `pulumi:"filter"`
	// The name of the connection monitor endpoint.
	Name string `pulumi:"name"`
	// Resource ID of the connection monitor endpoint.
	ResourceId *string `pulumi:"resourceId"`
	// Endpoint scope.
	Scope *ConnectionMonitorEndpointScopeResponse `pulumi:"scope"`
	// The endpoint type.
	Type *string `pulumi:"type"`
}

// ConnectionMonitorEndpointResponseInput is an input type that accepts ConnectionMonitorEndpointResponseArgs and ConnectionMonitorEndpointResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointResponseInput` via:
//
//          ConnectionMonitorEndpointResponseArgs{...}
type ConnectionMonitorEndpointResponseInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointResponseOutput() ConnectionMonitorEndpointResponseOutput
	ToConnectionMonitorEndpointResponseOutputWithContext(context.Context) ConnectionMonitorEndpointResponseOutput
}

// Describes the connection monitor endpoint.
type ConnectionMonitorEndpointResponseArgs struct {
	// Address of the connection monitor endpoint (IP or domain name).
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Test coverage for the endpoint.
	CoverageLevel pulumi.StringPtrInput `pulumi:"coverageLevel"`
	// Filter for sub-items within the endpoint.
	Filter ConnectionMonitorEndpointFilterResponsePtrInput `pulumi:"filter"`
	// The name of the connection monitor endpoint.
	Name pulumi.StringInput `pulumi:"name"`
	// Resource ID of the connection monitor endpoint.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Endpoint scope.
	Scope ConnectionMonitorEndpointScopeResponsePtrInput `pulumi:"scope"`
	// The endpoint type.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionMonitorEndpointResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointResponse)(nil)).Elem()
}

func (i ConnectionMonitorEndpointResponseArgs) ToConnectionMonitorEndpointResponseOutput() ConnectionMonitorEndpointResponseOutput {
	return i.ToConnectionMonitorEndpointResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointResponseArgs) ToConnectionMonitorEndpointResponseOutputWithContext(ctx context.Context) ConnectionMonitorEndpointResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointResponseOutput)
}

// ConnectionMonitorEndpointResponseArrayInput is an input type that accepts ConnectionMonitorEndpointResponseArray and ConnectionMonitorEndpointResponseArrayOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointResponseArrayInput` via:
//
//          ConnectionMonitorEndpointResponseArray{ ConnectionMonitorEndpointResponseArgs{...} }
type ConnectionMonitorEndpointResponseArrayInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointResponseArrayOutput() ConnectionMonitorEndpointResponseArrayOutput
	ToConnectionMonitorEndpointResponseArrayOutputWithContext(context.Context) ConnectionMonitorEndpointResponseArrayOutput
}

type ConnectionMonitorEndpointResponseArray []ConnectionMonitorEndpointResponseInput

func (ConnectionMonitorEndpointResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpointResponse)(nil)).Elem()
}

func (i ConnectionMonitorEndpointResponseArray) ToConnectionMonitorEndpointResponseArrayOutput() ConnectionMonitorEndpointResponseArrayOutput {
	return i.ToConnectionMonitorEndpointResponseArrayOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointResponseArray) ToConnectionMonitorEndpointResponseArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointResponseArrayOutput)
}

// Describes the connection monitor endpoint.
type ConnectionMonitorEndpointResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointResponseOutput) ToConnectionMonitorEndpointResponseOutput() ConnectionMonitorEndpointResponseOutput {
	return o
}

func (o ConnectionMonitorEndpointResponseOutput) ToConnectionMonitorEndpointResponseOutputWithContext(ctx context.Context) ConnectionMonitorEndpointResponseOutput {
	return o
}

// Address of the connection monitor endpoint (IP or domain name).
func (o ConnectionMonitorEndpointResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Test coverage for the endpoint.
func (o ConnectionMonitorEndpointResponseOutput) CoverageLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointResponse) *string { return v.CoverageLevel }).(pulumi.StringPtrOutput)
}

// Filter for sub-items within the endpoint.
func (o ConnectionMonitorEndpointResponseOutput) Filter() ConnectionMonitorEndpointFilterResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointResponse) *ConnectionMonitorEndpointFilterResponse { return v.Filter }).(ConnectionMonitorEndpointFilterResponsePtrOutput)
}

// The name of the connection monitor endpoint.
func (o ConnectionMonitorEndpointResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource ID of the connection monitor endpoint.
func (o ConnectionMonitorEndpointResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Endpoint scope.
func (o ConnectionMonitorEndpointResponseOutput) Scope() ConnectionMonitorEndpointScopeResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointResponse) *ConnectionMonitorEndpointScopeResponse { return v.Scope }).(ConnectionMonitorEndpointScopeResponsePtrOutput)
}

// The endpoint type.
func (o ConnectionMonitorEndpointResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorEndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpointResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointResponseArrayOutput) ToConnectionMonitorEndpointResponseArrayOutput() ConnectionMonitorEndpointResponseArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointResponseArrayOutput) ToConnectionMonitorEndpointResponseArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointResponseArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointResponseArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorEndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorEndpointResponse {
		return vs[0].([]ConnectionMonitorEndpointResponse)[vs[1].(int)]
	}).(ConnectionMonitorEndpointResponseOutput)
}

// Describes the connection monitor endpoint scope.
type ConnectionMonitorEndpointScope struct {
	// List of items which needs to be excluded from the endpoint scope.
	Exclude []ConnectionMonitorEndpointScopeItem `pulumi:"exclude"`
	// List of items which needs to be included to the endpoint scope.
	Include []ConnectionMonitorEndpointScopeItem `pulumi:"include"`
}

// ConnectionMonitorEndpointScopeInput is an input type that accepts ConnectionMonitorEndpointScopeArgs and ConnectionMonitorEndpointScopeOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointScopeInput` via:
//
//          ConnectionMonitorEndpointScopeArgs{...}
type ConnectionMonitorEndpointScopeInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointScopeOutput() ConnectionMonitorEndpointScopeOutput
	ToConnectionMonitorEndpointScopeOutputWithContext(context.Context) ConnectionMonitorEndpointScopeOutput
}

// Describes the connection monitor endpoint scope.
type ConnectionMonitorEndpointScopeArgs struct {
	// List of items which needs to be excluded from the endpoint scope.
	Exclude ConnectionMonitorEndpointScopeItemArrayInput `pulumi:"exclude"`
	// List of items which needs to be included to the endpoint scope.
	Include ConnectionMonitorEndpointScopeItemArrayInput `pulumi:"include"`
}

func (ConnectionMonitorEndpointScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointScope)(nil)).Elem()
}

func (i ConnectionMonitorEndpointScopeArgs) ToConnectionMonitorEndpointScopeOutput() ConnectionMonitorEndpointScopeOutput {
	return i.ToConnectionMonitorEndpointScopeOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointScopeArgs) ToConnectionMonitorEndpointScopeOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointScopeOutput)
}

func (i ConnectionMonitorEndpointScopeArgs) ToConnectionMonitorEndpointScopePtrOutput() ConnectionMonitorEndpointScopePtrOutput {
	return i.ToConnectionMonitorEndpointScopePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointScopeArgs) ToConnectionMonitorEndpointScopePtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointScopeOutput).ToConnectionMonitorEndpointScopePtrOutputWithContext(ctx)
}

// ConnectionMonitorEndpointScopePtrInput is an input type that accepts ConnectionMonitorEndpointScopeArgs, ConnectionMonitorEndpointScopePtr and ConnectionMonitorEndpointScopePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointScopePtrInput` via:
//
//          ConnectionMonitorEndpointScopeArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorEndpointScopePtrInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointScopePtrOutput() ConnectionMonitorEndpointScopePtrOutput
	ToConnectionMonitorEndpointScopePtrOutputWithContext(context.Context) ConnectionMonitorEndpointScopePtrOutput
}

type connectionMonitorEndpointScopePtrType ConnectionMonitorEndpointScopeArgs

func ConnectionMonitorEndpointScopePtr(v *ConnectionMonitorEndpointScopeArgs) ConnectionMonitorEndpointScopePtrInput {
	return (*connectionMonitorEndpointScopePtrType)(v)
}

func (*connectionMonitorEndpointScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorEndpointScope)(nil)).Elem()
}

func (i *connectionMonitorEndpointScopePtrType) ToConnectionMonitorEndpointScopePtrOutput() ConnectionMonitorEndpointScopePtrOutput {
	return i.ToConnectionMonitorEndpointScopePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorEndpointScopePtrType) ToConnectionMonitorEndpointScopePtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointScopePtrOutput)
}

// Describes the connection monitor endpoint scope.
type ConnectionMonitorEndpointScopeOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointScope)(nil)).Elem()
}

func (o ConnectionMonitorEndpointScopeOutput) ToConnectionMonitorEndpointScopeOutput() ConnectionMonitorEndpointScopeOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeOutput) ToConnectionMonitorEndpointScopeOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeOutput) ToConnectionMonitorEndpointScopePtrOutput() ConnectionMonitorEndpointScopePtrOutput {
	return o.ToConnectionMonitorEndpointScopePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorEndpointScopeOutput) ToConnectionMonitorEndpointScopePtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointScope) *ConnectionMonitorEndpointScope {
		return &v
	}).(ConnectionMonitorEndpointScopePtrOutput)
}

// List of items which needs to be excluded from the endpoint scope.
func (o ConnectionMonitorEndpointScopeOutput) Exclude() ConnectionMonitorEndpointScopeItemArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointScope) []ConnectionMonitorEndpointScopeItem { return v.Exclude }).(ConnectionMonitorEndpointScopeItemArrayOutput)
}

// List of items which needs to be included to the endpoint scope.
func (o ConnectionMonitorEndpointScopeOutput) Include() ConnectionMonitorEndpointScopeItemArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointScope) []ConnectionMonitorEndpointScopeItem { return v.Include }).(ConnectionMonitorEndpointScopeItemArrayOutput)
}

type ConnectionMonitorEndpointScopePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorEndpointScope)(nil)).Elem()
}

func (o ConnectionMonitorEndpointScopePtrOutput) ToConnectionMonitorEndpointScopePtrOutput() ConnectionMonitorEndpointScopePtrOutput {
	return o
}

func (o ConnectionMonitorEndpointScopePtrOutput) ToConnectionMonitorEndpointScopePtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopePtrOutput {
	return o
}

func (o ConnectionMonitorEndpointScopePtrOutput) Elem() ConnectionMonitorEndpointScopeOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointScope) ConnectionMonitorEndpointScope { return *v }).(ConnectionMonitorEndpointScopeOutput)
}

// List of items which needs to be excluded from the endpoint scope.
func (o ConnectionMonitorEndpointScopePtrOutput) Exclude() ConnectionMonitorEndpointScopeItemArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointScope) []ConnectionMonitorEndpointScopeItem {
		if v == nil {
			return nil
		}
		return v.Exclude
	}).(ConnectionMonitorEndpointScopeItemArrayOutput)
}

// List of items which needs to be included to the endpoint scope.
func (o ConnectionMonitorEndpointScopePtrOutput) Include() ConnectionMonitorEndpointScopeItemArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointScope) []ConnectionMonitorEndpointScopeItem {
		if v == nil {
			return nil
		}
		return v.Include
	}).(ConnectionMonitorEndpointScopeItemArrayOutput)
}

// Describes the connection monitor endpoint scope item.
type ConnectionMonitorEndpointScopeItem struct {
	// The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address.
	Address *string `pulumi:"address"`
}

// ConnectionMonitorEndpointScopeItemInput is an input type that accepts ConnectionMonitorEndpointScopeItemArgs and ConnectionMonitorEndpointScopeItemOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointScopeItemInput` via:
//
//          ConnectionMonitorEndpointScopeItemArgs{...}
type ConnectionMonitorEndpointScopeItemInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointScopeItemOutput() ConnectionMonitorEndpointScopeItemOutput
	ToConnectionMonitorEndpointScopeItemOutputWithContext(context.Context) ConnectionMonitorEndpointScopeItemOutput
}

// Describes the connection monitor endpoint scope item.
type ConnectionMonitorEndpointScopeItemArgs struct {
	// The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address.
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (ConnectionMonitorEndpointScopeItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointScopeItem)(nil)).Elem()
}

func (i ConnectionMonitorEndpointScopeItemArgs) ToConnectionMonitorEndpointScopeItemOutput() ConnectionMonitorEndpointScopeItemOutput {
	return i.ToConnectionMonitorEndpointScopeItemOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointScopeItemArgs) ToConnectionMonitorEndpointScopeItemOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointScopeItemOutput)
}

// ConnectionMonitorEndpointScopeItemArrayInput is an input type that accepts ConnectionMonitorEndpointScopeItemArray and ConnectionMonitorEndpointScopeItemArrayOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointScopeItemArrayInput` via:
//
//          ConnectionMonitorEndpointScopeItemArray{ ConnectionMonitorEndpointScopeItemArgs{...} }
type ConnectionMonitorEndpointScopeItemArrayInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointScopeItemArrayOutput() ConnectionMonitorEndpointScopeItemArrayOutput
	ToConnectionMonitorEndpointScopeItemArrayOutputWithContext(context.Context) ConnectionMonitorEndpointScopeItemArrayOutput
}

type ConnectionMonitorEndpointScopeItemArray []ConnectionMonitorEndpointScopeItemInput

func (ConnectionMonitorEndpointScopeItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpointScopeItem)(nil)).Elem()
}

func (i ConnectionMonitorEndpointScopeItemArray) ToConnectionMonitorEndpointScopeItemArrayOutput() ConnectionMonitorEndpointScopeItemArrayOutput {
	return i.ToConnectionMonitorEndpointScopeItemArrayOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointScopeItemArray) ToConnectionMonitorEndpointScopeItemArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointScopeItemArrayOutput)
}

// Describes the connection monitor endpoint scope item.
type ConnectionMonitorEndpointScopeItemOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointScopeItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointScopeItem)(nil)).Elem()
}

func (o ConnectionMonitorEndpointScopeItemOutput) ToConnectionMonitorEndpointScopeItemOutput() ConnectionMonitorEndpointScopeItemOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeItemOutput) ToConnectionMonitorEndpointScopeItemOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeItemOutput {
	return o
}

// The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address.
func (o ConnectionMonitorEndpointScopeItemOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointScopeItem) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorEndpointScopeItemArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointScopeItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpointScopeItem)(nil)).Elem()
}

func (o ConnectionMonitorEndpointScopeItemArrayOutput) ToConnectionMonitorEndpointScopeItemArrayOutput() ConnectionMonitorEndpointScopeItemArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeItemArrayOutput) ToConnectionMonitorEndpointScopeItemArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeItemArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeItemArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorEndpointScopeItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorEndpointScopeItem {
		return vs[0].([]ConnectionMonitorEndpointScopeItem)[vs[1].(int)]
	}).(ConnectionMonitorEndpointScopeItemOutput)
}

// Describes the connection monitor endpoint scope item.
type ConnectionMonitorEndpointScopeItemResponse struct {
	// The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address.
	Address *string `pulumi:"address"`
}

// ConnectionMonitorEndpointScopeItemResponseInput is an input type that accepts ConnectionMonitorEndpointScopeItemResponseArgs and ConnectionMonitorEndpointScopeItemResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointScopeItemResponseInput` via:
//
//          ConnectionMonitorEndpointScopeItemResponseArgs{...}
type ConnectionMonitorEndpointScopeItemResponseInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointScopeItemResponseOutput() ConnectionMonitorEndpointScopeItemResponseOutput
	ToConnectionMonitorEndpointScopeItemResponseOutputWithContext(context.Context) ConnectionMonitorEndpointScopeItemResponseOutput
}

// Describes the connection monitor endpoint scope item.
type ConnectionMonitorEndpointScopeItemResponseArgs struct {
	// The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address.
	Address pulumi.StringPtrInput `pulumi:"address"`
}

func (ConnectionMonitorEndpointScopeItemResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointScopeItemResponse)(nil)).Elem()
}

func (i ConnectionMonitorEndpointScopeItemResponseArgs) ToConnectionMonitorEndpointScopeItemResponseOutput() ConnectionMonitorEndpointScopeItemResponseOutput {
	return i.ToConnectionMonitorEndpointScopeItemResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointScopeItemResponseArgs) ToConnectionMonitorEndpointScopeItemResponseOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeItemResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointScopeItemResponseOutput)
}

// ConnectionMonitorEndpointScopeItemResponseArrayInput is an input type that accepts ConnectionMonitorEndpointScopeItemResponseArray and ConnectionMonitorEndpointScopeItemResponseArrayOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointScopeItemResponseArrayInput` via:
//
//          ConnectionMonitorEndpointScopeItemResponseArray{ ConnectionMonitorEndpointScopeItemResponseArgs{...} }
type ConnectionMonitorEndpointScopeItemResponseArrayInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointScopeItemResponseArrayOutput() ConnectionMonitorEndpointScopeItemResponseArrayOutput
	ToConnectionMonitorEndpointScopeItemResponseArrayOutputWithContext(context.Context) ConnectionMonitorEndpointScopeItemResponseArrayOutput
}

type ConnectionMonitorEndpointScopeItemResponseArray []ConnectionMonitorEndpointScopeItemResponseInput

func (ConnectionMonitorEndpointScopeItemResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpointScopeItemResponse)(nil)).Elem()
}

func (i ConnectionMonitorEndpointScopeItemResponseArray) ToConnectionMonitorEndpointScopeItemResponseArrayOutput() ConnectionMonitorEndpointScopeItemResponseArrayOutput {
	return i.ToConnectionMonitorEndpointScopeItemResponseArrayOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointScopeItemResponseArray) ToConnectionMonitorEndpointScopeItemResponseArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeItemResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointScopeItemResponseArrayOutput)
}

// Describes the connection monitor endpoint scope item.
type ConnectionMonitorEndpointScopeItemResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointScopeItemResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointScopeItemResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointScopeItemResponseOutput) ToConnectionMonitorEndpointScopeItemResponseOutput() ConnectionMonitorEndpointScopeItemResponseOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeItemResponseOutput) ToConnectionMonitorEndpointScopeItemResponseOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeItemResponseOutput {
	return o
}

// The address of the endpoint item. Supported types are IPv4/IPv6 subnet mask or IPv4/IPv6 IP address.
func (o ConnectionMonitorEndpointScopeItemResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointScopeItemResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorEndpointScopeItemResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointScopeItemResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorEndpointScopeItemResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointScopeItemResponseArrayOutput) ToConnectionMonitorEndpointScopeItemResponseArrayOutput() ConnectionMonitorEndpointScopeItemResponseArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeItemResponseArrayOutput) ToConnectionMonitorEndpointScopeItemResponseArrayOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeItemResponseArrayOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeItemResponseArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorEndpointScopeItemResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorEndpointScopeItemResponse {
		return vs[0].([]ConnectionMonitorEndpointScopeItemResponse)[vs[1].(int)]
	}).(ConnectionMonitorEndpointScopeItemResponseOutput)
}

// Describes the connection monitor endpoint scope.
type ConnectionMonitorEndpointScopeResponse struct {
	// List of items which needs to be excluded from the endpoint scope.
	Exclude []ConnectionMonitorEndpointScopeItemResponse `pulumi:"exclude"`
	// List of items which needs to be included to the endpoint scope.
	Include []ConnectionMonitorEndpointScopeItemResponse `pulumi:"include"`
}

// ConnectionMonitorEndpointScopeResponseInput is an input type that accepts ConnectionMonitorEndpointScopeResponseArgs and ConnectionMonitorEndpointScopeResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointScopeResponseInput` via:
//
//          ConnectionMonitorEndpointScopeResponseArgs{...}
type ConnectionMonitorEndpointScopeResponseInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointScopeResponseOutput() ConnectionMonitorEndpointScopeResponseOutput
	ToConnectionMonitorEndpointScopeResponseOutputWithContext(context.Context) ConnectionMonitorEndpointScopeResponseOutput
}

// Describes the connection monitor endpoint scope.
type ConnectionMonitorEndpointScopeResponseArgs struct {
	// List of items which needs to be excluded from the endpoint scope.
	Exclude ConnectionMonitorEndpointScopeItemResponseArrayInput `pulumi:"exclude"`
	// List of items which needs to be included to the endpoint scope.
	Include ConnectionMonitorEndpointScopeItemResponseArrayInput `pulumi:"include"`
}

func (ConnectionMonitorEndpointScopeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointScopeResponse)(nil)).Elem()
}

func (i ConnectionMonitorEndpointScopeResponseArgs) ToConnectionMonitorEndpointScopeResponseOutput() ConnectionMonitorEndpointScopeResponseOutput {
	return i.ToConnectionMonitorEndpointScopeResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointScopeResponseArgs) ToConnectionMonitorEndpointScopeResponseOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointScopeResponseOutput)
}

func (i ConnectionMonitorEndpointScopeResponseArgs) ToConnectionMonitorEndpointScopeResponsePtrOutput() ConnectionMonitorEndpointScopeResponsePtrOutput {
	return i.ToConnectionMonitorEndpointScopeResponsePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorEndpointScopeResponseArgs) ToConnectionMonitorEndpointScopeResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointScopeResponseOutput).ToConnectionMonitorEndpointScopeResponsePtrOutputWithContext(ctx)
}

// ConnectionMonitorEndpointScopeResponsePtrInput is an input type that accepts ConnectionMonitorEndpointScopeResponseArgs, ConnectionMonitorEndpointScopeResponsePtr and ConnectionMonitorEndpointScopeResponsePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorEndpointScopeResponsePtrInput` via:
//
//          ConnectionMonitorEndpointScopeResponseArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorEndpointScopeResponsePtrInput interface {
	pulumi.Input

	ToConnectionMonitorEndpointScopeResponsePtrOutput() ConnectionMonitorEndpointScopeResponsePtrOutput
	ToConnectionMonitorEndpointScopeResponsePtrOutputWithContext(context.Context) ConnectionMonitorEndpointScopeResponsePtrOutput
}

type connectionMonitorEndpointScopeResponsePtrType ConnectionMonitorEndpointScopeResponseArgs

func ConnectionMonitorEndpointScopeResponsePtr(v *ConnectionMonitorEndpointScopeResponseArgs) ConnectionMonitorEndpointScopeResponsePtrInput {
	return (*connectionMonitorEndpointScopeResponsePtrType)(v)
}

func (*connectionMonitorEndpointScopeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorEndpointScopeResponse)(nil)).Elem()
}

func (i *connectionMonitorEndpointScopeResponsePtrType) ToConnectionMonitorEndpointScopeResponsePtrOutput() ConnectionMonitorEndpointScopeResponsePtrOutput {
	return i.ToConnectionMonitorEndpointScopeResponsePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorEndpointScopeResponsePtrType) ToConnectionMonitorEndpointScopeResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorEndpointScopeResponsePtrOutput)
}

// Describes the connection monitor endpoint scope.
type ConnectionMonitorEndpointScopeResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointScopeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorEndpointScopeResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointScopeResponseOutput) ToConnectionMonitorEndpointScopeResponseOutput() ConnectionMonitorEndpointScopeResponseOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeResponseOutput) ToConnectionMonitorEndpointScopeResponseOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeResponseOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeResponseOutput) ToConnectionMonitorEndpointScopeResponsePtrOutput() ConnectionMonitorEndpointScopeResponsePtrOutput {
	return o.ToConnectionMonitorEndpointScopeResponsePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorEndpointScopeResponseOutput) ToConnectionMonitorEndpointScopeResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointScopeResponse) *ConnectionMonitorEndpointScopeResponse {
		return &v
	}).(ConnectionMonitorEndpointScopeResponsePtrOutput)
}

// List of items which needs to be excluded from the endpoint scope.
func (o ConnectionMonitorEndpointScopeResponseOutput) Exclude() ConnectionMonitorEndpointScopeItemResponseArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointScopeResponse) []ConnectionMonitorEndpointScopeItemResponse {
		return v.Exclude
	}).(ConnectionMonitorEndpointScopeItemResponseArrayOutput)
}

// List of items which needs to be included to the endpoint scope.
func (o ConnectionMonitorEndpointScopeResponseOutput) Include() ConnectionMonitorEndpointScopeItemResponseArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorEndpointScopeResponse) []ConnectionMonitorEndpointScopeItemResponse {
		return v.Include
	}).(ConnectionMonitorEndpointScopeItemResponseArrayOutput)
}

type ConnectionMonitorEndpointScopeResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorEndpointScopeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorEndpointScopeResponse)(nil)).Elem()
}

func (o ConnectionMonitorEndpointScopeResponsePtrOutput) ToConnectionMonitorEndpointScopeResponsePtrOutput() ConnectionMonitorEndpointScopeResponsePtrOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeResponsePtrOutput) ToConnectionMonitorEndpointScopeResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorEndpointScopeResponsePtrOutput {
	return o
}

func (o ConnectionMonitorEndpointScopeResponsePtrOutput) Elem() ConnectionMonitorEndpointScopeResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointScopeResponse) ConnectionMonitorEndpointScopeResponse { return *v }).(ConnectionMonitorEndpointScopeResponseOutput)
}

// List of items which needs to be excluded from the endpoint scope.
func (o ConnectionMonitorEndpointScopeResponsePtrOutput) Exclude() ConnectionMonitorEndpointScopeItemResponseArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointScopeResponse) []ConnectionMonitorEndpointScopeItemResponse {
		if v == nil {
			return nil
		}
		return v.Exclude
	}).(ConnectionMonitorEndpointScopeItemResponseArrayOutput)
}

// List of items which needs to be included to the endpoint scope.
func (o ConnectionMonitorEndpointScopeResponsePtrOutput) Include() ConnectionMonitorEndpointScopeItemResponseArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorEndpointScopeResponse) []ConnectionMonitorEndpointScopeItemResponse {
		if v == nil {
			return nil
		}
		return v.Include
	}).(ConnectionMonitorEndpointScopeItemResponseArrayOutput)
}

// Describes the HTTP configuration.
type ConnectionMonitorHttpConfiguration struct {
	// The HTTP method to use.
	Method *string `pulumi:"method"`
	// The path component of the URI. For instance, "/dir1/dir2".
	Path *string `pulumi:"path"`
	// The port to connect to.
	Port *int `pulumi:"port"`
	// Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
	PreferHTTPS *bool `pulumi:"preferHTTPS"`
	// The HTTP headers to transmit with the request.
	RequestHeaders []HTTPHeader `pulumi:"requestHeaders"`
	// HTTP status codes to consider successful. For instance, "2xx,301-304,418".
	ValidStatusCodeRanges []string `pulumi:"validStatusCodeRanges"`
}

// ConnectionMonitorHttpConfigurationInput is an input type that accepts ConnectionMonitorHttpConfigurationArgs and ConnectionMonitorHttpConfigurationOutput values.
// You can construct a concrete instance of `ConnectionMonitorHttpConfigurationInput` via:
//
//          ConnectionMonitorHttpConfigurationArgs{...}
type ConnectionMonitorHttpConfigurationInput interface {
	pulumi.Input

	ToConnectionMonitorHttpConfigurationOutput() ConnectionMonitorHttpConfigurationOutput
	ToConnectionMonitorHttpConfigurationOutputWithContext(context.Context) ConnectionMonitorHttpConfigurationOutput
}

// Describes the HTTP configuration.
type ConnectionMonitorHttpConfigurationArgs struct {
	// The HTTP method to use.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The path component of the URI. For instance, "/dir1/dir2".
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port to connect to.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
	PreferHTTPS pulumi.BoolPtrInput `pulumi:"preferHTTPS"`
	// The HTTP headers to transmit with the request.
	RequestHeaders HTTPHeaderArrayInput `pulumi:"requestHeaders"`
	// HTTP status codes to consider successful. For instance, "2xx,301-304,418".
	ValidStatusCodeRanges pulumi.StringArrayInput `pulumi:"validStatusCodeRanges"`
}

func (ConnectionMonitorHttpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorHttpConfiguration)(nil)).Elem()
}

func (i ConnectionMonitorHttpConfigurationArgs) ToConnectionMonitorHttpConfigurationOutput() ConnectionMonitorHttpConfigurationOutput {
	return i.ToConnectionMonitorHttpConfigurationOutputWithContext(context.Background())
}

func (i ConnectionMonitorHttpConfigurationArgs) ToConnectionMonitorHttpConfigurationOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorHttpConfigurationOutput)
}

func (i ConnectionMonitorHttpConfigurationArgs) ToConnectionMonitorHttpConfigurationPtrOutput() ConnectionMonitorHttpConfigurationPtrOutput {
	return i.ToConnectionMonitorHttpConfigurationPtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorHttpConfigurationArgs) ToConnectionMonitorHttpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorHttpConfigurationOutput).ToConnectionMonitorHttpConfigurationPtrOutputWithContext(ctx)
}

// ConnectionMonitorHttpConfigurationPtrInput is an input type that accepts ConnectionMonitorHttpConfigurationArgs, ConnectionMonitorHttpConfigurationPtr and ConnectionMonitorHttpConfigurationPtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorHttpConfigurationPtrInput` via:
//
//          ConnectionMonitorHttpConfigurationArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorHttpConfigurationPtrInput interface {
	pulumi.Input

	ToConnectionMonitorHttpConfigurationPtrOutput() ConnectionMonitorHttpConfigurationPtrOutput
	ToConnectionMonitorHttpConfigurationPtrOutputWithContext(context.Context) ConnectionMonitorHttpConfigurationPtrOutput
}

type connectionMonitorHttpConfigurationPtrType ConnectionMonitorHttpConfigurationArgs

func ConnectionMonitorHttpConfigurationPtr(v *ConnectionMonitorHttpConfigurationArgs) ConnectionMonitorHttpConfigurationPtrInput {
	return (*connectionMonitorHttpConfigurationPtrType)(v)
}

func (*connectionMonitorHttpConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorHttpConfiguration)(nil)).Elem()
}

func (i *connectionMonitorHttpConfigurationPtrType) ToConnectionMonitorHttpConfigurationPtrOutput() ConnectionMonitorHttpConfigurationPtrOutput {
	return i.ToConnectionMonitorHttpConfigurationPtrOutputWithContext(context.Background())
}

func (i *connectionMonitorHttpConfigurationPtrType) ToConnectionMonitorHttpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorHttpConfigurationPtrOutput)
}

// Describes the HTTP configuration.
type ConnectionMonitorHttpConfigurationOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorHttpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorHttpConfiguration)(nil)).Elem()
}

func (o ConnectionMonitorHttpConfigurationOutput) ToConnectionMonitorHttpConfigurationOutput() ConnectionMonitorHttpConfigurationOutput {
	return o
}

func (o ConnectionMonitorHttpConfigurationOutput) ToConnectionMonitorHttpConfigurationOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationOutput {
	return o
}

func (o ConnectionMonitorHttpConfigurationOutput) ToConnectionMonitorHttpConfigurationPtrOutput() ConnectionMonitorHttpConfigurationPtrOutput {
	return o.ToConnectionMonitorHttpConfigurationPtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorHttpConfigurationOutput) ToConnectionMonitorHttpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfiguration) *ConnectionMonitorHttpConfiguration {
		return &v
	}).(ConnectionMonitorHttpConfigurationPtrOutput)
}

// The HTTP method to use.
func (o ConnectionMonitorHttpConfigurationOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfiguration) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The path component of the URI. For instance, "/dir1/dir2".
func (o ConnectionMonitorHttpConfigurationOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfiguration) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port to connect to.
func (o ConnectionMonitorHttpConfigurationOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfiguration) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
func (o ConnectionMonitorHttpConfigurationOutput) PreferHTTPS() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfiguration) *bool { return v.PreferHTTPS }).(pulumi.BoolPtrOutput)
}

// The HTTP headers to transmit with the request.
func (o ConnectionMonitorHttpConfigurationOutput) RequestHeaders() HTTPHeaderArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfiguration) []HTTPHeader { return v.RequestHeaders }).(HTTPHeaderArrayOutput)
}

// HTTP status codes to consider successful. For instance, "2xx,301-304,418".
func (o ConnectionMonitorHttpConfigurationOutput) ValidStatusCodeRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfiguration) []string { return v.ValidStatusCodeRanges }).(pulumi.StringArrayOutput)
}

type ConnectionMonitorHttpConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorHttpConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorHttpConfiguration)(nil)).Elem()
}

func (o ConnectionMonitorHttpConfigurationPtrOutput) ToConnectionMonitorHttpConfigurationPtrOutput() ConnectionMonitorHttpConfigurationPtrOutput {
	return o
}

func (o ConnectionMonitorHttpConfigurationPtrOutput) ToConnectionMonitorHttpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationPtrOutput {
	return o
}

func (o ConnectionMonitorHttpConfigurationPtrOutput) Elem() ConnectionMonitorHttpConfigurationOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfiguration) ConnectionMonitorHttpConfiguration { return *v }).(ConnectionMonitorHttpConfigurationOutput)
}

// The HTTP method to use.
func (o ConnectionMonitorHttpConfigurationPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The path component of the URI. For instance, "/dir1/dir2".
func (o ConnectionMonitorHttpConfigurationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port to connect to.
func (o ConnectionMonitorHttpConfigurationPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
func (o ConnectionMonitorHttpConfigurationPtrOutput) PreferHTTPS() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.PreferHTTPS
	}).(pulumi.BoolPtrOutput)
}

// The HTTP headers to transmit with the request.
func (o ConnectionMonitorHttpConfigurationPtrOutput) RequestHeaders() HTTPHeaderArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfiguration) []HTTPHeader {
		if v == nil {
			return nil
		}
		return v.RequestHeaders
	}).(HTTPHeaderArrayOutput)
}

// HTTP status codes to consider successful. For instance, "2xx,301-304,418".
func (o ConnectionMonitorHttpConfigurationPtrOutput) ValidStatusCodeRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.ValidStatusCodeRanges
	}).(pulumi.StringArrayOutput)
}

// Describes the HTTP configuration.
type ConnectionMonitorHttpConfigurationResponse struct {
	// The HTTP method to use.
	Method *string `pulumi:"method"`
	// The path component of the URI. For instance, "/dir1/dir2".
	Path *string `pulumi:"path"`
	// The port to connect to.
	Port *int `pulumi:"port"`
	// Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
	PreferHTTPS *bool `pulumi:"preferHTTPS"`
	// The HTTP headers to transmit with the request.
	RequestHeaders []HTTPHeaderResponse `pulumi:"requestHeaders"`
	// HTTP status codes to consider successful. For instance, "2xx,301-304,418".
	ValidStatusCodeRanges []string `pulumi:"validStatusCodeRanges"`
}

// ConnectionMonitorHttpConfigurationResponseInput is an input type that accepts ConnectionMonitorHttpConfigurationResponseArgs and ConnectionMonitorHttpConfigurationResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorHttpConfigurationResponseInput` via:
//
//          ConnectionMonitorHttpConfigurationResponseArgs{...}
type ConnectionMonitorHttpConfigurationResponseInput interface {
	pulumi.Input

	ToConnectionMonitorHttpConfigurationResponseOutput() ConnectionMonitorHttpConfigurationResponseOutput
	ToConnectionMonitorHttpConfigurationResponseOutputWithContext(context.Context) ConnectionMonitorHttpConfigurationResponseOutput
}

// Describes the HTTP configuration.
type ConnectionMonitorHttpConfigurationResponseArgs struct {
	// The HTTP method to use.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The path component of the URI. For instance, "/dir1/dir2".
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port to connect to.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
	PreferHTTPS pulumi.BoolPtrInput `pulumi:"preferHTTPS"`
	// The HTTP headers to transmit with the request.
	RequestHeaders HTTPHeaderResponseArrayInput `pulumi:"requestHeaders"`
	// HTTP status codes to consider successful. For instance, "2xx,301-304,418".
	ValidStatusCodeRanges pulumi.StringArrayInput `pulumi:"validStatusCodeRanges"`
}

func (ConnectionMonitorHttpConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorHttpConfigurationResponse)(nil)).Elem()
}

func (i ConnectionMonitorHttpConfigurationResponseArgs) ToConnectionMonitorHttpConfigurationResponseOutput() ConnectionMonitorHttpConfigurationResponseOutput {
	return i.ToConnectionMonitorHttpConfigurationResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorHttpConfigurationResponseArgs) ToConnectionMonitorHttpConfigurationResponseOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorHttpConfigurationResponseOutput)
}

func (i ConnectionMonitorHttpConfigurationResponseArgs) ToConnectionMonitorHttpConfigurationResponsePtrOutput() ConnectionMonitorHttpConfigurationResponsePtrOutput {
	return i.ToConnectionMonitorHttpConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorHttpConfigurationResponseArgs) ToConnectionMonitorHttpConfigurationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorHttpConfigurationResponseOutput).ToConnectionMonitorHttpConfigurationResponsePtrOutputWithContext(ctx)
}

// ConnectionMonitorHttpConfigurationResponsePtrInput is an input type that accepts ConnectionMonitorHttpConfigurationResponseArgs, ConnectionMonitorHttpConfigurationResponsePtr and ConnectionMonitorHttpConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorHttpConfigurationResponsePtrInput` via:
//
//          ConnectionMonitorHttpConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorHttpConfigurationResponsePtrInput interface {
	pulumi.Input

	ToConnectionMonitorHttpConfigurationResponsePtrOutput() ConnectionMonitorHttpConfigurationResponsePtrOutput
	ToConnectionMonitorHttpConfigurationResponsePtrOutputWithContext(context.Context) ConnectionMonitorHttpConfigurationResponsePtrOutput
}

type connectionMonitorHttpConfigurationResponsePtrType ConnectionMonitorHttpConfigurationResponseArgs

func ConnectionMonitorHttpConfigurationResponsePtr(v *ConnectionMonitorHttpConfigurationResponseArgs) ConnectionMonitorHttpConfigurationResponsePtrInput {
	return (*connectionMonitorHttpConfigurationResponsePtrType)(v)
}

func (*connectionMonitorHttpConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorHttpConfigurationResponse)(nil)).Elem()
}

func (i *connectionMonitorHttpConfigurationResponsePtrType) ToConnectionMonitorHttpConfigurationResponsePtrOutput() ConnectionMonitorHttpConfigurationResponsePtrOutput {
	return i.ToConnectionMonitorHttpConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorHttpConfigurationResponsePtrType) ToConnectionMonitorHttpConfigurationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorHttpConfigurationResponsePtrOutput)
}

// Describes the HTTP configuration.
type ConnectionMonitorHttpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorHttpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorHttpConfigurationResponse)(nil)).Elem()
}

func (o ConnectionMonitorHttpConfigurationResponseOutput) ToConnectionMonitorHttpConfigurationResponseOutput() ConnectionMonitorHttpConfigurationResponseOutput {
	return o
}

func (o ConnectionMonitorHttpConfigurationResponseOutput) ToConnectionMonitorHttpConfigurationResponseOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationResponseOutput {
	return o
}

func (o ConnectionMonitorHttpConfigurationResponseOutput) ToConnectionMonitorHttpConfigurationResponsePtrOutput() ConnectionMonitorHttpConfigurationResponsePtrOutput {
	return o.ToConnectionMonitorHttpConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorHttpConfigurationResponseOutput) ToConnectionMonitorHttpConfigurationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfigurationResponse) *ConnectionMonitorHttpConfigurationResponse {
		return &v
	}).(ConnectionMonitorHttpConfigurationResponsePtrOutput)
}

// The HTTP method to use.
func (o ConnectionMonitorHttpConfigurationResponseOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfigurationResponse) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The path component of the URI. For instance, "/dir1/dir2".
func (o ConnectionMonitorHttpConfigurationResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfigurationResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port to connect to.
func (o ConnectionMonitorHttpConfigurationResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfigurationResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
func (o ConnectionMonitorHttpConfigurationResponseOutput) PreferHTTPS() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfigurationResponse) *bool { return v.PreferHTTPS }).(pulumi.BoolPtrOutput)
}

// The HTTP headers to transmit with the request.
func (o ConnectionMonitorHttpConfigurationResponseOutput) RequestHeaders() HTTPHeaderResponseArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfigurationResponse) []HTTPHeaderResponse { return v.RequestHeaders }).(HTTPHeaderResponseArrayOutput)
}

// HTTP status codes to consider successful. For instance, "2xx,301-304,418".
func (o ConnectionMonitorHttpConfigurationResponseOutput) ValidStatusCodeRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorHttpConfigurationResponse) []string { return v.ValidStatusCodeRanges }).(pulumi.StringArrayOutput)
}

type ConnectionMonitorHttpConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorHttpConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorHttpConfigurationResponse)(nil)).Elem()
}

func (o ConnectionMonitorHttpConfigurationResponsePtrOutput) ToConnectionMonitorHttpConfigurationResponsePtrOutput() ConnectionMonitorHttpConfigurationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorHttpConfigurationResponsePtrOutput) ToConnectionMonitorHttpConfigurationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorHttpConfigurationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorHttpConfigurationResponsePtrOutput) Elem() ConnectionMonitorHttpConfigurationResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfigurationResponse) ConnectionMonitorHttpConfigurationResponse {
		return *v
	}).(ConnectionMonitorHttpConfigurationResponseOutput)
}

// The HTTP method to use.
func (o ConnectionMonitorHttpConfigurationResponsePtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The path component of the URI. For instance, "/dir1/dir2".
func (o ConnectionMonitorHttpConfigurationResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The port to connect to.
func (o ConnectionMonitorHttpConfigurationResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Value indicating whether HTTPS is preferred over HTTP in cases where the choice is not explicit.
func (o ConnectionMonitorHttpConfigurationResponsePtrOutput) PreferHTTPS() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.PreferHTTPS
	}).(pulumi.BoolPtrOutput)
}

// The HTTP headers to transmit with the request.
func (o ConnectionMonitorHttpConfigurationResponsePtrOutput) RequestHeaders() HTTPHeaderResponseArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfigurationResponse) []HTTPHeaderResponse {
		if v == nil {
			return nil
		}
		return v.RequestHeaders
	}).(HTTPHeaderResponseArrayOutput)
}

// HTTP status codes to consider successful. For instance, "2xx,301-304,418".
func (o ConnectionMonitorHttpConfigurationResponsePtrOutput) ValidStatusCodeRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionMonitorHttpConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.ValidStatusCodeRanges
	}).(pulumi.StringArrayOutput)
}

// Describes the ICMP configuration.
type ConnectionMonitorIcmpConfiguration struct {
	// Value indicating whether path evaluation with trace route should be disabled.
	DisableTraceRoute *bool `pulumi:"disableTraceRoute"`
}

// ConnectionMonitorIcmpConfigurationInput is an input type that accepts ConnectionMonitorIcmpConfigurationArgs and ConnectionMonitorIcmpConfigurationOutput values.
// You can construct a concrete instance of `ConnectionMonitorIcmpConfigurationInput` via:
//
//          ConnectionMonitorIcmpConfigurationArgs{...}
type ConnectionMonitorIcmpConfigurationInput interface {
	pulumi.Input

	ToConnectionMonitorIcmpConfigurationOutput() ConnectionMonitorIcmpConfigurationOutput
	ToConnectionMonitorIcmpConfigurationOutputWithContext(context.Context) ConnectionMonitorIcmpConfigurationOutput
}

// Describes the ICMP configuration.
type ConnectionMonitorIcmpConfigurationArgs struct {
	// Value indicating whether path evaluation with trace route should be disabled.
	DisableTraceRoute pulumi.BoolPtrInput `pulumi:"disableTraceRoute"`
}

func (ConnectionMonitorIcmpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorIcmpConfiguration)(nil)).Elem()
}

func (i ConnectionMonitorIcmpConfigurationArgs) ToConnectionMonitorIcmpConfigurationOutput() ConnectionMonitorIcmpConfigurationOutput {
	return i.ToConnectionMonitorIcmpConfigurationOutputWithContext(context.Background())
}

func (i ConnectionMonitorIcmpConfigurationArgs) ToConnectionMonitorIcmpConfigurationOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorIcmpConfigurationOutput)
}

func (i ConnectionMonitorIcmpConfigurationArgs) ToConnectionMonitorIcmpConfigurationPtrOutput() ConnectionMonitorIcmpConfigurationPtrOutput {
	return i.ToConnectionMonitorIcmpConfigurationPtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorIcmpConfigurationArgs) ToConnectionMonitorIcmpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorIcmpConfigurationOutput).ToConnectionMonitorIcmpConfigurationPtrOutputWithContext(ctx)
}

// ConnectionMonitorIcmpConfigurationPtrInput is an input type that accepts ConnectionMonitorIcmpConfigurationArgs, ConnectionMonitorIcmpConfigurationPtr and ConnectionMonitorIcmpConfigurationPtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorIcmpConfigurationPtrInput` via:
//
//          ConnectionMonitorIcmpConfigurationArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorIcmpConfigurationPtrInput interface {
	pulumi.Input

	ToConnectionMonitorIcmpConfigurationPtrOutput() ConnectionMonitorIcmpConfigurationPtrOutput
	ToConnectionMonitorIcmpConfigurationPtrOutputWithContext(context.Context) ConnectionMonitorIcmpConfigurationPtrOutput
}

type connectionMonitorIcmpConfigurationPtrType ConnectionMonitorIcmpConfigurationArgs

func ConnectionMonitorIcmpConfigurationPtr(v *ConnectionMonitorIcmpConfigurationArgs) ConnectionMonitorIcmpConfigurationPtrInput {
	return (*connectionMonitorIcmpConfigurationPtrType)(v)
}

func (*connectionMonitorIcmpConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorIcmpConfiguration)(nil)).Elem()
}

func (i *connectionMonitorIcmpConfigurationPtrType) ToConnectionMonitorIcmpConfigurationPtrOutput() ConnectionMonitorIcmpConfigurationPtrOutput {
	return i.ToConnectionMonitorIcmpConfigurationPtrOutputWithContext(context.Background())
}

func (i *connectionMonitorIcmpConfigurationPtrType) ToConnectionMonitorIcmpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorIcmpConfigurationPtrOutput)
}

// Describes the ICMP configuration.
type ConnectionMonitorIcmpConfigurationOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorIcmpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorIcmpConfiguration)(nil)).Elem()
}

func (o ConnectionMonitorIcmpConfigurationOutput) ToConnectionMonitorIcmpConfigurationOutput() ConnectionMonitorIcmpConfigurationOutput {
	return o
}

func (o ConnectionMonitorIcmpConfigurationOutput) ToConnectionMonitorIcmpConfigurationOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationOutput {
	return o
}

func (o ConnectionMonitorIcmpConfigurationOutput) ToConnectionMonitorIcmpConfigurationPtrOutput() ConnectionMonitorIcmpConfigurationPtrOutput {
	return o.ToConnectionMonitorIcmpConfigurationPtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorIcmpConfigurationOutput) ToConnectionMonitorIcmpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorIcmpConfiguration) *ConnectionMonitorIcmpConfiguration {
		return &v
	}).(ConnectionMonitorIcmpConfigurationPtrOutput)
}

// Value indicating whether path evaluation with trace route should be disabled.
func (o ConnectionMonitorIcmpConfigurationOutput) DisableTraceRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorIcmpConfiguration) *bool { return v.DisableTraceRoute }).(pulumi.BoolPtrOutput)
}

type ConnectionMonitorIcmpConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorIcmpConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorIcmpConfiguration)(nil)).Elem()
}

func (o ConnectionMonitorIcmpConfigurationPtrOutput) ToConnectionMonitorIcmpConfigurationPtrOutput() ConnectionMonitorIcmpConfigurationPtrOutput {
	return o
}

func (o ConnectionMonitorIcmpConfigurationPtrOutput) ToConnectionMonitorIcmpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationPtrOutput {
	return o
}

func (o ConnectionMonitorIcmpConfigurationPtrOutput) Elem() ConnectionMonitorIcmpConfigurationOutput {
	return o.ApplyT(func(v *ConnectionMonitorIcmpConfiguration) ConnectionMonitorIcmpConfiguration { return *v }).(ConnectionMonitorIcmpConfigurationOutput)
}

// Value indicating whether path evaluation with trace route should be disabled.
func (o ConnectionMonitorIcmpConfigurationPtrOutput) DisableTraceRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorIcmpConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.DisableTraceRoute
	}).(pulumi.BoolPtrOutput)
}

// Describes the ICMP configuration.
type ConnectionMonitorIcmpConfigurationResponse struct {
	// Value indicating whether path evaluation with trace route should be disabled.
	DisableTraceRoute *bool `pulumi:"disableTraceRoute"`
}

// ConnectionMonitorIcmpConfigurationResponseInput is an input type that accepts ConnectionMonitorIcmpConfigurationResponseArgs and ConnectionMonitorIcmpConfigurationResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorIcmpConfigurationResponseInput` via:
//
//          ConnectionMonitorIcmpConfigurationResponseArgs{...}
type ConnectionMonitorIcmpConfigurationResponseInput interface {
	pulumi.Input

	ToConnectionMonitorIcmpConfigurationResponseOutput() ConnectionMonitorIcmpConfigurationResponseOutput
	ToConnectionMonitorIcmpConfigurationResponseOutputWithContext(context.Context) ConnectionMonitorIcmpConfigurationResponseOutput
}

// Describes the ICMP configuration.
type ConnectionMonitorIcmpConfigurationResponseArgs struct {
	// Value indicating whether path evaluation with trace route should be disabled.
	DisableTraceRoute pulumi.BoolPtrInput `pulumi:"disableTraceRoute"`
}

func (ConnectionMonitorIcmpConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorIcmpConfigurationResponse)(nil)).Elem()
}

func (i ConnectionMonitorIcmpConfigurationResponseArgs) ToConnectionMonitorIcmpConfigurationResponseOutput() ConnectionMonitorIcmpConfigurationResponseOutput {
	return i.ToConnectionMonitorIcmpConfigurationResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorIcmpConfigurationResponseArgs) ToConnectionMonitorIcmpConfigurationResponseOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorIcmpConfigurationResponseOutput)
}

func (i ConnectionMonitorIcmpConfigurationResponseArgs) ToConnectionMonitorIcmpConfigurationResponsePtrOutput() ConnectionMonitorIcmpConfigurationResponsePtrOutput {
	return i.ToConnectionMonitorIcmpConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorIcmpConfigurationResponseArgs) ToConnectionMonitorIcmpConfigurationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorIcmpConfigurationResponseOutput).ToConnectionMonitorIcmpConfigurationResponsePtrOutputWithContext(ctx)
}

// ConnectionMonitorIcmpConfigurationResponsePtrInput is an input type that accepts ConnectionMonitorIcmpConfigurationResponseArgs, ConnectionMonitorIcmpConfigurationResponsePtr and ConnectionMonitorIcmpConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorIcmpConfigurationResponsePtrInput` via:
//
//          ConnectionMonitorIcmpConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorIcmpConfigurationResponsePtrInput interface {
	pulumi.Input

	ToConnectionMonitorIcmpConfigurationResponsePtrOutput() ConnectionMonitorIcmpConfigurationResponsePtrOutput
	ToConnectionMonitorIcmpConfigurationResponsePtrOutputWithContext(context.Context) ConnectionMonitorIcmpConfigurationResponsePtrOutput
}

type connectionMonitorIcmpConfigurationResponsePtrType ConnectionMonitorIcmpConfigurationResponseArgs

func ConnectionMonitorIcmpConfigurationResponsePtr(v *ConnectionMonitorIcmpConfigurationResponseArgs) ConnectionMonitorIcmpConfigurationResponsePtrInput {
	return (*connectionMonitorIcmpConfigurationResponsePtrType)(v)
}

func (*connectionMonitorIcmpConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorIcmpConfigurationResponse)(nil)).Elem()
}

func (i *connectionMonitorIcmpConfigurationResponsePtrType) ToConnectionMonitorIcmpConfigurationResponsePtrOutput() ConnectionMonitorIcmpConfigurationResponsePtrOutput {
	return i.ToConnectionMonitorIcmpConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorIcmpConfigurationResponsePtrType) ToConnectionMonitorIcmpConfigurationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorIcmpConfigurationResponsePtrOutput)
}

// Describes the ICMP configuration.
type ConnectionMonitorIcmpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorIcmpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorIcmpConfigurationResponse)(nil)).Elem()
}

func (o ConnectionMonitorIcmpConfigurationResponseOutput) ToConnectionMonitorIcmpConfigurationResponseOutput() ConnectionMonitorIcmpConfigurationResponseOutput {
	return o
}

func (o ConnectionMonitorIcmpConfigurationResponseOutput) ToConnectionMonitorIcmpConfigurationResponseOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationResponseOutput {
	return o
}

func (o ConnectionMonitorIcmpConfigurationResponseOutput) ToConnectionMonitorIcmpConfigurationResponsePtrOutput() ConnectionMonitorIcmpConfigurationResponsePtrOutput {
	return o.ToConnectionMonitorIcmpConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorIcmpConfigurationResponseOutput) ToConnectionMonitorIcmpConfigurationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorIcmpConfigurationResponse) *ConnectionMonitorIcmpConfigurationResponse {
		return &v
	}).(ConnectionMonitorIcmpConfigurationResponsePtrOutput)
}

// Value indicating whether path evaluation with trace route should be disabled.
func (o ConnectionMonitorIcmpConfigurationResponseOutput) DisableTraceRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorIcmpConfigurationResponse) *bool { return v.DisableTraceRoute }).(pulumi.BoolPtrOutput)
}

type ConnectionMonitorIcmpConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorIcmpConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorIcmpConfigurationResponse)(nil)).Elem()
}

func (o ConnectionMonitorIcmpConfigurationResponsePtrOutput) ToConnectionMonitorIcmpConfigurationResponsePtrOutput() ConnectionMonitorIcmpConfigurationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorIcmpConfigurationResponsePtrOutput) ToConnectionMonitorIcmpConfigurationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorIcmpConfigurationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorIcmpConfigurationResponsePtrOutput) Elem() ConnectionMonitorIcmpConfigurationResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorIcmpConfigurationResponse) ConnectionMonitorIcmpConfigurationResponse {
		return *v
	}).(ConnectionMonitorIcmpConfigurationResponseOutput)
}

// Value indicating whether path evaluation with trace route should be disabled.
func (o ConnectionMonitorIcmpConfigurationResponsePtrOutput) DisableTraceRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorIcmpConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableTraceRoute
	}).(pulumi.BoolPtrOutput)
}

// Describes a connection monitor output destination.
type ConnectionMonitorOutput struct {
	// Connection monitor output destination type. Currently, only "Workspace" is supported.
	Type *string `pulumi:"type"`
	// Describes the settings for producing output into a log analytics workspace.
	WorkspaceSettings *ConnectionMonitorWorkspaceSettings `pulumi:"workspaceSettings"`
}

// ConnectionMonitorOutputInput is an input type that accepts ConnectionMonitorOutputArgs and ConnectionMonitorOutputOutput values.
// You can construct a concrete instance of `ConnectionMonitorOutputInput` via:
//
//          ConnectionMonitorOutputArgs{...}
type ConnectionMonitorOutputInput interface {
	pulumi.Input

	ToConnectionMonitorOutputOutput() ConnectionMonitorOutputOutput
	ToConnectionMonitorOutputOutputWithContext(context.Context) ConnectionMonitorOutputOutput
}

// Describes a connection monitor output destination.
type ConnectionMonitorOutputArgs struct {
	// Connection monitor output destination type. Currently, only "Workspace" is supported.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Describes the settings for producing output into a log analytics workspace.
	WorkspaceSettings ConnectionMonitorWorkspaceSettingsPtrInput `pulumi:"workspaceSettings"`
}

func (ConnectionMonitorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorOutput)(nil)).Elem()
}

func (i ConnectionMonitorOutputArgs) ToConnectionMonitorOutputOutput() ConnectionMonitorOutputOutput {
	return i.ToConnectionMonitorOutputOutputWithContext(context.Background())
}

func (i ConnectionMonitorOutputArgs) ToConnectionMonitorOutputOutputWithContext(ctx context.Context) ConnectionMonitorOutputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorOutputOutput)
}

// ConnectionMonitorOutputArrayInput is an input type that accepts ConnectionMonitorOutputArray and ConnectionMonitorOutputArrayOutput values.
// You can construct a concrete instance of `ConnectionMonitorOutputArrayInput` via:
//
//          ConnectionMonitorOutputArray{ ConnectionMonitorOutputArgs{...} }
type ConnectionMonitorOutputArrayInput interface {
	pulumi.Input

	ToConnectionMonitorOutputArrayOutput() ConnectionMonitorOutputArrayOutput
	ToConnectionMonitorOutputArrayOutputWithContext(context.Context) ConnectionMonitorOutputArrayOutput
}

type ConnectionMonitorOutputArray []ConnectionMonitorOutputInput

func (ConnectionMonitorOutputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorOutput)(nil)).Elem()
}

func (i ConnectionMonitorOutputArray) ToConnectionMonitorOutputArrayOutput() ConnectionMonitorOutputArrayOutput {
	return i.ToConnectionMonitorOutputArrayOutputWithContext(context.Background())
}

func (i ConnectionMonitorOutputArray) ToConnectionMonitorOutputArrayOutputWithContext(ctx context.Context) ConnectionMonitorOutputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorOutputArrayOutput)
}

// Describes a connection monitor output destination.
type ConnectionMonitorOutputOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorOutputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorOutput)(nil)).Elem()
}

func (o ConnectionMonitorOutputOutput) ToConnectionMonitorOutputOutput() ConnectionMonitorOutputOutput {
	return o
}

func (o ConnectionMonitorOutputOutput) ToConnectionMonitorOutputOutputWithContext(ctx context.Context) ConnectionMonitorOutputOutput {
	return o
}

// Connection monitor output destination type. Currently, only "Workspace" is supported.
func (o ConnectionMonitorOutputOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorOutput) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Describes the settings for producing output into a log analytics workspace.
func (o ConnectionMonitorOutputOutput) WorkspaceSettings() ConnectionMonitorWorkspaceSettingsPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorOutput) *ConnectionMonitorWorkspaceSettings { return v.WorkspaceSettings }).(ConnectionMonitorWorkspaceSettingsPtrOutput)
}

type ConnectionMonitorOutputArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorOutputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorOutput)(nil)).Elem()
}

func (o ConnectionMonitorOutputArrayOutput) ToConnectionMonitorOutputArrayOutput() ConnectionMonitorOutputArrayOutput {
	return o
}

func (o ConnectionMonitorOutputArrayOutput) ToConnectionMonitorOutputArrayOutputWithContext(ctx context.Context) ConnectionMonitorOutputArrayOutput {
	return o
}

func (o ConnectionMonitorOutputArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorOutputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorOutput {
		return vs[0].([]ConnectionMonitorOutput)[vs[1].(int)]
	}).(ConnectionMonitorOutputOutput)
}

// Describes a connection monitor output destination.
type ConnectionMonitorOutputResponse struct {
	// Connection monitor output destination type. Currently, only "Workspace" is supported.
	Type *string `pulumi:"type"`
	// Describes the settings for producing output into a log analytics workspace.
	WorkspaceSettings *ConnectionMonitorWorkspaceSettingsResponse `pulumi:"workspaceSettings"`
}

// ConnectionMonitorOutputResponseInput is an input type that accepts ConnectionMonitorOutputResponseArgs and ConnectionMonitorOutputResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorOutputResponseInput` via:
//
//          ConnectionMonitorOutputResponseArgs{...}
type ConnectionMonitorOutputResponseInput interface {
	pulumi.Input

	ToConnectionMonitorOutputResponseOutput() ConnectionMonitorOutputResponseOutput
	ToConnectionMonitorOutputResponseOutputWithContext(context.Context) ConnectionMonitorOutputResponseOutput
}

// Describes a connection monitor output destination.
type ConnectionMonitorOutputResponseArgs struct {
	// Connection monitor output destination type. Currently, only "Workspace" is supported.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Describes the settings for producing output into a log analytics workspace.
	WorkspaceSettings ConnectionMonitorWorkspaceSettingsResponsePtrInput `pulumi:"workspaceSettings"`
}

func (ConnectionMonitorOutputResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorOutputResponse)(nil)).Elem()
}

func (i ConnectionMonitorOutputResponseArgs) ToConnectionMonitorOutputResponseOutput() ConnectionMonitorOutputResponseOutput {
	return i.ToConnectionMonitorOutputResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorOutputResponseArgs) ToConnectionMonitorOutputResponseOutputWithContext(ctx context.Context) ConnectionMonitorOutputResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorOutputResponseOutput)
}

// ConnectionMonitorOutputResponseArrayInput is an input type that accepts ConnectionMonitorOutputResponseArray and ConnectionMonitorOutputResponseArrayOutput values.
// You can construct a concrete instance of `ConnectionMonitorOutputResponseArrayInput` via:
//
//          ConnectionMonitorOutputResponseArray{ ConnectionMonitorOutputResponseArgs{...} }
type ConnectionMonitorOutputResponseArrayInput interface {
	pulumi.Input

	ToConnectionMonitorOutputResponseArrayOutput() ConnectionMonitorOutputResponseArrayOutput
	ToConnectionMonitorOutputResponseArrayOutputWithContext(context.Context) ConnectionMonitorOutputResponseArrayOutput
}

type ConnectionMonitorOutputResponseArray []ConnectionMonitorOutputResponseInput

func (ConnectionMonitorOutputResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorOutputResponse)(nil)).Elem()
}

func (i ConnectionMonitorOutputResponseArray) ToConnectionMonitorOutputResponseArrayOutput() ConnectionMonitorOutputResponseArrayOutput {
	return i.ToConnectionMonitorOutputResponseArrayOutputWithContext(context.Background())
}

func (i ConnectionMonitorOutputResponseArray) ToConnectionMonitorOutputResponseArrayOutputWithContext(ctx context.Context) ConnectionMonitorOutputResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorOutputResponseArrayOutput)
}

// Describes a connection monitor output destination.
type ConnectionMonitorOutputResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorOutputResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorOutputResponse)(nil)).Elem()
}

func (o ConnectionMonitorOutputResponseOutput) ToConnectionMonitorOutputResponseOutput() ConnectionMonitorOutputResponseOutput {
	return o
}

func (o ConnectionMonitorOutputResponseOutput) ToConnectionMonitorOutputResponseOutputWithContext(ctx context.Context) ConnectionMonitorOutputResponseOutput {
	return o
}

// Connection monitor output destination type. Currently, only "Workspace" is supported.
func (o ConnectionMonitorOutputResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorOutputResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Describes the settings for producing output into a log analytics workspace.
func (o ConnectionMonitorOutputResponseOutput) WorkspaceSettings() ConnectionMonitorWorkspaceSettingsResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorOutputResponse) *ConnectionMonitorWorkspaceSettingsResponse {
		return v.WorkspaceSettings
	}).(ConnectionMonitorWorkspaceSettingsResponsePtrOutput)
}

type ConnectionMonitorOutputResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorOutputResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorOutputResponse)(nil)).Elem()
}

func (o ConnectionMonitorOutputResponseArrayOutput) ToConnectionMonitorOutputResponseArrayOutput() ConnectionMonitorOutputResponseArrayOutput {
	return o
}

func (o ConnectionMonitorOutputResponseArrayOutput) ToConnectionMonitorOutputResponseArrayOutputWithContext(ctx context.Context) ConnectionMonitorOutputResponseArrayOutput {
	return o
}

func (o ConnectionMonitorOutputResponseArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorOutputResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorOutputResponse {
		return vs[0].([]ConnectionMonitorOutputResponse)[vs[1].(int)]
	}).(ConnectionMonitorOutputResponseOutput)
}

// Describes the source of connection monitor.
type ConnectionMonitorSource struct {
	// The source port used by connection monitor.
	Port *int `pulumi:"port"`
	// The ID of the resource used as the source by connection monitor.
	ResourceId string `pulumi:"resourceId"`
}

// ConnectionMonitorSourceInput is an input type that accepts ConnectionMonitorSourceArgs and ConnectionMonitorSourceOutput values.
// You can construct a concrete instance of `ConnectionMonitorSourceInput` via:
//
//          ConnectionMonitorSourceArgs{...}
type ConnectionMonitorSourceInput interface {
	pulumi.Input

	ToConnectionMonitorSourceOutput() ConnectionMonitorSourceOutput
	ToConnectionMonitorSourceOutputWithContext(context.Context) ConnectionMonitorSourceOutput
}

// Describes the source of connection monitor.
type ConnectionMonitorSourceArgs struct {
	// The source port used by connection monitor.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The ID of the resource used as the source by connection monitor.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (ConnectionMonitorSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSource)(nil)).Elem()
}

func (i ConnectionMonitorSourceArgs) ToConnectionMonitorSourceOutput() ConnectionMonitorSourceOutput {
	return i.ToConnectionMonitorSourceOutputWithContext(context.Background())
}

func (i ConnectionMonitorSourceArgs) ToConnectionMonitorSourceOutputWithContext(ctx context.Context) ConnectionMonitorSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourceOutput)
}

func (i ConnectionMonitorSourceArgs) ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput {
	return i.ToConnectionMonitorSourcePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorSourceArgs) ToConnectionMonitorSourcePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourceOutput).ToConnectionMonitorSourcePtrOutputWithContext(ctx)
}

// ConnectionMonitorSourcePtrInput is an input type that accepts ConnectionMonitorSourceArgs, ConnectionMonitorSourcePtr and ConnectionMonitorSourcePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorSourcePtrInput` via:
//
//          ConnectionMonitorSourceArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorSourcePtrInput interface {
	pulumi.Input

	ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput
	ToConnectionMonitorSourcePtrOutputWithContext(context.Context) ConnectionMonitorSourcePtrOutput
}

type connectionMonitorSourcePtrType ConnectionMonitorSourceArgs

func ConnectionMonitorSourcePtr(v *ConnectionMonitorSourceArgs) ConnectionMonitorSourcePtrInput {
	return (*connectionMonitorSourcePtrType)(v)
}

func (*connectionMonitorSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSource)(nil)).Elem()
}

func (i *connectionMonitorSourcePtrType) ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput {
	return i.ToConnectionMonitorSourcePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorSourcePtrType) ToConnectionMonitorSourcePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourcePtrOutput)
}

// Describes the source of connection monitor.
type ConnectionMonitorSourceOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSource)(nil)).Elem()
}

func (o ConnectionMonitorSourceOutput) ToConnectionMonitorSourceOutput() ConnectionMonitorSourceOutput {
	return o
}

func (o ConnectionMonitorSourceOutput) ToConnectionMonitorSourceOutputWithContext(ctx context.Context) ConnectionMonitorSourceOutput {
	return o
}

func (o ConnectionMonitorSourceOutput) ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput {
	return o.ToConnectionMonitorSourcePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorSourceOutput) ToConnectionMonitorSourcePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourcePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSource) *ConnectionMonitorSource {
		return &v
	}).(ConnectionMonitorSourcePtrOutput)
}

// The source port used by connection monitor.
func (o ConnectionMonitorSourceOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSource) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the source by connection monitor.
func (o ConnectionMonitorSourceOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorSource) string { return v.ResourceId }).(pulumi.StringOutput)
}

type ConnectionMonitorSourcePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSource)(nil)).Elem()
}

func (o ConnectionMonitorSourcePtrOutput) ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput {
	return o
}

func (o ConnectionMonitorSourcePtrOutput) ToConnectionMonitorSourcePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourcePtrOutput {
	return o
}

func (o ConnectionMonitorSourcePtrOutput) Elem() ConnectionMonitorSourceOutput {
	return o.ApplyT(func(v *ConnectionMonitorSource) ConnectionMonitorSource { return *v }).(ConnectionMonitorSourceOutput)
}

// The source port used by connection monitor.
func (o ConnectionMonitorSourcePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSource) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the source by connection monitor.
func (o ConnectionMonitorSourcePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSource) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Describes the source of connection monitor.
type ConnectionMonitorSourceResponse struct {
	// The source port used by connection monitor.
	Port *int `pulumi:"port"`
	// The ID of the resource used as the source by connection monitor.
	ResourceId string `pulumi:"resourceId"`
}

// ConnectionMonitorSourceResponseInput is an input type that accepts ConnectionMonitorSourceResponseArgs and ConnectionMonitorSourceResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorSourceResponseInput` via:
//
//          ConnectionMonitorSourceResponseArgs{...}
type ConnectionMonitorSourceResponseInput interface {
	pulumi.Input

	ToConnectionMonitorSourceResponseOutput() ConnectionMonitorSourceResponseOutput
	ToConnectionMonitorSourceResponseOutputWithContext(context.Context) ConnectionMonitorSourceResponseOutput
}

// Describes the source of connection monitor.
type ConnectionMonitorSourceResponseArgs struct {
	// The source port used by connection monitor.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The ID of the resource used as the source by connection monitor.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (ConnectionMonitorSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSourceResponse)(nil)).Elem()
}

func (i ConnectionMonitorSourceResponseArgs) ToConnectionMonitorSourceResponseOutput() ConnectionMonitorSourceResponseOutput {
	return i.ToConnectionMonitorSourceResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorSourceResponseArgs) ToConnectionMonitorSourceResponseOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourceResponseOutput)
}

func (i ConnectionMonitorSourceResponseArgs) ToConnectionMonitorSourceResponsePtrOutput() ConnectionMonitorSourceResponsePtrOutput {
	return i.ToConnectionMonitorSourceResponsePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorSourceResponseArgs) ToConnectionMonitorSourceResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourceResponseOutput).ToConnectionMonitorSourceResponsePtrOutputWithContext(ctx)
}

// ConnectionMonitorSourceResponsePtrInput is an input type that accepts ConnectionMonitorSourceResponseArgs, ConnectionMonitorSourceResponsePtr and ConnectionMonitorSourceResponsePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorSourceResponsePtrInput` via:
//
//          ConnectionMonitorSourceResponseArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorSourceResponsePtrInput interface {
	pulumi.Input

	ToConnectionMonitorSourceResponsePtrOutput() ConnectionMonitorSourceResponsePtrOutput
	ToConnectionMonitorSourceResponsePtrOutputWithContext(context.Context) ConnectionMonitorSourceResponsePtrOutput
}

type connectionMonitorSourceResponsePtrType ConnectionMonitorSourceResponseArgs

func ConnectionMonitorSourceResponsePtr(v *ConnectionMonitorSourceResponseArgs) ConnectionMonitorSourceResponsePtrInput {
	return (*connectionMonitorSourceResponsePtrType)(v)
}

func (*connectionMonitorSourceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSourceResponse)(nil)).Elem()
}

func (i *connectionMonitorSourceResponsePtrType) ToConnectionMonitorSourceResponsePtrOutput() ConnectionMonitorSourceResponsePtrOutput {
	return i.ToConnectionMonitorSourceResponsePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorSourceResponsePtrType) ToConnectionMonitorSourceResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourceResponsePtrOutput)
}

// Describes the source of connection monitor.
type ConnectionMonitorSourceResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSourceResponse)(nil)).Elem()
}

func (o ConnectionMonitorSourceResponseOutput) ToConnectionMonitorSourceResponseOutput() ConnectionMonitorSourceResponseOutput {
	return o
}

func (o ConnectionMonitorSourceResponseOutput) ToConnectionMonitorSourceResponseOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponseOutput {
	return o
}

func (o ConnectionMonitorSourceResponseOutput) ToConnectionMonitorSourceResponsePtrOutput() ConnectionMonitorSourceResponsePtrOutput {
	return o.ToConnectionMonitorSourceResponsePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorSourceResponseOutput) ToConnectionMonitorSourceResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSourceResponse) *ConnectionMonitorSourceResponse {
		return &v
	}).(ConnectionMonitorSourceResponsePtrOutput)
}

// The source port used by connection monitor.
func (o ConnectionMonitorSourceResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSourceResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the source by connection monitor.
func (o ConnectionMonitorSourceResponseOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorSourceResponse) string { return v.ResourceId }).(pulumi.StringOutput)
}

type ConnectionMonitorSourceResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSourceResponse)(nil)).Elem()
}

func (o ConnectionMonitorSourceResponsePtrOutput) ToConnectionMonitorSourceResponsePtrOutput() ConnectionMonitorSourceResponsePtrOutput {
	return o
}

func (o ConnectionMonitorSourceResponsePtrOutput) ToConnectionMonitorSourceResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponsePtrOutput {
	return o
}

func (o ConnectionMonitorSourceResponsePtrOutput) Elem() ConnectionMonitorSourceResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorSourceResponse) ConnectionMonitorSourceResponse { return *v }).(ConnectionMonitorSourceResponseOutput)
}

// The source port used by connection monitor.
func (o ConnectionMonitorSourceResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSourceResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the source by connection monitor.
func (o ConnectionMonitorSourceResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSourceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Describes the threshold for declaring a test successful.
type ConnectionMonitorSuccessThreshold struct {
	// The maximum percentage of failed checks permitted for a test to evaluate as successful.
	ChecksFailedPercent *int `pulumi:"checksFailedPercent"`
	// The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
	RoundTripTimeMs *float64 `pulumi:"roundTripTimeMs"`
}

// ConnectionMonitorSuccessThresholdInput is an input type that accepts ConnectionMonitorSuccessThresholdArgs and ConnectionMonitorSuccessThresholdOutput values.
// You can construct a concrete instance of `ConnectionMonitorSuccessThresholdInput` via:
//
//          ConnectionMonitorSuccessThresholdArgs{...}
type ConnectionMonitorSuccessThresholdInput interface {
	pulumi.Input

	ToConnectionMonitorSuccessThresholdOutput() ConnectionMonitorSuccessThresholdOutput
	ToConnectionMonitorSuccessThresholdOutputWithContext(context.Context) ConnectionMonitorSuccessThresholdOutput
}

// Describes the threshold for declaring a test successful.
type ConnectionMonitorSuccessThresholdArgs struct {
	// The maximum percentage of failed checks permitted for a test to evaluate as successful.
	ChecksFailedPercent pulumi.IntPtrInput `pulumi:"checksFailedPercent"`
	// The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
	RoundTripTimeMs pulumi.Float64PtrInput `pulumi:"roundTripTimeMs"`
}

func (ConnectionMonitorSuccessThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSuccessThreshold)(nil)).Elem()
}

func (i ConnectionMonitorSuccessThresholdArgs) ToConnectionMonitorSuccessThresholdOutput() ConnectionMonitorSuccessThresholdOutput {
	return i.ToConnectionMonitorSuccessThresholdOutputWithContext(context.Background())
}

func (i ConnectionMonitorSuccessThresholdArgs) ToConnectionMonitorSuccessThresholdOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSuccessThresholdOutput)
}

func (i ConnectionMonitorSuccessThresholdArgs) ToConnectionMonitorSuccessThresholdPtrOutput() ConnectionMonitorSuccessThresholdPtrOutput {
	return i.ToConnectionMonitorSuccessThresholdPtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorSuccessThresholdArgs) ToConnectionMonitorSuccessThresholdPtrOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSuccessThresholdOutput).ToConnectionMonitorSuccessThresholdPtrOutputWithContext(ctx)
}

// ConnectionMonitorSuccessThresholdPtrInput is an input type that accepts ConnectionMonitorSuccessThresholdArgs, ConnectionMonitorSuccessThresholdPtr and ConnectionMonitorSuccessThresholdPtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorSuccessThresholdPtrInput` via:
//
//          ConnectionMonitorSuccessThresholdArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorSuccessThresholdPtrInput interface {
	pulumi.Input

	ToConnectionMonitorSuccessThresholdPtrOutput() ConnectionMonitorSuccessThresholdPtrOutput
	ToConnectionMonitorSuccessThresholdPtrOutputWithContext(context.Context) ConnectionMonitorSuccessThresholdPtrOutput
}

type connectionMonitorSuccessThresholdPtrType ConnectionMonitorSuccessThresholdArgs

func ConnectionMonitorSuccessThresholdPtr(v *ConnectionMonitorSuccessThresholdArgs) ConnectionMonitorSuccessThresholdPtrInput {
	return (*connectionMonitorSuccessThresholdPtrType)(v)
}

func (*connectionMonitorSuccessThresholdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSuccessThreshold)(nil)).Elem()
}

func (i *connectionMonitorSuccessThresholdPtrType) ToConnectionMonitorSuccessThresholdPtrOutput() ConnectionMonitorSuccessThresholdPtrOutput {
	return i.ToConnectionMonitorSuccessThresholdPtrOutputWithContext(context.Background())
}

func (i *connectionMonitorSuccessThresholdPtrType) ToConnectionMonitorSuccessThresholdPtrOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSuccessThresholdPtrOutput)
}

// Describes the threshold for declaring a test successful.
type ConnectionMonitorSuccessThresholdOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSuccessThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSuccessThreshold)(nil)).Elem()
}

func (o ConnectionMonitorSuccessThresholdOutput) ToConnectionMonitorSuccessThresholdOutput() ConnectionMonitorSuccessThresholdOutput {
	return o
}

func (o ConnectionMonitorSuccessThresholdOutput) ToConnectionMonitorSuccessThresholdOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdOutput {
	return o
}

func (o ConnectionMonitorSuccessThresholdOutput) ToConnectionMonitorSuccessThresholdPtrOutput() ConnectionMonitorSuccessThresholdPtrOutput {
	return o.ToConnectionMonitorSuccessThresholdPtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorSuccessThresholdOutput) ToConnectionMonitorSuccessThresholdPtrOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSuccessThreshold) *ConnectionMonitorSuccessThreshold {
		return &v
	}).(ConnectionMonitorSuccessThresholdPtrOutput)
}

// The maximum percentage of failed checks permitted for a test to evaluate as successful.
func (o ConnectionMonitorSuccessThresholdOutput) ChecksFailedPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSuccessThreshold) *int { return v.ChecksFailedPercent }).(pulumi.IntPtrOutput)
}

// The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
func (o ConnectionMonitorSuccessThresholdOutput) RoundTripTimeMs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSuccessThreshold) *float64 { return v.RoundTripTimeMs }).(pulumi.Float64PtrOutput)
}

type ConnectionMonitorSuccessThresholdPtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSuccessThresholdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSuccessThreshold)(nil)).Elem()
}

func (o ConnectionMonitorSuccessThresholdPtrOutput) ToConnectionMonitorSuccessThresholdPtrOutput() ConnectionMonitorSuccessThresholdPtrOutput {
	return o
}

func (o ConnectionMonitorSuccessThresholdPtrOutput) ToConnectionMonitorSuccessThresholdPtrOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdPtrOutput {
	return o
}

func (o ConnectionMonitorSuccessThresholdPtrOutput) Elem() ConnectionMonitorSuccessThresholdOutput {
	return o.ApplyT(func(v *ConnectionMonitorSuccessThreshold) ConnectionMonitorSuccessThreshold { return *v }).(ConnectionMonitorSuccessThresholdOutput)
}

// The maximum percentage of failed checks permitted for a test to evaluate as successful.
func (o ConnectionMonitorSuccessThresholdPtrOutput) ChecksFailedPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSuccessThreshold) *int {
		if v == nil {
			return nil
		}
		return v.ChecksFailedPercent
	}).(pulumi.IntPtrOutput)
}

// The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
func (o ConnectionMonitorSuccessThresholdPtrOutput) RoundTripTimeMs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSuccessThreshold) *float64 {
		if v == nil {
			return nil
		}
		return v.RoundTripTimeMs
	}).(pulumi.Float64PtrOutput)
}

// Describes the threshold for declaring a test successful.
type ConnectionMonitorSuccessThresholdResponse struct {
	// The maximum percentage of failed checks permitted for a test to evaluate as successful.
	ChecksFailedPercent *int `pulumi:"checksFailedPercent"`
	// The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
	RoundTripTimeMs *float64 `pulumi:"roundTripTimeMs"`
}

// ConnectionMonitorSuccessThresholdResponseInput is an input type that accepts ConnectionMonitorSuccessThresholdResponseArgs and ConnectionMonitorSuccessThresholdResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorSuccessThresholdResponseInput` via:
//
//          ConnectionMonitorSuccessThresholdResponseArgs{...}
type ConnectionMonitorSuccessThresholdResponseInput interface {
	pulumi.Input

	ToConnectionMonitorSuccessThresholdResponseOutput() ConnectionMonitorSuccessThresholdResponseOutput
	ToConnectionMonitorSuccessThresholdResponseOutputWithContext(context.Context) ConnectionMonitorSuccessThresholdResponseOutput
}

// Describes the threshold for declaring a test successful.
type ConnectionMonitorSuccessThresholdResponseArgs struct {
	// The maximum percentage of failed checks permitted for a test to evaluate as successful.
	ChecksFailedPercent pulumi.IntPtrInput `pulumi:"checksFailedPercent"`
	// The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
	RoundTripTimeMs pulumi.Float64PtrInput `pulumi:"roundTripTimeMs"`
}

func (ConnectionMonitorSuccessThresholdResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSuccessThresholdResponse)(nil)).Elem()
}

func (i ConnectionMonitorSuccessThresholdResponseArgs) ToConnectionMonitorSuccessThresholdResponseOutput() ConnectionMonitorSuccessThresholdResponseOutput {
	return i.ToConnectionMonitorSuccessThresholdResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorSuccessThresholdResponseArgs) ToConnectionMonitorSuccessThresholdResponseOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSuccessThresholdResponseOutput)
}

func (i ConnectionMonitorSuccessThresholdResponseArgs) ToConnectionMonitorSuccessThresholdResponsePtrOutput() ConnectionMonitorSuccessThresholdResponsePtrOutput {
	return i.ToConnectionMonitorSuccessThresholdResponsePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorSuccessThresholdResponseArgs) ToConnectionMonitorSuccessThresholdResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSuccessThresholdResponseOutput).ToConnectionMonitorSuccessThresholdResponsePtrOutputWithContext(ctx)
}

// ConnectionMonitorSuccessThresholdResponsePtrInput is an input type that accepts ConnectionMonitorSuccessThresholdResponseArgs, ConnectionMonitorSuccessThresholdResponsePtr and ConnectionMonitorSuccessThresholdResponsePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorSuccessThresholdResponsePtrInput` via:
//
//          ConnectionMonitorSuccessThresholdResponseArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorSuccessThresholdResponsePtrInput interface {
	pulumi.Input

	ToConnectionMonitorSuccessThresholdResponsePtrOutput() ConnectionMonitorSuccessThresholdResponsePtrOutput
	ToConnectionMonitorSuccessThresholdResponsePtrOutputWithContext(context.Context) ConnectionMonitorSuccessThresholdResponsePtrOutput
}

type connectionMonitorSuccessThresholdResponsePtrType ConnectionMonitorSuccessThresholdResponseArgs

func ConnectionMonitorSuccessThresholdResponsePtr(v *ConnectionMonitorSuccessThresholdResponseArgs) ConnectionMonitorSuccessThresholdResponsePtrInput {
	return (*connectionMonitorSuccessThresholdResponsePtrType)(v)
}

func (*connectionMonitorSuccessThresholdResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSuccessThresholdResponse)(nil)).Elem()
}

func (i *connectionMonitorSuccessThresholdResponsePtrType) ToConnectionMonitorSuccessThresholdResponsePtrOutput() ConnectionMonitorSuccessThresholdResponsePtrOutput {
	return i.ToConnectionMonitorSuccessThresholdResponsePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorSuccessThresholdResponsePtrType) ToConnectionMonitorSuccessThresholdResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSuccessThresholdResponsePtrOutput)
}

// Describes the threshold for declaring a test successful.
type ConnectionMonitorSuccessThresholdResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSuccessThresholdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSuccessThresholdResponse)(nil)).Elem()
}

func (o ConnectionMonitorSuccessThresholdResponseOutput) ToConnectionMonitorSuccessThresholdResponseOutput() ConnectionMonitorSuccessThresholdResponseOutput {
	return o
}

func (o ConnectionMonitorSuccessThresholdResponseOutput) ToConnectionMonitorSuccessThresholdResponseOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdResponseOutput {
	return o
}

func (o ConnectionMonitorSuccessThresholdResponseOutput) ToConnectionMonitorSuccessThresholdResponsePtrOutput() ConnectionMonitorSuccessThresholdResponsePtrOutput {
	return o.ToConnectionMonitorSuccessThresholdResponsePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorSuccessThresholdResponseOutput) ToConnectionMonitorSuccessThresholdResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSuccessThresholdResponse) *ConnectionMonitorSuccessThresholdResponse {
		return &v
	}).(ConnectionMonitorSuccessThresholdResponsePtrOutput)
}

// The maximum percentage of failed checks permitted for a test to evaluate as successful.
func (o ConnectionMonitorSuccessThresholdResponseOutput) ChecksFailedPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSuccessThresholdResponse) *int { return v.ChecksFailedPercent }).(pulumi.IntPtrOutput)
}

// The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
func (o ConnectionMonitorSuccessThresholdResponseOutput) RoundTripTimeMs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSuccessThresholdResponse) *float64 { return v.RoundTripTimeMs }).(pulumi.Float64PtrOutput)
}

type ConnectionMonitorSuccessThresholdResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSuccessThresholdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSuccessThresholdResponse)(nil)).Elem()
}

func (o ConnectionMonitorSuccessThresholdResponsePtrOutput) ToConnectionMonitorSuccessThresholdResponsePtrOutput() ConnectionMonitorSuccessThresholdResponsePtrOutput {
	return o
}

func (o ConnectionMonitorSuccessThresholdResponsePtrOutput) ToConnectionMonitorSuccessThresholdResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorSuccessThresholdResponsePtrOutput {
	return o
}

func (o ConnectionMonitorSuccessThresholdResponsePtrOutput) Elem() ConnectionMonitorSuccessThresholdResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorSuccessThresholdResponse) ConnectionMonitorSuccessThresholdResponse {
		return *v
	}).(ConnectionMonitorSuccessThresholdResponseOutput)
}

// The maximum percentage of failed checks permitted for a test to evaluate as successful.
func (o ConnectionMonitorSuccessThresholdResponsePtrOutput) ChecksFailedPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSuccessThresholdResponse) *int {
		if v == nil {
			return nil
		}
		return v.ChecksFailedPercent
	}).(pulumi.IntPtrOutput)
}

// The maximum round-trip time in milliseconds permitted for a test to evaluate as successful.
func (o ConnectionMonitorSuccessThresholdResponsePtrOutput) RoundTripTimeMs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSuccessThresholdResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.RoundTripTimeMs
	}).(pulumi.Float64PtrOutput)
}

// Describes the TCP configuration.
type ConnectionMonitorTcpConfiguration struct {
	// Destination port behavior.
	DestinationPortBehavior *string `pulumi:"destinationPortBehavior"`
	// Value indicating whether path evaluation with trace route should be disabled.
	DisableTraceRoute *bool `pulumi:"disableTraceRoute"`
	// The port to connect to.
	Port *int `pulumi:"port"`
}

// ConnectionMonitorTcpConfigurationInput is an input type that accepts ConnectionMonitorTcpConfigurationArgs and ConnectionMonitorTcpConfigurationOutput values.
// You can construct a concrete instance of `ConnectionMonitorTcpConfigurationInput` via:
//
//          ConnectionMonitorTcpConfigurationArgs{...}
type ConnectionMonitorTcpConfigurationInput interface {
	pulumi.Input

	ToConnectionMonitorTcpConfigurationOutput() ConnectionMonitorTcpConfigurationOutput
	ToConnectionMonitorTcpConfigurationOutputWithContext(context.Context) ConnectionMonitorTcpConfigurationOutput
}

// Describes the TCP configuration.
type ConnectionMonitorTcpConfigurationArgs struct {
	// Destination port behavior.
	DestinationPortBehavior pulumi.StringPtrInput `pulumi:"destinationPortBehavior"`
	// Value indicating whether path evaluation with trace route should be disabled.
	DisableTraceRoute pulumi.BoolPtrInput `pulumi:"disableTraceRoute"`
	// The port to connect to.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (ConnectionMonitorTcpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTcpConfiguration)(nil)).Elem()
}

func (i ConnectionMonitorTcpConfigurationArgs) ToConnectionMonitorTcpConfigurationOutput() ConnectionMonitorTcpConfigurationOutput {
	return i.ToConnectionMonitorTcpConfigurationOutputWithContext(context.Background())
}

func (i ConnectionMonitorTcpConfigurationArgs) ToConnectionMonitorTcpConfigurationOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTcpConfigurationOutput)
}

func (i ConnectionMonitorTcpConfigurationArgs) ToConnectionMonitorTcpConfigurationPtrOutput() ConnectionMonitorTcpConfigurationPtrOutput {
	return i.ToConnectionMonitorTcpConfigurationPtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorTcpConfigurationArgs) ToConnectionMonitorTcpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTcpConfigurationOutput).ToConnectionMonitorTcpConfigurationPtrOutputWithContext(ctx)
}

// ConnectionMonitorTcpConfigurationPtrInput is an input type that accepts ConnectionMonitorTcpConfigurationArgs, ConnectionMonitorTcpConfigurationPtr and ConnectionMonitorTcpConfigurationPtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorTcpConfigurationPtrInput` via:
//
//          ConnectionMonitorTcpConfigurationArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorTcpConfigurationPtrInput interface {
	pulumi.Input

	ToConnectionMonitorTcpConfigurationPtrOutput() ConnectionMonitorTcpConfigurationPtrOutput
	ToConnectionMonitorTcpConfigurationPtrOutputWithContext(context.Context) ConnectionMonitorTcpConfigurationPtrOutput
}

type connectionMonitorTcpConfigurationPtrType ConnectionMonitorTcpConfigurationArgs

func ConnectionMonitorTcpConfigurationPtr(v *ConnectionMonitorTcpConfigurationArgs) ConnectionMonitorTcpConfigurationPtrInput {
	return (*connectionMonitorTcpConfigurationPtrType)(v)
}

func (*connectionMonitorTcpConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorTcpConfiguration)(nil)).Elem()
}

func (i *connectionMonitorTcpConfigurationPtrType) ToConnectionMonitorTcpConfigurationPtrOutput() ConnectionMonitorTcpConfigurationPtrOutput {
	return i.ToConnectionMonitorTcpConfigurationPtrOutputWithContext(context.Background())
}

func (i *connectionMonitorTcpConfigurationPtrType) ToConnectionMonitorTcpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTcpConfigurationPtrOutput)
}

// Describes the TCP configuration.
type ConnectionMonitorTcpConfigurationOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTcpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTcpConfiguration)(nil)).Elem()
}

func (o ConnectionMonitorTcpConfigurationOutput) ToConnectionMonitorTcpConfigurationOutput() ConnectionMonitorTcpConfigurationOutput {
	return o
}

func (o ConnectionMonitorTcpConfigurationOutput) ToConnectionMonitorTcpConfigurationOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationOutput {
	return o
}

func (o ConnectionMonitorTcpConfigurationOutput) ToConnectionMonitorTcpConfigurationPtrOutput() ConnectionMonitorTcpConfigurationPtrOutput {
	return o.ToConnectionMonitorTcpConfigurationPtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorTcpConfigurationOutput) ToConnectionMonitorTcpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTcpConfiguration) *ConnectionMonitorTcpConfiguration {
		return &v
	}).(ConnectionMonitorTcpConfigurationPtrOutput)
}

// Destination port behavior.
func (o ConnectionMonitorTcpConfigurationOutput) DestinationPortBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTcpConfiguration) *string { return v.DestinationPortBehavior }).(pulumi.StringPtrOutput)
}

// Value indicating whether path evaluation with trace route should be disabled.
func (o ConnectionMonitorTcpConfigurationOutput) DisableTraceRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTcpConfiguration) *bool { return v.DisableTraceRoute }).(pulumi.BoolPtrOutput)
}

// The port to connect to.
func (o ConnectionMonitorTcpConfigurationOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTcpConfiguration) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ConnectionMonitorTcpConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTcpConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorTcpConfiguration)(nil)).Elem()
}

func (o ConnectionMonitorTcpConfigurationPtrOutput) ToConnectionMonitorTcpConfigurationPtrOutput() ConnectionMonitorTcpConfigurationPtrOutput {
	return o
}

func (o ConnectionMonitorTcpConfigurationPtrOutput) ToConnectionMonitorTcpConfigurationPtrOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationPtrOutput {
	return o
}

func (o ConnectionMonitorTcpConfigurationPtrOutput) Elem() ConnectionMonitorTcpConfigurationOutput {
	return o.ApplyT(func(v *ConnectionMonitorTcpConfiguration) ConnectionMonitorTcpConfiguration { return *v }).(ConnectionMonitorTcpConfigurationOutput)
}

// Destination port behavior.
func (o ConnectionMonitorTcpConfigurationPtrOutput) DestinationPortBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorTcpConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DestinationPortBehavior
	}).(pulumi.StringPtrOutput)
}

// Value indicating whether path evaluation with trace route should be disabled.
func (o ConnectionMonitorTcpConfigurationPtrOutput) DisableTraceRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorTcpConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.DisableTraceRoute
	}).(pulumi.BoolPtrOutput)
}

// The port to connect to.
func (o ConnectionMonitorTcpConfigurationPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorTcpConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Describes the TCP configuration.
type ConnectionMonitorTcpConfigurationResponse struct {
	// Destination port behavior.
	DestinationPortBehavior *string `pulumi:"destinationPortBehavior"`
	// Value indicating whether path evaluation with trace route should be disabled.
	DisableTraceRoute *bool `pulumi:"disableTraceRoute"`
	// The port to connect to.
	Port *int `pulumi:"port"`
}

// ConnectionMonitorTcpConfigurationResponseInput is an input type that accepts ConnectionMonitorTcpConfigurationResponseArgs and ConnectionMonitorTcpConfigurationResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorTcpConfigurationResponseInput` via:
//
//          ConnectionMonitorTcpConfigurationResponseArgs{...}
type ConnectionMonitorTcpConfigurationResponseInput interface {
	pulumi.Input

	ToConnectionMonitorTcpConfigurationResponseOutput() ConnectionMonitorTcpConfigurationResponseOutput
	ToConnectionMonitorTcpConfigurationResponseOutputWithContext(context.Context) ConnectionMonitorTcpConfigurationResponseOutput
}

// Describes the TCP configuration.
type ConnectionMonitorTcpConfigurationResponseArgs struct {
	// Destination port behavior.
	DestinationPortBehavior pulumi.StringPtrInput `pulumi:"destinationPortBehavior"`
	// Value indicating whether path evaluation with trace route should be disabled.
	DisableTraceRoute pulumi.BoolPtrInput `pulumi:"disableTraceRoute"`
	// The port to connect to.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (ConnectionMonitorTcpConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTcpConfigurationResponse)(nil)).Elem()
}

func (i ConnectionMonitorTcpConfigurationResponseArgs) ToConnectionMonitorTcpConfigurationResponseOutput() ConnectionMonitorTcpConfigurationResponseOutput {
	return i.ToConnectionMonitorTcpConfigurationResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorTcpConfigurationResponseArgs) ToConnectionMonitorTcpConfigurationResponseOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTcpConfigurationResponseOutput)
}

func (i ConnectionMonitorTcpConfigurationResponseArgs) ToConnectionMonitorTcpConfigurationResponsePtrOutput() ConnectionMonitorTcpConfigurationResponsePtrOutput {
	return i.ToConnectionMonitorTcpConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorTcpConfigurationResponseArgs) ToConnectionMonitorTcpConfigurationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTcpConfigurationResponseOutput).ToConnectionMonitorTcpConfigurationResponsePtrOutputWithContext(ctx)
}

// ConnectionMonitorTcpConfigurationResponsePtrInput is an input type that accepts ConnectionMonitorTcpConfigurationResponseArgs, ConnectionMonitorTcpConfigurationResponsePtr and ConnectionMonitorTcpConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorTcpConfigurationResponsePtrInput` via:
//
//          ConnectionMonitorTcpConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorTcpConfigurationResponsePtrInput interface {
	pulumi.Input

	ToConnectionMonitorTcpConfigurationResponsePtrOutput() ConnectionMonitorTcpConfigurationResponsePtrOutput
	ToConnectionMonitorTcpConfigurationResponsePtrOutputWithContext(context.Context) ConnectionMonitorTcpConfigurationResponsePtrOutput
}

type connectionMonitorTcpConfigurationResponsePtrType ConnectionMonitorTcpConfigurationResponseArgs

func ConnectionMonitorTcpConfigurationResponsePtr(v *ConnectionMonitorTcpConfigurationResponseArgs) ConnectionMonitorTcpConfigurationResponsePtrInput {
	return (*connectionMonitorTcpConfigurationResponsePtrType)(v)
}

func (*connectionMonitorTcpConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorTcpConfigurationResponse)(nil)).Elem()
}

func (i *connectionMonitorTcpConfigurationResponsePtrType) ToConnectionMonitorTcpConfigurationResponsePtrOutput() ConnectionMonitorTcpConfigurationResponsePtrOutput {
	return i.ToConnectionMonitorTcpConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorTcpConfigurationResponsePtrType) ToConnectionMonitorTcpConfigurationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTcpConfigurationResponsePtrOutput)
}

// Describes the TCP configuration.
type ConnectionMonitorTcpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTcpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTcpConfigurationResponse)(nil)).Elem()
}

func (o ConnectionMonitorTcpConfigurationResponseOutput) ToConnectionMonitorTcpConfigurationResponseOutput() ConnectionMonitorTcpConfigurationResponseOutput {
	return o
}

func (o ConnectionMonitorTcpConfigurationResponseOutput) ToConnectionMonitorTcpConfigurationResponseOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationResponseOutput {
	return o
}

func (o ConnectionMonitorTcpConfigurationResponseOutput) ToConnectionMonitorTcpConfigurationResponsePtrOutput() ConnectionMonitorTcpConfigurationResponsePtrOutput {
	return o.ToConnectionMonitorTcpConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorTcpConfigurationResponseOutput) ToConnectionMonitorTcpConfigurationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTcpConfigurationResponse) *ConnectionMonitorTcpConfigurationResponse {
		return &v
	}).(ConnectionMonitorTcpConfigurationResponsePtrOutput)
}

// Destination port behavior.
func (o ConnectionMonitorTcpConfigurationResponseOutput) DestinationPortBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTcpConfigurationResponse) *string { return v.DestinationPortBehavior }).(pulumi.StringPtrOutput)
}

// Value indicating whether path evaluation with trace route should be disabled.
func (o ConnectionMonitorTcpConfigurationResponseOutput) DisableTraceRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTcpConfigurationResponse) *bool { return v.DisableTraceRoute }).(pulumi.BoolPtrOutput)
}

// The port to connect to.
func (o ConnectionMonitorTcpConfigurationResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTcpConfigurationResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ConnectionMonitorTcpConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTcpConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorTcpConfigurationResponse)(nil)).Elem()
}

func (o ConnectionMonitorTcpConfigurationResponsePtrOutput) ToConnectionMonitorTcpConfigurationResponsePtrOutput() ConnectionMonitorTcpConfigurationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorTcpConfigurationResponsePtrOutput) ToConnectionMonitorTcpConfigurationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorTcpConfigurationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorTcpConfigurationResponsePtrOutput) Elem() ConnectionMonitorTcpConfigurationResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorTcpConfigurationResponse) ConnectionMonitorTcpConfigurationResponse {
		return *v
	}).(ConnectionMonitorTcpConfigurationResponseOutput)
}

// Destination port behavior.
func (o ConnectionMonitorTcpConfigurationResponsePtrOutput) DestinationPortBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorTcpConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.DestinationPortBehavior
	}).(pulumi.StringPtrOutput)
}

// Value indicating whether path evaluation with trace route should be disabled.
func (o ConnectionMonitorTcpConfigurationResponsePtrOutput) DisableTraceRoute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorTcpConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableTraceRoute
	}).(pulumi.BoolPtrOutput)
}

// The port to connect to.
func (o ConnectionMonitorTcpConfigurationResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorTcpConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// Describes a connection monitor test configuration.
type ConnectionMonitorTestConfiguration struct {
	// The parameters used to perform test evaluation over HTTP.
	HttpConfiguration *ConnectionMonitorHttpConfiguration `pulumi:"httpConfiguration"`
	// The parameters used to perform test evaluation over ICMP.
	IcmpConfiguration *ConnectionMonitorIcmpConfiguration `pulumi:"icmpConfiguration"`
	// The name of the connection monitor test configuration.
	Name string `pulumi:"name"`
	// The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.
	PreferredIPVersion *string `pulumi:"preferredIPVersion"`
	// The protocol to use in test evaluation.
	Protocol string `pulumi:"protocol"`
	// The threshold for declaring a test successful.
	SuccessThreshold *ConnectionMonitorSuccessThreshold `pulumi:"successThreshold"`
	// The parameters used to perform test evaluation over TCP.
	TcpConfiguration *ConnectionMonitorTcpConfiguration `pulumi:"tcpConfiguration"`
	// The frequency of test evaluation, in seconds.
	TestFrequencySec *int `pulumi:"testFrequencySec"`
}

// ConnectionMonitorTestConfigurationInput is an input type that accepts ConnectionMonitorTestConfigurationArgs and ConnectionMonitorTestConfigurationOutput values.
// You can construct a concrete instance of `ConnectionMonitorTestConfigurationInput` via:
//
//          ConnectionMonitorTestConfigurationArgs{...}
type ConnectionMonitorTestConfigurationInput interface {
	pulumi.Input

	ToConnectionMonitorTestConfigurationOutput() ConnectionMonitorTestConfigurationOutput
	ToConnectionMonitorTestConfigurationOutputWithContext(context.Context) ConnectionMonitorTestConfigurationOutput
}

// Describes a connection monitor test configuration.
type ConnectionMonitorTestConfigurationArgs struct {
	// The parameters used to perform test evaluation over HTTP.
	HttpConfiguration ConnectionMonitorHttpConfigurationPtrInput `pulumi:"httpConfiguration"`
	// The parameters used to perform test evaluation over ICMP.
	IcmpConfiguration ConnectionMonitorIcmpConfigurationPtrInput `pulumi:"icmpConfiguration"`
	// The name of the connection monitor test configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.
	PreferredIPVersion pulumi.StringPtrInput `pulumi:"preferredIPVersion"`
	// The protocol to use in test evaluation.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The threshold for declaring a test successful.
	SuccessThreshold ConnectionMonitorSuccessThresholdPtrInput `pulumi:"successThreshold"`
	// The parameters used to perform test evaluation over TCP.
	TcpConfiguration ConnectionMonitorTcpConfigurationPtrInput `pulumi:"tcpConfiguration"`
	// The frequency of test evaluation, in seconds.
	TestFrequencySec pulumi.IntPtrInput `pulumi:"testFrequencySec"`
}

func (ConnectionMonitorTestConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTestConfiguration)(nil)).Elem()
}

func (i ConnectionMonitorTestConfigurationArgs) ToConnectionMonitorTestConfigurationOutput() ConnectionMonitorTestConfigurationOutput {
	return i.ToConnectionMonitorTestConfigurationOutputWithContext(context.Background())
}

func (i ConnectionMonitorTestConfigurationArgs) ToConnectionMonitorTestConfigurationOutputWithContext(ctx context.Context) ConnectionMonitorTestConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTestConfigurationOutput)
}

// ConnectionMonitorTestConfigurationArrayInput is an input type that accepts ConnectionMonitorTestConfigurationArray and ConnectionMonitorTestConfigurationArrayOutput values.
// You can construct a concrete instance of `ConnectionMonitorTestConfigurationArrayInput` via:
//
//          ConnectionMonitorTestConfigurationArray{ ConnectionMonitorTestConfigurationArgs{...} }
type ConnectionMonitorTestConfigurationArrayInput interface {
	pulumi.Input

	ToConnectionMonitorTestConfigurationArrayOutput() ConnectionMonitorTestConfigurationArrayOutput
	ToConnectionMonitorTestConfigurationArrayOutputWithContext(context.Context) ConnectionMonitorTestConfigurationArrayOutput
}

type ConnectionMonitorTestConfigurationArray []ConnectionMonitorTestConfigurationInput

func (ConnectionMonitorTestConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorTestConfiguration)(nil)).Elem()
}

func (i ConnectionMonitorTestConfigurationArray) ToConnectionMonitorTestConfigurationArrayOutput() ConnectionMonitorTestConfigurationArrayOutput {
	return i.ToConnectionMonitorTestConfigurationArrayOutputWithContext(context.Background())
}

func (i ConnectionMonitorTestConfigurationArray) ToConnectionMonitorTestConfigurationArrayOutputWithContext(ctx context.Context) ConnectionMonitorTestConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTestConfigurationArrayOutput)
}

// Describes a connection monitor test configuration.
type ConnectionMonitorTestConfigurationOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTestConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTestConfiguration)(nil)).Elem()
}

func (o ConnectionMonitorTestConfigurationOutput) ToConnectionMonitorTestConfigurationOutput() ConnectionMonitorTestConfigurationOutput {
	return o
}

func (o ConnectionMonitorTestConfigurationOutput) ToConnectionMonitorTestConfigurationOutputWithContext(ctx context.Context) ConnectionMonitorTestConfigurationOutput {
	return o
}

// The parameters used to perform test evaluation over HTTP.
func (o ConnectionMonitorTestConfigurationOutput) HttpConfiguration() ConnectionMonitorHttpConfigurationPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfiguration) *ConnectionMonitorHttpConfiguration {
		return v.HttpConfiguration
	}).(ConnectionMonitorHttpConfigurationPtrOutput)
}

// The parameters used to perform test evaluation over ICMP.
func (o ConnectionMonitorTestConfigurationOutput) IcmpConfiguration() ConnectionMonitorIcmpConfigurationPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfiguration) *ConnectionMonitorIcmpConfiguration {
		return v.IcmpConfiguration
	}).(ConnectionMonitorIcmpConfigurationPtrOutput)
}

// The name of the connection monitor test configuration.
func (o ConnectionMonitorTestConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.
func (o ConnectionMonitorTestConfigurationOutput) PreferredIPVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfiguration) *string { return v.PreferredIPVersion }).(pulumi.StringPtrOutput)
}

// The protocol to use in test evaluation.
func (o ConnectionMonitorTestConfigurationOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfiguration) string { return v.Protocol }).(pulumi.StringOutput)
}

// The threshold for declaring a test successful.
func (o ConnectionMonitorTestConfigurationOutput) SuccessThreshold() ConnectionMonitorSuccessThresholdPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfiguration) *ConnectionMonitorSuccessThreshold {
		return v.SuccessThreshold
	}).(ConnectionMonitorSuccessThresholdPtrOutput)
}

// The parameters used to perform test evaluation over TCP.
func (o ConnectionMonitorTestConfigurationOutput) TcpConfiguration() ConnectionMonitorTcpConfigurationPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfiguration) *ConnectionMonitorTcpConfiguration {
		return v.TcpConfiguration
	}).(ConnectionMonitorTcpConfigurationPtrOutput)
}

// The frequency of test evaluation, in seconds.
func (o ConnectionMonitorTestConfigurationOutput) TestFrequencySec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfiguration) *int { return v.TestFrequencySec }).(pulumi.IntPtrOutput)
}

type ConnectionMonitorTestConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTestConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorTestConfiguration)(nil)).Elem()
}

func (o ConnectionMonitorTestConfigurationArrayOutput) ToConnectionMonitorTestConfigurationArrayOutput() ConnectionMonitorTestConfigurationArrayOutput {
	return o
}

func (o ConnectionMonitorTestConfigurationArrayOutput) ToConnectionMonitorTestConfigurationArrayOutputWithContext(ctx context.Context) ConnectionMonitorTestConfigurationArrayOutput {
	return o
}

func (o ConnectionMonitorTestConfigurationArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorTestConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorTestConfiguration {
		return vs[0].([]ConnectionMonitorTestConfiguration)[vs[1].(int)]
	}).(ConnectionMonitorTestConfigurationOutput)
}

// Describes a connection monitor test configuration.
type ConnectionMonitorTestConfigurationResponse struct {
	// The parameters used to perform test evaluation over HTTP.
	HttpConfiguration *ConnectionMonitorHttpConfigurationResponse `pulumi:"httpConfiguration"`
	// The parameters used to perform test evaluation over ICMP.
	IcmpConfiguration *ConnectionMonitorIcmpConfigurationResponse `pulumi:"icmpConfiguration"`
	// The name of the connection monitor test configuration.
	Name string `pulumi:"name"`
	// The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.
	PreferredIPVersion *string `pulumi:"preferredIPVersion"`
	// The protocol to use in test evaluation.
	Protocol string `pulumi:"protocol"`
	// The threshold for declaring a test successful.
	SuccessThreshold *ConnectionMonitorSuccessThresholdResponse `pulumi:"successThreshold"`
	// The parameters used to perform test evaluation over TCP.
	TcpConfiguration *ConnectionMonitorTcpConfigurationResponse `pulumi:"tcpConfiguration"`
	// The frequency of test evaluation, in seconds.
	TestFrequencySec *int `pulumi:"testFrequencySec"`
}

// ConnectionMonitorTestConfigurationResponseInput is an input type that accepts ConnectionMonitorTestConfigurationResponseArgs and ConnectionMonitorTestConfigurationResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorTestConfigurationResponseInput` via:
//
//          ConnectionMonitorTestConfigurationResponseArgs{...}
type ConnectionMonitorTestConfigurationResponseInput interface {
	pulumi.Input

	ToConnectionMonitorTestConfigurationResponseOutput() ConnectionMonitorTestConfigurationResponseOutput
	ToConnectionMonitorTestConfigurationResponseOutputWithContext(context.Context) ConnectionMonitorTestConfigurationResponseOutput
}

// Describes a connection monitor test configuration.
type ConnectionMonitorTestConfigurationResponseArgs struct {
	// The parameters used to perform test evaluation over HTTP.
	HttpConfiguration ConnectionMonitorHttpConfigurationResponsePtrInput `pulumi:"httpConfiguration"`
	// The parameters used to perform test evaluation over ICMP.
	IcmpConfiguration ConnectionMonitorIcmpConfigurationResponsePtrInput `pulumi:"icmpConfiguration"`
	// The name of the connection monitor test configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.
	PreferredIPVersion pulumi.StringPtrInput `pulumi:"preferredIPVersion"`
	// The protocol to use in test evaluation.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The threshold for declaring a test successful.
	SuccessThreshold ConnectionMonitorSuccessThresholdResponsePtrInput `pulumi:"successThreshold"`
	// The parameters used to perform test evaluation over TCP.
	TcpConfiguration ConnectionMonitorTcpConfigurationResponsePtrInput `pulumi:"tcpConfiguration"`
	// The frequency of test evaluation, in seconds.
	TestFrequencySec pulumi.IntPtrInput `pulumi:"testFrequencySec"`
}

func (ConnectionMonitorTestConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTestConfigurationResponse)(nil)).Elem()
}

func (i ConnectionMonitorTestConfigurationResponseArgs) ToConnectionMonitorTestConfigurationResponseOutput() ConnectionMonitorTestConfigurationResponseOutput {
	return i.ToConnectionMonitorTestConfigurationResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorTestConfigurationResponseArgs) ToConnectionMonitorTestConfigurationResponseOutputWithContext(ctx context.Context) ConnectionMonitorTestConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTestConfigurationResponseOutput)
}

// ConnectionMonitorTestConfigurationResponseArrayInput is an input type that accepts ConnectionMonitorTestConfigurationResponseArray and ConnectionMonitorTestConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ConnectionMonitorTestConfigurationResponseArrayInput` via:
//
//          ConnectionMonitorTestConfigurationResponseArray{ ConnectionMonitorTestConfigurationResponseArgs{...} }
type ConnectionMonitorTestConfigurationResponseArrayInput interface {
	pulumi.Input

	ToConnectionMonitorTestConfigurationResponseArrayOutput() ConnectionMonitorTestConfigurationResponseArrayOutput
	ToConnectionMonitorTestConfigurationResponseArrayOutputWithContext(context.Context) ConnectionMonitorTestConfigurationResponseArrayOutput
}

type ConnectionMonitorTestConfigurationResponseArray []ConnectionMonitorTestConfigurationResponseInput

func (ConnectionMonitorTestConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorTestConfigurationResponse)(nil)).Elem()
}

func (i ConnectionMonitorTestConfigurationResponseArray) ToConnectionMonitorTestConfigurationResponseArrayOutput() ConnectionMonitorTestConfigurationResponseArrayOutput {
	return i.ToConnectionMonitorTestConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ConnectionMonitorTestConfigurationResponseArray) ToConnectionMonitorTestConfigurationResponseArrayOutputWithContext(ctx context.Context) ConnectionMonitorTestConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTestConfigurationResponseArrayOutput)
}

// Describes a connection monitor test configuration.
type ConnectionMonitorTestConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTestConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTestConfigurationResponse)(nil)).Elem()
}

func (o ConnectionMonitorTestConfigurationResponseOutput) ToConnectionMonitorTestConfigurationResponseOutput() ConnectionMonitorTestConfigurationResponseOutput {
	return o
}

func (o ConnectionMonitorTestConfigurationResponseOutput) ToConnectionMonitorTestConfigurationResponseOutputWithContext(ctx context.Context) ConnectionMonitorTestConfigurationResponseOutput {
	return o
}

// The parameters used to perform test evaluation over HTTP.
func (o ConnectionMonitorTestConfigurationResponseOutput) HttpConfiguration() ConnectionMonitorHttpConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfigurationResponse) *ConnectionMonitorHttpConfigurationResponse {
		return v.HttpConfiguration
	}).(ConnectionMonitorHttpConfigurationResponsePtrOutput)
}

// The parameters used to perform test evaluation over ICMP.
func (o ConnectionMonitorTestConfigurationResponseOutput) IcmpConfiguration() ConnectionMonitorIcmpConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfigurationResponse) *ConnectionMonitorIcmpConfigurationResponse {
		return v.IcmpConfiguration
	}).(ConnectionMonitorIcmpConfigurationResponsePtrOutput)
}

// The name of the connection monitor test configuration.
func (o ConnectionMonitorTestConfigurationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfigurationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The preferred IP version to use in test evaluation. The connection monitor may choose to use a different version depending on other parameters.
func (o ConnectionMonitorTestConfigurationResponseOutput) PreferredIPVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfigurationResponse) *string { return v.PreferredIPVersion }).(pulumi.StringPtrOutput)
}

// The protocol to use in test evaluation.
func (o ConnectionMonitorTestConfigurationResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfigurationResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The threshold for declaring a test successful.
func (o ConnectionMonitorTestConfigurationResponseOutput) SuccessThreshold() ConnectionMonitorSuccessThresholdResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfigurationResponse) *ConnectionMonitorSuccessThresholdResponse {
		return v.SuccessThreshold
	}).(ConnectionMonitorSuccessThresholdResponsePtrOutput)
}

// The parameters used to perform test evaluation over TCP.
func (o ConnectionMonitorTestConfigurationResponseOutput) TcpConfiguration() ConnectionMonitorTcpConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfigurationResponse) *ConnectionMonitorTcpConfigurationResponse {
		return v.TcpConfiguration
	}).(ConnectionMonitorTcpConfigurationResponsePtrOutput)
}

// The frequency of test evaluation, in seconds.
func (o ConnectionMonitorTestConfigurationResponseOutput) TestFrequencySec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestConfigurationResponse) *int { return v.TestFrequencySec }).(pulumi.IntPtrOutput)
}

type ConnectionMonitorTestConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTestConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorTestConfigurationResponse)(nil)).Elem()
}

func (o ConnectionMonitorTestConfigurationResponseArrayOutput) ToConnectionMonitorTestConfigurationResponseArrayOutput() ConnectionMonitorTestConfigurationResponseArrayOutput {
	return o
}

func (o ConnectionMonitorTestConfigurationResponseArrayOutput) ToConnectionMonitorTestConfigurationResponseArrayOutputWithContext(ctx context.Context) ConnectionMonitorTestConfigurationResponseArrayOutput {
	return o
}

func (o ConnectionMonitorTestConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorTestConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorTestConfigurationResponse {
		return vs[0].([]ConnectionMonitorTestConfigurationResponse)[vs[1].(int)]
	}).(ConnectionMonitorTestConfigurationResponseOutput)
}

// Describes the connection monitor test group.
type ConnectionMonitorTestGroup struct {
	// List of destination endpoint names.
	Destinations []string `pulumi:"destinations"`
	// Value indicating whether test group is disabled.
	Disable *bool `pulumi:"disable"`
	// The name of the connection monitor test group.
	Name string `pulumi:"name"`
	// List of source endpoint names.
	Sources []string `pulumi:"sources"`
	// List of test configuration names.
	TestConfigurations []string `pulumi:"testConfigurations"`
}

// ConnectionMonitorTestGroupInput is an input type that accepts ConnectionMonitorTestGroupArgs and ConnectionMonitorTestGroupOutput values.
// You can construct a concrete instance of `ConnectionMonitorTestGroupInput` via:
//
//          ConnectionMonitorTestGroupArgs{...}
type ConnectionMonitorTestGroupInput interface {
	pulumi.Input

	ToConnectionMonitorTestGroupOutput() ConnectionMonitorTestGroupOutput
	ToConnectionMonitorTestGroupOutputWithContext(context.Context) ConnectionMonitorTestGroupOutput
}

// Describes the connection monitor test group.
type ConnectionMonitorTestGroupArgs struct {
	// List of destination endpoint names.
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	// Value indicating whether test group is disabled.
	Disable pulumi.BoolPtrInput `pulumi:"disable"`
	// The name of the connection monitor test group.
	Name pulumi.StringInput `pulumi:"name"`
	// List of source endpoint names.
	Sources pulumi.StringArrayInput `pulumi:"sources"`
	// List of test configuration names.
	TestConfigurations pulumi.StringArrayInput `pulumi:"testConfigurations"`
}

func (ConnectionMonitorTestGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTestGroup)(nil)).Elem()
}

func (i ConnectionMonitorTestGroupArgs) ToConnectionMonitorTestGroupOutput() ConnectionMonitorTestGroupOutput {
	return i.ToConnectionMonitorTestGroupOutputWithContext(context.Background())
}

func (i ConnectionMonitorTestGroupArgs) ToConnectionMonitorTestGroupOutputWithContext(ctx context.Context) ConnectionMonitorTestGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTestGroupOutput)
}

// ConnectionMonitorTestGroupArrayInput is an input type that accepts ConnectionMonitorTestGroupArray and ConnectionMonitorTestGroupArrayOutput values.
// You can construct a concrete instance of `ConnectionMonitorTestGroupArrayInput` via:
//
//          ConnectionMonitorTestGroupArray{ ConnectionMonitorTestGroupArgs{...} }
type ConnectionMonitorTestGroupArrayInput interface {
	pulumi.Input

	ToConnectionMonitorTestGroupArrayOutput() ConnectionMonitorTestGroupArrayOutput
	ToConnectionMonitorTestGroupArrayOutputWithContext(context.Context) ConnectionMonitorTestGroupArrayOutput
}

type ConnectionMonitorTestGroupArray []ConnectionMonitorTestGroupInput

func (ConnectionMonitorTestGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorTestGroup)(nil)).Elem()
}

func (i ConnectionMonitorTestGroupArray) ToConnectionMonitorTestGroupArrayOutput() ConnectionMonitorTestGroupArrayOutput {
	return i.ToConnectionMonitorTestGroupArrayOutputWithContext(context.Background())
}

func (i ConnectionMonitorTestGroupArray) ToConnectionMonitorTestGroupArrayOutputWithContext(ctx context.Context) ConnectionMonitorTestGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTestGroupArrayOutput)
}

// Describes the connection monitor test group.
type ConnectionMonitorTestGroupOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTestGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTestGroup)(nil)).Elem()
}

func (o ConnectionMonitorTestGroupOutput) ToConnectionMonitorTestGroupOutput() ConnectionMonitorTestGroupOutput {
	return o
}

func (o ConnectionMonitorTestGroupOutput) ToConnectionMonitorTestGroupOutputWithContext(ctx context.Context) ConnectionMonitorTestGroupOutput {
	return o
}

// List of destination endpoint names.
func (o ConnectionMonitorTestGroupOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroup) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// Value indicating whether test group is disabled.
func (o ConnectionMonitorTestGroupOutput) Disable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroup) *bool { return v.Disable }).(pulumi.BoolPtrOutput)
}

// The name of the connection monitor test group.
func (o ConnectionMonitorTestGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroup) string { return v.Name }).(pulumi.StringOutput)
}

// List of source endpoint names.
func (o ConnectionMonitorTestGroupOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroup) []string { return v.Sources }).(pulumi.StringArrayOutput)
}

// List of test configuration names.
func (o ConnectionMonitorTestGroupOutput) TestConfigurations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroup) []string { return v.TestConfigurations }).(pulumi.StringArrayOutput)
}

type ConnectionMonitorTestGroupArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTestGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorTestGroup)(nil)).Elem()
}

func (o ConnectionMonitorTestGroupArrayOutput) ToConnectionMonitorTestGroupArrayOutput() ConnectionMonitorTestGroupArrayOutput {
	return o
}

func (o ConnectionMonitorTestGroupArrayOutput) ToConnectionMonitorTestGroupArrayOutputWithContext(ctx context.Context) ConnectionMonitorTestGroupArrayOutput {
	return o
}

func (o ConnectionMonitorTestGroupArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorTestGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorTestGroup {
		return vs[0].([]ConnectionMonitorTestGroup)[vs[1].(int)]
	}).(ConnectionMonitorTestGroupOutput)
}

// Describes the connection monitor test group.
type ConnectionMonitorTestGroupResponse struct {
	// List of destination endpoint names.
	Destinations []string `pulumi:"destinations"`
	// Value indicating whether test group is disabled.
	Disable *bool `pulumi:"disable"`
	// The name of the connection monitor test group.
	Name string `pulumi:"name"`
	// List of source endpoint names.
	Sources []string `pulumi:"sources"`
	// List of test configuration names.
	TestConfigurations []string `pulumi:"testConfigurations"`
}

// ConnectionMonitorTestGroupResponseInput is an input type that accepts ConnectionMonitorTestGroupResponseArgs and ConnectionMonitorTestGroupResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorTestGroupResponseInput` via:
//
//          ConnectionMonitorTestGroupResponseArgs{...}
type ConnectionMonitorTestGroupResponseInput interface {
	pulumi.Input

	ToConnectionMonitorTestGroupResponseOutput() ConnectionMonitorTestGroupResponseOutput
	ToConnectionMonitorTestGroupResponseOutputWithContext(context.Context) ConnectionMonitorTestGroupResponseOutput
}

// Describes the connection monitor test group.
type ConnectionMonitorTestGroupResponseArgs struct {
	// List of destination endpoint names.
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	// Value indicating whether test group is disabled.
	Disable pulumi.BoolPtrInput `pulumi:"disable"`
	// The name of the connection monitor test group.
	Name pulumi.StringInput `pulumi:"name"`
	// List of source endpoint names.
	Sources pulumi.StringArrayInput `pulumi:"sources"`
	// List of test configuration names.
	TestConfigurations pulumi.StringArrayInput `pulumi:"testConfigurations"`
}

func (ConnectionMonitorTestGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTestGroupResponse)(nil)).Elem()
}

func (i ConnectionMonitorTestGroupResponseArgs) ToConnectionMonitorTestGroupResponseOutput() ConnectionMonitorTestGroupResponseOutput {
	return i.ToConnectionMonitorTestGroupResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorTestGroupResponseArgs) ToConnectionMonitorTestGroupResponseOutputWithContext(ctx context.Context) ConnectionMonitorTestGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTestGroupResponseOutput)
}

// ConnectionMonitorTestGroupResponseArrayInput is an input type that accepts ConnectionMonitorTestGroupResponseArray and ConnectionMonitorTestGroupResponseArrayOutput values.
// You can construct a concrete instance of `ConnectionMonitorTestGroupResponseArrayInput` via:
//
//          ConnectionMonitorTestGroupResponseArray{ ConnectionMonitorTestGroupResponseArgs{...} }
type ConnectionMonitorTestGroupResponseArrayInput interface {
	pulumi.Input

	ToConnectionMonitorTestGroupResponseArrayOutput() ConnectionMonitorTestGroupResponseArrayOutput
	ToConnectionMonitorTestGroupResponseArrayOutputWithContext(context.Context) ConnectionMonitorTestGroupResponseArrayOutput
}

type ConnectionMonitorTestGroupResponseArray []ConnectionMonitorTestGroupResponseInput

func (ConnectionMonitorTestGroupResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorTestGroupResponse)(nil)).Elem()
}

func (i ConnectionMonitorTestGroupResponseArray) ToConnectionMonitorTestGroupResponseArrayOutput() ConnectionMonitorTestGroupResponseArrayOutput {
	return i.ToConnectionMonitorTestGroupResponseArrayOutputWithContext(context.Background())
}

func (i ConnectionMonitorTestGroupResponseArray) ToConnectionMonitorTestGroupResponseArrayOutputWithContext(ctx context.Context) ConnectionMonitorTestGroupResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorTestGroupResponseArrayOutput)
}

// Describes the connection monitor test group.
type ConnectionMonitorTestGroupResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTestGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorTestGroupResponse)(nil)).Elem()
}

func (o ConnectionMonitorTestGroupResponseOutput) ToConnectionMonitorTestGroupResponseOutput() ConnectionMonitorTestGroupResponseOutput {
	return o
}

func (o ConnectionMonitorTestGroupResponseOutput) ToConnectionMonitorTestGroupResponseOutputWithContext(ctx context.Context) ConnectionMonitorTestGroupResponseOutput {
	return o
}

// List of destination endpoint names.
func (o ConnectionMonitorTestGroupResponseOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroupResponse) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// Value indicating whether test group is disabled.
func (o ConnectionMonitorTestGroupResponseOutput) Disable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroupResponse) *bool { return v.Disable }).(pulumi.BoolPtrOutput)
}

// The name of the connection monitor test group.
func (o ConnectionMonitorTestGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// List of source endpoint names.
func (o ConnectionMonitorTestGroupResponseOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroupResponse) []string { return v.Sources }).(pulumi.StringArrayOutput)
}

// List of test configuration names.
func (o ConnectionMonitorTestGroupResponseOutput) TestConfigurations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionMonitorTestGroupResponse) []string { return v.TestConfigurations }).(pulumi.StringArrayOutput)
}

type ConnectionMonitorTestGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorTestGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionMonitorTestGroupResponse)(nil)).Elem()
}

func (o ConnectionMonitorTestGroupResponseArrayOutput) ToConnectionMonitorTestGroupResponseArrayOutput() ConnectionMonitorTestGroupResponseArrayOutput {
	return o
}

func (o ConnectionMonitorTestGroupResponseArrayOutput) ToConnectionMonitorTestGroupResponseArrayOutputWithContext(ctx context.Context) ConnectionMonitorTestGroupResponseArrayOutput {
	return o
}

func (o ConnectionMonitorTestGroupResponseArrayOutput) Index(i pulumi.IntInput) ConnectionMonitorTestGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionMonitorTestGroupResponse {
		return vs[0].([]ConnectionMonitorTestGroupResponse)[vs[1].(int)]
	}).(ConnectionMonitorTestGroupResponseOutput)
}

// Describes the settings for producing output into a log analytics workspace.
type ConnectionMonitorWorkspaceSettings struct {
	// Log analytics workspace resource ID.
	WorkspaceResourceId *string `pulumi:"workspaceResourceId"`
}

// ConnectionMonitorWorkspaceSettingsInput is an input type that accepts ConnectionMonitorWorkspaceSettingsArgs and ConnectionMonitorWorkspaceSettingsOutput values.
// You can construct a concrete instance of `ConnectionMonitorWorkspaceSettingsInput` via:
//
//          ConnectionMonitorWorkspaceSettingsArgs{...}
type ConnectionMonitorWorkspaceSettingsInput interface {
	pulumi.Input

	ToConnectionMonitorWorkspaceSettingsOutput() ConnectionMonitorWorkspaceSettingsOutput
	ToConnectionMonitorWorkspaceSettingsOutputWithContext(context.Context) ConnectionMonitorWorkspaceSettingsOutput
}

// Describes the settings for producing output into a log analytics workspace.
type ConnectionMonitorWorkspaceSettingsArgs struct {
	// Log analytics workspace resource ID.
	WorkspaceResourceId pulumi.StringPtrInput `pulumi:"workspaceResourceId"`
}

func (ConnectionMonitorWorkspaceSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorWorkspaceSettings)(nil)).Elem()
}

func (i ConnectionMonitorWorkspaceSettingsArgs) ToConnectionMonitorWorkspaceSettingsOutput() ConnectionMonitorWorkspaceSettingsOutput {
	return i.ToConnectionMonitorWorkspaceSettingsOutputWithContext(context.Background())
}

func (i ConnectionMonitorWorkspaceSettingsArgs) ToConnectionMonitorWorkspaceSettingsOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorWorkspaceSettingsOutput)
}

func (i ConnectionMonitorWorkspaceSettingsArgs) ToConnectionMonitorWorkspaceSettingsPtrOutput() ConnectionMonitorWorkspaceSettingsPtrOutput {
	return i.ToConnectionMonitorWorkspaceSettingsPtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorWorkspaceSettingsArgs) ToConnectionMonitorWorkspaceSettingsPtrOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorWorkspaceSettingsOutput).ToConnectionMonitorWorkspaceSettingsPtrOutputWithContext(ctx)
}

// ConnectionMonitorWorkspaceSettingsPtrInput is an input type that accepts ConnectionMonitorWorkspaceSettingsArgs, ConnectionMonitorWorkspaceSettingsPtr and ConnectionMonitorWorkspaceSettingsPtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorWorkspaceSettingsPtrInput` via:
//
//          ConnectionMonitorWorkspaceSettingsArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorWorkspaceSettingsPtrInput interface {
	pulumi.Input

	ToConnectionMonitorWorkspaceSettingsPtrOutput() ConnectionMonitorWorkspaceSettingsPtrOutput
	ToConnectionMonitorWorkspaceSettingsPtrOutputWithContext(context.Context) ConnectionMonitorWorkspaceSettingsPtrOutput
}

type connectionMonitorWorkspaceSettingsPtrType ConnectionMonitorWorkspaceSettingsArgs

func ConnectionMonitorWorkspaceSettingsPtr(v *ConnectionMonitorWorkspaceSettingsArgs) ConnectionMonitorWorkspaceSettingsPtrInput {
	return (*connectionMonitorWorkspaceSettingsPtrType)(v)
}

func (*connectionMonitorWorkspaceSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorWorkspaceSettings)(nil)).Elem()
}

func (i *connectionMonitorWorkspaceSettingsPtrType) ToConnectionMonitorWorkspaceSettingsPtrOutput() ConnectionMonitorWorkspaceSettingsPtrOutput {
	return i.ToConnectionMonitorWorkspaceSettingsPtrOutputWithContext(context.Background())
}

func (i *connectionMonitorWorkspaceSettingsPtrType) ToConnectionMonitorWorkspaceSettingsPtrOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorWorkspaceSettingsPtrOutput)
}

// Describes the settings for producing output into a log analytics workspace.
type ConnectionMonitorWorkspaceSettingsOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorWorkspaceSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorWorkspaceSettings)(nil)).Elem()
}

func (o ConnectionMonitorWorkspaceSettingsOutput) ToConnectionMonitorWorkspaceSettingsOutput() ConnectionMonitorWorkspaceSettingsOutput {
	return o
}

func (o ConnectionMonitorWorkspaceSettingsOutput) ToConnectionMonitorWorkspaceSettingsOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsOutput {
	return o
}

func (o ConnectionMonitorWorkspaceSettingsOutput) ToConnectionMonitorWorkspaceSettingsPtrOutput() ConnectionMonitorWorkspaceSettingsPtrOutput {
	return o.ToConnectionMonitorWorkspaceSettingsPtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorWorkspaceSettingsOutput) ToConnectionMonitorWorkspaceSettingsPtrOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorWorkspaceSettings) *ConnectionMonitorWorkspaceSettings {
		return &v
	}).(ConnectionMonitorWorkspaceSettingsPtrOutput)
}

// Log analytics workspace resource ID.
func (o ConnectionMonitorWorkspaceSettingsOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorWorkspaceSettings) *string { return v.WorkspaceResourceId }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorWorkspaceSettingsPtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorWorkspaceSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorWorkspaceSettings)(nil)).Elem()
}

func (o ConnectionMonitorWorkspaceSettingsPtrOutput) ToConnectionMonitorWorkspaceSettingsPtrOutput() ConnectionMonitorWorkspaceSettingsPtrOutput {
	return o
}

func (o ConnectionMonitorWorkspaceSettingsPtrOutput) ToConnectionMonitorWorkspaceSettingsPtrOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsPtrOutput {
	return o
}

func (o ConnectionMonitorWorkspaceSettingsPtrOutput) Elem() ConnectionMonitorWorkspaceSettingsOutput {
	return o.ApplyT(func(v *ConnectionMonitorWorkspaceSettings) ConnectionMonitorWorkspaceSettings { return *v }).(ConnectionMonitorWorkspaceSettingsOutput)
}

// Log analytics workspace resource ID.
func (o ConnectionMonitorWorkspaceSettingsPtrOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorWorkspaceSettings) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// Describes the settings for producing output into a log analytics workspace.
type ConnectionMonitorWorkspaceSettingsResponse struct {
	// Log analytics workspace resource ID.
	WorkspaceResourceId *string `pulumi:"workspaceResourceId"`
}

// ConnectionMonitorWorkspaceSettingsResponseInput is an input type that accepts ConnectionMonitorWorkspaceSettingsResponseArgs and ConnectionMonitorWorkspaceSettingsResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorWorkspaceSettingsResponseInput` via:
//
//          ConnectionMonitorWorkspaceSettingsResponseArgs{...}
type ConnectionMonitorWorkspaceSettingsResponseInput interface {
	pulumi.Input

	ToConnectionMonitorWorkspaceSettingsResponseOutput() ConnectionMonitorWorkspaceSettingsResponseOutput
	ToConnectionMonitorWorkspaceSettingsResponseOutputWithContext(context.Context) ConnectionMonitorWorkspaceSettingsResponseOutput
}

// Describes the settings for producing output into a log analytics workspace.
type ConnectionMonitorWorkspaceSettingsResponseArgs struct {
	// Log analytics workspace resource ID.
	WorkspaceResourceId pulumi.StringPtrInput `pulumi:"workspaceResourceId"`
}

func (ConnectionMonitorWorkspaceSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorWorkspaceSettingsResponse)(nil)).Elem()
}

func (i ConnectionMonitorWorkspaceSettingsResponseArgs) ToConnectionMonitorWorkspaceSettingsResponseOutput() ConnectionMonitorWorkspaceSettingsResponseOutput {
	return i.ToConnectionMonitorWorkspaceSettingsResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorWorkspaceSettingsResponseArgs) ToConnectionMonitorWorkspaceSettingsResponseOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorWorkspaceSettingsResponseOutput)
}

func (i ConnectionMonitorWorkspaceSettingsResponseArgs) ToConnectionMonitorWorkspaceSettingsResponsePtrOutput() ConnectionMonitorWorkspaceSettingsResponsePtrOutput {
	return i.ToConnectionMonitorWorkspaceSettingsResponsePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorWorkspaceSettingsResponseArgs) ToConnectionMonitorWorkspaceSettingsResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorWorkspaceSettingsResponseOutput).ToConnectionMonitorWorkspaceSettingsResponsePtrOutputWithContext(ctx)
}

// ConnectionMonitorWorkspaceSettingsResponsePtrInput is an input type that accepts ConnectionMonitorWorkspaceSettingsResponseArgs, ConnectionMonitorWorkspaceSettingsResponsePtr and ConnectionMonitorWorkspaceSettingsResponsePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorWorkspaceSettingsResponsePtrInput` via:
//
//          ConnectionMonitorWorkspaceSettingsResponseArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorWorkspaceSettingsResponsePtrInput interface {
	pulumi.Input

	ToConnectionMonitorWorkspaceSettingsResponsePtrOutput() ConnectionMonitorWorkspaceSettingsResponsePtrOutput
	ToConnectionMonitorWorkspaceSettingsResponsePtrOutputWithContext(context.Context) ConnectionMonitorWorkspaceSettingsResponsePtrOutput
}

type connectionMonitorWorkspaceSettingsResponsePtrType ConnectionMonitorWorkspaceSettingsResponseArgs

func ConnectionMonitorWorkspaceSettingsResponsePtr(v *ConnectionMonitorWorkspaceSettingsResponseArgs) ConnectionMonitorWorkspaceSettingsResponsePtrInput {
	return (*connectionMonitorWorkspaceSettingsResponsePtrType)(v)
}

func (*connectionMonitorWorkspaceSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorWorkspaceSettingsResponse)(nil)).Elem()
}

func (i *connectionMonitorWorkspaceSettingsResponsePtrType) ToConnectionMonitorWorkspaceSettingsResponsePtrOutput() ConnectionMonitorWorkspaceSettingsResponsePtrOutput {
	return i.ToConnectionMonitorWorkspaceSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorWorkspaceSettingsResponsePtrType) ToConnectionMonitorWorkspaceSettingsResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorWorkspaceSettingsResponsePtrOutput)
}

// Describes the settings for producing output into a log analytics workspace.
type ConnectionMonitorWorkspaceSettingsResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorWorkspaceSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorWorkspaceSettingsResponse)(nil)).Elem()
}

func (o ConnectionMonitorWorkspaceSettingsResponseOutput) ToConnectionMonitorWorkspaceSettingsResponseOutput() ConnectionMonitorWorkspaceSettingsResponseOutput {
	return o
}

func (o ConnectionMonitorWorkspaceSettingsResponseOutput) ToConnectionMonitorWorkspaceSettingsResponseOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsResponseOutput {
	return o
}

func (o ConnectionMonitorWorkspaceSettingsResponseOutput) ToConnectionMonitorWorkspaceSettingsResponsePtrOutput() ConnectionMonitorWorkspaceSettingsResponsePtrOutput {
	return o.ToConnectionMonitorWorkspaceSettingsResponsePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorWorkspaceSettingsResponseOutput) ToConnectionMonitorWorkspaceSettingsResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorWorkspaceSettingsResponse) *ConnectionMonitorWorkspaceSettingsResponse {
		return &v
	}).(ConnectionMonitorWorkspaceSettingsResponsePtrOutput)
}

// Log analytics workspace resource ID.
func (o ConnectionMonitorWorkspaceSettingsResponseOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorWorkspaceSettingsResponse) *string { return v.WorkspaceResourceId }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorWorkspaceSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorWorkspaceSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorWorkspaceSettingsResponse)(nil)).Elem()
}

func (o ConnectionMonitorWorkspaceSettingsResponsePtrOutput) ToConnectionMonitorWorkspaceSettingsResponsePtrOutput() ConnectionMonitorWorkspaceSettingsResponsePtrOutput {
	return o
}

func (o ConnectionMonitorWorkspaceSettingsResponsePtrOutput) ToConnectionMonitorWorkspaceSettingsResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorWorkspaceSettingsResponsePtrOutput {
	return o
}

func (o ConnectionMonitorWorkspaceSettingsResponsePtrOutput) Elem() ConnectionMonitorWorkspaceSettingsResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorWorkspaceSettingsResponse) ConnectionMonitorWorkspaceSettingsResponse {
		return *v
	}).(ConnectionMonitorWorkspaceSettingsResponseOutput)
}

// Log analytics workspace resource ID.
func (o ConnectionMonitorWorkspaceSettingsResponsePtrOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorWorkspaceSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// Container network interface configuration child resource.
type ContainerNetworkInterfaceConfiguration struct {
	// A list of container network interfaces created from this container network interface configuration.
	ContainerNetworkInterfaces []SubResource `pulumi:"containerNetworkInterfaces"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// A list of ip configurations of the container network interface configuration.
	IpConfigurations []IPConfigurationProfile `pulumi:"ipConfigurations"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
}

// ContainerNetworkInterfaceConfigurationInput is an input type that accepts ContainerNetworkInterfaceConfigurationArgs and ContainerNetworkInterfaceConfigurationOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceConfigurationInput` via:
//
//          ContainerNetworkInterfaceConfigurationArgs{...}
type ContainerNetworkInterfaceConfigurationInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceConfigurationOutput() ContainerNetworkInterfaceConfigurationOutput
	ToContainerNetworkInterfaceConfigurationOutputWithContext(context.Context) ContainerNetworkInterfaceConfigurationOutput
}

// Container network interface configuration child resource.
type ContainerNetworkInterfaceConfigurationArgs struct {
	// A list of container network interfaces created from this container network interface configuration.
	ContainerNetworkInterfaces SubResourceArrayInput `pulumi:"containerNetworkInterfaces"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A list of ip configurations of the container network interface configuration.
	IpConfigurations IPConfigurationProfileArrayInput `pulumi:"ipConfigurations"`
	// The name of the resource. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ContainerNetworkInterfaceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceConfiguration)(nil)).Elem()
}

func (i ContainerNetworkInterfaceConfigurationArgs) ToContainerNetworkInterfaceConfigurationOutput() ContainerNetworkInterfaceConfigurationOutput {
	return i.ToContainerNetworkInterfaceConfigurationOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceConfigurationArgs) ToContainerNetworkInterfaceConfigurationOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationOutput)
}

// ContainerNetworkInterfaceConfigurationArrayInput is an input type that accepts ContainerNetworkInterfaceConfigurationArray and ContainerNetworkInterfaceConfigurationArrayOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceConfigurationArrayInput` via:
//
//          ContainerNetworkInterfaceConfigurationArray{ ContainerNetworkInterfaceConfigurationArgs{...} }
type ContainerNetworkInterfaceConfigurationArrayInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceConfigurationArrayOutput() ContainerNetworkInterfaceConfigurationArrayOutput
	ToContainerNetworkInterfaceConfigurationArrayOutputWithContext(context.Context) ContainerNetworkInterfaceConfigurationArrayOutput
}

type ContainerNetworkInterfaceConfigurationArray []ContainerNetworkInterfaceConfigurationInput

func (ContainerNetworkInterfaceConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceConfiguration)(nil)).Elem()
}

func (i ContainerNetworkInterfaceConfigurationArray) ToContainerNetworkInterfaceConfigurationArrayOutput() ContainerNetworkInterfaceConfigurationArrayOutput {
	return i.ToContainerNetworkInterfaceConfigurationArrayOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceConfigurationArray) ToContainerNetworkInterfaceConfigurationArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationArrayOutput)
}

// Container network interface configuration child resource.
type ContainerNetworkInterfaceConfigurationOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceConfiguration)(nil)).Elem()
}

func (o ContainerNetworkInterfaceConfigurationOutput) ToContainerNetworkInterfaceConfigurationOutput() ContainerNetworkInterfaceConfigurationOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationOutput) ToContainerNetworkInterfaceConfigurationOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationOutput {
	return o
}

// A list of container network interfaces created from this container network interface configuration.
func (o ContainerNetworkInterfaceConfigurationOutput) ContainerNetworkInterfaces() SubResourceArrayOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfiguration) []SubResource { return v.ContainerNetworkInterfaces }).(SubResourceArrayOutput)
}

// Resource ID.
func (o ContainerNetworkInterfaceConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A list of ip configurations of the container network interface configuration.
func (o ContainerNetworkInterfaceConfigurationOutput) IpConfigurations() IPConfigurationProfileArrayOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfiguration) []IPConfigurationProfile { return v.IpConfigurations }).(IPConfigurationProfileArrayOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o ContainerNetworkInterfaceConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ContainerNetworkInterfaceConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceConfiguration)(nil)).Elem()
}

func (o ContainerNetworkInterfaceConfigurationArrayOutput) ToContainerNetworkInterfaceConfigurationArrayOutput() ContainerNetworkInterfaceConfigurationArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationArrayOutput) ToContainerNetworkInterfaceConfigurationArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationArrayOutput) Index(i pulumi.IntInput) ContainerNetworkInterfaceConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerNetworkInterfaceConfiguration {
		return vs[0].([]ContainerNetworkInterfaceConfiguration)[vs[1].(int)]
	}).(ContainerNetworkInterfaceConfigurationOutput)
}

// Container network interface configuration child resource.
type ContainerNetworkInterfaceConfigurationResponse struct {
	// A list of container network interfaces created from this container network interface configuration.
	ContainerNetworkInterfaces []SubResourceResponse `pulumi:"containerNetworkInterfaces"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// A list of ip configurations of the container network interface configuration.
	IpConfigurations []IPConfigurationProfileResponse `pulumi:"ipConfigurations"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the container network interface configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Sub Resource type.
	Type string `pulumi:"type"`
}

// ContainerNetworkInterfaceConfigurationResponseInput is an input type that accepts ContainerNetworkInterfaceConfigurationResponseArgs and ContainerNetworkInterfaceConfigurationResponseOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceConfigurationResponseInput` via:
//
//          ContainerNetworkInterfaceConfigurationResponseArgs{...}
type ContainerNetworkInterfaceConfigurationResponseInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceConfigurationResponseOutput() ContainerNetworkInterfaceConfigurationResponseOutput
	ToContainerNetworkInterfaceConfigurationResponseOutputWithContext(context.Context) ContainerNetworkInterfaceConfigurationResponseOutput
}

// Container network interface configuration child resource.
type ContainerNetworkInterfaceConfigurationResponseArgs struct {
	// A list of container network interfaces created from this container network interface configuration.
	ContainerNetworkInterfaces SubResourceResponseArrayInput `pulumi:"containerNetworkInterfaces"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A list of ip configurations of the container network interface configuration.
	IpConfigurations IPConfigurationProfileResponseArrayInput `pulumi:"ipConfigurations"`
	// The name of the resource. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the container network interface configuration resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Sub Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ContainerNetworkInterfaceConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceConfigurationResponse)(nil)).Elem()
}

func (i ContainerNetworkInterfaceConfigurationResponseArgs) ToContainerNetworkInterfaceConfigurationResponseOutput() ContainerNetworkInterfaceConfigurationResponseOutput {
	return i.ToContainerNetworkInterfaceConfigurationResponseOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceConfigurationResponseArgs) ToContainerNetworkInterfaceConfigurationResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationResponseOutput)
}

// ContainerNetworkInterfaceConfigurationResponseArrayInput is an input type that accepts ContainerNetworkInterfaceConfigurationResponseArray and ContainerNetworkInterfaceConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceConfigurationResponseArrayInput` via:
//
//          ContainerNetworkInterfaceConfigurationResponseArray{ ContainerNetworkInterfaceConfigurationResponseArgs{...} }
type ContainerNetworkInterfaceConfigurationResponseArrayInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceConfigurationResponseArrayOutput() ContainerNetworkInterfaceConfigurationResponseArrayOutput
	ToContainerNetworkInterfaceConfigurationResponseArrayOutputWithContext(context.Context) ContainerNetworkInterfaceConfigurationResponseArrayOutput
}

type ContainerNetworkInterfaceConfigurationResponseArray []ContainerNetworkInterfaceConfigurationResponseInput

func (ContainerNetworkInterfaceConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceConfigurationResponse)(nil)).Elem()
}

func (i ContainerNetworkInterfaceConfigurationResponseArray) ToContainerNetworkInterfaceConfigurationResponseArrayOutput() ContainerNetworkInterfaceConfigurationResponseArrayOutput {
	return i.ToContainerNetworkInterfaceConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceConfigurationResponseArray) ToContainerNetworkInterfaceConfigurationResponseArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceConfigurationResponseArrayOutput)
}

// Container network interface configuration child resource.
type ContainerNetworkInterfaceConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceConfigurationResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceConfigurationResponseOutput) ToContainerNetworkInterfaceConfigurationResponseOutput() ContainerNetworkInterfaceConfigurationResponseOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationResponseOutput) ToContainerNetworkInterfaceConfigurationResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationResponseOutput {
	return o
}

// A list of container network interfaces created from this container network interface configuration.
func (o ContainerNetworkInterfaceConfigurationResponseOutput) ContainerNetworkInterfaces() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) []SubResourceResponse {
		return v.ContainerNetworkInterfaces
	}).(SubResourceResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ContainerNetworkInterfaceConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ContainerNetworkInterfaceConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A list of ip configurations of the container network interface configuration.
func (o ContainerNetworkInterfaceConfigurationResponseOutput) IpConfigurations() IPConfigurationProfileResponseArrayOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) []IPConfigurationProfileResponse {
		return v.IpConfigurations
	}).(IPConfigurationProfileResponseArrayOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o ContainerNetworkInterfaceConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the container network interface configuration resource.
func (o ContainerNetworkInterfaceConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Sub Resource type.
func (o ContainerNetworkInterfaceConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ContainerNetworkInterfaceConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceConfigurationResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceConfigurationResponseArrayOutput) ToContainerNetworkInterfaceConfigurationResponseArrayOutput() ContainerNetworkInterfaceConfigurationResponseArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationResponseArrayOutput) ToContainerNetworkInterfaceConfigurationResponseArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceConfigurationResponseArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ContainerNetworkInterfaceConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerNetworkInterfaceConfigurationResponse {
		return vs[0].([]ContainerNetworkInterfaceConfigurationResponse)[vs[1].(int)]
	}).(ContainerNetworkInterfaceConfigurationResponseOutput)
}

// The ip configuration for a container network interface.
type ContainerNetworkInterfaceIpConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the container network interface IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Sub Resource type.
	Type string `pulumi:"type"`
}

// ContainerNetworkInterfaceIpConfigurationResponseInput is an input type that accepts ContainerNetworkInterfaceIpConfigurationResponseArgs and ContainerNetworkInterfaceIpConfigurationResponseOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceIpConfigurationResponseInput` via:
//
//          ContainerNetworkInterfaceIpConfigurationResponseArgs{...}
type ContainerNetworkInterfaceIpConfigurationResponseInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceIpConfigurationResponseOutput() ContainerNetworkInterfaceIpConfigurationResponseOutput
	ToContainerNetworkInterfaceIpConfigurationResponseOutputWithContext(context.Context) ContainerNetworkInterfaceIpConfigurationResponseOutput
}

// The ip configuration for a container network interface.
type ContainerNetworkInterfaceIpConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The name of the resource. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the container network interface IP configuration resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Sub Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ContainerNetworkInterfaceIpConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceIpConfigurationResponse)(nil)).Elem()
}

func (i ContainerNetworkInterfaceIpConfigurationResponseArgs) ToContainerNetworkInterfaceIpConfigurationResponseOutput() ContainerNetworkInterfaceIpConfigurationResponseOutput {
	return i.ToContainerNetworkInterfaceIpConfigurationResponseOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceIpConfigurationResponseArgs) ToContainerNetworkInterfaceIpConfigurationResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceIpConfigurationResponseOutput)
}

// ContainerNetworkInterfaceIpConfigurationResponseArrayInput is an input type that accepts ContainerNetworkInterfaceIpConfigurationResponseArray and ContainerNetworkInterfaceIpConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceIpConfigurationResponseArrayInput` via:
//
//          ContainerNetworkInterfaceIpConfigurationResponseArray{ ContainerNetworkInterfaceIpConfigurationResponseArgs{...} }
type ContainerNetworkInterfaceIpConfigurationResponseArrayInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceIpConfigurationResponseArrayOutput() ContainerNetworkInterfaceIpConfigurationResponseArrayOutput
	ToContainerNetworkInterfaceIpConfigurationResponseArrayOutputWithContext(context.Context) ContainerNetworkInterfaceIpConfigurationResponseArrayOutput
}

type ContainerNetworkInterfaceIpConfigurationResponseArray []ContainerNetworkInterfaceIpConfigurationResponseInput

func (ContainerNetworkInterfaceIpConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceIpConfigurationResponse)(nil)).Elem()
}

func (i ContainerNetworkInterfaceIpConfigurationResponseArray) ToContainerNetworkInterfaceIpConfigurationResponseArrayOutput() ContainerNetworkInterfaceIpConfigurationResponseArrayOutput {
	return i.ToContainerNetworkInterfaceIpConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceIpConfigurationResponseArray) ToContainerNetworkInterfaceIpConfigurationResponseArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceIpConfigurationResponseArrayOutput)
}

// The ip configuration for a container network interface.
type ContainerNetworkInterfaceIpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceIpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceIpConfigurationResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceIpConfigurationResponseOutput) ToContainerNetworkInterfaceIpConfigurationResponseOutput() ContainerNetworkInterfaceIpConfigurationResponseOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationResponseOutput) ToContainerNetworkInterfaceIpConfigurationResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ContainerNetworkInterfaceIpConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceIpConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o ContainerNetworkInterfaceIpConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceIpConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the container network interface IP configuration resource.
func (o ContainerNetworkInterfaceIpConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceIpConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Sub Resource type.
func (o ContainerNetworkInterfaceIpConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceIpConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ContainerNetworkInterfaceIpConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceIpConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceIpConfigurationResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceIpConfigurationResponseArrayOutput) ToContainerNetworkInterfaceIpConfigurationResponseArrayOutput() ContainerNetworkInterfaceIpConfigurationResponseArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationResponseArrayOutput) ToContainerNetworkInterfaceIpConfigurationResponseArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceIpConfigurationResponseArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceIpConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ContainerNetworkInterfaceIpConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerNetworkInterfaceIpConfigurationResponse {
		return vs[0].([]ContainerNetworkInterfaceIpConfigurationResponse)[vs[1].(int)]
	}).(ContainerNetworkInterfaceIpConfigurationResponseOutput)
}

// Container network interface child resource.
type ContainerNetworkInterfaceResponse struct {
	// Reference to the container to which this container network interface is attached.
	Container *ContainerResponse `pulumi:"container"`
	// Container network interface configuration from which this container network interface is created.
	ContainerNetworkInterfaceConfiguration ContainerNetworkInterfaceConfigurationResponse `pulumi:"containerNetworkInterfaceConfiguration"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Reference to the ip configuration on this container nic.
	IpConfigurations []ContainerNetworkInterfaceIpConfigurationResponse `pulumi:"ipConfigurations"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the container network interface resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Sub Resource type.
	Type string `pulumi:"type"`
}

// ContainerNetworkInterfaceResponseInput is an input type that accepts ContainerNetworkInterfaceResponseArgs and ContainerNetworkInterfaceResponseOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceResponseInput` via:
//
//          ContainerNetworkInterfaceResponseArgs{...}
type ContainerNetworkInterfaceResponseInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceResponseOutput() ContainerNetworkInterfaceResponseOutput
	ToContainerNetworkInterfaceResponseOutputWithContext(context.Context) ContainerNetworkInterfaceResponseOutput
}

// Container network interface child resource.
type ContainerNetworkInterfaceResponseArgs struct {
	// Reference to the container to which this container network interface is attached.
	Container ContainerResponsePtrInput `pulumi:"container"`
	// Container network interface configuration from which this container network interface is created.
	ContainerNetworkInterfaceConfiguration ContainerNetworkInterfaceConfigurationResponseInput `pulumi:"containerNetworkInterfaceConfiguration"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Reference to the ip configuration on this container nic.
	IpConfigurations ContainerNetworkInterfaceIpConfigurationResponseArrayInput `pulumi:"ipConfigurations"`
	// The name of the resource. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the container network interface resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Sub Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ContainerNetworkInterfaceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceResponse)(nil)).Elem()
}

func (i ContainerNetworkInterfaceResponseArgs) ToContainerNetworkInterfaceResponseOutput() ContainerNetworkInterfaceResponseOutput {
	return i.ToContainerNetworkInterfaceResponseOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceResponseArgs) ToContainerNetworkInterfaceResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfaceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceResponseOutput)
}

// ContainerNetworkInterfaceResponseArrayInput is an input type that accepts ContainerNetworkInterfaceResponseArray and ContainerNetworkInterfaceResponseArrayOutput values.
// You can construct a concrete instance of `ContainerNetworkInterfaceResponseArrayInput` via:
//
//          ContainerNetworkInterfaceResponseArray{ ContainerNetworkInterfaceResponseArgs{...} }
type ContainerNetworkInterfaceResponseArrayInput interface {
	pulumi.Input

	ToContainerNetworkInterfaceResponseArrayOutput() ContainerNetworkInterfaceResponseArrayOutput
	ToContainerNetworkInterfaceResponseArrayOutputWithContext(context.Context) ContainerNetworkInterfaceResponseArrayOutput
}

type ContainerNetworkInterfaceResponseArray []ContainerNetworkInterfaceResponseInput

func (ContainerNetworkInterfaceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceResponse)(nil)).Elem()
}

func (i ContainerNetworkInterfaceResponseArray) ToContainerNetworkInterfaceResponseArrayOutput() ContainerNetworkInterfaceResponseArrayOutput {
	return i.ToContainerNetworkInterfaceResponseArrayOutputWithContext(context.Background())
}

func (i ContainerNetworkInterfaceResponseArray) ToContainerNetworkInterfaceResponseArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerNetworkInterfaceResponseArrayOutput)
}

// Container network interface child resource.
type ContainerNetworkInterfaceResponseOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerNetworkInterfaceResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceResponseOutput) ToContainerNetworkInterfaceResponseOutput() ContainerNetworkInterfaceResponseOutput {
	return o
}

func (o ContainerNetworkInterfaceResponseOutput) ToContainerNetworkInterfaceResponseOutputWithContext(ctx context.Context) ContainerNetworkInterfaceResponseOutput {
	return o
}

// Reference to the container to which this container network interface is attached.
func (o ContainerNetworkInterfaceResponseOutput) Container() ContainerResponsePtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) *ContainerResponse { return v.Container }).(ContainerResponsePtrOutput)
}

// Container network interface configuration from which this container network interface is created.
func (o ContainerNetworkInterfaceResponseOutput) ContainerNetworkInterfaceConfiguration() ContainerNetworkInterfaceConfigurationResponseOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) ContainerNetworkInterfaceConfigurationResponse {
		return v.ContainerNetworkInterfaceConfiguration
	}).(ContainerNetworkInterfaceConfigurationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ContainerNetworkInterfaceResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ContainerNetworkInterfaceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Reference to the ip configuration on this container nic.
func (o ContainerNetworkInterfaceResponseOutput) IpConfigurations() ContainerNetworkInterfaceIpConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) []ContainerNetworkInterfaceIpConfigurationResponse {
		return v.IpConfigurations
	}).(ContainerNetworkInterfaceIpConfigurationResponseArrayOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o ContainerNetworkInterfaceResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the container network interface resource.
func (o ContainerNetworkInterfaceResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Sub Resource type.
func (o ContainerNetworkInterfaceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerNetworkInterfaceResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ContainerNetworkInterfaceResponseArrayOutput struct{ *pulumi.OutputState }

func (ContainerNetworkInterfaceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerNetworkInterfaceResponse)(nil)).Elem()
}

func (o ContainerNetworkInterfaceResponseArrayOutput) ToContainerNetworkInterfaceResponseArrayOutput() ContainerNetworkInterfaceResponseArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceResponseArrayOutput) ToContainerNetworkInterfaceResponseArrayOutputWithContext(ctx context.Context) ContainerNetworkInterfaceResponseArrayOutput {
	return o
}

func (o ContainerNetworkInterfaceResponseArrayOutput) Index(i pulumi.IntInput) ContainerNetworkInterfaceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerNetworkInterfaceResponse {
		return vs[0].([]ContainerNetworkInterfaceResponse)[vs[1].(int)]
	}).(ContainerNetworkInterfaceResponseOutput)
}

// Reference to container resource in remote resource provider.
type ContainerResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// ContainerResponseInput is an input type that accepts ContainerResponseArgs and ContainerResponseOutput values.
// You can construct a concrete instance of `ContainerResponseInput` via:
//
//          ContainerResponseArgs{...}
type ContainerResponseInput interface {
	pulumi.Input

	ToContainerResponseOutput() ContainerResponseOutput
	ToContainerResponseOutputWithContext(context.Context) ContainerResponseOutput
}

// Reference to container resource in remote resource provider.
type ContainerResponseArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ContainerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResponse)(nil)).Elem()
}

func (i ContainerResponseArgs) ToContainerResponseOutput() ContainerResponseOutput {
	return i.ToContainerResponseOutputWithContext(context.Background())
}

func (i ContainerResponseArgs) ToContainerResponseOutputWithContext(ctx context.Context) ContainerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResponseOutput)
}

func (i ContainerResponseArgs) ToContainerResponsePtrOutput() ContainerResponsePtrOutput {
	return i.ToContainerResponsePtrOutputWithContext(context.Background())
}

func (i ContainerResponseArgs) ToContainerResponsePtrOutputWithContext(ctx context.Context) ContainerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResponseOutput).ToContainerResponsePtrOutputWithContext(ctx)
}

// ContainerResponsePtrInput is an input type that accepts ContainerResponseArgs, ContainerResponsePtr and ContainerResponsePtrOutput values.
// You can construct a concrete instance of `ContainerResponsePtrInput` via:
//
//          ContainerResponseArgs{...}
//
//  or:
//
//          nil
type ContainerResponsePtrInput interface {
	pulumi.Input

	ToContainerResponsePtrOutput() ContainerResponsePtrOutput
	ToContainerResponsePtrOutputWithContext(context.Context) ContainerResponsePtrOutput
}

type containerResponsePtrType ContainerResponseArgs

func ContainerResponsePtr(v *ContainerResponseArgs) ContainerResponsePtrInput {
	return (*containerResponsePtrType)(v)
}

func (*containerResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResponse)(nil)).Elem()
}

func (i *containerResponsePtrType) ToContainerResponsePtrOutput() ContainerResponsePtrOutput {
	return i.ToContainerResponsePtrOutputWithContext(context.Background())
}

func (i *containerResponsePtrType) ToContainerResponsePtrOutputWithContext(ctx context.Context) ContainerResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerResponsePtrOutput)
}

// Reference to container resource in remote resource provider.
type ContainerResponseOutput struct{ *pulumi.OutputState }

func (ContainerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerResponse)(nil)).Elem()
}

func (o ContainerResponseOutput) ToContainerResponseOutput() ContainerResponseOutput {
	return o
}

func (o ContainerResponseOutput) ToContainerResponseOutputWithContext(ctx context.Context) ContainerResponseOutput {
	return o
}

func (o ContainerResponseOutput) ToContainerResponsePtrOutput() ContainerResponsePtrOutput {
	return o.ToContainerResponsePtrOutputWithContext(context.Background())
}

func (o ContainerResponseOutput) ToContainerResponsePtrOutputWithContext(ctx context.Context) ContainerResponsePtrOutput {
	return o.ApplyT(func(v ContainerResponse) *ContainerResponse {
		return &v
	}).(ContainerResponsePtrOutput)
}

// Resource ID.
func (o ContainerResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ContainerResponsePtrOutput struct{ *pulumi.OutputState }

func (ContainerResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerResponse)(nil)).Elem()
}

func (o ContainerResponsePtrOutput) ToContainerResponsePtrOutput() ContainerResponsePtrOutput {
	return o
}

func (o ContainerResponsePtrOutput) ToContainerResponsePtrOutputWithContext(ctx context.Context) ContainerResponsePtrOutput {
	return o
}

func (o ContainerResponsePtrOutput) Elem() ContainerResponseOutput {
	return o.ApplyT(func(v *ContainerResponse) ContainerResponse { return *v }).(ContainerResponseOutput)
}

// Resource ID.
func (o ContainerResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Contains custom Dns resolution configuration from customer.
type CustomDnsConfigPropertiesFormat struct {
	// Fqdn that resolves to private endpoint ip address.
	Fqdn *string `pulumi:"fqdn"`
	// A list of private ip addresses of the private endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// CustomDnsConfigPropertiesFormatInput is an input type that accepts CustomDnsConfigPropertiesFormatArgs and CustomDnsConfigPropertiesFormatOutput values.
// You can construct a concrete instance of `CustomDnsConfigPropertiesFormatInput` via:
//
//          CustomDnsConfigPropertiesFormatArgs{...}
type CustomDnsConfigPropertiesFormatInput interface {
	pulumi.Input

	ToCustomDnsConfigPropertiesFormatOutput() CustomDnsConfigPropertiesFormatOutput
	ToCustomDnsConfigPropertiesFormatOutputWithContext(context.Context) CustomDnsConfigPropertiesFormatOutput
}

// Contains custom Dns resolution configuration from customer.
type CustomDnsConfigPropertiesFormatArgs struct {
	// Fqdn that resolves to private endpoint ip address.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// A list of private ip addresses of the private endpoint.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (CustomDnsConfigPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDnsConfigPropertiesFormat)(nil)).Elem()
}

func (i CustomDnsConfigPropertiesFormatArgs) ToCustomDnsConfigPropertiesFormatOutput() CustomDnsConfigPropertiesFormatOutput {
	return i.ToCustomDnsConfigPropertiesFormatOutputWithContext(context.Background())
}

func (i CustomDnsConfigPropertiesFormatArgs) ToCustomDnsConfigPropertiesFormatOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDnsConfigPropertiesFormatOutput)
}

// CustomDnsConfigPropertiesFormatArrayInput is an input type that accepts CustomDnsConfigPropertiesFormatArray and CustomDnsConfigPropertiesFormatArrayOutput values.
// You can construct a concrete instance of `CustomDnsConfigPropertiesFormatArrayInput` via:
//
//          CustomDnsConfigPropertiesFormatArray{ CustomDnsConfigPropertiesFormatArgs{...} }
type CustomDnsConfigPropertiesFormatArrayInput interface {
	pulumi.Input

	ToCustomDnsConfigPropertiesFormatArrayOutput() CustomDnsConfigPropertiesFormatArrayOutput
	ToCustomDnsConfigPropertiesFormatArrayOutputWithContext(context.Context) CustomDnsConfigPropertiesFormatArrayOutput
}

type CustomDnsConfigPropertiesFormatArray []CustomDnsConfigPropertiesFormatInput

func (CustomDnsConfigPropertiesFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDnsConfigPropertiesFormat)(nil)).Elem()
}

func (i CustomDnsConfigPropertiesFormatArray) ToCustomDnsConfigPropertiesFormatArrayOutput() CustomDnsConfigPropertiesFormatArrayOutput {
	return i.ToCustomDnsConfigPropertiesFormatArrayOutputWithContext(context.Background())
}

func (i CustomDnsConfigPropertiesFormatArray) ToCustomDnsConfigPropertiesFormatArrayOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDnsConfigPropertiesFormatArrayOutput)
}

// Contains custom Dns resolution configuration from customer.
type CustomDnsConfigPropertiesFormatOutput struct{ *pulumi.OutputState }

func (CustomDnsConfigPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDnsConfigPropertiesFormat)(nil)).Elem()
}

func (o CustomDnsConfigPropertiesFormatOutput) ToCustomDnsConfigPropertiesFormatOutput() CustomDnsConfigPropertiesFormatOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatOutput) ToCustomDnsConfigPropertiesFormatOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatOutput {
	return o
}

// Fqdn that resolves to private endpoint ip address.
func (o CustomDnsConfigPropertiesFormatOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDnsConfigPropertiesFormat) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// A list of private ip addresses of the private endpoint.
func (o CustomDnsConfigPropertiesFormatOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomDnsConfigPropertiesFormat) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type CustomDnsConfigPropertiesFormatArrayOutput struct{ *pulumi.OutputState }

func (CustomDnsConfigPropertiesFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDnsConfigPropertiesFormat)(nil)).Elem()
}

func (o CustomDnsConfigPropertiesFormatArrayOutput) ToCustomDnsConfigPropertiesFormatArrayOutput() CustomDnsConfigPropertiesFormatArrayOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatArrayOutput) ToCustomDnsConfigPropertiesFormatArrayOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatArrayOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatArrayOutput) Index(i pulumi.IntInput) CustomDnsConfigPropertiesFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDnsConfigPropertiesFormat {
		return vs[0].([]CustomDnsConfigPropertiesFormat)[vs[1].(int)]
	}).(CustomDnsConfigPropertiesFormatOutput)
}

// Contains custom Dns resolution configuration from customer.
type CustomDnsConfigPropertiesFormatResponse struct {
	// Fqdn that resolves to private endpoint ip address.
	Fqdn *string `pulumi:"fqdn"`
	// A list of private ip addresses of the private endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// CustomDnsConfigPropertiesFormatResponseInput is an input type that accepts CustomDnsConfigPropertiesFormatResponseArgs and CustomDnsConfigPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `CustomDnsConfigPropertiesFormatResponseInput` via:
//
//          CustomDnsConfigPropertiesFormatResponseArgs{...}
type CustomDnsConfigPropertiesFormatResponseInput interface {
	pulumi.Input

	ToCustomDnsConfigPropertiesFormatResponseOutput() CustomDnsConfigPropertiesFormatResponseOutput
	ToCustomDnsConfigPropertiesFormatResponseOutputWithContext(context.Context) CustomDnsConfigPropertiesFormatResponseOutput
}

// Contains custom Dns resolution configuration from customer.
type CustomDnsConfigPropertiesFormatResponseArgs struct {
	// Fqdn that resolves to private endpoint ip address.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// A list of private ip addresses of the private endpoint.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (CustomDnsConfigPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDnsConfigPropertiesFormatResponse)(nil)).Elem()
}

func (i CustomDnsConfigPropertiesFormatResponseArgs) ToCustomDnsConfigPropertiesFormatResponseOutput() CustomDnsConfigPropertiesFormatResponseOutput {
	return i.ToCustomDnsConfigPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i CustomDnsConfigPropertiesFormatResponseArgs) ToCustomDnsConfigPropertiesFormatResponseOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDnsConfigPropertiesFormatResponseOutput)
}

// CustomDnsConfigPropertiesFormatResponseArrayInput is an input type that accepts CustomDnsConfigPropertiesFormatResponseArray and CustomDnsConfigPropertiesFormatResponseArrayOutput values.
// You can construct a concrete instance of `CustomDnsConfigPropertiesFormatResponseArrayInput` via:
//
//          CustomDnsConfigPropertiesFormatResponseArray{ CustomDnsConfigPropertiesFormatResponseArgs{...} }
type CustomDnsConfigPropertiesFormatResponseArrayInput interface {
	pulumi.Input

	ToCustomDnsConfigPropertiesFormatResponseArrayOutput() CustomDnsConfigPropertiesFormatResponseArrayOutput
	ToCustomDnsConfigPropertiesFormatResponseArrayOutputWithContext(context.Context) CustomDnsConfigPropertiesFormatResponseArrayOutput
}

type CustomDnsConfigPropertiesFormatResponseArray []CustomDnsConfigPropertiesFormatResponseInput

func (CustomDnsConfigPropertiesFormatResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDnsConfigPropertiesFormatResponse)(nil)).Elem()
}

func (i CustomDnsConfigPropertiesFormatResponseArray) ToCustomDnsConfigPropertiesFormatResponseArrayOutput() CustomDnsConfigPropertiesFormatResponseArrayOutput {
	return i.ToCustomDnsConfigPropertiesFormatResponseArrayOutputWithContext(context.Background())
}

func (i CustomDnsConfigPropertiesFormatResponseArray) ToCustomDnsConfigPropertiesFormatResponseArrayOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDnsConfigPropertiesFormatResponseArrayOutput)
}

// Contains custom Dns resolution configuration from customer.
type CustomDnsConfigPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (CustomDnsConfigPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDnsConfigPropertiesFormatResponse)(nil)).Elem()
}

func (o CustomDnsConfigPropertiesFormatResponseOutput) ToCustomDnsConfigPropertiesFormatResponseOutput() CustomDnsConfigPropertiesFormatResponseOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatResponseOutput) ToCustomDnsConfigPropertiesFormatResponseOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatResponseOutput {
	return o
}

// Fqdn that resolves to private endpoint ip address.
func (o CustomDnsConfigPropertiesFormatResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDnsConfigPropertiesFormatResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// A list of private ip addresses of the private endpoint.
func (o CustomDnsConfigPropertiesFormatResponseOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomDnsConfigPropertiesFormatResponse) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type CustomDnsConfigPropertiesFormatResponseArrayOutput struct{ *pulumi.OutputState }

func (CustomDnsConfigPropertiesFormatResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDnsConfigPropertiesFormatResponse)(nil)).Elem()
}

func (o CustomDnsConfigPropertiesFormatResponseArrayOutput) ToCustomDnsConfigPropertiesFormatResponseArrayOutput() CustomDnsConfigPropertiesFormatResponseArrayOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatResponseArrayOutput) ToCustomDnsConfigPropertiesFormatResponseArrayOutputWithContext(ctx context.Context) CustomDnsConfigPropertiesFormatResponseArrayOutput {
	return o
}

func (o CustomDnsConfigPropertiesFormatResponseArrayOutput) Index(i pulumi.IntInput) CustomDnsConfigPropertiesFormatResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDnsConfigPropertiesFormatResponse {
		return vs[0].([]CustomDnsConfigPropertiesFormatResponse)[vs[1].(int)]
	}).(CustomDnsConfigPropertiesFormatResponseOutput)
}

// Https settings for a domain
type CustomHttpsConfigurationResponse struct {
	// Defines the source of the SSL certificate
	CertificateSource string `pulumi:"certificateSource"`
	// Defines the type of the certificate used for secure connections to a frontendEndpoint
	CertificateType *string `pulumi:"certificateType"`
	// The minimum TLS version required from the clients to establish an SSL handshake with Front Door.
	MinimumTlsVersion string `pulumi:"minimumTlsVersion"`
	// Defines the TLS extension protocol that is used for secure delivery
	ProtocolType string `pulumi:"protocolType"`
	// The name of the Key Vault secret representing the full certificate PFX
	SecretName *string `pulumi:"secretName"`
	// The version of the Key Vault secret representing the full certificate PFX
	SecretVersion *string `pulumi:"secretVersion"`
	// The Key Vault containing the SSL certificate
	Vault *KeyVaultCertificateSourceParametersResponseVault `pulumi:"vault"`
}

// CustomHttpsConfigurationResponseInput is an input type that accepts CustomHttpsConfigurationResponseArgs and CustomHttpsConfigurationResponseOutput values.
// You can construct a concrete instance of `CustomHttpsConfigurationResponseInput` via:
//
//          CustomHttpsConfigurationResponseArgs{...}
type CustomHttpsConfigurationResponseInput interface {
	pulumi.Input

	ToCustomHttpsConfigurationResponseOutput() CustomHttpsConfigurationResponseOutput
	ToCustomHttpsConfigurationResponseOutputWithContext(context.Context) CustomHttpsConfigurationResponseOutput
}

// Https settings for a domain
type CustomHttpsConfigurationResponseArgs struct {
	// Defines the source of the SSL certificate
	CertificateSource pulumi.StringInput `pulumi:"certificateSource"`
	// Defines the type of the certificate used for secure connections to a frontendEndpoint
	CertificateType pulumi.StringPtrInput `pulumi:"certificateType"`
	// The minimum TLS version required from the clients to establish an SSL handshake with Front Door.
	MinimumTlsVersion pulumi.StringInput `pulumi:"minimumTlsVersion"`
	// Defines the TLS extension protocol that is used for secure delivery
	ProtocolType pulumi.StringInput `pulumi:"protocolType"`
	// The name of the Key Vault secret representing the full certificate PFX
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
	// The version of the Key Vault secret representing the full certificate PFX
	SecretVersion pulumi.StringPtrInput `pulumi:"secretVersion"`
	// The Key Vault containing the SSL certificate
	Vault KeyVaultCertificateSourceParametersResponseVaultPtrInput `pulumi:"vault"`
}

func (CustomHttpsConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomHttpsConfigurationResponse)(nil)).Elem()
}

func (i CustomHttpsConfigurationResponseArgs) ToCustomHttpsConfigurationResponseOutput() CustomHttpsConfigurationResponseOutput {
	return i.ToCustomHttpsConfigurationResponseOutputWithContext(context.Background())
}

func (i CustomHttpsConfigurationResponseArgs) ToCustomHttpsConfigurationResponseOutputWithContext(ctx context.Context) CustomHttpsConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomHttpsConfigurationResponseOutput)
}

// Https settings for a domain
type CustomHttpsConfigurationResponseOutput struct{ *pulumi.OutputState }

func (CustomHttpsConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomHttpsConfigurationResponse)(nil)).Elem()
}

func (o CustomHttpsConfigurationResponseOutput) ToCustomHttpsConfigurationResponseOutput() CustomHttpsConfigurationResponseOutput {
	return o
}

func (o CustomHttpsConfigurationResponseOutput) ToCustomHttpsConfigurationResponseOutputWithContext(ctx context.Context) CustomHttpsConfigurationResponseOutput {
	return o
}

// Defines the source of the SSL certificate
func (o CustomHttpsConfigurationResponseOutput) CertificateSource() pulumi.StringOutput {
	return o.ApplyT(func(v CustomHttpsConfigurationResponse) string { return v.CertificateSource }).(pulumi.StringOutput)
}

// Defines the type of the certificate used for secure connections to a frontendEndpoint
func (o CustomHttpsConfigurationResponseOutput) CertificateType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomHttpsConfigurationResponse) *string { return v.CertificateType }).(pulumi.StringPtrOutput)
}

// The minimum TLS version required from the clients to establish an SSL handshake with Front Door.
func (o CustomHttpsConfigurationResponseOutput) MinimumTlsVersion() pulumi.StringOutput {
	return o.ApplyT(func(v CustomHttpsConfigurationResponse) string { return v.MinimumTlsVersion }).(pulumi.StringOutput)
}

// Defines the TLS extension protocol that is used for secure delivery
func (o CustomHttpsConfigurationResponseOutput) ProtocolType() pulumi.StringOutput {
	return o.ApplyT(func(v CustomHttpsConfigurationResponse) string { return v.ProtocolType }).(pulumi.StringOutput)
}

// The name of the Key Vault secret representing the full certificate PFX
func (o CustomHttpsConfigurationResponseOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomHttpsConfigurationResponse) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

// The version of the Key Vault secret representing the full certificate PFX
func (o CustomHttpsConfigurationResponseOutput) SecretVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomHttpsConfigurationResponse) *string { return v.SecretVersion }).(pulumi.StringPtrOutput)
}

// The Key Vault containing the SSL certificate
func (o CustomHttpsConfigurationResponseOutput) Vault() KeyVaultCertificateSourceParametersResponseVaultPtrOutput {
	return o.ApplyT(func(v CustomHttpsConfigurationResponse) *KeyVaultCertificateSourceParametersResponseVault {
		return v.Vault
	}).(KeyVaultCertificateSourceParametersResponseVaultPtrOutput)
}

// Defines contents of a web application rule
type CustomRule struct {
	// Describes what action to be applied when rule matches.
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchCondition `pulumi:"matchConditions"`
	// Describes the name of the rule.
	Name *string `pulumi:"name"`
	// Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
	Priority int `pulumi:"priority"`
	// Time window for resetting the rate limit count. Default is 1 minute.
	RateLimitDurationInMinutes *int `pulumi:"rateLimitDurationInMinutes"`
	// Number of allowed requests per client within the time window.
	RateLimitThreshold *int `pulumi:"rateLimitThreshold"`
	// Describes type of rule.
	RuleType string `pulumi:"ruleType"`
}

// CustomRuleInput is an input type that accepts CustomRuleArgs and CustomRuleOutput values.
// You can construct a concrete instance of `CustomRuleInput` via:
//
//          CustomRuleArgs{...}
type CustomRuleInput interface {
	pulumi.Input

	ToCustomRuleOutput() CustomRuleOutput
	ToCustomRuleOutputWithContext(context.Context) CustomRuleOutput
}

// Defines contents of a web application rule
type CustomRuleArgs struct {
	// Describes what action to be applied when rule matches.
	Action pulumi.StringInput `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions MatchConditionArrayInput `pulumi:"matchConditions"`
	// Describes the name of the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Time window for resetting the rate limit count. Default is 1 minute.
	RateLimitDurationInMinutes pulumi.IntPtrInput `pulumi:"rateLimitDurationInMinutes"`
	// Number of allowed requests per client within the time window.
	RateLimitThreshold pulumi.IntPtrInput `pulumi:"rateLimitThreshold"`
	// Describes type of rule.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (CustomRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRule)(nil)).Elem()
}

func (i CustomRuleArgs) ToCustomRuleOutput() CustomRuleOutput {
	return i.ToCustomRuleOutputWithContext(context.Background())
}

func (i CustomRuleArgs) ToCustomRuleOutputWithContext(ctx context.Context) CustomRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleOutput)
}

// CustomRuleArrayInput is an input type that accepts CustomRuleArray and CustomRuleArrayOutput values.
// You can construct a concrete instance of `CustomRuleArrayInput` via:
//
//          CustomRuleArray{ CustomRuleArgs{...} }
type CustomRuleArrayInput interface {
	pulumi.Input

	ToCustomRuleArrayOutput() CustomRuleArrayOutput
	ToCustomRuleArrayOutputWithContext(context.Context) CustomRuleArrayOutput
}

type CustomRuleArray []CustomRuleInput

func (CustomRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRule)(nil)).Elem()
}

func (i CustomRuleArray) ToCustomRuleArrayOutput() CustomRuleArrayOutput {
	return i.ToCustomRuleArrayOutputWithContext(context.Background())
}

func (i CustomRuleArray) ToCustomRuleArrayOutputWithContext(ctx context.Context) CustomRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleArrayOutput)
}

// Defines contents of a web application rule
type CustomRuleOutput struct{ *pulumi.OutputState }

func (CustomRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRule)(nil)).Elem()
}

func (o CustomRuleOutput) ToCustomRuleOutput() CustomRuleOutput {
	return o
}

func (o CustomRuleOutput) ToCustomRuleOutputWithContext(ctx context.Context) CustomRuleOutput {
	return o
}

// Describes what action to be applied when rule matches.
func (o CustomRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRule) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o CustomRuleOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRule) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o CustomRuleOutput) MatchConditions() MatchConditionArrayOutput {
	return o.ApplyT(func(v CustomRule) []MatchCondition { return v.MatchConditions }).(MatchConditionArrayOutput)
}

// Describes the name of the rule.
func (o CustomRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
func (o CustomRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v CustomRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Time window for resetting the rate limit count. Default is 1 minute.
func (o CustomRuleOutput) RateLimitDurationInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CustomRule) *int { return v.RateLimitDurationInMinutes }).(pulumi.IntPtrOutput)
}

// Number of allowed requests per client within the time window.
func (o CustomRuleOutput) RateLimitThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CustomRule) *int { return v.RateLimitThreshold }).(pulumi.IntPtrOutput)
}

// Describes type of rule.
func (o CustomRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type CustomRuleArrayOutput struct{ *pulumi.OutputState }

func (CustomRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRule)(nil)).Elem()
}

func (o CustomRuleArrayOutput) ToCustomRuleArrayOutput() CustomRuleArrayOutput {
	return o
}

func (o CustomRuleArrayOutput) ToCustomRuleArrayOutputWithContext(ctx context.Context) CustomRuleArrayOutput {
	return o
}

func (o CustomRuleArrayOutput) Index(i pulumi.IntInput) CustomRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomRule {
		return vs[0].([]CustomRule)[vs[1].(int)]
	}).(CustomRuleOutput)
}

// Defines contents of custom rules
type CustomRuleList struct {
	// List of rules
	Rules []CustomRule `pulumi:"rules"`
}

// CustomRuleListInput is an input type that accepts CustomRuleListArgs and CustomRuleListOutput values.
// You can construct a concrete instance of `CustomRuleListInput` via:
//
//          CustomRuleListArgs{...}
type CustomRuleListInput interface {
	pulumi.Input

	ToCustomRuleListOutput() CustomRuleListOutput
	ToCustomRuleListOutputWithContext(context.Context) CustomRuleListOutput
}

// Defines contents of custom rules
type CustomRuleListArgs struct {
	// List of rules
	Rules CustomRuleArrayInput `pulumi:"rules"`
}

func (CustomRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleList)(nil)).Elem()
}

func (i CustomRuleListArgs) ToCustomRuleListOutput() CustomRuleListOutput {
	return i.ToCustomRuleListOutputWithContext(context.Background())
}

func (i CustomRuleListArgs) ToCustomRuleListOutputWithContext(ctx context.Context) CustomRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListOutput)
}

func (i CustomRuleListArgs) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return i.ToCustomRuleListPtrOutputWithContext(context.Background())
}

func (i CustomRuleListArgs) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListOutput).ToCustomRuleListPtrOutputWithContext(ctx)
}

// CustomRuleListPtrInput is an input type that accepts CustomRuleListArgs, CustomRuleListPtr and CustomRuleListPtrOutput values.
// You can construct a concrete instance of `CustomRuleListPtrInput` via:
//
//          CustomRuleListArgs{...}
//
//  or:
//
//          nil
type CustomRuleListPtrInput interface {
	pulumi.Input

	ToCustomRuleListPtrOutput() CustomRuleListPtrOutput
	ToCustomRuleListPtrOutputWithContext(context.Context) CustomRuleListPtrOutput
}

type customRuleListPtrType CustomRuleListArgs

func CustomRuleListPtr(v *CustomRuleListArgs) CustomRuleListPtrInput {
	return (*customRuleListPtrType)(v)
}

func (*customRuleListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRuleList)(nil)).Elem()
}

func (i *customRuleListPtrType) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return i.ToCustomRuleListPtrOutputWithContext(context.Background())
}

func (i *customRuleListPtrType) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListPtrOutput)
}

// Defines contents of custom rules
type CustomRuleListOutput struct{ *pulumi.OutputState }

func (CustomRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleList)(nil)).Elem()
}

func (o CustomRuleListOutput) ToCustomRuleListOutput() CustomRuleListOutput {
	return o
}

func (o CustomRuleListOutput) ToCustomRuleListOutputWithContext(ctx context.Context) CustomRuleListOutput {
	return o
}

func (o CustomRuleListOutput) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return o.ToCustomRuleListPtrOutputWithContext(context.Background())
}

func (o CustomRuleListOutput) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return o.ApplyT(func(v CustomRuleList) *CustomRuleList {
		return &v
	}).(CustomRuleListPtrOutput)
}

// List of rules
func (o CustomRuleListOutput) Rules() CustomRuleArrayOutput {
	return o.ApplyT(func(v CustomRuleList) []CustomRule { return v.Rules }).(CustomRuleArrayOutput)
}

type CustomRuleListPtrOutput struct{ *pulumi.OutputState }

func (CustomRuleListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRuleList)(nil)).Elem()
}

func (o CustomRuleListPtrOutput) ToCustomRuleListPtrOutput() CustomRuleListPtrOutput {
	return o
}

func (o CustomRuleListPtrOutput) ToCustomRuleListPtrOutputWithContext(ctx context.Context) CustomRuleListPtrOutput {
	return o
}

func (o CustomRuleListPtrOutput) Elem() CustomRuleListOutput {
	return o.ApplyT(func(v *CustomRuleList) CustomRuleList { return *v }).(CustomRuleListOutput)
}

// List of rules
func (o CustomRuleListPtrOutput) Rules() CustomRuleArrayOutput {
	return o.ApplyT(func(v *CustomRuleList) []CustomRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(CustomRuleArrayOutput)
}

// Defines contents of custom rules
type CustomRuleListResponse struct {
	// List of rules
	Rules []CustomRuleResponse `pulumi:"rules"`
}

// CustomRuleListResponseInput is an input type that accepts CustomRuleListResponseArgs and CustomRuleListResponseOutput values.
// You can construct a concrete instance of `CustomRuleListResponseInput` via:
//
//          CustomRuleListResponseArgs{...}
type CustomRuleListResponseInput interface {
	pulumi.Input

	ToCustomRuleListResponseOutput() CustomRuleListResponseOutput
	ToCustomRuleListResponseOutputWithContext(context.Context) CustomRuleListResponseOutput
}

// Defines contents of custom rules
type CustomRuleListResponseArgs struct {
	// List of rules
	Rules CustomRuleResponseArrayInput `pulumi:"rules"`
}

func (CustomRuleListResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleListResponse)(nil)).Elem()
}

func (i CustomRuleListResponseArgs) ToCustomRuleListResponseOutput() CustomRuleListResponseOutput {
	return i.ToCustomRuleListResponseOutputWithContext(context.Background())
}

func (i CustomRuleListResponseArgs) ToCustomRuleListResponseOutputWithContext(ctx context.Context) CustomRuleListResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListResponseOutput)
}

func (i CustomRuleListResponseArgs) ToCustomRuleListResponsePtrOutput() CustomRuleListResponsePtrOutput {
	return i.ToCustomRuleListResponsePtrOutputWithContext(context.Background())
}

func (i CustomRuleListResponseArgs) ToCustomRuleListResponsePtrOutputWithContext(ctx context.Context) CustomRuleListResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListResponseOutput).ToCustomRuleListResponsePtrOutputWithContext(ctx)
}

// CustomRuleListResponsePtrInput is an input type that accepts CustomRuleListResponseArgs, CustomRuleListResponsePtr and CustomRuleListResponsePtrOutput values.
// You can construct a concrete instance of `CustomRuleListResponsePtrInput` via:
//
//          CustomRuleListResponseArgs{...}
//
//  or:
//
//          nil
type CustomRuleListResponsePtrInput interface {
	pulumi.Input

	ToCustomRuleListResponsePtrOutput() CustomRuleListResponsePtrOutput
	ToCustomRuleListResponsePtrOutputWithContext(context.Context) CustomRuleListResponsePtrOutput
}

type customRuleListResponsePtrType CustomRuleListResponseArgs

func CustomRuleListResponsePtr(v *CustomRuleListResponseArgs) CustomRuleListResponsePtrInput {
	return (*customRuleListResponsePtrType)(v)
}

func (*customRuleListResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRuleListResponse)(nil)).Elem()
}

func (i *customRuleListResponsePtrType) ToCustomRuleListResponsePtrOutput() CustomRuleListResponsePtrOutput {
	return i.ToCustomRuleListResponsePtrOutputWithContext(context.Background())
}

func (i *customRuleListResponsePtrType) ToCustomRuleListResponsePtrOutputWithContext(ctx context.Context) CustomRuleListResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleListResponsePtrOutput)
}

// Defines contents of custom rules
type CustomRuleListResponseOutput struct{ *pulumi.OutputState }

func (CustomRuleListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleListResponse)(nil)).Elem()
}

func (o CustomRuleListResponseOutput) ToCustomRuleListResponseOutput() CustomRuleListResponseOutput {
	return o
}

func (o CustomRuleListResponseOutput) ToCustomRuleListResponseOutputWithContext(ctx context.Context) CustomRuleListResponseOutput {
	return o
}

func (o CustomRuleListResponseOutput) ToCustomRuleListResponsePtrOutput() CustomRuleListResponsePtrOutput {
	return o.ToCustomRuleListResponsePtrOutputWithContext(context.Background())
}

func (o CustomRuleListResponseOutput) ToCustomRuleListResponsePtrOutputWithContext(ctx context.Context) CustomRuleListResponsePtrOutput {
	return o.ApplyT(func(v CustomRuleListResponse) *CustomRuleListResponse {
		return &v
	}).(CustomRuleListResponsePtrOutput)
}

// List of rules
func (o CustomRuleListResponseOutput) Rules() CustomRuleResponseArrayOutput {
	return o.ApplyT(func(v CustomRuleListResponse) []CustomRuleResponse { return v.Rules }).(CustomRuleResponseArrayOutput)
}

type CustomRuleListResponsePtrOutput struct{ *pulumi.OutputState }

func (CustomRuleListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomRuleListResponse)(nil)).Elem()
}

func (o CustomRuleListResponsePtrOutput) ToCustomRuleListResponsePtrOutput() CustomRuleListResponsePtrOutput {
	return o
}

func (o CustomRuleListResponsePtrOutput) ToCustomRuleListResponsePtrOutputWithContext(ctx context.Context) CustomRuleListResponsePtrOutput {
	return o
}

func (o CustomRuleListResponsePtrOutput) Elem() CustomRuleListResponseOutput {
	return o.ApplyT(func(v *CustomRuleListResponse) CustomRuleListResponse { return *v }).(CustomRuleListResponseOutput)
}

// List of rules
func (o CustomRuleListResponsePtrOutput) Rules() CustomRuleResponseArrayOutput {
	return o.ApplyT(func(v *CustomRuleListResponse) []CustomRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(CustomRuleResponseArrayOutput)
}

// Defines contents of a web application rule
type CustomRuleResponse struct {
	// Describes what action to be applied when rule matches.
	Action string `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState *string `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions []MatchConditionResponse `pulumi:"matchConditions"`
	// Describes the name of the rule.
	Name *string `pulumi:"name"`
	// Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
	Priority int `pulumi:"priority"`
	// Time window for resetting the rate limit count. Default is 1 minute.
	RateLimitDurationInMinutes *int `pulumi:"rateLimitDurationInMinutes"`
	// Number of allowed requests per client within the time window.
	RateLimitThreshold *int `pulumi:"rateLimitThreshold"`
	// Describes type of rule.
	RuleType string `pulumi:"ruleType"`
}

// CustomRuleResponseInput is an input type that accepts CustomRuleResponseArgs and CustomRuleResponseOutput values.
// You can construct a concrete instance of `CustomRuleResponseInput` via:
//
//          CustomRuleResponseArgs{...}
type CustomRuleResponseInput interface {
	pulumi.Input

	ToCustomRuleResponseOutput() CustomRuleResponseOutput
	ToCustomRuleResponseOutputWithContext(context.Context) CustomRuleResponseOutput
}

// Defines contents of a web application rule
type CustomRuleResponseArgs struct {
	// Describes what action to be applied when rule matches.
	Action pulumi.StringInput `pulumi:"action"`
	// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// List of match conditions.
	MatchConditions MatchConditionResponseArrayInput `pulumi:"matchConditions"`
	// Describes the name of the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
	Priority pulumi.IntInput `pulumi:"priority"`
	// Time window for resetting the rate limit count. Default is 1 minute.
	RateLimitDurationInMinutes pulumi.IntPtrInput `pulumi:"rateLimitDurationInMinutes"`
	// Number of allowed requests per client within the time window.
	RateLimitThreshold pulumi.IntPtrInput `pulumi:"rateLimitThreshold"`
	// Describes type of rule.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (CustomRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleResponse)(nil)).Elem()
}

func (i CustomRuleResponseArgs) ToCustomRuleResponseOutput() CustomRuleResponseOutput {
	return i.ToCustomRuleResponseOutputWithContext(context.Background())
}

func (i CustomRuleResponseArgs) ToCustomRuleResponseOutputWithContext(ctx context.Context) CustomRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleResponseOutput)
}

// CustomRuleResponseArrayInput is an input type that accepts CustomRuleResponseArray and CustomRuleResponseArrayOutput values.
// You can construct a concrete instance of `CustomRuleResponseArrayInput` via:
//
//          CustomRuleResponseArray{ CustomRuleResponseArgs{...} }
type CustomRuleResponseArrayInput interface {
	pulumi.Input

	ToCustomRuleResponseArrayOutput() CustomRuleResponseArrayOutput
	ToCustomRuleResponseArrayOutputWithContext(context.Context) CustomRuleResponseArrayOutput
}

type CustomRuleResponseArray []CustomRuleResponseInput

func (CustomRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRuleResponse)(nil)).Elem()
}

func (i CustomRuleResponseArray) ToCustomRuleResponseArrayOutput() CustomRuleResponseArrayOutput {
	return i.ToCustomRuleResponseArrayOutputWithContext(context.Background())
}

func (i CustomRuleResponseArray) ToCustomRuleResponseArrayOutputWithContext(ctx context.Context) CustomRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleResponseArrayOutput)
}

// Defines contents of a web application rule
type CustomRuleResponseOutput struct{ *pulumi.OutputState }

func (CustomRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleResponse)(nil)).Elem()
}

func (o CustomRuleResponseOutput) ToCustomRuleResponseOutput() CustomRuleResponseOutput {
	return o
}

func (o CustomRuleResponseOutput) ToCustomRuleResponseOutputWithContext(ctx context.Context) CustomRuleResponseOutput {
	return o
}

// Describes what action to be applied when rule matches.
func (o CustomRuleResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRuleResponse) string { return v.Action }).(pulumi.StringOutput)
}

// Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.
func (o CustomRuleResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRuleResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// List of match conditions.
func (o CustomRuleResponseOutput) MatchConditions() MatchConditionResponseArrayOutput {
	return o.ApplyT(func(v CustomRuleResponse) []MatchConditionResponse { return v.MatchConditions }).(MatchConditionResponseArrayOutput)
}

// Describes the name of the rule.
func (o CustomRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
func (o CustomRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v CustomRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// Time window for resetting the rate limit count. Default is 1 minute.
func (o CustomRuleResponseOutput) RateLimitDurationInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CustomRuleResponse) *int { return v.RateLimitDurationInMinutes }).(pulumi.IntPtrOutput)
}

// Number of allowed requests per client within the time window.
func (o CustomRuleResponseOutput) RateLimitThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CustomRuleResponse) *int { return v.RateLimitThreshold }).(pulumi.IntPtrOutput)
}

// Describes type of rule.
func (o CustomRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

type CustomRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (CustomRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRuleResponse)(nil)).Elem()
}

func (o CustomRuleResponseArrayOutput) ToCustomRuleResponseArrayOutput() CustomRuleResponseArrayOutput {
	return o
}

func (o CustomRuleResponseArrayOutput) ToCustomRuleResponseArrayOutputWithContext(ctx context.Context) CustomRuleResponseArrayOutput {
	return o
}

func (o CustomRuleResponseArrayOutput) Index(i pulumi.IntInput) CustomRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomRuleResponse {
		return vs[0].([]CustomRuleResponse)[vs[1].(int)]
	}).(CustomRuleResponseOutput)
}

// Contains the DDoS protection settings of the public IP.
type DdosSettings struct {
	// The DDoS custom policy associated with the public IP.
	DdosCustomPolicy *SubResource `pulumi:"ddosCustomPolicy"`
	// Enables DDoS protection on the public IP.
	ProtectedIP *bool `pulumi:"protectedIP"`
	// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
	ProtectionCoverage *string `pulumi:"protectionCoverage"`
}

// DdosSettingsInput is an input type that accepts DdosSettingsArgs and DdosSettingsOutput values.
// You can construct a concrete instance of `DdosSettingsInput` via:
//
//          DdosSettingsArgs{...}
type DdosSettingsInput interface {
	pulumi.Input

	ToDdosSettingsOutput() DdosSettingsOutput
	ToDdosSettingsOutputWithContext(context.Context) DdosSettingsOutput
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsArgs struct {
	// The DDoS custom policy associated with the public IP.
	DdosCustomPolicy SubResourcePtrInput `pulumi:"ddosCustomPolicy"`
	// Enables DDoS protection on the public IP.
	ProtectedIP pulumi.BoolPtrInput `pulumi:"protectedIP"`
	// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
	ProtectionCoverage pulumi.StringPtrInput `pulumi:"protectionCoverage"`
}

func (DdosSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosSettings)(nil)).Elem()
}

func (i DdosSettingsArgs) ToDdosSettingsOutput() DdosSettingsOutput {
	return i.ToDdosSettingsOutputWithContext(context.Background())
}

func (i DdosSettingsArgs) ToDdosSettingsOutputWithContext(ctx context.Context) DdosSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosSettingsOutput)
}

func (i DdosSettingsArgs) ToDdosSettingsPtrOutput() DdosSettingsPtrOutput {
	return i.ToDdosSettingsPtrOutputWithContext(context.Background())
}

func (i DdosSettingsArgs) ToDdosSettingsPtrOutputWithContext(ctx context.Context) DdosSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosSettingsOutput).ToDdosSettingsPtrOutputWithContext(ctx)
}

// DdosSettingsPtrInput is an input type that accepts DdosSettingsArgs, DdosSettingsPtr and DdosSettingsPtrOutput values.
// You can construct a concrete instance of `DdosSettingsPtrInput` via:
//
//          DdosSettingsArgs{...}
//
//  or:
//
//          nil
type DdosSettingsPtrInput interface {
	pulumi.Input

	ToDdosSettingsPtrOutput() DdosSettingsPtrOutput
	ToDdosSettingsPtrOutputWithContext(context.Context) DdosSettingsPtrOutput
}

type ddosSettingsPtrType DdosSettingsArgs

func DdosSettingsPtr(v *DdosSettingsArgs) DdosSettingsPtrInput {
	return (*ddosSettingsPtrType)(v)
}

func (*ddosSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosSettings)(nil)).Elem()
}

func (i *ddosSettingsPtrType) ToDdosSettingsPtrOutput() DdosSettingsPtrOutput {
	return i.ToDdosSettingsPtrOutputWithContext(context.Background())
}

func (i *ddosSettingsPtrType) ToDdosSettingsPtrOutputWithContext(ctx context.Context) DdosSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosSettingsPtrOutput)
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsOutput struct{ *pulumi.OutputState }

func (DdosSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosSettings)(nil)).Elem()
}

func (o DdosSettingsOutput) ToDdosSettingsOutput() DdosSettingsOutput {
	return o
}

func (o DdosSettingsOutput) ToDdosSettingsOutputWithContext(ctx context.Context) DdosSettingsOutput {
	return o
}

func (o DdosSettingsOutput) ToDdosSettingsPtrOutput() DdosSettingsPtrOutput {
	return o.ToDdosSettingsPtrOutputWithContext(context.Background())
}

func (o DdosSettingsOutput) ToDdosSettingsPtrOutputWithContext(ctx context.Context) DdosSettingsPtrOutput {
	return o.ApplyT(func(v DdosSettings) *DdosSettings {
		return &v
	}).(DdosSettingsPtrOutput)
}

// The DDoS custom policy associated with the public IP.
func (o DdosSettingsOutput) DdosCustomPolicy() SubResourcePtrOutput {
	return o.ApplyT(func(v DdosSettings) *SubResource { return v.DdosCustomPolicy }).(SubResourcePtrOutput)
}

// Enables DDoS protection on the public IP.
func (o DdosSettingsOutput) ProtectedIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DdosSettings) *bool { return v.ProtectedIP }).(pulumi.BoolPtrOutput)
}

// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
func (o DdosSettingsOutput) ProtectionCoverage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosSettings) *string { return v.ProtectionCoverage }).(pulumi.StringPtrOutput)
}

type DdosSettingsPtrOutput struct{ *pulumi.OutputState }

func (DdosSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosSettings)(nil)).Elem()
}

func (o DdosSettingsPtrOutput) ToDdosSettingsPtrOutput() DdosSettingsPtrOutput {
	return o
}

func (o DdosSettingsPtrOutput) ToDdosSettingsPtrOutputWithContext(ctx context.Context) DdosSettingsPtrOutput {
	return o
}

func (o DdosSettingsPtrOutput) Elem() DdosSettingsOutput {
	return o.ApplyT(func(v *DdosSettings) DdosSettings { return *v }).(DdosSettingsOutput)
}

// The DDoS custom policy associated with the public IP.
func (o DdosSettingsPtrOutput) DdosCustomPolicy() SubResourcePtrOutput {
	return o.ApplyT(func(v *DdosSettings) *SubResource {
		if v == nil {
			return nil
		}
		return v.DdosCustomPolicy
	}).(SubResourcePtrOutput)
}

// Enables DDoS protection on the public IP.
func (o DdosSettingsPtrOutput) ProtectedIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DdosSettings) *bool {
		if v == nil {
			return nil
		}
		return v.ProtectedIP
	}).(pulumi.BoolPtrOutput)
}

// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
func (o DdosSettingsPtrOutput) ProtectionCoverage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdosSettings) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionCoverage
	}).(pulumi.StringPtrOutput)
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsResponse struct {
	// The DDoS custom policy associated with the public IP.
	DdosCustomPolicy *SubResourceResponse `pulumi:"ddosCustomPolicy"`
	// Enables DDoS protection on the public IP.
	ProtectedIP *bool `pulumi:"protectedIP"`
	// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
	ProtectionCoverage *string `pulumi:"protectionCoverage"`
}

// DdosSettingsResponseInput is an input type that accepts DdosSettingsResponseArgs and DdosSettingsResponseOutput values.
// You can construct a concrete instance of `DdosSettingsResponseInput` via:
//
//          DdosSettingsResponseArgs{...}
type DdosSettingsResponseInput interface {
	pulumi.Input

	ToDdosSettingsResponseOutput() DdosSettingsResponseOutput
	ToDdosSettingsResponseOutputWithContext(context.Context) DdosSettingsResponseOutput
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsResponseArgs struct {
	// The DDoS custom policy associated with the public IP.
	DdosCustomPolicy SubResourceResponsePtrInput `pulumi:"ddosCustomPolicy"`
	// Enables DDoS protection on the public IP.
	ProtectedIP pulumi.BoolPtrInput `pulumi:"protectedIP"`
	// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
	ProtectionCoverage pulumi.StringPtrInput `pulumi:"protectionCoverage"`
}

func (DdosSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosSettingsResponse)(nil)).Elem()
}

func (i DdosSettingsResponseArgs) ToDdosSettingsResponseOutput() DdosSettingsResponseOutput {
	return i.ToDdosSettingsResponseOutputWithContext(context.Background())
}

func (i DdosSettingsResponseArgs) ToDdosSettingsResponseOutputWithContext(ctx context.Context) DdosSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosSettingsResponseOutput)
}

func (i DdosSettingsResponseArgs) ToDdosSettingsResponsePtrOutput() DdosSettingsResponsePtrOutput {
	return i.ToDdosSettingsResponsePtrOutputWithContext(context.Background())
}

func (i DdosSettingsResponseArgs) ToDdosSettingsResponsePtrOutputWithContext(ctx context.Context) DdosSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosSettingsResponseOutput).ToDdosSettingsResponsePtrOutputWithContext(ctx)
}

// DdosSettingsResponsePtrInput is an input type that accepts DdosSettingsResponseArgs, DdosSettingsResponsePtr and DdosSettingsResponsePtrOutput values.
// You can construct a concrete instance of `DdosSettingsResponsePtrInput` via:
//
//          DdosSettingsResponseArgs{...}
//
//  or:
//
//          nil
type DdosSettingsResponsePtrInput interface {
	pulumi.Input

	ToDdosSettingsResponsePtrOutput() DdosSettingsResponsePtrOutput
	ToDdosSettingsResponsePtrOutputWithContext(context.Context) DdosSettingsResponsePtrOutput
}

type ddosSettingsResponsePtrType DdosSettingsResponseArgs

func DdosSettingsResponsePtr(v *DdosSettingsResponseArgs) DdosSettingsResponsePtrInput {
	return (*ddosSettingsResponsePtrType)(v)
}

func (*ddosSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosSettingsResponse)(nil)).Elem()
}

func (i *ddosSettingsResponsePtrType) ToDdosSettingsResponsePtrOutput() DdosSettingsResponsePtrOutput {
	return i.ToDdosSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *ddosSettingsResponsePtrType) ToDdosSettingsResponsePtrOutputWithContext(ctx context.Context) DdosSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DdosSettingsResponsePtrOutput)
}

// Contains the DDoS protection settings of the public IP.
type DdosSettingsResponseOutput struct{ *pulumi.OutputState }

func (DdosSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DdosSettingsResponse)(nil)).Elem()
}

func (o DdosSettingsResponseOutput) ToDdosSettingsResponseOutput() DdosSettingsResponseOutput {
	return o
}

func (o DdosSettingsResponseOutput) ToDdosSettingsResponseOutputWithContext(ctx context.Context) DdosSettingsResponseOutput {
	return o
}

func (o DdosSettingsResponseOutput) ToDdosSettingsResponsePtrOutput() DdosSettingsResponsePtrOutput {
	return o.ToDdosSettingsResponsePtrOutputWithContext(context.Background())
}

func (o DdosSettingsResponseOutput) ToDdosSettingsResponsePtrOutputWithContext(ctx context.Context) DdosSettingsResponsePtrOutput {
	return o.ApplyT(func(v DdosSettingsResponse) *DdosSettingsResponse {
		return &v
	}).(DdosSettingsResponsePtrOutput)
}

// The DDoS custom policy associated with the public IP.
func (o DdosSettingsResponseOutput) DdosCustomPolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v DdosSettingsResponse) *SubResourceResponse { return v.DdosCustomPolicy }).(SubResourceResponsePtrOutput)
}

// Enables DDoS protection on the public IP.
func (o DdosSettingsResponseOutput) ProtectedIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DdosSettingsResponse) *bool { return v.ProtectedIP }).(pulumi.BoolPtrOutput)
}

// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
func (o DdosSettingsResponseOutput) ProtectionCoverage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DdosSettingsResponse) *string { return v.ProtectionCoverage }).(pulumi.StringPtrOutput)
}

type DdosSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DdosSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DdosSettingsResponse)(nil)).Elem()
}

func (o DdosSettingsResponsePtrOutput) ToDdosSettingsResponsePtrOutput() DdosSettingsResponsePtrOutput {
	return o
}

func (o DdosSettingsResponsePtrOutput) ToDdosSettingsResponsePtrOutputWithContext(ctx context.Context) DdosSettingsResponsePtrOutput {
	return o
}

func (o DdosSettingsResponsePtrOutput) Elem() DdosSettingsResponseOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) DdosSettingsResponse { return *v }).(DdosSettingsResponseOutput)
}

// The DDoS custom policy associated with the public IP.
func (o DdosSettingsResponsePtrOutput) DdosCustomPolicy() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.DdosCustomPolicy
	}).(SubResourceResponsePtrOutput)
}

// Enables DDoS protection on the public IP.
func (o DdosSettingsResponsePtrOutput) ProtectedIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ProtectedIP
	}).(pulumi.BoolPtrOutput)
}

// The DDoS protection policy customizability of the public IP. Only standard coverage will have the ability to be customized.
func (o DdosSettingsResponsePtrOutput) ProtectionCoverage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DdosSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionCoverage
	}).(pulumi.StringPtrOutput)
}

// Details the service to which the subnet is delegated.
type Delegation struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
	ServiceName *string `pulumi:"serviceName"`
}

// DelegationInput is an input type that accepts DelegationArgs and DelegationOutput values.
// You can construct a concrete instance of `DelegationInput` via:
//
//          DelegationArgs{...}
type DelegationInput interface {
	pulumi.Input

	ToDelegationOutput() DelegationOutput
	ToDelegationOutputWithContext(context.Context) DelegationOutput
}

// Details the service to which the subnet is delegated.
type DelegationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (DelegationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Delegation)(nil)).Elem()
}

func (i DelegationArgs) ToDelegationOutput() DelegationOutput {
	return i.ToDelegationOutputWithContext(context.Background())
}

func (i DelegationArgs) ToDelegationOutputWithContext(ctx context.Context) DelegationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegationOutput)
}

// DelegationArrayInput is an input type that accepts DelegationArray and DelegationArrayOutput values.
// You can construct a concrete instance of `DelegationArrayInput` via:
//
//          DelegationArray{ DelegationArgs{...} }
type DelegationArrayInput interface {
	pulumi.Input

	ToDelegationArrayOutput() DelegationArrayOutput
	ToDelegationArrayOutputWithContext(context.Context) DelegationArrayOutput
}

type DelegationArray []DelegationInput

func (DelegationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Delegation)(nil)).Elem()
}

func (i DelegationArray) ToDelegationArrayOutput() DelegationArrayOutput {
	return i.ToDelegationArrayOutputWithContext(context.Background())
}

func (i DelegationArray) ToDelegationArrayOutputWithContext(ctx context.Context) DelegationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegationArrayOutput)
}

// Details the service to which the subnet is delegated.
type DelegationOutput struct{ *pulumi.OutputState }

func (DelegationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Delegation)(nil)).Elem()
}

func (o DelegationOutput) ToDelegationOutput() DelegationOutput {
	return o
}

func (o DelegationOutput) ToDelegationOutputWithContext(ctx context.Context) DelegationOutput {
	return o
}

// Resource ID.
func (o DelegationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Delegation) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a subnet. This name can be used to access the resource.
func (o DelegationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Delegation) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
func (o DelegationOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Delegation) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type DelegationArrayOutput struct{ *pulumi.OutputState }

func (DelegationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Delegation)(nil)).Elem()
}

func (o DelegationArrayOutput) ToDelegationArrayOutput() DelegationArrayOutput {
	return o
}

func (o DelegationArrayOutput) ToDelegationArrayOutputWithContext(ctx context.Context) DelegationArrayOutput {
	return o
}

func (o DelegationArrayOutput) Index(i pulumi.IntInput) DelegationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Delegation {
		return vs[0].([]Delegation)[vs[1].(int)]
	}).(DelegationOutput)
}

// Details the service to which the subnet is delegated.
type DelegationResponse struct {
	// The actions permitted to the service upon delegation.
	Actions []string `pulumi:"actions"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the service delegation resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
	ServiceName *string `pulumi:"serviceName"`
}

// DelegationResponseInput is an input type that accepts DelegationResponseArgs and DelegationResponseOutput values.
// You can construct a concrete instance of `DelegationResponseInput` via:
//
//          DelegationResponseArgs{...}
type DelegationResponseInput interface {
	pulumi.Input

	ToDelegationResponseOutput() DelegationResponseOutput
	ToDelegationResponseOutputWithContext(context.Context) DelegationResponseOutput
}

// Details the service to which the subnet is delegated.
type DelegationResponseArgs struct {
	// The actions permitted to the service upon delegation.
	Actions pulumi.StringArrayInput `pulumi:"actions"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a subnet. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the service delegation resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (DelegationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DelegationResponse)(nil)).Elem()
}

func (i DelegationResponseArgs) ToDelegationResponseOutput() DelegationResponseOutput {
	return i.ToDelegationResponseOutputWithContext(context.Background())
}

func (i DelegationResponseArgs) ToDelegationResponseOutputWithContext(ctx context.Context) DelegationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegationResponseOutput)
}

// DelegationResponseArrayInput is an input type that accepts DelegationResponseArray and DelegationResponseArrayOutput values.
// You can construct a concrete instance of `DelegationResponseArrayInput` via:
//
//          DelegationResponseArray{ DelegationResponseArgs{...} }
type DelegationResponseArrayInput interface {
	pulumi.Input

	ToDelegationResponseArrayOutput() DelegationResponseArrayOutput
	ToDelegationResponseArrayOutputWithContext(context.Context) DelegationResponseArrayOutput
}

type DelegationResponseArray []DelegationResponseInput

func (DelegationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DelegationResponse)(nil)).Elem()
}

func (i DelegationResponseArray) ToDelegationResponseArrayOutput() DelegationResponseArrayOutput {
	return i.ToDelegationResponseArrayOutputWithContext(context.Background())
}

func (i DelegationResponseArray) ToDelegationResponseArrayOutputWithContext(ctx context.Context) DelegationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DelegationResponseArrayOutput)
}

// Details the service to which the subnet is delegated.
type DelegationResponseOutput struct{ *pulumi.OutputState }

func (DelegationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DelegationResponse)(nil)).Elem()
}

func (o DelegationResponseOutput) ToDelegationResponseOutput() DelegationResponseOutput {
	return o
}

func (o DelegationResponseOutput) ToDelegationResponseOutputWithContext(ctx context.Context) DelegationResponseOutput {
	return o
}

// The actions permitted to the service upon delegation.
func (o DelegationResponseOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DelegationResponse) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o DelegationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v DelegationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o DelegationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DelegationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a subnet. This name can be used to access the resource.
func (o DelegationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DelegationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the service delegation resource.
func (o DelegationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v DelegationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
func (o DelegationResponseOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DelegationResponse) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type DelegationResponseArrayOutput struct{ *pulumi.OutputState }

func (DelegationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DelegationResponse)(nil)).Elem()
}

func (o DelegationResponseArrayOutput) ToDelegationResponseArrayOutput() DelegationResponseArrayOutput {
	return o
}

func (o DelegationResponseArrayOutput) ToDelegationResponseArrayOutputWithContext(ctx context.Context) DelegationResponseArrayOutput {
	return o
}

func (o DelegationResponseArrayOutput) Index(i pulumi.IntInput) DelegationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DelegationResponse {
		return vs[0].([]DelegationResponse)[vs[1].(int)]
	}).(DelegationResponseOutput)
}

// List of properties of the device.
type DeviceProperties struct {
	// Model of the device.
	DeviceModel *string `pulumi:"deviceModel"`
	// Name of the device Vendor.
	DeviceVendor *string `pulumi:"deviceVendor"`
	// Link speed.
	LinkSpeedInMbps *int `pulumi:"linkSpeedInMbps"`
}

// DevicePropertiesInput is an input type that accepts DevicePropertiesArgs and DevicePropertiesOutput values.
// You can construct a concrete instance of `DevicePropertiesInput` via:
//
//          DevicePropertiesArgs{...}
type DevicePropertiesInput interface {
	pulumi.Input

	ToDevicePropertiesOutput() DevicePropertiesOutput
	ToDevicePropertiesOutputWithContext(context.Context) DevicePropertiesOutput
}

// List of properties of the device.
type DevicePropertiesArgs struct {
	// Model of the device.
	DeviceModel pulumi.StringPtrInput `pulumi:"deviceModel"`
	// Name of the device Vendor.
	DeviceVendor pulumi.StringPtrInput `pulumi:"deviceVendor"`
	// Link speed.
	LinkSpeedInMbps pulumi.IntPtrInput `pulumi:"linkSpeedInMbps"`
}

func (DevicePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceProperties)(nil)).Elem()
}

func (i DevicePropertiesArgs) ToDevicePropertiesOutput() DevicePropertiesOutput {
	return i.ToDevicePropertiesOutputWithContext(context.Background())
}

func (i DevicePropertiesArgs) ToDevicePropertiesOutputWithContext(ctx context.Context) DevicePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesOutput)
}

func (i DevicePropertiesArgs) ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput {
	return i.ToDevicePropertiesPtrOutputWithContext(context.Background())
}

func (i DevicePropertiesArgs) ToDevicePropertiesPtrOutputWithContext(ctx context.Context) DevicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesOutput).ToDevicePropertiesPtrOutputWithContext(ctx)
}

// DevicePropertiesPtrInput is an input type that accepts DevicePropertiesArgs, DevicePropertiesPtr and DevicePropertiesPtrOutput values.
// You can construct a concrete instance of `DevicePropertiesPtrInput` via:
//
//          DevicePropertiesArgs{...}
//
//  or:
//
//          nil
type DevicePropertiesPtrInput interface {
	pulumi.Input

	ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput
	ToDevicePropertiesPtrOutputWithContext(context.Context) DevicePropertiesPtrOutput
}

type devicePropertiesPtrType DevicePropertiesArgs

func DevicePropertiesPtr(v *DevicePropertiesArgs) DevicePropertiesPtrInput {
	return (*devicePropertiesPtrType)(v)
}

func (*devicePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceProperties)(nil)).Elem()
}

func (i *devicePropertiesPtrType) ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput {
	return i.ToDevicePropertiesPtrOutputWithContext(context.Background())
}

func (i *devicePropertiesPtrType) ToDevicePropertiesPtrOutputWithContext(ctx context.Context) DevicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesPtrOutput)
}

// List of properties of the device.
type DevicePropertiesOutput struct{ *pulumi.OutputState }

func (DevicePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceProperties)(nil)).Elem()
}

func (o DevicePropertiesOutput) ToDevicePropertiesOutput() DevicePropertiesOutput {
	return o
}

func (o DevicePropertiesOutput) ToDevicePropertiesOutputWithContext(ctx context.Context) DevicePropertiesOutput {
	return o
}

func (o DevicePropertiesOutput) ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput {
	return o.ToDevicePropertiesPtrOutputWithContext(context.Background())
}

func (o DevicePropertiesOutput) ToDevicePropertiesPtrOutputWithContext(ctx context.Context) DevicePropertiesPtrOutput {
	return o.ApplyT(func(v DeviceProperties) *DeviceProperties {
		return &v
	}).(DevicePropertiesPtrOutput)
}

// Model of the device.
func (o DevicePropertiesOutput) DeviceModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceProperties) *string { return v.DeviceModel }).(pulumi.StringPtrOutput)
}

// Name of the device Vendor.
func (o DevicePropertiesOutput) DeviceVendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceProperties) *string { return v.DeviceVendor }).(pulumi.StringPtrOutput)
}

// Link speed.
func (o DevicePropertiesOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeviceProperties) *int { return v.LinkSpeedInMbps }).(pulumi.IntPtrOutput)
}

type DevicePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DevicePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceProperties)(nil)).Elem()
}

func (o DevicePropertiesPtrOutput) ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput {
	return o
}

func (o DevicePropertiesPtrOutput) ToDevicePropertiesPtrOutputWithContext(ctx context.Context) DevicePropertiesPtrOutput {
	return o
}

func (o DevicePropertiesPtrOutput) Elem() DevicePropertiesOutput {
	return o.ApplyT(func(v *DeviceProperties) DeviceProperties { return *v }).(DevicePropertiesOutput)
}

// Model of the device.
func (o DevicePropertiesPtrOutput) DeviceModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeviceModel
	}).(pulumi.StringPtrOutput)
}

// Name of the device Vendor.
func (o DevicePropertiesPtrOutput) DeviceVendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeviceVendor
	}).(pulumi.StringPtrOutput)
}

// Link speed.
func (o DevicePropertiesPtrOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeviceProperties) *int {
		if v == nil {
			return nil
		}
		return v.LinkSpeedInMbps
	}).(pulumi.IntPtrOutput)
}

// List of properties of the device.
type DevicePropertiesResponse struct {
	// Model of the device.
	DeviceModel *string `pulumi:"deviceModel"`
	// Name of the device Vendor.
	DeviceVendor *string `pulumi:"deviceVendor"`
	// Link speed.
	LinkSpeedInMbps *int `pulumi:"linkSpeedInMbps"`
}

// DevicePropertiesResponseInput is an input type that accepts DevicePropertiesResponseArgs and DevicePropertiesResponseOutput values.
// You can construct a concrete instance of `DevicePropertiesResponseInput` via:
//
//          DevicePropertiesResponseArgs{...}
type DevicePropertiesResponseInput interface {
	pulumi.Input

	ToDevicePropertiesResponseOutput() DevicePropertiesResponseOutput
	ToDevicePropertiesResponseOutputWithContext(context.Context) DevicePropertiesResponseOutput
}

// List of properties of the device.
type DevicePropertiesResponseArgs struct {
	// Model of the device.
	DeviceModel pulumi.StringPtrInput `pulumi:"deviceModel"`
	// Name of the device Vendor.
	DeviceVendor pulumi.StringPtrInput `pulumi:"deviceVendor"`
	// Link speed.
	LinkSpeedInMbps pulumi.IntPtrInput `pulumi:"linkSpeedInMbps"`
}

func (DevicePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePropertiesResponse)(nil)).Elem()
}

func (i DevicePropertiesResponseArgs) ToDevicePropertiesResponseOutput() DevicePropertiesResponseOutput {
	return i.ToDevicePropertiesResponseOutputWithContext(context.Background())
}

func (i DevicePropertiesResponseArgs) ToDevicePropertiesResponseOutputWithContext(ctx context.Context) DevicePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesResponseOutput)
}

func (i DevicePropertiesResponseArgs) ToDevicePropertiesResponsePtrOutput() DevicePropertiesResponsePtrOutput {
	return i.ToDevicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i DevicePropertiesResponseArgs) ToDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) DevicePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesResponseOutput).ToDevicePropertiesResponsePtrOutputWithContext(ctx)
}

// DevicePropertiesResponsePtrInput is an input type that accepts DevicePropertiesResponseArgs, DevicePropertiesResponsePtr and DevicePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `DevicePropertiesResponsePtrInput` via:
//
//          DevicePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type DevicePropertiesResponsePtrInput interface {
	pulumi.Input

	ToDevicePropertiesResponsePtrOutput() DevicePropertiesResponsePtrOutput
	ToDevicePropertiesResponsePtrOutputWithContext(context.Context) DevicePropertiesResponsePtrOutput
}

type devicePropertiesResponsePtrType DevicePropertiesResponseArgs

func DevicePropertiesResponsePtr(v *DevicePropertiesResponseArgs) DevicePropertiesResponsePtrInput {
	return (*devicePropertiesResponsePtrType)(v)
}

func (*devicePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DevicePropertiesResponse)(nil)).Elem()
}

func (i *devicePropertiesResponsePtrType) ToDevicePropertiesResponsePtrOutput() DevicePropertiesResponsePtrOutput {
	return i.ToDevicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *devicePropertiesResponsePtrType) ToDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) DevicePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesResponsePtrOutput)
}

// List of properties of the device.
type DevicePropertiesResponseOutput struct{ *pulumi.OutputState }

func (DevicePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePropertiesResponse)(nil)).Elem()
}

func (o DevicePropertiesResponseOutput) ToDevicePropertiesResponseOutput() DevicePropertiesResponseOutput {
	return o
}

func (o DevicePropertiesResponseOutput) ToDevicePropertiesResponseOutputWithContext(ctx context.Context) DevicePropertiesResponseOutput {
	return o
}

func (o DevicePropertiesResponseOutput) ToDevicePropertiesResponsePtrOutput() DevicePropertiesResponsePtrOutput {
	return o.ToDevicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o DevicePropertiesResponseOutput) ToDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) DevicePropertiesResponsePtrOutput {
	return o.ApplyT(func(v DevicePropertiesResponse) *DevicePropertiesResponse {
		return &v
	}).(DevicePropertiesResponsePtrOutput)
}

// Model of the device.
func (o DevicePropertiesResponseOutput) DeviceModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePropertiesResponse) *string { return v.DeviceModel }).(pulumi.StringPtrOutput)
}

// Name of the device Vendor.
func (o DevicePropertiesResponseOutput) DeviceVendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePropertiesResponse) *string { return v.DeviceVendor }).(pulumi.StringPtrOutput)
}

// Link speed.
func (o DevicePropertiesResponseOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DevicePropertiesResponse) *int { return v.LinkSpeedInMbps }).(pulumi.IntPtrOutput)
}

type DevicePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DevicePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevicePropertiesResponse)(nil)).Elem()
}

func (o DevicePropertiesResponsePtrOutput) ToDevicePropertiesResponsePtrOutput() DevicePropertiesResponsePtrOutput {
	return o
}

func (o DevicePropertiesResponsePtrOutput) ToDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) DevicePropertiesResponsePtrOutput {
	return o
}

func (o DevicePropertiesResponsePtrOutput) Elem() DevicePropertiesResponseOutput {
	return o.ApplyT(func(v *DevicePropertiesResponse) DevicePropertiesResponse { return *v }).(DevicePropertiesResponseOutput)
}

// Model of the device.
func (o DevicePropertiesResponsePtrOutput) DeviceModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeviceModel
	}).(pulumi.StringPtrOutput)
}

// Name of the device Vendor.
func (o DevicePropertiesResponsePtrOutput) DeviceVendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeviceVendor
	}).(pulumi.StringPtrOutput)
}

// Link speed.
func (o DevicePropertiesResponsePtrOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DevicePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.LinkSpeedInMbps
	}).(pulumi.IntPtrOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptions struct {
	// The list of DNS servers IP addresses.
	DnsServers []string `pulumi:"dnsServers"`
}

// DhcpOptionsInput is an input type that accepts DhcpOptionsArgs and DhcpOptionsOutput values.
// You can construct a concrete instance of `DhcpOptionsInput` via:
//
//          DhcpOptionsArgs{...}
type DhcpOptionsInput interface {
	pulumi.Input

	ToDhcpOptionsOutput() DhcpOptionsOutput
	ToDhcpOptionsOutputWithContext(context.Context) DhcpOptionsOutput
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsArgs struct {
	// The list of DNS servers IP addresses.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
}

func (DhcpOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptions)(nil)).Elem()
}

func (i DhcpOptionsArgs) ToDhcpOptionsOutput() DhcpOptionsOutput {
	return i.ToDhcpOptionsOutputWithContext(context.Background())
}

func (i DhcpOptionsArgs) ToDhcpOptionsOutputWithContext(ctx context.Context) DhcpOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsOutput)
}

func (i DhcpOptionsArgs) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return i.ToDhcpOptionsPtrOutputWithContext(context.Background())
}

func (i DhcpOptionsArgs) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsOutput).ToDhcpOptionsPtrOutputWithContext(ctx)
}

// DhcpOptionsPtrInput is an input type that accepts DhcpOptionsArgs, DhcpOptionsPtr and DhcpOptionsPtrOutput values.
// You can construct a concrete instance of `DhcpOptionsPtrInput` via:
//
//          DhcpOptionsArgs{...}
//
//  or:
//
//          nil
type DhcpOptionsPtrInput interface {
	pulumi.Input

	ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput
	ToDhcpOptionsPtrOutputWithContext(context.Context) DhcpOptionsPtrOutput
}

type dhcpOptionsPtrType DhcpOptionsArgs

func DhcpOptionsPtr(v *DhcpOptionsArgs) DhcpOptionsPtrInput {
	return (*dhcpOptionsPtrType)(v)
}

func (*dhcpOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOptions)(nil)).Elem()
}

func (i *dhcpOptionsPtrType) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return i.ToDhcpOptionsPtrOutputWithContext(context.Background())
}

func (i *dhcpOptionsPtrType) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsPtrOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsOutput struct{ *pulumi.OutputState }

func (DhcpOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptions)(nil)).Elem()
}

func (o DhcpOptionsOutput) ToDhcpOptionsOutput() DhcpOptionsOutput {
	return o
}

func (o DhcpOptionsOutput) ToDhcpOptionsOutputWithContext(ctx context.Context) DhcpOptionsOutput {
	return o
}

func (o DhcpOptionsOutput) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return o.ToDhcpOptionsPtrOutputWithContext(context.Background())
}

func (o DhcpOptionsOutput) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return o.ApplyT(func(v DhcpOptions) *DhcpOptions {
		return &v
	}).(DhcpOptionsPtrOutput)
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DhcpOptions) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

type DhcpOptionsPtrOutput struct{ *pulumi.OutputState }

func (DhcpOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOptions)(nil)).Elem()
}

func (o DhcpOptionsPtrOutput) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return o
}

func (o DhcpOptionsPtrOutput) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return o
}

func (o DhcpOptionsPtrOutput) Elem() DhcpOptionsOutput {
	return o.ApplyT(func(v *DhcpOptions) DhcpOptions { return *v }).(DhcpOptionsOutput)
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DhcpOptions) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsResponse struct {
	// The list of DNS servers IP addresses.
	DnsServers []string `pulumi:"dnsServers"`
}

// DhcpOptionsResponseInput is an input type that accepts DhcpOptionsResponseArgs and DhcpOptionsResponseOutput values.
// You can construct a concrete instance of `DhcpOptionsResponseInput` via:
//
//          DhcpOptionsResponseArgs{...}
type DhcpOptionsResponseInput interface {
	pulumi.Input

	ToDhcpOptionsResponseOutput() DhcpOptionsResponseOutput
	ToDhcpOptionsResponseOutputWithContext(context.Context) DhcpOptionsResponseOutput
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsResponseArgs struct {
	// The list of DNS servers IP addresses.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
}

func (DhcpOptionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptionsResponse)(nil)).Elem()
}

func (i DhcpOptionsResponseArgs) ToDhcpOptionsResponseOutput() DhcpOptionsResponseOutput {
	return i.ToDhcpOptionsResponseOutputWithContext(context.Background())
}

func (i DhcpOptionsResponseArgs) ToDhcpOptionsResponseOutputWithContext(ctx context.Context) DhcpOptionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsResponseOutput)
}

func (i DhcpOptionsResponseArgs) ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput {
	return i.ToDhcpOptionsResponsePtrOutputWithContext(context.Background())
}

func (i DhcpOptionsResponseArgs) ToDhcpOptionsResponsePtrOutputWithContext(ctx context.Context) DhcpOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsResponseOutput).ToDhcpOptionsResponsePtrOutputWithContext(ctx)
}

// DhcpOptionsResponsePtrInput is an input type that accepts DhcpOptionsResponseArgs, DhcpOptionsResponsePtr and DhcpOptionsResponsePtrOutput values.
// You can construct a concrete instance of `DhcpOptionsResponsePtrInput` via:
//
//          DhcpOptionsResponseArgs{...}
//
//  or:
//
//          nil
type DhcpOptionsResponsePtrInput interface {
	pulumi.Input

	ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput
	ToDhcpOptionsResponsePtrOutputWithContext(context.Context) DhcpOptionsResponsePtrOutput
}

type dhcpOptionsResponsePtrType DhcpOptionsResponseArgs

func DhcpOptionsResponsePtr(v *DhcpOptionsResponseArgs) DhcpOptionsResponsePtrInput {
	return (*dhcpOptionsResponsePtrType)(v)
}

func (*dhcpOptionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOptionsResponse)(nil)).Elem()
}

func (i *dhcpOptionsResponsePtrType) ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput {
	return i.ToDhcpOptionsResponsePtrOutputWithContext(context.Background())
}

func (i *dhcpOptionsResponsePtrType) ToDhcpOptionsResponsePtrOutputWithContext(ctx context.Context) DhcpOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsResponsePtrOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsResponseOutput struct{ *pulumi.OutputState }

func (DhcpOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptionsResponse)(nil)).Elem()
}

func (o DhcpOptionsResponseOutput) ToDhcpOptionsResponseOutput() DhcpOptionsResponseOutput {
	return o
}

func (o DhcpOptionsResponseOutput) ToDhcpOptionsResponseOutputWithContext(ctx context.Context) DhcpOptionsResponseOutput {
	return o
}

func (o DhcpOptionsResponseOutput) ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput {
	return o.ToDhcpOptionsResponsePtrOutputWithContext(context.Background())
}

func (o DhcpOptionsResponseOutput) ToDhcpOptionsResponsePtrOutputWithContext(ctx context.Context) DhcpOptionsResponsePtrOutput {
	return o.ApplyT(func(v DhcpOptionsResponse) *DhcpOptionsResponse {
		return &v
	}).(DhcpOptionsResponsePtrOutput)
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DhcpOptionsResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

type DhcpOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (DhcpOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOptionsResponse)(nil)).Elem()
}

func (o DhcpOptionsResponsePtrOutput) ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput {
	return o
}

func (o DhcpOptionsResponsePtrOutput) ToDhcpOptionsResponsePtrOutputWithContext(ctx context.Context) DhcpOptionsResponsePtrOutput {
	return o
}

func (o DhcpOptionsResponsePtrOutput) Elem() DhcpOptionsResponseOutput {
	return o.ApplyT(func(v *DhcpOptionsResponse) DhcpOptionsResponse { return *v }).(DhcpOptionsResponseOutput)
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsResponsePtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DhcpOptionsResponse) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Class containing DNS settings in a Traffic Manager profile.
type DnsConfig struct {
	// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
	RelativeName *string `pulumi:"relativeName"`
	// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
	Ttl *int `pulumi:"ttl"`
}

// DnsConfigInput is an input type that accepts DnsConfigArgs and DnsConfigOutput values.
// You can construct a concrete instance of `DnsConfigInput` via:
//
//          DnsConfigArgs{...}
type DnsConfigInput interface {
	pulumi.Input

	ToDnsConfigOutput() DnsConfigOutput
	ToDnsConfigOutputWithContext(context.Context) DnsConfigOutput
}

// Class containing DNS settings in a Traffic Manager profile.
type DnsConfigArgs struct {
	// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
	RelativeName pulumi.StringPtrInput `pulumi:"relativeName"`
	// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
	Ttl pulumi.IntPtrInput `pulumi:"ttl"`
}

func (DnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsConfig)(nil)).Elem()
}

func (i DnsConfigArgs) ToDnsConfigOutput() DnsConfigOutput {
	return i.ToDnsConfigOutputWithContext(context.Background())
}

func (i DnsConfigArgs) ToDnsConfigOutputWithContext(ctx context.Context) DnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsConfigOutput)
}

func (i DnsConfigArgs) ToDnsConfigPtrOutput() DnsConfigPtrOutput {
	return i.ToDnsConfigPtrOutputWithContext(context.Background())
}

func (i DnsConfigArgs) ToDnsConfigPtrOutputWithContext(ctx context.Context) DnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsConfigOutput).ToDnsConfigPtrOutputWithContext(ctx)
}

// DnsConfigPtrInput is an input type that accepts DnsConfigArgs, DnsConfigPtr and DnsConfigPtrOutput values.
// You can construct a concrete instance of `DnsConfigPtrInput` via:
//
//          DnsConfigArgs{...}
//
//  or:
//
//          nil
type DnsConfigPtrInput interface {
	pulumi.Input

	ToDnsConfigPtrOutput() DnsConfigPtrOutput
	ToDnsConfigPtrOutputWithContext(context.Context) DnsConfigPtrOutput
}

type dnsConfigPtrType DnsConfigArgs

func DnsConfigPtr(v *DnsConfigArgs) DnsConfigPtrInput {
	return (*dnsConfigPtrType)(v)
}

func (*dnsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsConfig)(nil)).Elem()
}

func (i *dnsConfigPtrType) ToDnsConfigPtrOutput() DnsConfigPtrOutput {
	return i.ToDnsConfigPtrOutputWithContext(context.Background())
}

func (i *dnsConfigPtrType) ToDnsConfigPtrOutputWithContext(ctx context.Context) DnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsConfigPtrOutput)
}

// Class containing DNS settings in a Traffic Manager profile.
type DnsConfigOutput struct{ *pulumi.OutputState }

func (DnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsConfig)(nil)).Elem()
}

func (o DnsConfigOutput) ToDnsConfigOutput() DnsConfigOutput {
	return o
}

func (o DnsConfigOutput) ToDnsConfigOutputWithContext(ctx context.Context) DnsConfigOutput {
	return o
}

func (o DnsConfigOutput) ToDnsConfigPtrOutput() DnsConfigPtrOutput {
	return o.ToDnsConfigPtrOutputWithContext(context.Background())
}

func (o DnsConfigOutput) ToDnsConfigPtrOutputWithContext(ctx context.Context) DnsConfigPtrOutput {
	return o.ApplyT(func(v DnsConfig) *DnsConfig {
		return &v
	}).(DnsConfigPtrOutput)
}

// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
func (o DnsConfigOutput) RelativeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsConfig) *string { return v.RelativeName }).(pulumi.StringPtrOutput)
}

// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
func (o DnsConfigOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DnsConfig) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

type DnsConfigPtrOutput struct{ *pulumi.OutputState }

func (DnsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsConfig)(nil)).Elem()
}

func (o DnsConfigPtrOutput) ToDnsConfigPtrOutput() DnsConfigPtrOutput {
	return o
}

func (o DnsConfigPtrOutput) ToDnsConfigPtrOutputWithContext(ctx context.Context) DnsConfigPtrOutput {
	return o
}

func (o DnsConfigPtrOutput) Elem() DnsConfigOutput {
	return o.ApplyT(func(v *DnsConfig) DnsConfig { return *v }).(DnsConfigOutput)
}

// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
func (o DnsConfigPtrOutput) RelativeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsConfig) *string {
		if v == nil {
			return nil
		}
		return v.RelativeName
	}).(pulumi.StringPtrOutput)
}

// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
func (o DnsConfigPtrOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsConfig) *int {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.IntPtrOutput)
}

// Class containing DNS settings in a Traffic Manager profile.
type DnsConfigResponse struct {
	// The fully-qualified domain name (FQDN) of the Traffic Manager profile. This is formed from the concatenation of the RelativeName with the DNS domain used by Azure Traffic Manager.
	Fqdn string `pulumi:"fqdn"`
	// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
	RelativeName *string `pulumi:"relativeName"`
	// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
	Ttl *int `pulumi:"ttl"`
}

// DnsConfigResponseInput is an input type that accepts DnsConfigResponseArgs and DnsConfigResponseOutput values.
// You can construct a concrete instance of `DnsConfigResponseInput` via:
//
//          DnsConfigResponseArgs{...}
type DnsConfigResponseInput interface {
	pulumi.Input

	ToDnsConfigResponseOutput() DnsConfigResponseOutput
	ToDnsConfigResponseOutputWithContext(context.Context) DnsConfigResponseOutput
}

// Class containing DNS settings in a Traffic Manager profile.
type DnsConfigResponseArgs struct {
	// The fully-qualified domain name (FQDN) of the Traffic Manager profile. This is formed from the concatenation of the RelativeName with the DNS domain used by Azure Traffic Manager.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
	RelativeName pulumi.StringPtrInput `pulumi:"relativeName"`
	// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
	Ttl pulumi.IntPtrInput `pulumi:"ttl"`
}

func (DnsConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsConfigResponse)(nil)).Elem()
}

func (i DnsConfigResponseArgs) ToDnsConfigResponseOutput() DnsConfigResponseOutput {
	return i.ToDnsConfigResponseOutputWithContext(context.Background())
}

func (i DnsConfigResponseArgs) ToDnsConfigResponseOutputWithContext(ctx context.Context) DnsConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsConfigResponseOutput)
}

func (i DnsConfigResponseArgs) ToDnsConfigResponsePtrOutput() DnsConfigResponsePtrOutput {
	return i.ToDnsConfigResponsePtrOutputWithContext(context.Background())
}

func (i DnsConfigResponseArgs) ToDnsConfigResponsePtrOutputWithContext(ctx context.Context) DnsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsConfigResponseOutput).ToDnsConfigResponsePtrOutputWithContext(ctx)
}

// DnsConfigResponsePtrInput is an input type that accepts DnsConfigResponseArgs, DnsConfigResponsePtr and DnsConfigResponsePtrOutput values.
// You can construct a concrete instance of `DnsConfigResponsePtrInput` via:
//
//          DnsConfigResponseArgs{...}
//
//  or:
//
//          nil
type DnsConfigResponsePtrInput interface {
	pulumi.Input

	ToDnsConfigResponsePtrOutput() DnsConfigResponsePtrOutput
	ToDnsConfigResponsePtrOutputWithContext(context.Context) DnsConfigResponsePtrOutput
}

type dnsConfigResponsePtrType DnsConfigResponseArgs

func DnsConfigResponsePtr(v *DnsConfigResponseArgs) DnsConfigResponsePtrInput {
	return (*dnsConfigResponsePtrType)(v)
}

func (*dnsConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsConfigResponse)(nil)).Elem()
}

func (i *dnsConfigResponsePtrType) ToDnsConfigResponsePtrOutput() DnsConfigResponsePtrOutput {
	return i.ToDnsConfigResponsePtrOutputWithContext(context.Background())
}

func (i *dnsConfigResponsePtrType) ToDnsConfigResponsePtrOutputWithContext(ctx context.Context) DnsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsConfigResponsePtrOutput)
}

// Class containing DNS settings in a Traffic Manager profile.
type DnsConfigResponseOutput struct{ *pulumi.OutputState }

func (DnsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsConfigResponse)(nil)).Elem()
}

func (o DnsConfigResponseOutput) ToDnsConfigResponseOutput() DnsConfigResponseOutput {
	return o
}

func (o DnsConfigResponseOutput) ToDnsConfigResponseOutputWithContext(ctx context.Context) DnsConfigResponseOutput {
	return o
}

func (o DnsConfigResponseOutput) ToDnsConfigResponsePtrOutput() DnsConfigResponsePtrOutput {
	return o.ToDnsConfigResponsePtrOutputWithContext(context.Background())
}

func (o DnsConfigResponseOutput) ToDnsConfigResponsePtrOutputWithContext(ctx context.Context) DnsConfigResponsePtrOutput {
	return o.ApplyT(func(v DnsConfigResponse) *DnsConfigResponse {
		return &v
	}).(DnsConfigResponsePtrOutput)
}

// The fully-qualified domain name (FQDN) of the Traffic Manager profile. This is formed from the concatenation of the RelativeName with the DNS domain used by Azure Traffic Manager.
func (o DnsConfigResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v DnsConfigResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
func (o DnsConfigResponseOutput) RelativeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsConfigResponse) *string { return v.RelativeName }).(pulumi.StringPtrOutput)
}

// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
func (o DnsConfigResponseOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DnsConfigResponse) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

type DnsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (DnsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsConfigResponse)(nil)).Elem()
}

func (o DnsConfigResponsePtrOutput) ToDnsConfigResponsePtrOutput() DnsConfigResponsePtrOutput {
	return o
}

func (o DnsConfigResponsePtrOutput) ToDnsConfigResponsePtrOutputWithContext(ctx context.Context) DnsConfigResponsePtrOutput {
	return o
}

func (o DnsConfigResponsePtrOutput) Elem() DnsConfigResponseOutput {
	return o.ApplyT(func(v *DnsConfigResponse) DnsConfigResponse { return *v }).(DnsConfigResponseOutput)
}

// The fully-qualified domain name (FQDN) of the Traffic Manager profile. This is formed from the concatenation of the RelativeName with the DNS domain used by Azure Traffic Manager.
func (o DnsConfigResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
func (o DnsConfigResponsePtrOutput) RelativeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.RelativeName
	}).(pulumi.StringPtrOutput)
}

// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
func (o DnsConfigResponsePtrOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.IntPtrOutput)
}

// Represents a single Azure resource and its referencing DNS records.
type DnsResourceReferenceResponse struct {
	// A list of dns Records
	DnsResources []SubResourceResponse `pulumi:"dnsResources"`
	// A reference to an azure resource from where the dns resource value is taken.
	TargetResource *SubResourceResponse `pulumi:"targetResource"`
}

// DnsResourceReferenceResponseInput is an input type that accepts DnsResourceReferenceResponseArgs and DnsResourceReferenceResponseOutput values.
// You can construct a concrete instance of `DnsResourceReferenceResponseInput` via:
//
//          DnsResourceReferenceResponseArgs{...}
type DnsResourceReferenceResponseInput interface {
	pulumi.Input

	ToDnsResourceReferenceResponseOutput() DnsResourceReferenceResponseOutput
	ToDnsResourceReferenceResponseOutputWithContext(context.Context) DnsResourceReferenceResponseOutput
}

// Represents a single Azure resource and its referencing DNS records.
type DnsResourceReferenceResponseArgs struct {
	// A list of dns Records
	DnsResources SubResourceResponseArrayInput `pulumi:"dnsResources"`
	// A reference to an azure resource from where the dns resource value is taken.
	TargetResource SubResourceResponsePtrInput `pulumi:"targetResource"`
}

func (DnsResourceReferenceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsResourceReferenceResponse)(nil)).Elem()
}

func (i DnsResourceReferenceResponseArgs) ToDnsResourceReferenceResponseOutput() DnsResourceReferenceResponseOutput {
	return i.ToDnsResourceReferenceResponseOutputWithContext(context.Background())
}

func (i DnsResourceReferenceResponseArgs) ToDnsResourceReferenceResponseOutputWithContext(ctx context.Context) DnsResourceReferenceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsResourceReferenceResponseOutput)
}

// DnsResourceReferenceResponseArrayInput is an input type that accepts DnsResourceReferenceResponseArray and DnsResourceReferenceResponseArrayOutput values.
// You can construct a concrete instance of `DnsResourceReferenceResponseArrayInput` via:
//
//          DnsResourceReferenceResponseArray{ DnsResourceReferenceResponseArgs{...} }
type DnsResourceReferenceResponseArrayInput interface {
	pulumi.Input

	ToDnsResourceReferenceResponseArrayOutput() DnsResourceReferenceResponseArrayOutput
	ToDnsResourceReferenceResponseArrayOutputWithContext(context.Context) DnsResourceReferenceResponseArrayOutput
}

type DnsResourceReferenceResponseArray []DnsResourceReferenceResponseInput

func (DnsResourceReferenceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsResourceReferenceResponse)(nil)).Elem()
}

func (i DnsResourceReferenceResponseArray) ToDnsResourceReferenceResponseArrayOutput() DnsResourceReferenceResponseArrayOutput {
	return i.ToDnsResourceReferenceResponseArrayOutputWithContext(context.Background())
}

func (i DnsResourceReferenceResponseArray) ToDnsResourceReferenceResponseArrayOutputWithContext(ctx context.Context) DnsResourceReferenceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsResourceReferenceResponseArrayOutput)
}

// Represents a single Azure resource and its referencing DNS records.
type DnsResourceReferenceResponseOutput struct{ *pulumi.OutputState }

func (DnsResourceReferenceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsResourceReferenceResponse)(nil)).Elem()
}

func (o DnsResourceReferenceResponseOutput) ToDnsResourceReferenceResponseOutput() DnsResourceReferenceResponseOutput {
	return o
}

func (o DnsResourceReferenceResponseOutput) ToDnsResourceReferenceResponseOutputWithContext(ctx context.Context) DnsResourceReferenceResponseOutput {
	return o
}

// A list of dns Records
func (o DnsResourceReferenceResponseOutput) DnsResources() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v DnsResourceReferenceResponse) []SubResourceResponse { return v.DnsResources }).(SubResourceResponseArrayOutput)
}

// A reference to an azure resource from where the dns resource value is taken.
func (o DnsResourceReferenceResponseOutput) TargetResource() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v DnsResourceReferenceResponse) *SubResourceResponse { return v.TargetResource }).(SubResourceResponsePtrOutput)
}

type DnsResourceReferenceResponseArrayOutput struct{ *pulumi.OutputState }

func (DnsResourceReferenceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DnsResourceReferenceResponse)(nil)).Elem()
}

func (o DnsResourceReferenceResponseArrayOutput) ToDnsResourceReferenceResponseArrayOutput() DnsResourceReferenceResponseArrayOutput {
	return o
}

func (o DnsResourceReferenceResponseArrayOutput) ToDnsResourceReferenceResponseArrayOutputWithContext(ctx context.Context) DnsResourceReferenceResponseArrayOutput {
	return o
}

func (o DnsResourceReferenceResponseArrayOutput) Index(i pulumi.IntInput) DnsResourceReferenceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DnsResourceReferenceResponse {
		return vs[0].([]DnsResourceReferenceResponse)[vs[1].(int)]
	}).(DnsResourceReferenceResponseOutput)
}

// DNS Proxy Settings in Firewall Policy.
type DnsSettings struct {
	// Enable DNS Proxy on Firewalls attached to the Firewall Policy.
	EnableProxy *bool `pulumi:"enableProxy"`
	// FQDNs in Network Rules are supported when set to true.
	RequireProxyForNetworkRules *bool `pulumi:"requireProxyForNetworkRules"`
	// List of Custom DNS Servers.
	Servers []string `pulumi:"servers"`
}

// DnsSettingsInput is an input type that accepts DnsSettingsArgs and DnsSettingsOutput values.
// You can construct a concrete instance of `DnsSettingsInput` via:
//
//          DnsSettingsArgs{...}
type DnsSettingsInput interface {
	pulumi.Input

	ToDnsSettingsOutput() DnsSettingsOutput
	ToDnsSettingsOutputWithContext(context.Context) DnsSettingsOutput
}

// DNS Proxy Settings in Firewall Policy.
type DnsSettingsArgs struct {
	// Enable DNS Proxy on Firewalls attached to the Firewall Policy.
	EnableProxy pulumi.BoolPtrInput `pulumi:"enableProxy"`
	// FQDNs in Network Rules are supported when set to true.
	RequireProxyForNetworkRules pulumi.BoolPtrInput `pulumi:"requireProxyForNetworkRules"`
	// List of Custom DNS Servers.
	Servers pulumi.StringArrayInput `pulumi:"servers"`
}

func (DnsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsSettings)(nil)).Elem()
}

func (i DnsSettingsArgs) ToDnsSettingsOutput() DnsSettingsOutput {
	return i.ToDnsSettingsOutputWithContext(context.Background())
}

func (i DnsSettingsArgs) ToDnsSettingsOutputWithContext(ctx context.Context) DnsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsSettingsOutput)
}

func (i DnsSettingsArgs) ToDnsSettingsPtrOutput() DnsSettingsPtrOutput {
	return i.ToDnsSettingsPtrOutputWithContext(context.Background())
}

func (i DnsSettingsArgs) ToDnsSettingsPtrOutputWithContext(ctx context.Context) DnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsSettingsOutput).ToDnsSettingsPtrOutputWithContext(ctx)
}

// DnsSettingsPtrInput is an input type that accepts DnsSettingsArgs, DnsSettingsPtr and DnsSettingsPtrOutput values.
// You can construct a concrete instance of `DnsSettingsPtrInput` via:
//
//          DnsSettingsArgs{...}
//
//  or:
//
//          nil
type DnsSettingsPtrInput interface {
	pulumi.Input

	ToDnsSettingsPtrOutput() DnsSettingsPtrOutput
	ToDnsSettingsPtrOutputWithContext(context.Context) DnsSettingsPtrOutput
}

type dnsSettingsPtrType DnsSettingsArgs

func DnsSettingsPtr(v *DnsSettingsArgs) DnsSettingsPtrInput {
	return (*dnsSettingsPtrType)(v)
}

func (*dnsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsSettings)(nil)).Elem()
}

func (i *dnsSettingsPtrType) ToDnsSettingsPtrOutput() DnsSettingsPtrOutput {
	return i.ToDnsSettingsPtrOutputWithContext(context.Background())
}

func (i *dnsSettingsPtrType) ToDnsSettingsPtrOutputWithContext(ctx context.Context) DnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsSettingsPtrOutput)
}

// DNS Proxy Settings in Firewall Policy.
type DnsSettingsOutput struct{ *pulumi.OutputState }

func (DnsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsSettings)(nil)).Elem()
}

func (o DnsSettingsOutput) ToDnsSettingsOutput() DnsSettingsOutput {
	return o
}

func (o DnsSettingsOutput) ToDnsSettingsOutputWithContext(ctx context.Context) DnsSettingsOutput {
	return o
}

func (o DnsSettingsOutput) ToDnsSettingsPtrOutput() DnsSettingsPtrOutput {
	return o.ToDnsSettingsPtrOutputWithContext(context.Background())
}

func (o DnsSettingsOutput) ToDnsSettingsPtrOutputWithContext(ctx context.Context) DnsSettingsPtrOutput {
	return o.ApplyT(func(v DnsSettings) *DnsSettings {
		return &v
	}).(DnsSettingsPtrOutput)
}

// Enable DNS Proxy on Firewalls attached to the Firewall Policy.
func (o DnsSettingsOutput) EnableProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DnsSettings) *bool { return v.EnableProxy }).(pulumi.BoolPtrOutput)
}

// FQDNs in Network Rules are supported when set to true.
func (o DnsSettingsOutput) RequireProxyForNetworkRules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DnsSettings) *bool { return v.RequireProxyForNetworkRules }).(pulumi.BoolPtrOutput)
}

// List of Custom DNS Servers.
func (o DnsSettingsOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DnsSettings) []string { return v.Servers }).(pulumi.StringArrayOutput)
}

type DnsSettingsPtrOutput struct{ *pulumi.OutputState }

func (DnsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsSettings)(nil)).Elem()
}

func (o DnsSettingsPtrOutput) ToDnsSettingsPtrOutput() DnsSettingsPtrOutput {
	return o
}

func (o DnsSettingsPtrOutput) ToDnsSettingsPtrOutputWithContext(ctx context.Context) DnsSettingsPtrOutput {
	return o
}

func (o DnsSettingsPtrOutput) Elem() DnsSettingsOutput {
	return o.ApplyT(func(v *DnsSettings) DnsSettings { return *v }).(DnsSettingsOutput)
}

// Enable DNS Proxy on Firewalls attached to the Firewall Policy.
func (o DnsSettingsPtrOutput) EnableProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DnsSettings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableProxy
	}).(pulumi.BoolPtrOutput)
}

// FQDNs in Network Rules are supported when set to true.
func (o DnsSettingsPtrOutput) RequireProxyForNetworkRules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DnsSettings) *bool {
		if v == nil {
			return nil
		}
		return v.RequireProxyForNetworkRules
	}).(pulumi.BoolPtrOutput)
}

// List of Custom DNS Servers.
func (o DnsSettingsPtrOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DnsSettings) []string {
		if v == nil {
			return nil
		}
		return v.Servers
	}).(pulumi.StringArrayOutput)
}

// DNS Proxy Settings in Firewall Policy.
type DnsSettingsResponse struct {
	// Enable DNS Proxy on Firewalls attached to the Firewall Policy.
	EnableProxy *bool `pulumi:"enableProxy"`
	// FQDNs in Network Rules are supported when set to true.
	RequireProxyForNetworkRules *bool `pulumi:"requireProxyForNetworkRules"`
	// List of Custom DNS Servers.
	Servers []string `pulumi:"servers"`
}

// DnsSettingsResponseInput is an input type that accepts DnsSettingsResponseArgs and DnsSettingsResponseOutput values.
// You can construct a concrete instance of `DnsSettingsResponseInput` via:
//
//          DnsSettingsResponseArgs{...}
type DnsSettingsResponseInput interface {
	pulumi.Input

	ToDnsSettingsResponseOutput() DnsSettingsResponseOutput
	ToDnsSettingsResponseOutputWithContext(context.Context) DnsSettingsResponseOutput
}

// DNS Proxy Settings in Firewall Policy.
type DnsSettingsResponseArgs struct {
	// Enable DNS Proxy on Firewalls attached to the Firewall Policy.
	EnableProxy pulumi.BoolPtrInput `pulumi:"enableProxy"`
	// FQDNs in Network Rules are supported when set to true.
	RequireProxyForNetworkRules pulumi.BoolPtrInput `pulumi:"requireProxyForNetworkRules"`
	// List of Custom DNS Servers.
	Servers pulumi.StringArrayInput `pulumi:"servers"`
}

func (DnsSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsSettingsResponse)(nil)).Elem()
}

func (i DnsSettingsResponseArgs) ToDnsSettingsResponseOutput() DnsSettingsResponseOutput {
	return i.ToDnsSettingsResponseOutputWithContext(context.Background())
}

func (i DnsSettingsResponseArgs) ToDnsSettingsResponseOutputWithContext(ctx context.Context) DnsSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsSettingsResponseOutput)
}

func (i DnsSettingsResponseArgs) ToDnsSettingsResponsePtrOutput() DnsSettingsResponsePtrOutput {
	return i.ToDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i DnsSettingsResponseArgs) ToDnsSettingsResponsePtrOutputWithContext(ctx context.Context) DnsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsSettingsResponseOutput).ToDnsSettingsResponsePtrOutputWithContext(ctx)
}

// DnsSettingsResponsePtrInput is an input type that accepts DnsSettingsResponseArgs, DnsSettingsResponsePtr and DnsSettingsResponsePtrOutput values.
// You can construct a concrete instance of `DnsSettingsResponsePtrInput` via:
//
//          DnsSettingsResponseArgs{...}
//
//  or:
//
//          nil
type DnsSettingsResponsePtrInput interface {
	pulumi.Input

	ToDnsSettingsResponsePtrOutput() DnsSettingsResponsePtrOutput
	ToDnsSettingsResponsePtrOutputWithContext(context.Context) DnsSettingsResponsePtrOutput
}

type dnsSettingsResponsePtrType DnsSettingsResponseArgs

func DnsSettingsResponsePtr(v *DnsSettingsResponseArgs) DnsSettingsResponsePtrInput {
	return (*dnsSettingsResponsePtrType)(v)
}

func (*dnsSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsSettingsResponse)(nil)).Elem()
}

func (i *dnsSettingsResponsePtrType) ToDnsSettingsResponsePtrOutput() DnsSettingsResponsePtrOutput {
	return i.ToDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *dnsSettingsResponsePtrType) ToDnsSettingsResponsePtrOutputWithContext(ctx context.Context) DnsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsSettingsResponsePtrOutput)
}

// DNS Proxy Settings in Firewall Policy.
type DnsSettingsResponseOutput struct{ *pulumi.OutputState }

func (DnsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsSettingsResponse)(nil)).Elem()
}

func (o DnsSettingsResponseOutput) ToDnsSettingsResponseOutput() DnsSettingsResponseOutput {
	return o
}

func (o DnsSettingsResponseOutput) ToDnsSettingsResponseOutputWithContext(ctx context.Context) DnsSettingsResponseOutput {
	return o
}

func (o DnsSettingsResponseOutput) ToDnsSettingsResponsePtrOutput() DnsSettingsResponsePtrOutput {
	return o.ToDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (o DnsSettingsResponseOutput) ToDnsSettingsResponsePtrOutputWithContext(ctx context.Context) DnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v DnsSettingsResponse) *DnsSettingsResponse {
		return &v
	}).(DnsSettingsResponsePtrOutput)
}

// Enable DNS Proxy on Firewalls attached to the Firewall Policy.
func (o DnsSettingsResponseOutput) EnableProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DnsSettingsResponse) *bool { return v.EnableProxy }).(pulumi.BoolPtrOutput)
}

// FQDNs in Network Rules are supported when set to true.
func (o DnsSettingsResponseOutput) RequireProxyForNetworkRules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DnsSettingsResponse) *bool { return v.RequireProxyForNetworkRules }).(pulumi.BoolPtrOutput)
}

// List of Custom DNS Servers.
func (o DnsSettingsResponseOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DnsSettingsResponse) []string { return v.Servers }).(pulumi.StringArrayOutput)
}

type DnsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (DnsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsSettingsResponse)(nil)).Elem()
}

func (o DnsSettingsResponsePtrOutput) ToDnsSettingsResponsePtrOutput() DnsSettingsResponsePtrOutput {
	return o
}

func (o DnsSettingsResponsePtrOutput) ToDnsSettingsResponsePtrOutputWithContext(ctx context.Context) DnsSettingsResponsePtrOutput {
	return o
}

func (o DnsSettingsResponsePtrOutput) Elem() DnsSettingsResponseOutput {
	return o.ApplyT(func(v *DnsSettingsResponse) DnsSettingsResponse { return *v }).(DnsSettingsResponseOutput)
}

// Enable DNS Proxy on Firewalls attached to the Firewall Policy.
func (o DnsSettingsResponsePtrOutput) EnableProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DnsSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableProxy
	}).(pulumi.BoolPtrOutput)
}

// FQDNs in Network Rules are supported when set to true.
func (o DnsSettingsResponsePtrOutput) RequireProxyForNetworkRules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DnsSettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequireProxyForNetworkRules
	}).(pulumi.BoolPtrOutput)
}

// List of Custom DNS Servers.
func (o DnsSettingsResponsePtrOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DnsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.Servers
	}).(pulumi.StringArrayOutput)
}

// Class representing a Traffic Manager endpoint.
type EndpointType struct {
	// List of custom headers.
	CustomHeaders []EndpointPropertiesCustomHeaders `pulumi:"customHeaders"`
	// Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
	EndpointLocation *string `pulumi:"endpointLocation"`
	// The monitoring status of the endpoint.
	EndpointMonitorStatus *string `pulumi:"endpointMonitorStatus"`
	// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
	EndpointStatus *string `pulumi:"endpointStatus"`
	// The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
	GeoMapping []string `pulumi:"geoMapping"`
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
	Id *string `pulumi:"id"`
	// The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
	MinChildEndpoints *int `pulumi:"minChildEndpoints"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
	Priority *int `pulumi:"priority"`
	// The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
	Subnets []EndpointPropertiesSubnets `pulumi:"subnets"`
	// The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
	Target *string `pulumi:"target"`
	// The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
	TargetResourceId *string `pulumi:"targetResourceId"`
	// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
	Type *string `pulumi:"type"`
	// The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
	Weight *int `pulumi:"weight"`
}

// EndpointTypeInput is an input type that accepts EndpointTypeArgs and EndpointTypeOutput values.
// You can construct a concrete instance of `EndpointTypeInput` via:
//
//          EndpointTypeArgs{...}
type EndpointTypeInput interface {
	pulumi.Input

	ToEndpointTypeOutput() EndpointTypeOutput
	ToEndpointTypeOutputWithContext(context.Context) EndpointTypeOutput
}

// Class representing a Traffic Manager endpoint.
type EndpointTypeArgs struct {
	// List of custom headers.
	CustomHeaders EndpointPropertiesCustomHeadersArrayInput `pulumi:"customHeaders"`
	// Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
	EndpointLocation pulumi.StringPtrInput `pulumi:"endpointLocation"`
	// The monitoring status of the endpoint.
	EndpointMonitorStatus pulumi.StringPtrInput `pulumi:"endpointMonitorStatus"`
	// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
	EndpointStatus pulumi.StringPtrInput `pulumi:"endpointStatus"`
	// The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
	GeoMapping pulumi.StringArrayInput `pulumi:"geoMapping"`
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
	MinChildEndpoints pulumi.IntPtrInput `pulumi:"minChildEndpoints"`
	// The name of the resource
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
	Subnets EndpointPropertiesSubnetsArrayInput `pulumi:"subnets"`
	// The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
	TargetResourceId pulumi.StringPtrInput `pulumi:"targetResourceId"`
	// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (EndpointTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointType)(nil)).Elem()
}

func (i EndpointTypeArgs) ToEndpointTypeOutput() EndpointTypeOutput {
	return i.ToEndpointTypeOutputWithContext(context.Background())
}

func (i EndpointTypeArgs) ToEndpointTypeOutputWithContext(ctx context.Context) EndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointTypeOutput)
}

func (i EndpointTypeArgs) ToEndpointTypePtrOutput() EndpointTypePtrOutput {
	return i.ToEndpointTypePtrOutputWithContext(context.Background())
}

func (i EndpointTypeArgs) ToEndpointTypePtrOutputWithContext(ctx context.Context) EndpointTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointTypeOutput).ToEndpointTypePtrOutputWithContext(ctx)
}

// EndpointTypePtrInput is an input type that accepts EndpointTypeArgs, EndpointTypePtr and EndpointTypePtrOutput values.
// You can construct a concrete instance of `EndpointTypePtrInput` via:
//
//          EndpointTypeArgs{...}
//
//  or:
//
//          nil
type EndpointTypePtrInput interface {
	pulumi.Input

	ToEndpointTypePtrOutput() EndpointTypePtrOutput
	ToEndpointTypePtrOutputWithContext(context.Context) EndpointTypePtrOutput
}

type endpointTypePtrType EndpointTypeArgs

func EndpointTypePtr(v *EndpointTypeArgs) EndpointTypePtrInput {
	return (*endpointTypePtrType)(v)
}

func (*endpointTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointType)(nil)).Elem()
}

func (i *endpointTypePtrType) ToEndpointTypePtrOutput() EndpointTypePtrOutput {
	return i.ToEndpointTypePtrOutputWithContext(context.Background())
}

func (i *endpointTypePtrType) ToEndpointTypePtrOutputWithContext(ctx context.Context) EndpointTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointTypePtrOutput)
}

// EndpointTypeArrayInput is an input type that accepts EndpointTypeArray and EndpointTypeArrayOutput values.
// You can construct a concrete instance of `EndpointTypeArrayInput` via:
//
//          EndpointTypeArray{ EndpointTypeArgs{...} }
type EndpointTypeArrayInput interface {
	pulumi.Input

	ToEndpointTypeArrayOutput() EndpointTypeArrayOutput
	ToEndpointTypeArrayOutputWithContext(context.Context) EndpointTypeArrayOutput
}

type EndpointTypeArray []EndpointTypeInput

func (EndpointTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointType)(nil)).Elem()
}

func (i EndpointTypeArray) ToEndpointTypeArrayOutput() EndpointTypeArrayOutput {
	return i.ToEndpointTypeArrayOutputWithContext(context.Background())
}

func (i EndpointTypeArray) ToEndpointTypeArrayOutputWithContext(ctx context.Context) EndpointTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointTypeArrayOutput)
}

// Class representing a Traffic Manager endpoint.
type EndpointTypeOutput struct{ *pulumi.OutputState }

func (EndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointType)(nil)).Elem()
}

func (o EndpointTypeOutput) ToEndpointTypeOutput() EndpointTypeOutput {
	return o
}

func (o EndpointTypeOutput) ToEndpointTypeOutputWithContext(ctx context.Context) EndpointTypeOutput {
	return o
}

func (o EndpointTypeOutput) ToEndpointTypePtrOutput() EndpointTypePtrOutput {
	return o.ToEndpointTypePtrOutputWithContext(context.Background())
}

func (o EndpointTypeOutput) ToEndpointTypePtrOutputWithContext(ctx context.Context) EndpointTypePtrOutput {
	return o.ApplyT(func(v EndpointType) *EndpointType {
		return &v
	}).(EndpointTypePtrOutput)
}

// List of custom headers.
func (o EndpointTypeOutput) CustomHeaders() EndpointPropertiesCustomHeadersArrayOutput {
	return o.ApplyT(func(v EndpointType) []EndpointPropertiesCustomHeaders { return v.CustomHeaders }).(EndpointPropertiesCustomHeadersArrayOutput)
}

// Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
func (o EndpointTypeOutput) EndpointLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.EndpointLocation }).(pulumi.StringPtrOutput)
}

// The monitoring status of the endpoint.
func (o EndpointTypeOutput) EndpointMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.EndpointMonitorStatus }).(pulumi.StringPtrOutput)
}

// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
func (o EndpointTypeOutput) EndpointStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.EndpointStatus }).(pulumi.StringPtrOutput)
}

// The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
func (o EndpointTypeOutput) GeoMapping() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointType) []string { return v.GeoMapping }).(pulumi.StringArrayOutput)
}

// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
func (o EndpointTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
func (o EndpointTypeOutput) MinChildEndpoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointType) *int { return v.MinChildEndpoints }).(pulumi.IntPtrOutput)
}

// The name of the resource
func (o EndpointTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
func (o EndpointTypeOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointType) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
func (o EndpointTypeOutput) Subnets() EndpointPropertiesSubnetsArrayOutput {
	return o.ApplyT(func(v EndpointType) []EndpointPropertiesSubnets { return v.Subnets }).(EndpointPropertiesSubnetsArrayOutput)
}

// The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
func (o EndpointTypeOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
func (o EndpointTypeOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.TargetResourceId }).(pulumi.StringPtrOutput)
}

// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
func (o EndpointTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
func (o EndpointTypeOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointType) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type EndpointTypePtrOutput struct{ *pulumi.OutputState }

func (EndpointTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointType)(nil)).Elem()
}

func (o EndpointTypePtrOutput) ToEndpointTypePtrOutput() EndpointTypePtrOutput {
	return o
}

func (o EndpointTypePtrOutput) ToEndpointTypePtrOutputWithContext(ctx context.Context) EndpointTypePtrOutput {
	return o
}

func (o EndpointTypePtrOutput) Elem() EndpointTypeOutput {
	return o.ApplyT(func(v *EndpointType) EndpointType { return *v }).(EndpointTypeOutput)
}

// List of custom headers.
func (o EndpointTypePtrOutput) CustomHeaders() EndpointPropertiesCustomHeadersArrayOutput {
	return o.ApplyT(func(v *EndpointType) []EndpointPropertiesCustomHeaders {
		if v == nil {
			return nil
		}
		return v.CustomHeaders
	}).(EndpointPropertiesCustomHeadersArrayOutput)
}

// Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
func (o EndpointTypePtrOutput) EndpointLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointType) *string {
		if v == nil {
			return nil
		}
		return v.EndpointLocation
	}).(pulumi.StringPtrOutput)
}

// The monitoring status of the endpoint.
func (o EndpointTypePtrOutput) EndpointMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointType) *string {
		if v == nil {
			return nil
		}
		return v.EndpointMonitorStatus
	}).(pulumi.StringPtrOutput)
}

// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
func (o EndpointTypePtrOutput) EndpointStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointType) *string {
		if v == nil {
			return nil
		}
		return v.EndpointStatus
	}).(pulumi.StringPtrOutput)
}

// The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
func (o EndpointTypePtrOutput) GeoMapping() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EndpointType) []string {
		if v == nil {
			return nil
		}
		return v.GeoMapping
	}).(pulumi.StringArrayOutput)
}

// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
func (o EndpointTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
func (o EndpointTypePtrOutput) MinChildEndpoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointType) *int {
		if v == nil {
			return nil
		}
		return v.MinChildEndpoints
	}).(pulumi.IntPtrOutput)
}

// The name of the resource
func (o EndpointTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
func (o EndpointTypePtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointType) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
func (o EndpointTypePtrOutput) Subnets() EndpointPropertiesSubnetsArrayOutput {
	return o.ApplyT(func(v *EndpointType) []EndpointPropertiesSubnets {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(EndpointPropertiesSubnetsArrayOutput)
}

// The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
func (o EndpointTypePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointType) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
func (o EndpointTypePtrOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointType) *string {
		if v == nil {
			return nil
		}
		return v.TargetResourceId
	}).(pulumi.StringPtrOutput)
}

// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
func (o EndpointTypePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointType) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
func (o EndpointTypePtrOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointType) *int {
		if v == nil {
			return nil
		}
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type EndpointTypeArrayOutput struct{ *pulumi.OutputState }

func (EndpointTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointType)(nil)).Elem()
}

func (o EndpointTypeArrayOutput) ToEndpointTypeArrayOutput() EndpointTypeArrayOutput {
	return o
}

func (o EndpointTypeArrayOutput) ToEndpointTypeArrayOutputWithContext(ctx context.Context) EndpointTypeArrayOutput {
	return o
}

func (o EndpointTypeArrayOutput) Index(i pulumi.IntInput) EndpointTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointType {
		return vs[0].([]EndpointType)[vs[1].(int)]
	}).(EndpointTypeOutput)
}

// Custom header name and value.
type EndpointPropertiesCustomHeaders struct {
	// Header name.
	Name *string `pulumi:"name"`
	// Header value.
	Value *string `pulumi:"value"`
}

// EndpointPropertiesCustomHeadersInput is an input type that accepts EndpointPropertiesCustomHeadersArgs and EndpointPropertiesCustomHeadersOutput values.
// You can construct a concrete instance of `EndpointPropertiesCustomHeadersInput` via:
//
//          EndpointPropertiesCustomHeadersArgs{...}
type EndpointPropertiesCustomHeadersInput interface {
	pulumi.Input

	ToEndpointPropertiesCustomHeadersOutput() EndpointPropertiesCustomHeadersOutput
	ToEndpointPropertiesCustomHeadersOutputWithContext(context.Context) EndpointPropertiesCustomHeadersOutput
}

// Custom header name and value.
type EndpointPropertiesCustomHeadersArgs struct {
	// Header name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Header value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EndpointPropertiesCustomHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesCustomHeaders)(nil)).Elem()
}

func (i EndpointPropertiesCustomHeadersArgs) ToEndpointPropertiesCustomHeadersOutput() EndpointPropertiesCustomHeadersOutput {
	return i.ToEndpointPropertiesCustomHeadersOutputWithContext(context.Background())
}

func (i EndpointPropertiesCustomHeadersArgs) ToEndpointPropertiesCustomHeadersOutputWithContext(ctx context.Context) EndpointPropertiesCustomHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesCustomHeadersOutput)
}

// EndpointPropertiesCustomHeadersArrayInput is an input type that accepts EndpointPropertiesCustomHeadersArray and EndpointPropertiesCustomHeadersArrayOutput values.
// You can construct a concrete instance of `EndpointPropertiesCustomHeadersArrayInput` via:
//
//          EndpointPropertiesCustomHeadersArray{ EndpointPropertiesCustomHeadersArgs{...} }
type EndpointPropertiesCustomHeadersArrayInput interface {
	pulumi.Input

	ToEndpointPropertiesCustomHeadersArrayOutput() EndpointPropertiesCustomHeadersArrayOutput
	ToEndpointPropertiesCustomHeadersArrayOutputWithContext(context.Context) EndpointPropertiesCustomHeadersArrayOutput
}

type EndpointPropertiesCustomHeadersArray []EndpointPropertiesCustomHeadersInput

func (EndpointPropertiesCustomHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesCustomHeaders)(nil)).Elem()
}

func (i EndpointPropertiesCustomHeadersArray) ToEndpointPropertiesCustomHeadersArrayOutput() EndpointPropertiesCustomHeadersArrayOutput {
	return i.ToEndpointPropertiesCustomHeadersArrayOutputWithContext(context.Background())
}

func (i EndpointPropertiesCustomHeadersArray) ToEndpointPropertiesCustomHeadersArrayOutputWithContext(ctx context.Context) EndpointPropertiesCustomHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesCustomHeadersArrayOutput)
}

// Custom header name and value.
type EndpointPropertiesCustomHeadersOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesCustomHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesCustomHeaders)(nil)).Elem()
}

func (o EndpointPropertiesCustomHeadersOutput) ToEndpointPropertiesCustomHeadersOutput() EndpointPropertiesCustomHeadersOutput {
	return o
}

func (o EndpointPropertiesCustomHeadersOutput) ToEndpointPropertiesCustomHeadersOutputWithContext(ctx context.Context) EndpointPropertiesCustomHeadersOutput {
	return o
}

// Header name.
func (o EndpointPropertiesCustomHeadersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesCustomHeaders) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Header value.
func (o EndpointPropertiesCustomHeadersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesCustomHeaders) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EndpointPropertiesCustomHeadersArrayOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesCustomHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesCustomHeaders)(nil)).Elem()
}

func (o EndpointPropertiesCustomHeadersArrayOutput) ToEndpointPropertiesCustomHeadersArrayOutput() EndpointPropertiesCustomHeadersArrayOutput {
	return o
}

func (o EndpointPropertiesCustomHeadersArrayOutput) ToEndpointPropertiesCustomHeadersArrayOutputWithContext(ctx context.Context) EndpointPropertiesCustomHeadersArrayOutput {
	return o
}

func (o EndpointPropertiesCustomHeadersArrayOutput) Index(i pulumi.IntInput) EndpointPropertiesCustomHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointPropertiesCustomHeaders {
		return vs[0].([]EndpointPropertiesCustomHeaders)[vs[1].(int)]
	}).(EndpointPropertiesCustomHeadersOutput)
}

// Custom header name and value.
type EndpointPropertiesResponseCustomHeaders struct {
	// Header name.
	Name *string `pulumi:"name"`
	// Header value.
	Value *string `pulumi:"value"`
}

// EndpointPropertiesResponseCustomHeadersInput is an input type that accepts EndpointPropertiesResponseCustomHeadersArgs and EndpointPropertiesResponseCustomHeadersOutput values.
// You can construct a concrete instance of `EndpointPropertiesResponseCustomHeadersInput` via:
//
//          EndpointPropertiesResponseCustomHeadersArgs{...}
type EndpointPropertiesResponseCustomHeadersInput interface {
	pulumi.Input

	ToEndpointPropertiesResponseCustomHeadersOutput() EndpointPropertiesResponseCustomHeadersOutput
	ToEndpointPropertiesResponseCustomHeadersOutputWithContext(context.Context) EndpointPropertiesResponseCustomHeadersOutput
}

// Custom header name and value.
type EndpointPropertiesResponseCustomHeadersArgs struct {
	// Header name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Header value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EndpointPropertiesResponseCustomHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesResponseCustomHeaders)(nil)).Elem()
}

func (i EndpointPropertiesResponseCustomHeadersArgs) ToEndpointPropertiesResponseCustomHeadersOutput() EndpointPropertiesResponseCustomHeadersOutput {
	return i.ToEndpointPropertiesResponseCustomHeadersOutputWithContext(context.Background())
}

func (i EndpointPropertiesResponseCustomHeadersArgs) ToEndpointPropertiesResponseCustomHeadersOutputWithContext(ctx context.Context) EndpointPropertiesResponseCustomHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesResponseCustomHeadersOutput)
}

// EndpointPropertiesResponseCustomHeadersArrayInput is an input type that accepts EndpointPropertiesResponseCustomHeadersArray and EndpointPropertiesResponseCustomHeadersArrayOutput values.
// You can construct a concrete instance of `EndpointPropertiesResponseCustomHeadersArrayInput` via:
//
//          EndpointPropertiesResponseCustomHeadersArray{ EndpointPropertiesResponseCustomHeadersArgs{...} }
type EndpointPropertiesResponseCustomHeadersArrayInput interface {
	pulumi.Input

	ToEndpointPropertiesResponseCustomHeadersArrayOutput() EndpointPropertiesResponseCustomHeadersArrayOutput
	ToEndpointPropertiesResponseCustomHeadersArrayOutputWithContext(context.Context) EndpointPropertiesResponseCustomHeadersArrayOutput
}

type EndpointPropertiesResponseCustomHeadersArray []EndpointPropertiesResponseCustomHeadersInput

func (EndpointPropertiesResponseCustomHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesResponseCustomHeaders)(nil)).Elem()
}

func (i EndpointPropertiesResponseCustomHeadersArray) ToEndpointPropertiesResponseCustomHeadersArrayOutput() EndpointPropertiesResponseCustomHeadersArrayOutput {
	return i.ToEndpointPropertiesResponseCustomHeadersArrayOutputWithContext(context.Background())
}

func (i EndpointPropertiesResponseCustomHeadersArray) ToEndpointPropertiesResponseCustomHeadersArrayOutputWithContext(ctx context.Context) EndpointPropertiesResponseCustomHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesResponseCustomHeadersArrayOutput)
}

// Custom header name and value.
type EndpointPropertiesResponseCustomHeadersOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesResponseCustomHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesResponseCustomHeaders)(nil)).Elem()
}

func (o EndpointPropertiesResponseCustomHeadersOutput) ToEndpointPropertiesResponseCustomHeadersOutput() EndpointPropertiesResponseCustomHeadersOutput {
	return o
}

func (o EndpointPropertiesResponseCustomHeadersOutput) ToEndpointPropertiesResponseCustomHeadersOutputWithContext(ctx context.Context) EndpointPropertiesResponseCustomHeadersOutput {
	return o
}

// Header name.
func (o EndpointPropertiesResponseCustomHeadersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponseCustomHeaders) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Header value.
func (o EndpointPropertiesResponseCustomHeadersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponseCustomHeaders) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EndpointPropertiesResponseCustomHeadersArrayOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesResponseCustomHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesResponseCustomHeaders)(nil)).Elem()
}

func (o EndpointPropertiesResponseCustomHeadersArrayOutput) ToEndpointPropertiesResponseCustomHeadersArrayOutput() EndpointPropertiesResponseCustomHeadersArrayOutput {
	return o
}

func (o EndpointPropertiesResponseCustomHeadersArrayOutput) ToEndpointPropertiesResponseCustomHeadersArrayOutputWithContext(ctx context.Context) EndpointPropertiesResponseCustomHeadersArrayOutput {
	return o
}

func (o EndpointPropertiesResponseCustomHeadersArrayOutput) Index(i pulumi.IntInput) EndpointPropertiesResponseCustomHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointPropertiesResponseCustomHeaders {
		return vs[0].([]EndpointPropertiesResponseCustomHeaders)[vs[1].(int)]
	}).(EndpointPropertiesResponseCustomHeadersOutput)
}

// Subnet first address, scope, and/or last address.
type EndpointPropertiesResponseSubnets struct {
	// First address in the subnet.
	First *string `pulumi:"first"`
	// Last address in the subnet.
	Last *string `pulumi:"last"`
	// Block size (number of leading bits in the subnet mask).
	Scope *int `pulumi:"scope"`
}

// EndpointPropertiesResponseSubnetsInput is an input type that accepts EndpointPropertiesResponseSubnetsArgs and EndpointPropertiesResponseSubnetsOutput values.
// You can construct a concrete instance of `EndpointPropertiesResponseSubnetsInput` via:
//
//          EndpointPropertiesResponseSubnetsArgs{...}
type EndpointPropertiesResponseSubnetsInput interface {
	pulumi.Input

	ToEndpointPropertiesResponseSubnetsOutput() EndpointPropertiesResponseSubnetsOutput
	ToEndpointPropertiesResponseSubnetsOutputWithContext(context.Context) EndpointPropertiesResponseSubnetsOutput
}

// Subnet first address, scope, and/or last address.
type EndpointPropertiesResponseSubnetsArgs struct {
	// First address in the subnet.
	First pulumi.StringPtrInput `pulumi:"first"`
	// Last address in the subnet.
	Last pulumi.StringPtrInput `pulumi:"last"`
	// Block size (number of leading bits in the subnet mask).
	Scope pulumi.IntPtrInput `pulumi:"scope"`
}

func (EndpointPropertiesResponseSubnetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesResponseSubnets)(nil)).Elem()
}

func (i EndpointPropertiesResponseSubnetsArgs) ToEndpointPropertiesResponseSubnetsOutput() EndpointPropertiesResponseSubnetsOutput {
	return i.ToEndpointPropertiesResponseSubnetsOutputWithContext(context.Background())
}

func (i EndpointPropertiesResponseSubnetsArgs) ToEndpointPropertiesResponseSubnetsOutputWithContext(ctx context.Context) EndpointPropertiesResponseSubnetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesResponseSubnetsOutput)
}

// EndpointPropertiesResponseSubnetsArrayInput is an input type that accepts EndpointPropertiesResponseSubnetsArray and EndpointPropertiesResponseSubnetsArrayOutput values.
// You can construct a concrete instance of `EndpointPropertiesResponseSubnetsArrayInput` via:
//
//          EndpointPropertiesResponseSubnetsArray{ EndpointPropertiesResponseSubnetsArgs{...} }
type EndpointPropertiesResponseSubnetsArrayInput interface {
	pulumi.Input

	ToEndpointPropertiesResponseSubnetsArrayOutput() EndpointPropertiesResponseSubnetsArrayOutput
	ToEndpointPropertiesResponseSubnetsArrayOutputWithContext(context.Context) EndpointPropertiesResponseSubnetsArrayOutput
}

type EndpointPropertiesResponseSubnetsArray []EndpointPropertiesResponseSubnetsInput

func (EndpointPropertiesResponseSubnetsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesResponseSubnets)(nil)).Elem()
}

func (i EndpointPropertiesResponseSubnetsArray) ToEndpointPropertiesResponseSubnetsArrayOutput() EndpointPropertiesResponseSubnetsArrayOutput {
	return i.ToEndpointPropertiesResponseSubnetsArrayOutputWithContext(context.Background())
}

func (i EndpointPropertiesResponseSubnetsArray) ToEndpointPropertiesResponseSubnetsArrayOutputWithContext(ctx context.Context) EndpointPropertiesResponseSubnetsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesResponseSubnetsArrayOutput)
}

// Subnet first address, scope, and/or last address.
type EndpointPropertiesResponseSubnetsOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesResponseSubnetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesResponseSubnets)(nil)).Elem()
}

func (o EndpointPropertiesResponseSubnetsOutput) ToEndpointPropertiesResponseSubnetsOutput() EndpointPropertiesResponseSubnetsOutput {
	return o
}

func (o EndpointPropertiesResponseSubnetsOutput) ToEndpointPropertiesResponseSubnetsOutputWithContext(ctx context.Context) EndpointPropertiesResponseSubnetsOutput {
	return o
}

// First address in the subnet.
func (o EndpointPropertiesResponseSubnetsOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponseSubnets) *string { return v.First }).(pulumi.StringPtrOutput)
}

// Last address in the subnet.
func (o EndpointPropertiesResponseSubnetsOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponseSubnets) *string { return v.Last }).(pulumi.StringPtrOutput)
}

// Block size (number of leading bits in the subnet mask).
func (o EndpointPropertiesResponseSubnetsOutput) Scope() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponseSubnets) *int { return v.Scope }).(pulumi.IntPtrOutput)
}

type EndpointPropertiesResponseSubnetsArrayOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesResponseSubnetsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesResponseSubnets)(nil)).Elem()
}

func (o EndpointPropertiesResponseSubnetsArrayOutput) ToEndpointPropertiesResponseSubnetsArrayOutput() EndpointPropertiesResponseSubnetsArrayOutput {
	return o
}

func (o EndpointPropertiesResponseSubnetsArrayOutput) ToEndpointPropertiesResponseSubnetsArrayOutputWithContext(ctx context.Context) EndpointPropertiesResponseSubnetsArrayOutput {
	return o
}

func (o EndpointPropertiesResponseSubnetsArrayOutput) Index(i pulumi.IntInput) EndpointPropertiesResponseSubnetsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointPropertiesResponseSubnets {
		return vs[0].([]EndpointPropertiesResponseSubnets)[vs[1].(int)]
	}).(EndpointPropertiesResponseSubnetsOutput)
}

// Subnet first address, scope, and/or last address.
type EndpointPropertiesSubnets struct {
	// First address in the subnet.
	First *string `pulumi:"first"`
	// Last address in the subnet.
	Last *string `pulumi:"last"`
	// Block size (number of leading bits in the subnet mask).
	Scope *int `pulumi:"scope"`
}

// EndpointPropertiesSubnetsInput is an input type that accepts EndpointPropertiesSubnetsArgs and EndpointPropertiesSubnetsOutput values.
// You can construct a concrete instance of `EndpointPropertiesSubnetsInput` via:
//
//          EndpointPropertiesSubnetsArgs{...}
type EndpointPropertiesSubnetsInput interface {
	pulumi.Input

	ToEndpointPropertiesSubnetsOutput() EndpointPropertiesSubnetsOutput
	ToEndpointPropertiesSubnetsOutputWithContext(context.Context) EndpointPropertiesSubnetsOutput
}

// Subnet first address, scope, and/or last address.
type EndpointPropertiesSubnetsArgs struct {
	// First address in the subnet.
	First pulumi.StringPtrInput `pulumi:"first"`
	// Last address in the subnet.
	Last pulumi.StringPtrInput `pulumi:"last"`
	// Block size (number of leading bits in the subnet mask).
	Scope pulumi.IntPtrInput `pulumi:"scope"`
}

func (EndpointPropertiesSubnetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesSubnets)(nil)).Elem()
}

func (i EndpointPropertiesSubnetsArgs) ToEndpointPropertiesSubnetsOutput() EndpointPropertiesSubnetsOutput {
	return i.ToEndpointPropertiesSubnetsOutputWithContext(context.Background())
}

func (i EndpointPropertiesSubnetsArgs) ToEndpointPropertiesSubnetsOutputWithContext(ctx context.Context) EndpointPropertiesSubnetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesSubnetsOutput)
}

// EndpointPropertiesSubnetsArrayInput is an input type that accepts EndpointPropertiesSubnetsArray and EndpointPropertiesSubnetsArrayOutput values.
// You can construct a concrete instance of `EndpointPropertiesSubnetsArrayInput` via:
//
//          EndpointPropertiesSubnetsArray{ EndpointPropertiesSubnetsArgs{...} }
type EndpointPropertiesSubnetsArrayInput interface {
	pulumi.Input

	ToEndpointPropertiesSubnetsArrayOutput() EndpointPropertiesSubnetsArrayOutput
	ToEndpointPropertiesSubnetsArrayOutputWithContext(context.Context) EndpointPropertiesSubnetsArrayOutput
}

type EndpointPropertiesSubnetsArray []EndpointPropertiesSubnetsInput

func (EndpointPropertiesSubnetsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesSubnets)(nil)).Elem()
}

func (i EndpointPropertiesSubnetsArray) ToEndpointPropertiesSubnetsArrayOutput() EndpointPropertiesSubnetsArrayOutput {
	return i.ToEndpointPropertiesSubnetsArrayOutputWithContext(context.Background())
}

func (i EndpointPropertiesSubnetsArray) ToEndpointPropertiesSubnetsArrayOutputWithContext(ctx context.Context) EndpointPropertiesSubnetsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesSubnetsArrayOutput)
}

// Subnet first address, scope, and/or last address.
type EndpointPropertiesSubnetsOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesSubnetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesSubnets)(nil)).Elem()
}

func (o EndpointPropertiesSubnetsOutput) ToEndpointPropertiesSubnetsOutput() EndpointPropertiesSubnetsOutput {
	return o
}

func (o EndpointPropertiesSubnetsOutput) ToEndpointPropertiesSubnetsOutputWithContext(ctx context.Context) EndpointPropertiesSubnetsOutput {
	return o
}

// First address in the subnet.
func (o EndpointPropertiesSubnetsOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesSubnets) *string { return v.First }).(pulumi.StringPtrOutput)
}

// Last address in the subnet.
func (o EndpointPropertiesSubnetsOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesSubnets) *string { return v.Last }).(pulumi.StringPtrOutput)
}

// Block size (number of leading bits in the subnet mask).
func (o EndpointPropertiesSubnetsOutput) Scope() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesSubnets) *int { return v.Scope }).(pulumi.IntPtrOutput)
}

type EndpointPropertiesSubnetsArrayOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesSubnetsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesSubnets)(nil)).Elem()
}

func (o EndpointPropertiesSubnetsArrayOutput) ToEndpointPropertiesSubnetsArrayOutput() EndpointPropertiesSubnetsArrayOutput {
	return o
}

func (o EndpointPropertiesSubnetsArrayOutput) ToEndpointPropertiesSubnetsArrayOutputWithContext(ctx context.Context) EndpointPropertiesSubnetsArrayOutput {
	return o
}

func (o EndpointPropertiesSubnetsArrayOutput) Index(i pulumi.IntInput) EndpointPropertiesSubnetsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointPropertiesSubnets {
		return vs[0].([]EndpointPropertiesSubnets)[vs[1].(int)]
	}).(EndpointPropertiesSubnetsOutput)
}

// Class representing a Traffic Manager endpoint.
type EndpointResponse struct {
	// List of custom headers.
	CustomHeaders []EndpointPropertiesResponseCustomHeaders `pulumi:"customHeaders"`
	// Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
	EndpointLocation *string `pulumi:"endpointLocation"`
	// The monitoring status of the endpoint.
	EndpointMonitorStatus *string `pulumi:"endpointMonitorStatus"`
	// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
	EndpointStatus *string `pulumi:"endpointStatus"`
	// The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
	GeoMapping []string `pulumi:"geoMapping"`
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
	Id *string `pulumi:"id"`
	// The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
	MinChildEndpoints *int `pulumi:"minChildEndpoints"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
	Priority *int `pulumi:"priority"`
	// The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
	Subnets []EndpointPropertiesResponseSubnets `pulumi:"subnets"`
	// The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
	Target *string `pulumi:"target"`
	// The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
	TargetResourceId *string `pulumi:"targetResourceId"`
	// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
	Type *string `pulumi:"type"`
	// The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
	Weight *int `pulumi:"weight"`
}

// EndpointResponseInput is an input type that accepts EndpointResponseArgs and EndpointResponseOutput values.
// You can construct a concrete instance of `EndpointResponseInput` via:
//
//          EndpointResponseArgs{...}
type EndpointResponseInput interface {
	pulumi.Input

	ToEndpointResponseOutput() EndpointResponseOutput
	ToEndpointResponseOutputWithContext(context.Context) EndpointResponseOutput
}

// Class representing a Traffic Manager endpoint.
type EndpointResponseArgs struct {
	// List of custom headers.
	CustomHeaders EndpointPropertiesResponseCustomHeadersArrayInput `pulumi:"customHeaders"`
	// Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
	EndpointLocation pulumi.StringPtrInput `pulumi:"endpointLocation"`
	// The monitoring status of the endpoint.
	EndpointMonitorStatus pulumi.StringPtrInput `pulumi:"endpointMonitorStatus"`
	// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
	EndpointStatus pulumi.StringPtrInput `pulumi:"endpointStatus"`
	// The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
	GeoMapping pulumi.StringArrayInput `pulumi:"geoMapping"`
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
	MinChildEndpoints pulumi.IntPtrInput `pulumi:"minChildEndpoints"`
	// The name of the resource
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
	Subnets EndpointPropertiesResponseSubnetsArrayInput `pulumi:"subnets"`
	// The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
	TargetResourceId pulumi.StringPtrInput `pulumi:"targetResourceId"`
	// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (EndpointResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointResponse)(nil)).Elem()
}

func (i EndpointResponseArgs) ToEndpointResponseOutput() EndpointResponseOutput {
	return i.ToEndpointResponseOutputWithContext(context.Background())
}

func (i EndpointResponseArgs) ToEndpointResponseOutputWithContext(ctx context.Context) EndpointResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointResponseOutput)
}

func (i EndpointResponseArgs) ToEndpointResponsePtrOutput() EndpointResponsePtrOutput {
	return i.ToEndpointResponsePtrOutputWithContext(context.Background())
}

func (i EndpointResponseArgs) ToEndpointResponsePtrOutputWithContext(ctx context.Context) EndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointResponseOutput).ToEndpointResponsePtrOutputWithContext(ctx)
}

// EndpointResponsePtrInput is an input type that accepts EndpointResponseArgs, EndpointResponsePtr and EndpointResponsePtrOutput values.
// You can construct a concrete instance of `EndpointResponsePtrInput` via:
//
//          EndpointResponseArgs{...}
//
//  or:
//
//          nil
type EndpointResponsePtrInput interface {
	pulumi.Input

	ToEndpointResponsePtrOutput() EndpointResponsePtrOutput
	ToEndpointResponsePtrOutputWithContext(context.Context) EndpointResponsePtrOutput
}

type endpointResponsePtrType EndpointResponseArgs

func EndpointResponsePtr(v *EndpointResponseArgs) EndpointResponsePtrInput {
	return (*endpointResponsePtrType)(v)
}

func (*endpointResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointResponse)(nil)).Elem()
}

func (i *endpointResponsePtrType) ToEndpointResponsePtrOutput() EndpointResponsePtrOutput {
	return i.ToEndpointResponsePtrOutputWithContext(context.Background())
}

func (i *endpointResponsePtrType) ToEndpointResponsePtrOutputWithContext(ctx context.Context) EndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointResponsePtrOutput)
}

// EndpointResponseArrayInput is an input type that accepts EndpointResponseArray and EndpointResponseArrayOutput values.
// You can construct a concrete instance of `EndpointResponseArrayInput` via:
//
//          EndpointResponseArray{ EndpointResponseArgs{...} }
type EndpointResponseArrayInput interface {
	pulumi.Input

	ToEndpointResponseArrayOutput() EndpointResponseArrayOutput
	ToEndpointResponseArrayOutputWithContext(context.Context) EndpointResponseArrayOutput
}

type EndpointResponseArray []EndpointResponseInput

func (EndpointResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointResponse)(nil)).Elem()
}

func (i EndpointResponseArray) ToEndpointResponseArrayOutput() EndpointResponseArrayOutput {
	return i.ToEndpointResponseArrayOutputWithContext(context.Background())
}

func (i EndpointResponseArray) ToEndpointResponseArrayOutputWithContext(ctx context.Context) EndpointResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointResponseArrayOutput)
}

// Class representing a Traffic Manager endpoint.
type EndpointResponseOutput struct{ *pulumi.OutputState }

func (EndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointResponse)(nil)).Elem()
}

func (o EndpointResponseOutput) ToEndpointResponseOutput() EndpointResponseOutput {
	return o
}

func (o EndpointResponseOutput) ToEndpointResponseOutputWithContext(ctx context.Context) EndpointResponseOutput {
	return o
}

func (o EndpointResponseOutput) ToEndpointResponsePtrOutput() EndpointResponsePtrOutput {
	return o.ToEndpointResponsePtrOutputWithContext(context.Background())
}

func (o EndpointResponseOutput) ToEndpointResponsePtrOutputWithContext(ctx context.Context) EndpointResponsePtrOutput {
	return o.ApplyT(func(v EndpointResponse) *EndpointResponse {
		return &v
	}).(EndpointResponsePtrOutput)
}

// List of custom headers.
func (o EndpointResponseOutput) CustomHeaders() EndpointPropertiesResponseCustomHeadersArrayOutput {
	return o.ApplyT(func(v EndpointResponse) []EndpointPropertiesResponseCustomHeaders { return v.CustomHeaders }).(EndpointPropertiesResponseCustomHeadersArrayOutput)
}

// Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
func (o EndpointResponseOutput) EndpointLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.EndpointLocation }).(pulumi.StringPtrOutput)
}

// The monitoring status of the endpoint.
func (o EndpointResponseOutput) EndpointMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.EndpointMonitorStatus }).(pulumi.StringPtrOutput)
}

// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
func (o EndpointResponseOutput) EndpointStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.EndpointStatus }).(pulumi.StringPtrOutput)
}

// The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
func (o EndpointResponseOutput) GeoMapping() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointResponse) []string { return v.GeoMapping }).(pulumi.StringArrayOutput)
}

// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
func (o EndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
func (o EndpointResponseOutput) MinChildEndpoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *int { return v.MinChildEndpoints }).(pulumi.IntPtrOutput)
}

// The name of the resource
func (o EndpointResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
func (o EndpointResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
func (o EndpointResponseOutput) Subnets() EndpointPropertiesResponseSubnetsArrayOutput {
	return o.ApplyT(func(v EndpointResponse) []EndpointPropertiesResponseSubnets { return v.Subnets }).(EndpointPropertiesResponseSubnetsArrayOutput)
}

// The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
func (o EndpointResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
func (o EndpointResponseOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.TargetResourceId }).(pulumi.StringPtrOutput)
}

// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
func (o EndpointResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
func (o EndpointResponseOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type EndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (EndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointResponse)(nil)).Elem()
}

func (o EndpointResponsePtrOutput) ToEndpointResponsePtrOutput() EndpointResponsePtrOutput {
	return o
}

func (o EndpointResponsePtrOutput) ToEndpointResponsePtrOutputWithContext(ctx context.Context) EndpointResponsePtrOutput {
	return o
}

func (o EndpointResponsePtrOutput) Elem() EndpointResponseOutput {
	return o.ApplyT(func(v *EndpointResponse) EndpointResponse { return *v }).(EndpointResponseOutput)
}

// List of custom headers.
func (o EndpointResponsePtrOutput) CustomHeaders() EndpointPropertiesResponseCustomHeadersArrayOutput {
	return o.ApplyT(func(v *EndpointResponse) []EndpointPropertiesResponseCustomHeaders {
		if v == nil {
			return nil
		}
		return v.CustomHeaders
	}).(EndpointPropertiesResponseCustomHeadersArrayOutput)
}

// Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
func (o EndpointResponsePtrOutput) EndpointLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndpointLocation
	}).(pulumi.StringPtrOutput)
}

// The monitoring status of the endpoint.
func (o EndpointResponsePtrOutput) EndpointMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndpointMonitorStatus
	}).(pulumi.StringPtrOutput)
}

// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
func (o EndpointResponsePtrOutput) EndpointStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.EndpointStatus
	}).(pulumi.StringPtrOutput)
}

// The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
func (o EndpointResponsePtrOutput) GeoMapping() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EndpointResponse) []string {
		if v == nil {
			return nil
		}
		return v.GeoMapping
	}).(pulumi.StringArrayOutput)
}

// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
func (o EndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
func (o EndpointResponsePtrOutput) MinChildEndpoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinChildEndpoints
	}).(pulumi.IntPtrOutput)
}

// The name of the resource
func (o EndpointResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
func (o EndpointResponsePtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointResponse) *int {
		if v == nil {
			return nil
		}
		return v.Priority
	}).(pulumi.IntPtrOutput)
}

// The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
func (o EndpointResponsePtrOutput) Subnets() EndpointPropertiesResponseSubnetsArrayOutput {
	return o.ApplyT(func(v *EndpointResponse) []EndpointPropertiesResponseSubnets {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(EndpointPropertiesResponseSubnetsArrayOutput)
}

// The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
func (o EndpointResponsePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
func (o EndpointResponsePtrOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.TargetResourceId
	}).(pulumi.StringPtrOutput)
}

// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
func (o EndpointResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
func (o EndpointResponsePtrOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointResponse) *int {
		if v == nil {
			return nil
		}
		return v.Weight
	}).(pulumi.IntPtrOutput)
}

type EndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (EndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointResponse)(nil)).Elem()
}

func (o EndpointResponseArrayOutput) ToEndpointResponseArrayOutput() EndpointResponseArrayOutput {
	return o
}

func (o EndpointResponseArrayOutput) ToEndpointResponseArrayOutputWithContext(ctx context.Context) EndpointResponseArrayOutput {
	return o
}

func (o EndpointResponseArrayOutput) Index(i pulumi.IntInput) EndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointResponse {
		return vs[0].([]EndpointResponse)[vs[1].(int)]
	}).(EndpointResponseOutput)
}

// Identifies the service being brought into the virtual network.
type EndpointService struct {
	// A unique identifier of the service being referenced by the interface endpoint.
	Id *string `pulumi:"id"`
}

// EndpointServiceInput is an input type that accepts EndpointServiceArgs and EndpointServiceOutput values.
// You can construct a concrete instance of `EndpointServiceInput` via:
//
//          EndpointServiceArgs{...}
type EndpointServiceInput interface {
	pulumi.Input

	ToEndpointServiceOutput() EndpointServiceOutput
	ToEndpointServiceOutputWithContext(context.Context) EndpointServiceOutput
}

// Identifies the service being brought into the virtual network.
type EndpointServiceArgs struct {
	// A unique identifier of the service being referenced by the interface endpoint.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (EndpointServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointService)(nil)).Elem()
}

func (i EndpointServiceArgs) ToEndpointServiceOutput() EndpointServiceOutput {
	return i.ToEndpointServiceOutputWithContext(context.Background())
}

func (i EndpointServiceArgs) ToEndpointServiceOutputWithContext(ctx context.Context) EndpointServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointServiceOutput)
}

func (i EndpointServiceArgs) ToEndpointServicePtrOutput() EndpointServicePtrOutput {
	return i.ToEndpointServicePtrOutputWithContext(context.Background())
}

func (i EndpointServiceArgs) ToEndpointServicePtrOutputWithContext(ctx context.Context) EndpointServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointServiceOutput).ToEndpointServicePtrOutputWithContext(ctx)
}

// EndpointServicePtrInput is an input type that accepts EndpointServiceArgs, EndpointServicePtr and EndpointServicePtrOutput values.
// You can construct a concrete instance of `EndpointServicePtrInput` via:
//
//          EndpointServiceArgs{...}
//
//  or:
//
//          nil
type EndpointServicePtrInput interface {
	pulumi.Input

	ToEndpointServicePtrOutput() EndpointServicePtrOutput
	ToEndpointServicePtrOutputWithContext(context.Context) EndpointServicePtrOutput
}

type endpointServicePtrType EndpointServiceArgs

func EndpointServicePtr(v *EndpointServiceArgs) EndpointServicePtrInput {
	return (*endpointServicePtrType)(v)
}

func (*endpointServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointService)(nil)).Elem()
}

func (i *endpointServicePtrType) ToEndpointServicePtrOutput() EndpointServicePtrOutput {
	return i.ToEndpointServicePtrOutputWithContext(context.Background())
}

func (i *endpointServicePtrType) ToEndpointServicePtrOutputWithContext(ctx context.Context) EndpointServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointServicePtrOutput)
}

// Identifies the service being brought into the virtual network.
type EndpointServiceOutput struct{ *pulumi.OutputState }

func (EndpointServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointService)(nil)).Elem()
}

func (o EndpointServiceOutput) ToEndpointServiceOutput() EndpointServiceOutput {
	return o
}

func (o EndpointServiceOutput) ToEndpointServiceOutputWithContext(ctx context.Context) EndpointServiceOutput {
	return o
}

func (o EndpointServiceOutput) ToEndpointServicePtrOutput() EndpointServicePtrOutput {
	return o.ToEndpointServicePtrOutputWithContext(context.Background())
}

func (o EndpointServiceOutput) ToEndpointServicePtrOutputWithContext(ctx context.Context) EndpointServicePtrOutput {
	return o.ApplyT(func(v EndpointService) *EndpointService {
		return &v
	}).(EndpointServicePtrOutput)
}

// A unique identifier of the service being referenced by the interface endpoint.
func (o EndpointServiceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointService) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type EndpointServicePtrOutput struct{ *pulumi.OutputState }

func (EndpointServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointService)(nil)).Elem()
}

func (o EndpointServicePtrOutput) ToEndpointServicePtrOutput() EndpointServicePtrOutput {
	return o
}

func (o EndpointServicePtrOutput) ToEndpointServicePtrOutputWithContext(ctx context.Context) EndpointServicePtrOutput {
	return o
}

func (o EndpointServicePtrOutput) Elem() EndpointServiceOutput {
	return o.ApplyT(func(v *EndpointService) EndpointService { return *v }).(EndpointServiceOutput)
}

// A unique identifier of the service being referenced by the interface endpoint.
func (o EndpointServicePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointService) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Identifies the service being brought into the virtual network.
type EndpointServiceResponse struct {
	// A unique identifier of the service being referenced by the interface endpoint.
	Id *string `pulumi:"id"`
}

// EndpointServiceResponseInput is an input type that accepts EndpointServiceResponseArgs and EndpointServiceResponseOutput values.
// You can construct a concrete instance of `EndpointServiceResponseInput` via:
//
//          EndpointServiceResponseArgs{...}
type EndpointServiceResponseInput interface {
	pulumi.Input

	ToEndpointServiceResponseOutput() EndpointServiceResponseOutput
	ToEndpointServiceResponseOutputWithContext(context.Context) EndpointServiceResponseOutput
}

// Identifies the service being brought into the virtual network.
type EndpointServiceResponseArgs struct {
	// A unique identifier of the service being referenced by the interface endpoint.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (EndpointServiceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointServiceResponse)(nil)).Elem()
}

func (i EndpointServiceResponseArgs) ToEndpointServiceResponseOutput() EndpointServiceResponseOutput {
	return i.ToEndpointServiceResponseOutputWithContext(context.Background())
}

func (i EndpointServiceResponseArgs) ToEndpointServiceResponseOutputWithContext(ctx context.Context) EndpointServiceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointServiceResponseOutput)
}

func (i EndpointServiceResponseArgs) ToEndpointServiceResponsePtrOutput() EndpointServiceResponsePtrOutput {
	return i.ToEndpointServiceResponsePtrOutputWithContext(context.Background())
}

func (i EndpointServiceResponseArgs) ToEndpointServiceResponsePtrOutputWithContext(ctx context.Context) EndpointServiceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointServiceResponseOutput).ToEndpointServiceResponsePtrOutputWithContext(ctx)
}

// EndpointServiceResponsePtrInput is an input type that accepts EndpointServiceResponseArgs, EndpointServiceResponsePtr and EndpointServiceResponsePtrOutput values.
// You can construct a concrete instance of `EndpointServiceResponsePtrInput` via:
//
//          EndpointServiceResponseArgs{...}
//
//  or:
//
//          nil
type EndpointServiceResponsePtrInput interface {
	pulumi.Input

	ToEndpointServiceResponsePtrOutput() EndpointServiceResponsePtrOutput
	ToEndpointServiceResponsePtrOutputWithContext(context.Context) EndpointServiceResponsePtrOutput
}

type endpointServiceResponsePtrType EndpointServiceResponseArgs

func EndpointServiceResponsePtr(v *EndpointServiceResponseArgs) EndpointServiceResponsePtrInput {
	return (*endpointServiceResponsePtrType)(v)
}

func (*endpointServiceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointServiceResponse)(nil)).Elem()
}

func (i *endpointServiceResponsePtrType) ToEndpointServiceResponsePtrOutput() EndpointServiceResponsePtrOutput {
	return i.ToEndpointServiceResponsePtrOutputWithContext(context.Background())
}

func (i *endpointServiceResponsePtrType) ToEndpointServiceResponsePtrOutputWithContext(ctx context.Context) EndpointServiceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointServiceResponsePtrOutput)
}

// Identifies the service being brought into the virtual network.
type EndpointServiceResponseOutput struct{ *pulumi.OutputState }

func (EndpointServiceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointServiceResponse)(nil)).Elem()
}

func (o EndpointServiceResponseOutput) ToEndpointServiceResponseOutput() EndpointServiceResponseOutput {
	return o
}

func (o EndpointServiceResponseOutput) ToEndpointServiceResponseOutputWithContext(ctx context.Context) EndpointServiceResponseOutput {
	return o
}

func (o EndpointServiceResponseOutput) ToEndpointServiceResponsePtrOutput() EndpointServiceResponsePtrOutput {
	return o.ToEndpointServiceResponsePtrOutputWithContext(context.Background())
}

func (o EndpointServiceResponseOutput) ToEndpointServiceResponsePtrOutputWithContext(ctx context.Context) EndpointServiceResponsePtrOutput {
	return o.ApplyT(func(v EndpointServiceResponse) *EndpointServiceResponse {
		return &v
	}).(EndpointServiceResponsePtrOutput)
}

// A unique identifier of the service being referenced by the interface endpoint.
func (o EndpointServiceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointServiceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type EndpointServiceResponsePtrOutput struct{ *pulumi.OutputState }

func (EndpointServiceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointServiceResponse)(nil)).Elem()
}

func (o EndpointServiceResponsePtrOutput) ToEndpointServiceResponsePtrOutput() EndpointServiceResponsePtrOutput {
	return o
}

func (o EndpointServiceResponsePtrOutput) ToEndpointServiceResponsePtrOutputWithContext(ctx context.Context) EndpointServiceResponsePtrOutput {
	return o
}

func (o EndpointServiceResponsePtrOutput) Elem() EndpointServiceResponseOutput {
	return o.ApplyT(func(v *EndpointServiceResponse) EndpointServiceResponse { return *v }).(EndpointServiceResponseOutput)
}

// A unique identifier of the service being referenced by the interface endpoint.
func (o EndpointServiceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointServiceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationType struct {
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// The authorization use status.
	AuthorizationUseStatus *string `pulumi:"authorizationUseStatus"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
}

// ExpressRouteCircuitAuthorizationTypeInput is an input type that accepts ExpressRouteCircuitAuthorizationTypeArgs and ExpressRouteCircuitAuthorizationTypeOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationTypeInput` via:
//
//          ExpressRouteCircuitAuthorizationTypeArgs{...}
type ExpressRouteCircuitAuthorizationTypeInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationTypeOutput() ExpressRouteCircuitAuthorizationTypeOutput
	ToExpressRouteCircuitAuthorizationTypeOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationTypeOutput
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationTypeArgs struct {
	// The authorization key.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// The authorization use status.
	AuthorizationUseStatus pulumi.StringPtrInput `pulumi:"authorizationUseStatus"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExpressRouteCircuitAuthorizationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationTypeArgs) ToExpressRouteCircuitAuthorizationTypeOutput() ExpressRouteCircuitAuthorizationTypeOutput {
	return i.ToExpressRouteCircuitAuthorizationTypeOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationTypeArgs) ToExpressRouteCircuitAuthorizationTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationTypeOutput)
}

// ExpressRouteCircuitAuthorizationTypeArrayInput is an input type that accepts ExpressRouteCircuitAuthorizationTypeArray and ExpressRouteCircuitAuthorizationTypeArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationTypeArrayInput` via:
//
//          ExpressRouteCircuitAuthorizationTypeArray{ ExpressRouteCircuitAuthorizationTypeArgs{...} }
type ExpressRouteCircuitAuthorizationTypeArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationTypeArrayOutput() ExpressRouteCircuitAuthorizationTypeArrayOutput
	ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationTypeArrayOutput
}

type ExpressRouteCircuitAuthorizationTypeArray []ExpressRouteCircuitAuthorizationTypeInput

func (ExpressRouteCircuitAuthorizationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationTypeArray) ToExpressRouteCircuitAuthorizationTypeArrayOutput() ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return i.ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationTypeArray) ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationTypeArrayOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationTypeOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationTypeOutput) ToExpressRouteCircuitAuthorizationTypeOutput() ExpressRouteCircuitAuthorizationTypeOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationTypeOutput) ToExpressRouteCircuitAuthorizationTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeOutput {
	return o
}

// The authorization key.
func (o ExpressRouteCircuitAuthorizationTypeOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// The authorization use status.
func (o ExpressRouteCircuitAuthorizationTypeOutput) AuthorizationUseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.AuthorizationUseStatus }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ExpressRouteCircuitAuthorizationTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitAuthorizationTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitAuthorizationTypeArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationTypeArrayOutput) ToExpressRouteCircuitAuthorizationTypeArrayOutput() ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationTypeArrayOutput) ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationTypeArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitAuthorizationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitAuthorizationType {
		return vs[0].([]ExpressRouteCircuitAuthorizationType)[vs[1].(int)]
	}).(ExpressRouteCircuitAuthorizationTypeOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationResponse struct {
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// The authorization use status.
	AuthorizationUseStatus *string `pulumi:"authorizationUseStatus"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the authorization resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// ExpressRouteCircuitAuthorizationResponseInput is an input type that accepts ExpressRouteCircuitAuthorizationResponseArgs and ExpressRouteCircuitAuthorizationResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationResponseInput` via:
//
//          ExpressRouteCircuitAuthorizationResponseArgs{...}
type ExpressRouteCircuitAuthorizationResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationResponseOutput() ExpressRouteCircuitAuthorizationResponseOutput
	ToExpressRouteCircuitAuthorizationResponseOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationResponseOutput
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationResponseArgs struct {
	// The authorization key.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// The authorization use status.
	AuthorizationUseStatus pulumi.StringPtrInput `pulumi:"authorizationUseStatus"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the authorization resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ExpressRouteCircuitAuthorizationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationResponseArgs) ToExpressRouteCircuitAuthorizationResponseOutput() ExpressRouteCircuitAuthorizationResponseOutput {
	return i.ToExpressRouteCircuitAuthorizationResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationResponseArgs) ToExpressRouteCircuitAuthorizationResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationResponseOutput)
}

// ExpressRouteCircuitAuthorizationResponseArrayInput is an input type that accepts ExpressRouteCircuitAuthorizationResponseArray and ExpressRouteCircuitAuthorizationResponseArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationResponseArrayInput` via:
//
//          ExpressRouteCircuitAuthorizationResponseArray{ ExpressRouteCircuitAuthorizationResponseArgs{...} }
type ExpressRouteCircuitAuthorizationResponseArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationResponseArrayOutput() ExpressRouteCircuitAuthorizationResponseArrayOutput
	ToExpressRouteCircuitAuthorizationResponseArrayOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationResponseArrayOutput
}

type ExpressRouteCircuitAuthorizationResponseArray []ExpressRouteCircuitAuthorizationResponseInput

func (ExpressRouteCircuitAuthorizationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationResponseArray) ToExpressRouteCircuitAuthorizationResponseArrayOutput() ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return i.ToExpressRouteCircuitAuthorizationResponseArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationResponseArray) ToExpressRouteCircuitAuthorizationResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationResponseArrayOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationResponseOutput) ToExpressRouteCircuitAuthorizationResponseOutput() ExpressRouteCircuitAuthorizationResponseOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationResponseOutput) ToExpressRouteCircuitAuthorizationResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationResponseOutput {
	return o
}

// The authorization key.
func (o ExpressRouteCircuitAuthorizationResponseOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// The authorization use status.
func (o ExpressRouteCircuitAuthorizationResponseOutput) AuthorizationUseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.AuthorizationUseStatus }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitAuthorizationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ExpressRouteCircuitAuthorizationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitAuthorizationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the authorization resource.
func (o ExpressRouteCircuitAuthorizationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ExpressRouteCircuitAuthorizationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ExpressRouteCircuitAuthorizationResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationResponseArrayOutput) ToExpressRouteCircuitAuthorizationResponseArrayOutput() ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationResponseArrayOutput) ToExpressRouteCircuitAuthorizationResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitAuthorizationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitAuthorizationResponse {
		return vs[0].([]ExpressRouteCircuitAuthorizationResponse)[vs[1].(int)]
	}).(ExpressRouteCircuitAuthorizationResponseOutput)
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionType struct {
	// /29 IP address space to carve out Customer addresses for tunnels.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
	ExpressRouteCircuitPeering *SubResource `pulumi:"expressRouteCircuitPeering"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// IPv6 Address PrefixProperties of the express route circuit connection.
	Ipv6CircuitConnectionConfig *Ipv6CircuitConnectionConfig `pulumi:"ipv6CircuitConnectionConfig"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
	PeerExpressRouteCircuitPeering *SubResource `pulumi:"peerExpressRouteCircuitPeering"`
}

// ExpressRouteCircuitConnectionTypeInput is an input type that accepts ExpressRouteCircuitConnectionTypeArgs and ExpressRouteCircuitConnectionTypeOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitConnectionTypeInput` via:
//
//          ExpressRouteCircuitConnectionTypeArgs{...}
type ExpressRouteCircuitConnectionTypeInput interface {
	pulumi.Input

	ToExpressRouteCircuitConnectionTypeOutput() ExpressRouteCircuitConnectionTypeOutput
	ToExpressRouteCircuitConnectionTypeOutputWithContext(context.Context) ExpressRouteCircuitConnectionTypeOutput
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionTypeArgs struct {
	// /29 IP address space to carve out Customer addresses for tunnels.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// The authorization key.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
	ExpressRouteCircuitPeering SubResourcePtrInput `pulumi:"expressRouteCircuitPeering"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// IPv6 Address PrefixProperties of the express route circuit connection.
	Ipv6CircuitConnectionConfig Ipv6CircuitConnectionConfigPtrInput `pulumi:"ipv6CircuitConnectionConfig"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
	PeerExpressRouteCircuitPeering SubResourcePtrInput `pulumi:"peerExpressRouteCircuitPeering"`
}

func (ExpressRouteCircuitConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitConnectionType)(nil)).Elem()
}

func (i ExpressRouteCircuitConnectionTypeArgs) ToExpressRouteCircuitConnectionTypeOutput() ExpressRouteCircuitConnectionTypeOutput {
	return i.ToExpressRouteCircuitConnectionTypeOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitConnectionTypeArgs) ToExpressRouteCircuitConnectionTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionTypeOutput)
}

// ExpressRouteCircuitConnectionTypeArrayInput is an input type that accepts ExpressRouteCircuitConnectionTypeArray and ExpressRouteCircuitConnectionTypeArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitConnectionTypeArrayInput` via:
//
//          ExpressRouteCircuitConnectionTypeArray{ ExpressRouteCircuitConnectionTypeArgs{...} }
type ExpressRouteCircuitConnectionTypeArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitConnectionTypeArrayOutput() ExpressRouteCircuitConnectionTypeArrayOutput
	ToExpressRouteCircuitConnectionTypeArrayOutputWithContext(context.Context) ExpressRouteCircuitConnectionTypeArrayOutput
}

type ExpressRouteCircuitConnectionTypeArray []ExpressRouteCircuitConnectionTypeInput

func (ExpressRouteCircuitConnectionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitConnectionType)(nil)).Elem()
}

func (i ExpressRouteCircuitConnectionTypeArray) ToExpressRouteCircuitConnectionTypeArrayOutput() ExpressRouteCircuitConnectionTypeArrayOutput {
	return i.ToExpressRouteCircuitConnectionTypeArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitConnectionTypeArray) ToExpressRouteCircuitConnectionTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionTypeArrayOutput)
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionTypeOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitConnectionType)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionTypeOutput) ToExpressRouteCircuitConnectionTypeOutput() ExpressRouteCircuitConnectionTypeOutput {
	return o
}

func (o ExpressRouteCircuitConnectionTypeOutput) ToExpressRouteCircuitConnectionTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionTypeOutput {
	return o
}

// /29 IP address space to carve out Customer addresses for tunnels.
func (o ExpressRouteCircuitConnectionTypeOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// The authorization key.
func (o ExpressRouteCircuitConnectionTypeOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
func (o ExpressRouteCircuitConnectionTypeOutput) ExpressRouteCircuitPeering() SubResourcePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *SubResource { return v.ExpressRouteCircuitPeering }).(SubResourcePtrOutput)
}

// Resource ID.
func (o ExpressRouteCircuitConnectionTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// IPv6 Address PrefixProperties of the express route circuit connection.
func (o ExpressRouteCircuitConnectionTypeOutput) Ipv6CircuitConnectionConfig() Ipv6CircuitConnectionConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *Ipv6CircuitConnectionConfig {
		return v.Ipv6CircuitConnectionConfig
	}).(Ipv6CircuitConnectionConfigPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitConnectionTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
func (o ExpressRouteCircuitConnectionTypeOutput) PeerExpressRouteCircuitPeering() SubResourcePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *SubResource { return v.PeerExpressRouteCircuitPeering }).(SubResourcePtrOutput)
}

type ExpressRouteCircuitConnectionTypeArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitConnectionType)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionTypeArrayOutput) ToExpressRouteCircuitConnectionTypeArrayOutput() ExpressRouteCircuitConnectionTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitConnectionTypeArrayOutput) ToExpressRouteCircuitConnectionTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitConnectionTypeArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitConnectionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitConnectionType {
		return vs[0].([]ExpressRouteCircuitConnectionType)[vs[1].(int)]
	}).(ExpressRouteCircuitConnectionTypeOutput)
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionResponse struct {
	// /29 IP address space to carve out Customer addresses for tunnels.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// Express Route Circuit connection state.
	CircuitConnectionStatus string `pulumi:"circuitConnectionStatus"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
	ExpressRouteCircuitPeering *SubResourceResponse `pulumi:"expressRouteCircuitPeering"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// IPv6 Address PrefixProperties of the express route circuit connection.
	Ipv6CircuitConnectionConfig *Ipv6CircuitConnectionConfigResponse `pulumi:"ipv6CircuitConnectionConfig"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
	PeerExpressRouteCircuitPeering *SubResourceResponse `pulumi:"peerExpressRouteCircuitPeering"`
	// The provisioning state of the express route circuit connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// ExpressRouteCircuitConnectionResponseInput is an input type that accepts ExpressRouteCircuitConnectionResponseArgs and ExpressRouteCircuitConnectionResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitConnectionResponseInput` via:
//
//          ExpressRouteCircuitConnectionResponseArgs{...}
type ExpressRouteCircuitConnectionResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitConnectionResponseOutput() ExpressRouteCircuitConnectionResponseOutput
	ToExpressRouteCircuitConnectionResponseOutputWithContext(context.Context) ExpressRouteCircuitConnectionResponseOutput
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionResponseArgs struct {
	// /29 IP address space to carve out Customer addresses for tunnels.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// The authorization key.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// Express Route Circuit connection state.
	CircuitConnectionStatus pulumi.StringInput `pulumi:"circuitConnectionStatus"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
	ExpressRouteCircuitPeering SubResourceResponsePtrInput `pulumi:"expressRouteCircuitPeering"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// IPv6 Address PrefixProperties of the express route circuit connection.
	Ipv6CircuitConnectionConfig Ipv6CircuitConnectionConfigResponsePtrInput `pulumi:"ipv6CircuitConnectionConfig"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
	PeerExpressRouteCircuitPeering SubResourceResponsePtrInput `pulumi:"peerExpressRouteCircuitPeering"`
	// The provisioning state of the express route circuit connection resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ExpressRouteCircuitConnectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitConnectionResponseArgs) ToExpressRouteCircuitConnectionResponseOutput() ExpressRouteCircuitConnectionResponseOutput {
	return i.ToExpressRouteCircuitConnectionResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitConnectionResponseArgs) ToExpressRouteCircuitConnectionResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionResponseOutput)
}

// ExpressRouteCircuitConnectionResponseArrayInput is an input type that accepts ExpressRouteCircuitConnectionResponseArray and ExpressRouteCircuitConnectionResponseArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitConnectionResponseArrayInput` via:
//
//          ExpressRouteCircuitConnectionResponseArray{ ExpressRouteCircuitConnectionResponseArgs{...} }
type ExpressRouteCircuitConnectionResponseArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitConnectionResponseArrayOutput() ExpressRouteCircuitConnectionResponseArrayOutput
	ToExpressRouteCircuitConnectionResponseArrayOutputWithContext(context.Context) ExpressRouteCircuitConnectionResponseArrayOutput
}

type ExpressRouteCircuitConnectionResponseArray []ExpressRouteCircuitConnectionResponseInput

func (ExpressRouteCircuitConnectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitConnectionResponseArray) ToExpressRouteCircuitConnectionResponseArrayOutput() ExpressRouteCircuitConnectionResponseArrayOutput {
	return i.ToExpressRouteCircuitConnectionResponseArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitConnectionResponseArray) ToExpressRouteCircuitConnectionResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionResponseArrayOutput)
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionResponseOutput) ToExpressRouteCircuitConnectionResponseOutput() ExpressRouteCircuitConnectionResponseOutput {
	return o
}

func (o ExpressRouteCircuitConnectionResponseOutput) ToExpressRouteCircuitConnectionResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionResponseOutput {
	return o
}

// /29 IP address space to carve out Customer addresses for tunnels.
func (o ExpressRouteCircuitConnectionResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// The authorization key.
func (o ExpressRouteCircuitConnectionResponseOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// Express Route Circuit connection state.
func (o ExpressRouteCircuitConnectionResponseOutput) CircuitConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) string { return v.CircuitConnectionStatus }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
func (o ExpressRouteCircuitConnectionResponseOutput) ExpressRouteCircuitPeering() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *SubResourceResponse {
		return v.ExpressRouteCircuitPeering
	}).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o ExpressRouteCircuitConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// IPv6 Address PrefixProperties of the express route circuit connection.
func (o ExpressRouteCircuitConnectionResponseOutput) Ipv6CircuitConnectionConfig() Ipv6CircuitConnectionConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *Ipv6CircuitConnectionConfigResponse {
		return v.Ipv6CircuitConnectionConfig
	}).(Ipv6CircuitConnectionConfigResponsePtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
func (o ExpressRouteCircuitConnectionResponseOutput) PeerExpressRouteCircuitPeering() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *SubResourceResponse {
		return v.PeerExpressRouteCircuitPeering
	}).(SubResourceResponsePtrOutput)
}

// The provisioning state of the express route circuit connection resource.
func (o ExpressRouteCircuitConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o ExpressRouteCircuitConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ExpressRouteCircuitConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionResponseArrayOutput) ToExpressRouteCircuitConnectionResponseArrayOutput() ExpressRouteCircuitConnectionResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitConnectionResponseArrayOutput) ToExpressRouteCircuitConnectionResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitConnectionResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitConnectionResponse {
		return vs[0].([]ExpressRouteCircuitConnectionResponse)[vs[1].(int)]
	}).(ExpressRouteCircuitConnectionResponseOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringType struct {
	// The Azure ASN.
	AzureASN *int `pulumi:"azureASN"`
	// The list of circuit connections associated with Azure Private Peering for this circuit.
	Connections []ExpressRouteCircuitConnectionType `pulumi:"connections"`
	// The GatewayManager Etag.
	GatewayManagerEtag *string `pulumi:"gatewayManagerEtag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The IPv6 peering configuration.
	Ipv6PeeringConfig *Ipv6ExpressRouteCircuitPeeringConfig `pulumi:"ipv6PeeringConfig"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfig `pulumi:"microsoftPeeringConfig"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The peer ASN.
	PeerASN *int `pulumi:"peerASN"`
	// The peering type.
	PeeringType *string `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort *string `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// The reference to the RouteFilter resource.
	RouteFilter *SubResource `pulumi:"routeFilter"`
	// The secondary port.
	SecondaryAzurePort *string `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey *string `pulumi:"sharedKey"`
	// The peering state.
	State *string `pulumi:"state"`
	// The peering stats of express route circuit.
	Stats *ExpressRouteCircuitStats `pulumi:"stats"`
	// The VLAN ID.
	VlanId *int `pulumi:"vlanId"`
}

// ExpressRouteCircuitPeeringTypeInput is an input type that accepts ExpressRouteCircuitPeeringTypeArgs and ExpressRouteCircuitPeeringTypeOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringTypeInput` via:
//
//          ExpressRouteCircuitPeeringTypeArgs{...}
type ExpressRouteCircuitPeeringTypeInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringTypeOutput() ExpressRouteCircuitPeeringTypeOutput
	ToExpressRouteCircuitPeeringTypeOutputWithContext(context.Context) ExpressRouteCircuitPeeringTypeOutput
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringTypeArgs struct {
	// The Azure ASN.
	AzureASN pulumi.IntPtrInput `pulumi:"azureASN"`
	// The list of circuit connections associated with Azure Private Peering for this circuit.
	Connections ExpressRouteCircuitConnectionTypeArrayInput `pulumi:"connections"`
	// The GatewayManager Etag.
	GatewayManagerEtag pulumi.StringPtrInput `pulumi:"gatewayManagerEtag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The IPv6 peering configuration.
	Ipv6PeeringConfig Ipv6ExpressRouteCircuitPeeringConfigPtrInput `pulumi:"ipv6PeeringConfig"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig ExpressRouteCircuitPeeringConfigPtrInput `pulumi:"microsoftPeeringConfig"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The peer ASN.
	PeerASN pulumi.IntPtrInput `pulumi:"peerASN"`
	// The peering type.
	PeeringType pulumi.StringPtrInput `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort pulumi.StringPtrInput `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"primaryPeerAddressPrefix"`
	// The reference to the RouteFilter resource.
	RouteFilter SubResourcePtrInput `pulumi:"routeFilter"`
	// The secondary port.
	SecondaryAzurePort pulumi.StringPtrInput `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// The peering state.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The peering stats of express route circuit.
	Stats ExpressRouteCircuitStatsPtrInput `pulumi:"stats"`
	// The VLAN ID.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (ExpressRouteCircuitPeeringTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringTypeArgs) ToExpressRouteCircuitPeeringTypeOutput() ExpressRouteCircuitPeeringTypeOutput {
	return i.ToExpressRouteCircuitPeeringTypeOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringTypeArgs) ToExpressRouteCircuitPeeringTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringTypeOutput)
}

// ExpressRouteCircuitPeeringTypeArrayInput is an input type that accepts ExpressRouteCircuitPeeringTypeArray and ExpressRouteCircuitPeeringTypeArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringTypeArrayInput` via:
//
//          ExpressRouteCircuitPeeringTypeArray{ ExpressRouteCircuitPeeringTypeArgs{...} }
type ExpressRouteCircuitPeeringTypeArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringTypeArrayOutput() ExpressRouteCircuitPeeringTypeArrayOutput
	ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(context.Context) ExpressRouteCircuitPeeringTypeArrayOutput
}

type ExpressRouteCircuitPeeringTypeArray []ExpressRouteCircuitPeeringTypeInput

func (ExpressRouteCircuitPeeringTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringTypeArray) ToExpressRouteCircuitPeeringTypeArrayOutput() ExpressRouteCircuitPeeringTypeArrayOutput {
	return i.ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringTypeArray) ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringTypeArrayOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringTypeOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringTypeOutput) ToExpressRouteCircuitPeeringTypeOutput() ExpressRouteCircuitPeeringTypeOutput {
	return o
}

func (o ExpressRouteCircuitPeeringTypeOutput) ToExpressRouteCircuitPeeringTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeOutput {
	return o
}

// The Azure ASN.
func (o ExpressRouteCircuitPeeringTypeOutput) AzureASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *int { return v.AzureASN }).(pulumi.IntPtrOutput)
}

// The list of circuit connections associated with Azure Private Peering for this circuit.
func (o ExpressRouteCircuitPeeringTypeOutput) Connections() ExpressRouteCircuitConnectionTypeArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) []ExpressRouteCircuitConnectionType { return v.Connections }).(ExpressRouteCircuitConnectionTypeArrayOutput)
}

// The GatewayManager Etag.
func (o ExpressRouteCircuitPeeringTypeOutput) GatewayManagerEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.GatewayManagerEtag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ExpressRouteCircuitPeeringTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IPv6 peering configuration.
func (o ExpressRouteCircuitPeeringTypeOutput) Ipv6PeeringConfig() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *Ipv6ExpressRouteCircuitPeeringConfig {
		return v.Ipv6PeeringConfig
	}).(Ipv6ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The Microsoft peering configuration.
func (o ExpressRouteCircuitPeeringTypeOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *ExpressRouteCircuitPeeringConfig {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitPeeringTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The peer ASN.
func (o ExpressRouteCircuitPeeringTypeOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *int { return v.PeerASN }).(pulumi.IntPtrOutput)
}

// The peering type.
func (o ExpressRouteCircuitPeeringTypeOutput) PeeringType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.PeeringType }).(pulumi.StringPtrOutput)
}

// The primary port.
func (o ExpressRouteCircuitPeeringTypeOutput) PrimaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.PrimaryAzurePort }).(pulumi.StringPtrOutput)
}

// The primary address prefix.
func (o ExpressRouteCircuitPeeringTypeOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The reference to the RouteFilter resource.
func (o ExpressRouteCircuitPeeringTypeOutput) RouteFilter() SubResourcePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *SubResource { return v.RouteFilter }).(SubResourcePtrOutput)
}

// The secondary port.
func (o ExpressRouteCircuitPeeringTypeOutput) SecondaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.SecondaryAzurePort }).(pulumi.StringPtrOutput)
}

// The secondary address prefix.
func (o ExpressRouteCircuitPeeringTypeOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The shared key.
func (o ExpressRouteCircuitPeeringTypeOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// The peering state.
func (o ExpressRouteCircuitPeeringTypeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The peering stats of express route circuit.
func (o ExpressRouteCircuitPeeringTypeOutput) Stats() ExpressRouteCircuitStatsPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *ExpressRouteCircuitStats { return v.Stats }).(ExpressRouteCircuitStatsPtrOutput)
}

// The VLAN ID.
func (o ExpressRouteCircuitPeeringTypeOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitPeeringTypeArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringTypeArrayOutput) ToExpressRouteCircuitPeeringTypeArrayOutput() ExpressRouteCircuitPeeringTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringTypeArrayOutput) ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringTypeArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitPeeringTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitPeeringType {
		return vs[0].([]ExpressRouteCircuitPeeringType)[vs[1].(int)]
	}).(ExpressRouteCircuitPeeringTypeOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfig struct {
	// The communities of bgp peering. Specified for microsoft peering.
	AdvertisedCommunities []string `pulumi:"advertisedCommunities"`
	// The reference to AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes []string `pulumi:"advertisedPublicPrefixes"`
	// The CustomerASN of the peering.
	CustomerASN *int `pulumi:"customerASN"`
	// The legacy mode of the peering.
	LegacyMode *int `pulumi:"legacyMode"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName *string `pulumi:"routingRegistryName"`
}

// ExpressRouteCircuitPeeringConfigInput is an input type that accepts ExpressRouteCircuitPeeringConfigArgs and ExpressRouteCircuitPeeringConfigOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigInput` via:
//
//          ExpressRouteCircuitPeeringConfigArgs{...}
type ExpressRouteCircuitPeeringConfigInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigOutput() ExpressRouteCircuitPeeringConfigOutput
	ToExpressRouteCircuitPeeringConfigOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigOutput
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigArgs struct {
	// The communities of bgp peering. Specified for microsoft peering.
	AdvertisedCommunities pulumi.StringArrayInput `pulumi:"advertisedCommunities"`
	// The reference to AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes pulumi.StringArrayInput `pulumi:"advertisedPublicPrefixes"`
	// The CustomerASN of the peering.
	CustomerASN pulumi.IntPtrInput `pulumi:"customerASN"`
	// The legacy mode of the peering.
	LegacyMode pulumi.IntPtrInput `pulumi:"legacyMode"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName pulumi.StringPtrInput `pulumi:"routingRegistryName"`
}

func (ExpressRouteCircuitPeeringConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigOutput() ExpressRouteCircuitPeeringConfigOutput {
	return i.ToExpressRouteCircuitPeeringConfigOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigOutput)
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigOutput).ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPeeringConfigPtrInput is an input type that accepts ExpressRouteCircuitPeeringConfigArgs, ExpressRouteCircuitPeeringConfigPtr and ExpressRouteCircuitPeeringConfigPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigPtrInput` via:
//
//          ExpressRouteCircuitPeeringConfigArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitPeeringConfigPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput
	ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigPtrOutput
}

type expressRouteCircuitPeeringConfigPtrType ExpressRouteCircuitPeeringConfigArgs

func ExpressRouteCircuitPeeringConfigPtr(v *ExpressRouteCircuitPeeringConfigArgs) ExpressRouteCircuitPeeringConfigPtrInput {
	return (*expressRouteCircuitPeeringConfigPtrType)(v)
}

func (*expressRouteCircuitPeeringConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (i *expressRouteCircuitPeeringConfigPtrType) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPeeringConfigPtrType) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigOutput() ExpressRouteCircuitPeeringConfigOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *ExpressRouteCircuitPeeringConfig {
		return &v
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The communities of bgp peering. Specified for microsoft peering.
func (o ExpressRouteCircuitPeeringConfigOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) []string { return v.AdvertisedCommunities }).(pulumi.StringArrayOutput)
}

// The reference to AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) []string { return v.AdvertisedPublicPrefixes }).(pulumi.StringArrayOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *int { return v.CustomerASN }).(pulumi.IntPtrOutput)
}

// The legacy mode of the peering.
func (o ExpressRouteCircuitPeeringConfigOutput) LegacyMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *int { return v.LegacyMode }).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *string { return v.RoutingRegistryName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringConfigPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigPtrOutput) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigPtrOutput) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigPtrOutput) Elem() ExpressRouteCircuitPeeringConfigOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) ExpressRouteCircuitPeeringConfig { return *v }).(ExpressRouteCircuitPeeringConfigOutput)
}

// The communities of bgp peering. Specified for microsoft peering.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedCommunities
	}).(pulumi.StringArrayOutput)
}

// The reference to AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixes
	}).(pulumi.StringArrayOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) *int {
		if v == nil {
			return nil
		}
		return v.CustomerASN
	}).(pulumi.IntPtrOutput)
}

// The legacy mode of the peering.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) LegacyMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) *int {
		if v == nil {
			return nil
		}
		return v.LegacyMode
	}).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.RoutingRegistryName
	}).(pulumi.StringPtrOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigResponse struct {
	// The communities of bgp peering. Specified for microsoft peering.
	AdvertisedCommunities []string `pulumi:"advertisedCommunities"`
	// The reference to AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes []string `pulumi:"advertisedPublicPrefixes"`
	// The advertised public prefix state of the Peering resource.
	AdvertisedPublicPrefixesState string `pulumi:"advertisedPublicPrefixesState"`
	// The CustomerASN of the peering.
	CustomerASN *int `pulumi:"customerASN"`
	// The legacy mode of the peering.
	LegacyMode *int `pulumi:"legacyMode"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName *string `pulumi:"routingRegistryName"`
}

// ExpressRouteCircuitPeeringConfigResponseInput is an input type that accepts ExpressRouteCircuitPeeringConfigResponseArgs and ExpressRouteCircuitPeeringConfigResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigResponseInput` via:
//
//          ExpressRouteCircuitPeeringConfigResponseArgs{...}
type ExpressRouteCircuitPeeringConfigResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigResponseOutput() ExpressRouteCircuitPeeringConfigResponseOutput
	ToExpressRouteCircuitPeeringConfigResponseOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigResponseOutput
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigResponseArgs struct {
	// The communities of bgp peering. Specified for microsoft peering.
	AdvertisedCommunities pulumi.StringArrayInput `pulumi:"advertisedCommunities"`
	// The reference to AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes pulumi.StringArrayInput `pulumi:"advertisedPublicPrefixes"`
	// The advertised public prefix state of the Peering resource.
	AdvertisedPublicPrefixesState pulumi.StringInput `pulumi:"advertisedPublicPrefixesState"`
	// The CustomerASN of the peering.
	CustomerASN pulumi.IntPtrInput `pulumi:"customerASN"`
	// The legacy mode of the peering.
	LegacyMode pulumi.IntPtrInput `pulumi:"legacyMode"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName pulumi.StringPtrInput `pulumi:"routingRegistryName"`
}

func (ExpressRouteCircuitPeeringConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringConfigResponseArgs) ToExpressRouteCircuitPeeringConfigResponseOutput() ExpressRouteCircuitPeeringConfigResponseOutput {
	return i.ToExpressRouteCircuitPeeringConfigResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigResponseArgs) ToExpressRouteCircuitPeeringConfigResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigResponseOutput)
}

func (i ExpressRouteCircuitPeeringConfigResponseArgs) ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigResponseArgs) ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigResponseOutput).ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPeeringConfigResponsePtrInput is an input type that accepts ExpressRouteCircuitPeeringConfigResponseArgs, ExpressRouteCircuitPeeringConfigResponsePtr and ExpressRouteCircuitPeeringConfigResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigResponsePtrInput` via:
//
//          ExpressRouteCircuitPeeringConfigResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitPeeringConfigResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput
	ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput
}

type expressRouteCircuitPeeringConfigResponsePtrType ExpressRouteCircuitPeeringConfigResponseArgs

func ExpressRouteCircuitPeeringConfigResponsePtr(v *ExpressRouteCircuitPeeringConfigResponseArgs) ExpressRouteCircuitPeeringConfigResponsePtrInput {
	return (*expressRouteCircuitPeeringConfigResponsePtrType)(v)
}

func (*expressRouteCircuitPeeringConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (i *expressRouteCircuitPeeringConfigResponsePtrType) ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPeeringConfigResponsePtrType) ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigResponseOutput) ToExpressRouteCircuitPeeringConfigResponseOutput() ExpressRouteCircuitPeeringConfigResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigResponseOutput) ToExpressRouteCircuitPeeringConfigResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigResponseOutput) ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringConfigResponseOutput) ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *ExpressRouteCircuitPeeringConfigResponse {
		return &v
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The communities of bgp peering. Specified for microsoft peering.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) []string { return v.AdvertisedCommunities }).(pulumi.StringArrayOutput)
}

// The reference to AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) []string { return v.AdvertisedPublicPrefixes }).(pulumi.StringArrayOutput)
}

// The advertised public prefix state of the Peering resource.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) AdvertisedPublicPrefixesState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) string { return v.AdvertisedPublicPrefixesState }).(pulumi.StringOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *int { return v.CustomerASN }).(pulumi.IntPtrOutput)
}

// The legacy mode of the peering.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) LegacyMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *int { return v.LegacyMode }).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *string { return v.RoutingRegistryName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) Elem() ExpressRouteCircuitPeeringConfigResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) ExpressRouteCircuitPeeringConfigResponse { return *v }).(ExpressRouteCircuitPeeringConfigResponseOutput)
}

// The communities of bgp peering. Specified for microsoft peering.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedCommunities
	}).(pulumi.StringArrayOutput)
}

// The reference to AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixes
	}).(pulumi.StringArrayOutput)
}

// The advertised public prefix state of the Peering resource.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) AdvertisedPublicPrefixesState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.AdvertisedPublicPrefixesState
	}).(pulumi.StringPtrOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.CustomerASN
	}).(pulumi.IntPtrOutput)
}

// The legacy mode of the peering.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) LegacyMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.LegacyMode
	}).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.RoutingRegistryName
	}).(pulumi.StringPtrOutput)
}

// ExpressRoute circuit peering identifier.
type ExpressRouteCircuitPeeringId struct {
	// The ID of the ExpressRoute circuit peering.
	Id *string `pulumi:"id"`
}

// ExpressRouteCircuitPeeringIdInput is an input type that accepts ExpressRouteCircuitPeeringIdArgs and ExpressRouteCircuitPeeringIdOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringIdInput` via:
//
//          ExpressRouteCircuitPeeringIdArgs{...}
type ExpressRouteCircuitPeeringIdInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringIdOutput() ExpressRouteCircuitPeeringIdOutput
	ToExpressRouteCircuitPeeringIdOutputWithContext(context.Context) ExpressRouteCircuitPeeringIdOutput
}

// ExpressRoute circuit peering identifier.
type ExpressRouteCircuitPeeringIdArgs struct {
	// The ID of the ExpressRoute circuit peering.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ExpressRouteCircuitPeeringIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringId)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringIdArgs) ToExpressRouteCircuitPeeringIdOutput() ExpressRouteCircuitPeeringIdOutput {
	return i.ToExpressRouteCircuitPeeringIdOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringIdArgs) ToExpressRouteCircuitPeeringIdOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringIdOutput)
}

func (i ExpressRouteCircuitPeeringIdArgs) ToExpressRouteCircuitPeeringIdPtrOutput() ExpressRouteCircuitPeeringIdPtrOutput {
	return i.ToExpressRouteCircuitPeeringIdPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringIdArgs) ToExpressRouteCircuitPeeringIdPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringIdOutput).ToExpressRouteCircuitPeeringIdPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPeeringIdPtrInput is an input type that accepts ExpressRouteCircuitPeeringIdArgs, ExpressRouteCircuitPeeringIdPtr and ExpressRouteCircuitPeeringIdPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringIdPtrInput` via:
//
//          ExpressRouteCircuitPeeringIdArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitPeeringIdPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringIdPtrOutput() ExpressRouteCircuitPeeringIdPtrOutput
	ToExpressRouteCircuitPeeringIdPtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringIdPtrOutput
}

type expressRouteCircuitPeeringIdPtrType ExpressRouteCircuitPeeringIdArgs

func ExpressRouteCircuitPeeringIdPtr(v *ExpressRouteCircuitPeeringIdArgs) ExpressRouteCircuitPeeringIdPtrInput {
	return (*expressRouteCircuitPeeringIdPtrType)(v)
}

func (*expressRouteCircuitPeeringIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringId)(nil)).Elem()
}

func (i *expressRouteCircuitPeeringIdPtrType) ToExpressRouteCircuitPeeringIdPtrOutput() ExpressRouteCircuitPeeringIdPtrOutput {
	return i.ToExpressRouteCircuitPeeringIdPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPeeringIdPtrType) ToExpressRouteCircuitPeeringIdPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringIdPtrOutput)
}

// ExpressRoute circuit peering identifier.
type ExpressRouteCircuitPeeringIdOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringId)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringIdOutput) ToExpressRouteCircuitPeeringIdOutput() ExpressRouteCircuitPeeringIdOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIdOutput) ToExpressRouteCircuitPeeringIdOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIdOutput) ToExpressRouteCircuitPeeringIdPtrOutput() ExpressRouteCircuitPeeringIdPtrOutput {
	return o.ToExpressRouteCircuitPeeringIdPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringIdOutput) ToExpressRouteCircuitPeeringIdPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringId) *ExpressRouteCircuitPeeringId {
		return &v
	}).(ExpressRouteCircuitPeeringIdPtrOutput)
}

// The ID of the ExpressRoute circuit peering.
func (o ExpressRouteCircuitPeeringIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringIdPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringId)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringIdPtrOutput) ToExpressRouteCircuitPeeringIdPtrOutput() ExpressRouteCircuitPeeringIdPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIdPtrOutput) ToExpressRouteCircuitPeeringIdPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIdPtrOutput) Elem() ExpressRouteCircuitPeeringIdOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringId) ExpressRouteCircuitPeeringId { return *v }).(ExpressRouteCircuitPeeringIdOutput)
}

// The ID of the ExpressRoute circuit peering.
func (o ExpressRouteCircuitPeeringIdPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringId) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// ExpressRoute circuit peering identifier.
type ExpressRouteCircuitPeeringIdResponse struct {
	// The ID of the ExpressRoute circuit peering.
	Id *string `pulumi:"id"`
}

// ExpressRouteCircuitPeeringIdResponseInput is an input type that accepts ExpressRouteCircuitPeeringIdResponseArgs and ExpressRouteCircuitPeeringIdResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringIdResponseInput` via:
//
//          ExpressRouteCircuitPeeringIdResponseArgs{...}
type ExpressRouteCircuitPeeringIdResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringIdResponseOutput() ExpressRouteCircuitPeeringIdResponseOutput
	ToExpressRouteCircuitPeeringIdResponseOutputWithContext(context.Context) ExpressRouteCircuitPeeringIdResponseOutput
}

// ExpressRoute circuit peering identifier.
type ExpressRouteCircuitPeeringIdResponseArgs struct {
	// The ID of the ExpressRoute circuit peering.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ExpressRouteCircuitPeeringIdResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringIdResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringIdResponseArgs) ToExpressRouteCircuitPeeringIdResponseOutput() ExpressRouteCircuitPeeringIdResponseOutput {
	return i.ToExpressRouteCircuitPeeringIdResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringIdResponseArgs) ToExpressRouteCircuitPeeringIdResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringIdResponseOutput)
}

func (i ExpressRouteCircuitPeeringIdResponseArgs) ToExpressRouteCircuitPeeringIdResponsePtrOutput() ExpressRouteCircuitPeeringIdResponsePtrOutput {
	return i.ToExpressRouteCircuitPeeringIdResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringIdResponseArgs) ToExpressRouteCircuitPeeringIdResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringIdResponseOutput).ToExpressRouteCircuitPeeringIdResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPeeringIdResponsePtrInput is an input type that accepts ExpressRouteCircuitPeeringIdResponseArgs, ExpressRouteCircuitPeeringIdResponsePtr and ExpressRouteCircuitPeeringIdResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringIdResponsePtrInput` via:
//
//          ExpressRouteCircuitPeeringIdResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitPeeringIdResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringIdResponsePtrOutput() ExpressRouteCircuitPeeringIdResponsePtrOutput
	ToExpressRouteCircuitPeeringIdResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringIdResponsePtrOutput
}

type expressRouteCircuitPeeringIdResponsePtrType ExpressRouteCircuitPeeringIdResponseArgs

func ExpressRouteCircuitPeeringIdResponsePtr(v *ExpressRouteCircuitPeeringIdResponseArgs) ExpressRouteCircuitPeeringIdResponsePtrInput {
	return (*expressRouteCircuitPeeringIdResponsePtrType)(v)
}

func (*expressRouteCircuitPeeringIdResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringIdResponse)(nil)).Elem()
}

func (i *expressRouteCircuitPeeringIdResponsePtrType) ToExpressRouteCircuitPeeringIdResponsePtrOutput() ExpressRouteCircuitPeeringIdResponsePtrOutput {
	return i.ToExpressRouteCircuitPeeringIdResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPeeringIdResponsePtrType) ToExpressRouteCircuitPeeringIdResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringIdResponsePtrOutput)
}

// ExpressRoute circuit peering identifier.
type ExpressRouteCircuitPeeringIdResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringIdResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringIdResponseOutput) ToExpressRouteCircuitPeeringIdResponseOutput() ExpressRouteCircuitPeeringIdResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIdResponseOutput) ToExpressRouteCircuitPeeringIdResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIdResponseOutput) ToExpressRouteCircuitPeeringIdResponsePtrOutput() ExpressRouteCircuitPeeringIdResponsePtrOutput {
	return o.ToExpressRouteCircuitPeeringIdResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringIdResponseOutput) ToExpressRouteCircuitPeeringIdResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringIdResponse) *ExpressRouteCircuitPeeringIdResponse {
		return &v
	}).(ExpressRouteCircuitPeeringIdResponsePtrOutput)
}

// The ID of the ExpressRoute circuit peering.
func (o ExpressRouteCircuitPeeringIdResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringIdResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringIdResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringIdResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringIdResponsePtrOutput) ToExpressRouteCircuitPeeringIdResponsePtrOutput() ExpressRouteCircuitPeeringIdResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIdResponsePtrOutput) ToExpressRouteCircuitPeeringIdResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringIdResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringIdResponsePtrOutput) Elem() ExpressRouteCircuitPeeringIdResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringIdResponse) ExpressRouteCircuitPeeringIdResponse { return *v }).(ExpressRouteCircuitPeeringIdResponseOutput)
}

// The ID of the ExpressRoute circuit peering.
func (o ExpressRouteCircuitPeeringIdResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringIdResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringResponse struct {
	// The Azure ASN.
	AzureASN *int `pulumi:"azureASN"`
	// The list of circuit connections associated with Azure Private Peering for this circuit.
	Connections []ExpressRouteCircuitConnectionResponse `pulumi:"connections"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The ExpressRoute connection.
	ExpressRouteConnection *ExpressRouteConnectionIdResponse `pulumi:"expressRouteConnection"`
	// The GatewayManager Etag.
	GatewayManagerEtag *string `pulumi:"gatewayManagerEtag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The IPv6 peering configuration.
	Ipv6PeeringConfig *Ipv6ExpressRouteCircuitPeeringConfigResponse `pulumi:"ipv6PeeringConfig"`
	// Who was the last to modify the peering.
	LastModifiedBy string `pulumi:"lastModifiedBy"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfigResponse `pulumi:"microsoftPeeringConfig"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The peer ASN.
	PeerASN *int `pulumi:"peerASN"`
	// The list of peered circuit connections associated with Azure Private Peering for this circuit.
	PeeredConnections []PeerExpressRouteCircuitConnectionResponse `pulumi:"peeredConnections"`
	// The peering type.
	PeeringType *string `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort *string `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// The provisioning state of the express route circuit peering resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the RouteFilter resource.
	RouteFilter *SubResourceResponse `pulumi:"routeFilter"`
	// The secondary port.
	SecondaryAzurePort *string `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey *string `pulumi:"sharedKey"`
	// The peering state.
	State *string `pulumi:"state"`
	// The peering stats of express route circuit.
	Stats *ExpressRouteCircuitStatsResponse `pulumi:"stats"`
	// Type of the resource.
	Type string `pulumi:"type"`
	// The VLAN ID.
	VlanId *int `pulumi:"vlanId"`
}

// ExpressRouteCircuitPeeringResponseInput is an input type that accepts ExpressRouteCircuitPeeringResponseArgs and ExpressRouteCircuitPeeringResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringResponseInput` via:
//
//          ExpressRouteCircuitPeeringResponseArgs{...}
type ExpressRouteCircuitPeeringResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringResponseOutput() ExpressRouteCircuitPeeringResponseOutput
	ToExpressRouteCircuitPeeringResponseOutputWithContext(context.Context) ExpressRouteCircuitPeeringResponseOutput
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringResponseArgs struct {
	// The Azure ASN.
	AzureASN pulumi.IntPtrInput `pulumi:"azureASN"`
	// The list of circuit connections associated with Azure Private Peering for this circuit.
	Connections ExpressRouteCircuitConnectionResponseArrayInput `pulumi:"connections"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The ExpressRoute connection.
	ExpressRouteConnection ExpressRouteConnectionIdResponsePtrInput `pulumi:"expressRouteConnection"`
	// The GatewayManager Etag.
	GatewayManagerEtag pulumi.StringPtrInput `pulumi:"gatewayManagerEtag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The IPv6 peering configuration.
	Ipv6PeeringConfig Ipv6ExpressRouteCircuitPeeringConfigResponsePtrInput `pulumi:"ipv6PeeringConfig"`
	// Who was the last to modify the peering.
	LastModifiedBy pulumi.StringInput `pulumi:"lastModifiedBy"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig ExpressRouteCircuitPeeringConfigResponsePtrInput `pulumi:"microsoftPeeringConfig"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The peer ASN.
	PeerASN pulumi.IntPtrInput `pulumi:"peerASN"`
	// The list of peered circuit connections associated with Azure Private Peering for this circuit.
	PeeredConnections PeerExpressRouteCircuitConnectionResponseArrayInput `pulumi:"peeredConnections"`
	// The peering type.
	PeeringType pulumi.StringPtrInput `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort pulumi.StringPtrInput `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"primaryPeerAddressPrefix"`
	// The provisioning state of the express route circuit peering resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The reference to the RouteFilter resource.
	RouteFilter SubResourceResponsePtrInput `pulumi:"routeFilter"`
	// The secondary port.
	SecondaryAzurePort pulumi.StringPtrInput `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// The peering state.
	State pulumi.StringPtrInput `pulumi:"state"`
	// The peering stats of express route circuit.
	Stats ExpressRouteCircuitStatsResponsePtrInput `pulumi:"stats"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
	// The VLAN ID.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (ExpressRouteCircuitPeeringResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringResponseArgs) ToExpressRouteCircuitPeeringResponseOutput() ExpressRouteCircuitPeeringResponseOutput {
	return i.ToExpressRouteCircuitPeeringResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringResponseArgs) ToExpressRouteCircuitPeeringResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringResponseOutput)
}

// ExpressRouteCircuitPeeringResponseArrayInput is an input type that accepts ExpressRouteCircuitPeeringResponseArray and ExpressRouteCircuitPeeringResponseArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringResponseArrayInput` via:
//
//          ExpressRouteCircuitPeeringResponseArray{ ExpressRouteCircuitPeeringResponseArgs{...} }
type ExpressRouteCircuitPeeringResponseArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringResponseArrayOutput() ExpressRouteCircuitPeeringResponseArrayOutput
	ToExpressRouteCircuitPeeringResponseArrayOutputWithContext(context.Context) ExpressRouteCircuitPeeringResponseArrayOutput
}

type ExpressRouteCircuitPeeringResponseArray []ExpressRouteCircuitPeeringResponseInput

func (ExpressRouteCircuitPeeringResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringResponseArray) ToExpressRouteCircuitPeeringResponseArrayOutput() ExpressRouteCircuitPeeringResponseArrayOutput {
	return i.ToExpressRouteCircuitPeeringResponseArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringResponseArray) ToExpressRouteCircuitPeeringResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringResponseArrayOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringResponseOutput) ToExpressRouteCircuitPeeringResponseOutput() ExpressRouteCircuitPeeringResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringResponseOutput) ToExpressRouteCircuitPeeringResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringResponseOutput {
	return o
}

// The Azure ASN.
func (o ExpressRouteCircuitPeeringResponseOutput) AzureASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *int { return v.AzureASN }).(pulumi.IntPtrOutput)
}

// The list of circuit connections associated with Azure Private Peering for this circuit.
func (o ExpressRouteCircuitPeeringResponseOutput) Connections() ExpressRouteCircuitConnectionResponseArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) []ExpressRouteCircuitConnectionResponse {
		return v.Connections
	}).(ExpressRouteCircuitConnectionResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitPeeringResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The ExpressRoute connection.
func (o ExpressRouteCircuitPeeringResponseOutput) ExpressRouteConnection() ExpressRouteConnectionIdResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *ExpressRouteConnectionIdResponse {
		return v.ExpressRouteConnection
	}).(ExpressRouteConnectionIdResponsePtrOutput)
}

// The GatewayManager Etag.
func (o ExpressRouteCircuitPeeringResponseOutput) GatewayManagerEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.GatewayManagerEtag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ExpressRouteCircuitPeeringResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IPv6 peering configuration.
func (o ExpressRouteCircuitPeeringResponseOutput) Ipv6PeeringConfig() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *Ipv6ExpressRouteCircuitPeeringConfigResponse {
		return v.Ipv6PeeringConfig
	}).(Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// Who was the last to modify the peering.
func (o ExpressRouteCircuitPeeringResponseOutput) LastModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) string { return v.LastModifiedBy }).(pulumi.StringOutput)
}

// The Microsoft peering configuration.
func (o ExpressRouteCircuitPeeringResponseOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *ExpressRouteCircuitPeeringConfigResponse {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitPeeringResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The peer ASN.
func (o ExpressRouteCircuitPeeringResponseOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *int { return v.PeerASN }).(pulumi.IntPtrOutput)
}

// The list of peered circuit connections associated with Azure Private Peering for this circuit.
func (o ExpressRouteCircuitPeeringResponseOutput) PeeredConnections() PeerExpressRouteCircuitConnectionResponseArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) []PeerExpressRouteCircuitConnectionResponse {
		return v.PeeredConnections
	}).(PeerExpressRouteCircuitConnectionResponseArrayOutput)
}

// The peering type.
func (o ExpressRouteCircuitPeeringResponseOutput) PeeringType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.PeeringType }).(pulumi.StringPtrOutput)
}

// The primary port.
func (o ExpressRouteCircuitPeeringResponseOutput) PrimaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.PrimaryAzurePort }).(pulumi.StringPtrOutput)
}

// The primary address prefix.
func (o ExpressRouteCircuitPeeringResponseOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The provisioning state of the express route circuit peering resource.
func (o ExpressRouteCircuitPeeringResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the RouteFilter resource.
func (o ExpressRouteCircuitPeeringResponseOutput) RouteFilter() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *SubResourceResponse { return v.RouteFilter }).(SubResourceResponsePtrOutput)
}

// The secondary port.
func (o ExpressRouteCircuitPeeringResponseOutput) SecondaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.SecondaryAzurePort }).(pulumi.StringPtrOutput)
}

// The secondary address prefix.
func (o ExpressRouteCircuitPeeringResponseOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The shared key.
func (o ExpressRouteCircuitPeeringResponseOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// The peering state.
func (o ExpressRouteCircuitPeeringResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The peering stats of express route circuit.
func (o ExpressRouteCircuitPeeringResponseOutput) Stats() ExpressRouteCircuitStatsResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *ExpressRouteCircuitStatsResponse { return v.Stats }).(ExpressRouteCircuitStatsResponsePtrOutput)
}

// Type of the resource.
func (o ExpressRouteCircuitPeeringResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The VLAN ID.
func (o ExpressRouteCircuitPeeringResponseOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitPeeringResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringResponseArrayOutput) ToExpressRouteCircuitPeeringResponseArrayOutput() ExpressRouteCircuitPeeringResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringResponseArrayOutput) ToExpressRouteCircuitPeeringResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitPeeringResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitPeeringResponse {
		return vs[0].([]ExpressRouteCircuitPeeringResponse)[vs[1].(int)]
	}).(ExpressRouteCircuitPeeringResponseOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderProperties struct {
	// The BandwidthInMbps.
	BandwidthInMbps *int `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation *string `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName *string `pulumi:"serviceProviderName"`
}

// ExpressRouteCircuitServiceProviderPropertiesInput is an input type that accepts ExpressRouteCircuitServiceProviderPropertiesArgs and ExpressRouteCircuitServiceProviderPropertiesOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitServiceProviderPropertiesInput` via:
//
//          ExpressRouteCircuitServiceProviderPropertiesArgs{...}
type ExpressRouteCircuitServiceProviderPropertiesInput interface {
	pulumi.Input

	ToExpressRouteCircuitServiceProviderPropertiesOutput() ExpressRouteCircuitServiceProviderPropertiesOutput
	ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(context.Context) ExpressRouteCircuitServiceProviderPropertiesOutput
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesArgs struct {
	// The BandwidthInMbps.
	BandwidthInMbps pulumi.IntPtrInput `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation pulumi.StringPtrInput `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName pulumi.StringPtrInput `pulumi:"serviceProviderName"`
}

func (ExpressRouteCircuitServiceProviderPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesOutput() ExpressRouteCircuitServiceProviderPropertiesOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesOutput)
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesOutput).ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitServiceProviderPropertiesPtrInput is an input type that accepts ExpressRouteCircuitServiceProviderPropertiesArgs, ExpressRouteCircuitServiceProviderPropertiesPtr and ExpressRouteCircuitServiceProviderPropertiesPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitServiceProviderPropertiesPtrInput` via:
//
//          ExpressRouteCircuitServiceProviderPropertiesArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitServiceProviderPropertiesPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput
	ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput
}

type expressRouteCircuitServiceProviderPropertiesPtrType ExpressRouteCircuitServiceProviderPropertiesArgs

func ExpressRouteCircuitServiceProviderPropertiesPtr(v *ExpressRouteCircuitServiceProviderPropertiesArgs) ExpressRouteCircuitServiceProviderPropertiesPtrInput {
	return (*expressRouteCircuitServiceProviderPropertiesPtrType)(v)
}

func (*expressRouteCircuitServiceProviderPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (i *expressRouteCircuitServiceProviderPropertiesPtrType) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitServiceProviderPropertiesPtrType) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesPtrOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesOutput() ExpressRouteCircuitServiceProviderPropertiesOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o.ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderProperties) *ExpressRouteCircuitServiceProviderProperties {
		return &v
	}).(ExpressRouteCircuitServiceProviderPropertiesPtrOutput)
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderProperties) *int { return v.BandwidthInMbps }).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderProperties) *string { return v.PeeringLocation }).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderProperties) *string { return v.ServiceProviderName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitServiceProviderPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) Elem() ExpressRouteCircuitServiceProviderPropertiesOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) ExpressRouteCircuitServiceProviderProperties {
		return *v
	}).(ExpressRouteCircuitServiceProviderPropertiesOutput)
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthInMbps
	}).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) *string {
		if v == nil {
			return nil
		}
		return v.PeeringLocation
	}).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderName
	}).(pulumi.StringPtrOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesResponse struct {
	// The BandwidthInMbps.
	BandwidthInMbps *int `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation *string `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName *string `pulumi:"serviceProviderName"`
}

// ExpressRouteCircuitServiceProviderPropertiesResponseInput is an input type that accepts ExpressRouteCircuitServiceProviderPropertiesResponseArgs and ExpressRouteCircuitServiceProviderPropertiesResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitServiceProviderPropertiesResponseInput` via:
//
//          ExpressRouteCircuitServiceProviderPropertiesResponseArgs{...}
type ExpressRouteCircuitServiceProviderPropertiesResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitServiceProviderPropertiesResponseOutput() ExpressRouteCircuitServiceProviderPropertiesResponseOutput
	ToExpressRouteCircuitServiceProviderPropertiesResponseOutputWithContext(context.Context) ExpressRouteCircuitServiceProviderPropertiesResponseOutput
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesResponseArgs struct {
	// The BandwidthInMbps.
	BandwidthInMbps pulumi.IntPtrInput `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation pulumi.StringPtrInput `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName pulumi.StringPtrInput `pulumi:"serviceProviderName"`
}

func (ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderPropertiesResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ToExpressRouteCircuitServiceProviderPropertiesResponseOutput() ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ToExpressRouteCircuitServiceProviderPropertiesResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesResponseOutput)
}

func (i ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesResponseOutput).ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitServiceProviderPropertiesResponsePtrInput is an input type that accepts ExpressRouteCircuitServiceProviderPropertiesResponseArgs, ExpressRouteCircuitServiceProviderPropertiesResponsePtr and ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitServiceProviderPropertiesResponsePtrInput` via:
//
//          ExpressRouteCircuitServiceProviderPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitServiceProviderPropertiesResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput
	ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput
}

type expressRouteCircuitServiceProviderPropertiesResponsePtrType ExpressRouteCircuitServiceProviderPropertiesResponseArgs

func ExpressRouteCircuitServiceProviderPropertiesResponsePtr(v *ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ExpressRouteCircuitServiceProviderPropertiesResponsePtrInput {
	return (*expressRouteCircuitServiceProviderPropertiesResponsePtrType)(v)
}

func (*expressRouteCircuitServiceProviderPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitServiceProviderPropertiesResponse)(nil)).Elem()
}

func (i *expressRouteCircuitServiceProviderPropertiesResponsePtrType) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitServiceProviderPropertiesResponsePtrType) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderPropertiesResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesResponseOutput() ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o.ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesResponse) *ExpressRouteCircuitServiceProviderPropertiesResponse {
		return &v
	}).(ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput)
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesResponse) *int { return v.BandwidthInMbps }).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesResponse) *string { return v.PeeringLocation }).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesResponse) *string { return v.ServiceProviderName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitServiceProviderPropertiesResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) Elem() ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) ExpressRouteCircuitServiceProviderPropertiesResponse {
		return *v
	}).(ExpressRouteCircuitServiceProviderPropertiesResponseOutput)
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthInMbps
	}).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PeeringLocation
	}).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderName
	}).(pulumi.StringPtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSku struct {
	// The family of the SKU.
	Family *string `pulumi:"family"`
	// The name of the SKU.
	Name *string `pulumi:"name"`
	// The tier of the SKU.
	Tier *string `pulumi:"tier"`
}

// ExpressRouteCircuitSkuInput is an input type that accepts ExpressRouteCircuitSkuArgs and ExpressRouteCircuitSkuOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuInput` via:
//
//          ExpressRouteCircuitSkuArgs{...}
type ExpressRouteCircuitSkuInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuOutput() ExpressRouteCircuitSkuOutput
	ToExpressRouteCircuitSkuOutputWithContext(context.Context) ExpressRouteCircuitSkuOutput
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuArgs struct {
	// The family of the SKU.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The tier of the SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ExpressRouteCircuitSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSku)(nil)).Elem()
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuOutput() ExpressRouteCircuitSkuOutput {
	return i.ToExpressRouteCircuitSkuOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuOutput)
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return i.ToExpressRouteCircuitSkuPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuOutput).ToExpressRouteCircuitSkuPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitSkuPtrInput is an input type that accepts ExpressRouteCircuitSkuArgs, ExpressRouteCircuitSkuPtr and ExpressRouteCircuitSkuPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuPtrInput` via:
//
//          ExpressRouteCircuitSkuArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitSkuPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput
	ToExpressRouteCircuitSkuPtrOutputWithContext(context.Context) ExpressRouteCircuitSkuPtrOutput
}

type expressRouteCircuitSkuPtrType ExpressRouteCircuitSkuArgs

func ExpressRouteCircuitSkuPtr(v *ExpressRouteCircuitSkuArgs) ExpressRouteCircuitSkuPtrInput {
	return (*expressRouteCircuitSkuPtrType)(v)
}

func (*expressRouteCircuitSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSku)(nil)).Elem()
}

func (i *expressRouteCircuitSkuPtrType) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return i.ToExpressRouteCircuitSkuPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitSkuPtrType) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuPtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSku)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuOutput() ExpressRouteCircuitSkuOutput {
	return o
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuOutput {
	return o
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return o.ToExpressRouteCircuitSkuPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) *ExpressRouteCircuitSku {
		return &v
	}).(ExpressRouteCircuitSkuPtrOutput)
}

// The family of the SKU.
func (o ExpressRouteCircuitSkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The tier of the SKU.
func (o ExpressRouteCircuitSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitSkuPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSku)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuPtrOutput) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuPtrOutput) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuPtrOutput) Elem() ExpressRouteCircuitSkuOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) ExpressRouteCircuitSku { return *v }).(ExpressRouteCircuitSkuOutput)
}

// The family of the SKU.
func (o ExpressRouteCircuitSkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of the SKU.
func (o ExpressRouteCircuitSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuResponse struct {
	// The family of the SKU.
	Family *string `pulumi:"family"`
	// The name of the SKU.
	Name *string `pulumi:"name"`
	// The tier of the SKU.
	Tier *string `pulumi:"tier"`
}

// ExpressRouteCircuitSkuResponseInput is an input type that accepts ExpressRouteCircuitSkuResponseArgs and ExpressRouteCircuitSkuResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuResponseInput` via:
//
//          ExpressRouteCircuitSkuResponseArgs{...}
type ExpressRouteCircuitSkuResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuResponseOutput() ExpressRouteCircuitSkuResponseOutput
	ToExpressRouteCircuitSkuResponseOutputWithContext(context.Context) ExpressRouteCircuitSkuResponseOutput
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuResponseArgs struct {
	// The family of the SKU.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The tier of the SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ExpressRouteCircuitSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSkuResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitSkuResponseArgs) ToExpressRouteCircuitSkuResponseOutput() ExpressRouteCircuitSkuResponseOutput {
	return i.ToExpressRouteCircuitSkuResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuResponseArgs) ToExpressRouteCircuitSkuResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuResponseOutput)
}

func (i ExpressRouteCircuitSkuResponseArgs) ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput {
	return i.ToExpressRouteCircuitSkuResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuResponseArgs) ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuResponseOutput).ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitSkuResponsePtrInput is an input type that accepts ExpressRouteCircuitSkuResponseArgs, ExpressRouteCircuitSkuResponsePtr and ExpressRouteCircuitSkuResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuResponsePtrInput` via:
//
//          ExpressRouteCircuitSkuResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitSkuResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput
	ToExpressRouteCircuitSkuResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitSkuResponsePtrOutput
}

type expressRouteCircuitSkuResponsePtrType ExpressRouteCircuitSkuResponseArgs

func ExpressRouteCircuitSkuResponsePtr(v *ExpressRouteCircuitSkuResponseArgs) ExpressRouteCircuitSkuResponsePtrInput {
	return (*expressRouteCircuitSkuResponsePtrType)(v)
}

func (*expressRouteCircuitSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSkuResponse)(nil)).Elem()
}

func (i *expressRouteCircuitSkuResponsePtrType) ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput {
	return i.ToExpressRouteCircuitSkuResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitSkuResponsePtrType) ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuResponsePtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSkuResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuResponseOutput) ToExpressRouteCircuitSkuResponseOutput() ExpressRouteCircuitSkuResponseOutput {
	return o
}

func (o ExpressRouteCircuitSkuResponseOutput) ToExpressRouteCircuitSkuResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponseOutput {
	return o
}

func (o ExpressRouteCircuitSkuResponseOutput) ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput {
	return o.ToExpressRouteCircuitSkuResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitSkuResponseOutput) ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuResponse) *ExpressRouteCircuitSkuResponse {
		return &v
	}).(ExpressRouteCircuitSkuResponsePtrOutput)
}

// The family of the SKU.
func (o ExpressRouteCircuitSkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The tier of the SKU.
func (o ExpressRouteCircuitSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSkuResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuResponsePtrOutput) ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuResponsePtrOutput) ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuResponsePtrOutput) Elem() ExpressRouteCircuitSkuResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) ExpressRouteCircuitSkuResponse { return *v }).(ExpressRouteCircuitSkuResponseOutput)
}

// The family of the SKU.
func (o ExpressRouteCircuitSkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of the SKU.
func (o ExpressRouteCircuitSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStats struct {
	// The Primary BytesIn of the peering.
	PrimarybytesIn *int `pulumi:"primarybytesIn"`
	// The primary BytesOut of the peering.
	PrimarybytesOut *int `pulumi:"primarybytesOut"`
	// The secondary BytesIn of the peering.
	SecondarybytesIn *int `pulumi:"secondarybytesIn"`
	// The secondary BytesOut of the peering.
	SecondarybytesOut *int `pulumi:"secondarybytesOut"`
}

// ExpressRouteCircuitStatsInput is an input type that accepts ExpressRouteCircuitStatsArgs and ExpressRouteCircuitStatsOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsInput` via:
//
//          ExpressRouteCircuitStatsArgs{...}
type ExpressRouteCircuitStatsInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsOutput() ExpressRouteCircuitStatsOutput
	ToExpressRouteCircuitStatsOutputWithContext(context.Context) ExpressRouteCircuitStatsOutput
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsArgs struct {
	// The Primary BytesIn of the peering.
	PrimarybytesIn pulumi.IntPtrInput `pulumi:"primarybytesIn"`
	// The primary BytesOut of the peering.
	PrimarybytesOut pulumi.IntPtrInput `pulumi:"primarybytesOut"`
	// The secondary BytesIn of the peering.
	SecondarybytesIn pulumi.IntPtrInput `pulumi:"secondarybytesIn"`
	// The secondary BytesOut of the peering.
	SecondarybytesOut pulumi.IntPtrInput `pulumi:"secondarybytesOut"`
}

func (ExpressRouteCircuitStatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStats)(nil)).Elem()
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsOutput() ExpressRouteCircuitStatsOutput {
	return i.ToExpressRouteCircuitStatsOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsOutput)
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return i.ToExpressRouteCircuitStatsPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsOutput).ToExpressRouteCircuitStatsPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitStatsPtrInput is an input type that accepts ExpressRouteCircuitStatsArgs, ExpressRouteCircuitStatsPtr and ExpressRouteCircuitStatsPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsPtrInput` via:
//
//          ExpressRouteCircuitStatsArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitStatsPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput
	ToExpressRouteCircuitStatsPtrOutputWithContext(context.Context) ExpressRouteCircuitStatsPtrOutput
}

type expressRouteCircuitStatsPtrType ExpressRouteCircuitStatsArgs

func ExpressRouteCircuitStatsPtr(v *ExpressRouteCircuitStatsArgs) ExpressRouteCircuitStatsPtrInput {
	return (*expressRouteCircuitStatsPtrType)(v)
}

func (*expressRouteCircuitStatsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStats)(nil)).Elem()
}

func (i *expressRouteCircuitStatsPtrType) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return i.ToExpressRouteCircuitStatsPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitStatsPtrType) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsPtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStats)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsOutput() ExpressRouteCircuitStatsOutput {
	return o
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsOutput {
	return o
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return o.ToExpressRouteCircuitStatsPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *ExpressRouteCircuitStats {
		return &v
	}).(ExpressRouteCircuitStatsPtrOutput)
}

// The Primary BytesIn of the peering.
func (o ExpressRouteCircuitStatsOutput) PrimarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *int { return v.PrimarybytesIn }).(pulumi.IntPtrOutput)
}

// The primary BytesOut of the peering.
func (o ExpressRouteCircuitStatsOutput) PrimarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *int { return v.PrimarybytesOut }).(pulumi.IntPtrOutput)
}

// The secondary BytesIn of the peering.
func (o ExpressRouteCircuitStatsOutput) SecondarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *int { return v.SecondarybytesIn }).(pulumi.IntPtrOutput)
}

// The secondary BytesOut of the peering.
func (o ExpressRouteCircuitStatsOutput) SecondarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *int { return v.SecondarybytesOut }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitStatsPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStats)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsPtrOutput) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsPtrOutput) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsPtrOutput) Elem() ExpressRouteCircuitStatsOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) ExpressRouteCircuitStats { return *v }).(ExpressRouteCircuitStatsOutput)
}

// The Primary BytesIn of the peering.
func (o ExpressRouteCircuitStatsPtrOutput) PrimarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) *int {
		if v == nil {
			return nil
		}
		return v.PrimarybytesIn
	}).(pulumi.IntPtrOutput)
}

// The primary BytesOut of the peering.
func (o ExpressRouteCircuitStatsPtrOutput) PrimarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) *int {
		if v == nil {
			return nil
		}
		return v.PrimarybytesOut
	}).(pulumi.IntPtrOutput)
}

// The secondary BytesIn of the peering.
func (o ExpressRouteCircuitStatsPtrOutput) SecondarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) *int {
		if v == nil {
			return nil
		}
		return v.SecondarybytesIn
	}).(pulumi.IntPtrOutput)
}

// The secondary BytesOut of the peering.
func (o ExpressRouteCircuitStatsPtrOutput) SecondarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) *int {
		if v == nil {
			return nil
		}
		return v.SecondarybytesOut
	}).(pulumi.IntPtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsResponse struct {
	// The Primary BytesIn of the peering.
	PrimarybytesIn *int `pulumi:"primarybytesIn"`
	// The primary BytesOut of the peering.
	PrimarybytesOut *int `pulumi:"primarybytesOut"`
	// The secondary BytesIn of the peering.
	SecondarybytesIn *int `pulumi:"secondarybytesIn"`
	// The secondary BytesOut of the peering.
	SecondarybytesOut *int `pulumi:"secondarybytesOut"`
}

// ExpressRouteCircuitStatsResponseInput is an input type that accepts ExpressRouteCircuitStatsResponseArgs and ExpressRouteCircuitStatsResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsResponseInput` via:
//
//          ExpressRouteCircuitStatsResponseArgs{...}
type ExpressRouteCircuitStatsResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsResponseOutput() ExpressRouteCircuitStatsResponseOutput
	ToExpressRouteCircuitStatsResponseOutputWithContext(context.Context) ExpressRouteCircuitStatsResponseOutput
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsResponseArgs struct {
	// The Primary BytesIn of the peering.
	PrimarybytesIn pulumi.IntPtrInput `pulumi:"primarybytesIn"`
	// The primary BytesOut of the peering.
	PrimarybytesOut pulumi.IntPtrInput `pulumi:"primarybytesOut"`
	// The secondary BytesIn of the peering.
	SecondarybytesIn pulumi.IntPtrInput `pulumi:"secondarybytesIn"`
	// The secondary BytesOut of the peering.
	SecondarybytesOut pulumi.IntPtrInput `pulumi:"secondarybytesOut"`
}

func (ExpressRouteCircuitStatsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStatsResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitStatsResponseArgs) ToExpressRouteCircuitStatsResponseOutput() ExpressRouteCircuitStatsResponseOutput {
	return i.ToExpressRouteCircuitStatsResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsResponseArgs) ToExpressRouteCircuitStatsResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsResponseOutput)
}

func (i ExpressRouteCircuitStatsResponseArgs) ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput {
	return i.ToExpressRouteCircuitStatsResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsResponseArgs) ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsResponseOutput).ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitStatsResponsePtrInput is an input type that accepts ExpressRouteCircuitStatsResponseArgs, ExpressRouteCircuitStatsResponsePtr and ExpressRouteCircuitStatsResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsResponsePtrInput` via:
//
//          ExpressRouteCircuitStatsResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitStatsResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput
	ToExpressRouteCircuitStatsResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitStatsResponsePtrOutput
}

type expressRouteCircuitStatsResponsePtrType ExpressRouteCircuitStatsResponseArgs

func ExpressRouteCircuitStatsResponsePtr(v *ExpressRouteCircuitStatsResponseArgs) ExpressRouteCircuitStatsResponsePtrInput {
	return (*expressRouteCircuitStatsResponsePtrType)(v)
}

func (*expressRouteCircuitStatsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStatsResponse)(nil)).Elem()
}

func (i *expressRouteCircuitStatsResponsePtrType) ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput {
	return i.ToExpressRouteCircuitStatsResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitStatsResponsePtrType) ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsResponsePtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStatsResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsResponseOutput) ToExpressRouteCircuitStatsResponseOutput() ExpressRouteCircuitStatsResponseOutput {
	return o
}

func (o ExpressRouteCircuitStatsResponseOutput) ToExpressRouteCircuitStatsResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponseOutput {
	return o
}

func (o ExpressRouteCircuitStatsResponseOutput) ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput {
	return o.ToExpressRouteCircuitStatsResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitStatsResponseOutput) ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *ExpressRouteCircuitStatsResponse {
		return &v
	}).(ExpressRouteCircuitStatsResponsePtrOutput)
}

// The Primary BytesIn of the peering.
func (o ExpressRouteCircuitStatsResponseOutput) PrimarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *int { return v.PrimarybytesIn }).(pulumi.IntPtrOutput)
}

// The primary BytesOut of the peering.
func (o ExpressRouteCircuitStatsResponseOutput) PrimarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *int { return v.PrimarybytesOut }).(pulumi.IntPtrOutput)
}

// The secondary BytesIn of the peering.
func (o ExpressRouteCircuitStatsResponseOutput) SecondarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *int { return v.SecondarybytesIn }).(pulumi.IntPtrOutput)
}

// The secondary BytesOut of the peering.
func (o ExpressRouteCircuitStatsResponseOutput) SecondarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *int { return v.SecondarybytesOut }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitStatsResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStatsResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsResponsePtrOutput) ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsResponsePtrOutput) ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsResponsePtrOutput) Elem() ExpressRouteCircuitStatsResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) ExpressRouteCircuitStatsResponse { return *v }).(ExpressRouteCircuitStatsResponseOutput)
}

// The Primary BytesIn of the peering.
func (o ExpressRouteCircuitStatsResponsePtrOutput) PrimarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) *int {
		if v == nil {
			return nil
		}
		return v.PrimarybytesIn
	}).(pulumi.IntPtrOutput)
}

// The primary BytesOut of the peering.
func (o ExpressRouteCircuitStatsResponsePtrOutput) PrimarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) *int {
		if v == nil {
			return nil
		}
		return v.PrimarybytesOut
	}).(pulumi.IntPtrOutput)
}

// The secondary BytesIn of the peering.
func (o ExpressRouteCircuitStatsResponsePtrOutput) SecondarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SecondarybytesIn
	}).(pulumi.IntPtrOutput)
}

// The secondary BytesOut of the peering.
func (o ExpressRouteCircuitStatsResponsePtrOutput) SecondarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SecondarybytesOut
	}).(pulumi.IntPtrOutput)
}

// The ID of the ExpressRouteConnection.
type ExpressRouteConnectionIdResponse struct {
	// The ID of the ExpressRouteConnection.
	Id string `pulumi:"id"`
}

// ExpressRouteConnectionIdResponseInput is an input type that accepts ExpressRouteConnectionIdResponseArgs and ExpressRouteConnectionIdResponseOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionIdResponseInput` via:
//
//          ExpressRouteConnectionIdResponseArgs{...}
type ExpressRouteConnectionIdResponseInput interface {
	pulumi.Input

	ToExpressRouteConnectionIdResponseOutput() ExpressRouteConnectionIdResponseOutput
	ToExpressRouteConnectionIdResponseOutputWithContext(context.Context) ExpressRouteConnectionIdResponseOutput
}

// The ID of the ExpressRouteConnection.
type ExpressRouteConnectionIdResponseArgs struct {
	// The ID of the ExpressRouteConnection.
	Id pulumi.StringInput `pulumi:"id"`
}

func (ExpressRouteConnectionIdResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionIdResponse)(nil)).Elem()
}

func (i ExpressRouteConnectionIdResponseArgs) ToExpressRouteConnectionIdResponseOutput() ExpressRouteConnectionIdResponseOutput {
	return i.ToExpressRouteConnectionIdResponseOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionIdResponseArgs) ToExpressRouteConnectionIdResponseOutputWithContext(ctx context.Context) ExpressRouteConnectionIdResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionIdResponseOutput)
}

func (i ExpressRouteConnectionIdResponseArgs) ToExpressRouteConnectionIdResponsePtrOutput() ExpressRouteConnectionIdResponsePtrOutput {
	return i.ToExpressRouteConnectionIdResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionIdResponseArgs) ToExpressRouteConnectionIdResponsePtrOutputWithContext(ctx context.Context) ExpressRouteConnectionIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionIdResponseOutput).ToExpressRouteConnectionIdResponsePtrOutputWithContext(ctx)
}

// ExpressRouteConnectionIdResponsePtrInput is an input type that accepts ExpressRouteConnectionIdResponseArgs, ExpressRouteConnectionIdResponsePtr and ExpressRouteConnectionIdResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionIdResponsePtrInput` via:
//
//          ExpressRouteConnectionIdResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteConnectionIdResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteConnectionIdResponsePtrOutput() ExpressRouteConnectionIdResponsePtrOutput
	ToExpressRouteConnectionIdResponsePtrOutputWithContext(context.Context) ExpressRouteConnectionIdResponsePtrOutput
}

type expressRouteConnectionIdResponsePtrType ExpressRouteConnectionIdResponseArgs

func ExpressRouteConnectionIdResponsePtr(v *ExpressRouteConnectionIdResponseArgs) ExpressRouteConnectionIdResponsePtrInput {
	return (*expressRouteConnectionIdResponsePtrType)(v)
}

func (*expressRouteConnectionIdResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteConnectionIdResponse)(nil)).Elem()
}

func (i *expressRouteConnectionIdResponsePtrType) ToExpressRouteConnectionIdResponsePtrOutput() ExpressRouteConnectionIdResponsePtrOutput {
	return i.ToExpressRouteConnectionIdResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteConnectionIdResponsePtrType) ToExpressRouteConnectionIdResponsePtrOutputWithContext(ctx context.Context) ExpressRouteConnectionIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionIdResponsePtrOutput)
}

// The ID of the ExpressRouteConnection.
type ExpressRouteConnectionIdResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionIdResponse)(nil)).Elem()
}

func (o ExpressRouteConnectionIdResponseOutput) ToExpressRouteConnectionIdResponseOutput() ExpressRouteConnectionIdResponseOutput {
	return o
}

func (o ExpressRouteConnectionIdResponseOutput) ToExpressRouteConnectionIdResponseOutputWithContext(ctx context.Context) ExpressRouteConnectionIdResponseOutput {
	return o
}

func (o ExpressRouteConnectionIdResponseOutput) ToExpressRouteConnectionIdResponsePtrOutput() ExpressRouteConnectionIdResponsePtrOutput {
	return o.ToExpressRouteConnectionIdResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteConnectionIdResponseOutput) ToExpressRouteConnectionIdResponsePtrOutputWithContext(ctx context.Context) ExpressRouteConnectionIdResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionIdResponse) *ExpressRouteConnectionIdResponse {
		return &v
	}).(ExpressRouteConnectionIdResponsePtrOutput)
}

// The ID of the ExpressRouteConnection.
func (o ExpressRouteConnectionIdResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteConnectionIdResponse) string { return v.Id }).(pulumi.StringOutput)
}

type ExpressRouteConnectionIdResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteConnectionIdResponse)(nil)).Elem()
}

func (o ExpressRouteConnectionIdResponsePtrOutput) ToExpressRouteConnectionIdResponsePtrOutput() ExpressRouteConnectionIdResponsePtrOutput {
	return o
}

func (o ExpressRouteConnectionIdResponsePtrOutput) ToExpressRouteConnectionIdResponsePtrOutputWithContext(ctx context.Context) ExpressRouteConnectionIdResponsePtrOutput {
	return o
}

func (o ExpressRouteConnectionIdResponsePtrOutput) Elem() ExpressRouteConnectionIdResponseOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionIdResponse) ExpressRouteConnectionIdResponse { return *v }).(ExpressRouteConnectionIdResponseOutput)
}

// The ID of the ExpressRouteConnection.
func (o ExpressRouteConnectionIdResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteConnectionIdResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// ExpressRouteConnection resource.
type ExpressRouteConnectionResponse struct {
	// Authorization key to establish the connection.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// Enable internet security.
	EnableInternetSecurity *bool `pulumi:"enableInternetSecurity"`
	// The ExpressRoute circuit peering.
	ExpressRouteCircuitPeering ExpressRouteCircuitPeeringIdResponse `pulumi:"expressRouteCircuitPeering"`
	// Enable FastPath to vWan Firewall hub.
	ExpressRouteGatewayBypass *bool `pulumi:"expressRouteGatewayBypass"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource.
	Name string `pulumi:"name"`
	// The provisioning state of the express route connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration *RoutingConfigurationResponse `pulumi:"routingConfiguration"`
	// The routing weight associated to the connection.
	RoutingWeight *int `pulumi:"routingWeight"`
}

// ExpressRouteConnectionResponseInput is an input type that accepts ExpressRouteConnectionResponseArgs and ExpressRouteConnectionResponseOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionResponseInput` via:
//
//          ExpressRouteConnectionResponseArgs{...}
type ExpressRouteConnectionResponseInput interface {
	pulumi.Input

	ToExpressRouteConnectionResponseOutput() ExpressRouteConnectionResponseOutput
	ToExpressRouteConnectionResponseOutputWithContext(context.Context) ExpressRouteConnectionResponseOutput
}

// ExpressRouteConnection resource.
type ExpressRouteConnectionResponseArgs struct {
	// Authorization key to establish the connection.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// Enable internet security.
	EnableInternetSecurity pulumi.BoolPtrInput `pulumi:"enableInternetSecurity"`
	// The ExpressRoute circuit peering.
	ExpressRouteCircuitPeering ExpressRouteCircuitPeeringIdResponseInput `pulumi:"expressRouteCircuitPeering"`
	// Enable FastPath to vWan Firewall hub.
	ExpressRouteGatewayBypass pulumi.BoolPtrInput `pulumi:"expressRouteGatewayBypass"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the express route connection resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration RoutingConfigurationResponsePtrInput `pulumi:"routingConfiguration"`
	// The routing weight associated to the connection.
	RoutingWeight pulumi.IntPtrInput `pulumi:"routingWeight"`
}

func (ExpressRouteConnectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionResponse)(nil)).Elem()
}

func (i ExpressRouteConnectionResponseArgs) ToExpressRouteConnectionResponseOutput() ExpressRouteConnectionResponseOutput {
	return i.ToExpressRouteConnectionResponseOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionResponseArgs) ToExpressRouteConnectionResponseOutputWithContext(ctx context.Context) ExpressRouteConnectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionResponseOutput)
}

// ExpressRouteConnectionResponseArrayInput is an input type that accepts ExpressRouteConnectionResponseArray and ExpressRouteConnectionResponseArrayOutput values.
// You can construct a concrete instance of `ExpressRouteConnectionResponseArrayInput` via:
//
//          ExpressRouteConnectionResponseArray{ ExpressRouteConnectionResponseArgs{...} }
type ExpressRouteConnectionResponseArrayInput interface {
	pulumi.Input

	ToExpressRouteConnectionResponseArrayOutput() ExpressRouteConnectionResponseArrayOutput
	ToExpressRouteConnectionResponseArrayOutputWithContext(context.Context) ExpressRouteConnectionResponseArrayOutput
}

type ExpressRouteConnectionResponseArray []ExpressRouteConnectionResponseInput

func (ExpressRouteConnectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteConnectionResponse)(nil)).Elem()
}

func (i ExpressRouteConnectionResponseArray) ToExpressRouteConnectionResponseArrayOutput() ExpressRouteConnectionResponseArrayOutput {
	return i.ToExpressRouteConnectionResponseArrayOutputWithContext(context.Background())
}

func (i ExpressRouteConnectionResponseArray) ToExpressRouteConnectionResponseArrayOutputWithContext(ctx context.Context) ExpressRouteConnectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteConnectionResponseArrayOutput)
}

// ExpressRouteConnection resource.
type ExpressRouteConnectionResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteConnectionResponse)(nil)).Elem()
}

func (o ExpressRouteConnectionResponseOutput) ToExpressRouteConnectionResponseOutput() ExpressRouteConnectionResponseOutput {
	return o
}

func (o ExpressRouteConnectionResponseOutput) ToExpressRouteConnectionResponseOutputWithContext(ctx context.Context) ExpressRouteConnectionResponseOutput {
	return o
}

// Authorization key to establish the connection.
func (o ExpressRouteConnectionResponseOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// Enable internet security.
func (o ExpressRouteConnectionResponseOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) *bool { return v.EnableInternetSecurity }).(pulumi.BoolPtrOutput)
}

// The ExpressRoute circuit peering.
func (o ExpressRouteConnectionResponseOutput) ExpressRouteCircuitPeering() ExpressRouteCircuitPeeringIdResponseOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) ExpressRouteCircuitPeeringIdResponse {
		return v.ExpressRouteCircuitPeering
	}).(ExpressRouteCircuitPeeringIdResponseOutput)
}

// Enable FastPath to vWan Firewall hub.
func (o ExpressRouteConnectionResponseOutput) ExpressRouteGatewayBypass() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) *bool { return v.ExpressRouteGatewayBypass }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o ExpressRouteConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource.
func (o ExpressRouteConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the express route connection resource.
func (o ExpressRouteConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The Routing Configuration indicating the associated and propagated route tables on this connection.
func (o ExpressRouteConnectionResponseOutput) RoutingConfiguration() RoutingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) *RoutingConfigurationResponse { return v.RoutingConfiguration }).(RoutingConfigurationResponsePtrOutput)
}

// The routing weight associated to the connection.
func (o ExpressRouteConnectionResponseOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteConnectionResponse) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

type ExpressRouteConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteConnectionResponse)(nil)).Elem()
}

func (o ExpressRouteConnectionResponseArrayOutput) ToExpressRouteConnectionResponseArrayOutput() ExpressRouteConnectionResponseArrayOutput {
	return o
}

func (o ExpressRouteConnectionResponseArrayOutput) ToExpressRouteConnectionResponseArrayOutputWithContext(ctx context.Context) ExpressRouteConnectionResponseArrayOutput {
	return o
}

func (o ExpressRouteConnectionResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteConnectionResponse {
		return vs[0].([]ExpressRouteConnectionResponse)[vs[1].(int)]
	}).(ExpressRouteConnectionResponseOutput)
}

// Configuration for auto scaling.
type ExpressRouteGatewayPropertiesAutoScaleConfiguration struct {
	// Minimum and maximum number of scale units to deploy.
	Bounds *ExpressRouteGatewayPropertiesBounds `pulumi:"bounds"`
}

// ExpressRouteGatewayPropertiesAutoScaleConfigurationInput is an input type that accepts ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs and ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesAutoScaleConfigurationInput` via:
//
//          ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs{...}
type ExpressRouteGatewayPropertiesAutoScaleConfigurationInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesAutoScaleConfigurationOutput() ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput
	ToExpressRouteGatewayPropertiesAutoScaleConfigurationOutputWithContext(context.Context) ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput
}

// Configuration for auto scaling.
type ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs struct {
	// Minimum and maximum number of scale units to deploy.
	Bounds ExpressRouteGatewayPropertiesBoundsPtrInput `pulumi:"bounds"`
}

func (ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesAutoScaleConfiguration)(nil)).Elem()
}

func (i ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs) ToExpressRouteGatewayPropertiesAutoScaleConfigurationOutput() ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput {
	return i.ToExpressRouteGatewayPropertiesAutoScaleConfigurationOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs) ToExpressRouteGatewayPropertiesAutoScaleConfigurationOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput)
}

func (i ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs) ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput() ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput {
	return i.ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs) ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput).ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutputWithContext(ctx)
}

// ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrInput is an input type that accepts ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs, ExpressRouteGatewayPropertiesAutoScaleConfigurationPtr and ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrInput` via:
//
//          ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs{...}
//
//  or:
//
//          nil
type ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput() ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput
	ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutputWithContext(context.Context) ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput
}

type expressRouteGatewayPropertiesAutoScaleConfigurationPtrType ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs

func ExpressRouteGatewayPropertiesAutoScaleConfigurationPtr(v *ExpressRouteGatewayPropertiesAutoScaleConfigurationArgs) ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrInput {
	return (*expressRouteGatewayPropertiesAutoScaleConfigurationPtrType)(v)
}

func (*expressRouteGatewayPropertiesAutoScaleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesAutoScaleConfiguration)(nil)).Elem()
}

func (i *expressRouteGatewayPropertiesAutoScaleConfigurationPtrType) ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput() ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput {
	return i.ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (i *expressRouteGatewayPropertiesAutoScaleConfigurationPtrType) ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput)
}

// Configuration for auto scaling.
type ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesAutoScaleConfiguration)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput) ToExpressRouteGatewayPropertiesAutoScaleConfigurationOutput() ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput) ToExpressRouteGatewayPropertiesAutoScaleConfigurationOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput) ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput() ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput {
	return o.ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (o ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput) ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesAutoScaleConfiguration) *ExpressRouteGatewayPropertiesAutoScaleConfiguration {
		return &v
	}).(ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput)
}

// Minimum and maximum number of scale units to deploy.
func (o ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput) Bounds() ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesAutoScaleConfiguration) *ExpressRouteGatewayPropertiesBounds {
		return v.Bounds
	}).(ExpressRouteGatewayPropertiesBoundsPtrOutput)
}

type ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesAutoScaleConfiguration)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput) ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput() ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput) ToExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput) Elem() ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesAutoScaleConfiguration) ExpressRouteGatewayPropertiesAutoScaleConfiguration {
		return *v
	}).(ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput)
}

// Minimum and maximum number of scale units to deploy.
func (o ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput) Bounds() ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesAutoScaleConfiguration) *ExpressRouteGatewayPropertiesBounds {
		if v == nil {
			return nil
		}
		return v.Bounds
	}).(ExpressRouteGatewayPropertiesBoundsPtrOutput)
}

// Minimum and maximum number of scale units to deploy.
type ExpressRouteGatewayPropertiesBounds struct {
	// Maximum number of scale units deployed for ExpressRoute gateway.
	Max *int `pulumi:"max"`
	// Minimum number of scale units deployed for ExpressRoute gateway.
	Min *int `pulumi:"min"`
}

// ExpressRouteGatewayPropertiesBoundsInput is an input type that accepts ExpressRouteGatewayPropertiesBoundsArgs and ExpressRouteGatewayPropertiesBoundsOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesBoundsInput` via:
//
//          ExpressRouteGatewayPropertiesBoundsArgs{...}
type ExpressRouteGatewayPropertiesBoundsInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesBoundsOutput() ExpressRouteGatewayPropertiesBoundsOutput
	ToExpressRouteGatewayPropertiesBoundsOutputWithContext(context.Context) ExpressRouteGatewayPropertiesBoundsOutput
}

// Minimum and maximum number of scale units to deploy.
type ExpressRouteGatewayPropertiesBoundsArgs struct {
	// Maximum number of scale units deployed for ExpressRoute gateway.
	Max pulumi.IntPtrInput `pulumi:"max"`
	// Minimum number of scale units deployed for ExpressRoute gateway.
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (ExpressRouteGatewayPropertiesBoundsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesBounds)(nil)).Elem()
}

func (i ExpressRouteGatewayPropertiesBoundsArgs) ToExpressRouteGatewayPropertiesBoundsOutput() ExpressRouteGatewayPropertiesBoundsOutput {
	return i.ToExpressRouteGatewayPropertiesBoundsOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesBoundsArgs) ToExpressRouteGatewayPropertiesBoundsOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesBoundsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesBoundsOutput)
}

func (i ExpressRouteGatewayPropertiesBoundsArgs) ToExpressRouteGatewayPropertiesBoundsPtrOutput() ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return i.ToExpressRouteGatewayPropertiesBoundsPtrOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesBoundsArgs) ToExpressRouteGatewayPropertiesBoundsPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesBoundsOutput).ToExpressRouteGatewayPropertiesBoundsPtrOutputWithContext(ctx)
}

// ExpressRouteGatewayPropertiesBoundsPtrInput is an input type that accepts ExpressRouteGatewayPropertiesBoundsArgs, ExpressRouteGatewayPropertiesBoundsPtr and ExpressRouteGatewayPropertiesBoundsPtrOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesBoundsPtrInput` via:
//
//          ExpressRouteGatewayPropertiesBoundsArgs{...}
//
//  or:
//
//          nil
type ExpressRouteGatewayPropertiesBoundsPtrInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesBoundsPtrOutput() ExpressRouteGatewayPropertiesBoundsPtrOutput
	ToExpressRouteGatewayPropertiesBoundsPtrOutputWithContext(context.Context) ExpressRouteGatewayPropertiesBoundsPtrOutput
}

type expressRouteGatewayPropertiesBoundsPtrType ExpressRouteGatewayPropertiesBoundsArgs

func ExpressRouteGatewayPropertiesBoundsPtr(v *ExpressRouteGatewayPropertiesBoundsArgs) ExpressRouteGatewayPropertiesBoundsPtrInput {
	return (*expressRouteGatewayPropertiesBoundsPtrType)(v)
}

func (*expressRouteGatewayPropertiesBoundsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesBounds)(nil)).Elem()
}

func (i *expressRouteGatewayPropertiesBoundsPtrType) ToExpressRouteGatewayPropertiesBoundsPtrOutput() ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return i.ToExpressRouteGatewayPropertiesBoundsPtrOutputWithContext(context.Background())
}

func (i *expressRouteGatewayPropertiesBoundsPtrType) ToExpressRouteGatewayPropertiesBoundsPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesBoundsPtrOutput)
}

// Minimum and maximum number of scale units to deploy.
type ExpressRouteGatewayPropertiesBoundsOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesBoundsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesBounds)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesBoundsOutput) ToExpressRouteGatewayPropertiesBoundsOutput() ExpressRouteGatewayPropertiesBoundsOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesBoundsOutput) ToExpressRouteGatewayPropertiesBoundsOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesBoundsOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesBoundsOutput) ToExpressRouteGatewayPropertiesBoundsPtrOutput() ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return o.ToExpressRouteGatewayPropertiesBoundsPtrOutputWithContext(context.Background())
}

func (o ExpressRouteGatewayPropertiesBoundsOutput) ToExpressRouteGatewayPropertiesBoundsPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesBounds) *ExpressRouteGatewayPropertiesBounds {
		return &v
	}).(ExpressRouteGatewayPropertiesBoundsPtrOutput)
}

// Maximum number of scale units deployed for ExpressRoute gateway.
func (o ExpressRouteGatewayPropertiesBoundsOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesBounds) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// Minimum number of scale units deployed for ExpressRoute gateway.
func (o ExpressRouteGatewayPropertiesBoundsOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesBounds) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type ExpressRouteGatewayPropertiesBoundsPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesBoundsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesBounds)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesBoundsPtrOutput) ToExpressRouteGatewayPropertiesBoundsPtrOutput() ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesBoundsPtrOutput) ToExpressRouteGatewayPropertiesBoundsPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesBoundsPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesBoundsPtrOutput) Elem() ExpressRouteGatewayPropertiesBoundsOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesBounds) ExpressRouteGatewayPropertiesBounds { return *v }).(ExpressRouteGatewayPropertiesBoundsOutput)
}

// Maximum number of scale units deployed for ExpressRoute gateway.
func (o ExpressRouteGatewayPropertiesBoundsPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesBounds) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// Minimum number of scale units deployed for ExpressRoute gateway.
func (o ExpressRouteGatewayPropertiesBoundsPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesBounds) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// Configuration for auto scaling.
type ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration struct {
	// Minimum and maximum number of scale units to deploy.
	Bounds *ExpressRouteGatewayPropertiesResponseBounds `pulumi:"bounds"`
}

// ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationInput is an input type that accepts ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationArgs and ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationInput` via:
//
//          ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationArgs{...}
type ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput() ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput
	ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutputWithContext(context.Context) ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput
}

// Configuration for auto scaling.
type ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationArgs struct {
	// Minimum and maximum number of scale units to deploy.
	Bounds ExpressRouteGatewayPropertiesResponseBoundsPtrInput `pulumi:"bounds"`
}

func (ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration)(nil)).Elem()
}

func (i ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationArgs) ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput() ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput {
	return i.ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationArgs) ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput)
}

func (i ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationArgs) ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput() ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput {
	return i.ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationArgs) ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput).ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutputWithContext(ctx)
}

// ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrInput is an input type that accepts ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationArgs, ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtr and ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrInput` via:
//
//          ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationArgs{...}
//
//  or:
//
//          nil
type ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput() ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput
	ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutputWithContext(context.Context) ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput
}

type expressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrType ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationArgs

func ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtr(v *ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationArgs) ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrInput {
	return (*expressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrType)(v)
}

func (*expressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration)(nil)).Elem()
}

func (i *expressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrType) ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput() ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput {
	return i.ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (i *expressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrType) ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput)
}

// Configuration for auto scaling.
type ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput) ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput() ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput) ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput) ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput() ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput {
	return o.ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutputWithContext(context.Background())
}

func (o ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput) ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration) *ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration {
		return &v
	}).(ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput)
}

// Minimum and maximum number of scale units to deploy.
func (o ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput) Bounds() ExpressRouteGatewayPropertiesResponseBoundsPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration) *ExpressRouteGatewayPropertiesResponseBounds {
		return v.Bounds
	}).(ExpressRouteGatewayPropertiesResponseBoundsPtrOutput)
}

type ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput) ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput() ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput) ToExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput) Elem() ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration) ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration {
		return *v
	}).(ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput)
}

// Minimum and maximum number of scale units to deploy.
func (o ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput) Bounds() ExpressRouteGatewayPropertiesResponseBoundsPtrOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesResponseAutoScaleConfiguration) *ExpressRouteGatewayPropertiesResponseBounds {
		if v == nil {
			return nil
		}
		return v.Bounds
	}).(ExpressRouteGatewayPropertiesResponseBoundsPtrOutput)
}

// Minimum and maximum number of scale units to deploy.
type ExpressRouteGatewayPropertiesResponseBounds struct {
	// Maximum number of scale units deployed for ExpressRoute gateway.
	Max *int `pulumi:"max"`
	// Minimum number of scale units deployed for ExpressRoute gateway.
	Min *int `pulumi:"min"`
}

// ExpressRouteGatewayPropertiesResponseBoundsInput is an input type that accepts ExpressRouteGatewayPropertiesResponseBoundsArgs and ExpressRouteGatewayPropertiesResponseBoundsOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesResponseBoundsInput` via:
//
//          ExpressRouteGatewayPropertiesResponseBoundsArgs{...}
type ExpressRouteGatewayPropertiesResponseBoundsInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesResponseBoundsOutput() ExpressRouteGatewayPropertiesResponseBoundsOutput
	ToExpressRouteGatewayPropertiesResponseBoundsOutputWithContext(context.Context) ExpressRouteGatewayPropertiesResponseBoundsOutput
}

// Minimum and maximum number of scale units to deploy.
type ExpressRouteGatewayPropertiesResponseBoundsArgs struct {
	// Maximum number of scale units deployed for ExpressRoute gateway.
	Max pulumi.IntPtrInput `pulumi:"max"`
	// Minimum number of scale units deployed for ExpressRoute gateway.
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (ExpressRouteGatewayPropertiesResponseBoundsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesResponseBounds)(nil)).Elem()
}

func (i ExpressRouteGatewayPropertiesResponseBoundsArgs) ToExpressRouteGatewayPropertiesResponseBoundsOutput() ExpressRouteGatewayPropertiesResponseBoundsOutput {
	return i.ToExpressRouteGatewayPropertiesResponseBoundsOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesResponseBoundsArgs) ToExpressRouteGatewayPropertiesResponseBoundsOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponseBoundsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesResponseBoundsOutput)
}

func (i ExpressRouteGatewayPropertiesResponseBoundsArgs) ToExpressRouteGatewayPropertiesResponseBoundsPtrOutput() ExpressRouteGatewayPropertiesResponseBoundsPtrOutput {
	return i.ToExpressRouteGatewayPropertiesResponseBoundsPtrOutputWithContext(context.Background())
}

func (i ExpressRouteGatewayPropertiesResponseBoundsArgs) ToExpressRouteGatewayPropertiesResponseBoundsPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponseBoundsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesResponseBoundsOutput).ToExpressRouteGatewayPropertiesResponseBoundsPtrOutputWithContext(ctx)
}

// ExpressRouteGatewayPropertiesResponseBoundsPtrInput is an input type that accepts ExpressRouteGatewayPropertiesResponseBoundsArgs, ExpressRouteGatewayPropertiesResponseBoundsPtr and ExpressRouteGatewayPropertiesResponseBoundsPtrOutput values.
// You can construct a concrete instance of `ExpressRouteGatewayPropertiesResponseBoundsPtrInput` via:
//
//          ExpressRouteGatewayPropertiesResponseBoundsArgs{...}
//
//  or:
//
//          nil
type ExpressRouteGatewayPropertiesResponseBoundsPtrInput interface {
	pulumi.Input

	ToExpressRouteGatewayPropertiesResponseBoundsPtrOutput() ExpressRouteGatewayPropertiesResponseBoundsPtrOutput
	ToExpressRouteGatewayPropertiesResponseBoundsPtrOutputWithContext(context.Context) ExpressRouteGatewayPropertiesResponseBoundsPtrOutput
}

type expressRouteGatewayPropertiesResponseBoundsPtrType ExpressRouteGatewayPropertiesResponseBoundsArgs

func ExpressRouteGatewayPropertiesResponseBoundsPtr(v *ExpressRouteGatewayPropertiesResponseBoundsArgs) ExpressRouteGatewayPropertiesResponseBoundsPtrInput {
	return (*expressRouteGatewayPropertiesResponseBoundsPtrType)(v)
}

func (*expressRouteGatewayPropertiesResponseBoundsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesResponseBounds)(nil)).Elem()
}

func (i *expressRouteGatewayPropertiesResponseBoundsPtrType) ToExpressRouteGatewayPropertiesResponseBoundsPtrOutput() ExpressRouteGatewayPropertiesResponseBoundsPtrOutput {
	return i.ToExpressRouteGatewayPropertiesResponseBoundsPtrOutputWithContext(context.Background())
}

func (i *expressRouteGatewayPropertiesResponseBoundsPtrType) ToExpressRouteGatewayPropertiesResponseBoundsPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponseBoundsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteGatewayPropertiesResponseBoundsPtrOutput)
}

// Minimum and maximum number of scale units to deploy.
type ExpressRouteGatewayPropertiesResponseBoundsOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesResponseBoundsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteGatewayPropertiesResponseBounds)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesResponseBoundsOutput) ToExpressRouteGatewayPropertiesResponseBoundsOutput() ExpressRouteGatewayPropertiesResponseBoundsOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponseBoundsOutput) ToExpressRouteGatewayPropertiesResponseBoundsOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponseBoundsOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponseBoundsOutput) ToExpressRouteGatewayPropertiesResponseBoundsPtrOutput() ExpressRouteGatewayPropertiesResponseBoundsPtrOutput {
	return o.ToExpressRouteGatewayPropertiesResponseBoundsPtrOutputWithContext(context.Background())
}

func (o ExpressRouteGatewayPropertiesResponseBoundsOutput) ToExpressRouteGatewayPropertiesResponseBoundsPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponseBoundsPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesResponseBounds) *ExpressRouteGatewayPropertiesResponseBounds {
		return &v
	}).(ExpressRouteGatewayPropertiesResponseBoundsPtrOutput)
}

// Maximum number of scale units deployed for ExpressRoute gateway.
func (o ExpressRouteGatewayPropertiesResponseBoundsOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesResponseBounds) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// Minimum number of scale units deployed for ExpressRoute gateway.
func (o ExpressRouteGatewayPropertiesResponseBoundsOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteGatewayPropertiesResponseBounds) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type ExpressRouteGatewayPropertiesResponseBoundsPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteGatewayPropertiesResponseBoundsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteGatewayPropertiesResponseBounds)(nil)).Elem()
}

func (o ExpressRouteGatewayPropertiesResponseBoundsPtrOutput) ToExpressRouteGatewayPropertiesResponseBoundsPtrOutput() ExpressRouteGatewayPropertiesResponseBoundsPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponseBoundsPtrOutput) ToExpressRouteGatewayPropertiesResponseBoundsPtrOutputWithContext(ctx context.Context) ExpressRouteGatewayPropertiesResponseBoundsPtrOutput {
	return o
}

func (o ExpressRouteGatewayPropertiesResponseBoundsPtrOutput) Elem() ExpressRouteGatewayPropertiesResponseBoundsOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesResponseBounds) ExpressRouteGatewayPropertiesResponseBounds {
		return *v
	}).(ExpressRouteGatewayPropertiesResponseBoundsOutput)
}

// Maximum number of scale units deployed for ExpressRoute gateway.
func (o ExpressRouteGatewayPropertiesResponseBoundsPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesResponseBounds) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

// Minimum number of scale units deployed for ExpressRoute gateway.
func (o ExpressRouteGatewayPropertiesResponseBoundsPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteGatewayPropertiesResponseBounds) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

// ExpressRouteLink child resource definition.
type ExpressRouteLink struct {
	// Administrative state of the physical port.
	AdminState *string `pulumi:"adminState"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// MacSec configuration.
	MacSecConfig *ExpressRouteLinkMacSecConfig `pulumi:"macSecConfig"`
	// Name of child port resource that is unique among child port resources of the parent.
	Name *string `pulumi:"name"`
}

// ExpressRouteLinkInput is an input type that accepts ExpressRouteLinkArgs and ExpressRouteLinkOutput values.
// You can construct a concrete instance of `ExpressRouteLinkInput` via:
//
//          ExpressRouteLinkArgs{...}
type ExpressRouteLinkInput interface {
	pulumi.Input

	ToExpressRouteLinkOutput() ExpressRouteLinkOutput
	ToExpressRouteLinkOutputWithContext(context.Context) ExpressRouteLinkOutput
}

// ExpressRouteLink child resource definition.
type ExpressRouteLinkArgs struct {
	// Administrative state of the physical port.
	AdminState pulumi.StringPtrInput `pulumi:"adminState"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// MacSec configuration.
	MacSecConfig ExpressRouteLinkMacSecConfigPtrInput `pulumi:"macSecConfig"`
	// Name of child port resource that is unique among child port resources of the parent.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ExpressRouteLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLink)(nil)).Elem()
}

func (i ExpressRouteLinkArgs) ToExpressRouteLinkOutput() ExpressRouteLinkOutput {
	return i.ToExpressRouteLinkOutputWithContext(context.Background())
}

func (i ExpressRouteLinkArgs) ToExpressRouteLinkOutputWithContext(ctx context.Context) ExpressRouteLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkOutput)
}

// ExpressRouteLinkArrayInput is an input type that accepts ExpressRouteLinkArray and ExpressRouteLinkArrayOutput values.
// You can construct a concrete instance of `ExpressRouteLinkArrayInput` via:
//
//          ExpressRouteLinkArray{ ExpressRouteLinkArgs{...} }
type ExpressRouteLinkArrayInput interface {
	pulumi.Input

	ToExpressRouteLinkArrayOutput() ExpressRouteLinkArrayOutput
	ToExpressRouteLinkArrayOutputWithContext(context.Context) ExpressRouteLinkArrayOutput
}

type ExpressRouteLinkArray []ExpressRouteLinkInput

func (ExpressRouteLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteLink)(nil)).Elem()
}

func (i ExpressRouteLinkArray) ToExpressRouteLinkArrayOutput() ExpressRouteLinkArrayOutput {
	return i.ToExpressRouteLinkArrayOutputWithContext(context.Background())
}

func (i ExpressRouteLinkArray) ToExpressRouteLinkArrayOutputWithContext(ctx context.Context) ExpressRouteLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkArrayOutput)
}

// ExpressRouteLink child resource definition.
type ExpressRouteLinkOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLink)(nil)).Elem()
}

func (o ExpressRouteLinkOutput) ToExpressRouteLinkOutput() ExpressRouteLinkOutput {
	return o
}

func (o ExpressRouteLinkOutput) ToExpressRouteLinkOutputWithContext(ctx context.Context) ExpressRouteLinkOutput {
	return o
}

// Administrative state of the physical port.
func (o ExpressRouteLinkOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLink) *string { return v.AdminState }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ExpressRouteLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// MacSec configuration.
func (o ExpressRouteLinkOutput) MacSecConfig() ExpressRouteLinkMacSecConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteLink) *ExpressRouteLinkMacSecConfig { return v.MacSecConfig }).(ExpressRouteLinkMacSecConfigPtrOutput)
}

// Name of child port resource that is unique among child port resources of the parent.
func (o ExpressRouteLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ExpressRouteLinkArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteLink)(nil)).Elem()
}

func (o ExpressRouteLinkArrayOutput) ToExpressRouteLinkArrayOutput() ExpressRouteLinkArrayOutput {
	return o
}

func (o ExpressRouteLinkArrayOutput) ToExpressRouteLinkArrayOutputWithContext(ctx context.Context) ExpressRouteLinkArrayOutput {
	return o
}

func (o ExpressRouteLinkArrayOutput) Index(i pulumi.IntInput) ExpressRouteLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteLink {
		return vs[0].([]ExpressRouteLink)[vs[1].(int)]
	}).(ExpressRouteLinkOutput)
}

// ExpressRouteLink Mac Security Configuration.
type ExpressRouteLinkMacSecConfig struct {
	// Keyvault Secret Identifier URL containing Mac security CAK key.
	CakSecretIdentifier *string `pulumi:"cakSecretIdentifier"`
	// Mac security cipher.
	Cipher *string `pulumi:"cipher"`
	// Keyvault Secret Identifier URL containing Mac security CKN key.
	CknSecretIdentifier *string `pulumi:"cknSecretIdentifier"`
	// Sci mode enabled/disabled.
	SciState *string `pulumi:"sciState"`
}

// ExpressRouteLinkMacSecConfigInput is an input type that accepts ExpressRouteLinkMacSecConfigArgs and ExpressRouteLinkMacSecConfigOutput values.
// You can construct a concrete instance of `ExpressRouteLinkMacSecConfigInput` via:
//
//          ExpressRouteLinkMacSecConfigArgs{...}
type ExpressRouteLinkMacSecConfigInput interface {
	pulumi.Input

	ToExpressRouteLinkMacSecConfigOutput() ExpressRouteLinkMacSecConfigOutput
	ToExpressRouteLinkMacSecConfigOutputWithContext(context.Context) ExpressRouteLinkMacSecConfigOutput
}

// ExpressRouteLink Mac Security Configuration.
type ExpressRouteLinkMacSecConfigArgs struct {
	// Keyvault Secret Identifier URL containing Mac security CAK key.
	CakSecretIdentifier pulumi.StringPtrInput `pulumi:"cakSecretIdentifier"`
	// Mac security cipher.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// Keyvault Secret Identifier URL containing Mac security CKN key.
	CknSecretIdentifier pulumi.StringPtrInput `pulumi:"cknSecretIdentifier"`
	// Sci mode enabled/disabled.
	SciState pulumi.StringPtrInput `pulumi:"sciState"`
}

func (ExpressRouteLinkMacSecConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLinkMacSecConfig)(nil)).Elem()
}

func (i ExpressRouteLinkMacSecConfigArgs) ToExpressRouteLinkMacSecConfigOutput() ExpressRouteLinkMacSecConfigOutput {
	return i.ToExpressRouteLinkMacSecConfigOutputWithContext(context.Background())
}

func (i ExpressRouteLinkMacSecConfigArgs) ToExpressRouteLinkMacSecConfigOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkMacSecConfigOutput)
}

func (i ExpressRouteLinkMacSecConfigArgs) ToExpressRouteLinkMacSecConfigPtrOutput() ExpressRouteLinkMacSecConfigPtrOutput {
	return i.ToExpressRouteLinkMacSecConfigPtrOutputWithContext(context.Background())
}

func (i ExpressRouteLinkMacSecConfigArgs) ToExpressRouteLinkMacSecConfigPtrOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkMacSecConfigOutput).ToExpressRouteLinkMacSecConfigPtrOutputWithContext(ctx)
}

// ExpressRouteLinkMacSecConfigPtrInput is an input type that accepts ExpressRouteLinkMacSecConfigArgs, ExpressRouteLinkMacSecConfigPtr and ExpressRouteLinkMacSecConfigPtrOutput values.
// You can construct a concrete instance of `ExpressRouteLinkMacSecConfigPtrInput` via:
//
//          ExpressRouteLinkMacSecConfigArgs{...}
//
//  or:
//
//          nil
type ExpressRouteLinkMacSecConfigPtrInput interface {
	pulumi.Input

	ToExpressRouteLinkMacSecConfigPtrOutput() ExpressRouteLinkMacSecConfigPtrOutput
	ToExpressRouteLinkMacSecConfigPtrOutputWithContext(context.Context) ExpressRouteLinkMacSecConfigPtrOutput
}

type expressRouteLinkMacSecConfigPtrType ExpressRouteLinkMacSecConfigArgs

func ExpressRouteLinkMacSecConfigPtr(v *ExpressRouteLinkMacSecConfigArgs) ExpressRouteLinkMacSecConfigPtrInput {
	return (*expressRouteLinkMacSecConfigPtrType)(v)
}

func (*expressRouteLinkMacSecConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteLinkMacSecConfig)(nil)).Elem()
}

func (i *expressRouteLinkMacSecConfigPtrType) ToExpressRouteLinkMacSecConfigPtrOutput() ExpressRouteLinkMacSecConfigPtrOutput {
	return i.ToExpressRouteLinkMacSecConfigPtrOutputWithContext(context.Background())
}

func (i *expressRouteLinkMacSecConfigPtrType) ToExpressRouteLinkMacSecConfigPtrOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkMacSecConfigPtrOutput)
}

// ExpressRouteLink Mac Security Configuration.
type ExpressRouteLinkMacSecConfigOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkMacSecConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLinkMacSecConfig)(nil)).Elem()
}

func (o ExpressRouteLinkMacSecConfigOutput) ToExpressRouteLinkMacSecConfigOutput() ExpressRouteLinkMacSecConfigOutput {
	return o
}

func (o ExpressRouteLinkMacSecConfigOutput) ToExpressRouteLinkMacSecConfigOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigOutput {
	return o
}

func (o ExpressRouteLinkMacSecConfigOutput) ToExpressRouteLinkMacSecConfigPtrOutput() ExpressRouteLinkMacSecConfigPtrOutput {
	return o.ToExpressRouteLinkMacSecConfigPtrOutputWithContext(context.Background())
}

func (o ExpressRouteLinkMacSecConfigOutput) ToExpressRouteLinkMacSecConfigPtrOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkMacSecConfig) *ExpressRouteLinkMacSecConfig {
		return &v
	}).(ExpressRouteLinkMacSecConfigPtrOutput)
}

// Keyvault Secret Identifier URL containing Mac security CAK key.
func (o ExpressRouteLinkMacSecConfigOutput) CakSecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkMacSecConfig) *string { return v.CakSecretIdentifier }).(pulumi.StringPtrOutput)
}

// Mac security cipher.
func (o ExpressRouteLinkMacSecConfigOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkMacSecConfig) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// Keyvault Secret Identifier URL containing Mac security CKN key.
func (o ExpressRouteLinkMacSecConfigOutput) CknSecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkMacSecConfig) *string { return v.CknSecretIdentifier }).(pulumi.StringPtrOutput)
}

// Sci mode enabled/disabled.
func (o ExpressRouteLinkMacSecConfigOutput) SciState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkMacSecConfig) *string { return v.SciState }).(pulumi.StringPtrOutput)
}

type ExpressRouteLinkMacSecConfigPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkMacSecConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteLinkMacSecConfig)(nil)).Elem()
}

func (o ExpressRouteLinkMacSecConfigPtrOutput) ToExpressRouteLinkMacSecConfigPtrOutput() ExpressRouteLinkMacSecConfigPtrOutput {
	return o
}

func (o ExpressRouteLinkMacSecConfigPtrOutput) ToExpressRouteLinkMacSecConfigPtrOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigPtrOutput {
	return o
}

func (o ExpressRouteLinkMacSecConfigPtrOutput) Elem() ExpressRouteLinkMacSecConfigOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfig) ExpressRouteLinkMacSecConfig { return *v }).(ExpressRouteLinkMacSecConfigOutput)
}

// Keyvault Secret Identifier URL containing Mac security CAK key.
func (o ExpressRouteLinkMacSecConfigPtrOutput) CakSecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfig) *string {
		if v == nil {
			return nil
		}
		return v.CakSecretIdentifier
	}).(pulumi.StringPtrOutput)
}

// Mac security cipher.
func (o ExpressRouteLinkMacSecConfigPtrOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfig) *string {
		if v == nil {
			return nil
		}
		return v.Cipher
	}).(pulumi.StringPtrOutput)
}

// Keyvault Secret Identifier URL containing Mac security CKN key.
func (o ExpressRouteLinkMacSecConfigPtrOutput) CknSecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfig) *string {
		if v == nil {
			return nil
		}
		return v.CknSecretIdentifier
	}).(pulumi.StringPtrOutput)
}

// Sci mode enabled/disabled.
func (o ExpressRouteLinkMacSecConfigPtrOutput) SciState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfig) *string {
		if v == nil {
			return nil
		}
		return v.SciState
	}).(pulumi.StringPtrOutput)
}

// ExpressRouteLink Mac Security Configuration.
type ExpressRouteLinkMacSecConfigResponse struct {
	// Keyvault Secret Identifier URL containing Mac security CAK key.
	CakSecretIdentifier *string `pulumi:"cakSecretIdentifier"`
	// Mac security cipher.
	Cipher *string `pulumi:"cipher"`
	// Keyvault Secret Identifier URL containing Mac security CKN key.
	CknSecretIdentifier *string `pulumi:"cknSecretIdentifier"`
	// Sci mode enabled/disabled.
	SciState *string `pulumi:"sciState"`
}

// ExpressRouteLinkMacSecConfigResponseInput is an input type that accepts ExpressRouteLinkMacSecConfigResponseArgs and ExpressRouteLinkMacSecConfigResponseOutput values.
// You can construct a concrete instance of `ExpressRouteLinkMacSecConfigResponseInput` via:
//
//          ExpressRouteLinkMacSecConfigResponseArgs{...}
type ExpressRouteLinkMacSecConfigResponseInput interface {
	pulumi.Input

	ToExpressRouteLinkMacSecConfigResponseOutput() ExpressRouteLinkMacSecConfigResponseOutput
	ToExpressRouteLinkMacSecConfigResponseOutputWithContext(context.Context) ExpressRouteLinkMacSecConfigResponseOutput
}

// ExpressRouteLink Mac Security Configuration.
type ExpressRouteLinkMacSecConfigResponseArgs struct {
	// Keyvault Secret Identifier URL containing Mac security CAK key.
	CakSecretIdentifier pulumi.StringPtrInput `pulumi:"cakSecretIdentifier"`
	// Mac security cipher.
	Cipher pulumi.StringPtrInput `pulumi:"cipher"`
	// Keyvault Secret Identifier URL containing Mac security CKN key.
	CknSecretIdentifier pulumi.StringPtrInput `pulumi:"cknSecretIdentifier"`
	// Sci mode enabled/disabled.
	SciState pulumi.StringPtrInput `pulumi:"sciState"`
}

func (ExpressRouteLinkMacSecConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLinkMacSecConfigResponse)(nil)).Elem()
}

func (i ExpressRouteLinkMacSecConfigResponseArgs) ToExpressRouteLinkMacSecConfigResponseOutput() ExpressRouteLinkMacSecConfigResponseOutput {
	return i.ToExpressRouteLinkMacSecConfigResponseOutputWithContext(context.Background())
}

func (i ExpressRouteLinkMacSecConfigResponseArgs) ToExpressRouteLinkMacSecConfigResponseOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkMacSecConfigResponseOutput)
}

func (i ExpressRouteLinkMacSecConfigResponseArgs) ToExpressRouteLinkMacSecConfigResponsePtrOutput() ExpressRouteLinkMacSecConfigResponsePtrOutput {
	return i.ToExpressRouteLinkMacSecConfigResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteLinkMacSecConfigResponseArgs) ToExpressRouteLinkMacSecConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkMacSecConfigResponseOutput).ToExpressRouteLinkMacSecConfigResponsePtrOutputWithContext(ctx)
}

// ExpressRouteLinkMacSecConfigResponsePtrInput is an input type that accepts ExpressRouteLinkMacSecConfigResponseArgs, ExpressRouteLinkMacSecConfigResponsePtr and ExpressRouteLinkMacSecConfigResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteLinkMacSecConfigResponsePtrInput` via:
//
//          ExpressRouteLinkMacSecConfigResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteLinkMacSecConfigResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteLinkMacSecConfigResponsePtrOutput() ExpressRouteLinkMacSecConfigResponsePtrOutput
	ToExpressRouteLinkMacSecConfigResponsePtrOutputWithContext(context.Context) ExpressRouteLinkMacSecConfigResponsePtrOutput
}

type expressRouteLinkMacSecConfigResponsePtrType ExpressRouteLinkMacSecConfigResponseArgs

func ExpressRouteLinkMacSecConfigResponsePtr(v *ExpressRouteLinkMacSecConfigResponseArgs) ExpressRouteLinkMacSecConfigResponsePtrInput {
	return (*expressRouteLinkMacSecConfigResponsePtrType)(v)
}

func (*expressRouteLinkMacSecConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteLinkMacSecConfigResponse)(nil)).Elem()
}

func (i *expressRouteLinkMacSecConfigResponsePtrType) ToExpressRouteLinkMacSecConfigResponsePtrOutput() ExpressRouteLinkMacSecConfigResponsePtrOutput {
	return i.ToExpressRouteLinkMacSecConfigResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteLinkMacSecConfigResponsePtrType) ToExpressRouteLinkMacSecConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkMacSecConfigResponsePtrOutput)
}

// ExpressRouteLink Mac Security Configuration.
type ExpressRouteLinkMacSecConfigResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkMacSecConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLinkMacSecConfigResponse)(nil)).Elem()
}

func (o ExpressRouteLinkMacSecConfigResponseOutput) ToExpressRouteLinkMacSecConfigResponseOutput() ExpressRouteLinkMacSecConfigResponseOutput {
	return o
}

func (o ExpressRouteLinkMacSecConfigResponseOutput) ToExpressRouteLinkMacSecConfigResponseOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigResponseOutput {
	return o
}

func (o ExpressRouteLinkMacSecConfigResponseOutput) ToExpressRouteLinkMacSecConfigResponsePtrOutput() ExpressRouteLinkMacSecConfigResponsePtrOutput {
	return o.ToExpressRouteLinkMacSecConfigResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteLinkMacSecConfigResponseOutput) ToExpressRouteLinkMacSecConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkMacSecConfigResponse) *ExpressRouteLinkMacSecConfigResponse {
		return &v
	}).(ExpressRouteLinkMacSecConfigResponsePtrOutput)
}

// Keyvault Secret Identifier URL containing Mac security CAK key.
func (o ExpressRouteLinkMacSecConfigResponseOutput) CakSecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkMacSecConfigResponse) *string { return v.CakSecretIdentifier }).(pulumi.StringPtrOutput)
}

// Mac security cipher.
func (o ExpressRouteLinkMacSecConfigResponseOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkMacSecConfigResponse) *string { return v.Cipher }).(pulumi.StringPtrOutput)
}

// Keyvault Secret Identifier URL containing Mac security CKN key.
func (o ExpressRouteLinkMacSecConfigResponseOutput) CknSecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkMacSecConfigResponse) *string { return v.CknSecretIdentifier }).(pulumi.StringPtrOutput)
}

// Sci mode enabled/disabled.
func (o ExpressRouteLinkMacSecConfigResponseOutput) SciState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkMacSecConfigResponse) *string { return v.SciState }).(pulumi.StringPtrOutput)
}

type ExpressRouteLinkMacSecConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkMacSecConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteLinkMacSecConfigResponse)(nil)).Elem()
}

func (o ExpressRouteLinkMacSecConfigResponsePtrOutput) ToExpressRouteLinkMacSecConfigResponsePtrOutput() ExpressRouteLinkMacSecConfigResponsePtrOutput {
	return o
}

func (o ExpressRouteLinkMacSecConfigResponsePtrOutput) ToExpressRouteLinkMacSecConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteLinkMacSecConfigResponsePtrOutput {
	return o
}

func (o ExpressRouteLinkMacSecConfigResponsePtrOutput) Elem() ExpressRouteLinkMacSecConfigResponseOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfigResponse) ExpressRouteLinkMacSecConfigResponse { return *v }).(ExpressRouteLinkMacSecConfigResponseOutput)
}

// Keyvault Secret Identifier URL containing Mac security CAK key.
func (o ExpressRouteLinkMacSecConfigResponsePtrOutput) CakSecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.CakSecretIdentifier
	}).(pulumi.StringPtrOutput)
}

// Mac security cipher.
func (o ExpressRouteLinkMacSecConfigResponsePtrOutput) Cipher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Cipher
	}).(pulumi.StringPtrOutput)
}

// Keyvault Secret Identifier URL containing Mac security CKN key.
func (o ExpressRouteLinkMacSecConfigResponsePtrOutput) CknSecretIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.CknSecretIdentifier
	}).(pulumi.StringPtrOutput)
}

// Sci mode enabled/disabled.
func (o ExpressRouteLinkMacSecConfigResponsePtrOutput) SciState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteLinkMacSecConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.SciState
	}).(pulumi.StringPtrOutput)
}

// ExpressRouteLink child resource definition.
type ExpressRouteLinkResponse struct {
	// Administrative state of the physical port.
	AdminState *string `pulumi:"adminState"`
	// Physical fiber port type.
	ConnectorType string `pulumi:"connectorType"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of Azure router interface.
	InterfaceName string `pulumi:"interfaceName"`
	// MacSec configuration.
	MacSecConfig *ExpressRouteLinkMacSecConfigResponse `pulumi:"macSecConfig"`
	// Name of child port resource that is unique among child port resources of the parent.
	Name *string `pulumi:"name"`
	// Mapping between physical port to patch panel port.
	PatchPanelId string `pulumi:"patchPanelId"`
	// The provisioning state of the express route link resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Mapping of physical patch panel to rack.
	RackId string `pulumi:"rackId"`
	// Name of Azure router associated with physical port.
	RouterName string `pulumi:"routerName"`
}

// ExpressRouteLinkResponseInput is an input type that accepts ExpressRouteLinkResponseArgs and ExpressRouteLinkResponseOutput values.
// You can construct a concrete instance of `ExpressRouteLinkResponseInput` via:
//
//          ExpressRouteLinkResponseArgs{...}
type ExpressRouteLinkResponseInput interface {
	pulumi.Input

	ToExpressRouteLinkResponseOutput() ExpressRouteLinkResponseOutput
	ToExpressRouteLinkResponseOutputWithContext(context.Context) ExpressRouteLinkResponseOutput
}

// ExpressRouteLink child resource definition.
type ExpressRouteLinkResponseArgs struct {
	// Administrative state of the physical port.
	AdminState pulumi.StringPtrInput `pulumi:"adminState"`
	// Physical fiber port type.
	ConnectorType pulumi.StringInput `pulumi:"connectorType"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of Azure router interface.
	InterfaceName pulumi.StringInput `pulumi:"interfaceName"`
	// MacSec configuration.
	MacSecConfig ExpressRouteLinkMacSecConfigResponsePtrInput `pulumi:"macSecConfig"`
	// Name of child port resource that is unique among child port resources of the parent.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Mapping between physical port to patch panel port.
	PatchPanelId pulumi.StringInput `pulumi:"patchPanelId"`
	// The provisioning state of the express route link resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Mapping of physical patch panel to rack.
	RackId pulumi.StringInput `pulumi:"rackId"`
	// Name of Azure router associated with physical port.
	RouterName pulumi.StringInput `pulumi:"routerName"`
}

func (ExpressRouteLinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLinkResponse)(nil)).Elem()
}

func (i ExpressRouteLinkResponseArgs) ToExpressRouteLinkResponseOutput() ExpressRouteLinkResponseOutput {
	return i.ToExpressRouteLinkResponseOutputWithContext(context.Background())
}

func (i ExpressRouteLinkResponseArgs) ToExpressRouteLinkResponseOutputWithContext(ctx context.Context) ExpressRouteLinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkResponseOutput)
}

// ExpressRouteLinkResponseArrayInput is an input type that accepts ExpressRouteLinkResponseArray and ExpressRouteLinkResponseArrayOutput values.
// You can construct a concrete instance of `ExpressRouteLinkResponseArrayInput` via:
//
//          ExpressRouteLinkResponseArray{ ExpressRouteLinkResponseArgs{...} }
type ExpressRouteLinkResponseArrayInput interface {
	pulumi.Input

	ToExpressRouteLinkResponseArrayOutput() ExpressRouteLinkResponseArrayOutput
	ToExpressRouteLinkResponseArrayOutputWithContext(context.Context) ExpressRouteLinkResponseArrayOutput
}

type ExpressRouteLinkResponseArray []ExpressRouteLinkResponseInput

func (ExpressRouteLinkResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteLinkResponse)(nil)).Elem()
}

func (i ExpressRouteLinkResponseArray) ToExpressRouteLinkResponseArrayOutput() ExpressRouteLinkResponseArrayOutput {
	return i.ToExpressRouteLinkResponseArrayOutputWithContext(context.Background())
}

func (i ExpressRouteLinkResponseArray) ToExpressRouteLinkResponseArrayOutputWithContext(ctx context.Context) ExpressRouteLinkResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteLinkResponseArrayOutput)
}

// ExpressRouteLink child resource definition.
type ExpressRouteLinkResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteLinkResponse)(nil)).Elem()
}

func (o ExpressRouteLinkResponseOutput) ToExpressRouteLinkResponseOutput() ExpressRouteLinkResponseOutput {
	return o
}

func (o ExpressRouteLinkResponseOutput) ToExpressRouteLinkResponseOutputWithContext(ctx context.Context) ExpressRouteLinkResponseOutput {
	return o
}

// Administrative state of the physical port.
func (o ExpressRouteLinkResponseOutput) AdminState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) *string { return v.AdminState }).(pulumi.StringPtrOutput)
}

// Physical fiber port type.
func (o ExpressRouteLinkResponseOutput) ConnectorType() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) string { return v.ConnectorType }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteLinkResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ExpressRouteLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of Azure router interface.
func (o ExpressRouteLinkResponseOutput) InterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) string { return v.InterfaceName }).(pulumi.StringOutput)
}

// MacSec configuration.
func (o ExpressRouteLinkResponseOutput) MacSecConfig() ExpressRouteLinkMacSecConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) *ExpressRouteLinkMacSecConfigResponse { return v.MacSecConfig }).(ExpressRouteLinkMacSecConfigResponsePtrOutput)
}

// Name of child port resource that is unique among child port resources of the parent.
func (o ExpressRouteLinkResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Mapping between physical port to patch panel port.
func (o ExpressRouteLinkResponseOutput) PatchPanelId() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) string { return v.PatchPanelId }).(pulumi.StringOutput)
}

// The provisioning state of the express route link resource.
func (o ExpressRouteLinkResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Mapping of physical patch panel to rack.
func (o ExpressRouteLinkResponseOutput) RackId() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) string { return v.RackId }).(pulumi.StringOutput)
}

// Name of Azure router associated with physical port.
func (o ExpressRouteLinkResponseOutput) RouterName() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteLinkResponse) string { return v.RouterName }).(pulumi.StringOutput)
}

type ExpressRouteLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteLinkResponse)(nil)).Elem()
}

func (o ExpressRouteLinkResponseArrayOutput) ToExpressRouteLinkResponseArrayOutput() ExpressRouteLinkResponseArrayOutput {
	return o
}

func (o ExpressRouteLinkResponseArrayOutput) ToExpressRouteLinkResponseArrayOutputWithContext(ctx context.Context) ExpressRouteLinkResponseArrayOutput {
	return o
}

func (o ExpressRouteLinkResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteLinkResponse {
		return vs[0].([]ExpressRouteLinkResponse)[vs[1].(int)]
	}).(ExpressRouteLinkResponseOutput)
}

// ExtendedLocation complex type.
type ExtendedLocation struct {
	// The name of the extended location.
	Name string `pulumi:"name"`
	// The type of the extended location.
	Type string `pulumi:"type"`
}

// ExtendedLocationInput is an input type that accepts ExtendedLocationArgs and ExtendedLocationOutput values.
// You can construct a concrete instance of `ExtendedLocationInput` via:
//
//          ExtendedLocationArgs{...}
type ExtendedLocationInput interface {
	pulumi.Input

	ToExtendedLocationOutput() ExtendedLocationOutput
	ToExtendedLocationOutputWithContext(context.Context) ExtendedLocationOutput
}

// ExtendedLocation complex type.
type ExtendedLocationArgs struct {
	// The name of the extended location.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the extended location.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ExtendedLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (i ExtendedLocationArgs) ToExtendedLocationOutput() ExtendedLocationOutput {
	return i.ToExtendedLocationOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput)
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i ExtendedLocationArgs) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationOutput).ToExtendedLocationPtrOutputWithContext(ctx)
}

// ExtendedLocationPtrInput is an input type that accepts ExtendedLocationArgs, ExtendedLocationPtr and ExtendedLocationPtrOutput values.
// You can construct a concrete instance of `ExtendedLocationPtrInput` via:
//
//          ExtendedLocationArgs{...}
//
//  or:
//
//          nil
type ExtendedLocationPtrInput interface {
	pulumi.Input

	ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput
	ToExtendedLocationPtrOutputWithContext(context.Context) ExtendedLocationPtrOutput
}

type extendedLocationPtrType ExtendedLocationArgs

func ExtendedLocationPtr(v *ExtendedLocationArgs) ExtendedLocationPtrInput {
	return (*extendedLocationPtrType)(v)
}

func (*extendedLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return i.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (i *extendedLocationPtrType) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationPtrOutput)
}

// ExtendedLocation complex type.
type ExtendedLocationOutput struct{ *pulumi.OutputState }

func (ExtendedLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationOutput) ToExtendedLocationOutput() ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationOutputWithContext(ctx context.Context) ExtendedLocationOutput {
	return o
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o.ToExtendedLocationPtrOutputWithContext(context.Background())
}

func (o ExtendedLocationOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o.ApplyT(func(v ExtendedLocation) *ExtendedLocation {
		return &v
	}).(ExtendedLocationPtrOutput)
}

// The name of the extended location.
func (o ExtendedLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExtendedLocation) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the extended location.
func (o ExtendedLocationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExtendedLocation) string { return v.Type }).(pulumi.StringOutput)
}

type ExtendedLocationPtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocation)(nil)).Elem()
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutput() ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) ToExtendedLocationPtrOutputWithContext(ctx context.Context) ExtendedLocationPtrOutput {
	return o
}

func (o ExtendedLocationPtrOutput) Elem() ExtendedLocationOutput {
	return o.ApplyT(func(v *ExtendedLocation) ExtendedLocation { return *v }).(ExtendedLocationOutput)
}

// The name of the extended location.
func (o ExtendedLocationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocation) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// ExtendedLocation complex type.
type ExtendedLocationResponse struct {
	// The name of the extended location.
	Name string `pulumi:"name"`
	// The type of the extended location.
	Type string `pulumi:"type"`
}

// ExtendedLocationResponseInput is an input type that accepts ExtendedLocationResponseArgs and ExtendedLocationResponseOutput values.
// You can construct a concrete instance of `ExtendedLocationResponseInput` via:
//
//          ExtendedLocationResponseArgs{...}
type ExtendedLocationResponseInput interface {
	pulumi.Input

	ToExtendedLocationResponseOutput() ExtendedLocationResponseOutput
	ToExtendedLocationResponseOutputWithContext(context.Context) ExtendedLocationResponseOutput
}

// ExtendedLocation complex type.
type ExtendedLocationResponseArgs struct {
	// The name of the extended location.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the extended location.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ExtendedLocationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationResponse)(nil)).Elem()
}

func (i ExtendedLocationResponseArgs) ToExtendedLocationResponseOutput() ExtendedLocationResponseOutput {
	return i.ToExtendedLocationResponseOutputWithContext(context.Background())
}

func (i ExtendedLocationResponseArgs) ToExtendedLocationResponseOutputWithContext(ctx context.Context) ExtendedLocationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationResponseOutput)
}

func (i ExtendedLocationResponseArgs) ToExtendedLocationResponsePtrOutput() ExtendedLocationResponsePtrOutput {
	return i.ToExtendedLocationResponsePtrOutputWithContext(context.Background())
}

func (i ExtendedLocationResponseArgs) ToExtendedLocationResponsePtrOutputWithContext(ctx context.Context) ExtendedLocationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationResponseOutput).ToExtendedLocationResponsePtrOutputWithContext(ctx)
}

// ExtendedLocationResponsePtrInput is an input type that accepts ExtendedLocationResponseArgs, ExtendedLocationResponsePtr and ExtendedLocationResponsePtrOutput values.
// You can construct a concrete instance of `ExtendedLocationResponsePtrInput` via:
//
//          ExtendedLocationResponseArgs{...}
//
//  or:
//
//          nil
type ExtendedLocationResponsePtrInput interface {
	pulumi.Input

	ToExtendedLocationResponsePtrOutput() ExtendedLocationResponsePtrOutput
	ToExtendedLocationResponsePtrOutputWithContext(context.Context) ExtendedLocationResponsePtrOutput
}

type extendedLocationResponsePtrType ExtendedLocationResponseArgs

func ExtendedLocationResponsePtr(v *ExtendedLocationResponseArgs) ExtendedLocationResponsePtrInput {
	return (*extendedLocationResponsePtrType)(v)
}

func (*extendedLocationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocationResponse)(nil)).Elem()
}

func (i *extendedLocationResponsePtrType) ToExtendedLocationResponsePtrOutput() ExtendedLocationResponsePtrOutput {
	return i.ToExtendedLocationResponsePtrOutputWithContext(context.Background())
}

func (i *extendedLocationResponsePtrType) ToExtendedLocationResponsePtrOutputWithContext(ctx context.Context) ExtendedLocationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtendedLocationResponsePtrOutput)
}

// ExtendedLocation complex type.
type ExtendedLocationResponseOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutput() ExtendedLocationResponseOutput {
	return o
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponseOutputWithContext(ctx context.Context) ExtendedLocationResponseOutput {
	return o
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponsePtrOutput() ExtendedLocationResponsePtrOutput {
	return o.ToExtendedLocationResponsePtrOutputWithContext(context.Background())
}

func (o ExtendedLocationResponseOutput) ToExtendedLocationResponsePtrOutputWithContext(ctx context.Context) ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) *ExtendedLocationResponse {
		return &v
	}).(ExtendedLocationResponsePtrOutput)
}

// The name of the extended location.
func (o ExtendedLocationResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the extended location.
func (o ExtendedLocationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ExtendedLocationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ExtendedLocationResponsePtrOutput struct{ *pulumi.OutputState }

func (ExtendedLocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExtendedLocationResponse)(nil)).Elem()
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutput() ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) ToExtendedLocationResponsePtrOutputWithContext(ctx context.Context) ExtendedLocationResponsePtrOutput {
	return o
}

func (o ExtendedLocationResponsePtrOutput) Elem() ExtendedLocationResponseOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) ExtendedLocationResponse { return *v }).(ExtendedLocationResponseOutput)
}

// The name of the extended location.
func (o ExtendedLocationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of the extended location.
func (o ExtendedLocationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExtendedLocationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Trusted Root certificates properties for tls.
type FirewallPolicyCertificateAuthority struct {
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId *string `pulumi:"keyVaultSecretId"`
	// Name of the CA certificate.
	Name *string `pulumi:"name"`
}

// FirewallPolicyCertificateAuthorityInput is an input type that accepts FirewallPolicyCertificateAuthorityArgs and FirewallPolicyCertificateAuthorityOutput values.
// You can construct a concrete instance of `FirewallPolicyCertificateAuthorityInput` via:
//
//          FirewallPolicyCertificateAuthorityArgs{...}
type FirewallPolicyCertificateAuthorityInput interface {
	pulumi.Input

	ToFirewallPolicyCertificateAuthorityOutput() FirewallPolicyCertificateAuthorityOutput
	ToFirewallPolicyCertificateAuthorityOutputWithContext(context.Context) FirewallPolicyCertificateAuthorityOutput
}

// Trusted Root certificates properties for tls.
type FirewallPolicyCertificateAuthorityArgs struct {
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId pulumi.StringPtrInput `pulumi:"keyVaultSecretId"`
	// Name of the CA certificate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyCertificateAuthorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyCertificateAuthority)(nil)).Elem()
}

func (i FirewallPolicyCertificateAuthorityArgs) ToFirewallPolicyCertificateAuthorityOutput() FirewallPolicyCertificateAuthorityOutput {
	return i.ToFirewallPolicyCertificateAuthorityOutputWithContext(context.Background())
}

func (i FirewallPolicyCertificateAuthorityArgs) ToFirewallPolicyCertificateAuthorityOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyCertificateAuthorityOutput)
}

func (i FirewallPolicyCertificateAuthorityArgs) ToFirewallPolicyCertificateAuthorityPtrOutput() FirewallPolicyCertificateAuthorityPtrOutput {
	return i.ToFirewallPolicyCertificateAuthorityPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyCertificateAuthorityArgs) ToFirewallPolicyCertificateAuthorityPtrOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyCertificateAuthorityOutput).ToFirewallPolicyCertificateAuthorityPtrOutputWithContext(ctx)
}

// FirewallPolicyCertificateAuthorityPtrInput is an input type that accepts FirewallPolicyCertificateAuthorityArgs, FirewallPolicyCertificateAuthorityPtr and FirewallPolicyCertificateAuthorityPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyCertificateAuthorityPtrInput` via:
//
//          FirewallPolicyCertificateAuthorityArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyCertificateAuthorityPtrInput interface {
	pulumi.Input

	ToFirewallPolicyCertificateAuthorityPtrOutput() FirewallPolicyCertificateAuthorityPtrOutput
	ToFirewallPolicyCertificateAuthorityPtrOutputWithContext(context.Context) FirewallPolicyCertificateAuthorityPtrOutput
}

type firewallPolicyCertificateAuthorityPtrType FirewallPolicyCertificateAuthorityArgs

func FirewallPolicyCertificateAuthorityPtr(v *FirewallPolicyCertificateAuthorityArgs) FirewallPolicyCertificateAuthorityPtrInput {
	return (*firewallPolicyCertificateAuthorityPtrType)(v)
}

func (*firewallPolicyCertificateAuthorityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyCertificateAuthority)(nil)).Elem()
}

func (i *firewallPolicyCertificateAuthorityPtrType) ToFirewallPolicyCertificateAuthorityPtrOutput() FirewallPolicyCertificateAuthorityPtrOutput {
	return i.ToFirewallPolicyCertificateAuthorityPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyCertificateAuthorityPtrType) ToFirewallPolicyCertificateAuthorityPtrOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyCertificateAuthorityPtrOutput)
}

// Trusted Root certificates properties for tls.
type FirewallPolicyCertificateAuthorityOutput struct{ *pulumi.OutputState }

func (FirewallPolicyCertificateAuthorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyCertificateAuthority)(nil)).Elem()
}

func (o FirewallPolicyCertificateAuthorityOutput) ToFirewallPolicyCertificateAuthorityOutput() FirewallPolicyCertificateAuthorityOutput {
	return o
}

func (o FirewallPolicyCertificateAuthorityOutput) ToFirewallPolicyCertificateAuthorityOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityOutput {
	return o
}

func (o FirewallPolicyCertificateAuthorityOutput) ToFirewallPolicyCertificateAuthorityPtrOutput() FirewallPolicyCertificateAuthorityPtrOutput {
	return o.ToFirewallPolicyCertificateAuthorityPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyCertificateAuthorityOutput) ToFirewallPolicyCertificateAuthorityPtrOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityPtrOutput {
	return o.ApplyT(func(v FirewallPolicyCertificateAuthority) *FirewallPolicyCertificateAuthority {
		return &v
	}).(FirewallPolicyCertificateAuthorityPtrOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o FirewallPolicyCertificateAuthorityOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyCertificateAuthority) *string { return v.KeyVaultSecretId }).(pulumi.StringPtrOutput)
}

// Name of the CA certificate.
func (o FirewallPolicyCertificateAuthorityOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyCertificateAuthority) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyCertificateAuthorityPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyCertificateAuthorityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyCertificateAuthority)(nil)).Elem()
}

func (o FirewallPolicyCertificateAuthorityPtrOutput) ToFirewallPolicyCertificateAuthorityPtrOutput() FirewallPolicyCertificateAuthorityPtrOutput {
	return o
}

func (o FirewallPolicyCertificateAuthorityPtrOutput) ToFirewallPolicyCertificateAuthorityPtrOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityPtrOutput {
	return o
}

func (o FirewallPolicyCertificateAuthorityPtrOutput) Elem() FirewallPolicyCertificateAuthorityOutput {
	return o.ApplyT(func(v *FirewallPolicyCertificateAuthority) FirewallPolicyCertificateAuthority { return *v }).(FirewallPolicyCertificateAuthorityOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o FirewallPolicyCertificateAuthorityPtrOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyCertificateAuthority) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultSecretId
	}).(pulumi.StringPtrOutput)
}

// Name of the CA certificate.
func (o FirewallPolicyCertificateAuthorityPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyCertificateAuthority) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Trusted Root certificates properties for tls.
type FirewallPolicyCertificateAuthorityResponse struct {
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId *string `pulumi:"keyVaultSecretId"`
	// Name of the CA certificate.
	Name *string `pulumi:"name"`
}

// FirewallPolicyCertificateAuthorityResponseInput is an input type that accepts FirewallPolicyCertificateAuthorityResponseArgs and FirewallPolicyCertificateAuthorityResponseOutput values.
// You can construct a concrete instance of `FirewallPolicyCertificateAuthorityResponseInput` via:
//
//          FirewallPolicyCertificateAuthorityResponseArgs{...}
type FirewallPolicyCertificateAuthorityResponseInput interface {
	pulumi.Input

	ToFirewallPolicyCertificateAuthorityResponseOutput() FirewallPolicyCertificateAuthorityResponseOutput
	ToFirewallPolicyCertificateAuthorityResponseOutputWithContext(context.Context) FirewallPolicyCertificateAuthorityResponseOutput
}

// Trusted Root certificates properties for tls.
type FirewallPolicyCertificateAuthorityResponseArgs struct {
	// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
	KeyVaultSecretId pulumi.StringPtrInput `pulumi:"keyVaultSecretId"`
	// Name of the CA certificate.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FirewallPolicyCertificateAuthorityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyCertificateAuthorityResponse)(nil)).Elem()
}

func (i FirewallPolicyCertificateAuthorityResponseArgs) ToFirewallPolicyCertificateAuthorityResponseOutput() FirewallPolicyCertificateAuthorityResponseOutput {
	return i.ToFirewallPolicyCertificateAuthorityResponseOutputWithContext(context.Background())
}

func (i FirewallPolicyCertificateAuthorityResponseArgs) ToFirewallPolicyCertificateAuthorityResponseOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyCertificateAuthorityResponseOutput)
}

func (i FirewallPolicyCertificateAuthorityResponseArgs) ToFirewallPolicyCertificateAuthorityResponsePtrOutput() FirewallPolicyCertificateAuthorityResponsePtrOutput {
	return i.ToFirewallPolicyCertificateAuthorityResponsePtrOutputWithContext(context.Background())
}

func (i FirewallPolicyCertificateAuthorityResponseArgs) ToFirewallPolicyCertificateAuthorityResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyCertificateAuthorityResponseOutput).ToFirewallPolicyCertificateAuthorityResponsePtrOutputWithContext(ctx)
}

// FirewallPolicyCertificateAuthorityResponsePtrInput is an input type that accepts FirewallPolicyCertificateAuthorityResponseArgs, FirewallPolicyCertificateAuthorityResponsePtr and FirewallPolicyCertificateAuthorityResponsePtrOutput values.
// You can construct a concrete instance of `FirewallPolicyCertificateAuthorityResponsePtrInput` via:
//
//          FirewallPolicyCertificateAuthorityResponseArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyCertificateAuthorityResponsePtrInput interface {
	pulumi.Input

	ToFirewallPolicyCertificateAuthorityResponsePtrOutput() FirewallPolicyCertificateAuthorityResponsePtrOutput
	ToFirewallPolicyCertificateAuthorityResponsePtrOutputWithContext(context.Context) FirewallPolicyCertificateAuthorityResponsePtrOutput
}

type firewallPolicyCertificateAuthorityResponsePtrType FirewallPolicyCertificateAuthorityResponseArgs

func FirewallPolicyCertificateAuthorityResponsePtr(v *FirewallPolicyCertificateAuthorityResponseArgs) FirewallPolicyCertificateAuthorityResponsePtrInput {
	return (*firewallPolicyCertificateAuthorityResponsePtrType)(v)
}

func (*firewallPolicyCertificateAuthorityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyCertificateAuthorityResponse)(nil)).Elem()
}

func (i *firewallPolicyCertificateAuthorityResponsePtrType) ToFirewallPolicyCertificateAuthorityResponsePtrOutput() FirewallPolicyCertificateAuthorityResponsePtrOutput {
	return i.ToFirewallPolicyCertificateAuthorityResponsePtrOutputWithContext(context.Background())
}

func (i *firewallPolicyCertificateAuthorityResponsePtrType) ToFirewallPolicyCertificateAuthorityResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyCertificateAuthorityResponsePtrOutput)
}

// Trusted Root certificates properties for tls.
type FirewallPolicyCertificateAuthorityResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyCertificateAuthorityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyCertificateAuthorityResponse)(nil)).Elem()
}

func (o FirewallPolicyCertificateAuthorityResponseOutput) ToFirewallPolicyCertificateAuthorityResponseOutput() FirewallPolicyCertificateAuthorityResponseOutput {
	return o
}

func (o FirewallPolicyCertificateAuthorityResponseOutput) ToFirewallPolicyCertificateAuthorityResponseOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityResponseOutput {
	return o
}

func (o FirewallPolicyCertificateAuthorityResponseOutput) ToFirewallPolicyCertificateAuthorityResponsePtrOutput() FirewallPolicyCertificateAuthorityResponsePtrOutput {
	return o.ToFirewallPolicyCertificateAuthorityResponsePtrOutputWithContext(context.Background())
}

func (o FirewallPolicyCertificateAuthorityResponseOutput) ToFirewallPolicyCertificateAuthorityResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyCertificateAuthorityResponse) *FirewallPolicyCertificateAuthorityResponse {
		return &v
	}).(FirewallPolicyCertificateAuthorityResponsePtrOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o FirewallPolicyCertificateAuthorityResponseOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyCertificateAuthorityResponse) *string { return v.KeyVaultSecretId }).(pulumi.StringPtrOutput)
}

// Name of the CA certificate.
func (o FirewallPolicyCertificateAuthorityResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyCertificateAuthorityResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FirewallPolicyCertificateAuthorityResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyCertificateAuthorityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyCertificateAuthorityResponse)(nil)).Elem()
}

func (o FirewallPolicyCertificateAuthorityResponsePtrOutput) ToFirewallPolicyCertificateAuthorityResponsePtrOutput() FirewallPolicyCertificateAuthorityResponsePtrOutput {
	return o
}

func (o FirewallPolicyCertificateAuthorityResponsePtrOutput) ToFirewallPolicyCertificateAuthorityResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyCertificateAuthorityResponsePtrOutput {
	return o
}

func (o FirewallPolicyCertificateAuthorityResponsePtrOutput) Elem() FirewallPolicyCertificateAuthorityResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyCertificateAuthorityResponse) FirewallPolicyCertificateAuthorityResponse {
		return *v
	}).(FirewallPolicyCertificateAuthorityResponseOutput)
}

// Secret Id of (base-64 encoded unencrypted pfx) 'Secret' or 'Certificate' object stored in KeyVault.
func (o FirewallPolicyCertificateAuthorityResponsePtrOutput) KeyVaultSecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyCertificateAuthorityResponse) *string {
		if v == nil {
			return nil
		}
		return v.KeyVaultSecretId
	}).(pulumi.StringPtrOutput)
}

// Name of the CA certificate.
func (o FirewallPolicyCertificateAuthorityResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyCertificateAuthorityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Firewall Policy Filter Rule.
type FirewallPolicyFilterRule struct {
	// The action type of a Filter rule.
	Action *FirewallPolicyFilterRuleAction `pulumi:"action"`
	// The name of the rule.
	Name *string `pulumi:"name"`
	// Priority of the Firewall Policy Rule resource.
	Priority *int `pulumi:"priority"`
	// Collection of rule conditions used by a rule.
	RuleConditions []interface{} `pulumi:"ruleConditions"`
	// The type of the rule.
	RuleType string `pulumi:"ruleType"`
}

// FirewallPolicyFilterRuleInput is an input type that accepts FirewallPolicyFilterRuleArgs and FirewallPolicyFilterRuleOutput values.
// You can construct a concrete instance of `FirewallPolicyFilterRuleInput` via:
//
//          FirewallPolicyFilterRuleArgs{...}
type FirewallPolicyFilterRuleInput interface {
	pulumi.Input

	ToFirewallPolicyFilterRuleOutput() FirewallPolicyFilterRuleOutput
	ToFirewallPolicyFilterRuleOutputWithContext(context.Context) FirewallPolicyFilterRuleOutput
}

// Firewall Policy Filter Rule.
type FirewallPolicyFilterRuleArgs struct {
	// The action type of a Filter rule.
	Action FirewallPolicyFilterRuleActionPtrInput `pulumi:"action"`
	// The name of the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the Firewall Policy Rule resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Collection of rule conditions used by a rule.
	RuleConditions pulumi.ArrayInput `pulumi:"ruleConditions"`
	// The type of the rule.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (FirewallPolicyFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRule)(nil)).Elem()
}

func (i FirewallPolicyFilterRuleArgs) ToFirewallPolicyFilterRuleOutput() FirewallPolicyFilterRuleOutput {
	return i.ToFirewallPolicyFilterRuleOutputWithContext(context.Background())
}

func (i FirewallPolicyFilterRuleArgs) ToFirewallPolicyFilterRuleOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleOutput)
}

// Firewall Policy Filter Rule.
type FirewallPolicyFilterRuleOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRule)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleOutput) ToFirewallPolicyFilterRuleOutput() FirewallPolicyFilterRuleOutput {
	return o
}

func (o FirewallPolicyFilterRuleOutput) ToFirewallPolicyFilterRuleOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleOutput {
	return o
}

// The action type of a Filter rule.
func (o FirewallPolicyFilterRuleOutput) Action() FirewallPolicyFilterRuleActionPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRule) *FirewallPolicyFilterRuleAction { return v.Action }).(FirewallPolicyFilterRuleActionPtrOutput)
}

// The name of the rule.
func (o FirewallPolicyFilterRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the Firewall Policy Rule resource.
func (o FirewallPolicyFilterRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Collection of rule conditions used by a rule.
func (o FirewallPolicyFilterRuleOutput) RuleConditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRule) []interface{} { return v.RuleConditions }).(pulumi.ArrayOutput)
}

// The type of the rule.
func (o FirewallPolicyFilterRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// Properties of the FirewallPolicyFilterRuleAction.
type FirewallPolicyFilterRuleAction struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// FirewallPolicyFilterRuleActionInput is an input type that accepts FirewallPolicyFilterRuleActionArgs and FirewallPolicyFilterRuleActionOutput values.
// You can construct a concrete instance of `FirewallPolicyFilterRuleActionInput` via:
//
//          FirewallPolicyFilterRuleActionArgs{...}
type FirewallPolicyFilterRuleActionInput interface {
	pulumi.Input

	ToFirewallPolicyFilterRuleActionOutput() FirewallPolicyFilterRuleActionOutput
	ToFirewallPolicyFilterRuleActionOutputWithContext(context.Context) FirewallPolicyFilterRuleActionOutput
}

// Properties of the FirewallPolicyFilterRuleAction.
type FirewallPolicyFilterRuleActionArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (FirewallPolicyFilterRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleAction)(nil)).Elem()
}

func (i FirewallPolicyFilterRuleActionArgs) ToFirewallPolicyFilterRuleActionOutput() FirewallPolicyFilterRuleActionOutput {
	return i.ToFirewallPolicyFilterRuleActionOutputWithContext(context.Background())
}

func (i FirewallPolicyFilterRuleActionArgs) ToFirewallPolicyFilterRuleActionOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleActionOutput)
}

func (i FirewallPolicyFilterRuleActionArgs) ToFirewallPolicyFilterRuleActionPtrOutput() FirewallPolicyFilterRuleActionPtrOutput {
	return i.ToFirewallPolicyFilterRuleActionPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyFilterRuleActionArgs) ToFirewallPolicyFilterRuleActionPtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleActionOutput).ToFirewallPolicyFilterRuleActionPtrOutputWithContext(ctx)
}

// FirewallPolicyFilterRuleActionPtrInput is an input type that accepts FirewallPolicyFilterRuleActionArgs, FirewallPolicyFilterRuleActionPtr and FirewallPolicyFilterRuleActionPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyFilterRuleActionPtrInput` via:
//
//          FirewallPolicyFilterRuleActionArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyFilterRuleActionPtrInput interface {
	pulumi.Input

	ToFirewallPolicyFilterRuleActionPtrOutput() FirewallPolicyFilterRuleActionPtrOutput
	ToFirewallPolicyFilterRuleActionPtrOutputWithContext(context.Context) FirewallPolicyFilterRuleActionPtrOutput
}

type firewallPolicyFilterRuleActionPtrType FirewallPolicyFilterRuleActionArgs

func FirewallPolicyFilterRuleActionPtr(v *FirewallPolicyFilterRuleActionArgs) FirewallPolicyFilterRuleActionPtrInput {
	return (*firewallPolicyFilterRuleActionPtrType)(v)
}

func (*firewallPolicyFilterRuleActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyFilterRuleAction)(nil)).Elem()
}

func (i *firewallPolicyFilterRuleActionPtrType) ToFirewallPolicyFilterRuleActionPtrOutput() FirewallPolicyFilterRuleActionPtrOutput {
	return i.ToFirewallPolicyFilterRuleActionPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyFilterRuleActionPtrType) ToFirewallPolicyFilterRuleActionPtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleActionPtrOutput)
}

// Properties of the FirewallPolicyFilterRuleAction.
type FirewallPolicyFilterRuleActionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleAction)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleActionOutput) ToFirewallPolicyFilterRuleActionOutput() FirewallPolicyFilterRuleActionOutput {
	return o
}

func (o FirewallPolicyFilterRuleActionOutput) ToFirewallPolicyFilterRuleActionOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionOutput {
	return o
}

func (o FirewallPolicyFilterRuleActionOutput) ToFirewallPolicyFilterRuleActionPtrOutput() FirewallPolicyFilterRuleActionPtrOutput {
	return o.ToFirewallPolicyFilterRuleActionPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyFilterRuleActionOutput) ToFirewallPolicyFilterRuleActionPtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleAction) *FirewallPolicyFilterRuleAction {
		return &v
	}).(FirewallPolicyFilterRuleActionPtrOutput)
}

// The type of action.
func (o FirewallPolicyFilterRuleActionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleAction) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FirewallPolicyFilterRuleActionPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyFilterRuleAction)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleActionPtrOutput) ToFirewallPolicyFilterRuleActionPtrOutput() FirewallPolicyFilterRuleActionPtrOutput {
	return o
}

func (o FirewallPolicyFilterRuleActionPtrOutput) ToFirewallPolicyFilterRuleActionPtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionPtrOutput {
	return o
}

func (o FirewallPolicyFilterRuleActionPtrOutput) Elem() FirewallPolicyFilterRuleActionOutput {
	return o.ApplyT(func(v *FirewallPolicyFilterRuleAction) FirewallPolicyFilterRuleAction { return *v }).(FirewallPolicyFilterRuleActionOutput)
}

// The type of action.
func (o FirewallPolicyFilterRuleActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyFilterRuleAction) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of the FirewallPolicyFilterRuleAction.
type FirewallPolicyFilterRuleActionResponse struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// FirewallPolicyFilterRuleActionResponseInput is an input type that accepts FirewallPolicyFilterRuleActionResponseArgs and FirewallPolicyFilterRuleActionResponseOutput values.
// You can construct a concrete instance of `FirewallPolicyFilterRuleActionResponseInput` via:
//
//          FirewallPolicyFilterRuleActionResponseArgs{...}
type FirewallPolicyFilterRuleActionResponseInput interface {
	pulumi.Input

	ToFirewallPolicyFilterRuleActionResponseOutput() FirewallPolicyFilterRuleActionResponseOutput
	ToFirewallPolicyFilterRuleActionResponseOutputWithContext(context.Context) FirewallPolicyFilterRuleActionResponseOutput
}

// Properties of the FirewallPolicyFilterRuleAction.
type FirewallPolicyFilterRuleActionResponseArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (FirewallPolicyFilterRuleActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleActionResponse)(nil)).Elem()
}

func (i FirewallPolicyFilterRuleActionResponseArgs) ToFirewallPolicyFilterRuleActionResponseOutput() FirewallPolicyFilterRuleActionResponseOutput {
	return i.ToFirewallPolicyFilterRuleActionResponseOutputWithContext(context.Background())
}

func (i FirewallPolicyFilterRuleActionResponseArgs) ToFirewallPolicyFilterRuleActionResponseOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleActionResponseOutput)
}

func (i FirewallPolicyFilterRuleActionResponseArgs) ToFirewallPolicyFilterRuleActionResponsePtrOutput() FirewallPolicyFilterRuleActionResponsePtrOutput {
	return i.ToFirewallPolicyFilterRuleActionResponsePtrOutputWithContext(context.Background())
}

func (i FirewallPolicyFilterRuleActionResponseArgs) ToFirewallPolicyFilterRuleActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleActionResponseOutput).ToFirewallPolicyFilterRuleActionResponsePtrOutputWithContext(ctx)
}

// FirewallPolicyFilterRuleActionResponsePtrInput is an input type that accepts FirewallPolicyFilterRuleActionResponseArgs, FirewallPolicyFilterRuleActionResponsePtr and FirewallPolicyFilterRuleActionResponsePtrOutput values.
// You can construct a concrete instance of `FirewallPolicyFilterRuleActionResponsePtrInput` via:
//
//          FirewallPolicyFilterRuleActionResponseArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyFilterRuleActionResponsePtrInput interface {
	pulumi.Input

	ToFirewallPolicyFilterRuleActionResponsePtrOutput() FirewallPolicyFilterRuleActionResponsePtrOutput
	ToFirewallPolicyFilterRuleActionResponsePtrOutputWithContext(context.Context) FirewallPolicyFilterRuleActionResponsePtrOutput
}

type firewallPolicyFilterRuleActionResponsePtrType FirewallPolicyFilterRuleActionResponseArgs

func FirewallPolicyFilterRuleActionResponsePtr(v *FirewallPolicyFilterRuleActionResponseArgs) FirewallPolicyFilterRuleActionResponsePtrInput {
	return (*firewallPolicyFilterRuleActionResponsePtrType)(v)
}

func (*firewallPolicyFilterRuleActionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyFilterRuleActionResponse)(nil)).Elem()
}

func (i *firewallPolicyFilterRuleActionResponsePtrType) ToFirewallPolicyFilterRuleActionResponsePtrOutput() FirewallPolicyFilterRuleActionResponsePtrOutput {
	return i.ToFirewallPolicyFilterRuleActionResponsePtrOutputWithContext(context.Background())
}

func (i *firewallPolicyFilterRuleActionResponsePtrType) ToFirewallPolicyFilterRuleActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleActionResponsePtrOutput)
}

// Properties of the FirewallPolicyFilterRuleAction.
type FirewallPolicyFilterRuleActionResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleActionResponse)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleActionResponseOutput) ToFirewallPolicyFilterRuleActionResponseOutput() FirewallPolicyFilterRuleActionResponseOutput {
	return o
}

func (o FirewallPolicyFilterRuleActionResponseOutput) ToFirewallPolicyFilterRuleActionResponseOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionResponseOutput {
	return o
}

func (o FirewallPolicyFilterRuleActionResponseOutput) ToFirewallPolicyFilterRuleActionResponsePtrOutput() FirewallPolicyFilterRuleActionResponsePtrOutput {
	return o.ToFirewallPolicyFilterRuleActionResponsePtrOutputWithContext(context.Background())
}

func (o FirewallPolicyFilterRuleActionResponseOutput) ToFirewallPolicyFilterRuleActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleActionResponse) *FirewallPolicyFilterRuleActionResponse {
		return &v
	}).(FirewallPolicyFilterRuleActionResponsePtrOutput)
}

// The type of action.
func (o FirewallPolicyFilterRuleActionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleActionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FirewallPolicyFilterRuleActionResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyFilterRuleActionResponse)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleActionResponsePtrOutput) ToFirewallPolicyFilterRuleActionResponsePtrOutput() FirewallPolicyFilterRuleActionResponsePtrOutput {
	return o
}

func (o FirewallPolicyFilterRuleActionResponsePtrOutput) ToFirewallPolicyFilterRuleActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleActionResponsePtrOutput {
	return o
}

func (o FirewallPolicyFilterRuleActionResponsePtrOutput) Elem() FirewallPolicyFilterRuleActionResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyFilterRuleActionResponse) FirewallPolicyFilterRuleActionResponse { return *v }).(FirewallPolicyFilterRuleActionResponseOutput)
}

// The type of action.
func (o FirewallPolicyFilterRuleActionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyFilterRuleActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Firewall Policy Filter Rule Collection.
type FirewallPolicyFilterRuleCollection struct {
	// The action type of a Filter rule collection.
	Action *FirewallPolicyFilterRuleCollectionAction `pulumi:"action"`
	// The name of the rule collection.
	Name *string `pulumi:"name"`
	// Priority of the Firewall Policy Rule Collection resource.
	Priority *int `pulumi:"priority"`
	// The type of the rule collection.
	RuleCollectionType string `pulumi:"ruleCollectionType"`
	// List of rules included in a rule collection.
	Rules []interface{} `pulumi:"rules"`
}

// FirewallPolicyFilterRuleCollectionInput is an input type that accepts FirewallPolicyFilterRuleCollectionArgs and FirewallPolicyFilterRuleCollectionOutput values.
// You can construct a concrete instance of `FirewallPolicyFilterRuleCollectionInput` via:
//
//          FirewallPolicyFilterRuleCollectionArgs{...}
type FirewallPolicyFilterRuleCollectionInput interface {
	pulumi.Input

	ToFirewallPolicyFilterRuleCollectionOutput() FirewallPolicyFilterRuleCollectionOutput
	ToFirewallPolicyFilterRuleCollectionOutputWithContext(context.Context) FirewallPolicyFilterRuleCollectionOutput
}

// Firewall Policy Filter Rule Collection.
type FirewallPolicyFilterRuleCollectionArgs struct {
	// The action type of a Filter rule collection.
	Action FirewallPolicyFilterRuleCollectionActionPtrInput `pulumi:"action"`
	// The name of the rule collection.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the Firewall Policy Rule Collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The type of the rule collection.
	RuleCollectionType pulumi.StringInput `pulumi:"ruleCollectionType"`
	// List of rules included in a rule collection.
	Rules pulumi.ArrayInput `pulumi:"rules"`
}

func (FirewallPolicyFilterRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleCollection)(nil)).Elem()
}

func (i FirewallPolicyFilterRuleCollectionArgs) ToFirewallPolicyFilterRuleCollectionOutput() FirewallPolicyFilterRuleCollectionOutput {
	return i.ToFirewallPolicyFilterRuleCollectionOutputWithContext(context.Background())
}

func (i FirewallPolicyFilterRuleCollectionArgs) ToFirewallPolicyFilterRuleCollectionOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleCollectionOutput)
}

// Firewall Policy Filter Rule Collection.
type FirewallPolicyFilterRuleCollectionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleCollection)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleCollectionOutput) ToFirewallPolicyFilterRuleCollectionOutput() FirewallPolicyFilterRuleCollectionOutput {
	return o
}

func (o FirewallPolicyFilterRuleCollectionOutput) ToFirewallPolicyFilterRuleCollectionOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionOutput {
	return o
}

// The action type of a Filter rule collection.
func (o FirewallPolicyFilterRuleCollectionOutput) Action() FirewallPolicyFilterRuleCollectionActionPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollection) *FirewallPolicyFilterRuleCollectionAction { return v.Action }).(FirewallPolicyFilterRuleCollectionActionPtrOutput)
}

// The name of the rule collection.
func (o FirewallPolicyFilterRuleCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the Firewall Policy Rule Collection resource.
func (o FirewallPolicyFilterRuleCollectionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollection) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The type of the rule collection.
func (o FirewallPolicyFilterRuleCollectionOutput) RuleCollectionType() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollection) string { return v.RuleCollectionType }).(pulumi.StringOutput)
}

// List of rules included in a rule collection.
func (o FirewallPolicyFilterRuleCollectionOutput) Rules() pulumi.ArrayOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollection) []interface{} { return v.Rules }).(pulumi.ArrayOutput)
}

// Properties of the FirewallPolicyFilterRuleCollectionAction.
type FirewallPolicyFilterRuleCollectionAction struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// FirewallPolicyFilterRuleCollectionActionInput is an input type that accepts FirewallPolicyFilterRuleCollectionActionArgs and FirewallPolicyFilterRuleCollectionActionOutput values.
// You can construct a concrete instance of `FirewallPolicyFilterRuleCollectionActionInput` via:
//
//          FirewallPolicyFilterRuleCollectionActionArgs{...}
type FirewallPolicyFilterRuleCollectionActionInput interface {
	pulumi.Input

	ToFirewallPolicyFilterRuleCollectionActionOutput() FirewallPolicyFilterRuleCollectionActionOutput
	ToFirewallPolicyFilterRuleCollectionActionOutputWithContext(context.Context) FirewallPolicyFilterRuleCollectionActionOutput
}

// Properties of the FirewallPolicyFilterRuleCollectionAction.
type FirewallPolicyFilterRuleCollectionActionArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (FirewallPolicyFilterRuleCollectionActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleCollectionAction)(nil)).Elem()
}

func (i FirewallPolicyFilterRuleCollectionActionArgs) ToFirewallPolicyFilterRuleCollectionActionOutput() FirewallPolicyFilterRuleCollectionActionOutput {
	return i.ToFirewallPolicyFilterRuleCollectionActionOutputWithContext(context.Background())
}

func (i FirewallPolicyFilterRuleCollectionActionArgs) ToFirewallPolicyFilterRuleCollectionActionOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleCollectionActionOutput)
}

func (i FirewallPolicyFilterRuleCollectionActionArgs) ToFirewallPolicyFilterRuleCollectionActionPtrOutput() FirewallPolicyFilterRuleCollectionActionPtrOutput {
	return i.ToFirewallPolicyFilterRuleCollectionActionPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyFilterRuleCollectionActionArgs) ToFirewallPolicyFilterRuleCollectionActionPtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleCollectionActionOutput).ToFirewallPolicyFilterRuleCollectionActionPtrOutputWithContext(ctx)
}

// FirewallPolicyFilterRuleCollectionActionPtrInput is an input type that accepts FirewallPolicyFilterRuleCollectionActionArgs, FirewallPolicyFilterRuleCollectionActionPtr and FirewallPolicyFilterRuleCollectionActionPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyFilterRuleCollectionActionPtrInput` via:
//
//          FirewallPolicyFilterRuleCollectionActionArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyFilterRuleCollectionActionPtrInput interface {
	pulumi.Input

	ToFirewallPolicyFilterRuleCollectionActionPtrOutput() FirewallPolicyFilterRuleCollectionActionPtrOutput
	ToFirewallPolicyFilterRuleCollectionActionPtrOutputWithContext(context.Context) FirewallPolicyFilterRuleCollectionActionPtrOutput
}

type firewallPolicyFilterRuleCollectionActionPtrType FirewallPolicyFilterRuleCollectionActionArgs

func FirewallPolicyFilterRuleCollectionActionPtr(v *FirewallPolicyFilterRuleCollectionActionArgs) FirewallPolicyFilterRuleCollectionActionPtrInput {
	return (*firewallPolicyFilterRuleCollectionActionPtrType)(v)
}

func (*firewallPolicyFilterRuleCollectionActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyFilterRuleCollectionAction)(nil)).Elem()
}

func (i *firewallPolicyFilterRuleCollectionActionPtrType) ToFirewallPolicyFilterRuleCollectionActionPtrOutput() FirewallPolicyFilterRuleCollectionActionPtrOutput {
	return i.ToFirewallPolicyFilterRuleCollectionActionPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyFilterRuleCollectionActionPtrType) ToFirewallPolicyFilterRuleCollectionActionPtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleCollectionActionPtrOutput)
}

// Properties of the FirewallPolicyFilterRuleCollectionAction.
type FirewallPolicyFilterRuleCollectionActionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleCollectionActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleCollectionAction)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleCollectionActionOutput) ToFirewallPolicyFilterRuleCollectionActionOutput() FirewallPolicyFilterRuleCollectionActionOutput {
	return o
}

func (o FirewallPolicyFilterRuleCollectionActionOutput) ToFirewallPolicyFilterRuleCollectionActionOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionOutput {
	return o
}

func (o FirewallPolicyFilterRuleCollectionActionOutput) ToFirewallPolicyFilterRuleCollectionActionPtrOutput() FirewallPolicyFilterRuleCollectionActionPtrOutput {
	return o.ToFirewallPolicyFilterRuleCollectionActionPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyFilterRuleCollectionActionOutput) ToFirewallPolicyFilterRuleCollectionActionPtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollectionAction) *FirewallPolicyFilterRuleCollectionAction {
		return &v
	}).(FirewallPolicyFilterRuleCollectionActionPtrOutput)
}

// The type of action.
func (o FirewallPolicyFilterRuleCollectionActionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollectionAction) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FirewallPolicyFilterRuleCollectionActionPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleCollectionActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyFilterRuleCollectionAction)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleCollectionActionPtrOutput) ToFirewallPolicyFilterRuleCollectionActionPtrOutput() FirewallPolicyFilterRuleCollectionActionPtrOutput {
	return o
}

func (o FirewallPolicyFilterRuleCollectionActionPtrOutput) ToFirewallPolicyFilterRuleCollectionActionPtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionPtrOutput {
	return o
}

func (o FirewallPolicyFilterRuleCollectionActionPtrOutput) Elem() FirewallPolicyFilterRuleCollectionActionOutput {
	return o.ApplyT(func(v *FirewallPolicyFilterRuleCollectionAction) FirewallPolicyFilterRuleCollectionAction { return *v }).(FirewallPolicyFilterRuleCollectionActionOutput)
}

// The type of action.
func (o FirewallPolicyFilterRuleCollectionActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyFilterRuleCollectionAction) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of the FirewallPolicyFilterRuleCollectionAction.
type FirewallPolicyFilterRuleCollectionActionResponse struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// FirewallPolicyFilterRuleCollectionActionResponseInput is an input type that accepts FirewallPolicyFilterRuleCollectionActionResponseArgs and FirewallPolicyFilterRuleCollectionActionResponseOutput values.
// You can construct a concrete instance of `FirewallPolicyFilterRuleCollectionActionResponseInput` via:
//
//          FirewallPolicyFilterRuleCollectionActionResponseArgs{...}
type FirewallPolicyFilterRuleCollectionActionResponseInput interface {
	pulumi.Input

	ToFirewallPolicyFilterRuleCollectionActionResponseOutput() FirewallPolicyFilterRuleCollectionActionResponseOutput
	ToFirewallPolicyFilterRuleCollectionActionResponseOutputWithContext(context.Context) FirewallPolicyFilterRuleCollectionActionResponseOutput
}

// Properties of the FirewallPolicyFilterRuleCollectionAction.
type FirewallPolicyFilterRuleCollectionActionResponseArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (FirewallPolicyFilterRuleCollectionActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleCollectionActionResponse)(nil)).Elem()
}

func (i FirewallPolicyFilterRuleCollectionActionResponseArgs) ToFirewallPolicyFilterRuleCollectionActionResponseOutput() FirewallPolicyFilterRuleCollectionActionResponseOutput {
	return i.ToFirewallPolicyFilterRuleCollectionActionResponseOutputWithContext(context.Background())
}

func (i FirewallPolicyFilterRuleCollectionActionResponseArgs) ToFirewallPolicyFilterRuleCollectionActionResponseOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleCollectionActionResponseOutput)
}

func (i FirewallPolicyFilterRuleCollectionActionResponseArgs) ToFirewallPolicyFilterRuleCollectionActionResponsePtrOutput() FirewallPolicyFilterRuleCollectionActionResponsePtrOutput {
	return i.ToFirewallPolicyFilterRuleCollectionActionResponsePtrOutputWithContext(context.Background())
}

func (i FirewallPolicyFilterRuleCollectionActionResponseArgs) ToFirewallPolicyFilterRuleCollectionActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleCollectionActionResponseOutput).ToFirewallPolicyFilterRuleCollectionActionResponsePtrOutputWithContext(ctx)
}

// FirewallPolicyFilterRuleCollectionActionResponsePtrInput is an input type that accepts FirewallPolicyFilterRuleCollectionActionResponseArgs, FirewallPolicyFilterRuleCollectionActionResponsePtr and FirewallPolicyFilterRuleCollectionActionResponsePtrOutput values.
// You can construct a concrete instance of `FirewallPolicyFilterRuleCollectionActionResponsePtrInput` via:
//
//          FirewallPolicyFilterRuleCollectionActionResponseArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyFilterRuleCollectionActionResponsePtrInput interface {
	pulumi.Input

	ToFirewallPolicyFilterRuleCollectionActionResponsePtrOutput() FirewallPolicyFilterRuleCollectionActionResponsePtrOutput
	ToFirewallPolicyFilterRuleCollectionActionResponsePtrOutputWithContext(context.Context) FirewallPolicyFilterRuleCollectionActionResponsePtrOutput
}

type firewallPolicyFilterRuleCollectionActionResponsePtrType FirewallPolicyFilterRuleCollectionActionResponseArgs

func FirewallPolicyFilterRuleCollectionActionResponsePtr(v *FirewallPolicyFilterRuleCollectionActionResponseArgs) FirewallPolicyFilterRuleCollectionActionResponsePtrInput {
	return (*firewallPolicyFilterRuleCollectionActionResponsePtrType)(v)
}

func (*firewallPolicyFilterRuleCollectionActionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyFilterRuleCollectionActionResponse)(nil)).Elem()
}

func (i *firewallPolicyFilterRuleCollectionActionResponsePtrType) ToFirewallPolicyFilterRuleCollectionActionResponsePtrOutput() FirewallPolicyFilterRuleCollectionActionResponsePtrOutput {
	return i.ToFirewallPolicyFilterRuleCollectionActionResponsePtrOutputWithContext(context.Background())
}

func (i *firewallPolicyFilterRuleCollectionActionResponsePtrType) ToFirewallPolicyFilterRuleCollectionActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleCollectionActionResponsePtrOutput)
}

// Properties of the FirewallPolicyFilterRuleCollectionAction.
type FirewallPolicyFilterRuleCollectionActionResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleCollectionActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleCollectionActionResponse)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleCollectionActionResponseOutput) ToFirewallPolicyFilterRuleCollectionActionResponseOutput() FirewallPolicyFilterRuleCollectionActionResponseOutput {
	return o
}

func (o FirewallPolicyFilterRuleCollectionActionResponseOutput) ToFirewallPolicyFilterRuleCollectionActionResponseOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionResponseOutput {
	return o
}

func (o FirewallPolicyFilterRuleCollectionActionResponseOutput) ToFirewallPolicyFilterRuleCollectionActionResponsePtrOutput() FirewallPolicyFilterRuleCollectionActionResponsePtrOutput {
	return o.ToFirewallPolicyFilterRuleCollectionActionResponsePtrOutputWithContext(context.Background())
}

func (o FirewallPolicyFilterRuleCollectionActionResponseOutput) ToFirewallPolicyFilterRuleCollectionActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollectionActionResponse) *FirewallPolicyFilterRuleCollectionActionResponse {
		return &v
	}).(FirewallPolicyFilterRuleCollectionActionResponsePtrOutput)
}

// The type of action.
func (o FirewallPolicyFilterRuleCollectionActionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollectionActionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FirewallPolicyFilterRuleCollectionActionResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleCollectionActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyFilterRuleCollectionActionResponse)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleCollectionActionResponsePtrOutput) ToFirewallPolicyFilterRuleCollectionActionResponsePtrOutput() FirewallPolicyFilterRuleCollectionActionResponsePtrOutput {
	return o
}

func (o FirewallPolicyFilterRuleCollectionActionResponsePtrOutput) ToFirewallPolicyFilterRuleCollectionActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionActionResponsePtrOutput {
	return o
}

func (o FirewallPolicyFilterRuleCollectionActionResponsePtrOutput) Elem() FirewallPolicyFilterRuleCollectionActionResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyFilterRuleCollectionActionResponse) FirewallPolicyFilterRuleCollectionActionResponse {
		return *v
	}).(FirewallPolicyFilterRuleCollectionActionResponseOutput)
}

// The type of action.
func (o FirewallPolicyFilterRuleCollectionActionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyFilterRuleCollectionActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Firewall Policy Filter Rule Collection.
type FirewallPolicyFilterRuleCollectionResponse struct {
	// The action type of a Filter rule collection.
	Action *FirewallPolicyFilterRuleCollectionActionResponse `pulumi:"action"`
	// The name of the rule collection.
	Name *string `pulumi:"name"`
	// Priority of the Firewall Policy Rule Collection resource.
	Priority *int `pulumi:"priority"`
	// The type of the rule collection.
	RuleCollectionType string `pulumi:"ruleCollectionType"`
	// List of rules included in a rule collection.
	Rules []interface{} `pulumi:"rules"`
}

// FirewallPolicyFilterRuleCollectionResponseInput is an input type that accepts FirewallPolicyFilterRuleCollectionResponseArgs and FirewallPolicyFilterRuleCollectionResponseOutput values.
// You can construct a concrete instance of `FirewallPolicyFilterRuleCollectionResponseInput` via:
//
//          FirewallPolicyFilterRuleCollectionResponseArgs{...}
type FirewallPolicyFilterRuleCollectionResponseInput interface {
	pulumi.Input

	ToFirewallPolicyFilterRuleCollectionResponseOutput() FirewallPolicyFilterRuleCollectionResponseOutput
	ToFirewallPolicyFilterRuleCollectionResponseOutputWithContext(context.Context) FirewallPolicyFilterRuleCollectionResponseOutput
}

// Firewall Policy Filter Rule Collection.
type FirewallPolicyFilterRuleCollectionResponseArgs struct {
	// The action type of a Filter rule collection.
	Action FirewallPolicyFilterRuleCollectionActionResponsePtrInput `pulumi:"action"`
	// The name of the rule collection.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the Firewall Policy Rule Collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The type of the rule collection.
	RuleCollectionType pulumi.StringInput `pulumi:"ruleCollectionType"`
	// List of rules included in a rule collection.
	Rules pulumi.ArrayInput `pulumi:"rules"`
}

func (FirewallPolicyFilterRuleCollectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleCollectionResponse)(nil)).Elem()
}

func (i FirewallPolicyFilterRuleCollectionResponseArgs) ToFirewallPolicyFilterRuleCollectionResponseOutput() FirewallPolicyFilterRuleCollectionResponseOutput {
	return i.ToFirewallPolicyFilterRuleCollectionResponseOutputWithContext(context.Background())
}

func (i FirewallPolicyFilterRuleCollectionResponseArgs) ToFirewallPolicyFilterRuleCollectionResponseOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleCollectionResponseOutput)
}

// Firewall Policy Filter Rule Collection.
type FirewallPolicyFilterRuleCollectionResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleCollectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleCollectionResponse)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleCollectionResponseOutput) ToFirewallPolicyFilterRuleCollectionResponseOutput() FirewallPolicyFilterRuleCollectionResponseOutput {
	return o
}

func (o FirewallPolicyFilterRuleCollectionResponseOutput) ToFirewallPolicyFilterRuleCollectionResponseOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleCollectionResponseOutput {
	return o
}

// The action type of a Filter rule collection.
func (o FirewallPolicyFilterRuleCollectionResponseOutput) Action() FirewallPolicyFilterRuleCollectionActionResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollectionResponse) *FirewallPolicyFilterRuleCollectionActionResponse {
		return v.Action
	}).(FirewallPolicyFilterRuleCollectionActionResponsePtrOutput)
}

// The name of the rule collection.
func (o FirewallPolicyFilterRuleCollectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the Firewall Policy Rule Collection resource.
func (o FirewallPolicyFilterRuleCollectionResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollectionResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The type of the rule collection.
func (o FirewallPolicyFilterRuleCollectionResponseOutput) RuleCollectionType() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollectionResponse) string { return v.RuleCollectionType }).(pulumi.StringOutput)
}

// List of rules included in a rule collection.
func (o FirewallPolicyFilterRuleCollectionResponseOutput) Rules() pulumi.ArrayOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleCollectionResponse) []interface{} { return v.Rules }).(pulumi.ArrayOutput)
}

// Firewall Policy Filter Rule.
type FirewallPolicyFilterRuleResponse struct {
	// The action type of a Filter rule.
	Action *FirewallPolicyFilterRuleActionResponse `pulumi:"action"`
	// The name of the rule.
	Name *string `pulumi:"name"`
	// Priority of the Firewall Policy Rule resource.
	Priority *int `pulumi:"priority"`
	// Collection of rule conditions used by a rule.
	RuleConditions []interface{} `pulumi:"ruleConditions"`
	// The type of the rule.
	RuleType string `pulumi:"ruleType"`
}

// FirewallPolicyFilterRuleResponseInput is an input type that accepts FirewallPolicyFilterRuleResponseArgs and FirewallPolicyFilterRuleResponseOutput values.
// You can construct a concrete instance of `FirewallPolicyFilterRuleResponseInput` via:
//
//          FirewallPolicyFilterRuleResponseArgs{...}
type FirewallPolicyFilterRuleResponseInput interface {
	pulumi.Input

	ToFirewallPolicyFilterRuleResponseOutput() FirewallPolicyFilterRuleResponseOutput
	ToFirewallPolicyFilterRuleResponseOutputWithContext(context.Context) FirewallPolicyFilterRuleResponseOutput
}

// Firewall Policy Filter Rule.
type FirewallPolicyFilterRuleResponseArgs struct {
	// The action type of a Filter rule.
	Action FirewallPolicyFilterRuleActionResponsePtrInput `pulumi:"action"`
	// The name of the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the Firewall Policy Rule resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Collection of rule conditions used by a rule.
	RuleConditions pulumi.ArrayInput `pulumi:"ruleConditions"`
	// The type of the rule.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (FirewallPolicyFilterRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleResponse)(nil)).Elem()
}

func (i FirewallPolicyFilterRuleResponseArgs) ToFirewallPolicyFilterRuleResponseOutput() FirewallPolicyFilterRuleResponseOutput {
	return i.ToFirewallPolicyFilterRuleResponseOutputWithContext(context.Background())
}

func (i FirewallPolicyFilterRuleResponseArgs) ToFirewallPolicyFilterRuleResponseOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyFilterRuleResponseOutput)
}

// Firewall Policy Filter Rule.
type FirewallPolicyFilterRuleResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyFilterRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyFilterRuleResponse)(nil)).Elem()
}

func (o FirewallPolicyFilterRuleResponseOutput) ToFirewallPolicyFilterRuleResponseOutput() FirewallPolicyFilterRuleResponseOutput {
	return o
}

func (o FirewallPolicyFilterRuleResponseOutput) ToFirewallPolicyFilterRuleResponseOutputWithContext(ctx context.Context) FirewallPolicyFilterRuleResponseOutput {
	return o
}

// The action type of a Filter rule.
func (o FirewallPolicyFilterRuleResponseOutput) Action() FirewallPolicyFilterRuleActionResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleResponse) *FirewallPolicyFilterRuleActionResponse { return v.Action }).(FirewallPolicyFilterRuleActionResponsePtrOutput)
}

// The name of the rule.
func (o FirewallPolicyFilterRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the Firewall Policy Rule resource.
func (o FirewallPolicyFilterRuleResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Collection of rule conditions used by a rule.
func (o FirewallPolicyFilterRuleResponseOutput) RuleConditions() pulumi.ArrayOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleResponse) []interface{} { return v.RuleConditions }).(pulumi.ArrayOutput)
}

// The type of the rule.
func (o FirewallPolicyFilterRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyFilterRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

// Configuration for intrusion detection mode and rules.
type FirewallPolicyIntrusionDetection struct {
	// Intrusion detection configuration properties.
	Configuration *FirewallPolicyIntrusionDetectionConfiguration `pulumi:"configuration"`
	// Intrusion detection general state.
	Mode *string `pulumi:"mode"`
}

// FirewallPolicyIntrusionDetectionInput is an input type that accepts FirewallPolicyIntrusionDetectionArgs and FirewallPolicyIntrusionDetectionOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionInput` via:
//
//          FirewallPolicyIntrusionDetectionArgs{...}
type FirewallPolicyIntrusionDetectionInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionOutput() FirewallPolicyIntrusionDetectionOutput
	ToFirewallPolicyIntrusionDetectionOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionOutput
}

// Configuration for intrusion detection mode and rules.
type FirewallPolicyIntrusionDetectionArgs struct {
	// Intrusion detection configuration properties.
	Configuration FirewallPolicyIntrusionDetectionConfigurationPtrInput `pulumi:"configuration"`
	// Intrusion detection general state.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (FirewallPolicyIntrusionDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetection)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionArgs) ToFirewallPolicyIntrusionDetectionOutput() FirewallPolicyIntrusionDetectionOutput {
	return i.ToFirewallPolicyIntrusionDetectionOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionArgs) ToFirewallPolicyIntrusionDetectionOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionOutput)
}

func (i FirewallPolicyIntrusionDetectionArgs) ToFirewallPolicyIntrusionDetectionPtrOutput() FirewallPolicyIntrusionDetectionPtrOutput {
	return i.ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionArgs) ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionOutput).ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(ctx)
}

// FirewallPolicyIntrusionDetectionPtrInput is an input type that accepts FirewallPolicyIntrusionDetectionArgs, FirewallPolicyIntrusionDetectionPtr and FirewallPolicyIntrusionDetectionPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionPtrInput` via:
//
//          FirewallPolicyIntrusionDetectionArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyIntrusionDetectionPtrInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionPtrOutput() FirewallPolicyIntrusionDetectionPtrOutput
	ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionPtrOutput
}

type firewallPolicyIntrusionDetectionPtrType FirewallPolicyIntrusionDetectionArgs

func FirewallPolicyIntrusionDetectionPtr(v *FirewallPolicyIntrusionDetectionArgs) FirewallPolicyIntrusionDetectionPtrInput {
	return (*firewallPolicyIntrusionDetectionPtrType)(v)
}

func (*firewallPolicyIntrusionDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyIntrusionDetection)(nil)).Elem()
}

func (i *firewallPolicyIntrusionDetectionPtrType) ToFirewallPolicyIntrusionDetectionPtrOutput() FirewallPolicyIntrusionDetectionPtrOutput {
	return i.ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyIntrusionDetectionPtrType) ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionPtrOutput)
}

// Configuration for intrusion detection mode and rules.
type FirewallPolicyIntrusionDetectionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetection)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionOutput) ToFirewallPolicyIntrusionDetectionOutput() FirewallPolicyIntrusionDetectionOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionOutput) ToFirewallPolicyIntrusionDetectionOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionOutput) ToFirewallPolicyIntrusionDetectionPtrOutput() FirewallPolicyIntrusionDetectionPtrOutput {
	return o.ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyIntrusionDetectionOutput) ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetection) *FirewallPolicyIntrusionDetection {
		return &v
	}).(FirewallPolicyIntrusionDetectionPtrOutput)
}

// Intrusion detection configuration properties.
func (o FirewallPolicyIntrusionDetectionOutput) Configuration() FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetection) *FirewallPolicyIntrusionDetectionConfiguration {
		return v.Configuration
	}).(FirewallPolicyIntrusionDetectionConfigurationPtrOutput)
}

// Intrusion detection general state.
func (o FirewallPolicyIntrusionDetectionOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetection) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type FirewallPolicyIntrusionDetectionPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyIntrusionDetection)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionPtrOutput) ToFirewallPolicyIntrusionDetectionPtrOutput() FirewallPolicyIntrusionDetectionPtrOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionPtrOutput) ToFirewallPolicyIntrusionDetectionPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionPtrOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionPtrOutput) Elem() FirewallPolicyIntrusionDetectionOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetection) FirewallPolicyIntrusionDetection { return *v }).(FirewallPolicyIntrusionDetectionOutput)
}

// Intrusion detection configuration properties.
func (o FirewallPolicyIntrusionDetectionPtrOutput) Configuration() FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetection) *FirewallPolicyIntrusionDetectionConfiguration {
		if v == nil {
			return nil
		}
		return v.Configuration
	}).(FirewallPolicyIntrusionDetectionConfigurationPtrOutput)
}

// Intrusion detection general state.
func (o FirewallPolicyIntrusionDetectionPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetection) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Intrusion detection bypass traffic specification.
type FirewallPolicyIntrusionDetectionBypassTrafficSpecifications struct {
	// Description of the bypass traffic rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or ranges for this rule.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups []string `pulumi:"destinationIpGroups"`
	// List of destination ports or ranges.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Name of the bypass traffic rule.
	Name *string `pulumi:"name"`
	// The rule bypass protocol.
	Protocol *string `pulumi:"protocol"`
	// List of source IP addresses or ranges for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsInput is an input type that accepts FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArgs and FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsInput` via:
//
//          FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArgs{...}
type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput
	ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput
}

// Intrusion detection bypass traffic specification.
type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArgs struct {
	// Description of the bypass traffic rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or ranges for this rule.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups pulumi.StringArrayInput `pulumi:"destinationIpGroups"`
	// List of destination ports or ranges.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Name of the bypass traffic rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The rule bypass protocol.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// List of source IP addresses or ranges for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
}

func (FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionBypassTrafficSpecifications)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArgs) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput {
	return i.ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArgs) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput)
}

// FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayInput is an input type that accepts FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArray and FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayInput` via:
//
//          FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArray{ FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArgs{...} }
type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput
	ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput
}

type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArray []FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsInput

func (FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyIntrusionDetectionBypassTrafficSpecifications)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArray) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput {
	return i.ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArray) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput)
}

// Intrusion detection bypass traffic specification.
type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionBypassTrafficSpecifications)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput {
	return o
}

// Description of the bypass traffic rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecifications) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or ranges for this rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecifications) []string {
		return v.DestinationAddresses
	}).(pulumi.StringArrayOutput)
}

// List of destination IpGroups for this rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecifications) []string {
		return v.DestinationIpGroups
	}).(pulumi.StringArrayOutput)
}

// List of destination ports or ranges.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecifications) []string {
		return v.DestinationPorts
	}).(pulumi.StringArrayOutput)
}

// Name of the bypass traffic rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecifications) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The rule bypass protocol.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecifications) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// List of source IP addresses or ranges for this rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecifications) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecifications) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyIntrusionDetectionBypassTrafficSpecifications)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput) Index(i pulumi.IntInput) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyIntrusionDetectionBypassTrafficSpecifications {
		return vs[0].([]FirewallPolicyIntrusionDetectionBypassTrafficSpecifications)[vs[1].(int)]
	}).(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput)
}

// Intrusion detection bypass traffic specification.
type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse struct {
	// Description of the bypass traffic rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or ranges for this rule.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups []string `pulumi:"destinationIpGroups"`
	// List of destination ports or ranges.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Name of the bypass traffic rule.
	Name *string `pulumi:"name"`
	// The rule bypass protocol.
	Protocol *string `pulumi:"protocol"`
	// List of source IP addresses or ranges for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseInput is an input type that accepts FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArgs and FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseInput` via:
//
//          FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArgs{...}
type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput
	ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput
}

// Intrusion detection bypass traffic specification.
type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArgs struct {
	// Description of the bypass traffic rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or ranges for this rule.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups pulumi.StringArrayInput `pulumi:"destinationIpGroups"`
	// List of destination ports or ranges.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Name of the bypass traffic rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The rule bypass protocol.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// List of source IP addresses or ranges for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
}

func (FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArgs) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput {
	return i.ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArgs) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput)
}

// FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayInput is an input type that accepts FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArray and FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayInput` via:
//
//          FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArray{ FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArgs{...} }
type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput
	ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput
}

type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArray []FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseInput

func (FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArray) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput {
	return i.ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArray) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput)
}

// Intrusion detection bypass traffic specification.
type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput {
	return o
}

// Description of the bypass traffic rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse) *string {
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or ranges for this rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse) []string {
		return v.DestinationAddresses
	}).(pulumi.StringArrayOutput)
}

// List of destination IpGroups for this rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse) []string {
		return v.DestinationIpGroups
	}).(pulumi.StringArrayOutput)
}

// List of destination ports or ranges.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse) []string {
		return v.DestinationPorts
	}).(pulumi.StringArrayOutput)
}

// Name of the bypass traffic rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The rule bypass protocol.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// List of source IP addresses or ranges for this rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse) []string {
		return v.SourceAddresses
	}).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse) []string {
		return v.SourceIpGroups
	}).(pulumi.StringArrayOutput)
}

type FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput) ToFirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput) Index(i pulumi.IntInput) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse {
		return vs[0].([]FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse)[vs[1].(int)]
	}).(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput)
}

// The operation for configuring intrusion detection.
type FirewallPolicyIntrusionDetectionConfiguration struct {
	// List of rules for traffic to bypass.
	BypassTrafficSettings []FirewallPolicyIntrusionDetectionBypassTrafficSpecifications `pulumi:"bypassTrafficSettings"`
	// List of specific signatures states.
	SignatureOverrides []FirewallPolicyIntrusionDetectionSignatureSpecification `pulumi:"signatureOverrides"`
}

// FirewallPolicyIntrusionDetectionConfigurationInput is an input type that accepts FirewallPolicyIntrusionDetectionConfigurationArgs and FirewallPolicyIntrusionDetectionConfigurationOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionConfigurationInput` via:
//
//          FirewallPolicyIntrusionDetectionConfigurationArgs{...}
type FirewallPolicyIntrusionDetectionConfigurationInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionConfigurationOutput() FirewallPolicyIntrusionDetectionConfigurationOutput
	ToFirewallPolicyIntrusionDetectionConfigurationOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionConfigurationOutput
}

// The operation for configuring intrusion detection.
type FirewallPolicyIntrusionDetectionConfigurationArgs struct {
	// List of rules for traffic to bypass.
	BypassTrafficSettings FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayInput `pulumi:"bypassTrafficSettings"`
	// List of specific signatures states.
	SignatureOverrides FirewallPolicyIntrusionDetectionSignatureSpecificationArrayInput `pulumi:"signatureOverrides"`
}

func (FirewallPolicyIntrusionDetectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionConfiguration)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionConfigurationArgs) ToFirewallPolicyIntrusionDetectionConfigurationOutput() FirewallPolicyIntrusionDetectionConfigurationOutput {
	return i.ToFirewallPolicyIntrusionDetectionConfigurationOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionConfigurationArgs) ToFirewallPolicyIntrusionDetectionConfigurationOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionConfigurationOutput)
}

func (i FirewallPolicyIntrusionDetectionConfigurationArgs) ToFirewallPolicyIntrusionDetectionConfigurationPtrOutput() FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return i.ToFirewallPolicyIntrusionDetectionConfigurationPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionConfigurationArgs) ToFirewallPolicyIntrusionDetectionConfigurationPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionConfigurationOutput).ToFirewallPolicyIntrusionDetectionConfigurationPtrOutputWithContext(ctx)
}

// FirewallPolicyIntrusionDetectionConfigurationPtrInput is an input type that accepts FirewallPolicyIntrusionDetectionConfigurationArgs, FirewallPolicyIntrusionDetectionConfigurationPtr and FirewallPolicyIntrusionDetectionConfigurationPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionConfigurationPtrInput` via:
//
//          FirewallPolicyIntrusionDetectionConfigurationArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyIntrusionDetectionConfigurationPtrInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionConfigurationPtrOutput() FirewallPolicyIntrusionDetectionConfigurationPtrOutput
	ToFirewallPolicyIntrusionDetectionConfigurationPtrOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionConfigurationPtrOutput
}

type firewallPolicyIntrusionDetectionConfigurationPtrType FirewallPolicyIntrusionDetectionConfigurationArgs

func FirewallPolicyIntrusionDetectionConfigurationPtr(v *FirewallPolicyIntrusionDetectionConfigurationArgs) FirewallPolicyIntrusionDetectionConfigurationPtrInput {
	return (*firewallPolicyIntrusionDetectionConfigurationPtrType)(v)
}

func (*firewallPolicyIntrusionDetectionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyIntrusionDetectionConfiguration)(nil)).Elem()
}

func (i *firewallPolicyIntrusionDetectionConfigurationPtrType) ToFirewallPolicyIntrusionDetectionConfigurationPtrOutput() FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return i.ToFirewallPolicyIntrusionDetectionConfigurationPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyIntrusionDetectionConfigurationPtrType) ToFirewallPolicyIntrusionDetectionConfigurationPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionConfigurationPtrOutput)
}

// The operation for configuring intrusion detection.
type FirewallPolicyIntrusionDetectionConfigurationOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionConfiguration)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionConfigurationOutput) ToFirewallPolicyIntrusionDetectionConfigurationOutput() FirewallPolicyIntrusionDetectionConfigurationOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionConfigurationOutput) ToFirewallPolicyIntrusionDetectionConfigurationOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionConfigurationOutput) ToFirewallPolicyIntrusionDetectionConfigurationPtrOutput() FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return o.ToFirewallPolicyIntrusionDetectionConfigurationPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyIntrusionDetectionConfigurationOutput) ToFirewallPolicyIntrusionDetectionConfigurationPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionConfiguration) *FirewallPolicyIntrusionDetectionConfiguration {
		return &v
	}).(FirewallPolicyIntrusionDetectionConfigurationPtrOutput)
}

// List of rules for traffic to bypass.
func (o FirewallPolicyIntrusionDetectionConfigurationOutput) BypassTrafficSettings() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionConfiguration) []FirewallPolicyIntrusionDetectionBypassTrafficSpecifications {
		return v.BypassTrafficSettings
	}).(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput)
}

// List of specific signatures states.
func (o FirewallPolicyIntrusionDetectionConfigurationOutput) SignatureOverrides() FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionConfiguration) []FirewallPolicyIntrusionDetectionSignatureSpecification {
		return v.SignatureOverrides
	}).(FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput)
}

type FirewallPolicyIntrusionDetectionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyIntrusionDetectionConfiguration)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionConfigurationPtrOutput) ToFirewallPolicyIntrusionDetectionConfigurationPtrOutput() FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionConfigurationPtrOutput) ToFirewallPolicyIntrusionDetectionConfigurationPtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationPtrOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionConfigurationPtrOutput) Elem() FirewallPolicyIntrusionDetectionConfigurationOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionConfiguration) FirewallPolicyIntrusionDetectionConfiguration {
		return *v
	}).(FirewallPolicyIntrusionDetectionConfigurationOutput)
}

// List of rules for traffic to bypass.
func (o FirewallPolicyIntrusionDetectionConfigurationPtrOutput) BypassTrafficSettings() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionConfiguration) []FirewallPolicyIntrusionDetectionBypassTrafficSpecifications {
		if v == nil {
			return nil
		}
		return v.BypassTrafficSettings
	}).(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput)
}

// List of specific signatures states.
func (o FirewallPolicyIntrusionDetectionConfigurationPtrOutput) SignatureOverrides() FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionConfiguration) []FirewallPolicyIntrusionDetectionSignatureSpecification {
		if v == nil {
			return nil
		}
		return v.SignatureOverrides
	}).(FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput)
}

// The operation for configuring intrusion detection.
type FirewallPolicyIntrusionDetectionConfigurationResponse struct {
	// List of rules for traffic to bypass.
	BypassTrafficSettings []FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse `pulumi:"bypassTrafficSettings"`
	// List of specific signatures states.
	SignatureOverrides []FirewallPolicyIntrusionDetectionSignatureSpecificationResponse `pulumi:"signatureOverrides"`
}

// FirewallPolicyIntrusionDetectionConfigurationResponseInput is an input type that accepts FirewallPolicyIntrusionDetectionConfigurationResponseArgs and FirewallPolicyIntrusionDetectionConfigurationResponseOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionConfigurationResponseInput` via:
//
//          FirewallPolicyIntrusionDetectionConfigurationResponseArgs{...}
type FirewallPolicyIntrusionDetectionConfigurationResponseInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionConfigurationResponseOutput() FirewallPolicyIntrusionDetectionConfigurationResponseOutput
	ToFirewallPolicyIntrusionDetectionConfigurationResponseOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionConfigurationResponseOutput
}

// The operation for configuring intrusion detection.
type FirewallPolicyIntrusionDetectionConfigurationResponseArgs struct {
	// List of rules for traffic to bypass.
	BypassTrafficSettings FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayInput `pulumi:"bypassTrafficSettings"`
	// List of specific signatures states.
	SignatureOverrides FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayInput `pulumi:"signatureOverrides"`
}

func (FirewallPolicyIntrusionDetectionConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionConfigurationResponse)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionConfigurationResponseArgs) ToFirewallPolicyIntrusionDetectionConfigurationResponseOutput() FirewallPolicyIntrusionDetectionConfigurationResponseOutput {
	return i.ToFirewallPolicyIntrusionDetectionConfigurationResponseOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionConfigurationResponseArgs) ToFirewallPolicyIntrusionDetectionConfigurationResponseOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionConfigurationResponseOutput)
}

func (i FirewallPolicyIntrusionDetectionConfigurationResponseArgs) ToFirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput() FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput {
	return i.ToFirewallPolicyIntrusionDetectionConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionConfigurationResponseArgs) ToFirewallPolicyIntrusionDetectionConfigurationResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionConfigurationResponseOutput).ToFirewallPolicyIntrusionDetectionConfigurationResponsePtrOutputWithContext(ctx)
}

// FirewallPolicyIntrusionDetectionConfigurationResponsePtrInput is an input type that accepts FirewallPolicyIntrusionDetectionConfigurationResponseArgs, FirewallPolicyIntrusionDetectionConfigurationResponsePtr and FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionConfigurationResponsePtrInput` via:
//
//          FirewallPolicyIntrusionDetectionConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyIntrusionDetectionConfigurationResponsePtrInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput() FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput
	ToFirewallPolicyIntrusionDetectionConfigurationResponsePtrOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput
}

type firewallPolicyIntrusionDetectionConfigurationResponsePtrType FirewallPolicyIntrusionDetectionConfigurationResponseArgs

func FirewallPolicyIntrusionDetectionConfigurationResponsePtr(v *FirewallPolicyIntrusionDetectionConfigurationResponseArgs) FirewallPolicyIntrusionDetectionConfigurationResponsePtrInput {
	return (*firewallPolicyIntrusionDetectionConfigurationResponsePtrType)(v)
}

func (*firewallPolicyIntrusionDetectionConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyIntrusionDetectionConfigurationResponse)(nil)).Elem()
}

func (i *firewallPolicyIntrusionDetectionConfigurationResponsePtrType) ToFirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput() FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput {
	return i.ToFirewallPolicyIntrusionDetectionConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *firewallPolicyIntrusionDetectionConfigurationResponsePtrType) ToFirewallPolicyIntrusionDetectionConfigurationResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput)
}

// The operation for configuring intrusion detection.
type FirewallPolicyIntrusionDetectionConfigurationResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionConfigurationResponse)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionConfigurationResponseOutput) ToFirewallPolicyIntrusionDetectionConfigurationResponseOutput() FirewallPolicyIntrusionDetectionConfigurationResponseOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionConfigurationResponseOutput) ToFirewallPolicyIntrusionDetectionConfigurationResponseOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationResponseOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionConfigurationResponseOutput) ToFirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput() FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput {
	return o.ToFirewallPolicyIntrusionDetectionConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o FirewallPolicyIntrusionDetectionConfigurationResponseOutput) ToFirewallPolicyIntrusionDetectionConfigurationResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionConfigurationResponse) *FirewallPolicyIntrusionDetectionConfigurationResponse {
		return &v
	}).(FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput)
}

// List of rules for traffic to bypass.
func (o FirewallPolicyIntrusionDetectionConfigurationResponseOutput) BypassTrafficSettings() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionConfigurationResponse) []FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse {
		return v.BypassTrafficSettings
	}).(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput)
}

// List of specific signatures states.
func (o FirewallPolicyIntrusionDetectionConfigurationResponseOutput) SignatureOverrides() FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionConfigurationResponse) []FirewallPolicyIntrusionDetectionSignatureSpecificationResponse {
		return v.SignatureOverrides
	}).(FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput)
}

type FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyIntrusionDetectionConfigurationResponse)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput) ToFirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput() FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput) ToFirewallPolicyIntrusionDetectionConfigurationResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput) Elem() FirewallPolicyIntrusionDetectionConfigurationResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionConfigurationResponse) FirewallPolicyIntrusionDetectionConfigurationResponse {
		return *v
	}).(FirewallPolicyIntrusionDetectionConfigurationResponseOutput)
}

// List of rules for traffic to bypass.
func (o FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput) BypassTrafficSettings() FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionConfigurationResponse) []FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponse {
		if v == nil {
			return nil
		}
		return v.BypassTrafficSettings
	}).(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput)
}

// List of specific signatures states.
func (o FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput) SignatureOverrides() FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionConfigurationResponse) []FirewallPolicyIntrusionDetectionSignatureSpecificationResponse {
		if v == nil {
			return nil
		}
		return v.SignatureOverrides
	}).(FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput)
}

// Configuration for intrusion detection mode and rules.
type FirewallPolicyIntrusionDetectionResponse struct {
	// Intrusion detection configuration properties.
	Configuration *FirewallPolicyIntrusionDetectionConfigurationResponse `pulumi:"configuration"`
	// Intrusion detection general state.
	Mode *string `pulumi:"mode"`
}

// FirewallPolicyIntrusionDetectionResponseInput is an input type that accepts FirewallPolicyIntrusionDetectionResponseArgs and FirewallPolicyIntrusionDetectionResponseOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionResponseInput` via:
//
//          FirewallPolicyIntrusionDetectionResponseArgs{...}
type FirewallPolicyIntrusionDetectionResponseInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionResponseOutput() FirewallPolicyIntrusionDetectionResponseOutput
	ToFirewallPolicyIntrusionDetectionResponseOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionResponseOutput
}

// Configuration for intrusion detection mode and rules.
type FirewallPolicyIntrusionDetectionResponseArgs struct {
	// Intrusion detection configuration properties.
	Configuration FirewallPolicyIntrusionDetectionConfigurationResponsePtrInput `pulumi:"configuration"`
	// Intrusion detection general state.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (FirewallPolicyIntrusionDetectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionResponse)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionResponseArgs) ToFirewallPolicyIntrusionDetectionResponseOutput() FirewallPolicyIntrusionDetectionResponseOutput {
	return i.ToFirewallPolicyIntrusionDetectionResponseOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionResponseArgs) ToFirewallPolicyIntrusionDetectionResponseOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionResponseOutput)
}

func (i FirewallPolicyIntrusionDetectionResponseArgs) ToFirewallPolicyIntrusionDetectionResponsePtrOutput() FirewallPolicyIntrusionDetectionResponsePtrOutput {
	return i.ToFirewallPolicyIntrusionDetectionResponsePtrOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionResponseArgs) ToFirewallPolicyIntrusionDetectionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionResponseOutput).ToFirewallPolicyIntrusionDetectionResponsePtrOutputWithContext(ctx)
}

// FirewallPolicyIntrusionDetectionResponsePtrInput is an input type that accepts FirewallPolicyIntrusionDetectionResponseArgs, FirewallPolicyIntrusionDetectionResponsePtr and FirewallPolicyIntrusionDetectionResponsePtrOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionResponsePtrInput` via:
//
//          FirewallPolicyIntrusionDetectionResponseArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyIntrusionDetectionResponsePtrInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionResponsePtrOutput() FirewallPolicyIntrusionDetectionResponsePtrOutput
	ToFirewallPolicyIntrusionDetectionResponsePtrOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionResponsePtrOutput
}

type firewallPolicyIntrusionDetectionResponsePtrType FirewallPolicyIntrusionDetectionResponseArgs

func FirewallPolicyIntrusionDetectionResponsePtr(v *FirewallPolicyIntrusionDetectionResponseArgs) FirewallPolicyIntrusionDetectionResponsePtrInput {
	return (*firewallPolicyIntrusionDetectionResponsePtrType)(v)
}

func (*firewallPolicyIntrusionDetectionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyIntrusionDetectionResponse)(nil)).Elem()
}

func (i *firewallPolicyIntrusionDetectionResponsePtrType) ToFirewallPolicyIntrusionDetectionResponsePtrOutput() FirewallPolicyIntrusionDetectionResponsePtrOutput {
	return i.ToFirewallPolicyIntrusionDetectionResponsePtrOutputWithContext(context.Background())
}

func (i *firewallPolicyIntrusionDetectionResponsePtrType) ToFirewallPolicyIntrusionDetectionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionResponsePtrOutput)
}

// Configuration for intrusion detection mode and rules.
type FirewallPolicyIntrusionDetectionResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionResponse)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionResponseOutput) ToFirewallPolicyIntrusionDetectionResponseOutput() FirewallPolicyIntrusionDetectionResponseOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionResponseOutput) ToFirewallPolicyIntrusionDetectionResponseOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionResponseOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionResponseOutput) ToFirewallPolicyIntrusionDetectionResponsePtrOutput() FirewallPolicyIntrusionDetectionResponsePtrOutput {
	return o.ToFirewallPolicyIntrusionDetectionResponsePtrOutputWithContext(context.Background())
}

func (o FirewallPolicyIntrusionDetectionResponseOutput) ToFirewallPolicyIntrusionDetectionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionResponse) *FirewallPolicyIntrusionDetectionResponse {
		return &v
	}).(FirewallPolicyIntrusionDetectionResponsePtrOutput)
}

// Intrusion detection configuration properties.
func (o FirewallPolicyIntrusionDetectionResponseOutput) Configuration() FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionResponse) *FirewallPolicyIntrusionDetectionConfigurationResponse {
		return v.Configuration
	}).(FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput)
}

// Intrusion detection general state.
func (o FirewallPolicyIntrusionDetectionResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type FirewallPolicyIntrusionDetectionResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyIntrusionDetectionResponse)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionResponsePtrOutput) ToFirewallPolicyIntrusionDetectionResponsePtrOutput() FirewallPolicyIntrusionDetectionResponsePtrOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionResponsePtrOutput) ToFirewallPolicyIntrusionDetectionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionResponsePtrOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionResponsePtrOutput) Elem() FirewallPolicyIntrusionDetectionResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionResponse) FirewallPolicyIntrusionDetectionResponse { return *v }).(FirewallPolicyIntrusionDetectionResponseOutput)
}

// Intrusion detection configuration properties.
func (o FirewallPolicyIntrusionDetectionResponsePtrOutput) Configuration() FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionResponse) *FirewallPolicyIntrusionDetectionConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.Configuration
	}).(FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput)
}

// Intrusion detection general state.
func (o FirewallPolicyIntrusionDetectionResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyIntrusionDetectionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Intrusion detection signatures specification states.
type FirewallPolicyIntrusionDetectionSignatureSpecification struct {
	// Signature id.
	Id *string `pulumi:"id"`
	// The signature state.
	Mode *string `pulumi:"mode"`
}

// FirewallPolicyIntrusionDetectionSignatureSpecificationInput is an input type that accepts FirewallPolicyIntrusionDetectionSignatureSpecificationArgs and FirewallPolicyIntrusionDetectionSignatureSpecificationOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionSignatureSpecificationInput` via:
//
//          FirewallPolicyIntrusionDetectionSignatureSpecificationArgs{...}
type FirewallPolicyIntrusionDetectionSignatureSpecificationInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionSignatureSpecificationOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationOutput
	ToFirewallPolicyIntrusionDetectionSignatureSpecificationOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationOutput
}

// Intrusion detection signatures specification states.
type FirewallPolicyIntrusionDetectionSignatureSpecificationArgs struct {
	// Signature id.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The signature state.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (FirewallPolicyIntrusionDetectionSignatureSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionSignatureSpecification)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionSignatureSpecificationArgs) ToFirewallPolicyIntrusionDetectionSignatureSpecificationOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationOutput {
	return i.ToFirewallPolicyIntrusionDetectionSignatureSpecificationOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionSignatureSpecificationArgs) ToFirewallPolicyIntrusionDetectionSignatureSpecificationOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionSignatureSpecificationOutput)
}

// FirewallPolicyIntrusionDetectionSignatureSpecificationArrayInput is an input type that accepts FirewallPolicyIntrusionDetectionSignatureSpecificationArray and FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionSignatureSpecificationArrayInput` via:
//
//          FirewallPolicyIntrusionDetectionSignatureSpecificationArray{ FirewallPolicyIntrusionDetectionSignatureSpecificationArgs{...} }
type FirewallPolicyIntrusionDetectionSignatureSpecificationArrayInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput
	ToFirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput
}

type FirewallPolicyIntrusionDetectionSignatureSpecificationArray []FirewallPolicyIntrusionDetectionSignatureSpecificationInput

func (FirewallPolicyIntrusionDetectionSignatureSpecificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyIntrusionDetectionSignatureSpecification)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionSignatureSpecificationArray) ToFirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput {
	return i.ToFirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionSignatureSpecificationArray) ToFirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput)
}

// Intrusion detection signatures specification states.
type FirewallPolicyIntrusionDetectionSignatureSpecificationOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionSignatureSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionSignatureSpecification)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationOutput) ToFirewallPolicyIntrusionDetectionSignatureSpecificationOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationOutput) ToFirewallPolicyIntrusionDetectionSignatureSpecificationOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationOutput {
	return o
}

// Signature id.
func (o FirewallPolicyIntrusionDetectionSignatureSpecificationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionSignatureSpecification) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The signature state.
func (o FirewallPolicyIntrusionDetectionSignatureSpecificationOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionSignatureSpecification) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyIntrusionDetectionSignatureSpecification)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput) ToFirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput) ToFirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput) Index(i pulumi.IntInput) FirewallPolicyIntrusionDetectionSignatureSpecificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyIntrusionDetectionSignatureSpecification {
		return vs[0].([]FirewallPolicyIntrusionDetectionSignatureSpecification)[vs[1].(int)]
	}).(FirewallPolicyIntrusionDetectionSignatureSpecificationOutput)
}

// Intrusion detection signatures specification states.
type FirewallPolicyIntrusionDetectionSignatureSpecificationResponse struct {
	// Signature id.
	Id *string `pulumi:"id"`
	// The signature state.
	Mode *string `pulumi:"mode"`
}

// FirewallPolicyIntrusionDetectionSignatureSpecificationResponseInput is an input type that accepts FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArgs and FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionSignatureSpecificationResponseInput` via:
//
//          FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArgs{...}
type FirewallPolicyIntrusionDetectionSignatureSpecificationResponseInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput
	ToFirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput
}

// Intrusion detection signatures specification states.
type FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArgs struct {
	// Signature id.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The signature state.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionSignatureSpecificationResponse)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArgs) ToFirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput {
	return i.ToFirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArgs) ToFirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput)
}

// FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayInput is an input type that accepts FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArray and FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayInput` via:
//
//          FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArray{ FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArgs{...} }
type FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayInput interface {
	pulumi.Input

	ToFirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput
	ToFirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutputWithContext(context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput
}

type FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArray []FirewallPolicyIntrusionDetectionSignatureSpecificationResponseInput

func (FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyIntrusionDetectionSignatureSpecificationResponse)(nil)).Elem()
}

func (i FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArray) ToFirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput {
	return i.ToFirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArray) ToFirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput)
}

// Intrusion detection signatures specification states.
type FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyIntrusionDetectionSignatureSpecificationResponse)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput) ToFirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput) ToFirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput {
	return o
}

// Signature id.
func (o FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionSignatureSpecificationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The signature state.
func (o FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyIntrusionDetectionSignatureSpecificationResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyIntrusionDetectionSignatureSpecificationResponse)(nil)).Elem()
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput) ToFirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput() FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput) ToFirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutputWithContext(ctx context.Context) FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput {
	return o
}

func (o FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput) Index(i pulumi.IntInput) FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyIntrusionDetectionSignatureSpecificationResponse {
		return vs[0].([]FirewallPolicyIntrusionDetectionSignatureSpecificationResponse)[vs[1].(int)]
	}).(FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput)
}

// Firewall Policy NAT Rule.
type FirewallPolicyNatRule struct {
	// The action type of a Nat rule.
	Action *FirewallPolicyNatRuleAction `pulumi:"action"`
	// The name of the rule.
	Name *string `pulumi:"name"`
	// Priority of the Firewall Policy Rule resource.
	Priority *int `pulumi:"priority"`
	// The match conditions for incoming traffic.
	RuleCondition interface{} `pulumi:"ruleCondition"`
	// The type of the rule.
	RuleType string `pulumi:"ruleType"`
	// The translated address for this NAT rule.
	TranslatedAddress *string `pulumi:"translatedAddress"`
	// The translated port for this NAT rule.
	TranslatedPort *string `pulumi:"translatedPort"`
}

// FirewallPolicyNatRuleInput is an input type that accepts FirewallPolicyNatRuleArgs and FirewallPolicyNatRuleOutput values.
// You can construct a concrete instance of `FirewallPolicyNatRuleInput` via:
//
//          FirewallPolicyNatRuleArgs{...}
type FirewallPolicyNatRuleInput interface {
	pulumi.Input

	ToFirewallPolicyNatRuleOutput() FirewallPolicyNatRuleOutput
	ToFirewallPolicyNatRuleOutputWithContext(context.Context) FirewallPolicyNatRuleOutput
}

// Firewall Policy NAT Rule.
type FirewallPolicyNatRuleArgs struct {
	// The action type of a Nat rule.
	Action FirewallPolicyNatRuleActionPtrInput `pulumi:"action"`
	// The name of the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the Firewall Policy Rule resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The match conditions for incoming traffic.
	RuleCondition pulumi.Input `pulumi:"ruleCondition"`
	// The type of the rule.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// The translated address for this NAT rule.
	TranslatedAddress pulumi.StringPtrInput `pulumi:"translatedAddress"`
	// The translated port for this NAT rule.
	TranslatedPort pulumi.StringPtrInput `pulumi:"translatedPort"`
}

func (FirewallPolicyNatRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRule)(nil)).Elem()
}

func (i FirewallPolicyNatRuleArgs) ToFirewallPolicyNatRuleOutput() FirewallPolicyNatRuleOutput {
	return i.ToFirewallPolicyNatRuleOutputWithContext(context.Background())
}

func (i FirewallPolicyNatRuleArgs) ToFirewallPolicyNatRuleOutputWithContext(ctx context.Context) FirewallPolicyNatRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleOutput)
}

// Firewall Policy NAT Rule.
type FirewallPolicyNatRuleOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRule)(nil)).Elem()
}

func (o FirewallPolicyNatRuleOutput) ToFirewallPolicyNatRuleOutput() FirewallPolicyNatRuleOutput {
	return o
}

func (o FirewallPolicyNatRuleOutput) ToFirewallPolicyNatRuleOutputWithContext(ctx context.Context) FirewallPolicyNatRuleOutput {
	return o
}

// The action type of a Nat rule.
func (o FirewallPolicyNatRuleOutput) Action() FirewallPolicyNatRuleActionPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRule) *FirewallPolicyNatRuleAction { return v.Action }).(FirewallPolicyNatRuleActionPtrOutput)
}

// The name of the rule.
func (o FirewallPolicyNatRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the Firewall Policy Rule resource.
func (o FirewallPolicyNatRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The match conditions for incoming traffic.
func (o FirewallPolicyNatRuleOutput) RuleCondition() pulumi.AnyOutput {
	return o.ApplyT(func(v FirewallPolicyNatRule) interface{} { return v.RuleCondition }).(pulumi.AnyOutput)
}

// The type of the rule.
func (o FirewallPolicyNatRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyNatRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// The translated address for this NAT rule.
func (o FirewallPolicyNatRuleOutput) TranslatedAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRule) *string { return v.TranslatedAddress }).(pulumi.StringPtrOutput)
}

// The translated port for this NAT rule.
func (o FirewallPolicyNatRuleOutput) TranslatedPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRule) *string { return v.TranslatedPort }).(pulumi.StringPtrOutput)
}

// Properties of the FirewallPolicyNatRuleAction.
type FirewallPolicyNatRuleAction struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// FirewallPolicyNatRuleActionInput is an input type that accepts FirewallPolicyNatRuleActionArgs and FirewallPolicyNatRuleActionOutput values.
// You can construct a concrete instance of `FirewallPolicyNatRuleActionInput` via:
//
//          FirewallPolicyNatRuleActionArgs{...}
type FirewallPolicyNatRuleActionInput interface {
	pulumi.Input

	ToFirewallPolicyNatRuleActionOutput() FirewallPolicyNatRuleActionOutput
	ToFirewallPolicyNatRuleActionOutputWithContext(context.Context) FirewallPolicyNatRuleActionOutput
}

// Properties of the FirewallPolicyNatRuleAction.
type FirewallPolicyNatRuleActionArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (FirewallPolicyNatRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleAction)(nil)).Elem()
}

func (i FirewallPolicyNatRuleActionArgs) ToFirewallPolicyNatRuleActionOutput() FirewallPolicyNatRuleActionOutput {
	return i.ToFirewallPolicyNatRuleActionOutputWithContext(context.Background())
}

func (i FirewallPolicyNatRuleActionArgs) ToFirewallPolicyNatRuleActionOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleActionOutput)
}

func (i FirewallPolicyNatRuleActionArgs) ToFirewallPolicyNatRuleActionPtrOutput() FirewallPolicyNatRuleActionPtrOutput {
	return i.ToFirewallPolicyNatRuleActionPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyNatRuleActionArgs) ToFirewallPolicyNatRuleActionPtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleActionOutput).ToFirewallPolicyNatRuleActionPtrOutputWithContext(ctx)
}

// FirewallPolicyNatRuleActionPtrInput is an input type that accepts FirewallPolicyNatRuleActionArgs, FirewallPolicyNatRuleActionPtr and FirewallPolicyNatRuleActionPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyNatRuleActionPtrInput` via:
//
//          FirewallPolicyNatRuleActionArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyNatRuleActionPtrInput interface {
	pulumi.Input

	ToFirewallPolicyNatRuleActionPtrOutput() FirewallPolicyNatRuleActionPtrOutput
	ToFirewallPolicyNatRuleActionPtrOutputWithContext(context.Context) FirewallPolicyNatRuleActionPtrOutput
}

type firewallPolicyNatRuleActionPtrType FirewallPolicyNatRuleActionArgs

func FirewallPolicyNatRuleActionPtr(v *FirewallPolicyNatRuleActionArgs) FirewallPolicyNatRuleActionPtrInput {
	return (*firewallPolicyNatRuleActionPtrType)(v)
}

func (*firewallPolicyNatRuleActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyNatRuleAction)(nil)).Elem()
}

func (i *firewallPolicyNatRuleActionPtrType) ToFirewallPolicyNatRuleActionPtrOutput() FirewallPolicyNatRuleActionPtrOutput {
	return i.ToFirewallPolicyNatRuleActionPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyNatRuleActionPtrType) ToFirewallPolicyNatRuleActionPtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleActionPtrOutput)
}

// Properties of the FirewallPolicyNatRuleAction.
type FirewallPolicyNatRuleActionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleAction)(nil)).Elem()
}

func (o FirewallPolicyNatRuleActionOutput) ToFirewallPolicyNatRuleActionOutput() FirewallPolicyNatRuleActionOutput {
	return o
}

func (o FirewallPolicyNatRuleActionOutput) ToFirewallPolicyNatRuleActionOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionOutput {
	return o
}

func (o FirewallPolicyNatRuleActionOutput) ToFirewallPolicyNatRuleActionPtrOutput() FirewallPolicyNatRuleActionPtrOutput {
	return o.ToFirewallPolicyNatRuleActionPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyNatRuleActionOutput) ToFirewallPolicyNatRuleActionPtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleAction) *FirewallPolicyNatRuleAction {
		return &v
	}).(FirewallPolicyNatRuleActionPtrOutput)
}

// The type of action.
func (o FirewallPolicyNatRuleActionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleAction) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FirewallPolicyNatRuleActionPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyNatRuleAction)(nil)).Elem()
}

func (o FirewallPolicyNatRuleActionPtrOutput) ToFirewallPolicyNatRuleActionPtrOutput() FirewallPolicyNatRuleActionPtrOutput {
	return o
}

func (o FirewallPolicyNatRuleActionPtrOutput) ToFirewallPolicyNatRuleActionPtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionPtrOutput {
	return o
}

func (o FirewallPolicyNatRuleActionPtrOutput) Elem() FirewallPolicyNatRuleActionOutput {
	return o.ApplyT(func(v *FirewallPolicyNatRuleAction) FirewallPolicyNatRuleAction { return *v }).(FirewallPolicyNatRuleActionOutput)
}

// The type of action.
func (o FirewallPolicyNatRuleActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyNatRuleAction) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of the FirewallPolicyNatRuleAction.
type FirewallPolicyNatRuleActionResponse struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// FirewallPolicyNatRuleActionResponseInput is an input type that accepts FirewallPolicyNatRuleActionResponseArgs and FirewallPolicyNatRuleActionResponseOutput values.
// You can construct a concrete instance of `FirewallPolicyNatRuleActionResponseInput` via:
//
//          FirewallPolicyNatRuleActionResponseArgs{...}
type FirewallPolicyNatRuleActionResponseInput interface {
	pulumi.Input

	ToFirewallPolicyNatRuleActionResponseOutput() FirewallPolicyNatRuleActionResponseOutput
	ToFirewallPolicyNatRuleActionResponseOutputWithContext(context.Context) FirewallPolicyNatRuleActionResponseOutput
}

// Properties of the FirewallPolicyNatRuleAction.
type FirewallPolicyNatRuleActionResponseArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (FirewallPolicyNatRuleActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleActionResponse)(nil)).Elem()
}

func (i FirewallPolicyNatRuleActionResponseArgs) ToFirewallPolicyNatRuleActionResponseOutput() FirewallPolicyNatRuleActionResponseOutput {
	return i.ToFirewallPolicyNatRuleActionResponseOutputWithContext(context.Background())
}

func (i FirewallPolicyNatRuleActionResponseArgs) ToFirewallPolicyNatRuleActionResponseOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleActionResponseOutput)
}

func (i FirewallPolicyNatRuleActionResponseArgs) ToFirewallPolicyNatRuleActionResponsePtrOutput() FirewallPolicyNatRuleActionResponsePtrOutput {
	return i.ToFirewallPolicyNatRuleActionResponsePtrOutputWithContext(context.Background())
}

func (i FirewallPolicyNatRuleActionResponseArgs) ToFirewallPolicyNatRuleActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleActionResponseOutput).ToFirewallPolicyNatRuleActionResponsePtrOutputWithContext(ctx)
}

// FirewallPolicyNatRuleActionResponsePtrInput is an input type that accepts FirewallPolicyNatRuleActionResponseArgs, FirewallPolicyNatRuleActionResponsePtr and FirewallPolicyNatRuleActionResponsePtrOutput values.
// You can construct a concrete instance of `FirewallPolicyNatRuleActionResponsePtrInput` via:
//
//          FirewallPolicyNatRuleActionResponseArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyNatRuleActionResponsePtrInput interface {
	pulumi.Input

	ToFirewallPolicyNatRuleActionResponsePtrOutput() FirewallPolicyNatRuleActionResponsePtrOutput
	ToFirewallPolicyNatRuleActionResponsePtrOutputWithContext(context.Context) FirewallPolicyNatRuleActionResponsePtrOutput
}

type firewallPolicyNatRuleActionResponsePtrType FirewallPolicyNatRuleActionResponseArgs

func FirewallPolicyNatRuleActionResponsePtr(v *FirewallPolicyNatRuleActionResponseArgs) FirewallPolicyNatRuleActionResponsePtrInput {
	return (*firewallPolicyNatRuleActionResponsePtrType)(v)
}

func (*firewallPolicyNatRuleActionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyNatRuleActionResponse)(nil)).Elem()
}

func (i *firewallPolicyNatRuleActionResponsePtrType) ToFirewallPolicyNatRuleActionResponsePtrOutput() FirewallPolicyNatRuleActionResponsePtrOutput {
	return i.ToFirewallPolicyNatRuleActionResponsePtrOutputWithContext(context.Background())
}

func (i *firewallPolicyNatRuleActionResponsePtrType) ToFirewallPolicyNatRuleActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleActionResponsePtrOutput)
}

// Properties of the FirewallPolicyNatRuleAction.
type FirewallPolicyNatRuleActionResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleActionResponse)(nil)).Elem()
}

func (o FirewallPolicyNatRuleActionResponseOutput) ToFirewallPolicyNatRuleActionResponseOutput() FirewallPolicyNatRuleActionResponseOutput {
	return o
}

func (o FirewallPolicyNatRuleActionResponseOutput) ToFirewallPolicyNatRuleActionResponseOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionResponseOutput {
	return o
}

func (o FirewallPolicyNatRuleActionResponseOutput) ToFirewallPolicyNatRuleActionResponsePtrOutput() FirewallPolicyNatRuleActionResponsePtrOutput {
	return o.ToFirewallPolicyNatRuleActionResponsePtrOutputWithContext(context.Background())
}

func (o FirewallPolicyNatRuleActionResponseOutput) ToFirewallPolicyNatRuleActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleActionResponse) *FirewallPolicyNatRuleActionResponse {
		return &v
	}).(FirewallPolicyNatRuleActionResponsePtrOutput)
}

// The type of action.
func (o FirewallPolicyNatRuleActionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleActionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FirewallPolicyNatRuleActionResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyNatRuleActionResponse)(nil)).Elem()
}

func (o FirewallPolicyNatRuleActionResponsePtrOutput) ToFirewallPolicyNatRuleActionResponsePtrOutput() FirewallPolicyNatRuleActionResponsePtrOutput {
	return o
}

func (o FirewallPolicyNatRuleActionResponsePtrOutput) ToFirewallPolicyNatRuleActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleActionResponsePtrOutput {
	return o
}

func (o FirewallPolicyNatRuleActionResponsePtrOutput) Elem() FirewallPolicyNatRuleActionResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyNatRuleActionResponse) FirewallPolicyNatRuleActionResponse { return *v }).(FirewallPolicyNatRuleActionResponseOutput)
}

// The type of action.
func (o FirewallPolicyNatRuleActionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyNatRuleActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Firewall Policy NAT Rule Collection.
type FirewallPolicyNatRuleCollection struct {
	// The action type of a Nat rule collection.
	Action *FirewallPolicyNatRuleCollectionAction `pulumi:"action"`
	// The name of the rule collection.
	Name *string `pulumi:"name"`
	// Priority of the Firewall Policy Rule Collection resource.
	Priority *int `pulumi:"priority"`
	// The type of the rule collection.
	RuleCollectionType string `pulumi:"ruleCollectionType"`
	// List of rules included in a rule collection.
	Rules []interface{} `pulumi:"rules"`
}

// FirewallPolicyNatRuleCollectionInput is an input type that accepts FirewallPolicyNatRuleCollectionArgs and FirewallPolicyNatRuleCollectionOutput values.
// You can construct a concrete instance of `FirewallPolicyNatRuleCollectionInput` via:
//
//          FirewallPolicyNatRuleCollectionArgs{...}
type FirewallPolicyNatRuleCollectionInput interface {
	pulumi.Input

	ToFirewallPolicyNatRuleCollectionOutput() FirewallPolicyNatRuleCollectionOutput
	ToFirewallPolicyNatRuleCollectionOutputWithContext(context.Context) FirewallPolicyNatRuleCollectionOutput
}

// Firewall Policy NAT Rule Collection.
type FirewallPolicyNatRuleCollectionArgs struct {
	// The action type of a Nat rule collection.
	Action FirewallPolicyNatRuleCollectionActionPtrInput `pulumi:"action"`
	// The name of the rule collection.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the Firewall Policy Rule Collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The type of the rule collection.
	RuleCollectionType pulumi.StringInput `pulumi:"ruleCollectionType"`
	// List of rules included in a rule collection.
	Rules pulumi.ArrayInput `pulumi:"rules"`
}

func (FirewallPolicyNatRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleCollection)(nil)).Elem()
}

func (i FirewallPolicyNatRuleCollectionArgs) ToFirewallPolicyNatRuleCollectionOutput() FirewallPolicyNatRuleCollectionOutput {
	return i.ToFirewallPolicyNatRuleCollectionOutputWithContext(context.Background())
}

func (i FirewallPolicyNatRuleCollectionArgs) ToFirewallPolicyNatRuleCollectionOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleCollectionOutput)
}

// Firewall Policy NAT Rule Collection.
type FirewallPolicyNatRuleCollectionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleCollection)(nil)).Elem()
}

func (o FirewallPolicyNatRuleCollectionOutput) ToFirewallPolicyNatRuleCollectionOutput() FirewallPolicyNatRuleCollectionOutput {
	return o
}

func (o FirewallPolicyNatRuleCollectionOutput) ToFirewallPolicyNatRuleCollectionOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionOutput {
	return o
}

// The action type of a Nat rule collection.
func (o FirewallPolicyNatRuleCollectionOutput) Action() FirewallPolicyNatRuleCollectionActionPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollection) *FirewallPolicyNatRuleCollectionAction { return v.Action }).(FirewallPolicyNatRuleCollectionActionPtrOutput)
}

// The name of the rule collection.
func (o FirewallPolicyNatRuleCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the Firewall Policy Rule Collection resource.
func (o FirewallPolicyNatRuleCollectionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollection) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The type of the rule collection.
func (o FirewallPolicyNatRuleCollectionOutput) RuleCollectionType() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollection) string { return v.RuleCollectionType }).(pulumi.StringOutput)
}

// List of rules included in a rule collection.
func (o FirewallPolicyNatRuleCollectionOutput) Rules() pulumi.ArrayOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollection) []interface{} { return v.Rules }).(pulumi.ArrayOutput)
}

// Properties of the FirewallPolicyNatRuleCollectionAction.
type FirewallPolicyNatRuleCollectionAction struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// FirewallPolicyNatRuleCollectionActionInput is an input type that accepts FirewallPolicyNatRuleCollectionActionArgs and FirewallPolicyNatRuleCollectionActionOutput values.
// You can construct a concrete instance of `FirewallPolicyNatRuleCollectionActionInput` via:
//
//          FirewallPolicyNatRuleCollectionActionArgs{...}
type FirewallPolicyNatRuleCollectionActionInput interface {
	pulumi.Input

	ToFirewallPolicyNatRuleCollectionActionOutput() FirewallPolicyNatRuleCollectionActionOutput
	ToFirewallPolicyNatRuleCollectionActionOutputWithContext(context.Context) FirewallPolicyNatRuleCollectionActionOutput
}

// Properties of the FirewallPolicyNatRuleCollectionAction.
type FirewallPolicyNatRuleCollectionActionArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (FirewallPolicyNatRuleCollectionActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleCollectionAction)(nil)).Elem()
}

func (i FirewallPolicyNatRuleCollectionActionArgs) ToFirewallPolicyNatRuleCollectionActionOutput() FirewallPolicyNatRuleCollectionActionOutput {
	return i.ToFirewallPolicyNatRuleCollectionActionOutputWithContext(context.Background())
}

func (i FirewallPolicyNatRuleCollectionActionArgs) ToFirewallPolicyNatRuleCollectionActionOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleCollectionActionOutput)
}

func (i FirewallPolicyNatRuleCollectionActionArgs) ToFirewallPolicyNatRuleCollectionActionPtrOutput() FirewallPolicyNatRuleCollectionActionPtrOutput {
	return i.ToFirewallPolicyNatRuleCollectionActionPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyNatRuleCollectionActionArgs) ToFirewallPolicyNatRuleCollectionActionPtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleCollectionActionOutput).ToFirewallPolicyNatRuleCollectionActionPtrOutputWithContext(ctx)
}

// FirewallPolicyNatRuleCollectionActionPtrInput is an input type that accepts FirewallPolicyNatRuleCollectionActionArgs, FirewallPolicyNatRuleCollectionActionPtr and FirewallPolicyNatRuleCollectionActionPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyNatRuleCollectionActionPtrInput` via:
//
//          FirewallPolicyNatRuleCollectionActionArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyNatRuleCollectionActionPtrInput interface {
	pulumi.Input

	ToFirewallPolicyNatRuleCollectionActionPtrOutput() FirewallPolicyNatRuleCollectionActionPtrOutput
	ToFirewallPolicyNatRuleCollectionActionPtrOutputWithContext(context.Context) FirewallPolicyNatRuleCollectionActionPtrOutput
}

type firewallPolicyNatRuleCollectionActionPtrType FirewallPolicyNatRuleCollectionActionArgs

func FirewallPolicyNatRuleCollectionActionPtr(v *FirewallPolicyNatRuleCollectionActionArgs) FirewallPolicyNatRuleCollectionActionPtrInput {
	return (*firewallPolicyNatRuleCollectionActionPtrType)(v)
}

func (*firewallPolicyNatRuleCollectionActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyNatRuleCollectionAction)(nil)).Elem()
}

func (i *firewallPolicyNatRuleCollectionActionPtrType) ToFirewallPolicyNatRuleCollectionActionPtrOutput() FirewallPolicyNatRuleCollectionActionPtrOutput {
	return i.ToFirewallPolicyNatRuleCollectionActionPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyNatRuleCollectionActionPtrType) ToFirewallPolicyNatRuleCollectionActionPtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleCollectionActionPtrOutput)
}

// Properties of the FirewallPolicyNatRuleCollectionAction.
type FirewallPolicyNatRuleCollectionActionOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleCollectionActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleCollectionAction)(nil)).Elem()
}

func (o FirewallPolicyNatRuleCollectionActionOutput) ToFirewallPolicyNatRuleCollectionActionOutput() FirewallPolicyNatRuleCollectionActionOutput {
	return o
}

func (o FirewallPolicyNatRuleCollectionActionOutput) ToFirewallPolicyNatRuleCollectionActionOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionOutput {
	return o
}

func (o FirewallPolicyNatRuleCollectionActionOutput) ToFirewallPolicyNatRuleCollectionActionPtrOutput() FirewallPolicyNatRuleCollectionActionPtrOutput {
	return o.ToFirewallPolicyNatRuleCollectionActionPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyNatRuleCollectionActionOutput) ToFirewallPolicyNatRuleCollectionActionPtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollectionAction) *FirewallPolicyNatRuleCollectionAction {
		return &v
	}).(FirewallPolicyNatRuleCollectionActionPtrOutput)
}

// The type of action.
func (o FirewallPolicyNatRuleCollectionActionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollectionAction) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FirewallPolicyNatRuleCollectionActionPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleCollectionActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyNatRuleCollectionAction)(nil)).Elem()
}

func (o FirewallPolicyNatRuleCollectionActionPtrOutput) ToFirewallPolicyNatRuleCollectionActionPtrOutput() FirewallPolicyNatRuleCollectionActionPtrOutput {
	return o
}

func (o FirewallPolicyNatRuleCollectionActionPtrOutput) ToFirewallPolicyNatRuleCollectionActionPtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionPtrOutput {
	return o
}

func (o FirewallPolicyNatRuleCollectionActionPtrOutput) Elem() FirewallPolicyNatRuleCollectionActionOutput {
	return o.ApplyT(func(v *FirewallPolicyNatRuleCollectionAction) FirewallPolicyNatRuleCollectionAction { return *v }).(FirewallPolicyNatRuleCollectionActionOutput)
}

// The type of action.
func (o FirewallPolicyNatRuleCollectionActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyNatRuleCollectionAction) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of the FirewallPolicyNatRuleCollectionAction.
type FirewallPolicyNatRuleCollectionActionResponse struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// FirewallPolicyNatRuleCollectionActionResponseInput is an input type that accepts FirewallPolicyNatRuleCollectionActionResponseArgs and FirewallPolicyNatRuleCollectionActionResponseOutput values.
// You can construct a concrete instance of `FirewallPolicyNatRuleCollectionActionResponseInput` via:
//
//          FirewallPolicyNatRuleCollectionActionResponseArgs{...}
type FirewallPolicyNatRuleCollectionActionResponseInput interface {
	pulumi.Input

	ToFirewallPolicyNatRuleCollectionActionResponseOutput() FirewallPolicyNatRuleCollectionActionResponseOutput
	ToFirewallPolicyNatRuleCollectionActionResponseOutputWithContext(context.Context) FirewallPolicyNatRuleCollectionActionResponseOutput
}

// Properties of the FirewallPolicyNatRuleCollectionAction.
type FirewallPolicyNatRuleCollectionActionResponseArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (FirewallPolicyNatRuleCollectionActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleCollectionActionResponse)(nil)).Elem()
}

func (i FirewallPolicyNatRuleCollectionActionResponseArgs) ToFirewallPolicyNatRuleCollectionActionResponseOutput() FirewallPolicyNatRuleCollectionActionResponseOutput {
	return i.ToFirewallPolicyNatRuleCollectionActionResponseOutputWithContext(context.Background())
}

func (i FirewallPolicyNatRuleCollectionActionResponseArgs) ToFirewallPolicyNatRuleCollectionActionResponseOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleCollectionActionResponseOutput)
}

func (i FirewallPolicyNatRuleCollectionActionResponseArgs) ToFirewallPolicyNatRuleCollectionActionResponsePtrOutput() FirewallPolicyNatRuleCollectionActionResponsePtrOutput {
	return i.ToFirewallPolicyNatRuleCollectionActionResponsePtrOutputWithContext(context.Background())
}

func (i FirewallPolicyNatRuleCollectionActionResponseArgs) ToFirewallPolicyNatRuleCollectionActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleCollectionActionResponseOutput).ToFirewallPolicyNatRuleCollectionActionResponsePtrOutputWithContext(ctx)
}

// FirewallPolicyNatRuleCollectionActionResponsePtrInput is an input type that accepts FirewallPolicyNatRuleCollectionActionResponseArgs, FirewallPolicyNatRuleCollectionActionResponsePtr and FirewallPolicyNatRuleCollectionActionResponsePtrOutput values.
// You can construct a concrete instance of `FirewallPolicyNatRuleCollectionActionResponsePtrInput` via:
//
//          FirewallPolicyNatRuleCollectionActionResponseArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyNatRuleCollectionActionResponsePtrInput interface {
	pulumi.Input

	ToFirewallPolicyNatRuleCollectionActionResponsePtrOutput() FirewallPolicyNatRuleCollectionActionResponsePtrOutput
	ToFirewallPolicyNatRuleCollectionActionResponsePtrOutputWithContext(context.Context) FirewallPolicyNatRuleCollectionActionResponsePtrOutput
}

type firewallPolicyNatRuleCollectionActionResponsePtrType FirewallPolicyNatRuleCollectionActionResponseArgs

func FirewallPolicyNatRuleCollectionActionResponsePtr(v *FirewallPolicyNatRuleCollectionActionResponseArgs) FirewallPolicyNatRuleCollectionActionResponsePtrInput {
	return (*firewallPolicyNatRuleCollectionActionResponsePtrType)(v)
}

func (*firewallPolicyNatRuleCollectionActionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyNatRuleCollectionActionResponse)(nil)).Elem()
}

func (i *firewallPolicyNatRuleCollectionActionResponsePtrType) ToFirewallPolicyNatRuleCollectionActionResponsePtrOutput() FirewallPolicyNatRuleCollectionActionResponsePtrOutput {
	return i.ToFirewallPolicyNatRuleCollectionActionResponsePtrOutputWithContext(context.Background())
}

func (i *firewallPolicyNatRuleCollectionActionResponsePtrType) ToFirewallPolicyNatRuleCollectionActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleCollectionActionResponsePtrOutput)
}

// Properties of the FirewallPolicyNatRuleCollectionAction.
type FirewallPolicyNatRuleCollectionActionResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleCollectionActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleCollectionActionResponse)(nil)).Elem()
}

func (o FirewallPolicyNatRuleCollectionActionResponseOutput) ToFirewallPolicyNatRuleCollectionActionResponseOutput() FirewallPolicyNatRuleCollectionActionResponseOutput {
	return o
}

func (o FirewallPolicyNatRuleCollectionActionResponseOutput) ToFirewallPolicyNatRuleCollectionActionResponseOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionResponseOutput {
	return o
}

func (o FirewallPolicyNatRuleCollectionActionResponseOutput) ToFirewallPolicyNatRuleCollectionActionResponsePtrOutput() FirewallPolicyNatRuleCollectionActionResponsePtrOutput {
	return o.ToFirewallPolicyNatRuleCollectionActionResponsePtrOutputWithContext(context.Background())
}

func (o FirewallPolicyNatRuleCollectionActionResponseOutput) ToFirewallPolicyNatRuleCollectionActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollectionActionResponse) *FirewallPolicyNatRuleCollectionActionResponse {
		return &v
	}).(FirewallPolicyNatRuleCollectionActionResponsePtrOutput)
}

// The type of action.
func (o FirewallPolicyNatRuleCollectionActionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollectionActionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type FirewallPolicyNatRuleCollectionActionResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleCollectionActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyNatRuleCollectionActionResponse)(nil)).Elem()
}

func (o FirewallPolicyNatRuleCollectionActionResponsePtrOutput) ToFirewallPolicyNatRuleCollectionActionResponsePtrOutput() FirewallPolicyNatRuleCollectionActionResponsePtrOutput {
	return o
}

func (o FirewallPolicyNatRuleCollectionActionResponsePtrOutput) ToFirewallPolicyNatRuleCollectionActionResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionActionResponsePtrOutput {
	return o
}

func (o FirewallPolicyNatRuleCollectionActionResponsePtrOutput) Elem() FirewallPolicyNatRuleCollectionActionResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyNatRuleCollectionActionResponse) FirewallPolicyNatRuleCollectionActionResponse {
		return *v
	}).(FirewallPolicyNatRuleCollectionActionResponseOutput)
}

// The type of action.
func (o FirewallPolicyNatRuleCollectionActionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyNatRuleCollectionActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Firewall Policy NAT Rule Collection.
type FirewallPolicyNatRuleCollectionResponse struct {
	// The action type of a Nat rule collection.
	Action *FirewallPolicyNatRuleCollectionActionResponse `pulumi:"action"`
	// The name of the rule collection.
	Name *string `pulumi:"name"`
	// Priority of the Firewall Policy Rule Collection resource.
	Priority *int `pulumi:"priority"`
	// The type of the rule collection.
	RuleCollectionType string `pulumi:"ruleCollectionType"`
	// List of rules included in a rule collection.
	Rules []interface{} `pulumi:"rules"`
}

// FirewallPolicyNatRuleCollectionResponseInput is an input type that accepts FirewallPolicyNatRuleCollectionResponseArgs and FirewallPolicyNatRuleCollectionResponseOutput values.
// You can construct a concrete instance of `FirewallPolicyNatRuleCollectionResponseInput` via:
//
//          FirewallPolicyNatRuleCollectionResponseArgs{...}
type FirewallPolicyNatRuleCollectionResponseInput interface {
	pulumi.Input

	ToFirewallPolicyNatRuleCollectionResponseOutput() FirewallPolicyNatRuleCollectionResponseOutput
	ToFirewallPolicyNatRuleCollectionResponseOutputWithContext(context.Context) FirewallPolicyNatRuleCollectionResponseOutput
}

// Firewall Policy NAT Rule Collection.
type FirewallPolicyNatRuleCollectionResponseArgs struct {
	// The action type of a Nat rule collection.
	Action FirewallPolicyNatRuleCollectionActionResponsePtrInput `pulumi:"action"`
	// The name of the rule collection.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the Firewall Policy Rule Collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The type of the rule collection.
	RuleCollectionType pulumi.StringInput `pulumi:"ruleCollectionType"`
	// List of rules included in a rule collection.
	Rules pulumi.ArrayInput `pulumi:"rules"`
}

func (FirewallPolicyNatRuleCollectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleCollectionResponse)(nil)).Elem()
}

func (i FirewallPolicyNatRuleCollectionResponseArgs) ToFirewallPolicyNatRuleCollectionResponseOutput() FirewallPolicyNatRuleCollectionResponseOutput {
	return i.ToFirewallPolicyNatRuleCollectionResponseOutputWithContext(context.Background())
}

func (i FirewallPolicyNatRuleCollectionResponseArgs) ToFirewallPolicyNatRuleCollectionResponseOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleCollectionResponseOutput)
}

// Firewall Policy NAT Rule Collection.
type FirewallPolicyNatRuleCollectionResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleCollectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleCollectionResponse)(nil)).Elem()
}

func (o FirewallPolicyNatRuleCollectionResponseOutput) ToFirewallPolicyNatRuleCollectionResponseOutput() FirewallPolicyNatRuleCollectionResponseOutput {
	return o
}

func (o FirewallPolicyNatRuleCollectionResponseOutput) ToFirewallPolicyNatRuleCollectionResponseOutputWithContext(ctx context.Context) FirewallPolicyNatRuleCollectionResponseOutput {
	return o
}

// The action type of a Nat rule collection.
func (o FirewallPolicyNatRuleCollectionResponseOutput) Action() FirewallPolicyNatRuleCollectionActionResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollectionResponse) *FirewallPolicyNatRuleCollectionActionResponse {
		return v.Action
	}).(FirewallPolicyNatRuleCollectionActionResponsePtrOutput)
}

// The name of the rule collection.
func (o FirewallPolicyNatRuleCollectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the Firewall Policy Rule Collection resource.
func (o FirewallPolicyNatRuleCollectionResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollectionResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The type of the rule collection.
func (o FirewallPolicyNatRuleCollectionResponseOutput) RuleCollectionType() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollectionResponse) string { return v.RuleCollectionType }).(pulumi.StringOutput)
}

// List of rules included in a rule collection.
func (o FirewallPolicyNatRuleCollectionResponseOutput) Rules() pulumi.ArrayOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleCollectionResponse) []interface{} { return v.Rules }).(pulumi.ArrayOutput)
}

// Firewall Policy NAT Rule.
type FirewallPolicyNatRuleResponse struct {
	// The action type of a Nat rule.
	Action *FirewallPolicyNatRuleActionResponse `pulumi:"action"`
	// The name of the rule.
	Name *string `pulumi:"name"`
	// Priority of the Firewall Policy Rule resource.
	Priority *int `pulumi:"priority"`
	// The match conditions for incoming traffic.
	RuleCondition interface{} `pulumi:"ruleCondition"`
	// The type of the rule.
	RuleType string `pulumi:"ruleType"`
	// The translated address for this NAT rule.
	TranslatedAddress *string `pulumi:"translatedAddress"`
	// The translated port for this NAT rule.
	TranslatedPort *string `pulumi:"translatedPort"`
}

// FirewallPolicyNatRuleResponseInput is an input type that accepts FirewallPolicyNatRuleResponseArgs and FirewallPolicyNatRuleResponseOutput values.
// You can construct a concrete instance of `FirewallPolicyNatRuleResponseInput` via:
//
//          FirewallPolicyNatRuleResponseArgs{...}
type FirewallPolicyNatRuleResponseInput interface {
	pulumi.Input

	ToFirewallPolicyNatRuleResponseOutput() FirewallPolicyNatRuleResponseOutput
	ToFirewallPolicyNatRuleResponseOutputWithContext(context.Context) FirewallPolicyNatRuleResponseOutput
}

// Firewall Policy NAT Rule.
type FirewallPolicyNatRuleResponseArgs struct {
	// The action type of a Nat rule.
	Action FirewallPolicyNatRuleActionResponsePtrInput `pulumi:"action"`
	// The name of the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the Firewall Policy Rule resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The match conditions for incoming traffic.
	RuleCondition pulumi.Input `pulumi:"ruleCondition"`
	// The type of the rule.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// The translated address for this NAT rule.
	TranslatedAddress pulumi.StringPtrInput `pulumi:"translatedAddress"`
	// The translated port for this NAT rule.
	TranslatedPort pulumi.StringPtrInput `pulumi:"translatedPort"`
}

func (FirewallPolicyNatRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleResponse)(nil)).Elem()
}

func (i FirewallPolicyNatRuleResponseArgs) ToFirewallPolicyNatRuleResponseOutput() FirewallPolicyNatRuleResponseOutput {
	return i.ToFirewallPolicyNatRuleResponseOutputWithContext(context.Background())
}

func (i FirewallPolicyNatRuleResponseArgs) ToFirewallPolicyNatRuleResponseOutputWithContext(ctx context.Context) FirewallPolicyNatRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyNatRuleResponseOutput)
}

// Firewall Policy NAT Rule.
type FirewallPolicyNatRuleResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyNatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyNatRuleResponse)(nil)).Elem()
}

func (o FirewallPolicyNatRuleResponseOutput) ToFirewallPolicyNatRuleResponseOutput() FirewallPolicyNatRuleResponseOutput {
	return o
}

func (o FirewallPolicyNatRuleResponseOutput) ToFirewallPolicyNatRuleResponseOutputWithContext(ctx context.Context) FirewallPolicyNatRuleResponseOutput {
	return o
}

// The action type of a Nat rule.
func (o FirewallPolicyNatRuleResponseOutput) Action() FirewallPolicyNatRuleActionResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleResponse) *FirewallPolicyNatRuleActionResponse { return v.Action }).(FirewallPolicyNatRuleActionResponsePtrOutput)
}

// The name of the rule.
func (o FirewallPolicyNatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the Firewall Policy Rule resource.
func (o FirewallPolicyNatRuleResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The match conditions for incoming traffic.
func (o FirewallPolicyNatRuleResponseOutput) RuleCondition() pulumi.AnyOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleResponse) interface{} { return v.RuleCondition }).(pulumi.AnyOutput)
}

// The type of the rule.
func (o FirewallPolicyNatRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

// The translated address for this NAT rule.
func (o FirewallPolicyNatRuleResponseOutput) TranslatedAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleResponse) *string { return v.TranslatedAddress }).(pulumi.StringPtrOutput)
}

// The translated port for this NAT rule.
func (o FirewallPolicyNatRuleResponseOutput) TranslatedPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyNatRuleResponse) *string { return v.TranslatedPort }).(pulumi.StringPtrOutput)
}

// Properties of the application rule protocol.
type FirewallPolicyRuleApplicationProtocol struct {
	// Port number for the protocol, cannot be greater than 64000.
	Port *int `pulumi:"port"`
	// Protocol type.
	ProtocolType *string `pulumi:"protocolType"`
}

// FirewallPolicyRuleApplicationProtocolInput is an input type that accepts FirewallPolicyRuleApplicationProtocolArgs and FirewallPolicyRuleApplicationProtocolOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleApplicationProtocolInput` via:
//
//          FirewallPolicyRuleApplicationProtocolArgs{...}
type FirewallPolicyRuleApplicationProtocolInput interface {
	pulumi.Input

	ToFirewallPolicyRuleApplicationProtocolOutput() FirewallPolicyRuleApplicationProtocolOutput
	ToFirewallPolicyRuleApplicationProtocolOutputWithContext(context.Context) FirewallPolicyRuleApplicationProtocolOutput
}

// Properties of the application rule protocol.
type FirewallPolicyRuleApplicationProtocolArgs struct {
	// Port number for the protocol, cannot be greater than 64000.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Protocol type.
	ProtocolType pulumi.StringPtrInput `pulumi:"protocolType"`
}

func (FirewallPolicyRuleApplicationProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleApplicationProtocol)(nil)).Elem()
}

func (i FirewallPolicyRuleApplicationProtocolArgs) ToFirewallPolicyRuleApplicationProtocolOutput() FirewallPolicyRuleApplicationProtocolOutput {
	return i.ToFirewallPolicyRuleApplicationProtocolOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleApplicationProtocolArgs) ToFirewallPolicyRuleApplicationProtocolOutputWithContext(ctx context.Context) FirewallPolicyRuleApplicationProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleApplicationProtocolOutput)
}

// FirewallPolicyRuleApplicationProtocolArrayInput is an input type that accepts FirewallPolicyRuleApplicationProtocolArray and FirewallPolicyRuleApplicationProtocolArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleApplicationProtocolArrayInput` via:
//
//          FirewallPolicyRuleApplicationProtocolArray{ FirewallPolicyRuleApplicationProtocolArgs{...} }
type FirewallPolicyRuleApplicationProtocolArrayInput interface {
	pulumi.Input

	ToFirewallPolicyRuleApplicationProtocolArrayOutput() FirewallPolicyRuleApplicationProtocolArrayOutput
	ToFirewallPolicyRuleApplicationProtocolArrayOutputWithContext(context.Context) FirewallPolicyRuleApplicationProtocolArrayOutput
}

type FirewallPolicyRuleApplicationProtocolArray []FirewallPolicyRuleApplicationProtocolInput

func (FirewallPolicyRuleApplicationProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleApplicationProtocol)(nil)).Elem()
}

func (i FirewallPolicyRuleApplicationProtocolArray) ToFirewallPolicyRuleApplicationProtocolArrayOutput() FirewallPolicyRuleApplicationProtocolArrayOutput {
	return i.ToFirewallPolicyRuleApplicationProtocolArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleApplicationProtocolArray) ToFirewallPolicyRuleApplicationProtocolArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleApplicationProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleApplicationProtocolArrayOutput)
}

// Properties of the application rule protocol.
type FirewallPolicyRuleApplicationProtocolOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleApplicationProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleApplicationProtocol)(nil)).Elem()
}

func (o FirewallPolicyRuleApplicationProtocolOutput) ToFirewallPolicyRuleApplicationProtocolOutput() FirewallPolicyRuleApplicationProtocolOutput {
	return o
}

func (o FirewallPolicyRuleApplicationProtocolOutput) ToFirewallPolicyRuleApplicationProtocolOutputWithContext(ctx context.Context) FirewallPolicyRuleApplicationProtocolOutput {
	return o
}

// Port number for the protocol, cannot be greater than 64000.
func (o FirewallPolicyRuleApplicationProtocolOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleApplicationProtocol) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol type.
func (o FirewallPolicyRuleApplicationProtocolOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleApplicationProtocol) *string { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

type FirewallPolicyRuleApplicationProtocolArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleApplicationProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleApplicationProtocol)(nil)).Elem()
}

func (o FirewallPolicyRuleApplicationProtocolArrayOutput) ToFirewallPolicyRuleApplicationProtocolArrayOutput() FirewallPolicyRuleApplicationProtocolArrayOutput {
	return o
}

func (o FirewallPolicyRuleApplicationProtocolArrayOutput) ToFirewallPolicyRuleApplicationProtocolArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleApplicationProtocolArrayOutput {
	return o
}

func (o FirewallPolicyRuleApplicationProtocolArrayOutput) Index(i pulumi.IntInput) FirewallPolicyRuleApplicationProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyRuleApplicationProtocol {
		return vs[0].([]FirewallPolicyRuleApplicationProtocol)[vs[1].(int)]
	}).(FirewallPolicyRuleApplicationProtocolOutput)
}

// Properties of the application rule protocol.
type FirewallPolicyRuleApplicationProtocolResponse struct {
	// Port number for the protocol, cannot be greater than 64000.
	Port *int `pulumi:"port"`
	// Protocol type.
	ProtocolType *string `pulumi:"protocolType"`
}

// FirewallPolicyRuleApplicationProtocolResponseInput is an input type that accepts FirewallPolicyRuleApplicationProtocolResponseArgs and FirewallPolicyRuleApplicationProtocolResponseOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleApplicationProtocolResponseInput` via:
//
//          FirewallPolicyRuleApplicationProtocolResponseArgs{...}
type FirewallPolicyRuleApplicationProtocolResponseInput interface {
	pulumi.Input

	ToFirewallPolicyRuleApplicationProtocolResponseOutput() FirewallPolicyRuleApplicationProtocolResponseOutput
	ToFirewallPolicyRuleApplicationProtocolResponseOutputWithContext(context.Context) FirewallPolicyRuleApplicationProtocolResponseOutput
}

// Properties of the application rule protocol.
type FirewallPolicyRuleApplicationProtocolResponseArgs struct {
	// Port number for the protocol, cannot be greater than 64000.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Protocol type.
	ProtocolType pulumi.StringPtrInput `pulumi:"protocolType"`
}

func (FirewallPolicyRuleApplicationProtocolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleApplicationProtocolResponse)(nil)).Elem()
}

func (i FirewallPolicyRuleApplicationProtocolResponseArgs) ToFirewallPolicyRuleApplicationProtocolResponseOutput() FirewallPolicyRuleApplicationProtocolResponseOutput {
	return i.ToFirewallPolicyRuleApplicationProtocolResponseOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleApplicationProtocolResponseArgs) ToFirewallPolicyRuleApplicationProtocolResponseOutputWithContext(ctx context.Context) FirewallPolicyRuleApplicationProtocolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleApplicationProtocolResponseOutput)
}

// FirewallPolicyRuleApplicationProtocolResponseArrayInput is an input type that accepts FirewallPolicyRuleApplicationProtocolResponseArray and FirewallPolicyRuleApplicationProtocolResponseArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleApplicationProtocolResponseArrayInput` via:
//
//          FirewallPolicyRuleApplicationProtocolResponseArray{ FirewallPolicyRuleApplicationProtocolResponseArgs{...} }
type FirewallPolicyRuleApplicationProtocolResponseArrayInput interface {
	pulumi.Input

	ToFirewallPolicyRuleApplicationProtocolResponseArrayOutput() FirewallPolicyRuleApplicationProtocolResponseArrayOutput
	ToFirewallPolicyRuleApplicationProtocolResponseArrayOutputWithContext(context.Context) FirewallPolicyRuleApplicationProtocolResponseArrayOutput
}

type FirewallPolicyRuleApplicationProtocolResponseArray []FirewallPolicyRuleApplicationProtocolResponseInput

func (FirewallPolicyRuleApplicationProtocolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleApplicationProtocolResponse)(nil)).Elem()
}

func (i FirewallPolicyRuleApplicationProtocolResponseArray) ToFirewallPolicyRuleApplicationProtocolResponseArrayOutput() FirewallPolicyRuleApplicationProtocolResponseArrayOutput {
	return i.ToFirewallPolicyRuleApplicationProtocolResponseArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleApplicationProtocolResponseArray) ToFirewallPolicyRuleApplicationProtocolResponseArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleApplicationProtocolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleApplicationProtocolResponseArrayOutput)
}

// Properties of the application rule protocol.
type FirewallPolicyRuleApplicationProtocolResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleApplicationProtocolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleApplicationProtocolResponse)(nil)).Elem()
}

func (o FirewallPolicyRuleApplicationProtocolResponseOutput) ToFirewallPolicyRuleApplicationProtocolResponseOutput() FirewallPolicyRuleApplicationProtocolResponseOutput {
	return o
}

func (o FirewallPolicyRuleApplicationProtocolResponseOutput) ToFirewallPolicyRuleApplicationProtocolResponseOutputWithContext(ctx context.Context) FirewallPolicyRuleApplicationProtocolResponseOutput {
	return o
}

// Port number for the protocol, cannot be greater than 64000.
func (o FirewallPolicyRuleApplicationProtocolResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleApplicationProtocolResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol type.
func (o FirewallPolicyRuleApplicationProtocolResponseOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleApplicationProtocolResponse) *string { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

type FirewallPolicyRuleApplicationProtocolResponseArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleApplicationProtocolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleApplicationProtocolResponse)(nil)).Elem()
}

func (o FirewallPolicyRuleApplicationProtocolResponseArrayOutput) ToFirewallPolicyRuleApplicationProtocolResponseArrayOutput() FirewallPolicyRuleApplicationProtocolResponseArrayOutput {
	return o
}

func (o FirewallPolicyRuleApplicationProtocolResponseArrayOutput) ToFirewallPolicyRuleApplicationProtocolResponseArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleApplicationProtocolResponseArrayOutput {
	return o
}

func (o FirewallPolicyRuleApplicationProtocolResponseArrayOutput) Index(i pulumi.IntInput) FirewallPolicyRuleApplicationProtocolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyRuleApplicationProtocolResponse {
		return vs[0].([]FirewallPolicyRuleApplicationProtocolResponse)[vs[1].(int)]
	}).(FirewallPolicyRuleApplicationProtocolResponseOutput)
}

// Properties of the application rule protocol.
type FirewallPolicyRuleConditionApplicationProtocol struct {
	// Port number for the protocol, cannot be greater than 64000.
	Port *int `pulumi:"port"`
	// Protocol type.
	ProtocolType *string `pulumi:"protocolType"`
}

// FirewallPolicyRuleConditionApplicationProtocolInput is an input type that accepts FirewallPolicyRuleConditionApplicationProtocolArgs and FirewallPolicyRuleConditionApplicationProtocolOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleConditionApplicationProtocolInput` via:
//
//          FirewallPolicyRuleConditionApplicationProtocolArgs{...}
type FirewallPolicyRuleConditionApplicationProtocolInput interface {
	pulumi.Input

	ToFirewallPolicyRuleConditionApplicationProtocolOutput() FirewallPolicyRuleConditionApplicationProtocolOutput
	ToFirewallPolicyRuleConditionApplicationProtocolOutputWithContext(context.Context) FirewallPolicyRuleConditionApplicationProtocolOutput
}

// Properties of the application rule protocol.
type FirewallPolicyRuleConditionApplicationProtocolArgs struct {
	// Port number for the protocol, cannot be greater than 64000.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Protocol type.
	ProtocolType pulumi.StringPtrInput `pulumi:"protocolType"`
}

func (FirewallPolicyRuleConditionApplicationProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleConditionApplicationProtocol)(nil)).Elem()
}

func (i FirewallPolicyRuleConditionApplicationProtocolArgs) ToFirewallPolicyRuleConditionApplicationProtocolOutput() FirewallPolicyRuleConditionApplicationProtocolOutput {
	return i.ToFirewallPolicyRuleConditionApplicationProtocolOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleConditionApplicationProtocolArgs) ToFirewallPolicyRuleConditionApplicationProtocolOutputWithContext(ctx context.Context) FirewallPolicyRuleConditionApplicationProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleConditionApplicationProtocolOutput)
}

// FirewallPolicyRuleConditionApplicationProtocolArrayInput is an input type that accepts FirewallPolicyRuleConditionApplicationProtocolArray and FirewallPolicyRuleConditionApplicationProtocolArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleConditionApplicationProtocolArrayInput` via:
//
//          FirewallPolicyRuleConditionApplicationProtocolArray{ FirewallPolicyRuleConditionApplicationProtocolArgs{...} }
type FirewallPolicyRuleConditionApplicationProtocolArrayInput interface {
	pulumi.Input

	ToFirewallPolicyRuleConditionApplicationProtocolArrayOutput() FirewallPolicyRuleConditionApplicationProtocolArrayOutput
	ToFirewallPolicyRuleConditionApplicationProtocolArrayOutputWithContext(context.Context) FirewallPolicyRuleConditionApplicationProtocolArrayOutput
}

type FirewallPolicyRuleConditionApplicationProtocolArray []FirewallPolicyRuleConditionApplicationProtocolInput

func (FirewallPolicyRuleConditionApplicationProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleConditionApplicationProtocol)(nil)).Elem()
}

func (i FirewallPolicyRuleConditionApplicationProtocolArray) ToFirewallPolicyRuleConditionApplicationProtocolArrayOutput() FirewallPolicyRuleConditionApplicationProtocolArrayOutput {
	return i.ToFirewallPolicyRuleConditionApplicationProtocolArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleConditionApplicationProtocolArray) ToFirewallPolicyRuleConditionApplicationProtocolArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleConditionApplicationProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleConditionApplicationProtocolArrayOutput)
}

// Properties of the application rule protocol.
type FirewallPolicyRuleConditionApplicationProtocolOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleConditionApplicationProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleConditionApplicationProtocol)(nil)).Elem()
}

func (o FirewallPolicyRuleConditionApplicationProtocolOutput) ToFirewallPolicyRuleConditionApplicationProtocolOutput() FirewallPolicyRuleConditionApplicationProtocolOutput {
	return o
}

func (o FirewallPolicyRuleConditionApplicationProtocolOutput) ToFirewallPolicyRuleConditionApplicationProtocolOutputWithContext(ctx context.Context) FirewallPolicyRuleConditionApplicationProtocolOutput {
	return o
}

// Port number for the protocol, cannot be greater than 64000.
func (o FirewallPolicyRuleConditionApplicationProtocolOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleConditionApplicationProtocol) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol type.
func (o FirewallPolicyRuleConditionApplicationProtocolOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleConditionApplicationProtocol) *string { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

type FirewallPolicyRuleConditionApplicationProtocolArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleConditionApplicationProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleConditionApplicationProtocol)(nil)).Elem()
}

func (o FirewallPolicyRuleConditionApplicationProtocolArrayOutput) ToFirewallPolicyRuleConditionApplicationProtocolArrayOutput() FirewallPolicyRuleConditionApplicationProtocolArrayOutput {
	return o
}

func (o FirewallPolicyRuleConditionApplicationProtocolArrayOutput) ToFirewallPolicyRuleConditionApplicationProtocolArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleConditionApplicationProtocolArrayOutput {
	return o
}

func (o FirewallPolicyRuleConditionApplicationProtocolArrayOutput) Index(i pulumi.IntInput) FirewallPolicyRuleConditionApplicationProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyRuleConditionApplicationProtocol {
		return vs[0].([]FirewallPolicyRuleConditionApplicationProtocol)[vs[1].(int)]
	}).(FirewallPolicyRuleConditionApplicationProtocolOutput)
}

// Properties of the application rule protocol.
type FirewallPolicyRuleConditionApplicationProtocolResponse struct {
	// Port number for the protocol, cannot be greater than 64000.
	Port *int `pulumi:"port"`
	// Protocol type.
	ProtocolType *string `pulumi:"protocolType"`
}

// FirewallPolicyRuleConditionApplicationProtocolResponseInput is an input type that accepts FirewallPolicyRuleConditionApplicationProtocolResponseArgs and FirewallPolicyRuleConditionApplicationProtocolResponseOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleConditionApplicationProtocolResponseInput` via:
//
//          FirewallPolicyRuleConditionApplicationProtocolResponseArgs{...}
type FirewallPolicyRuleConditionApplicationProtocolResponseInput interface {
	pulumi.Input

	ToFirewallPolicyRuleConditionApplicationProtocolResponseOutput() FirewallPolicyRuleConditionApplicationProtocolResponseOutput
	ToFirewallPolicyRuleConditionApplicationProtocolResponseOutputWithContext(context.Context) FirewallPolicyRuleConditionApplicationProtocolResponseOutput
}

// Properties of the application rule protocol.
type FirewallPolicyRuleConditionApplicationProtocolResponseArgs struct {
	// Port number for the protocol, cannot be greater than 64000.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Protocol type.
	ProtocolType pulumi.StringPtrInput `pulumi:"protocolType"`
}

func (FirewallPolicyRuleConditionApplicationProtocolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleConditionApplicationProtocolResponse)(nil)).Elem()
}

func (i FirewallPolicyRuleConditionApplicationProtocolResponseArgs) ToFirewallPolicyRuleConditionApplicationProtocolResponseOutput() FirewallPolicyRuleConditionApplicationProtocolResponseOutput {
	return i.ToFirewallPolicyRuleConditionApplicationProtocolResponseOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleConditionApplicationProtocolResponseArgs) ToFirewallPolicyRuleConditionApplicationProtocolResponseOutputWithContext(ctx context.Context) FirewallPolicyRuleConditionApplicationProtocolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleConditionApplicationProtocolResponseOutput)
}

// FirewallPolicyRuleConditionApplicationProtocolResponseArrayInput is an input type that accepts FirewallPolicyRuleConditionApplicationProtocolResponseArray and FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput values.
// You can construct a concrete instance of `FirewallPolicyRuleConditionApplicationProtocolResponseArrayInput` via:
//
//          FirewallPolicyRuleConditionApplicationProtocolResponseArray{ FirewallPolicyRuleConditionApplicationProtocolResponseArgs{...} }
type FirewallPolicyRuleConditionApplicationProtocolResponseArrayInput interface {
	pulumi.Input

	ToFirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput() FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput
	ToFirewallPolicyRuleConditionApplicationProtocolResponseArrayOutputWithContext(context.Context) FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput
}

type FirewallPolicyRuleConditionApplicationProtocolResponseArray []FirewallPolicyRuleConditionApplicationProtocolResponseInput

func (FirewallPolicyRuleConditionApplicationProtocolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleConditionApplicationProtocolResponse)(nil)).Elem()
}

func (i FirewallPolicyRuleConditionApplicationProtocolResponseArray) ToFirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput() FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput {
	return i.ToFirewallPolicyRuleConditionApplicationProtocolResponseArrayOutputWithContext(context.Background())
}

func (i FirewallPolicyRuleConditionApplicationProtocolResponseArray) ToFirewallPolicyRuleConditionApplicationProtocolResponseArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput)
}

// Properties of the application rule protocol.
type FirewallPolicyRuleConditionApplicationProtocolResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleConditionApplicationProtocolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyRuleConditionApplicationProtocolResponse)(nil)).Elem()
}

func (o FirewallPolicyRuleConditionApplicationProtocolResponseOutput) ToFirewallPolicyRuleConditionApplicationProtocolResponseOutput() FirewallPolicyRuleConditionApplicationProtocolResponseOutput {
	return o
}

func (o FirewallPolicyRuleConditionApplicationProtocolResponseOutput) ToFirewallPolicyRuleConditionApplicationProtocolResponseOutputWithContext(ctx context.Context) FirewallPolicyRuleConditionApplicationProtocolResponseOutput {
	return o
}

// Port number for the protocol, cannot be greater than 64000.
func (o FirewallPolicyRuleConditionApplicationProtocolResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleConditionApplicationProtocolResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol type.
func (o FirewallPolicyRuleConditionApplicationProtocolResponseOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicyRuleConditionApplicationProtocolResponse) *string { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

type FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput struct{ *pulumi.OutputState }

func (FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPolicyRuleConditionApplicationProtocolResponse)(nil)).Elem()
}

func (o FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput) ToFirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput() FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput {
	return o
}

func (o FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput) ToFirewallPolicyRuleConditionApplicationProtocolResponseArrayOutputWithContext(ctx context.Context) FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput {
	return o
}

func (o FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput) Index(i pulumi.IntInput) FirewallPolicyRuleConditionApplicationProtocolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPolicyRuleConditionApplicationProtocolResponse {
		return vs[0].([]FirewallPolicyRuleConditionApplicationProtocolResponse)[vs[1].(int)]
	}).(FirewallPolicyRuleConditionApplicationProtocolResponseOutput)
}

// SKU of Firewall policy.
type FirewallPolicySku struct {
	// Tier of Firewall Policy.
	Tier *string `pulumi:"tier"`
}

// FirewallPolicySkuInput is an input type that accepts FirewallPolicySkuArgs and FirewallPolicySkuOutput values.
// You can construct a concrete instance of `FirewallPolicySkuInput` via:
//
//          FirewallPolicySkuArgs{...}
type FirewallPolicySkuInput interface {
	pulumi.Input

	ToFirewallPolicySkuOutput() FirewallPolicySkuOutput
	ToFirewallPolicySkuOutputWithContext(context.Context) FirewallPolicySkuOutput
}

// SKU of Firewall policy.
type FirewallPolicySkuArgs struct {
	// Tier of Firewall Policy.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (FirewallPolicySkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySku)(nil)).Elem()
}

func (i FirewallPolicySkuArgs) ToFirewallPolicySkuOutput() FirewallPolicySkuOutput {
	return i.ToFirewallPolicySkuOutputWithContext(context.Background())
}

func (i FirewallPolicySkuArgs) ToFirewallPolicySkuOutputWithContext(ctx context.Context) FirewallPolicySkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySkuOutput)
}

func (i FirewallPolicySkuArgs) ToFirewallPolicySkuPtrOutput() FirewallPolicySkuPtrOutput {
	return i.ToFirewallPolicySkuPtrOutputWithContext(context.Background())
}

func (i FirewallPolicySkuArgs) ToFirewallPolicySkuPtrOutputWithContext(ctx context.Context) FirewallPolicySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySkuOutput).ToFirewallPolicySkuPtrOutputWithContext(ctx)
}

// FirewallPolicySkuPtrInput is an input type that accepts FirewallPolicySkuArgs, FirewallPolicySkuPtr and FirewallPolicySkuPtrOutput values.
// You can construct a concrete instance of `FirewallPolicySkuPtrInput` via:
//
//          FirewallPolicySkuArgs{...}
//
//  or:
//
//          nil
type FirewallPolicySkuPtrInput interface {
	pulumi.Input

	ToFirewallPolicySkuPtrOutput() FirewallPolicySkuPtrOutput
	ToFirewallPolicySkuPtrOutputWithContext(context.Context) FirewallPolicySkuPtrOutput
}

type firewallPolicySkuPtrType FirewallPolicySkuArgs

func FirewallPolicySkuPtr(v *FirewallPolicySkuArgs) FirewallPolicySkuPtrInput {
	return (*firewallPolicySkuPtrType)(v)
}

func (*firewallPolicySkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicySku)(nil)).Elem()
}

func (i *firewallPolicySkuPtrType) ToFirewallPolicySkuPtrOutput() FirewallPolicySkuPtrOutput {
	return i.ToFirewallPolicySkuPtrOutputWithContext(context.Background())
}

func (i *firewallPolicySkuPtrType) ToFirewallPolicySkuPtrOutputWithContext(ctx context.Context) FirewallPolicySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySkuPtrOutput)
}

// SKU of Firewall policy.
type FirewallPolicySkuOutput struct{ *pulumi.OutputState }

func (FirewallPolicySkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySku)(nil)).Elem()
}

func (o FirewallPolicySkuOutput) ToFirewallPolicySkuOutput() FirewallPolicySkuOutput {
	return o
}

func (o FirewallPolicySkuOutput) ToFirewallPolicySkuOutputWithContext(ctx context.Context) FirewallPolicySkuOutput {
	return o
}

func (o FirewallPolicySkuOutput) ToFirewallPolicySkuPtrOutput() FirewallPolicySkuPtrOutput {
	return o.ToFirewallPolicySkuPtrOutputWithContext(context.Background())
}

func (o FirewallPolicySkuOutput) ToFirewallPolicySkuPtrOutputWithContext(ctx context.Context) FirewallPolicySkuPtrOutput {
	return o.ApplyT(func(v FirewallPolicySku) *FirewallPolicySku {
		return &v
	}).(FirewallPolicySkuPtrOutput)
}

// Tier of Firewall Policy.
func (o FirewallPolicySkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicySku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type FirewallPolicySkuPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicySkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicySku)(nil)).Elem()
}

func (o FirewallPolicySkuPtrOutput) ToFirewallPolicySkuPtrOutput() FirewallPolicySkuPtrOutput {
	return o
}

func (o FirewallPolicySkuPtrOutput) ToFirewallPolicySkuPtrOutputWithContext(ctx context.Context) FirewallPolicySkuPtrOutput {
	return o
}

func (o FirewallPolicySkuPtrOutput) Elem() FirewallPolicySkuOutput {
	return o.ApplyT(func(v *FirewallPolicySku) FirewallPolicySku { return *v }).(FirewallPolicySkuOutput)
}

// Tier of Firewall Policy.
func (o FirewallPolicySkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicySku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU of Firewall policy.
type FirewallPolicySkuResponse struct {
	// Tier of Firewall Policy.
	Tier *string `pulumi:"tier"`
}

// FirewallPolicySkuResponseInput is an input type that accepts FirewallPolicySkuResponseArgs and FirewallPolicySkuResponseOutput values.
// You can construct a concrete instance of `FirewallPolicySkuResponseInput` via:
//
//          FirewallPolicySkuResponseArgs{...}
type FirewallPolicySkuResponseInput interface {
	pulumi.Input

	ToFirewallPolicySkuResponseOutput() FirewallPolicySkuResponseOutput
	ToFirewallPolicySkuResponseOutputWithContext(context.Context) FirewallPolicySkuResponseOutput
}

// SKU of Firewall policy.
type FirewallPolicySkuResponseArgs struct {
	// Tier of Firewall Policy.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (FirewallPolicySkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySkuResponse)(nil)).Elem()
}

func (i FirewallPolicySkuResponseArgs) ToFirewallPolicySkuResponseOutput() FirewallPolicySkuResponseOutput {
	return i.ToFirewallPolicySkuResponseOutputWithContext(context.Background())
}

func (i FirewallPolicySkuResponseArgs) ToFirewallPolicySkuResponseOutputWithContext(ctx context.Context) FirewallPolicySkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySkuResponseOutput)
}

func (i FirewallPolicySkuResponseArgs) ToFirewallPolicySkuResponsePtrOutput() FirewallPolicySkuResponsePtrOutput {
	return i.ToFirewallPolicySkuResponsePtrOutputWithContext(context.Background())
}

func (i FirewallPolicySkuResponseArgs) ToFirewallPolicySkuResponsePtrOutputWithContext(ctx context.Context) FirewallPolicySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySkuResponseOutput).ToFirewallPolicySkuResponsePtrOutputWithContext(ctx)
}

// FirewallPolicySkuResponsePtrInput is an input type that accepts FirewallPolicySkuResponseArgs, FirewallPolicySkuResponsePtr and FirewallPolicySkuResponsePtrOutput values.
// You can construct a concrete instance of `FirewallPolicySkuResponsePtrInput` via:
//
//          FirewallPolicySkuResponseArgs{...}
//
//  or:
//
//          nil
type FirewallPolicySkuResponsePtrInput interface {
	pulumi.Input

	ToFirewallPolicySkuResponsePtrOutput() FirewallPolicySkuResponsePtrOutput
	ToFirewallPolicySkuResponsePtrOutputWithContext(context.Context) FirewallPolicySkuResponsePtrOutput
}

type firewallPolicySkuResponsePtrType FirewallPolicySkuResponseArgs

func FirewallPolicySkuResponsePtr(v *FirewallPolicySkuResponseArgs) FirewallPolicySkuResponsePtrInput {
	return (*firewallPolicySkuResponsePtrType)(v)
}

func (*firewallPolicySkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicySkuResponse)(nil)).Elem()
}

func (i *firewallPolicySkuResponsePtrType) ToFirewallPolicySkuResponsePtrOutput() FirewallPolicySkuResponsePtrOutput {
	return i.ToFirewallPolicySkuResponsePtrOutputWithContext(context.Background())
}

func (i *firewallPolicySkuResponsePtrType) ToFirewallPolicySkuResponsePtrOutputWithContext(ctx context.Context) FirewallPolicySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicySkuResponsePtrOutput)
}

// SKU of Firewall policy.
type FirewallPolicySkuResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicySkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicySkuResponse)(nil)).Elem()
}

func (o FirewallPolicySkuResponseOutput) ToFirewallPolicySkuResponseOutput() FirewallPolicySkuResponseOutput {
	return o
}

func (o FirewallPolicySkuResponseOutput) ToFirewallPolicySkuResponseOutputWithContext(ctx context.Context) FirewallPolicySkuResponseOutput {
	return o
}

func (o FirewallPolicySkuResponseOutput) ToFirewallPolicySkuResponsePtrOutput() FirewallPolicySkuResponsePtrOutput {
	return o.ToFirewallPolicySkuResponsePtrOutputWithContext(context.Background())
}

func (o FirewallPolicySkuResponseOutput) ToFirewallPolicySkuResponsePtrOutputWithContext(ctx context.Context) FirewallPolicySkuResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicySkuResponse) *FirewallPolicySkuResponse {
		return &v
	}).(FirewallPolicySkuResponsePtrOutput)
}

// Tier of Firewall Policy.
func (o FirewallPolicySkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPolicySkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type FirewallPolicySkuResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicySkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicySkuResponse)(nil)).Elem()
}

func (o FirewallPolicySkuResponsePtrOutput) ToFirewallPolicySkuResponsePtrOutput() FirewallPolicySkuResponsePtrOutput {
	return o
}

func (o FirewallPolicySkuResponsePtrOutput) ToFirewallPolicySkuResponsePtrOutputWithContext(ctx context.Context) FirewallPolicySkuResponsePtrOutput {
	return o
}

func (o FirewallPolicySkuResponsePtrOutput) Elem() FirewallPolicySkuResponseOutput {
	return o.ApplyT(func(v *FirewallPolicySkuResponse) FirewallPolicySkuResponse { return *v }).(FirewallPolicySkuResponseOutput)
}

// Tier of Firewall Policy.
func (o FirewallPolicySkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FirewallPolicySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// ThreatIntel Whitelist for Firewall Policy.
type FirewallPolicyThreatIntelWhitelist struct {
	// List of FQDNs for the ThreatIntel Whitelist.
	Fqdns []string `pulumi:"fqdns"`
	// List of IP addresses for the ThreatIntel Whitelist.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// FirewallPolicyThreatIntelWhitelistInput is an input type that accepts FirewallPolicyThreatIntelWhitelistArgs and FirewallPolicyThreatIntelWhitelistOutput values.
// You can construct a concrete instance of `FirewallPolicyThreatIntelWhitelistInput` via:
//
//          FirewallPolicyThreatIntelWhitelistArgs{...}
type FirewallPolicyThreatIntelWhitelistInput interface {
	pulumi.Input

	ToFirewallPolicyThreatIntelWhitelistOutput() FirewallPolicyThreatIntelWhitelistOutput
	ToFirewallPolicyThreatIntelWhitelistOutputWithContext(context.Context) FirewallPolicyThreatIntelWhitelistOutput
}

// ThreatIntel Whitelist for Firewall Policy.
type FirewallPolicyThreatIntelWhitelistArgs struct {
	// List of FQDNs for the ThreatIntel Whitelist.
	Fqdns pulumi.StringArrayInput `pulumi:"fqdns"`
	// List of IP addresses for the ThreatIntel Whitelist.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (FirewallPolicyThreatIntelWhitelistArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyThreatIntelWhitelist)(nil)).Elem()
}

func (i FirewallPolicyThreatIntelWhitelistArgs) ToFirewallPolicyThreatIntelWhitelistOutput() FirewallPolicyThreatIntelWhitelistOutput {
	return i.ToFirewallPolicyThreatIntelWhitelistOutputWithContext(context.Background())
}

func (i FirewallPolicyThreatIntelWhitelistArgs) ToFirewallPolicyThreatIntelWhitelistOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyThreatIntelWhitelistOutput)
}

func (i FirewallPolicyThreatIntelWhitelistArgs) ToFirewallPolicyThreatIntelWhitelistPtrOutput() FirewallPolicyThreatIntelWhitelistPtrOutput {
	return i.ToFirewallPolicyThreatIntelWhitelistPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyThreatIntelWhitelistArgs) ToFirewallPolicyThreatIntelWhitelistPtrOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyThreatIntelWhitelistOutput).ToFirewallPolicyThreatIntelWhitelistPtrOutputWithContext(ctx)
}

// FirewallPolicyThreatIntelWhitelistPtrInput is an input type that accepts FirewallPolicyThreatIntelWhitelistArgs, FirewallPolicyThreatIntelWhitelistPtr and FirewallPolicyThreatIntelWhitelistPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyThreatIntelWhitelistPtrInput` via:
//
//          FirewallPolicyThreatIntelWhitelistArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyThreatIntelWhitelistPtrInput interface {
	pulumi.Input

	ToFirewallPolicyThreatIntelWhitelistPtrOutput() FirewallPolicyThreatIntelWhitelistPtrOutput
	ToFirewallPolicyThreatIntelWhitelistPtrOutputWithContext(context.Context) FirewallPolicyThreatIntelWhitelistPtrOutput
}

type firewallPolicyThreatIntelWhitelistPtrType FirewallPolicyThreatIntelWhitelistArgs

func FirewallPolicyThreatIntelWhitelistPtr(v *FirewallPolicyThreatIntelWhitelistArgs) FirewallPolicyThreatIntelWhitelistPtrInput {
	return (*firewallPolicyThreatIntelWhitelistPtrType)(v)
}

func (*firewallPolicyThreatIntelWhitelistPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyThreatIntelWhitelist)(nil)).Elem()
}

func (i *firewallPolicyThreatIntelWhitelistPtrType) ToFirewallPolicyThreatIntelWhitelistPtrOutput() FirewallPolicyThreatIntelWhitelistPtrOutput {
	return i.ToFirewallPolicyThreatIntelWhitelistPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyThreatIntelWhitelistPtrType) ToFirewallPolicyThreatIntelWhitelistPtrOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyThreatIntelWhitelistPtrOutput)
}

// ThreatIntel Whitelist for Firewall Policy.
type FirewallPolicyThreatIntelWhitelistOutput struct{ *pulumi.OutputState }

func (FirewallPolicyThreatIntelWhitelistOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyThreatIntelWhitelist)(nil)).Elem()
}

func (o FirewallPolicyThreatIntelWhitelistOutput) ToFirewallPolicyThreatIntelWhitelistOutput() FirewallPolicyThreatIntelWhitelistOutput {
	return o
}

func (o FirewallPolicyThreatIntelWhitelistOutput) ToFirewallPolicyThreatIntelWhitelistOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistOutput {
	return o
}

func (o FirewallPolicyThreatIntelWhitelistOutput) ToFirewallPolicyThreatIntelWhitelistPtrOutput() FirewallPolicyThreatIntelWhitelistPtrOutput {
	return o.ToFirewallPolicyThreatIntelWhitelistPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyThreatIntelWhitelistOutput) ToFirewallPolicyThreatIntelWhitelistPtrOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistPtrOutput {
	return o.ApplyT(func(v FirewallPolicyThreatIntelWhitelist) *FirewallPolicyThreatIntelWhitelist {
		return &v
	}).(FirewallPolicyThreatIntelWhitelistPtrOutput)
}

// List of FQDNs for the ThreatIntel Whitelist.
func (o FirewallPolicyThreatIntelWhitelistOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyThreatIntelWhitelist) []string { return v.Fqdns }).(pulumi.StringArrayOutput)
}

// List of IP addresses for the ThreatIntel Whitelist.
func (o FirewallPolicyThreatIntelWhitelistOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyThreatIntelWhitelist) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type FirewallPolicyThreatIntelWhitelistPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyThreatIntelWhitelistPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyThreatIntelWhitelist)(nil)).Elem()
}

func (o FirewallPolicyThreatIntelWhitelistPtrOutput) ToFirewallPolicyThreatIntelWhitelistPtrOutput() FirewallPolicyThreatIntelWhitelistPtrOutput {
	return o
}

func (o FirewallPolicyThreatIntelWhitelistPtrOutput) ToFirewallPolicyThreatIntelWhitelistPtrOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistPtrOutput {
	return o
}

func (o FirewallPolicyThreatIntelWhitelistPtrOutput) Elem() FirewallPolicyThreatIntelWhitelistOutput {
	return o.ApplyT(func(v *FirewallPolicyThreatIntelWhitelist) FirewallPolicyThreatIntelWhitelist { return *v }).(FirewallPolicyThreatIntelWhitelistOutput)
}

// List of FQDNs for the ThreatIntel Whitelist.
func (o FirewallPolicyThreatIntelWhitelistPtrOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyThreatIntelWhitelist) []string {
		if v == nil {
			return nil
		}
		return v.Fqdns
	}).(pulumi.StringArrayOutput)
}

// List of IP addresses for the ThreatIntel Whitelist.
func (o FirewallPolicyThreatIntelWhitelistPtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyThreatIntelWhitelist) []string {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

// ThreatIntel Whitelist for Firewall Policy.
type FirewallPolicyThreatIntelWhitelistResponse struct {
	// List of FQDNs for the ThreatIntel Whitelist.
	Fqdns []string `pulumi:"fqdns"`
	// List of IP addresses for the ThreatIntel Whitelist.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// FirewallPolicyThreatIntelWhitelistResponseInput is an input type that accepts FirewallPolicyThreatIntelWhitelistResponseArgs and FirewallPolicyThreatIntelWhitelistResponseOutput values.
// You can construct a concrete instance of `FirewallPolicyThreatIntelWhitelistResponseInput` via:
//
//          FirewallPolicyThreatIntelWhitelistResponseArgs{...}
type FirewallPolicyThreatIntelWhitelistResponseInput interface {
	pulumi.Input

	ToFirewallPolicyThreatIntelWhitelistResponseOutput() FirewallPolicyThreatIntelWhitelistResponseOutput
	ToFirewallPolicyThreatIntelWhitelistResponseOutputWithContext(context.Context) FirewallPolicyThreatIntelWhitelistResponseOutput
}

// ThreatIntel Whitelist for Firewall Policy.
type FirewallPolicyThreatIntelWhitelistResponseArgs struct {
	// List of FQDNs for the ThreatIntel Whitelist.
	Fqdns pulumi.StringArrayInput `pulumi:"fqdns"`
	// List of IP addresses for the ThreatIntel Whitelist.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (FirewallPolicyThreatIntelWhitelistResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyThreatIntelWhitelistResponse)(nil)).Elem()
}

func (i FirewallPolicyThreatIntelWhitelistResponseArgs) ToFirewallPolicyThreatIntelWhitelistResponseOutput() FirewallPolicyThreatIntelWhitelistResponseOutput {
	return i.ToFirewallPolicyThreatIntelWhitelistResponseOutputWithContext(context.Background())
}

func (i FirewallPolicyThreatIntelWhitelistResponseArgs) ToFirewallPolicyThreatIntelWhitelistResponseOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyThreatIntelWhitelistResponseOutput)
}

func (i FirewallPolicyThreatIntelWhitelistResponseArgs) ToFirewallPolicyThreatIntelWhitelistResponsePtrOutput() FirewallPolicyThreatIntelWhitelistResponsePtrOutput {
	return i.ToFirewallPolicyThreatIntelWhitelistResponsePtrOutputWithContext(context.Background())
}

func (i FirewallPolicyThreatIntelWhitelistResponseArgs) ToFirewallPolicyThreatIntelWhitelistResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyThreatIntelWhitelistResponseOutput).ToFirewallPolicyThreatIntelWhitelistResponsePtrOutputWithContext(ctx)
}

// FirewallPolicyThreatIntelWhitelistResponsePtrInput is an input type that accepts FirewallPolicyThreatIntelWhitelistResponseArgs, FirewallPolicyThreatIntelWhitelistResponsePtr and FirewallPolicyThreatIntelWhitelistResponsePtrOutput values.
// You can construct a concrete instance of `FirewallPolicyThreatIntelWhitelistResponsePtrInput` via:
//
//          FirewallPolicyThreatIntelWhitelistResponseArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyThreatIntelWhitelistResponsePtrInput interface {
	pulumi.Input

	ToFirewallPolicyThreatIntelWhitelistResponsePtrOutput() FirewallPolicyThreatIntelWhitelistResponsePtrOutput
	ToFirewallPolicyThreatIntelWhitelistResponsePtrOutputWithContext(context.Context) FirewallPolicyThreatIntelWhitelistResponsePtrOutput
}

type firewallPolicyThreatIntelWhitelistResponsePtrType FirewallPolicyThreatIntelWhitelistResponseArgs

func FirewallPolicyThreatIntelWhitelistResponsePtr(v *FirewallPolicyThreatIntelWhitelistResponseArgs) FirewallPolicyThreatIntelWhitelistResponsePtrInput {
	return (*firewallPolicyThreatIntelWhitelistResponsePtrType)(v)
}

func (*firewallPolicyThreatIntelWhitelistResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyThreatIntelWhitelistResponse)(nil)).Elem()
}

func (i *firewallPolicyThreatIntelWhitelistResponsePtrType) ToFirewallPolicyThreatIntelWhitelistResponsePtrOutput() FirewallPolicyThreatIntelWhitelistResponsePtrOutput {
	return i.ToFirewallPolicyThreatIntelWhitelistResponsePtrOutputWithContext(context.Background())
}

func (i *firewallPolicyThreatIntelWhitelistResponsePtrType) ToFirewallPolicyThreatIntelWhitelistResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyThreatIntelWhitelistResponsePtrOutput)
}

// ThreatIntel Whitelist for Firewall Policy.
type FirewallPolicyThreatIntelWhitelistResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyThreatIntelWhitelistResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyThreatIntelWhitelistResponse)(nil)).Elem()
}

func (o FirewallPolicyThreatIntelWhitelistResponseOutput) ToFirewallPolicyThreatIntelWhitelistResponseOutput() FirewallPolicyThreatIntelWhitelistResponseOutput {
	return o
}

func (o FirewallPolicyThreatIntelWhitelistResponseOutput) ToFirewallPolicyThreatIntelWhitelistResponseOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistResponseOutput {
	return o
}

func (o FirewallPolicyThreatIntelWhitelistResponseOutput) ToFirewallPolicyThreatIntelWhitelistResponsePtrOutput() FirewallPolicyThreatIntelWhitelistResponsePtrOutput {
	return o.ToFirewallPolicyThreatIntelWhitelistResponsePtrOutputWithContext(context.Background())
}

func (o FirewallPolicyThreatIntelWhitelistResponseOutput) ToFirewallPolicyThreatIntelWhitelistResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyThreatIntelWhitelistResponse) *FirewallPolicyThreatIntelWhitelistResponse {
		return &v
	}).(FirewallPolicyThreatIntelWhitelistResponsePtrOutput)
}

// List of FQDNs for the ThreatIntel Whitelist.
func (o FirewallPolicyThreatIntelWhitelistResponseOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyThreatIntelWhitelistResponse) []string { return v.Fqdns }).(pulumi.StringArrayOutput)
}

// List of IP addresses for the ThreatIntel Whitelist.
func (o FirewallPolicyThreatIntelWhitelistResponseOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallPolicyThreatIntelWhitelistResponse) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type FirewallPolicyThreatIntelWhitelistResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyThreatIntelWhitelistResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyThreatIntelWhitelistResponse)(nil)).Elem()
}

func (o FirewallPolicyThreatIntelWhitelistResponsePtrOutput) ToFirewallPolicyThreatIntelWhitelistResponsePtrOutput() FirewallPolicyThreatIntelWhitelistResponsePtrOutput {
	return o
}

func (o FirewallPolicyThreatIntelWhitelistResponsePtrOutput) ToFirewallPolicyThreatIntelWhitelistResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyThreatIntelWhitelistResponsePtrOutput {
	return o
}

func (o FirewallPolicyThreatIntelWhitelistResponsePtrOutput) Elem() FirewallPolicyThreatIntelWhitelistResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyThreatIntelWhitelistResponse) FirewallPolicyThreatIntelWhitelistResponse {
		return *v
	}).(FirewallPolicyThreatIntelWhitelistResponseOutput)
}

// List of FQDNs for the ThreatIntel Whitelist.
func (o FirewallPolicyThreatIntelWhitelistResponsePtrOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyThreatIntelWhitelistResponse) []string {
		if v == nil {
			return nil
		}
		return v.Fqdns
	}).(pulumi.StringArrayOutput)
}

// List of IP addresses for the ThreatIntel Whitelist.
func (o FirewallPolicyThreatIntelWhitelistResponsePtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FirewallPolicyThreatIntelWhitelistResponse) []string {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(pulumi.StringArrayOutput)
}

// Configuration needed to perform TLS termination & initiation.
type FirewallPolicyTransportSecurity struct {
	// The CA used for intermediate CA generation.
	CertificateAuthority *FirewallPolicyCertificateAuthority `pulumi:"certificateAuthority"`
}

// FirewallPolicyTransportSecurityInput is an input type that accepts FirewallPolicyTransportSecurityArgs and FirewallPolicyTransportSecurityOutput values.
// You can construct a concrete instance of `FirewallPolicyTransportSecurityInput` via:
//
//          FirewallPolicyTransportSecurityArgs{...}
type FirewallPolicyTransportSecurityInput interface {
	pulumi.Input

	ToFirewallPolicyTransportSecurityOutput() FirewallPolicyTransportSecurityOutput
	ToFirewallPolicyTransportSecurityOutputWithContext(context.Context) FirewallPolicyTransportSecurityOutput
}

// Configuration needed to perform TLS termination & initiation.
type FirewallPolicyTransportSecurityArgs struct {
	// The CA used for intermediate CA generation.
	CertificateAuthority FirewallPolicyCertificateAuthorityPtrInput `pulumi:"certificateAuthority"`
}

func (FirewallPolicyTransportSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyTransportSecurity)(nil)).Elem()
}

func (i FirewallPolicyTransportSecurityArgs) ToFirewallPolicyTransportSecurityOutput() FirewallPolicyTransportSecurityOutput {
	return i.ToFirewallPolicyTransportSecurityOutputWithContext(context.Background())
}

func (i FirewallPolicyTransportSecurityArgs) ToFirewallPolicyTransportSecurityOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyTransportSecurityOutput)
}

func (i FirewallPolicyTransportSecurityArgs) ToFirewallPolicyTransportSecurityPtrOutput() FirewallPolicyTransportSecurityPtrOutput {
	return i.ToFirewallPolicyTransportSecurityPtrOutputWithContext(context.Background())
}

func (i FirewallPolicyTransportSecurityArgs) ToFirewallPolicyTransportSecurityPtrOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyTransportSecurityOutput).ToFirewallPolicyTransportSecurityPtrOutputWithContext(ctx)
}

// FirewallPolicyTransportSecurityPtrInput is an input type that accepts FirewallPolicyTransportSecurityArgs, FirewallPolicyTransportSecurityPtr and FirewallPolicyTransportSecurityPtrOutput values.
// You can construct a concrete instance of `FirewallPolicyTransportSecurityPtrInput` via:
//
//          FirewallPolicyTransportSecurityArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyTransportSecurityPtrInput interface {
	pulumi.Input

	ToFirewallPolicyTransportSecurityPtrOutput() FirewallPolicyTransportSecurityPtrOutput
	ToFirewallPolicyTransportSecurityPtrOutputWithContext(context.Context) FirewallPolicyTransportSecurityPtrOutput
}

type firewallPolicyTransportSecurityPtrType FirewallPolicyTransportSecurityArgs

func FirewallPolicyTransportSecurityPtr(v *FirewallPolicyTransportSecurityArgs) FirewallPolicyTransportSecurityPtrInput {
	return (*firewallPolicyTransportSecurityPtrType)(v)
}

func (*firewallPolicyTransportSecurityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyTransportSecurity)(nil)).Elem()
}

func (i *firewallPolicyTransportSecurityPtrType) ToFirewallPolicyTransportSecurityPtrOutput() FirewallPolicyTransportSecurityPtrOutput {
	return i.ToFirewallPolicyTransportSecurityPtrOutputWithContext(context.Background())
}

func (i *firewallPolicyTransportSecurityPtrType) ToFirewallPolicyTransportSecurityPtrOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyTransportSecurityPtrOutput)
}

// Configuration needed to perform TLS termination & initiation.
type FirewallPolicyTransportSecurityOutput struct{ *pulumi.OutputState }

func (FirewallPolicyTransportSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyTransportSecurity)(nil)).Elem()
}

func (o FirewallPolicyTransportSecurityOutput) ToFirewallPolicyTransportSecurityOutput() FirewallPolicyTransportSecurityOutput {
	return o
}

func (o FirewallPolicyTransportSecurityOutput) ToFirewallPolicyTransportSecurityOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityOutput {
	return o
}

func (o FirewallPolicyTransportSecurityOutput) ToFirewallPolicyTransportSecurityPtrOutput() FirewallPolicyTransportSecurityPtrOutput {
	return o.ToFirewallPolicyTransportSecurityPtrOutputWithContext(context.Background())
}

func (o FirewallPolicyTransportSecurityOutput) ToFirewallPolicyTransportSecurityPtrOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityPtrOutput {
	return o.ApplyT(func(v FirewallPolicyTransportSecurity) *FirewallPolicyTransportSecurity {
		return &v
	}).(FirewallPolicyTransportSecurityPtrOutput)
}

// The CA used for intermediate CA generation.
func (o FirewallPolicyTransportSecurityOutput) CertificateAuthority() FirewallPolicyCertificateAuthorityPtrOutput {
	return o.ApplyT(func(v FirewallPolicyTransportSecurity) *FirewallPolicyCertificateAuthority {
		return v.CertificateAuthority
	}).(FirewallPolicyCertificateAuthorityPtrOutput)
}

type FirewallPolicyTransportSecurityPtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyTransportSecurityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyTransportSecurity)(nil)).Elem()
}

func (o FirewallPolicyTransportSecurityPtrOutput) ToFirewallPolicyTransportSecurityPtrOutput() FirewallPolicyTransportSecurityPtrOutput {
	return o
}

func (o FirewallPolicyTransportSecurityPtrOutput) ToFirewallPolicyTransportSecurityPtrOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityPtrOutput {
	return o
}

func (o FirewallPolicyTransportSecurityPtrOutput) Elem() FirewallPolicyTransportSecurityOutput {
	return o.ApplyT(func(v *FirewallPolicyTransportSecurity) FirewallPolicyTransportSecurity { return *v }).(FirewallPolicyTransportSecurityOutput)
}

// The CA used for intermediate CA generation.
func (o FirewallPolicyTransportSecurityPtrOutput) CertificateAuthority() FirewallPolicyCertificateAuthorityPtrOutput {
	return o.ApplyT(func(v *FirewallPolicyTransportSecurity) *FirewallPolicyCertificateAuthority {
		if v == nil {
			return nil
		}
		return v.CertificateAuthority
	}).(FirewallPolicyCertificateAuthorityPtrOutput)
}

// Configuration needed to perform TLS termination & initiation.
type FirewallPolicyTransportSecurityResponse struct {
	// The CA used for intermediate CA generation.
	CertificateAuthority *FirewallPolicyCertificateAuthorityResponse `pulumi:"certificateAuthority"`
}

// FirewallPolicyTransportSecurityResponseInput is an input type that accepts FirewallPolicyTransportSecurityResponseArgs and FirewallPolicyTransportSecurityResponseOutput values.
// You can construct a concrete instance of `FirewallPolicyTransportSecurityResponseInput` via:
//
//          FirewallPolicyTransportSecurityResponseArgs{...}
type FirewallPolicyTransportSecurityResponseInput interface {
	pulumi.Input

	ToFirewallPolicyTransportSecurityResponseOutput() FirewallPolicyTransportSecurityResponseOutput
	ToFirewallPolicyTransportSecurityResponseOutputWithContext(context.Context) FirewallPolicyTransportSecurityResponseOutput
}

// Configuration needed to perform TLS termination & initiation.
type FirewallPolicyTransportSecurityResponseArgs struct {
	// The CA used for intermediate CA generation.
	CertificateAuthority FirewallPolicyCertificateAuthorityResponsePtrInput `pulumi:"certificateAuthority"`
}

func (FirewallPolicyTransportSecurityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyTransportSecurityResponse)(nil)).Elem()
}

func (i FirewallPolicyTransportSecurityResponseArgs) ToFirewallPolicyTransportSecurityResponseOutput() FirewallPolicyTransportSecurityResponseOutput {
	return i.ToFirewallPolicyTransportSecurityResponseOutputWithContext(context.Background())
}

func (i FirewallPolicyTransportSecurityResponseArgs) ToFirewallPolicyTransportSecurityResponseOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyTransportSecurityResponseOutput)
}

func (i FirewallPolicyTransportSecurityResponseArgs) ToFirewallPolicyTransportSecurityResponsePtrOutput() FirewallPolicyTransportSecurityResponsePtrOutput {
	return i.ToFirewallPolicyTransportSecurityResponsePtrOutputWithContext(context.Background())
}

func (i FirewallPolicyTransportSecurityResponseArgs) ToFirewallPolicyTransportSecurityResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyTransportSecurityResponseOutput).ToFirewallPolicyTransportSecurityResponsePtrOutputWithContext(ctx)
}

// FirewallPolicyTransportSecurityResponsePtrInput is an input type that accepts FirewallPolicyTransportSecurityResponseArgs, FirewallPolicyTransportSecurityResponsePtr and FirewallPolicyTransportSecurityResponsePtrOutput values.
// You can construct a concrete instance of `FirewallPolicyTransportSecurityResponsePtrInput` via:
//
//          FirewallPolicyTransportSecurityResponseArgs{...}
//
//  or:
//
//          nil
type FirewallPolicyTransportSecurityResponsePtrInput interface {
	pulumi.Input

	ToFirewallPolicyTransportSecurityResponsePtrOutput() FirewallPolicyTransportSecurityResponsePtrOutput
	ToFirewallPolicyTransportSecurityResponsePtrOutputWithContext(context.Context) FirewallPolicyTransportSecurityResponsePtrOutput
}

type firewallPolicyTransportSecurityResponsePtrType FirewallPolicyTransportSecurityResponseArgs

func FirewallPolicyTransportSecurityResponsePtr(v *FirewallPolicyTransportSecurityResponseArgs) FirewallPolicyTransportSecurityResponsePtrInput {
	return (*firewallPolicyTransportSecurityResponsePtrType)(v)
}

func (*firewallPolicyTransportSecurityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyTransportSecurityResponse)(nil)).Elem()
}

func (i *firewallPolicyTransportSecurityResponsePtrType) ToFirewallPolicyTransportSecurityResponsePtrOutput() FirewallPolicyTransportSecurityResponsePtrOutput {
	return i.ToFirewallPolicyTransportSecurityResponsePtrOutputWithContext(context.Background())
}

func (i *firewallPolicyTransportSecurityResponsePtrType) ToFirewallPolicyTransportSecurityResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPolicyTransportSecurityResponsePtrOutput)
}

// Configuration needed to perform TLS termination & initiation.
type FirewallPolicyTransportSecurityResponseOutput struct{ *pulumi.OutputState }

func (FirewallPolicyTransportSecurityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPolicyTransportSecurityResponse)(nil)).Elem()
}

func (o FirewallPolicyTransportSecurityResponseOutput) ToFirewallPolicyTransportSecurityResponseOutput() FirewallPolicyTransportSecurityResponseOutput {
	return o
}

func (o FirewallPolicyTransportSecurityResponseOutput) ToFirewallPolicyTransportSecurityResponseOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityResponseOutput {
	return o
}

func (o FirewallPolicyTransportSecurityResponseOutput) ToFirewallPolicyTransportSecurityResponsePtrOutput() FirewallPolicyTransportSecurityResponsePtrOutput {
	return o.ToFirewallPolicyTransportSecurityResponsePtrOutputWithContext(context.Background())
}

func (o FirewallPolicyTransportSecurityResponseOutput) ToFirewallPolicyTransportSecurityResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyTransportSecurityResponse) *FirewallPolicyTransportSecurityResponse {
		return &v
	}).(FirewallPolicyTransportSecurityResponsePtrOutput)
}

// The CA used for intermediate CA generation.
func (o FirewallPolicyTransportSecurityResponseOutput) CertificateAuthority() FirewallPolicyCertificateAuthorityResponsePtrOutput {
	return o.ApplyT(func(v FirewallPolicyTransportSecurityResponse) *FirewallPolicyCertificateAuthorityResponse {
		return v.CertificateAuthority
	}).(FirewallPolicyCertificateAuthorityResponsePtrOutput)
}

type FirewallPolicyTransportSecurityResponsePtrOutput struct{ *pulumi.OutputState }

func (FirewallPolicyTransportSecurityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallPolicyTransportSecurityResponse)(nil)).Elem()
}

func (o FirewallPolicyTransportSecurityResponsePtrOutput) ToFirewallPolicyTransportSecurityResponsePtrOutput() FirewallPolicyTransportSecurityResponsePtrOutput {
	return o
}

func (o FirewallPolicyTransportSecurityResponsePtrOutput) ToFirewallPolicyTransportSecurityResponsePtrOutputWithContext(ctx context.Context) FirewallPolicyTransportSecurityResponsePtrOutput {
	return o
}

func (o FirewallPolicyTransportSecurityResponsePtrOutput) Elem() FirewallPolicyTransportSecurityResponseOutput {
	return o.ApplyT(func(v *FirewallPolicyTransportSecurityResponse) FirewallPolicyTransportSecurityResponse { return *v }).(FirewallPolicyTransportSecurityResponseOutput)
}

// The CA used for intermediate CA generation.
func (o FirewallPolicyTransportSecurityResponsePtrOutput) CertificateAuthority() FirewallPolicyCertificateAuthorityResponsePtrOutput {
	return o.ApplyT(func(v *FirewallPolicyTransportSecurityResponse) *FirewallPolicyCertificateAuthorityResponse {
		if v == nil {
			return nil
		}
		return v.CertificateAuthority
	}).(FirewallPolicyCertificateAuthorityResponsePtrOutput)
}

// Parameters that define the flow log format.
type FlowLogFormatParameters struct {
	// The file type of flow log.
	Type *string `pulumi:"type"`
	// The version (revision) of the flow log.
	Version *int `pulumi:"version"`
}

// FlowLogFormatParametersInput is an input type that accepts FlowLogFormatParametersArgs and FlowLogFormatParametersOutput values.
// You can construct a concrete instance of `FlowLogFormatParametersInput` via:
//
//          FlowLogFormatParametersArgs{...}
type FlowLogFormatParametersInput interface {
	pulumi.Input

	ToFlowLogFormatParametersOutput() FlowLogFormatParametersOutput
	ToFlowLogFormatParametersOutputWithContext(context.Context) FlowLogFormatParametersOutput
}

// Parameters that define the flow log format.
type FlowLogFormatParametersArgs struct {
	// The file type of flow log.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The version (revision) of the flow log.
	Version pulumi.IntPtrInput `pulumi:"version"`
}

func (FlowLogFormatParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogFormatParameters)(nil)).Elem()
}

func (i FlowLogFormatParametersArgs) ToFlowLogFormatParametersOutput() FlowLogFormatParametersOutput {
	return i.ToFlowLogFormatParametersOutputWithContext(context.Background())
}

func (i FlowLogFormatParametersArgs) ToFlowLogFormatParametersOutputWithContext(ctx context.Context) FlowLogFormatParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogFormatParametersOutput)
}

func (i FlowLogFormatParametersArgs) ToFlowLogFormatParametersPtrOutput() FlowLogFormatParametersPtrOutput {
	return i.ToFlowLogFormatParametersPtrOutputWithContext(context.Background())
}

func (i FlowLogFormatParametersArgs) ToFlowLogFormatParametersPtrOutputWithContext(ctx context.Context) FlowLogFormatParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogFormatParametersOutput).ToFlowLogFormatParametersPtrOutputWithContext(ctx)
}

// FlowLogFormatParametersPtrInput is an input type that accepts FlowLogFormatParametersArgs, FlowLogFormatParametersPtr and FlowLogFormatParametersPtrOutput values.
// You can construct a concrete instance of `FlowLogFormatParametersPtrInput` via:
//
//          FlowLogFormatParametersArgs{...}
//
//  or:
//
//          nil
type FlowLogFormatParametersPtrInput interface {
	pulumi.Input

	ToFlowLogFormatParametersPtrOutput() FlowLogFormatParametersPtrOutput
	ToFlowLogFormatParametersPtrOutputWithContext(context.Context) FlowLogFormatParametersPtrOutput
}

type flowLogFormatParametersPtrType FlowLogFormatParametersArgs

func FlowLogFormatParametersPtr(v *FlowLogFormatParametersArgs) FlowLogFormatParametersPtrInput {
	return (*flowLogFormatParametersPtrType)(v)
}

func (*flowLogFormatParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowLogFormatParameters)(nil)).Elem()
}

func (i *flowLogFormatParametersPtrType) ToFlowLogFormatParametersPtrOutput() FlowLogFormatParametersPtrOutput {
	return i.ToFlowLogFormatParametersPtrOutputWithContext(context.Background())
}

func (i *flowLogFormatParametersPtrType) ToFlowLogFormatParametersPtrOutputWithContext(ctx context.Context) FlowLogFormatParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogFormatParametersPtrOutput)
}

// Parameters that define the flow log format.
type FlowLogFormatParametersOutput struct{ *pulumi.OutputState }

func (FlowLogFormatParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogFormatParameters)(nil)).Elem()
}

func (o FlowLogFormatParametersOutput) ToFlowLogFormatParametersOutput() FlowLogFormatParametersOutput {
	return o
}

func (o FlowLogFormatParametersOutput) ToFlowLogFormatParametersOutputWithContext(ctx context.Context) FlowLogFormatParametersOutput {
	return o
}

func (o FlowLogFormatParametersOutput) ToFlowLogFormatParametersPtrOutput() FlowLogFormatParametersPtrOutput {
	return o.ToFlowLogFormatParametersPtrOutputWithContext(context.Background())
}

func (o FlowLogFormatParametersOutput) ToFlowLogFormatParametersPtrOutputWithContext(ctx context.Context) FlowLogFormatParametersPtrOutput {
	return o.ApplyT(func(v FlowLogFormatParameters) *FlowLogFormatParameters {
		return &v
	}).(FlowLogFormatParametersPtrOutput)
}

// The file type of flow log.
func (o FlowLogFormatParametersOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowLogFormatParameters) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The version (revision) of the flow log.
func (o FlowLogFormatParametersOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FlowLogFormatParameters) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type FlowLogFormatParametersPtrOutput struct{ *pulumi.OutputState }

func (FlowLogFormatParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowLogFormatParameters)(nil)).Elem()
}

func (o FlowLogFormatParametersPtrOutput) ToFlowLogFormatParametersPtrOutput() FlowLogFormatParametersPtrOutput {
	return o
}

func (o FlowLogFormatParametersPtrOutput) ToFlowLogFormatParametersPtrOutputWithContext(ctx context.Context) FlowLogFormatParametersPtrOutput {
	return o
}

func (o FlowLogFormatParametersPtrOutput) Elem() FlowLogFormatParametersOutput {
	return o.ApplyT(func(v *FlowLogFormatParameters) FlowLogFormatParameters { return *v }).(FlowLogFormatParametersOutput)
}

// The file type of flow log.
func (o FlowLogFormatParametersPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowLogFormatParameters) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The version (revision) of the flow log.
func (o FlowLogFormatParametersPtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FlowLogFormatParameters) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

// Parameters that define the flow log format.
type FlowLogFormatParametersResponse struct {
	// The file type of flow log.
	Type *string `pulumi:"type"`
	// The version (revision) of the flow log.
	Version *int `pulumi:"version"`
}

// FlowLogFormatParametersResponseInput is an input type that accepts FlowLogFormatParametersResponseArgs and FlowLogFormatParametersResponseOutput values.
// You can construct a concrete instance of `FlowLogFormatParametersResponseInput` via:
//
//          FlowLogFormatParametersResponseArgs{...}
type FlowLogFormatParametersResponseInput interface {
	pulumi.Input

	ToFlowLogFormatParametersResponseOutput() FlowLogFormatParametersResponseOutput
	ToFlowLogFormatParametersResponseOutputWithContext(context.Context) FlowLogFormatParametersResponseOutput
}

// Parameters that define the flow log format.
type FlowLogFormatParametersResponseArgs struct {
	// The file type of flow log.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The version (revision) of the flow log.
	Version pulumi.IntPtrInput `pulumi:"version"`
}

func (FlowLogFormatParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogFormatParametersResponse)(nil)).Elem()
}

func (i FlowLogFormatParametersResponseArgs) ToFlowLogFormatParametersResponseOutput() FlowLogFormatParametersResponseOutput {
	return i.ToFlowLogFormatParametersResponseOutputWithContext(context.Background())
}

func (i FlowLogFormatParametersResponseArgs) ToFlowLogFormatParametersResponseOutputWithContext(ctx context.Context) FlowLogFormatParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogFormatParametersResponseOutput)
}

func (i FlowLogFormatParametersResponseArgs) ToFlowLogFormatParametersResponsePtrOutput() FlowLogFormatParametersResponsePtrOutput {
	return i.ToFlowLogFormatParametersResponsePtrOutputWithContext(context.Background())
}

func (i FlowLogFormatParametersResponseArgs) ToFlowLogFormatParametersResponsePtrOutputWithContext(ctx context.Context) FlowLogFormatParametersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogFormatParametersResponseOutput).ToFlowLogFormatParametersResponsePtrOutputWithContext(ctx)
}

// FlowLogFormatParametersResponsePtrInput is an input type that accepts FlowLogFormatParametersResponseArgs, FlowLogFormatParametersResponsePtr and FlowLogFormatParametersResponsePtrOutput values.
// You can construct a concrete instance of `FlowLogFormatParametersResponsePtrInput` via:
//
//          FlowLogFormatParametersResponseArgs{...}
//
//  or:
//
//          nil
type FlowLogFormatParametersResponsePtrInput interface {
	pulumi.Input

	ToFlowLogFormatParametersResponsePtrOutput() FlowLogFormatParametersResponsePtrOutput
	ToFlowLogFormatParametersResponsePtrOutputWithContext(context.Context) FlowLogFormatParametersResponsePtrOutput
}

type flowLogFormatParametersResponsePtrType FlowLogFormatParametersResponseArgs

func FlowLogFormatParametersResponsePtr(v *FlowLogFormatParametersResponseArgs) FlowLogFormatParametersResponsePtrInput {
	return (*flowLogFormatParametersResponsePtrType)(v)
}

func (*flowLogFormatParametersResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowLogFormatParametersResponse)(nil)).Elem()
}

func (i *flowLogFormatParametersResponsePtrType) ToFlowLogFormatParametersResponsePtrOutput() FlowLogFormatParametersResponsePtrOutput {
	return i.ToFlowLogFormatParametersResponsePtrOutputWithContext(context.Background())
}

func (i *flowLogFormatParametersResponsePtrType) ToFlowLogFormatParametersResponsePtrOutputWithContext(ctx context.Context) FlowLogFormatParametersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogFormatParametersResponsePtrOutput)
}

// Parameters that define the flow log format.
type FlowLogFormatParametersResponseOutput struct{ *pulumi.OutputState }

func (FlowLogFormatParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogFormatParametersResponse)(nil)).Elem()
}

func (o FlowLogFormatParametersResponseOutput) ToFlowLogFormatParametersResponseOutput() FlowLogFormatParametersResponseOutput {
	return o
}

func (o FlowLogFormatParametersResponseOutput) ToFlowLogFormatParametersResponseOutputWithContext(ctx context.Context) FlowLogFormatParametersResponseOutput {
	return o
}

func (o FlowLogFormatParametersResponseOutput) ToFlowLogFormatParametersResponsePtrOutput() FlowLogFormatParametersResponsePtrOutput {
	return o.ToFlowLogFormatParametersResponsePtrOutputWithContext(context.Background())
}

func (o FlowLogFormatParametersResponseOutput) ToFlowLogFormatParametersResponsePtrOutputWithContext(ctx context.Context) FlowLogFormatParametersResponsePtrOutput {
	return o.ApplyT(func(v FlowLogFormatParametersResponse) *FlowLogFormatParametersResponse {
		return &v
	}).(FlowLogFormatParametersResponsePtrOutput)
}

// The file type of flow log.
func (o FlowLogFormatParametersResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowLogFormatParametersResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The version (revision) of the flow log.
func (o FlowLogFormatParametersResponseOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FlowLogFormatParametersResponse) *int { return v.Version }).(pulumi.IntPtrOutput)
}

type FlowLogFormatParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (FlowLogFormatParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowLogFormatParametersResponse)(nil)).Elem()
}

func (o FlowLogFormatParametersResponsePtrOutput) ToFlowLogFormatParametersResponsePtrOutput() FlowLogFormatParametersResponsePtrOutput {
	return o
}

func (o FlowLogFormatParametersResponsePtrOutput) ToFlowLogFormatParametersResponsePtrOutputWithContext(ctx context.Context) FlowLogFormatParametersResponsePtrOutput {
	return o
}

func (o FlowLogFormatParametersResponsePtrOutput) Elem() FlowLogFormatParametersResponseOutput {
	return o.ApplyT(func(v *FlowLogFormatParametersResponse) FlowLogFormatParametersResponse { return *v }).(FlowLogFormatParametersResponseOutput)
}

// The file type of flow log.
func (o FlowLogFormatParametersResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowLogFormatParametersResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The version (revision) of the flow log.
func (o FlowLogFormatParametersResponsePtrOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FlowLogFormatParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.IntPtrOutput)
}

// A flow log resource.
type FlowLogResponse struct {
	// Flag to enable/disable flow logging.
	Enabled *bool `pulumi:"enabled"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Parameters that define the configuration of traffic analytics.
	FlowAnalyticsConfiguration *TrafficAnalyticsPropertiesResponse `pulumi:"flowAnalyticsConfiguration"`
	// Parameters that define the flow log format.
	Format *FlowLogFormatParametersResponse `pulumi:"format"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the flow log.
	ProvisioningState string `pulumi:"provisioningState"`
	// Parameters that define the retention policy for flow log.
	RetentionPolicy *RetentionPolicyParametersResponse `pulumi:"retentionPolicy"`
	// ID of the storage account which is used to store the flow log.
	StorageId string `pulumi:"storageId"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Guid of network security group to which flow log will be applied.
	TargetResourceGuid string `pulumi:"targetResourceGuid"`
	// ID of network security group to which flow log will be applied.
	TargetResourceId string `pulumi:"targetResourceId"`
	// Resource type.
	Type string `pulumi:"type"`
}

// FlowLogResponseInput is an input type that accepts FlowLogResponseArgs and FlowLogResponseOutput values.
// You can construct a concrete instance of `FlowLogResponseInput` via:
//
//          FlowLogResponseArgs{...}
type FlowLogResponseInput interface {
	pulumi.Input

	ToFlowLogResponseOutput() FlowLogResponseOutput
	ToFlowLogResponseOutputWithContext(context.Context) FlowLogResponseOutput
}

// A flow log resource.
type FlowLogResponseArgs struct {
	// Flag to enable/disable flow logging.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Parameters that define the configuration of traffic analytics.
	FlowAnalyticsConfiguration TrafficAnalyticsPropertiesResponsePtrInput `pulumi:"flowAnalyticsConfiguration"`
	// Parameters that define the flow log format.
	Format FlowLogFormatParametersResponsePtrInput `pulumi:"format"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the flow log.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Parameters that define the retention policy for flow log.
	RetentionPolicy RetentionPolicyParametersResponsePtrInput `pulumi:"retentionPolicy"`
	// ID of the storage account which is used to store the flow log.
	StorageId pulumi.StringInput `pulumi:"storageId"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Guid of network security group to which flow log will be applied.
	TargetResourceGuid pulumi.StringInput `pulumi:"targetResourceGuid"`
	// ID of network security group to which flow log will be applied.
	TargetResourceId pulumi.StringInput `pulumi:"targetResourceId"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (FlowLogResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogResponse)(nil)).Elem()
}

func (i FlowLogResponseArgs) ToFlowLogResponseOutput() FlowLogResponseOutput {
	return i.ToFlowLogResponseOutputWithContext(context.Background())
}

func (i FlowLogResponseArgs) ToFlowLogResponseOutputWithContext(ctx context.Context) FlowLogResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogResponseOutput)
}

// FlowLogResponseArrayInput is an input type that accepts FlowLogResponseArray and FlowLogResponseArrayOutput values.
// You can construct a concrete instance of `FlowLogResponseArrayInput` via:
//
//          FlowLogResponseArray{ FlowLogResponseArgs{...} }
type FlowLogResponseArrayInput interface {
	pulumi.Input

	ToFlowLogResponseArrayOutput() FlowLogResponseArrayOutput
	ToFlowLogResponseArrayOutputWithContext(context.Context) FlowLogResponseArrayOutput
}

type FlowLogResponseArray []FlowLogResponseInput

func (FlowLogResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowLogResponse)(nil)).Elem()
}

func (i FlowLogResponseArray) ToFlowLogResponseArrayOutput() FlowLogResponseArrayOutput {
	return i.ToFlowLogResponseArrayOutputWithContext(context.Background())
}

func (i FlowLogResponseArray) ToFlowLogResponseArrayOutputWithContext(ctx context.Context) FlowLogResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLogResponseArrayOutput)
}

// A flow log resource.
type FlowLogResponseOutput struct{ *pulumi.OutputState }

func (FlowLogResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLogResponse)(nil)).Elem()
}

func (o FlowLogResponseOutput) ToFlowLogResponseOutput() FlowLogResponseOutput {
	return o
}

func (o FlowLogResponseOutput) ToFlowLogResponseOutputWithContext(ctx context.Context) FlowLogResponseOutput {
	return o
}

// Flag to enable/disable flow logging.
func (o FlowLogResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o FlowLogResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Parameters that define the configuration of traffic analytics.
func (o FlowLogResponseOutput) FlowAnalyticsConfiguration() TrafficAnalyticsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *TrafficAnalyticsPropertiesResponse { return v.FlowAnalyticsConfiguration }).(TrafficAnalyticsPropertiesResponsePtrOutput)
}

// Parameters that define the flow log format.
func (o FlowLogResponseOutput) Format() FlowLogFormatParametersResponsePtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *FlowLogFormatParametersResponse { return v.Format }).(FlowLogFormatParametersResponsePtrOutput)
}

// Resource ID.
func (o FlowLogResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o FlowLogResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o FlowLogResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the flow log.
func (o FlowLogResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Parameters that define the retention policy for flow log.
func (o FlowLogResponseOutput) RetentionPolicy() RetentionPolicyParametersResponsePtrOutput {
	return o.ApplyT(func(v FlowLogResponse) *RetentionPolicyParametersResponse { return v.RetentionPolicy }).(RetentionPolicyParametersResponsePtrOutput)
}

// ID of the storage account which is used to store the flow log.
func (o FlowLogResponseOutput) StorageId() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.StorageId }).(pulumi.StringOutput)
}

// Resource tags.
func (o FlowLogResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v FlowLogResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Guid of network security group to which flow log will be applied.
func (o FlowLogResponseOutput) TargetResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.TargetResourceGuid }).(pulumi.StringOutput)
}

// ID of network security group to which flow log will be applied.
func (o FlowLogResponseOutput) TargetResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.TargetResourceId }).(pulumi.StringOutput)
}

// Resource type.
func (o FlowLogResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLogResponse) string { return v.Type }).(pulumi.StringOutput)
}

type FlowLogResponseArrayOutput struct{ *pulumi.OutputState }

func (FlowLogResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowLogResponse)(nil)).Elem()
}

func (o FlowLogResponseArrayOutput) ToFlowLogResponseArrayOutput() FlowLogResponseArrayOutput {
	return o
}

func (o FlowLogResponseArrayOutput) ToFlowLogResponseArrayOutputWithContext(ctx context.Context) FlowLogResponseArrayOutput {
	return o
}

func (o FlowLogResponseArrayOutput) Index(i pulumi.IntInput) FlowLogResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowLogResponse {
		return vs[0].([]FlowLogResponse)[vs[1].(int)]
	}).(FlowLogResponseOutput)
}

// Describes Forwarding Route.
type ForwardingConfiguration struct {
	// A reference to the BackendPool which this rule routes to.
	BackendPool *SubResource `pulumi:"backendPool"`
	// The caching configuration associated with this rule.
	CacheConfiguration *CacheConfiguration `pulumi:"cacheConfiguration"`
	// A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
	CustomForwardingPath *string `pulumi:"customForwardingPath"`
	// Protocol this rule will use when forwarding traffic to backends.
	ForwardingProtocol *string `pulumi:"forwardingProtocol"`
	OdataType          string  `pulumi:"odataType"`
}

// ForwardingConfigurationInput is an input type that accepts ForwardingConfigurationArgs and ForwardingConfigurationOutput values.
// You can construct a concrete instance of `ForwardingConfigurationInput` via:
//
//          ForwardingConfigurationArgs{...}
type ForwardingConfigurationInput interface {
	pulumi.Input

	ToForwardingConfigurationOutput() ForwardingConfigurationOutput
	ToForwardingConfigurationOutputWithContext(context.Context) ForwardingConfigurationOutput
}

// Describes Forwarding Route.
type ForwardingConfigurationArgs struct {
	// A reference to the BackendPool which this rule routes to.
	BackendPool SubResourcePtrInput `pulumi:"backendPool"`
	// The caching configuration associated with this rule.
	CacheConfiguration CacheConfigurationPtrInput `pulumi:"cacheConfiguration"`
	// A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
	CustomForwardingPath pulumi.StringPtrInput `pulumi:"customForwardingPath"`
	// Protocol this rule will use when forwarding traffic to backends.
	ForwardingProtocol pulumi.StringPtrInput `pulumi:"forwardingProtocol"`
	OdataType          pulumi.StringInput    `pulumi:"odataType"`
}

func (ForwardingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingConfiguration)(nil)).Elem()
}

func (i ForwardingConfigurationArgs) ToForwardingConfigurationOutput() ForwardingConfigurationOutput {
	return i.ToForwardingConfigurationOutputWithContext(context.Background())
}

func (i ForwardingConfigurationArgs) ToForwardingConfigurationOutputWithContext(ctx context.Context) ForwardingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingConfigurationOutput)
}

// Describes Forwarding Route.
type ForwardingConfigurationOutput struct{ *pulumi.OutputState }

func (ForwardingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingConfiguration)(nil)).Elem()
}

func (o ForwardingConfigurationOutput) ToForwardingConfigurationOutput() ForwardingConfigurationOutput {
	return o
}

func (o ForwardingConfigurationOutput) ToForwardingConfigurationOutputWithContext(ctx context.Context) ForwardingConfigurationOutput {
	return o
}

// A reference to the BackendPool which this rule routes to.
func (o ForwardingConfigurationOutput) BackendPool() SubResourcePtrOutput {
	return o.ApplyT(func(v ForwardingConfiguration) *SubResource { return v.BackendPool }).(SubResourcePtrOutput)
}

// The caching configuration associated with this rule.
func (o ForwardingConfigurationOutput) CacheConfiguration() CacheConfigurationPtrOutput {
	return o.ApplyT(func(v ForwardingConfiguration) *CacheConfiguration { return v.CacheConfiguration }).(CacheConfigurationPtrOutput)
}

// A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
func (o ForwardingConfigurationOutput) CustomForwardingPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ForwardingConfiguration) *string { return v.CustomForwardingPath }).(pulumi.StringPtrOutput)
}

// Protocol this rule will use when forwarding traffic to backends.
func (o ForwardingConfigurationOutput) ForwardingProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ForwardingConfiguration) *string { return v.ForwardingProtocol }).(pulumi.StringPtrOutput)
}

func (o ForwardingConfigurationOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardingConfiguration) string { return v.OdataType }).(pulumi.StringOutput)
}

// Describes Forwarding Route.
type ForwardingConfigurationResponse struct {
	// A reference to the BackendPool which this rule routes to.
	BackendPool *SubResourceResponse `pulumi:"backendPool"`
	// The caching configuration associated with this rule.
	CacheConfiguration *CacheConfigurationResponse `pulumi:"cacheConfiguration"`
	// A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
	CustomForwardingPath *string `pulumi:"customForwardingPath"`
	// Protocol this rule will use when forwarding traffic to backends.
	ForwardingProtocol *string `pulumi:"forwardingProtocol"`
	OdataType          string  `pulumi:"odataType"`
}

// ForwardingConfigurationResponseInput is an input type that accepts ForwardingConfigurationResponseArgs and ForwardingConfigurationResponseOutput values.
// You can construct a concrete instance of `ForwardingConfigurationResponseInput` via:
//
//          ForwardingConfigurationResponseArgs{...}
type ForwardingConfigurationResponseInput interface {
	pulumi.Input

	ToForwardingConfigurationResponseOutput() ForwardingConfigurationResponseOutput
	ToForwardingConfigurationResponseOutputWithContext(context.Context) ForwardingConfigurationResponseOutput
}

// Describes Forwarding Route.
type ForwardingConfigurationResponseArgs struct {
	// A reference to the BackendPool which this rule routes to.
	BackendPool SubResourceResponsePtrInput `pulumi:"backendPool"`
	// The caching configuration associated with this rule.
	CacheConfiguration CacheConfigurationResponsePtrInput `pulumi:"cacheConfiguration"`
	// A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
	CustomForwardingPath pulumi.StringPtrInput `pulumi:"customForwardingPath"`
	// Protocol this rule will use when forwarding traffic to backends.
	ForwardingProtocol pulumi.StringPtrInput `pulumi:"forwardingProtocol"`
	OdataType          pulumi.StringInput    `pulumi:"odataType"`
}

func (ForwardingConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingConfigurationResponse)(nil)).Elem()
}

func (i ForwardingConfigurationResponseArgs) ToForwardingConfigurationResponseOutput() ForwardingConfigurationResponseOutput {
	return i.ToForwardingConfigurationResponseOutputWithContext(context.Background())
}

func (i ForwardingConfigurationResponseArgs) ToForwardingConfigurationResponseOutputWithContext(ctx context.Context) ForwardingConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ForwardingConfigurationResponseOutput)
}

// Describes Forwarding Route.
type ForwardingConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ForwardingConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ForwardingConfigurationResponse)(nil)).Elem()
}

func (o ForwardingConfigurationResponseOutput) ToForwardingConfigurationResponseOutput() ForwardingConfigurationResponseOutput {
	return o
}

func (o ForwardingConfigurationResponseOutput) ToForwardingConfigurationResponseOutputWithContext(ctx context.Context) ForwardingConfigurationResponseOutput {
	return o
}

// A reference to the BackendPool which this rule routes to.
func (o ForwardingConfigurationResponseOutput) BackendPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ForwardingConfigurationResponse) *SubResourceResponse { return v.BackendPool }).(SubResourceResponsePtrOutput)
}

// The caching configuration associated with this rule.
func (o ForwardingConfigurationResponseOutput) CacheConfiguration() CacheConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ForwardingConfigurationResponse) *CacheConfigurationResponse { return v.CacheConfiguration }).(CacheConfigurationResponsePtrOutput)
}

// A custom path used to rewrite resource paths matched by this rule. Leave empty to use incoming path.
func (o ForwardingConfigurationResponseOutput) CustomForwardingPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ForwardingConfigurationResponse) *string { return v.CustomForwardingPath }).(pulumi.StringPtrOutput)
}

// Protocol this rule will use when forwarding traffic to backends.
func (o ForwardingConfigurationResponseOutput) ForwardingProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ForwardingConfigurationResponse) *string { return v.ForwardingProtocol }).(pulumi.StringPtrOutput)
}

func (o ForwardingConfigurationResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v ForwardingConfigurationResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// A frontend endpoint used for routing.
type FrontendEndpoint struct {
	// The host name of the frontendEndpoint. Must be a domain name.
	HostName *string `pulumi:"hostName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource name.
	Name *string `pulumi:"name"`
	// Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
	SessionAffinityEnabledState *string `pulumi:"sessionAffinityEnabledState"`
	// UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
	SessionAffinityTtlSeconds *int `pulumi:"sessionAffinityTtlSeconds"`
	// Defines the Web Application Firewall policy for each host (if applicable)
	WebApplicationFirewallPolicyLink *FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink `pulumi:"webApplicationFirewallPolicyLink"`
}

// FrontendEndpointInput is an input type that accepts FrontendEndpointArgs and FrontendEndpointOutput values.
// You can construct a concrete instance of `FrontendEndpointInput` via:
//
//          FrontendEndpointArgs{...}
type FrontendEndpointInput interface {
	pulumi.Input

	ToFrontendEndpointOutput() FrontendEndpointOutput
	ToFrontendEndpointOutputWithContext(context.Context) FrontendEndpointOutput
}

// A frontend endpoint used for routing.
type FrontendEndpointArgs struct {
	// The host name of the frontendEndpoint. Must be a domain name.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
	SessionAffinityEnabledState pulumi.StringPtrInput `pulumi:"sessionAffinityEnabledState"`
	// UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
	SessionAffinityTtlSeconds pulumi.IntPtrInput `pulumi:"sessionAffinityTtlSeconds"`
	// Defines the Web Application Firewall policy for each host (if applicable)
	WebApplicationFirewallPolicyLink FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrInput `pulumi:"webApplicationFirewallPolicyLink"`
}

func (FrontendEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendEndpoint)(nil)).Elem()
}

func (i FrontendEndpointArgs) ToFrontendEndpointOutput() FrontendEndpointOutput {
	return i.ToFrontendEndpointOutputWithContext(context.Background())
}

func (i FrontendEndpointArgs) ToFrontendEndpointOutputWithContext(ctx context.Context) FrontendEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendEndpointOutput)
}

// FrontendEndpointArrayInput is an input type that accepts FrontendEndpointArray and FrontendEndpointArrayOutput values.
// You can construct a concrete instance of `FrontendEndpointArrayInput` via:
//
//          FrontendEndpointArray{ FrontendEndpointArgs{...} }
type FrontendEndpointArrayInput interface {
	pulumi.Input

	ToFrontendEndpointArrayOutput() FrontendEndpointArrayOutput
	ToFrontendEndpointArrayOutputWithContext(context.Context) FrontendEndpointArrayOutput
}

type FrontendEndpointArray []FrontendEndpointInput

func (FrontendEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendEndpoint)(nil)).Elem()
}

func (i FrontendEndpointArray) ToFrontendEndpointArrayOutput() FrontendEndpointArrayOutput {
	return i.ToFrontendEndpointArrayOutputWithContext(context.Background())
}

func (i FrontendEndpointArray) ToFrontendEndpointArrayOutputWithContext(ctx context.Context) FrontendEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendEndpointArrayOutput)
}

// A frontend endpoint used for routing.
type FrontendEndpointOutput struct{ *pulumi.OutputState }

func (FrontendEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendEndpoint)(nil)).Elem()
}

func (o FrontendEndpointOutput) ToFrontendEndpointOutput() FrontendEndpointOutput {
	return o
}

func (o FrontendEndpointOutput) ToFrontendEndpointOutputWithContext(ctx context.Context) FrontendEndpointOutput {
	return o
}

// The host name of the frontendEndpoint. Must be a domain name.
func (o FrontendEndpointOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpoint) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o FrontendEndpointOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpoint) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o FrontendEndpointOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpoint) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
func (o FrontendEndpointOutput) SessionAffinityEnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpoint) *string { return v.SessionAffinityEnabledState }).(pulumi.StringPtrOutput)
}

// UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
func (o FrontendEndpointOutput) SessionAffinityTtlSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FrontendEndpoint) *int { return v.SessionAffinityTtlSeconds }).(pulumi.IntPtrOutput)
}

// Defines the Web Application Firewall policy for each host (if applicable)
func (o FrontendEndpointOutput) WebApplicationFirewallPolicyLink() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ApplyT(func(v FrontendEndpoint) *FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink {
		return v.WebApplicationFirewallPolicyLink
	}).(FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput)
}

type FrontendEndpointArrayOutput struct{ *pulumi.OutputState }

func (FrontendEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendEndpoint)(nil)).Elem()
}

func (o FrontendEndpointArrayOutput) ToFrontendEndpointArrayOutput() FrontendEndpointArrayOutput {
	return o
}

func (o FrontendEndpointArrayOutput) ToFrontendEndpointArrayOutputWithContext(ctx context.Context) FrontendEndpointArrayOutput {
	return o
}

func (o FrontendEndpointArrayOutput) Index(i pulumi.IntInput) FrontendEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontendEndpoint {
		return vs[0].([]FrontendEndpoint)[vs[1].(int)]
	}).(FrontendEndpointOutput)
}

// Defines the Resource ID for a Frontend Endpoint.
type FrontendEndpointLinkResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// FrontendEndpointLinkResponseInput is an input type that accepts FrontendEndpointLinkResponseArgs and FrontendEndpointLinkResponseOutput values.
// You can construct a concrete instance of `FrontendEndpointLinkResponseInput` via:
//
//          FrontendEndpointLinkResponseArgs{...}
type FrontendEndpointLinkResponseInput interface {
	pulumi.Input

	ToFrontendEndpointLinkResponseOutput() FrontendEndpointLinkResponseOutput
	ToFrontendEndpointLinkResponseOutputWithContext(context.Context) FrontendEndpointLinkResponseOutput
}

// Defines the Resource ID for a Frontend Endpoint.
type FrontendEndpointLinkResponseArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (FrontendEndpointLinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendEndpointLinkResponse)(nil)).Elem()
}

func (i FrontendEndpointLinkResponseArgs) ToFrontendEndpointLinkResponseOutput() FrontendEndpointLinkResponseOutput {
	return i.ToFrontendEndpointLinkResponseOutputWithContext(context.Background())
}

func (i FrontendEndpointLinkResponseArgs) ToFrontendEndpointLinkResponseOutputWithContext(ctx context.Context) FrontendEndpointLinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendEndpointLinkResponseOutput)
}

// FrontendEndpointLinkResponseArrayInput is an input type that accepts FrontendEndpointLinkResponseArray and FrontendEndpointLinkResponseArrayOutput values.
// You can construct a concrete instance of `FrontendEndpointLinkResponseArrayInput` via:
//
//          FrontendEndpointLinkResponseArray{ FrontendEndpointLinkResponseArgs{...} }
type FrontendEndpointLinkResponseArrayInput interface {
	pulumi.Input

	ToFrontendEndpointLinkResponseArrayOutput() FrontendEndpointLinkResponseArrayOutput
	ToFrontendEndpointLinkResponseArrayOutputWithContext(context.Context) FrontendEndpointLinkResponseArrayOutput
}

type FrontendEndpointLinkResponseArray []FrontendEndpointLinkResponseInput

func (FrontendEndpointLinkResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendEndpointLinkResponse)(nil)).Elem()
}

func (i FrontendEndpointLinkResponseArray) ToFrontendEndpointLinkResponseArrayOutput() FrontendEndpointLinkResponseArrayOutput {
	return i.ToFrontendEndpointLinkResponseArrayOutputWithContext(context.Background())
}

func (i FrontendEndpointLinkResponseArray) ToFrontendEndpointLinkResponseArrayOutputWithContext(ctx context.Context) FrontendEndpointLinkResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendEndpointLinkResponseArrayOutput)
}

// Defines the Resource ID for a Frontend Endpoint.
type FrontendEndpointLinkResponseOutput struct{ *pulumi.OutputState }

func (FrontendEndpointLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendEndpointLinkResponse)(nil)).Elem()
}

func (o FrontendEndpointLinkResponseOutput) ToFrontendEndpointLinkResponseOutput() FrontendEndpointLinkResponseOutput {
	return o
}

func (o FrontendEndpointLinkResponseOutput) ToFrontendEndpointLinkResponseOutputWithContext(ctx context.Context) FrontendEndpointLinkResponseOutput {
	return o
}

// Resource ID.
func (o FrontendEndpointLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpointLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type FrontendEndpointLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (FrontendEndpointLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendEndpointLinkResponse)(nil)).Elem()
}

func (o FrontendEndpointLinkResponseArrayOutput) ToFrontendEndpointLinkResponseArrayOutput() FrontendEndpointLinkResponseArrayOutput {
	return o
}

func (o FrontendEndpointLinkResponseArrayOutput) ToFrontendEndpointLinkResponseArrayOutputWithContext(ctx context.Context) FrontendEndpointLinkResponseArrayOutput {
	return o
}

func (o FrontendEndpointLinkResponseArrayOutput) Index(i pulumi.IntInput) FrontendEndpointLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontendEndpointLinkResponse {
		return vs[0].([]FrontendEndpointLinkResponse)[vs[1].(int)]
	}).(FrontendEndpointLinkResponseOutput)
}

// A frontend endpoint used for routing.
type FrontendEndpointResponse struct {
	// The configuration specifying how to enable HTTPS
	CustomHttpsConfiguration CustomHttpsConfigurationResponse `pulumi:"customHttpsConfiguration"`
	// Provisioning status of Custom Https of the frontendEndpoint.
	CustomHttpsProvisioningState string `pulumi:"customHttpsProvisioningState"`
	// Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
	CustomHttpsProvisioningSubstate string `pulumi:"customHttpsProvisioningSubstate"`
	// The host name of the frontendEndpoint. Must be a domain name.
	HostName *string `pulumi:"hostName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource name.
	Name *string `pulumi:"name"`
	// Resource status.
	ResourceState string `pulumi:"resourceState"`
	// Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
	SessionAffinityEnabledState *string `pulumi:"sessionAffinityEnabledState"`
	// UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
	SessionAffinityTtlSeconds *int `pulumi:"sessionAffinityTtlSeconds"`
	// Resource type.
	Type string `pulumi:"type"`
	// Defines the Web Application Firewall policy for each host (if applicable)
	WebApplicationFirewallPolicyLink *FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink `pulumi:"webApplicationFirewallPolicyLink"`
}

// FrontendEndpointResponseInput is an input type that accepts FrontendEndpointResponseArgs and FrontendEndpointResponseOutput values.
// You can construct a concrete instance of `FrontendEndpointResponseInput` via:
//
//          FrontendEndpointResponseArgs{...}
type FrontendEndpointResponseInput interface {
	pulumi.Input

	ToFrontendEndpointResponseOutput() FrontendEndpointResponseOutput
	ToFrontendEndpointResponseOutputWithContext(context.Context) FrontendEndpointResponseOutput
}

// A frontend endpoint used for routing.
type FrontendEndpointResponseArgs struct {
	// The configuration specifying how to enable HTTPS
	CustomHttpsConfiguration CustomHttpsConfigurationResponseInput `pulumi:"customHttpsConfiguration"`
	// Provisioning status of Custom Https of the frontendEndpoint.
	CustomHttpsProvisioningState pulumi.StringInput `pulumi:"customHttpsProvisioningState"`
	// Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
	CustomHttpsProvisioningSubstate pulumi.StringInput `pulumi:"customHttpsProvisioningSubstate"`
	// The host name of the frontendEndpoint. Must be a domain name.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Resource status.
	ResourceState pulumi.StringInput `pulumi:"resourceState"`
	// Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
	SessionAffinityEnabledState pulumi.StringPtrInput `pulumi:"sessionAffinityEnabledState"`
	// UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
	SessionAffinityTtlSeconds pulumi.IntPtrInput `pulumi:"sessionAffinityTtlSeconds"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// Defines the Web Application Firewall policy for each host (if applicable)
	WebApplicationFirewallPolicyLink FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrInput `pulumi:"webApplicationFirewallPolicyLink"`
}

func (FrontendEndpointResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendEndpointResponse)(nil)).Elem()
}

func (i FrontendEndpointResponseArgs) ToFrontendEndpointResponseOutput() FrontendEndpointResponseOutput {
	return i.ToFrontendEndpointResponseOutputWithContext(context.Background())
}

func (i FrontendEndpointResponseArgs) ToFrontendEndpointResponseOutputWithContext(ctx context.Context) FrontendEndpointResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendEndpointResponseOutput)
}

// FrontendEndpointResponseArrayInput is an input type that accepts FrontendEndpointResponseArray and FrontendEndpointResponseArrayOutput values.
// You can construct a concrete instance of `FrontendEndpointResponseArrayInput` via:
//
//          FrontendEndpointResponseArray{ FrontendEndpointResponseArgs{...} }
type FrontendEndpointResponseArrayInput interface {
	pulumi.Input

	ToFrontendEndpointResponseArrayOutput() FrontendEndpointResponseArrayOutput
	ToFrontendEndpointResponseArrayOutputWithContext(context.Context) FrontendEndpointResponseArrayOutput
}

type FrontendEndpointResponseArray []FrontendEndpointResponseInput

func (FrontendEndpointResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendEndpointResponse)(nil)).Elem()
}

func (i FrontendEndpointResponseArray) ToFrontendEndpointResponseArrayOutput() FrontendEndpointResponseArrayOutput {
	return i.ToFrontendEndpointResponseArrayOutputWithContext(context.Background())
}

func (i FrontendEndpointResponseArray) ToFrontendEndpointResponseArrayOutputWithContext(ctx context.Context) FrontendEndpointResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendEndpointResponseArrayOutput)
}

// A frontend endpoint used for routing.
type FrontendEndpointResponseOutput struct{ *pulumi.OutputState }

func (FrontendEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendEndpointResponse)(nil)).Elem()
}

func (o FrontendEndpointResponseOutput) ToFrontendEndpointResponseOutput() FrontendEndpointResponseOutput {
	return o
}

func (o FrontendEndpointResponseOutput) ToFrontendEndpointResponseOutputWithContext(ctx context.Context) FrontendEndpointResponseOutput {
	return o
}

// The configuration specifying how to enable HTTPS
func (o FrontendEndpointResponseOutput) CustomHttpsConfiguration() CustomHttpsConfigurationResponseOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) CustomHttpsConfigurationResponse { return v.CustomHttpsConfiguration }).(CustomHttpsConfigurationResponseOutput)
}

// Provisioning status of Custom Https of the frontendEndpoint.
func (o FrontendEndpointResponseOutput) CustomHttpsProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) string { return v.CustomHttpsProvisioningState }).(pulumi.StringOutput)
}

// Provisioning substate shows the progress of custom HTTPS enabling/disabling process step by step.
func (o FrontendEndpointResponseOutput) CustomHttpsProvisioningSubstate() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) string { return v.CustomHttpsProvisioningSubstate }).(pulumi.StringOutput)
}

// The host name of the frontendEndpoint. Must be a domain name.
func (o FrontendEndpointResponseOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o FrontendEndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o FrontendEndpointResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource status.
func (o FrontendEndpointResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

// Whether to allow session affinity on this host. Valid options are 'Enabled' or 'Disabled'
func (o FrontendEndpointResponseOutput) SessionAffinityEnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) *string { return v.SessionAffinityEnabledState }).(pulumi.StringPtrOutput)
}

// UNUSED. This field will be ignored. The TTL to use in seconds for session affinity, if applicable.
func (o FrontendEndpointResponseOutput) SessionAffinityTtlSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) *int { return v.SessionAffinityTtlSeconds }).(pulumi.IntPtrOutput)
}

// Resource type.
func (o FrontendEndpointResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Defines the Web Application Firewall policy for each host (if applicable)
func (o FrontendEndpointResponseOutput) WebApplicationFirewallPolicyLink() FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ApplyT(func(v FrontendEndpointResponse) *FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink {
		return v.WebApplicationFirewallPolicyLink
	}).(FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput)
}

type FrontendEndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (FrontendEndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendEndpointResponse)(nil)).Elem()
}

func (o FrontendEndpointResponseArrayOutput) ToFrontendEndpointResponseArrayOutput() FrontendEndpointResponseArrayOutput {
	return o
}

func (o FrontendEndpointResponseArrayOutput) ToFrontendEndpointResponseArrayOutputWithContext(ctx context.Context) FrontendEndpointResponseArrayOutput {
	return o
}

func (o FrontendEndpointResponseArrayOutput) Index(i pulumi.IntInput) FrontendEndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontendEndpointResponse {
		return vs[0].([]FrontendEndpointResponse)[vs[1].(int)]
	}).(FrontendEndpointResponseOutput)
}

// Defines the Web Application Firewall policy for each host (if applicable)
type FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkInput is an input type that accepts FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs and FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput values.
// You can construct a concrete instance of `FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkInput` via:
//
//          FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs{...}
type FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkInput interface {
	pulumi.Input

	ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput() FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput
	ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutputWithContext(context.Context) FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput
}

// Defines the Web Application Firewall policy for each host (if applicable)
type FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs) ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput() FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return i.ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutputWithContext(context.Background())
}

func (i FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs) ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput)
}

func (i FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs) ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs) ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput).ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx)
}

// FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrInput is an input type that accepts FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs, FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtr and FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput values.
// You can construct a concrete instance of `FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrInput` via:
//
//          FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs{...}
//
//  or:
//
//          nil
type FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrInput interface {
	pulumi.Input

	ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput
	ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Context) FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput
}

type frontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrType FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs

func FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtr(v *FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs) FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrInput {
	return (*frontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrType)(v)
}

func (*frontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i *frontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrType) ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i *frontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrType) ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput)
}

// Defines the Web Application Firewall policy for each host (if applicable)
type FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput struct{ *pulumi.OutputState }

func (FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput() FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (o FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ApplyT(func(v FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink) *FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink {
		return &v
	}).(FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput)
}

// Resource ID.
func (o FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput struct{ *pulumi.OutputState }

func (FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ToFrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) Elem() FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o.ApplyT(func(v *FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink) FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink {
		return *v
	}).(FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput)
}

// Resource ID.
func (o FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLink) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Defines the Web Application Firewall policy for each host (if applicable)
type FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkInput is an input type that accepts FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs and FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput values.
// You can construct a concrete instance of `FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkInput` via:
//
//          FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs{...}
type FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkInput interface {
	pulumi.Input

	ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput
	ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(context.Context) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput
}

// Defines the Web Application Firewall policy for each host (if applicable)
type FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return i.ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(context.Background())
}

func (i FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput)
}

func (i FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput).ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx)
}

// FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrInput is an input type that accepts FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs, FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtr and FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput values.
// You can construct a concrete instance of `FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrInput` via:
//
//          FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs{...}
//
//  or:
//
//          nil
type FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrInput interface {
	pulumi.Input

	ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput
	ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Context) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput
}

type frontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrType FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs

func FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtr(v *FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkArgs) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrInput {
	return (*frontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrType)(v)
}

func (*frontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i *frontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i *frontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput)
}

// Defines the Web Application Firewall policy for each host (if applicable)
type FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput struct{ *pulumi.OutputState }

func (FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (o FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ApplyT(func(v FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink) *FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink {
		return &v
	}).(FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput)
}

// Resource ID.
func (o FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput struct{ *pulumi.OutputState }

func (FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ToFrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) Elem() FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o.ApplyT(func(v *FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink) FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink {
		return *v
	}).(FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput)
}

// Resource ID.
func (o FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLink) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The Private IP allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The reference to the Public IP resource.
	PublicIPAddress *PublicIPAddressType `pulumi:"publicIPAddress"`
	// The reference to the Public IP Prefix resource.
	PublicIPPrefix *SubResource `pulumi:"publicIPPrefix"`
	// The reference to the subnet resource.
	Subnet *SubnetType `pulumi:"subnet"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// FrontendIPConfigurationInput is an input type that accepts FrontendIPConfigurationArgs and FrontendIPConfigurationOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationInput` via:
//
//          FrontendIPConfigurationArgs{...}
type FrontendIPConfigurationInput interface {
	pulumi.Input

	ToFrontendIPConfigurationOutput() FrontendIPConfigurationOutput
	ToFrontendIPConfigurationOutputWithContext(context.Context) FrontendIPConfigurationOutput
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
	PrivateIPAddressVersion pulumi.StringPtrInput `pulumi:"privateIPAddressVersion"`
	// The Private IP allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The reference to the Public IP resource.
	PublicIPAddress PublicIPAddressTypePtrInput `pulumi:"publicIPAddress"`
	// The reference to the Public IP Prefix resource.
	PublicIPPrefix SubResourcePtrInput `pulumi:"publicIPPrefix"`
	// The reference to the subnet resource.
	Subnet SubnetTypePtrInput `pulumi:"subnet"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (FrontendIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfiguration)(nil)).Elem()
}

func (i FrontendIPConfigurationArgs) ToFrontendIPConfigurationOutput() FrontendIPConfigurationOutput {
	return i.ToFrontendIPConfigurationOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationArgs) ToFrontendIPConfigurationOutputWithContext(ctx context.Context) FrontendIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationOutput)
}

func (i FrontendIPConfigurationArgs) ToFrontendIPConfigurationPtrOutput() FrontendIPConfigurationPtrOutput {
	return i.ToFrontendIPConfigurationPtrOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationArgs) ToFrontendIPConfigurationPtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationOutput).ToFrontendIPConfigurationPtrOutputWithContext(ctx)
}

// FrontendIPConfigurationPtrInput is an input type that accepts FrontendIPConfigurationArgs, FrontendIPConfigurationPtr and FrontendIPConfigurationPtrOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationPtrInput` via:
//
//          FrontendIPConfigurationArgs{...}
//
//  or:
//
//          nil
type FrontendIPConfigurationPtrInput interface {
	pulumi.Input

	ToFrontendIPConfigurationPtrOutput() FrontendIPConfigurationPtrOutput
	ToFrontendIPConfigurationPtrOutputWithContext(context.Context) FrontendIPConfigurationPtrOutput
}

type frontendIPConfigurationPtrType FrontendIPConfigurationArgs

func FrontendIPConfigurationPtr(v *FrontendIPConfigurationArgs) FrontendIPConfigurationPtrInput {
	return (*frontendIPConfigurationPtrType)(v)
}

func (*frontendIPConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendIPConfiguration)(nil)).Elem()
}

func (i *frontendIPConfigurationPtrType) ToFrontendIPConfigurationPtrOutput() FrontendIPConfigurationPtrOutput {
	return i.ToFrontendIPConfigurationPtrOutputWithContext(context.Background())
}

func (i *frontendIPConfigurationPtrType) ToFrontendIPConfigurationPtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationPtrOutput)
}

// FrontendIPConfigurationArrayInput is an input type that accepts FrontendIPConfigurationArray and FrontendIPConfigurationArrayOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationArrayInput` via:
//
//          FrontendIPConfigurationArray{ FrontendIPConfigurationArgs{...} }
type FrontendIPConfigurationArrayInput interface {
	pulumi.Input

	ToFrontendIPConfigurationArrayOutput() FrontendIPConfigurationArrayOutput
	ToFrontendIPConfigurationArrayOutputWithContext(context.Context) FrontendIPConfigurationArrayOutput
}

type FrontendIPConfigurationArray []FrontendIPConfigurationInput

func (FrontendIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfiguration)(nil)).Elem()
}

func (i FrontendIPConfigurationArray) ToFrontendIPConfigurationArrayOutput() FrontendIPConfigurationArrayOutput {
	return i.ToFrontendIPConfigurationArrayOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationArray) ToFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationArrayOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfiguration)(nil)).Elem()
}

func (o FrontendIPConfigurationOutput) ToFrontendIPConfigurationOutput() FrontendIPConfigurationOutput {
	return o
}

func (o FrontendIPConfigurationOutput) ToFrontendIPConfigurationOutputWithContext(ctx context.Context) FrontendIPConfigurationOutput {
	return o
}

func (o FrontendIPConfigurationOutput) ToFrontendIPConfigurationPtrOutput() FrontendIPConfigurationPtrOutput {
	return o.ToFrontendIPConfigurationPtrOutputWithContext(context.Background())
}

func (o FrontendIPConfigurationOutput) ToFrontendIPConfigurationPtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *FrontendIPConfiguration {
		return &v
	}).(FrontendIPConfigurationPtrOutput)
}

// Resource ID.
func (o FrontendIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
func (o FrontendIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
func (o FrontendIPConfigurationOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The Private IP allocation method.
func (o FrontendIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The reference to the Public IP resource.
func (o FrontendIPConfigurationOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *PublicIPAddressType { return v.PublicIPAddress }).(PublicIPAddressTypePtrOutput)
}

// The reference to the Public IP Prefix resource.
func (o FrontendIPConfigurationOutput) PublicIPPrefix() SubResourcePtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *SubResource { return v.PublicIPPrefix }).(SubResourcePtrOutput)
}

// The reference to the subnet resource.
func (o FrontendIPConfigurationOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *SubnetType { return v.Subnet }).(SubnetTypePtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o FrontendIPConfigurationOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type FrontendIPConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendIPConfiguration)(nil)).Elem()
}

func (o FrontendIPConfigurationPtrOutput) ToFrontendIPConfigurationPtrOutput() FrontendIPConfigurationPtrOutput {
	return o
}

func (o FrontendIPConfigurationPtrOutput) ToFrontendIPConfigurationPtrOutputWithContext(ctx context.Context) FrontendIPConfigurationPtrOutput {
	return o
}

func (o FrontendIPConfigurationPtrOutput) Elem() FrontendIPConfigurationOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) FrontendIPConfiguration { return *v }).(FrontendIPConfigurationOutput)
}

// Resource ID.
func (o FrontendIPConfigurationPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
func (o FrontendIPConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationPtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
func (o FrontendIPConfigurationPtrOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The Private IP allocation method.
func (o FrontendIPConfigurationPtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The reference to the Public IP resource.
func (o FrontendIPConfigurationPtrOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *PublicIPAddressType {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressTypePtrOutput)
}

// The reference to the Public IP Prefix resource.
func (o FrontendIPConfigurationPtrOutput) PublicIPPrefix() SubResourcePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *SubResource {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefix
	}).(SubResourcePtrOutput)
}

// The reference to the subnet resource.
func (o FrontendIPConfigurationPtrOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) *SubnetType {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetTypePtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o FrontendIPConfigurationPtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

type FrontendIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfiguration)(nil)).Elem()
}

func (o FrontendIPConfigurationArrayOutput) ToFrontendIPConfigurationArrayOutput() FrontendIPConfigurationArrayOutput {
	return o
}

func (o FrontendIPConfigurationArrayOutput) ToFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationArrayOutput {
	return o
}

func (o FrontendIPConfigurationArrayOutput) Index(i pulumi.IntInput) FrontendIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontendIPConfiguration {
		return vs[0].([]FrontendIPConfiguration)[vs[1].(int)]
	}).(FrontendIPConfigurationOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of references to inbound pools that use this frontend IP.
	InboundNatPools []SubResourceResponse `pulumi:"inboundNatPools"`
	// An array of references to inbound rules that use this frontend IP.
	InboundNatRules []SubResourceResponse `pulumi:"inboundNatRules"`
	// An array of references to load balancing rules that use this frontend IP.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// An array of references to outbound rules that use this frontend IP.
	OutboundRules []SubResourceResponse `pulumi:"outboundRules"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The Private IP allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the frontend IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the Public IP resource.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// The reference to the Public IP Prefix resource.
	PublicIPPrefix *SubResourceResponse `pulumi:"publicIPPrefix"`
	// The reference to the subnet resource.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// Type of the resource.
	Type string `pulumi:"type"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// FrontendIPConfigurationResponseInput is an input type that accepts FrontendIPConfigurationResponseArgs and FrontendIPConfigurationResponseOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationResponseInput` via:
//
//          FrontendIPConfigurationResponseArgs{...}
type FrontendIPConfigurationResponseInput interface {
	pulumi.Input

	ToFrontendIPConfigurationResponseOutput() FrontendIPConfigurationResponseOutput
	ToFrontendIPConfigurationResponseOutputWithContext(context.Context) FrontendIPConfigurationResponseOutput
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// An array of references to inbound pools that use this frontend IP.
	InboundNatPools SubResourceResponseArrayInput `pulumi:"inboundNatPools"`
	// An array of references to inbound rules that use this frontend IP.
	InboundNatRules SubResourceResponseArrayInput `pulumi:"inboundNatRules"`
	// An array of references to load balancing rules that use this frontend IP.
	LoadBalancingRules SubResourceResponseArrayInput `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// An array of references to outbound rules that use this frontend IP.
	OutboundRules SubResourceResponseArrayInput `pulumi:"outboundRules"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
	PrivateIPAddressVersion pulumi.StringPtrInput `pulumi:"privateIPAddressVersion"`
	// The Private IP allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the frontend IP configuration resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The reference to the Public IP resource.
	PublicIPAddress PublicIPAddressResponsePtrInput `pulumi:"publicIPAddress"`
	// The reference to the Public IP Prefix resource.
	PublicIPPrefix SubResourceResponsePtrInput `pulumi:"publicIPPrefix"`
	// The reference to the subnet resource.
	Subnet SubnetResponsePtrInput `pulumi:"subnet"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (FrontendIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfigurationResponse)(nil)).Elem()
}

func (i FrontendIPConfigurationResponseArgs) ToFrontendIPConfigurationResponseOutput() FrontendIPConfigurationResponseOutput {
	return i.ToFrontendIPConfigurationResponseOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationResponseArgs) ToFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationResponseOutput)
}

func (i FrontendIPConfigurationResponseArgs) ToFrontendIPConfigurationResponsePtrOutput() FrontendIPConfigurationResponsePtrOutput {
	return i.ToFrontendIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationResponseArgs) ToFrontendIPConfigurationResponsePtrOutputWithContext(ctx context.Context) FrontendIPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationResponseOutput).ToFrontendIPConfigurationResponsePtrOutputWithContext(ctx)
}

// FrontendIPConfigurationResponsePtrInput is an input type that accepts FrontendIPConfigurationResponseArgs, FrontendIPConfigurationResponsePtr and FrontendIPConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationResponsePtrInput` via:
//
//          FrontendIPConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type FrontendIPConfigurationResponsePtrInput interface {
	pulumi.Input

	ToFrontendIPConfigurationResponsePtrOutput() FrontendIPConfigurationResponsePtrOutput
	ToFrontendIPConfigurationResponsePtrOutputWithContext(context.Context) FrontendIPConfigurationResponsePtrOutput
}

type frontendIPConfigurationResponsePtrType FrontendIPConfigurationResponseArgs

func FrontendIPConfigurationResponsePtr(v *FrontendIPConfigurationResponseArgs) FrontendIPConfigurationResponsePtrInput {
	return (*frontendIPConfigurationResponsePtrType)(v)
}

func (*frontendIPConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendIPConfigurationResponse)(nil)).Elem()
}

func (i *frontendIPConfigurationResponsePtrType) ToFrontendIPConfigurationResponsePtrOutput() FrontendIPConfigurationResponsePtrOutput {
	return i.ToFrontendIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *frontendIPConfigurationResponsePtrType) ToFrontendIPConfigurationResponsePtrOutputWithContext(ctx context.Context) FrontendIPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationResponsePtrOutput)
}

// FrontendIPConfigurationResponseArrayInput is an input type that accepts FrontendIPConfigurationResponseArray and FrontendIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationResponseArrayInput` via:
//
//          FrontendIPConfigurationResponseArray{ FrontendIPConfigurationResponseArgs{...} }
type FrontendIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToFrontendIPConfigurationResponseArrayOutput() FrontendIPConfigurationResponseArrayOutput
	ToFrontendIPConfigurationResponseArrayOutputWithContext(context.Context) FrontendIPConfigurationResponseArrayOutput
}

type FrontendIPConfigurationResponseArray []FrontendIPConfigurationResponseInput

func (FrontendIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfigurationResponse)(nil)).Elem()
}

func (i FrontendIPConfigurationResponseArray) ToFrontendIPConfigurationResponseArrayOutput() FrontendIPConfigurationResponseArrayOutput {
	return i.ToFrontendIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationResponseArray) ToFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationResponseArrayOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfigurationResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationResponseOutput) ToFrontendIPConfigurationResponseOutput() FrontendIPConfigurationResponseOutput {
	return o
}

func (o FrontendIPConfigurationResponseOutput) ToFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseOutput {
	return o
}

func (o FrontendIPConfigurationResponseOutput) ToFrontendIPConfigurationResponsePtrOutput() FrontendIPConfigurationResponsePtrOutput {
	return o.ToFrontendIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o FrontendIPConfigurationResponseOutput) ToFrontendIPConfigurationResponsePtrOutputWithContext(ctx context.Context) FrontendIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *FrontendIPConfigurationResponse {
		return &v
	}).(FrontendIPConfigurationResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o FrontendIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o FrontendIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of references to inbound pools that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) InboundNatPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.InboundNatPools }).(SubResourceResponseArrayOutput)
}

// An array of references to inbound rules that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) InboundNatRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.InboundNatRules }).(SubResourceResponseArrayOutput)
}

// An array of references to load balancing rules that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.LoadBalancingRules }).(SubResourceResponseArrayOutput)
}

// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
func (o FrontendIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// An array of references to outbound rules that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) OutboundRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.OutboundRules }).(SubResourceResponseArrayOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
func (o FrontendIPConfigurationResponseOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The Private IP allocation method.
func (o FrontendIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the frontend IP configuration resource.
func (o FrontendIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the Public IP resource.
func (o FrontendIPConfigurationResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *PublicIPAddressResponse { return v.PublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// The reference to the Public IP Prefix resource.
func (o FrontendIPConfigurationResponseOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *SubResourceResponse { return v.PublicIPPrefix }).(SubResourceResponsePtrOutput)
}

// The reference to the subnet resource.
func (o FrontendIPConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// Type of the resource.
func (o FrontendIPConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o FrontendIPConfigurationResponseOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type FrontendIPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrontendIPConfigurationResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationResponsePtrOutput) ToFrontendIPConfigurationResponsePtrOutput() FrontendIPConfigurationResponsePtrOutput {
	return o
}

func (o FrontendIPConfigurationResponsePtrOutput) ToFrontendIPConfigurationResponsePtrOutputWithContext(ctx context.Context) FrontendIPConfigurationResponsePtrOutput {
	return o
}

func (o FrontendIPConfigurationResponsePtrOutput) Elem() FrontendIPConfigurationResponseOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) FrontendIPConfigurationResponse { return *v }).(FrontendIPConfigurationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o FrontendIPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o FrontendIPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// An array of references to inbound pools that use this frontend IP.
func (o FrontendIPConfigurationResponsePtrOutput) InboundNatPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.InboundNatPools
	}).(SubResourceResponseArrayOutput)
}

// An array of references to inbound rules that use this frontend IP.
func (o FrontendIPConfigurationResponsePtrOutput) InboundNatRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.InboundNatRules
	}).(SubResourceResponseArrayOutput)
}

// An array of references to load balancing rules that use this frontend IP.
func (o FrontendIPConfigurationResponsePtrOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancingRules
	}).(SubResourceResponseArrayOutput)
}

// The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
func (o FrontendIPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// An array of references to outbound rules that use this frontend IP.
func (o FrontendIPConfigurationResponsePtrOutput) OutboundRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.OutboundRules
	}).(SubResourceResponseArrayOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.
func (o FrontendIPConfigurationResponsePtrOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The Private IP allocation method.
func (o FrontendIPConfigurationResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the frontend IP configuration resource.
func (o FrontendIPConfigurationResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference to the Public IP resource.
func (o FrontendIPConfigurationResponsePtrOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// The reference to the Public IP Prefix resource.
func (o FrontendIPConfigurationResponsePtrOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefix
	}).(SubResourceResponsePtrOutput)
}

// The reference to the subnet resource.
func (o FrontendIPConfigurationResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

// Type of the resource.
func (o FrontendIPConfigurationResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o FrontendIPConfigurationResponsePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FrontendIPConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

type FrontendIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfigurationResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationResponseArrayOutput) ToFrontendIPConfigurationResponseArrayOutput() FrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o FrontendIPConfigurationResponseArrayOutput) ToFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o FrontendIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) FrontendIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontendIPConfigurationResponse {
		return vs[0].([]FrontendIPConfigurationResponse)[vs[1].(int)]
	}).(FrontendIPConfigurationResponseOutput)
}

// Gateway routing details.
type GatewayRouteResponse struct {
	// The route's AS path sequence.
	AsPath string `pulumi:"asPath"`
	// The gateway's local address.
	LocalAddress string `pulumi:"localAddress"`
	// The route's network prefix.
	Network string `pulumi:"network"`
	// The route's next hop.
	NextHop string `pulumi:"nextHop"`
	// The source this route was learned from.
	Origin string `pulumi:"origin"`
	// The peer this route was learned from.
	SourcePeer string `pulumi:"sourcePeer"`
	// The route's weight.
	Weight int `pulumi:"weight"`
}

// GatewayRouteResponseInput is an input type that accepts GatewayRouteResponseArgs and GatewayRouteResponseOutput values.
// You can construct a concrete instance of `GatewayRouteResponseInput` via:
//
//          GatewayRouteResponseArgs{...}
type GatewayRouteResponseInput interface {
	pulumi.Input

	ToGatewayRouteResponseOutput() GatewayRouteResponseOutput
	ToGatewayRouteResponseOutputWithContext(context.Context) GatewayRouteResponseOutput
}

// Gateway routing details.
type GatewayRouteResponseArgs struct {
	// The route's AS path sequence.
	AsPath pulumi.StringInput `pulumi:"asPath"`
	// The gateway's local address.
	LocalAddress pulumi.StringInput `pulumi:"localAddress"`
	// The route's network prefix.
	Network pulumi.StringInput `pulumi:"network"`
	// The route's next hop.
	NextHop pulumi.StringInput `pulumi:"nextHop"`
	// The source this route was learned from.
	Origin pulumi.StringInput `pulumi:"origin"`
	// The peer this route was learned from.
	SourcePeer pulumi.StringInput `pulumi:"sourcePeer"`
	// The route's weight.
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GatewayRouteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteResponse)(nil)).Elem()
}

func (i GatewayRouteResponseArgs) ToGatewayRouteResponseOutput() GatewayRouteResponseOutput {
	return i.ToGatewayRouteResponseOutputWithContext(context.Background())
}

func (i GatewayRouteResponseArgs) ToGatewayRouteResponseOutputWithContext(ctx context.Context) GatewayRouteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteResponseOutput)
}

// GatewayRouteResponseArrayInput is an input type that accepts GatewayRouteResponseArray and GatewayRouteResponseArrayOutput values.
// You can construct a concrete instance of `GatewayRouteResponseArrayInput` via:
//
//          GatewayRouteResponseArray{ GatewayRouteResponseArgs{...} }
type GatewayRouteResponseArrayInput interface {
	pulumi.Input

	ToGatewayRouteResponseArrayOutput() GatewayRouteResponseArrayOutput
	ToGatewayRouteResponseArrayOutputWithContext(context.Context) GatewayRouteResponseArrayOutput
}

type GatewayRouteResponseArray []GatewayRouteResponseInput

func (GatewayRouteResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteResponse)(nil)).Elem()
}

func (i GatewayRouteResponseArray) ToGatewayRouteResponseArrayOutput() GatewayRouteResponseArrayOutput {
	return i.ToGatewayRouteResponseArrayOutputWithContext(context.Background())
}

func (i GatewayRouteResponseArray) ToGatewayRouteResponseArrayOutputWithContext(ctx context.Context) GatewayRouteResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteResponseArrayOutput)
}

// Gateway routing details.
type GatewayRouteResponseOutput struct{ *pulumi.OutputState }

func (GatewayRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteResponse)(nil)).Elem()
}

func (o GatewayRouteResponseOutput) ToGatewayRouteResponseOutput() GatewayRouteResponseOutput {
	return o
}

func (o GatewayRouteResponseOutput) ToGatewayRouteResponseOutputWithContext(ctx context.Context) GatewayRouteResponseOutput {
	return o
}

// The route's AS path sequence.
func (o GatewayRouteResponseOutput) AsPath() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteResponse) string { return v.AsPath }).(pulumi.StringOutput)
}

// The gateway's local address.
func (o GatewayRouteResponseOutput) LocalAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteResponse) string { return v.LocalAddress }).(pulumi.StringOutput)
}

// The route's network prefix.
func (o GatewayRouteResponseOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteResponse) string { return v.Network }).(pulumi.StringOutput)
}

// The route's next hop.
func (o GatewayRouteResponseOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteResponse) string { return v.NextHop }).(pulumi.StringOutput)
}

// The source this route was learned from.
func (o GatewayRouteResponseOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteResponse) string { return v.Origin }).(pulumi.StringOutput)
}

// The peer this route was learned from.
func (o GatewayRouteResponseOutput) SourcePeer() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteResponse) string { return v.SourcePeer }).(pulumi.StringOutput)
}

// The route's weight.
func (o GatewayRouteResponseOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GatewayRouteResponse) int { return v.Weight }).(pulumi.IntOutput)
}

type GatewayRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (GatewayRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteResponse)(nil)).Elem()
}

func (o GatewayRouteResponseArrayOutput) ToGatewayRouteResponseArrayOutput() GatewayRouteResponseArrayOutput {
	return o
}

func (o GatewayRouteResponseArrayOutput) ToGatewayRouteResponseArrayOutputWithContext(ctx context.Context) GatewayRouteResponseArrayOutput {
	return o
}

func (o GatewayRouteResponseArrayOutput) Index(i pulumi.IntInput) GatewayRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayRouteResponse {
		return vs[0].([]GatewayRouteResponse)[vs[1].(int)]
	}).(GatewayRouteResponseOutput)
}

// The HTTP header.
type HTTPHeader struct {
	// The name in HTTP header.
	Name *string `pulumi:"name"`
	// The value in HTTP header.
	Value *string `pulumi:"value"`
}

// HTTPHeaderInput is an input type that accepts HTTPHeaderArgs and HTTPHeaderOutput values.
// You can construct a concrete instance of `HTTPHeaderInput` via:
//
//          HTTPHeaderArgs{...}
type HTTPHeaderInput interface {
	pulumi.Input

	ToHTTPHeaderOutput() HTTPHeaderOutput
	ToHTTPHeaderOutputWithContext(context.Context) HTTPHeaderOutput
}

// The HTTP header.
type HTTPHeaderArgs struct {
	// The name in HTTP header.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value in HTTP header.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (HTTPHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPHeader)(nil)).Elem()
}

func (i HTTPHeaderArgs) ToHTTPHeaderOutput() HTTPHeaderOutput {
	return i.ToHTTPHeaderOutputWithContext(context.Background())
}

func (i HTTPHeaderArgs) ToHTTPHeaderOutputWithContext(ctx context.Context) HTTPHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HTTPHeaderOutput)
}

// HTTPHeaderArrayInput is an input type that accepts HTTPHeaderArray and HTTPHeaderArrayOutput values.
// You can construct a concrete instance of `HTTPHeaderArrayInput` via:
//
//          HTTPHeaderArray{ HTTPHeaderArgs{...} }
type HTTPHeaderArrayInput interface {
	pulumi.Input

	ToHTTPHeaderArrayOutput() HTTPHeaderArrayOutput
	ToHTTPHeaderArrayOutputWithContext(context.Context) HTTPHeaderArrayOutput
}

type HTTPHeaderArray []HTTPHeaderInput

func (HTTPHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HTTPHeader)(nil)).Elem()
}

func (i HTTPHeaderArray) ToHTTPHeaderArrayOutput() HTTPHeaderArrayOutput {
	return i.ToHTTPHeaderArrayOutputWithContext(context.Background())
}

func (i HTTPHeaderArray) ToHTTPHeaderArrayOutputWithContext(ctx context.Context) HTTPHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HTTPHeaderArrayOutput)
}

// The HTTP header.
type HTTPHeaderOutput struct{ *pulumi.OutputState }

func (HTTPHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPHeader)(nil)).Elem()
}

func (o HTTPHeaderOutput) ToHTTPHeaderOutput() HTTPHeaderOutput {
	return o
}

func (o HTTPHeaderOutput) ToHTTPHeaderOutputWithContext(ctx context.Context) HTTPHeaderOutput {
	return o
}

// The name in HTTP header.
func (o HTTPHeaderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HTTPHeader) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value in HTTP header.
func (o HTTPHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HTTPHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type HTTPHeaderArrayOutput struct{ *pulumi.OutputState }

func (HTTPHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HTTPHeader)(nil)).Elem()
}

func (o HTTPHeaderArrayOutput) ToHTTPHeaderArrayOutput() HTTPHeaderArrayOutput {
	return o
}

func (o HTTPHeaderArrayOutput) ToHTTPHeaderArrayOutputWithContext(ctx context.Context) HTTPHeaderArrayOutput {
	return o
}

func (o HTTPHeaderArrayOutput) Index(i pulumi.IntInput) HTTPHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HTTPHeader {
		return vs[0].([]HTTPHeader)[vs[1].(int)]
	}).(HTTPHeaderOutput)
}

// The HTTP header.
type HTTPHeaderResponse struct {
	// The name in HTTP header.
	Name *string `pulumi:"name"`
	// The value in HTTP header.
	Value *string `pulumi:"value"`
}

// HTTPHeaderResponseInput is an input type that accepts HTTPHeaderResponseArgs and HTTPHeaderResponseOutput values.
// You can construct a concrete instance of `HTTPHeaderResponseInput` via:
//
//          HTTPHeaderResponseArgs{...}
type HTTPHeaderResponseInput interface {
	pulumi.Input

	ToHTTPHeaderResponseOutput() HTTPHeaderResponseOutput
	ToHTTPHeaderResponseOutputWithContext(context.Context) HTTPHeaderResponseOutput
}

// The HTTP header.
type HTTPHeaderResponseArgs struct {
	// The name in HTTP header.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The value in HTTP header.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (HTTPHeaderResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPHeaderResponse)(nil)).Elem()
}

func (i HTTPHeaderResponseArgs) ToHTTPHeaderResponseOutput() HTTPHeaderResponseOutput {
	return i.ToHTTPHeaderResponseOutputWithContext(context.Background())
}

func (i HTTPHeaderResponseArgs) ToHTTPHeaderResponseOutputWithContext(ctx context.Context) HTTPHeaderResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HTTPHeaderResponseOutput)
}

// HTTPHeaderResponseArrayInput is an input type that accepts HTTPHeaderResponseArray and HTTPHeaderResponseArrayOutput values.
// You can construct a concrete instance of `HTTPHeaderResponseArrayInput` via:
//
//          HTTPHeaderResponseArray{ HTTPHeaderResponseArgs{...} }
type HTTPHeaderResponseArrayInput interface {
	pulumi.Input

	ToHTTPHeaderResponseArrayOutput() HTTPHeaderResponseArrayOutput
	ToHTTPHeaderResponseArrayOutputWithContext(context.Context) HTTPHeaderResponseArrayOutput
}

type HTTPHeaderResponseArray []HTTPHeaderResponseInput

func (HTTPHeaderResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HTTPHeaderResponse)(nil)).Elem()
}

func (i HTTPHeaderResponseArray) ToHTTPHeaderResponseArrayOutput() HTTPHeaderResponseArrayOutput {
	return i.ToHTTPHeaderResponseArrayOutputWithContext(context.Background())
}

func (i HTTPHeaderResponseArray) ToHTTPHeaderResponseArrayOutputWithContext(ctx context.Context) HTTPHeaderResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HTTPHeaderResponseArrayOutput)
}

// The HTTP header.
type HTTPHeaderResponseOutput struct{ *pulumi.OutputState }

func (HTTPHeaderResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HTTPHeaderResponse)(nil)).Elem()
}

func (o HTTPHeaderResponseOutput) ToHTTPHeaderResponseOutput() HTTPHeaderResponseOutput {
	return o
}

func (o HTTPHeaderResponseOutput) ToHTTPHeaderResponseOutputWithContext(ctx context.Context) HTTPHeaderResponseOutput {
	return o
}

// The name in HTTP header.
func (o HTTPHeaderResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HTTPHeaderResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The value in HTTP header.
func (o HTTPHeaderResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HTTPHeaderResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type HTTPHeaderResponseArrayOutput struct{ *pulumi.OutputState }

func (HTTPHeaderResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HTTPHeaderResponse)(nil)).Elem()
}

func (o HTTPHeaderResponseArrayOutput) ToHTTPHeaderResponseArrayOutput() HTTPHeaderResponseArrayOutput {
	return o
}

func (o HTTPHeaderResponseArrayOutput) ToHTTPHeaderResponseArrayOutputWithContext(ctx context.Context) HTTPHeaderResponseArrayOutput {
	return o
}

func (o HTTPHeaderResponseArrayOutput) Index(i pulumi.IntInput) HTTPHeaderResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HTTPHeaderResponse {
		return vs[0].([]HTTPHeaderResponse)[vs[1].(int)]
	}).(HTTPHeaderResponseOutput)
}

// An action that can manipulate an http header.
type HeaderAction struct {
	// Which type of manipulation to apply to the header.
	HeaderActionType string `pulumi:"headerActionType"`
	// The name of the header this action will apply to.
	HeaderName string `pulumi:"headerName"`
	// The value to update the given header name with. This value is not used if the actionType is Delete.
	Value *string `pulumi:"value"`
}

// HeaderActionInput is an input type that accepts HeaderActionArgs and HeaderActionOutput values.
// You can construct a concrete instance of `HeaderActionInput` via:
//
//          HeaderActionArgs{...}
type HeaderActionInput interface {
	pulumi.Input

	ToHeaderActionOutput() HeaderActionOutput
	ToHeaderActionOutputWithContext(context.Context) HeaderActionOutput
}

// An action that can manipulate an http header.
type HeaderActionArgs struct {
	// Which type of manipulation to apply to the header.
	HeaderActionType pulumi.StringInput `pulumi:"headerActionType"`
	// The name of the header this action will apply to.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// The value to update the given header name with. This value is not used if the actionType is Delete.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (HeaderActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderAction)(nil)).Elem()
}

func (i HeaderActionArgs) ToHeaderActionOutput() HeaderActionOutput {
	return i.ToHeaderActionOutputWithContext(context.Background())
}

func (i HeaderActionArgs) ToHeaderActionOutputWithContext(ctx context.Context) HeaderActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HeaderActionOutput)
}

// HeaderActionArrayInput is an input type that accepts HeaderActionArray and HeaderActionArrayOutput values.
// You can construct a concrete instance of `HeaderActionArrayInput` via:
//
//          HeaderActionArray{ HeaderActionArgs{...} }
type HeaderActionArrayInput interface {
	pulumi.Input

	ToHeaderActionArrayOutput() HeaderActionArrayOutput
	ToHeaderActionArrayOutputWithContext(context.Context) HeaderActionArrayOutput
}

type HeaderActionArray []HeaderActionInput

func (HeaderActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HeaderAction)(nil)).Elem()
}

func (i HeaderActionArray) ToHeaderActionArrayOutput() HeaderActionArrayOutput {
	return i.ToHeaderActionArrayOutputWithContext(context.Background())
}

func (i HeaderActionArray) ToHeaderActionArrayOutputWithContext(ctx context.Context) HeaderActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HeaderActionArrayOutput)
}

// An action that can manipulate an http header.
type HeaderActionOutput struct{ *pulumi.OutputState }

func (HeaderActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderAction)(nil)).Elem()
}

func (o HeaderActionOutput) ToHeaderActionOutput() HeaderActionOutput {
	return o
}

func (o HeaderActionOutput) ToHeaderActionOutputWithContext(ctx context.Context) HeaderActionOutput {
	return o
}

// Which type of manipulation to apply to the header.
func (o HeaderActionOutput) HeaderActionType() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderAction) string { return v.HeaderActionType }).(pulumi.StringOutput)
}

// The name of the header this action will apply to.
func (o HeaderActionOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderAction) string { return v.HeaderName }).(pulumi.StringOutput)
}

// The value to update the given header name with. This value is not used if the actionType is Delete.
func (o HeaderActionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeaderAction) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type HeaderActionArrayOutput struct{ *pulumi.OutputState }

func (HeaderActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HeaderAction)(nil)).Elem()
}

func (o HeaderActionArrayOutput) ToHeaderActionArrayOutput() HeaderActionArrayOutput {
	return o
}

func (o HeaderActionArrayOutput) ToHeaderActionArrayOutputWithContext(ctx context.Context) HeaderActionArrayOutput {
	return o
}

func (o HeaderActionArrayOutput) Index(i pulumi.IntInput) HeaderActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HeaderAction {
		return vs[0].([]HeaderAction)[vs[1].(int)]
	}).(HeaderActionOutput)
}

// An action that can manipulate an http header.
type HeaderActionResponse struct {
	// Which type of manipulation to apply to the header.
	HeaderActionType string `pulumi:"headerActionType"`
	// The name of the header this action will apply to.
	HeaderName string `pulumi:"headerName"`
	// The value to update the given header name with. This value is not used if the actionType is Delete.
	Value *string `pulumi:"value"`
}

// HeaderActionResponseInput is an input type that accepts HeaderActionResponseArgs and HeaderActionResponseOutput values.
// You can construct a concrete instance of `HeaderActionResponseInput` via:
//
//          HeaderActionResponseArgs{...}
type HeaderActionResponseInput interface {
	pulumi.Input

	ToHeaderActionResponseOutput() HeaderActionResponseOutput
	ToHeaderActionResponseOutputWithContext(context.Context) HeaderActionResponseOutput
}

// An action that can manipulate an http header.
type HeaderActionResponseArgs struct {
	// Which type of manipulation to apply to the header.
	HeaderActionType pulumi.StringInput `pulumi:"headerActionType"`
	// The name of the header this action will apply to.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// The value to update the given header name with. This value is not used if the actionType is Delete.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (HeaderActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderActionResponse)(nil)).Elem()
}

func (i HeaderActionResponseArgs) ToHeaderActionResponseOutput() HeaderActionResponseOutput {
	return i.ToHeaderActionResponseOutputWithContext(context.Background())
}

func (i HeaderActionResponseArgs) ToHeaderActionResponseOutputWithContext(ctx context.Context) HeaderActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HeaderActionResponseOutput)
}

// HeaderActionResponseArrayInput is an input type that accepts HeaderActionResponseArray and HeaderActionResponseArrayOutput values.
// You can construct a concrete instance of `HeaderActionResponseArrayInput` via:
//
//          HeaderActionResponseArray{ HeaderActionResponseArgs{...} }
type HeaderActionResponseArrayInput interface {
	pulumi.Input

	ToHeaderActionResponseArrayOutput() HeaderActionResponseArrayOutput
	ToHeaderActionResponseArrayOutputWithContext(context.Context) HeaderActionResponseArrayOutput
}

type HeaderActionResponseArray []HeaderActionResponseInput

func (HeaderActionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HeaderActionResponse)(nil)).Elem()
}

func (i HeaderActionResponseArray) ToHeaderActionResponseArrayOutput() HeaderActionResponseArrayOutput {
	return i.ToHeaderActionResponseArrayOutputWithContext(context.Background())
}

func (i HeaderActionResponseArray) ToHeaderActionResponseArrayOutputWithContext(ctx context.Context) HeaderActionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HeaderActionResponseArrayOutput)
}

// An action that can manipulate an http header.
type HeaderActionResponseOutput struct{ *pulumi.OutputState }

func (HeaderActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HeaderActionResponse)(nil)).Elem()
}

func (o HeaderActionResponseOutput) ToHeaderActionResponseOutput() HeaderActionResponseOutput {
	return o
}

func (o HeaderActionResponseOutput) ToHeaderActionResponseOutputWithContext(ctx context.Context) HeaderActionResponseOutput {
	return o
}

// Which type of manipulation to apply to the header.
func (o HeaderActionResponseOutput) HeaderActionType() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionResponse) string { return v.HeaderActionType }).(pulumi.StringOutput)
}

// The name of the header this action will apply to.
func (o HeaderActionResponseOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v HeaderActionResponse) string { return v.HeaderName }).(pulumi.StringOutput)
}

// The value to update the given header name with. This value is not used if the actionType is Delete.
func (o HeaderActionResponseOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HeaderActionResponse) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type HeaderActionResponseArrayOutput struct{ *pulumi.OutputState }

func (HeaderActionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HeaderActionResponse)(nil)).Elem()
}

func (o HeaderActionResponseArrayOutput) ToHeaderActionResponseArrayOutput() HeaderActionResponseArrayOutput {
	return o
}

func (o HeaderActionResponseArrayOutput) ToHeaderActionResponseArrayOutputWithContext(ctx context.Context) HeaderActionResponseArrayOutput {
	return o
}

func (o HeaderActionResponseArrayOutput) Index(i pulumi.IntInput) HeaderActionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HeaderActionResponse {
		return vs[0].([]HeaderActionResponse)[vs[1].(int)]
	}).(HeaderActionResponseOutput)
}

// Load balancing settings for a backend pool
type HealthProbeSettingsModel struct {
	// Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.
	EnabledState *string `pulumi:"enabledState"`
	// Configures which HTTP method to use to probe the backends defined under backendPools.
	HealthProbeMethod *string `pulumi:"healthProbeMethod"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The number of seconds between health probes.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// Resource name.
	Name *string `pulumi:"name"`
	// The path to use for the health probe. Default is /
	Path *string `pulumi:"path"`
	// Protocol scheme to use for this probe
	Protocol *string `pulumi:"protocol"`
}

// HealthProbeSettingsModelInput is an input type that accepts HealthProbeSettingsModelArgs and HealthProbeSettingsModelOutput values.
// You can construct a concrete instance of `HealthProbeSettingsModelInput` via:
//
//          HealthProbeSettingsModelArgs{...}
type HealthProbeSettingsModelInput interface {
	pulumi.Input

	ToHealthProbeSettingsModelOutput() HealthProbeSettingsModelOutput
	ToHealthProbeSettingsModelOutputWithContext(context.Context) HealthProbeSettingsModelOutput
}

// Load balancing settings for a backend pool
type HealthProbeSettingsModelArgs struct {
	// Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Configures which HTTP method to use to probe the backends defined under backendPools.
	HealthProbeMethod pulumi.StringPtrInput `pulumi:"healthProbeMethod"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The number of seconds between health probes.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// Resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The path to use for the health probe. Default is /
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Protocol scheme to use for this probe
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (HealthProbeSettingsModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeSettingsModel)(nil)).Elem()
}

func (i HealthProbeSettingsModelArgs) ToHealthProbeSettingsModelOutput() HealthProbeSettingsModelOutput {
	return i.ToHealthProbeSettingsModelOutputWithContext(context.Background())
}

func (i HealthProbeSettingsModelArgs) ToHealthProbeSettingsModelOutputWithContext(ctx context.Context) HealthProbeSettingsModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeSettingsModelOutput)
}

// HealthProbeSettingsModelArrayInput is an input type that accepts HealthProbeSettingsModelArray and HealthProbeSettingsModelArrayOutput values.
// You can construct a concrete instance of `HealthProbeSettingsModelArrayInput` via:
//
//          HealthProbeSettingsModelArray{ HealthProbeSettingsModelArgs{...} }
type HealthProbeSettingsModelArrayInput interface {
	pulumi.Input

	ToHealthProbeSettingsModelArrayOutput() HealthProbeSettingsModelArrayOutput
	ToHealthProbeSettingsModelArrayOutputWithContext(context.Context) HealthProbeSettingsModelArrayOutput
}

type HealthProbeSettingsModelArray []HealthProbeSettingsModelInput

func (HealthProbeSettingsModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthProbeSettingsModel)(nil)).Elem()
}

func (i HealthProbeSettingsModelArray) ToHealthProbeSettingsModelArrayOutput() HealthProbeSettingsModelArrayOutput {
	return i.ToHealthProbeSettingsModelArrayOutputWithContext(context.Background())
}

func (i HealthProbeSettingsModelArray) ToHealthProbeSettingsModelArrayOutputWithContext(ctx context.Context) HealthProbeSettingsModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeSettingsModelArrayOutput)
}

// Load balancing settings for a backend pool
type HealthProbeSettingsModelOutput struct{ *pulumi.OutputState }

func (HealthProbeSettingsModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeSettingsModel)(nil)).Elem()
}

func (o HealthProbeSettingsModelOutput) ToHealthProbeSettingsModelOutput() HealthProbeSettingsModelOutput {
	return o
}

func (o HealthProbeSettingsModelOutput) ToHealthProbeSettingsModelOutputWithContext(ctx context.Context) HealthProbeSettingsModelOutput {
	return o
}

// Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.
func (o HealthProbeSettingsModelOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModel) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Configures which HTTP method to use to probe the backends defined under backendPools.
func (o HealthProbeSettingsModelOutput) HealthProbeMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModel) *string { return v.HealthProbeMethod }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o HealthProbeSettingsModelOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModel) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The number of seconds between health probes.
func (o HealthProbeSettingsModelOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModel) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// Resource name.
func (o HealthProbeSettingsModelOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModel) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The path to use for the health probe. Default is /
func (o HealthProbeSettingsModelOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModel) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Protocol scheme to use for this probe
func (o HealthProbeSettingsModelOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModel) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type HealthProbeSettingsModelArrayOutput struct{ *pulumi.OutputState }

func (HealthProbeSettingsModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthProbeSettingsModel)(nil)).Elem()
}

func (o HealthProbeSettingsModelArrayOutput) ToHealthProbeSettingsModelArrayOutput() HealthProbeSettingsModelArrayOutput {
	return o
}

func (o HealthProbeSettingsModelArrayOutput) ToHealthProbeSettingsModelArrayOutputWithContext(ctx context.Context) HealthProbeSettingsModelArrayOutput {
	return o
}

func (o HealthProbeSettingsModelArrayOutput) Index(i pulumi.IntInput) HealthProbeSettingsModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HealthProbeSettingsModel {
		return vs[0].([]HealthProbeSettingsModel)[vs[1].(int)]
	}).(HealthProbeSettingsModelOutput)
}

// Load balancing settings for a backend pool
type HealthProbeSettingsModelResponse struct {
	// Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.
	EnabledState *string `pulumi:"enabledState"`
	// Configures which HTTP method to use to probe the backends defined under backendPools.
	HealthProbeMethod *string `pulumi:"healthProbeMethod"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The number of seconds between health probes.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// Resource name.
	Name *string `pulumi:"name"`
	// The path to use for the health probe. Default is /
	Path *string `pulumi:"path"`
	// Protocol scheme to use for this probe
	Protocol *string `pulumi:"protocol"`
	// Resource status.
	ResourceState string `pulumi:"resourceState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// HealthProbeSettingsModelResponseInput is an input type that accepts HealthProbeSettingsModelResponseArgs and HealthProbeSettingsModelResponseOutput values.
// You can construct a concrete instance of `HealthProbeSettingsModelResponseInput` via:
//
//          HealthProbeSettingsModelResponseArgs{...}
type HealthProbeSettingsModelResponseInput interface {
	pulumi.Input

	ToHealthProbeSettingsModelResponseOutput() HealthProbeSettingsModelResponseOutput
	ToHealthProbeSettingsModelResponseOutputWithContext(context.Context) HealthProbeSettingsModelResponseOutput
}

// Load balancing settings for a backend pool
type HealthProbeSettingsModelResponseArgs struct {
	// Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Configures which HTTP method to use to probe the backends defined under backendPools.
	HealthProbeMethod pulumi.StringPtrInput `pulumi:"healthProbeMethod"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The number of seconds between health probes.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// Resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The path to use for the health probe. Default is /
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Protocol scheme to use for this probe
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Resource status.
	ResourceState pulumi.StringInput `pulumi:"resourceState"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HealthProbeSettingsModelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeSettingsModelResponse)(nil)).Elem()
}

func (i HealthProbeSettingsModelResponseArgs) ToHealthProbeSettingsModelResponseOutput() HealthProbeSettingsModelResponseOutput {
	return i.ToHealthProbeSettingsModelResponseOutputWithContext(context.Background())
}

func (i HealthProbeSettingsModelResponseArgs) ToHealthProbeSettingsModelResponseOutputWithContext(ctx context.Context) HealthProbeSettingsModelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeSettingsModelResponseOutput)
}

// HealthProbeSettingsModelResponseArrayInput is an input type that accepts HealthProbeSettingsModelResponseArray and HealthProbeSettingsModelResponseArrayOutput values.
// You can construct a concrete instance of `HealthProbeSettingsModelResponseArrayInput` via:
//
//          HealthProbeSettingsModelResponseArray{ HealthProbeSettingsModelResponseArgs{...} }
type HealthProbeSettingsModelResponseArrayInput interface {
	pulumi.Input

	ToHealthProbeSettingsModelResponseArrayOutput() HealthProbeSettingsModelResponseArrayOutput
	ToHealthProbeSettingsModelResponseArrayOutputWithContext(context.Context) HealthProbeSettingsModelResponseArrayOutput
}

type HealthProbeSettingsModelResponseArray []HealthProbeSettingsModelResponseInput

func (HealthProbeSettingsModelResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthProbeSettingsModelResponse)(nil)).Elem()
}

func (i HealthProbeSettingsModelResponseArray) ToHealthProbeSettingsModelResponseArrayOutput() HealthProbeSettingsModelResponseArrayOutput {
	return i.ToHealthProbeSettingsModelResponseArrayOutputWithContext(context.Background())
}

func (i HealthProbeSettingsModelResponseArray) ToHealthProbeSettingsModelResponseArrayOutputWithContext(ctx context.Context) HealthProbeSettingsModelResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HealthProbeSettingsModelResponseArrayOutput)
}

// Load balancing settings for a backend pool
type HealthProbeSettingsModelResponseOutput struct{ *pulumi.OutputState }

func (HealthProbeSettingsModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HealthProbeSettingsModelResponse)(nil)).Elem()
}

func (o HealthProbeSettingsModelResponseOutput) ToHealthProbeSettingsModelResponseOutput() HealthProbeSettingsModelResponseOutput {
	return o
}

func (o HealthProbeSettingsModelResponseOutput) ToHealthProbeSettingsModelResponseOutputWithContext(ctx context.Context) HealthProbeSettingsModelResponseOutput {
	return o
}

// Whether to enable health probes to be made against backends defined under backendPools. Health probes can only be disabled if there is a single enabled backend in single enabled backend pool.
func (o HealthProbeSettingsModelResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModelResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Configures which HTTP method to use to probe the backends defined under backendPools.
func (o HealthProbeSettingsModelResponseOutput) HealthProbeMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModelResponse) *string { return v.HealthProbeMethod }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o HealthProbeSettingsModelResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModelResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The number of seconds between health probes.
func (o HealthProbeSettingsModelResponseOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModelResponse) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// Resource name.
func (o HealthProbeSettingsModelResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModelResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The path to use for the health probe. Default is /
func (o HealthProbeSettingsModelResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModelResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Protocol scheme to use for this probe
func (o HealthProbeSettingsModelResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HealthProbeSettingsModelResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Resource status.
func (o HealthProbeSettingsModelResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v HealthProbeSettingsModelResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

// Resource type.
func (o HealthProbeSettingsModelResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HealthProbeSettingsModelResponse) string { return v.Type }).(pulumi.StringOutput)
}

type HealthProbeSettingsModelResponseArrayOutput struct{ *pulumi.OutputState }

func (HealthProbeSettingsModelResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HealthProbeSettingsModelResponse)(nil)).Elem()
}

func (o HealthProbeSettingsModelResponseArrayOutput) ToHealthProbeSettingsModelResponseArrayOutput() HealthProbeSettingsModelResponseArrayOutput {
	return o
}

func (o HealthProbeSettingsModelResponseArrayOutput) ToHealthProbeSettingsModelResponseArrayOutputWithContext(ctx context.Context) HealthProbeSettingsModelResponseArrayOutput {
	return o
}

func (o HealthProbeSettingsModelResponseArrayOutput) Index(i pulumi.IntInput) HealthProbeSettingsModelResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HealthProbeSettingsModelResponse {
		return vs[0].([]HealthProbeSettingsModelResponse)[vs[1].(int)]
	}).(HealthProbeSettingsModelResponseOutput)
}

// IP addresses associated with azure firewall.
type HubIPAddresses struct {
	// Private IP Address associated with azure firewall.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Public IP addresses associated with azure firewall.
	PublicIPs *HubPublicIPAddresses `pulumi:"publicIPs"`
}

// HubIPAddressesInput is an input type that accepts HubIPAddressesArgs and HubIPAddressesOutput values.
// You can construct a concrete instance of `HubIPAddressesInput` via:
//
//          HubIPAddressesArgs{...}
type HubIPAddressesInput interface {
	pulumi.Input

	ToHubIPAddressesOutput() HubIPAddressesOutput
	ToHubIPAddressesOutputWithContext(context.Context) HubIPAddressesOutput
}

// IP addresses associated with azure firewall.
type HubIPAddressesArgs struct {
	// Private IP Address associated with azure firewall.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Public IP addresses associated with azure firewall.
	PublicIPs HubPublicIPAddressesPtrInput `pulumi:"publicIPs"`
}

func (HubIPAddressesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubIPAddresses)(nil)).Elem()
}

func (i HubIPAddressesArgs) ToHubIPAddressesOutput() HubIPAddressesOutput {
	return i.ToHubIPAddressesOutputWithContext(context.Background())
}

func (i HubIPAddressesArgs) ToHubIPAddressesOutputWithContext(ctx context.Context) HubIPAddressesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubIPAddressesOutput)
}

func (i HubIPAddressesArgs) ToHubIPAddressesPtrOutput() HubIPAddressesPtrOutput {
	return i.ToHubIPAddressesPtrOutputWithContext(context.Background())
}

func (i HubIPAddressesArgs) ToHubIPAddressesPtrOutputWithContext(ctx context.Context) HubIPAddressesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubIPAddressesOutput).ToHubIPAddressesPtrOutputWithContext(ctx)
}

// HubIPAddressesPtrInput is an input type that accepts HubIPAddressesArgs, HubIPAddressesPtr and HubIPAddressesPtrOutput values.
// You can construct a concrete instance of `HubIPAddressesPtrInput` via:
//
//          HubIPAddressesArgs{...}
//
//  or:
//
//          nil
type HubIPAddressesPtrInput interface {
	pulumi.Input

	ToHubIPAddressesPtrOutput() HubIPAddressesPtrOutput
	ToHubIPAddressesPtrOutputWithContext(context.Context) HubIPAddressesPtrOutput
}

type hubIPAddressesPtrType HubIPAddressesArgs

func HubIPAddressesPtr(v *HubIPAddressesArgs) HubIPAddressesPtrInput {
	return (*hubIPAddressesPtrType)(v)
}

func (*hubIPAddressesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HubIPAddresses)(nil)).Elem()
}

func (i *hubIPAddressesPtrType) ToHubIPAddressesPtrOutput() HubIPAddressesPtrOutput {
	return i.ToHubIPAddressesPtrOutputWithContext(context.Background())
}

func (i *hubIPAddressesPtrType) ToHubIPAddressesPtrOutputWithContext(ctx context.Context) HubIPAddressesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubIPAddressesPtrOutput)
}

// IP addresses associated with azure firewall.
type HubIPAddressesOutput struct{ *pulumi.OutputState }

func (HubIPAddressesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubIPAddresses)(nil)).Elem()
}

func (o HubIPAddressesOutput) ToHubIPAddressesOutput() HubIPAddressesOutput {
	return o
}

func (o HubIPAddressesOutput) ToHubIPAddressesOutputWithContext(ctx context.Context) HubIPAddressesOutput {
	return o
}

func (o HubIPAddressesOutput) ToHubIPAddressesPtrOutput() HubIPAddressesPtrOutput {
	return o.ToHubIPAddressesPtrOutputWithContext(context.Background())
}

func (o HubIPAddressesOutput) ToHubIPAddressesPtrOutputWithContext(ctx context.Context) HubIPAddressesPtrOutput {
	return o.ApplyT(func(v HubIPAddresses) *HubIPAddresses {
		return &v
	}).(HubIPAddressesPtrOutput)
}

// Private IP Address associated with azure firewall.
func (o HubIPAddressesOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubIPAddresses) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Public IP addresses associated with azure firewall.
func (o HubIPAddressesOutput) PublicIPs() HubPublicIPAddressesPtrOutput {
	return o.ApplyT(func(v HubIPAddresses) *HubPublicIPAddresses { return v.PublicIPs }).(HubPublicIPAddressesPtrOutput)
}

type HubIPAddressesPtrOutput struct{ *pulumi.OutputState }

func (HubIPAddressesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HubIPAddresses)(nil)).Elem()
}

func (o HubIPAddressesPtrOutput) ToHubIPAddressesPtrOutput() HubIPAddressesPtrOutput {
	return o
}

func (o HubIPAddressesPtrOutput) ToHubIPAddressesPtrOutputWithContext(ctx context.Context) HubIPAddressesPtrOutput {
	return o
}

func (o HubIPAddressesPtrOutput) Elem() HubIPAddressesOutput {
	return o.ApplyT(func(v *HubIPAddresses) HubIPAddresses { return *v }).(HubIPAddressesOutput)
}

// Private IP Address associated with azure firewall.
func (o HubIPAddressesPtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HubIPAddresses) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Public IP addresses associated with azure firewall.
func (o HubIPAddressesPtrOutput) PublicIPs() HubPublicIPAddressesPtrOutput {
	return o.ApplyT(func(v *HubIPAddresses) *HubPublicIPAddresses {
		if v == nil {
			return nil
		}
		return v.PublicIPs
	}).(HubPublicIPAddressesPtrOutput)
}

// IP addresses associated with azure firewall.
type HubIPAddressesResponse struct {
	// Private IP Address associated with azure firewall.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Public IP addresses associated with azure firewall.
	PublicIPs *HubPublicIPAddressesResponse `pulumi:"publicIPs"`
}

// HubIPAddressesResponseInput is an input type that accepts HubIPAddressesResponseArgs and HubIPAddressesResponseOutput values.
// You can construct a concrete instance of `HubIPAddressesResponseInput` via:
//
//          HubIPAddressesResponseArgs{...}
type HubIPAddressesResponseInput interface {
	pulumi.Input

	ToHubIPAddressesResponseOutput() HubIPAddressesResponseOutput
	ToHubIPAddressesResponseOutputWithContext(context.Context) HubIPAddressesResponseOutput
}

// IP addresses associated with azure firewall.
type HubIPAddressesResponseArgs struct {
	// Private IP Address associated with azure firewall.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Public IP addresses associated with azure firewall.
	PublicIPs HubPublicIPAddressesResponsePtrInput `pulumi:"publicIPs"`
}

func (HubIPAddressesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubIPAddressesResponse)(nil)).Elem()
}

func (i HubIPAddressesResponseArgs) ToHubIPAddressesResponseOutput() HubIPAddressesResponseOutput {
	return i.ToHubIPAddressesResponseOutputWithContext(context.Background())
}

func (i HubIPAddressesResponseArgs) ToHubIPAddressesResponseOutputWithContext(ctx context.Context) HubIPAddressesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubIPAddressesResponseOutput)
}

func (i HubIPAddressesResponseArgs) ToHubIPAddressesResponsePtrOutput() HubIPAddressesResponsePtrOutput {
	return i.ToHubIPAddressesResponsePtrOutputWithContext(context.Background())
}

func (i HubIPAddressesResponseArgs) ToHubIPAddressesResponsePtrOutputWithContext(ctx context.Context) HubIPAddressesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubIPAddressesResponseOutput).ToHubIPAddressesResponsePtrOutputWithContext(ctx)
}

// HubIPAddressesResponsePtrInput is an input type that accepts HubIPAddressesResponseArgs, HubIPAddressesResponsePtr and HubIPAddressesResponsePtrOutput values.
// You can construct a concrete instance of `HubIPAddressesResponsePtrInput` via:
//
//          HubIPAddressesResponseArgs{...}
//
//  or:
//
//          nil
type HubIPAddressesResponsePtrInput interface {
	pulumi.Input

	ToHubIPAddressesResponsePtrOutput() HubIPAddressesResponsePtrOutput
	ToHubIPAddressesResponsePtrOutputWithContext(context.Context) HubIPAddressesResponsePtrOutput
}

type hubIPAddressesResponsePtrType HubIPAddressesResponseArgs

func HubIPAddressesResponsePtr(v *HubIPAddressesResponseArgs) HubIPAddressesResponsePtrInput {
	return (*hubIPAddressesResponsePtrType)(v)
}

func (*hubIPAddressesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HubIPAddressesResponse)(nil)).Elem()
}

func (i *hubIPAddressesResponsePtrType) ToHubIPAddressesResponsePtrOutput() HubIPAddressesResponsePtrOutput {
	return i.ToHubIPAddressesResponsePtrOutputWithContext(context.Background())
}

func (i *hubIPAddressesResponsePtrType) ToHubIPAddressesResponsePtrOutputWithContext(ctx context.Context) HubIPAddressesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubIPAddressesResponsePtrOutput)
}

// IP addresses associated with azure firewall.
type HubIPAddressesResponseOutput struct{ *pulumi.OutputState }

func (HubIPAddressesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubIPAddressesResponse)(nil)).Elem()
}

func (o HubIPAddressesResponseOutput) ToHubIPAddressesResponseOutput() HubIPAddressesResponseOutput {
	return o
}

func (o HubIPAddressesResponseOutput) ToHubIPAddressesResponseOutputWithContext(ctx context.Context) HubIPAddressesResponseOutput {
	return o
}

func (o HubIPAddressesResponseOutput) ToHubIPAddressesResponsePtrOutput() HubIPAddressesResponsePtrOutput {
	return o.ToHubIPAddressesResponsePtrOutputWithContext(context.Background())
}

func (o HubIPAddressesResponseOutput) ToHubIPAddressesResponsePtrOutputWithContext(ctx context.Context) HubIPAddressesResponsePtrOutput {
	return o.ApplyT(func(v HubIPAddressesResponse) *HubIPAddressesResponse {
		return &v
	}).(HubIPAddressesResponsePtrOutput)
}

// Private IP Address associated with azure firewall.
func (o HubIPAddressesResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubIPAddressesResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Public IP addresses associated with azure firewall.
func (o HubIPAddressesResponseOutput) PublicIPs() HubPublicIPAddressesResponsePtrOutput {
	return o.ApplyT(func(v HubIPAddressesResponse) *HubPublicIPAddressesResponse { return v.PublicIPs }).(HubPublicIPAddressesResponsePtrOutput)
}

type HubIPAddressesResponsePtrOutput struct{ *pulumi.OutputState }

func (HubIPAddressesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HubIPAddressesResponse)(nil)).Elem()
}

func (o HubIPAddressesResponsePtrOutput) ToHubIPAddressesResponsePtrOutput() HubIPAddressesResponsePtrOutput {
	return o
}

func (o HubIPAddressesResponsePtrOutput) ToHubIPAddressesResponsePtrOutputWithContext(ctx context.Context) HubIPAddressesResponsePtrOutput {
	return o
}

func (o HubIPAddressesResponsePtrOutput) Elem() HubIPAddressesResponseOutput {
	return o.ApplyT(func(v *HubIPAddressesResponse) HubIPAddressesResponse { return *v }).(HubIPAddressesResponseOutput)
}

// Private IP Address associated with azure firewall.
func (o HubIPAddressesResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HubIPAddressesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Public IP addresses associated with azure firewall.
func (o HubIPAddressesResponsePtrOutput) PublicIPs() HubPublicIPAddressesResponsePtrOutput {
	return o.ApplyT(func(v *HubIPAddressesResponse) *HubPublicIPAddressesResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPs
	}).(HubPublicIPAddressesResponsePtrOutput)
}

// Public IP addresses associated with azure firewall.
type HubPublicIPAddresses struct {
	// The list of Public IP addresses associated with azure firewall or IP addresses to be retained.
	Addresses []AzureFirewallPublicIPAddress `pulumi:"addresses"`
	// The number of Public IP addresses associated with azure firewall.
	Count *int `pulumi:"count"`
}

// HubPublicIPAddressesInput is an input type that accepts HubPublicIPAddressesArgs and HubPublicIPAddressesOutput values.
// You can construct a concrete instance of `HubPublicIPAddressesInput` via:
//
//          HubPublicIPAddressesArgs{...}
type HubPublicIPAddressesInput interface {
	pulumi.Input

	ToHubPublicIPAddressesOutput() HubPublicIPAddressesOutput
	ToHubPublicIPAddressesOutputWithContext(context.Context) HubPublicIPAddressesOutput
}

// Public IP addresses associated with azure firewall.
type HubPublicIPAddressesArgs struct {
	// The list of Public IP addresses associated with azure firewall or IP addresses to be retained.
	Addresses AzureFirewallPublicIPAddressArrayInput `pulumi:"addresses"`
	// The number of Public IP addresses associated with azure firewall.
	Count pulumi.IntPtrInput `pulumi:"count"`
}

func (HubPublicIPAddressesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubPublicIPAddresses)(nil)).Elem()
}

func (i HubPublicIPAddressesArgs) ToHubPublicIPAddressesOutput() HubPublicIPAddressesOutput {
	return i.ToHubPublicIPAddressesOutputWithContext(context.Background())
}

func (i HubPublicIPAddressesArgs) ToHubPublicIPAddressesOutputWithContext(ctx context.Context) HubPublicIPAddressesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubPublicIPAddressesOutput)
}

func (i HubPublicIPAddressesArgs) ToHubPublicIPAddressesPtrOutput() HubPublicIPAddressesPtrOutput {
	return i.ToHubPublicIPAddressesPtrOutputWithContext(context.Background())
}

func (i HubPublicIPAddressesArgs) ToHubPublicIPAddressesPtrOutputWithContext(ctx context.Context) HubPublicIPAddressesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubPublicIPAddressesOutput).ToHubPublicIPAddressesPtrOutputWithContext(ctx)
}

// HubPublicIPAddressesPtrInput is an input type that accepts HubPublicIPAddressesArgs, HubPublicIPAddressesPtr and HubPublicIPAddressesPtrOutput values.
// You can construct a concrete instance of `HubPublicIPAddressesPtrInput` via:
//
//          HubPublicIPAddressesArgs{...}
//
//  or:
//
//          nil
type HubPublicIPAddressesPtrInput interface {
	pulumi.Input

	ToHubPublicIPAddressesPtrOutput() HubPublicIPAddressesPtrOutput
	ToHubPublicIPAddressesPtrOutputWithContext(context.Context) HubPublicIPAddressesPtrOutput
}

type hubPublicIPAddressesPtrType HubPublicIPAddressesArgs

func HubPublicIPAddressesPtr(v *HubPublicIPAddressesArgs) HubPublicIPAddressesPtrInput {
	return (*hubPublicIPAddressesPtrType)(v)
}

func (*hubPublicIPAddressesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HubPublicIPAddresses)(nil)).Elem()
}

func (i *hubPublicIPAddressesPtrType) ToHubPublicIPAddressesPtrOutput() HubPublicIPAddressesPtrOutput {
	return i.ToHubPublicIPAddressesPtrOutputWithContext(context.Background())
}

func (i *hubPublicIPAddressesPtrType) ToHubPublicIPAddressesPtrOutputWithContext(ctx context.Context) HubPublicIPAddressesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubPublicIPAddressesPtrOutput)
}

// Public IP addresses associated with azure firewall.
type HubPublicIPAddressesOutput struct{ *pulumi.OutputState }

func (HubPublicIPAddressesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubPublicIPAddresses)(nil)).Elem()
}

func (o HubPublicIPAddressesOutput) ToHubPublicIPAddressesOutput() HubPublicIPAddressesOutput {
	return o
}

func (o HubPublicIPAddressesOutput) ToHubPublicIPAddressesOutputWithContext(ctx context.Context) HubPublicIPAddressesOutput {
	return o
}

func (o HubPublicIPAddressesOutput) ToHubPublicIPAddressesPtrOutput() HubPublicIPAddressesPtrOutput {
	return o.ToHubPublicIPAddressesPtrOutputWithContext(context.Background())
}

func (o HubPublicIPAddressesOutput) ToHubPublicIPAddressesPtrOutputWithContext(ctx context.Context) HubPublicIPAddressesPtrOutput {
	return o.ApplyT(func(v HubPublicIPAddresses) *HubPublicIPAddresses {
		return &v
	}).(HubPublicIPAddressesPtrOutput)
}

// The list of Public IP addresses associated with azure firewall or IP addresses to be retained.
func (o HubPublicIPAddressesOutput) Addresses() AzureFirewallPublicIPAddressArrayOutput {
	return o.ApplyT(func(v HubPublicIPAddresses) []AzureFirewallPublicIPAddress { return v.Addresses }).(AzureFirewallPublicIPAddressArrayOutput)
}

// The number of Public IP addresses associated with azure firewall.
func (o HubPublicIPAddressesOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HubPublicIPAddresses) *int { return v.Count }).(pulumi.IntPtrOutput)
}

type HubPublicIPAddressesPtrOutput struct{ *pulumi.OutputState }

func (HubPublicIPAddressesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HubPublicIPAddresses)(nil)).Elem()
}

func (o HubPublicIPAddressesPtrOutput) ToHubPublicIPAddressesPtrOutput() HubPublicIPAddressesPtrOutput {
	return o
}

func (o HubPublicIPAddressesPtrOutput) ToHubPublicIPAddressesPtrOutputWithContext(ctx context.Context) HubPublicIPAddressesPtrOutput {
	return o
}

func (o HubPublicIPAddressesPtrOutput) Elem() HubPublicIPAddressesOutput {
	return o.ApplyT(func(v *HubPublicIPAddresses) HubPublicIPAddresses { return *v }).(HubPublicIPAddressesOutput)
}

// The list of Public IP addresses associated with azure firewall or IP addresses to be retained.
func (o HubPublicIPAddressesPtrOutput) Addresses() AzureFirewallPublicIPAddressArrayOutput {
	return o.ApplyT(func(v *HubPublicIPAddresses) []AzureFirewallPublicIPAddress {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(AzureFirewallPublicIPAddressArrayOutput)
}

// The number of Public IP addresses associated with azure firewall.
func (o HubPublicIPAddressesPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HubPublicIPAddresses) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// Public IP addresses associated with azure firewall.
type HubPublicIPAddressesResponse struct {
	// The list of Public IP addresses associated with azure firewall or IP addresses to be retained.
	Addresses []AzureFirewallPublicIPAddressResponse `pulumi:"addresses"`
	// The number of Public IP addresses associated with azure firewall.
	Count *int `pulumi:"count"`
}

// HubPublicIPAddressesResponseInput is an input type that accepts HubPublicIPAddressesResponseArgs and HubPublicIPAddressesResponseOutput values.
// You can construct a concrete instance of `HubPublicIPAddressesResponseInput` via:
//
//          HubPublicIPAddressesResponseArgs{...}
type HubPublicIPAddressesResponseInput interface {
	pulumi.Input

	ToHubPublicIPAddressesResponseOutput() HubPublicIPAddressesResponseOutput
	ToHubPublicIPAddressesResponseOutputWithContext(context.Context) HubPublicIPAddressesResponseOutput
}

// Public IP addresses associated with azure firewall.
type HubPublicIPAddressesResponseArgs struct {
	// The list of Public IP addresses associated with azure firewall or IP addresses to be retained.
	Addresses AzureFirewallPublicIPAddressResponseArrayInput `pulumi:"addresses"`
	// The number of Public IP addresses associated with azure firewall.
	Count pulumi.IntPtrInput `pulumi:"count"`
}

func (HubPublicIPAddressesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubPublicIPAddressesResponse)(nil)).Elem()
}

func (i HubPublicIPAddressesResponseArgs) ToHubPublicIPAddressesResponseOutput() HubPublicIPAddressesResponseOutput {
	return i.ToHubPublicIPAddressesResponseOutputWithContext(context.Background())
}

func (i HubPublicIPAddressesResponseArgs) ToHubPublicIPAddressesResponseOutputWithContext(ctx context.Context) HubPublicIPAddressesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubPublicIPAddressesResponseOutput)
}

func (i HubPublicIPAddressesResponseArgs) ToHubPublicIPAddressesResponsePtrOutput() HubPublicIPAddressesResponsePtrOutput {
	return i.ToHubPublicIPAddressesResponsePtrOutputWithContext(context.Background())
}

func (i HubPublicIPAddressesResponseArgs) ToHubPublicIPAddressesResponsePtrOutputWithContext(ctx context.Context) HubPublicIPAddressesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubPublicIPAddressesResponseOutput).ToHubPublicIPAddressesResponsePtrOutputWithContext(ctx)
}

// HubPublicIPAddressesResponsePtrInput is an input type that accepts HubPublicIPAddressesResponseArgs, HubPublicIPAddressesResponsePtr and HubPublicIPAddressesResponsePtrOutput values.
// You can construct a concrete instance of `HubPublicIPAddressesResponsePtrInput` via:
//
//          HubPublicIPAddressesResponseArgs{...}
//
//  or:
//
//          nil
type HubPublicIPAddressesResponsePtrInput interface {
	pulumi.Input

	ToHubPublicIPAddressesResponsePtrOutput() HubPublicIPAddressesResponsePtrOutput
	ToHubPublicIPAddressesResponsePtrOutputWithContext(context.Context) HubPublicIPAddressesResponsePtrOutput
}

type hubPublicIPAddressesResponsePtrType HubPublicIPAddressesResponseArgs

func HubPublicIPAddressesResponsePtr(v *HubPublicIPAddressesResponseArgs) HubPublicIPAddressesResponsePtrInput {
	return (*hubPublicIPAddressesResponsePtrType)(v)
}

func (*hubPublicIPAddressesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HubPublicIPAddressesResponse)(nil)).Elem()
}

func (i *hubPublicIPAddressesResponsePtrType) ToHubPublicIPAddressesResponsePtrOutput() HubPublicIPAddressesResponsePtrOutput {
	return i.ToHubPublicIPAddressesResponsePtrOutputWithContext(context.Background())
}

func (i *hubPublicIPAddressesResponsePtrType) ToHubPublicIPAddressesResponsePtrOutputWithContext(ctx context.Context) HubPublicIPAddressesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubPublicIPAddressesResponsePtrOutput)
}

// Public IP addresses associated with azure firewall.
type HubPublicIPAddressesResponseOutput struct{ *pulumi.OutputState }

func (HubPublicIPAddressesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubPublicIPAddressesResponse)(nil)).Elem()
}

func (o HubPublicIPAddressesResponseOutput) ToHubPublicIPAddressesResponseOutput() HubPublicIPAddressesResponseOutput {
	return o
}

func (o HubPublicIPAddressesResponseOutput) ToHubPublicIPAddressesResponseOutputWithContext(ctx context.Context) HubPublicIPAddressesResponseOutput {
	return o
}

func (o HubPublicIPAddressesResponseOutput) ToHubPublicIPAddressesResponsePtrOutput() HubPublicIPAddressesResponsePtrOutput {
	return o.ToHubPublicIPAddressesResponsePtrOutputWithContext(context.Background())
}

func (o HubPublicIPAddressesResponseOutput) ToHubPublicIPAddressesResponsePtrOutputWithContext(ctx context.Context) HubPublicIPAddressesResponsePtrOutput {
	return o.ApplyT(func(v HubPublicIPAddressesResponse) *HubPublicIPAddressesResponse {
		return &v
	}).(HubPublicIPAddressesResponsePtrOutput)
}

// The list of Public IP addresses associated with azure firewall or IP addresses to be retained.
func (o HubPublicIPAddressesResponseOutput) Addresses() AzureFirewallPublicIPAddressResponseArrayOutput {
	return o.ApplyT(func(v HubPublicIPAddressesResponse) []AzureFirewallPublicIPAddressResponse { return v.Addresses }).(AzureFirewallPublicIPAddressResponseArrayOutput)
}

// The number of Public IP addresses associated with azure firewall.
func (o HubPublicIPAddressesResponseOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v HubPublicIPAddressesResponse) *int { return v.Count }).(pulumi.IntPtrOutput)
}

type HubPublicIPAddressesResponsePtrOutput struct{ *pulumi.OutputState }

func (HubPublicIPAddressesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HubPublicIPAddressesResponse)(nil)).Elem()
}

func (o HubPublicIPAddressesResponsePtrOutput) ToHubPublicIPAddressesResponsePtrOutput() HubPublicIPAddressesResponsePtrOutput {
	return o
}

func (o HubPublicIPAddressesResponsePtrOutput) ToHubPublicIPAddressesResponsePtrOutputWithContext(ctx context.Context) HubPublicIPAddressesResponsePtrOutput {
	return o
}

func (o HubPublicIPAddressesResponsePtrOutput) Elem() HubPublicIPAddressesResponseOutput {
	return o.ApplyT(func(v *HubPublicIPAddressesResponse) HubPublicIPAddressesResponse { return *v }).(HubPublicIPAddressesResponseOutput)
}

// The list of Public IP addresses associated with azure firewall or IP addresses to be retained.
func (o HubPublicIPAddressesResponsePtrOutput) Addresses() AzureFirewallPublicIPAddressResponseArrayOutput {
	return o.ApplyT(func(v *HubPublicIPAddressesResponse) []AzureFirewallPublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(AzureFirewallPublicIPAddressResponseArrayOutput)
}

// The number of Public IP addresses associated with azure firewall.
func (o HubPublicIPAddressesResponsePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *HubPublicIPAddressesResponse) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// RouteTable route.
type HubRoute struct {
	// The type of destinations (eg: CIDR, ResourceId, Service).
	DestinationType string `pulumi:"destinationType"`
	// List of all destinations.
	Destinations []string `pulumi:"destinations"`
	// The name of the Route that is unique within a RouteTable. This name can be used to access this route.
	Name string `pulumi:"name"`
	// NextHop resource ID.
	NextHop string `pulumi:"nextHop"`
	// The type of next hop (eg: ResourceId).
	NextHopType string `pulumi:"nextHopType"`
}

// HubRouteInput is an input type that accepts HubRouteArgs and HubRouteOutput values.
// You can construct a concrete instance of `HubRouteInput` via:
//
//          HubRouteArgs{...}
type HubRouteInput interface {
	pulumi.Input

	ToHubRouteOutput() HubRouteOutput
	ToHubRouteOutputWithContext(context.Context) HubRouteOutput
}

// RouteTable route.
type HubRouteArgs struct {
	// The type of destinations (eg: CIDR, ResourceId, Service).
	DestinationType pulumi.StringInput `pulumi:"destinationType"`
	// List of all destinations.
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	// The name of the Route that is unique within a RouteTable. This name can be used to access this route.
	Name pulumi.StringInput `pulumi:"name"`
	// NextHop resource ID.
	NextHop pulumi.StringInput `pulumi:"nextHop"`
	// The type of next hop (eg: ResourceId).
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
}

func (HubRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubRoute)(nil)).Elem()
}

func (i HubRouteArgs) ToHubRouteOutput() HubRouteOutput {
	return i.ToHubRouteOutputWithContext(context.Background())
}

func (i HubRouteArgs) ToHubRouteOutputWithContext(ctx context.Context) HubRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubRouteOutput)
}

// HubRouteArrayInput is an input type that accepts HubRouteArray and HubRouteArrayOutput values.
// You can construct a concrete instance of `HubRouteArrayInput` via:
//
//          HubRouteArray{ HubRouteArgs{...} }
type HubRouteArrayInput interface {
	pulumi.Input

	ToHubRouteArrayOutput() HubRouteArrayOutput
	ToHubRouteArrayOutputWithContext(context.Context) HubRouteArrayOutput
}

type HubRouteArray []HubRouteInput

func (HubRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HubRoute)(nil)).Elem()
}

func (i HubRouteArray) ToHubRouteArrayOutput() HubRouteArrayOutput {
	return i.ToHubRouteArrayOutputWithContext(context.Background())
}

func (i HubRouteArray) ToHubRouteArrayOutputWithContext(ctx context.Context) HubRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubRouteArrayOutput)
}

// RouteTable route.
type HubRouteOutput struct{ *pulumi.OutputState }

func (HubRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubRoute)(nil)).Elem()
}

func (o HubRouteOutput) ToHubRouteOutput() HubRouteOutput {
	return o
}

func (o HubRouteOutput) ToHubRouteOutputWithContext(ctx context.Context) HubRouteOutput {
	return o
}

// The type of destinations (eg: CIDR, ResourceId, Service).
func (o HubRouteOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v HubRoute) string { return v.DestinationType }).(pulumi.StringOutput)
}

// List of all destinations.
func (o HubRouteOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HubRoute) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The name of the Route that is unique within a RouteTable. This name can be used to access this route.
func (o HubRouteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HubRoute) string { return v.Name }).(pulumi.StringOutput)
}

// NextHop resource ID.
func (o HubRouteOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v HubRoute) string { return v.NextHop }).(pulumi.StringOutput)
}

// The type of next hop (eg: ResourceId).
func (o HubRouteOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v HubRoute) string { return v.NextHopType }).(pulumi.StringOutput)
}

type HubRouteArrayOutput struct{ *pulumi.OutputState }

func (HubRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HubRoute)(nil)).Elem()
}

func (o HubRouteArrayOutput) ToHubRouteArrayOutput() HubRouteArrayOutput {
	return o
}

func (o HubRouteArrayOutput) ToHubRouteArrayOutputWithContext(ctx context.Context) HubRouteArrayOutput {
	return o
}

func (o HubRouteArrayOutput) Index(i pulumi.IntInput) HubRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HubRoute {
		return vs[0].([]HubRoute)[vs[1].(int)]
	}).(HubRouteOutput)
}

// RouteTable route.
type HubRouteResponse struct {
	// The type of destinations (eg: CIDR, ResourceId, Service).
	DestinationType string `pulumi:"destinationType"`
	// List of all destinations.
	Destinations []string `pulumi:"destinations"`
	// The name of the Route that is unique within a RouteTable. This name can be used to access this route.
	Name string `pulumi:"name"`
	// NextHop resource ID.
	NextHop string `pulumi:"nextHop"`
	// The type of next hop (eg: ResourceId).
	NextHopType string `pulumi:"nextHopType"`
}

// HubRouteResponseInput is an input type that accepts HubRouteResponseArgs and HubRouteResponseOutput values.
// You can construct a concrete instance of `HubRouteResponseInput` via:
//
//          HubRouteResponseArgs{...}
type HubRouteResponseInput interface {
	pulumi.Input

	ToHubRouteResponseOutput() HubRouteResponseOutput
	ToHubRouteResponseOutputWithContext(context.Context) HubRouteResponseOutput
}

// RouteTable route.
type HubRouteResponseArgs struct {
	// The type of destinations (eg: CIDR, ResourceId, Service).
	DestinationType pulumi.StringInput `pulumi:"destinationType"`
	// List of all destinations.
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	// The name of the Route that is unique within a RouteTable. This name can be used to access this route.
	Name pulumi.StringInput `pulumi:"name"`
	// NextHop resource ID.
	NextHop pulumi.StringInput `pulumi:"nextHop"`
	// The type of next hop (eg: ResourceId).
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
}

func (HubRouteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubRouteResponse)(nil)).Elem()
}

func (i HubRouteResponseArgs) ToHubRouteResponseOutput() HubRouteResponseOutput {
	return i.ToHubRouteResponseOutputWithContext(context.Background())
}

func (i HubRouteResponseArgs) ToHubRouteResponseOutputWithContext(ctx context.Context) HubRouteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubRouteResponseOutput)
}

// HubRouteResponseArrayInput is an input type that accepts HubRouteResponseArray and HubRouteResponseArrayOutput values.
// You can construct a concrete instance of `HubRouteResponseArrayInput` via:
//
//          HubRouteResponseArray{ HubRouteResponseArgs{...} }
type HubRouteResponseArrayInput interface {
	pulumi.Input

	ToHubRouteResponseArrayOutput() HubRouteResponseArrayOutput
	ToHubRouteResponseArrayOutputWithContext(context.Context) HubRouteResponseArrayOutput
}

type HubRouteResponseArray []HubRouteResponseInput

func (HubRouteResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HubRouteResponse)(nil)).Elem()
}

func (i HubRouteResponseArray) ToHubRouteResponseArrayOutput() HubRouteResponseArrayOutput {
	return i.ToHubRouteResponseArrayOutputWithContext(context.Background())
}

func (i HubRouteResponseArray) ToHubRouteResponseArrayOutputWithContext(ctx context.Context) HubRouteResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubRouteResponseArrayOutput)
}

// RouteTable route.
type HubRouteResponseOutput struct{ *pulumi.OutputState }

func (HubRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubRouteResponse)(nil)).Elem()
}

func (o HubRouteResponseOutput) ToHubRouteResponseOutput() HubRouteResponseOutput {
	return o
}

func (o HubRouteResponseOutput) ToHubRouteResponseOutputWithContext(ctx context.Context) HubRouteResponseOutput {
	return o
}

// The type of destinations (eg: CIDR, ResourceId, Service).
func (o HubRouteResponseOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v HubRouteResponse) string { return v.DestinationType }).(pulumi.StringOutput)
}

// List of all destinations.
func (o HubRouteResponseOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HubRouteResponse) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The name of the Route that is unique within a RouteTable. This name can be used to access this route.
func (o HubRouteResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HubRouteResponse) string { return v.Name }).(pulumi.StringOutput)
}

// NextHop resource ID.
func (o HubRouteResponseOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v HubRouteResponse) string { return v.NextHop }).(pulumi.StringOutput)
}

// The type of next hop (eg: ResourceId).
func (o HubRouteResponseOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v HubRouteResponse) string { return v.NextHopType }).(pulumi.StringOutput)
}

type HubRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (HubRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HubRouteResponse)(nil)).Elem()
}

func (o HubRouteResponseArrayOutput) ToHubRouteResponseArrayOutput() HubRouteResponseArrayOutput {
	return o
}

func (o HubRouteResponseArrayOutput) ToHubRouteResponseArrayOutputWithContext(ctx context.Context) HubRouteResponseArrayOutput {
	return o
}

func (o HubRouteResponseArrayOutput) Index(i pulumi.IntInput) HubRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HubRouteResponse {
		return vs[0].([]HubRouteResponse)[vs[1].(int)]
	}).(HubRouteResponseOutput)
}

// Properties of IPConfigurationBgpPeeringAddress.
type IPConfigurationBgpPeeringAddress struct {
	// The list of custom BGP peering addresses which belong to IP configuration.
	CustomBgpIpAddresses []string `pulumi:"customBgpIpAddresses"`
	// The ID of IP configuration which belongs to gateway.
	IpconfigurationId *string `pulumi:"ipconfigurationId"`
}

// IPConfigurationBgpPeeringAddressInput is an input type that accepts IPConfigurationBgpPeeringAddressArgs and IPConfigurationBgpPeeringAddressOutput values.
// You can construct a concrete instance of `IPConfigurationBgpPeeringAddressInput` via:
//
//          IPConfigurationBgpPeeringAddressArgs{...}
type IPConfigurationBgpPeeringAddressInput interface {
	pulumi.Input

	ToIPConfigurationBgpPeeringAddressOutput() IPConfigurationBgpPeeringAddressOutput
	ToIPConfigurationBgpPeeringAddressOutputWithContext(context.Context) IPConfigurationBgpPeeringAddressOutput
}

// Properties of IPConfigurationBgpPeeringAddress.
type IPConfigurationBgpPeeringAddressArgs struct {
	// The list of custom BGP peering addresses which belong to IP configuration.
	CustomBgpIpAddresses pulumi.StringArrayInput `pulumi:"customBgpIpAddresses"`
	// The ID of IP configuration which belongs to gateway.
	IpconfigurationId pulumi.StringPtrInput `pulumi:"ipconfigurationId"`
}

func (IPConfigurationBgpPeeringAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationBgpPeeringAddress)(nil)).Elem()
}

func (i IPConfigurationBgpPeeringAddressArgs) ToIPConfigurationBgpPeeringAddressOutput() IPConfigurationBgpPeeringAddressOutput {
	return i.ToIPConfigurationBgpPeeringAddressOutputWithContext(context.Background())
}

func (i IPConfigurationBgpPeeringAddressArgs) ToIPConfigurationBgpPeeringAddressOutputWithContext(ctx context.Context) IPConfigurationBgpPeeringAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationBgpPeeringAddressOutput)
}

// IPConfigurationBgpPeeringAddressArrayInput is an input type that accepts IPConfigurationBgpPeeringAddressArray and IPConfigurationBgpPeeringAddressArrayOutput values.
// You can construct a concrete instance of `IPConfigurationBgpPeeringAddressArrayInput` via:
//
//          IPConfigurationBgpPeeringAddressArray{ IPConfigurationBgpPeeringAddressArgs{...} }
type IPConfigurationBgpPeeringAddressArrayInput interface {
	pulumi.Input

	ToIPConfigurationBgpPeeringAddressArrayOutput() IPConfigurationBgpPeeringAddressArrayOutput
	ToIPConfigurationBgpPeeringAddressArrayOutputWithContext(context.Context) IPConfigurationBgpPeeringAddressArrayOutput
}

type IPConfigurationBgpPeeringAddressArray []IPConfigurationBgpPeeringAddressInput

func (IPConfigurationBgpPeeringAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationBgpPeeringAddress)(nil)).Elem()
}

func (i IPConfigurationBgpPeeringAddressArray) ToIPConfigurationBgpPeeringAddressArrayOutput() IPConfigurationBgpPeeringAddressArrayOutput {
	return i.ToIPConfigurationBgpPeeringAddressArrayOutputWithContext(context.Background())
}

func (i IPConfigurationBgpPeeringAddressArray) ToIPConfigurationBgpPeeringAddressArrayOutputWithContext(ctx context.Context) IPConfigurationBgpPeeringAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationBgpPeeringAddressArrayOutput)
}

// Properties of IPConfigurationBgpPeeringAddress.
type IPConfigurationBgpPeeringAddressOutput struct{ *pulumi.OutputState }

func (IPConfigurationBgpPeeringAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationBgpPeeringAddress)(nil)).Elem()
}

func (o IPConfigurationBgpPeeringAddressOutput) ToIPConfigurationBgpPeeringAddressOutput() IPConfigurationBgpPeeringAddressOutput {
	return o
}

func (o IPConfigurationBgpPeeringAddressOutput) ToIPConfigurationBgpPeeringAddressOutputWithContext(ctx context.Context) IPConfigurationBgpPeeringAddressOutput {
	return o
}

// The list of custom BGP peering addresses which belong to IP configuration.
func (o IPConfigurationBgpPeeringAddressOutput) CustomBgpIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IPConfigurationBgpPeeringAddress) []string { return v.CustomBgpIpAddresses }).(pulumi.StringArrayOutput)
}

// The ID of IP configuration which belongs to gateway.
func (o IPConfigurationBgpPeeringAddressOutput) IpconfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationBgpPeeringAddress) *string { return v.IpconfigurationId }).(pulumi.StringPtrOutput)
}

type IPConfigurationBgpPeeringAddressArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationBgpPeeringAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationBgpPeeringAddress)(nil)).Elem()
}

func (o IPConfigurationBgpPeeringAddressArrayOutput) ToIPConfigurationBgpPeeringAddressArrayOutput() IPConfigurationBgpPeeringAddressArrayOutput {
	return o
}

func (o IPConfigurationBgpPeeringAddressArrayOutput) ToIPConfigurationBgpPeeringAddressArrayOutputWithContext(ctx context.Context) IPConfigurationBgpPeeringAddressArrayOutput {
	return o
}

func (o IPConfigurationBgpPeeringAddressArrayOutput) Index(i pulumi.IntInput) IPConfigurationBgpPeeringAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationBgpPeeringAddress {
		return vs[0].([]IPConfigurationBgpPeeringAddress)[vs[1].(int)]
	}).(IPConfigurationBgpPeeringAddressOutput)
}

// Properties of IPConfigurationBgpPeeringAddress.
type IPConfigurationBgpPeeringAddressResponse struct {
	// The list of custom BGP peering addresses which belong to IP configuration.
	CustomBgpIpAddresses []string `pulumi:"customBgpIpAddresses"`
	// The list of default BGP peering addresses which belong to IP configuration.
	DefaultBgpIpAddresses []string `pulumi:"defaultBgpIpAddresses"`
	// The ID of IP configuration which belongs to gateway.
	IpconfigurationId *string `pulumi:"ipconfigurationId"`
	// The list of tunnel public IP addresses which belong to IP configuration.
	TunnelIpAddresses []string `pulumi:"tunnelIpAddresses"`
}

// IPConfigurationBgpPeeringAddressResponseInput is an input type that accepts IPConfigurationBgpPeeringAddressResponseArgs and IPConfigurationBgpPeeringAddressResponseOutput values.
// You can construct a concrete instance of `IPConfigurationBgpPeeringAddressResponseInput` via:
//
//          IPConfigurationBgpPeeringAddressResponseArgs{...}
type IPConfigurationBgpPeeringAddressResponseInput interface {
	pulumi.Input

	ToIPConfigurationBgpPeeringAddressResponseOutput() IPConfigurationBgpPeeringAddressResponseOutput
	ToIPConfigurationBgpPeeringAddressResponseOutputWithContext(context.Context) IPConfigurationBgpPeeringAddressResponseOutput
}

// Properties of IPConfigurationBgpPeeringAddress.
type IPConfigurationBgpPeeringAddressResponseArgs struct {
	// The list of custom BGP peering addresses which belong to IP configuration.
	CustomBgpIpAddresses pulumi.StringArrayInput `pulumi:"customBgpIpAddresses"`
	// The list of default BGP peering addresses which belong to IP configuration.
	DefaultBgpIpAddresses pulumi.StringArrayInput `pulumi:"defaultBgpIpAddresses"`
	// The ID of IP configuration which belongs to gateway.
	IpconfigurationId pulumi.StringPtrInput `pulumi:"ipconfigurationId"`
	// The list of tunnel public IP addresses which belong to IP configuration.
	TunnelIpAddresses pulumi.StringArrayInput `pulumi:"tunnelIpAddresses"`
}

func (IPConfigurationBgpPeeringAddressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationBgpPeeringAddressResponse)(nil)).Elem()
}

func (i IPConfigurationBgpPeeringAddressResponseArgs) ToIPConfigurationBgpPeeringAddressResponseOutput() IPConfigurationBgpPeeringAddressResponseOutput {
	return i.ToIPConfigurationBgpPeeringAddressResponseOutputWithContext(context.Background())
}

func (i IPConfigurationBgpPeeringAddressResponseArgs) ToIPConfigurationBgpPeeringAddressResponseOutputWithContext(ctx context.Context) IPConfigurationBgpPeeringAddressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationBgpPeeringAddressResponseOutput)
}

// IPConfigurationBgpPeeringAddressResponseArrayInput is an input type that accepts IPConfigurationBgpPeeringAddressResponseArray and IPConfigurationBgpPeeringAddressResponseArrayOutput values.
// You can construct a concrete instance of `IPConfigurationBgpPeeringAddressResponseArrayInput` via:
//
//          IPConfigurationBgpPeeringAddressResponseArray{ IPConfigurationBgpPeeringAddressResponseArgs{...} }
type IPConfigurationBgpPeeringAddressResponseArrayInput interface {
	pulumi.Input

	ToIPConfigurationBgpPeeringAddressResponseArrayOutput() IPConfigurationBgpPeeringAddressResponseArrayOutput
	ToIPConfigurationBgpPeeringAddressResponseArrayOutputWithContext(context.Context) IPConfigurationBgpPeeringAddressResponseArrayOutput
}

type IPConfigurationBgpPeeringAddressResponseArray []IPConfigurationBgpPeeringAddressResponseInput

func (IPConfigurationBgpPeeringAddressResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationBgpPeeringAddressResponse)(nil)).Elem()
}

func (i IPConfigurationBgpPeeringAddressResponseArray) ToIPConfigurationBgpPeeringAddressResponseArrayOutput() IPConfigurationBgpPeeringAddressResponseArrayOutput {
	return i.ToIPConfigurationBgpPeeringAddressResponseArrayOutputWithContext(context.Background())
}

func (i IPConfigurationBgpPeeringAddressResponseArray) ToIPConfigurationBgpPeeringAddressResponseArrayOutputWithContext(ctx context.Context) IPConfigurationBgpPeeringAddressResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationBgpPeeringAddressResponseArrayOutput)
}

// Properties of IPConfigurationBgpPeeringAddress.
type IPConfigurationBgpPeeringAddressResponseOutput struct{ *pulumi.OutputState }

func (IPConfigurationBgpPeeringAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationBgpPeeringAddressResponse)(nil)).Elem()
}

func (o IPConfigurationBgpPeeringAddressResponseOutput) ToIPConfigurationBgpPeeringAddressResponseOutput() IPConfigurationBgpPeeringAddressResponseOutput {
	return o
}

func (o IPConfigurationBgpPeeringAddressResponseOutput) ToIPConfigurationBgpPeeringAddressResponseOutputWithContext(ctx context.Context) IPConfigurationBgpPeeringAddressResponseOutput {
	return o
}

// The list of custom BGP peering addresses which belong to IP configuration.
func (o IPConfigurationBgpPeeringAddressResponseOutput) CustomBgpIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IPConfigurationBgpPeeringAddressResponse) []string { return v.CustomBgpIpAddresses }).(pulumi.StringArrayOutput)
}

// The list of default BGP peering addresses which belong to IP configuration.
func (o IPConfigurationBgpPeeringAddressResponseOutput) DefaultBgpIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IPConfigurationBgpPeeringAddressResponse) []string { return v.DefaultBgpIpAddresses }).(pulumi.StringArrayOutput)
}

// The ID of IP configuration which belongs to gateway.
func (o IPConfigurationBgpPeeringAddressResponseOutput) IpconfigurationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationBgpPeeringAddressResponse) *string { return v.IpconfigurationId }).(pulumi.StringPtrOutput)
}

// The list of tunnel public IP addresses which belong to IP configuration.
func (o IPConfigurationBgpPeeringAddressResponseOutput) TunnelIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IPConfigurationBgpPeeringAddressResponse) []string { return v.TunnelIpAddresses }).(pulumi.StringArrayOutput)
}

type IPConfigurationBgpPeeringAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationBgpPeeringAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationBgpPeeringAddressResponse)(nil)).Elem()
}

func (o IPConfigurationBgpPeeringAddressResponseArrayOutput) ToIPConfigurationBgpPeeringAddressResponseArrayOutput() IPConfigurationBgpPeeringAddressResponseArrayOutput {
	return o
}

func (o IPConfigurationBgpPeeringAddressResponseArrayOutput) ToIPConfigurationBgpPeeringAddressResponseArrayOutputWithContext(ctx context.Context) IPConfigurationBgpPeeringAddressResponseArrayOutput {
	return o
}

func (o IPConfigurationBgpPeeringAddressResponseArrayOutput) Index(i pulumi.IntInput) IPConfigurationBgpPeeringAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationBgpPeeringAddressResponse {
		return vs[0].([]IPConfigurationBgpPeeringAddressResponse)[vs[1].(int)]
	}).(IPConfigurationBgpPeeringAddressResponseOutput)
}

// IP configuration profile child resource.
type IPConfigurationProfile struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference to the subnet resource to create a container network interface ip configuration.
	Subnet *SubnetType `pulumi:"subnet"`
}

// IPConfigurationProfileInput is an input type that accepts IPConfigurationProfileArgs and IPConfigurationProfileOutput values.
// You can construct a concrete instance of `IPConfigurationProfileInput` via:
//
//          IPConfigurationProfileArgs{...}
type IPConfigurationProfileInput interface {
	pulumi.Input

	ToIPConfigurationProfileOutput() IPConfigurationProfileOutput
	ToIPConfigurationProfileOutputWithContext(context.Context) IPConfigurationProfileOutput
}

// IP configuration profile child resource.
type IPConfigurationProfileArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference to the subnet resource to create a container network interface ip configuration.
	Subnet SubnetTypePtrInput `pulumi:"subnet"`
}

func (IPConfigurationProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationProfile)(nil)).Elem()
}

func (i IPConfigurationProfileArgs) ToIPConfigurationProfileOutput() IPConfigurationProfileOutput {
	return i.ToIPConfigurationProfileOutputWithContext(context.Background())
}

func (i IPConfigurationProfileArgs) ToIPConfigurationProfileOutputWithContext(ctx context.Context) IPConfigurationProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationProfileOutput)
}

// IPConfigurationProfileArrayInput is an input type that accepts IPConfigurationProfileArray and IPConfigurationProfileArrayOutput values.
// You can construct a concrete instance of `IPConfigurationProfileArrayInput` via:
//
//          IPConfigurationProfileArray{ IPConfigurationProfileArgs{...} }
type IPConfigurationProfileArrayInput interface {
	pulumi.Input

	ToIPConfigurationProfileArrayOutput() IPConfigurationProfileArrayOutput
	ToIPConfigurationProfileArrayOutputWithContext(context.Context) IPConfigurationProfileArrayOutput
}

type IPConfigurationProfileArray []IPConfigurationProfileInput

func (IPConfigurationProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationProfile)(nil)).Elem()
}

func (i IPConfigurationProfileArray) ToIPConfigurationProfileArrayOutput() IPConfigurationProfileArrayOutput {
	return i.ToIPConfigurationProfileArrayOutputWithContext(context.Background())
}

func (i IPConfigurationProfileArray) ToIPConfigurationProfileArrayOutputWithContext(ctx context.Context) IPConfigurationProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationProfileArrayOutput)
}

// IP configuration profile child resource.
type IPConfigurationProfileOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationProfile)(nil)).Elem()
}

func (o IPConfigurationProfileOutput) ToIPConfigurationProfileOutput() IPConfigurationProfileOutput {
	return o
}

func (o IPConfigurationProfileOutput) ToIPConfigurationProfileOutputWithContext(ctx context.Context) IPConfigurationProfileOutput {
	return o
}

// Resource ID.
func (o IPConfigurationProfileOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfile) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o IPConfigurationProfileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference to the subnet resource to create a container network interface ip configuration.
func (o IPConfigurationProfileOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v IPConfigurationProfile) *SubnetType { return v.Subnet }).(SubnetTypePtrOutput)
}

type IPConfigurationProfileArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationProfile)(nil)).Elem()
}

func (o IPConfigurationProfileArrayOutput) ToIPConfigurationProfileArrayOutput() IPConfigurationProfileArrayOutput {
	return o
}

func (o IPConfigurationProfileArrayOutput) ToIPConfigurationProfileArrayOutputWithContext(ctx context.Context) IPConfigurationProfileArrayOutput {
	return o
}

func (o IPConfigurationProfileArrayOutput) Index(i pulumi.IntInput) IPConfigurationProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationProfile {
		return vs[0].([]IPConfigurationProfile)[vs[1].(int)]
	}).(IPConfigurationProfileOutput)
}

// IP configuration profile child resource.
type IPConfigurationProfileResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the IP configuration profile resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the subnet resource to create a container network interface ip configuration.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// Sub Resource type.
	Type string `pulumi:"type"`
}

// IPConfigurationProfileResponseInput is an input type that accepts IPConfigurationProfileResponseArgs and IPConfigurationProfileResponseOutput values.
// You can construct a concrete instance of `IPConfigurationProfileResponseInput` via:
//
//          IPConfigurationProfileResponseArgs{...}
type IPConfigurationProfileResponseInput interface {
	pulumi.Input

	ToIPConfigurationProfileResponseOutput() IPConfigurationProfileResponseOutput
	ToIPConfigurationProfileResponseOutputWithContext(context.Context) IPConfigurationProfileResponseOutput
}

// IP configuration profile child resource.
type IPConfigurationProfileResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the IP configuration profile resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The reference to the subnet resource to create a container network interface ip configuration.
	Subnet SubnetResponsePtrInput `pulumi:"subnet"`
	// Sub Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IPConfigurationProfileResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationProfileResponse)(nil)).Elem()
}

func (i IPConfigurationProfileResponseArgs) ToIPConfigurationProfileResponseOutput() IPConfigurationProfileResponseOutput {
	return i.ToIPConfigurationProfileResponseOutputWithContext(context.Background())
}

func (i IPConfigurationProfileResponseArgs) ToIPConfigurationProfileResponseOutputWithContext(ctx context.Context) IPConfigurationProfileResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationProfileResponseOutput)
}

// IPConfigurationProfileResponseArrayInput is an input type that accepts IPConfigurationProfileResponseArray and IPConfigurationProfileResponseArrayOutput values.
// You can construct a concrete instance of `IPConfigurationProfileResponseArrayInput` via:
//
//          IPConfigurationProfileResponseArray{ IPConfigurationProfileResponseArgs{...} }
type IPConfigurationProfileResponseArrayInput interface {
	pulumi.Input

	ToIPConfigurationProfileResponseArrayOutput() IPConfigurationProfileResponseArrayOutput
	ToIPConfigurationProfileResponseArrayOutputWithContext(context.Context) IPConfigurationProfileResponseArrayOutput
}

type IPConfigurationProfileResponseArray []IPConfigurationProfileResponseInput

func (IPConfigurationProfileResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationProfileResponse)(nil)).Elem()
}

func (i IPConfigurationProfileResponseArray) ToIPConfigurationProfileResponseArrayOutput() IPConfigurationProfileResponseArrayOutput {
	return i.ToIPConfigurationProfileResponseArrayOutputWithContext(context.Background())
}

func (i IPConfigurationProfileResponseArray) ToIPConfigurationProfileResponseArrayOutputWithContext(ctx context.Context) IPConfigurationProfileResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationProfileResponseArrayOutput)
}

// IP configuration profile child resource.
type IPConfigurationProfileResponseOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfileResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationProfileResponse)(nil)).Elem()
}

func (o IPConfigurationProfileResponseOutput) ToIPConfigurationProfileResponseOutput() IPConfigurationProfileResponseOutput {
	return o
}

func (o IPConfigurationProfileResponseOutput) ToIPConfigurationProfileResponseOutputWithContext(ctx context.Context) IPConfigurationProfileResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationProfileResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o IPConfigurationProfileResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource. This name can be used to access the resource.
func (o IPConfigurationProfileResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the IP configuration profile resource.
func (o IPConfigurationProfileResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the subnet resource to create a container network interface ip configuration.
func (o IPConfigurationProfileResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// Sub Resource type.
func (o IPConfigurationProfileResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationProfileResponse) string { return v.Type }).(pulumi.StringOutput)
}

type IPConfigurationProfileResponseArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationProfileResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationProfileResponse)(nil)).Elem()
}

func (o IPConfigurationProfileResponseArrayOutput) ToIPConfigurationProfileResponseArrayOutput() IPConfigurationProfileResponseArrayOutput {
	return o
}

func (o IPConfigurationProfileResponseArrayOutput) ToIPConfigurationProfileResponseArrayOutputWithContext(ctx context.Context) IPConfigurationProfileResponseArrayOutput {
	return o
}

func (o IPConfigurationProfileResponseArrayOutput) Index(i pulumi.IntInput) IPConfigurationProfileResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationProfileResponse {
		return vs[0].([]IPConfigurationProfileResponse)[vs[1].(int)]
	}).(IPConfigurationProfileResponseOutput)
}

// IP configuration.
type IPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the public IP resource.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// The reference to the subnet resource.
	Subnet *SubnetResponse `pulumi:"subnet"`
}

// IPConfigurationResponseInput is an input type that accepts IPConfigurationResponseArgs and IPConfigurationResponseOutput values.
// You can construct a concrete instance of `IPConfigurationResponseInput` via:
//
//          IPConfigurationResponseArgs{...}
type IPConfigurationResponseInput interface {
	pulumi.Input

	ToIPConfigurationResponseOutput() IPConfigurationResponseOutput
	ToIPConfigurationResponseOutputWithContext(context.Context) IPConfigurationResponseOutput
}

// IP configuration.
type IPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the IP configuration resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The reference to the public IP resource.
	PublicIPAddress PublicIPAddressResponsePtrInput `pulumi:"publicIPAddress"`
	// The reference to the subnet resource.
	Subnet SubnetResponsePtrInput `pulumi:"subnet"`
}

func (IPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationResponse)(nil)).Elem()
}

func (i IPConfigurationResponseArgs) ToIPConfigurationResponseOutput() IPConfigurationResponseOutput {
	return i.ToIPConfigurationResponseOutputWithContext(context.Background())
}

func (i IPConfigurationResponseArgs) ToIPConfigurationResponseOutputWithContext(ctx context.Context) IPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationResponseOutput)
}

func (i IPConfigurationResponseArgs) ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput {
	return i.ToIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i IPConfigurationResponseArgs) ToIPConfigurationResponsePtrOutputWithContext(ctx context.Context) IPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationResponseOutput).ToIPConfigurationResponsePtrOutputWithContext(ctx)
}

// IPConfigurationResponsePtrInput is an input type that accepts IPConfigurationResponseArgs, IPConfigurationResponsePtr and IPConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `IPConfigurationResponsePtrInput` via:
//
//          IPConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type IPConfigurationResponsePtrInput interface {
	pulumi.Input

	ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput
	ToIPConfigurationResponsePtrOutputWithContext(context.Context) IPConfigurationResponsePtrOutput
}

type ipconfigurationResponsePtrType IPConfigurationResponseArgs

func IPConfigurationResponsePtr(v *IPConfigurationResponseArgs) IPConfigurationResponsePtrInput {
	return (*ipconfigurationResponsePtrType)(v)
}

func (*ipconfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationResponse)(nil)).Elem()
}

func (i *ipconfigurationResponsePtrType) ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput {
	return i.ToIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *ipconfigurationResponsePtrType) ToIPConfigurationResponsePtrOutputWithContext(ctx context.Context) IPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationResponsePtrOutput)
}

// IPConfigurationResponseArrayInput is an input type that accepts IPConfigurationResponseArray and IPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `IPConfigurationResponseArrayInput` via:
//
//          IPConfigurationResponseArray{ IPConfigurationResponseArgs{...} }
type IPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToIPConfigurationResponseArrayOutput() IPConfigurationResponseArrayOutput
	ToIPConfigurationResponseArrayOutputWithContext(context.Context) IPConfigurationResponseArrayOutput
}

type IPConfigurationResponseArray []IPConfigurationResponseInput

func (IPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationResponse)(nil)).Elem()
}

func (i IPConfigurationResponseArray) ToIPConfigurationResponseArrayOutput() IPConfigurationResponseArrayOutput {
	return i.ToIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i IPConfigurationResponseArray) ToIPConfigurationResponseArrayOutputWithContext(ctx context.Context) IPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationResponseArrayOutput)
}

// IP configuration.
type IPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponseOutput() IPConfigurationResponseOutput {
	return o
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponseOutputWithContext(ctx context.Context) IPConfigurationResponseOutput {
	return o
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput {
	return o.ToIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponsePtrOutputWithContext(ctx context.Context) IPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *IPConfigurationResponse {
		return &v
	}).(IPConfigurationResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o IPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o IPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the IP configuration resource.
func (o IPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v IPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the public IP resource.
func (o IPConfigurationResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *PublicIPAddressResponse { return v.PublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// The reference to the subnet resource.
func (o IPConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

type IPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponsePtrOutput) ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput {
	return o
}

func (o IPConfigurationResponsePtrOutput) ToIPConfigurationResponsePtrOutputWithContext(ctx context.Context) IPConfigurationResponsePtrOutput {
	return o
}

func (o IPConfigurationResponsePtrOutput) Elem() IPConfigurationResponseOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) IPConfigurationResponse { return *v }).(IPConfigurationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o IPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o IPConfigurationResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the IP configuration resource.
func (o IPConfigurationResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference to the public IP resource.
func (o IPConfigurationResponsePtrOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// The reference to the subnet resource.
func (o IPConfigurationResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

type IPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponseArrayOutput) ToIPConfigurationResponseArrayOutput() IPConfigurationResponseArrayOutput {
	return o
}

func (o IPConfigurationResponseArrayOutput) ToIPConfigurationResponseArrayOutputWithContext(ctx context.Context) IPConfigurationResponseArrayOutput {
	return o
}

func (o IPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) IPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationResponse {
		return vs[0].([]IPConfigurationResponse)[vs[1].(int)]
	}).(IPConfigurationResponseOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPool struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd int `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart int `pulumi:"frontendPortRangeStart"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference to the transport protocol used by the inbound NAT pool.
	Protocol string `pulumi:"protocol"`
}

// InboundNatPoolInput is an input type that accepts InboundNatPoolArgs and InboundNatPoolOutput values.
// You can construct a concrete instance of `InboundNatPoolInput` via:
//
//          InboundNatPoolArgs{...}
type InboundNatPoolInput interface {
	pulumi.Input

	ToInboundNatPoolOutput() InboundNatPoolOutput
	ToInboundNatPoolOutputWithContext(context.Context) InboundNatPoolOutput
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolArgs struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort pulumi.IntInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd pulumi.IntInput `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart pulumi.IntInput `pulumi:"frontendPortRangeStart"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference to the transport protocol used by the inbound NAT pool.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (InboundNatPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPool)(nil)).Elem()
}

func (i InboundNatPoolArgs) ToInboundNatPoolOutput() InboundNatPoolOutput {
	return i.ToInboundNatPoolOutputWithContext(context.Background())
}

func (i InboundNatPoolArgs) ToInboundNatPoolOutputWithContext(ctx context.Context) InboundNatPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolOutput)
}

// InboundNatPoolArrayInput is an input type that accepts InboundNatPoolArray and InboundNatPoolArrayOutput values.
// You can construct a concrete instance of `InboundNatPoolArrayInput` via:
//
//          InboundNatPoolArray{ InboundNatPoolArgs{...} }
type InboundNatPoolArrayInput interface {
	pulumi.Input

	ToInboundNatPoolArrayOutput() InboundNatPoolArrayOutput
	ToInboundNatPoolArrayOutputWithContext(context.Context) InboundNatPoolArrayOutput
}

type InboundNatPoolArray []InboundNatPoolInput

func (InboundNatPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPool)(nil)).Elem()
}

func (i InboundNatPoolArray) ToInboundNatPoolArrayOutput() InboundNatPoolArrayOutput {
	return i.ToInboundNatPoolArrayOutputWithContext(context.Background())
}

func (i InboundNatPoolArray) ToInboundNatPoolArrayOutputWithContext(ctx context.Context) InboundNatPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolArrayOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolOutput struct{ *pulumi.OutputState }

func (InboundNatPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPool)(nil)).Elem()
}

func (o InboundNatPoolOutput) ToInboundNatPoolOutput() InboundNatPoolOutput {
	return o
}

func (o InboundNatPoolOutput) ToInboundNatPoolOutputWithContext(ctx context.Context) InboundNatPoolOutput {
	return o
}

// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
func (o InboundNatPoolOutput) BackendPort() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPool) int { return v.BackendPort }).(pulumi.IntOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatPoolOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o InboundNatPoolOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatPoolOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v InboundNatPool) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
func (o InboundNatPoolOutput) FrontendPortRangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPool) int { return v.FrontendPortRangeEnd }).(pulumi.IntOutput)
}

// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
func (o InboundNatPoolOutput) FrontendPortRangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPool) int { return v.FrontendPortRangeStart }).(pulumi.IntOutput)
}

// Resource ID.
func (o InboundNatPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatPoolOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.
func (o InboundNatPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference to the transport protocol used by the inbound NAT pool.
func (o InboundNatPoolOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatPool) string { return v.Protocol }).(pulumi.StringOutput)
}

type InboundNatPoolArrayOutput struct{ *pulumi.OutputState }

func (InboundNatPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPool)(nil)).Elem()
}

func (o InboundNatPoolArrayOutput) ToInboundNatPoolArrayOutput() InboundNatPoolArrayOutput {
	return o
}

func (o InboundNatPoolArrayOutput) ToInboundNatPoolArrayOutputWithContext(ctx context.Context) InboundNatPoolArrayOutput {
	return o
}

func (o InboundNatPoolArrayOutput) Index(i pulumi.IntInput) InboundNatPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatPool {
		return vs[0].([]InboundNatPool)[vs[1].(int)]
	}).(InboundNatPoolOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolResponse struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd int `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart int `pulumi:"frontendPortRangeStart"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference to the transport protocol used by the inbound NAT pool.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the inbound NAT pool resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// InboundNatPoolResponseInput is an input type that accepts InboundNatPoolResponseArgs and InboundNatPoolResponseOutput values.
// You can construct a concrete instance of `InboundNatPoolResponseInput` via:
//
//          InboundNatPoolResponseArgs{...}
type InboundNatPoolResponseInput interface {
	pulumi.Input

	ToInboundNatPoolResponseOutput() InboundNatPoolResponseOutput
	ToInboundNatPoolResponseOutputWithContext(context.Context) InboundNatPoolResponseOutput
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolResponseArgs struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort pulumi.IntInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourceResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd pulumi.IntInput `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart pulumi.IntInput `pulumi:"frontendPortRangeStart"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference to the transport protocol used by the inbound NAT pool.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The provisioning state of the inbound NAT pool resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (InboundNatPoolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPoolResponse)(nil)).Elem()
}

func (i InboundNatPoolResponseArgs) ToInboundNatPoolResponseOutput() InboundNatPoolResponseOutput {
	return i.ToInboundNatPoolResponseOutputWithContext(context.Background())
}

func (i InboundNatPoolResponseArgs) ToInboundNatPoolResponseOutputWithContext(ctx context.Context) InboundNatPoolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolResponseOutput)
}

// InboundNatPoolResponseArrayInput is an input type that accepts InboundNatPoolResponseArray and InboundNatPoolResponseArrayOutput values.
// You can construct a concrete instance of `InboundNatPoolResponseArrayInput` via:
//
//          InboundNatPoolResponseArray{ InboundNatPoolResponseArgs{...} }
type InboundNatPoolResponseArrayInput interface {
	pulumi.Input

	ToInboundNatPoolResponseArrayOutput() InboundNatPoolResponseArrayOutput
	ToInboundNatPoolResponseArrayOutputWithContext(context.Context) InboundNatPoolResponseArrayOutput
}

type InboundNatPoolResponseArray []InboundNatPoolResponseInput

func (InboundNatPoolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPoolResponse)(nil)).Elem()
}

func (i InboundNatPoolResponseArray) ToInboundNatPoolResponseArrayOutput() InboundNatPoolResponseArrayOutput {
	return i.ToInboundNatPoolResponseArrayOutputWithContext(context.Background())
}

func (i InboundNatPoolResponseArray) ToInboundNatPoolResponseArrayOutputWithContext(ctx context.Context) InboundNatPoolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolResponseArrayOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolResponseOutput struct{ *pulumi.OutputState }

func (InboundNatPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPoolResponse)(nil)).Elem()
}

func (o InboundNatPoolResponseOutput) ToInboundNatPoolResponseOutput() InboundNatPoolResponseOutput {
	return o
}

func (o InboundNatPoolResponseOutput) ToInboundNatPoolResponseOutputWithContext(ctx context.Context) InboundNatPoolResponseOutput {
	return o
}

// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
func (o InboundNatPoolResponseOutput) BackendPort() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) int { return v.BackendPort }).(pulumi.IntOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatPoolResponseOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o InboundNatPoolResponseOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatPoolResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatPoolResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
func (o InboundNatPoolResponseOutput) FrontendPortRangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) int { return v.FrontendPortRangeEnd }).(pulumi.IntOutput)
}

// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
func (o InboundNatPoolResponseOutput) FrontendPortRangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) int { return v.FrontendPortRangeStart }).(pulumi.IntOutput)
}

// Resource ID.
func (o InboundNatPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatPoolResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name can be used to access the resource.
func (o InboundNatPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference to the transport protocol used by the inbound NAT pool.
func (o InboundNatPoolResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the inbound NAT pool resource.
func (o InboundNatPoolResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o InboundNatPoolResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) string { return v.Type }).(pulumi.StringOutput)
}

type InboundNatPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (InboundNatPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPoolResponse)(nil)).Elem()
}

func (o InboundNatPoolResponseArrayOutput) ToInboundNatPoolResponseArrayOutput() InboundNatPoolResponseArrayOutput {
	return o
}

func (o InboundNatPoolResponseArrayOutput) ToInboundNatPoolResponseArrayOutputWithContext(ctx context.Context) InboundNatPoolResponseArrayOutput {
	return o
}

func (o InboundNatPoolResponseArrayOutput) Index(i pulumi.IntInput) InboundNatPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatPoolResponse {
		return vs[0].([]InboundNatPoolResponse)[vs[1].(int)]
	}).(InboundNatPoolResponseOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleType struct {
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort *int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort *int `pulumi:"frontendPort"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference to the transport protocol used by the load balancing rule.
	Protocol *string `pulumi:"protocol"`
}

// InboundNatRuleTypeInput is an input type that accepts InboundNatRuleTypeArgs and InboundNatRuleTypeOutput values.
// You can construct a concrete instance of `InboundNatRuleTypeInput` via:
//
//          InboundNatRuleTypeArgs{...}
type InboundNatRuleTypeInput interface {
	pulumi.Input

	ToInboundNatRuleTypeOutput() InboundNatRuleTypeOutput
	ToInboundNatRuleTypeOutputWithContext(context.Context) InboundNatRuleTypeOutput
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleTypeArgs struct {
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort pulumi.IntPtrInput `pulumi:"frontendPort"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference to the transport protocol used by the load balancing rule.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (InboundNatRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleType)(nil)).Elem()
}

func (i InboundNatRuleTypeArgs) ToInboundNatRuleTypeOutput() InboundNatRuleTypeOutput {
	return i.ToInboundNatRuleTypeOutputWithContext(context.Background())
}

func (i InboundNatRuleTypeArgs) ToInboundNatRuleTypeOutputWithContext(ctx context.Context) InboundNatRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleTypeOutput)
}

// InboundNatRuleTypeArrayInput is an input type that accepts InboundNatRuleTypeArray and InboundNatRuleTypeArrayOutput values.
// You can construct a concrete instance of `InboundNatRuleTypeArrayInput` via:
//
//          InboundNatRuleTypeArray{ InboundNatRuleTypeArgs{...} }
type InboundNatRuleTypeArrayInput interface {
	pulumi.Input

	ToInboundNatRuleTypeArrayOutput() InboundNatRuleTypeArrayOutput
	ToInboundNatRuleTypeArrayOutputWithContext(context.Context) InboundNatRuleTypeArrayOutput
}

type InboundNatRuleTypeArray []InboundNatRuleTypeInput

func (InboundNatRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleType)(nil)).Elem()
}

func (i InboundNatRuleTypeArray) ToInboundNatRuleTypeArrayOutput() InboundNatRuleTypeArrayOutput {
	return i.ToInboundNatRuleTypeArrayOutputWithContext(context.Background())
}

func (i InboundNatRuleTypeArray) ToInboundNatRuleTypeArrayOutputWithContext(ctx context.Context) InboundNatRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleTypeArrayOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleTypeOutput struct{ *pulumi.OutputState }

func (InboundNatRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleType)(nil)).Elem()
}

func (o InboundNatRuleTypeOutput) ToInboundNatRuleTypeOutput() InboundNatRuleTypeOutput {
	return o
}

func (o InboundNatRuleTypeOutput) ToInboundNatRuleTypeOutputWithContext(ctx context.Context) InboundNatRuleTypeOutput {
	return o
}

// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
func (o InboundNatRuleTypeOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatRuleTypeOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o InboundNatRuleTypeOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatRuleTypeOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
func (o InboundNatRuleTypeOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *int { return v.FrontendPort }).(pulumi.IntPtrOutput)
}

// Resource ID.
func (o InboundNatRuleTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatRuleTypeOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
func (o InboundNatRuleTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference to the transport protocol used by the load balancing rule.
func (o InboundNatRuleTypeOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type InboundNatRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (InboundNatRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleType)(nil)).Elem()
}

func (o InboundNatRuleTypeArrayOutput) ToInboundNatRuleTypeArrayOutput() InboundNatRuleTypeArrayOutput {
	return o
}

func (o InboundNatRuleTypeArrayOutput) ToInboundNatRuleTypeArrayOutputWithContext(ctx context.Context) InboundNatRuleTypeArrayOutput {
	return o
}

func (o InboundNatRuleTypeArrayOutput) Index(i pulumi.IntInput) InboundNatRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatRuleType {
		return vs[0].([]InboundNatRuleType)[vs[1].(int)]
	}).(InboundNatRuleTypeOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleResponse struct {
	// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
	BackendIPConfiguration NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfiguration"`
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort *int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort *int `pulumi:"frontendPort"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference to the transport protocol used by the load balancing rule.
	Protocol *string `pulumi:"protocol"`
	// The provisioning state of the inbound NAT rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// InboundNatRuleResponseInput is an input type that accepts InboundNatRuleResponseArgs and InboundNatRuleResponseOutput values.
// You can construct a concrete instance of `InboundNatRuleResponseInput` via:
//
//          InboundNatRuleResponseArgs{...}
type InboundNatRuleResponseInput interface {
	pulumi.Input

	ToInboundNatRuleResponseOutput() InboundNatRuleResponseOutput
	ToInboundNatRuleResponseOutputWithContext(context.Context) InboundNatRuleResponseOutput
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleResponseArgs struct {
	// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
	BackendIPConfiguration NetworkInterfaceIPConfigurationResponseInput `pulumi:"backendIPConfiguration"`
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourceResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort pulumi.IntPtrInput `pulumi:"frontendPort"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference to the transport protocol used by the load balancing rule.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The provisioning state of the inbound NAT rule resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (InboundNatRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleResponse)(nil)).Elem()
}

func (i InboundNatRuleResponseArgs) ToInboundNatRuleResponseOutput() InboundNatRuleResponseOutput {
	return i.ToInboundNatRuleResponseOutputWithContext(context.Background())
}

func (i InboundNatRuleResponseArgs) ToInboundNatRuleResponseOutputWithContext(ctx context.Context) InboundNatRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleResponseOutput)
}

// InboundNatRuleResponseArrayInput is an input type that accepts InboundNatRuleResponseArray and InboundNatRuleResponseArrayOutput values.
// You can construct a concrete instance of `InboundNatRuleResponseArrayInput` via:
//
//          InboundNatRuleResponseArray{ InboundNatRuleResponseArgs{...} }
type InboundNatRuleResponseArrayInput interface {
	pulumi.Input

	ToInboundNatRuleResponseArrayOutput() InboundNatRuleResponseArrayOutput
	ToInboundNatRuleResponseArrayOutputWithContext(context.Context) InboundNatRuleResponseArrayOutput
}

type InboundNatRuleResponseArray []InboundNatRuleResponseInput

func (InboundNatRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleResponse)(nil)).Elem()
}

func (i InboundNatRuleResponseArray) ToInboundNatRuleResponseArrayOutput() InboundNatRuleResponseArrayOutput {
	return i.ToInboundNatRuleResponseArrayOutputWithContext(context.Background())
}

func (i InboundNatRuleResponseArray) ToInboundNatRuleResponseArrayOutputWithContext(ctx context.Context) InboundNatRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleResponseArrayOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleResponseOutput struct{ *pulumi.OutputState }

func (InboundNatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleResponse)(nil)).Elem()
}

func (o InboundNatRuleResponseOutput) ToInboundNatRuleResponseOutput() InboundNatRuleResponseOutput {
	return o
}

func (o InboundNatRuleResponseOutput) ToInboundNatRuleResponseOutputWithContext(ctx context.Context) InboundNatRuleResponseOutput {
	return o
}

// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
func (o InboundNatRuleResponseOutput) BackendIPConfiguration() NetworkInterfaceIPConfigurationResponseOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponseOutput)
}

// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
func (o InboundNatRuleResponseOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatRuleResponseOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o InboundNatRuleResponseOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatRuleResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
func (o InboundNatRuleResponseOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.FrontendPort }).(pulumi.IntPtrOutput)
}

// Resource ID.
func (o InboundNatRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatRuleResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name can be used to access the resource.
func (o InboundNatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference to the transport protocol used by the load balancing rule.
func (o InboundNatRuleResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The provisioning state of the inbound NAT rule resource.
func (o InboundNatRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o InboundNatRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

type InboundNatRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (InboundNatRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleResponse)(nil)).Elem()
}

func (o InboundNatRuleResponseArrayOutput) ToInboundNatRuleResponseArrayOutput() InboundNatRuleResponseArrayOutput {
	return o
}

func (o InboundNatRuleResponseArrayOutput) ToInboundNatRuleResponseArrayOutputWithContext(ctx context.Context) InboundNatRuleResponseArrayOutput {
	return o
}

func (o InboundNatRuleResponseArrayOutput) Index(i pulumi.IntInput) InboundNatRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatRuleResponse {
		return vs[0].([]InboundNatRuleResponse)[vs[1].(int)]
	}).(InboundNatRuleResponseOutput)
}

// Interface endpoint resource.
type InterfaceEndpointResponse struct {
	// A reference to the service being brought into the virtual network.
	EndpointService *EndpointServiceResponse `pulumi:"endpointService"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// A first-party service's FQDN that is mapped to the private IP allocated via this interface endpoint.
	Fqdn *string `pulumi:"fqdn"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Gets an array of references to the network interfaces created for this interface endpoint.
	NetworkInterfaces []NetworkInterfaceResponse `pulumi:"networkInterfaces"`
	// A read-only property that identifies who created this interface endpoint.
	Owner string `pulumi:"owner"`
	// The provisioning state of the interface endpoint. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The ID of the subnet from which the private IP will be allocated.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// InterfaceEndpointResponseInput is an input type that accepts InterfaceEndpointResponseArgs and InterfaceEndpointResponseOutput values.
// You can construct a concrete instance of `InterfaceEndpointResponseInput` via:
//
//          InterfaceEndpointResponseArgs{...}
type InterfaceEndpointResponseInput interface {
	pulumi.Input

	ToInterfaceEndpointResponseOutput() InterfaceEndpointResponseOutput
	ToInterfaceEndpointResponseOutputWithContext(context.Context) InterfaceEndpointResponseOutput
}

// Interface endpoint resource.
type InterfaceEndpointResponseArgs struct {
	// A reference to the service being brought into the virtual network.
	EndpointService EndpointServiceResponsePtrInput `pulumi:"endpointService"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// A first-party service's FQDN that is mapped to the private IP allocated via this interface endpoint.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Gets an array of references to the network interfaces created for this interface endpoint.
	NetworkInterfaces NetworkInterfaceResponseArrayInput `pulumi:"networkInterfaces"`
	// A read-only property that identifies who created this interface endpoint.
	Owner pulumi.StringInput `pulumi:"owner"`
	// The provisioning state of the interface endpoint. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The ID of the subnet from which the private IP will be allocated.
	Subnet SubnetResponsePtrInput `pulumi:"subnet"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (InterfaceEndpointResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceEndpointResponse)(nil)).Elem()
}

func (i InterfaceEndpointResponseArgs) ToInterfaceEndpointResponseOutput() InterfaceEndpointResponseOutput {
	return i.ToInterfaceEndpointResponseOutputWithContext(context.Background())
}

func (i InterfaceEndpointResponseArgs) ToInterfaceEndpointResponseOutputWithContext(ctx context.Context) InterfaceEndpointResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InterfaceEndpointResponseOutput)
}

// Interface endpoint resource.
type InterfaceEndpointResponseOutput struct{ *pulumi.OutputState }

func (InterfaceEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InterfaceEndpointResponse)(nil)).Elem()
}

func (o InterfaceEndpointResponseOutput) ToInterfaceEndpointResponseOutput() InterfaceEndpointResponseOutput {
	return o
}

func (o InterfaceEndpointResponseOutput) ToInterfaceEndpointResponseOutputWithContext(ctx context.Context) InterfaceEndpointResponseOutput {
	return o
}

// A reference to the service being brought into the virtual network.
func (o InterfaceEndpointResponseOutput) EndpointService() EndpointServiceResponsePtrOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) *EndpointServiceResponse { return v.EndpointService }).(EndpointServiceResponsePtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o InterfaceEndpointResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// A first-party service's FQDN that is mapped to the private IP allocated via this interface endpoint.
func (o InterfaceEndpointResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o InterfaceEndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o InterfaceEndpointResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o InterfaceEndpointResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Gets an array of references to the network interfaces created for this interface endpoint.
func (o InterfaceEndpointResponseOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) []NetworkInterfaceResponse { return v.NetworkInterfaces }).(NetworkInterfaceResponseArrayOutput)
}

// A read-only property that identifies who created this interface endpoint.
func (o InterfaceEndpointResponseOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) string { return v.Owner }).(pulumi.StringOutput)
}

// The provisioning state of the interface endpoint. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InterfaceEndpointResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The ID of the subnet from which the private IP will be allocated.
func (o InterfaceEndpointResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// Resource tags.
func (o InterfaceEndpointResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o InterfaceEndpointResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InterfaceEndpointResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Contains the IpTag associated with the object.
type IpTag struct {
	// The IP tag type. Example: FirstPartyUsage.
	IpTagType *string `pulumi:"ipTagType"`
	// The value of the IP tag associated with the public IP. Example: SQL.
	Tag *string `pulumi:"tag"`
}

// IpTagInput is an input type that accepts IpTagArgs and IpTagOutput values.
// You can construct a concrete instance of `IpTagInput` via:
//
//          IpTagArgs{...}
type IpTagInput interface {
	pulumi.Input

	ToIpTagOutput() IpTagOutput
	ToIpTagOutputWithContext(context.Context) IpTagOutput
}

// Contains the IpTag associated with the object.
type IpTagArgs struct {
	// The IP tag type. Example: FirstPartyUsage.
	IpTagType pulumi.StringPtrInput `pulumi:"ipTagType"`
	// The value of the IP tag associated with the public IP. Example: SQL.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (IpTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpTag)(nil)).Elem()
}

func (i IpTagArgs) ToIpTagOutput() IpTagOutput {
	return i.ToIpTagOutputWithContext(context.Background())
}

func (i IpTagArgs) ToIpTagOutputWithContext(ctx context.Context) IpTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpTagOutput)
}

// IpTagArrayInput is an input type that accepts IpTagArray and IpTagArrayOutput values.
// You can construct a concrete instance of `IpTagArrayInput` via:
//
//          IpTagArray{ IpTagArgs{...} }
type IpTagArrayInput interface {
	pulumi.Input

	ToIpTagArrayOutput() IpTagArrayOutput
	ToIpTagArrayOutputWithContext(context.Context) IpTagArrayOutput
}

type IpTagArray []IpTagInput

func (IpTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpTag)(nil)).Elem()
}

func (i IpTagArray) ToIpTagArrayOutput() IpTagArrayOutput {
	return i.ToIpTagArrayOutputWithContext(context.Background())
}

func (i IpTagArray) ToIpTagArrayOutputWithContext(ctx context.Context) IpTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpTagArrayOutput)
}

// Contains the IpTag associated with the object.
type IpTagOutput struct{ *pulumi.OutputState }

func (IpTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpTag)(nil)).Elem()
}

func (o IpTagOutput) ToIpTagOutput() IpTagOutput {
	return o
}

func (o IpTagOutput) ToIpTagOutputWithContext(ctx context.Context) IpTagOutput {
	return o
}

// The IP tag type. Example: FirstPartyUsage.
func (o IpTagOutput) IpTagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTag) *string { return v.IpTagType }).(pulumi.StringPtrOutput)
}

// The value of the IP tag associated with the public IP. Example: SQL.
func (o IpTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type IpTagArrayOutput struct{ *pulumi.OutputState }

func (IpTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpTag)(nil)).Elem()
}

func (o IpTagArrayOutput) ToIpTagArrayOutput() IpTagArrayOutput {
	return o
}

func (o IpTagArrayOutput) ToIpTagArrayOutputWithContext(ctx context.Context) IpTagArrayOutput {
	return o
}

func (o IpTagArrayOutput) Index(i pulumi.IntInput) IpTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpTag {
		return vs[0].([]IpTag)[vs[1].(int)]
	}).(IpTagOutput)
}

// Contains the IpTag associated with the object.
type IpTagResponse struct {
	// The IP tag type. Example: FirstPartyUsage.
	IpTagType *string `pulumi:"ipTagType"`
	// The value of the IP tag associated with the public IP. Example: SQL.
	Tag *string `pulumi:"tag"`
}

// IpTagResponseInput is an input type that accepts IpTagResponseArgs and IpTagResponseOutput values.
// You can construct a concrete instance of `IpTagResponseInput` via:
//
//          IpTagResponseArgs{...}
type IpTagResponseInput interface {
	pulumi.Input

	ToIpTagResponseOutput() IpTagResponseOutput
	ToIpTagResponseOutputWithContext(context.Context) IpTagResponseOutput
}

// Contains the IpTag associated with the object.
type IpTagResponseArgs struct {
	// The IP tag type. Example: FirstPartyUsage.
	IpTagType pulumi.StringPtrInput `pulumi:"ipTagType"`
	// The value of the IP tag associated with the public IP. Example: SQL.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (IpTagResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpTagResponse)(nil)).Elem()
}

func (i IpTagResponseArgs) ToIpTagResponseOutput() IpTagResponseOutput {
	return i.ToIpTagResponseOutputWithContext(context.Background())
}

func (i IpTagResponseArgs) ToIpTagResponseOutputWithContext(ctx context.Context) IpTagResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpTagResponseOutput)
}

// IpTagResponseArrayInput is an input type that accepts IpTagResponseArray and IpTagResponseArrayOutput values.
// You can construct a concrete instance of `IpTagResponseArrayInput` via:
//
//          IpTagResponseArray{ IpTagResponseArgs{...} }
type IpTagResponseArrayInput interface {
	pulumi.Input

	ToIpTagResponseArrayOutput() IpTagResponseArrayOutput
	ToIpTagResponseArrayOutputWithContext(context.Context) IpTagResponseArrayOutput
}

type IpTagResponseArray []IpTagResponseInput

func (IpTagResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpTagResponse)(nil)).Elem()
}

func (i IpTagResponseArray) ToIpTagResponseArrayOutput() IpTagResponseArrayOutput {
	return i.ToIpTagResponseArrayOutputWithContext(context.Background())
}

func (i IpTagResponseArray) ToIpTagResponseArrayOutputWithContext(ctx context.Context) IpTagResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpTagResponseArrayOutput)
}

// Contains the IpTag associated with the object.
type IpTagResponseOutput struct{ *pulumi.OutputState }

func (IpTagResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpTagResponse)(nil)).Elem()
}

func (o IpTagResponseOutput) ToIpTagResponseOutput() IpTagResponseOutput {
	return o
}

func (o IpTagResponseOutput) ToIpTagResponseOutputWithContext(ctx context.Context) IpTagResponseOutput {
	return o
}

// The IP tag type. Example: FirstPartyUsage.
func (o IpTagResponseOutput) IpTagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTagResponse) *string { return v.IpTagType }).(pulumi.StringPtrOutput)
}

// The value of the IP tag associated with the public IP. Example: SQL.
func (o IpTagResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTagResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type IpTagResponseArrayOutput struct{ *pulumi.OutputState }

func (IpTagResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpTagResponse)(nil)).Elem()
}

func (o IpTagResponseArrayOutput) ToIpTagResponseArrayOutput() IpTagResponseArrayOutput {
	return o
}

func (o IpTagResponseArrayOutput) ToIpTagResponseArrayOutputWithContext(ctx context.Context) IpTagResponseArrayOutput {
	return o
}

func (o IpTagResponseArrayOutput) Index(i pulumi.IntInput) IpTagResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpTagResponse {
		return vs[0].([]IpTagResponse)[vs[1].(int)]
	}).(IpTagResponseOutput)
}

// An IPSec Policy configuration for a virtual network gateway connection.
type IpsecPolicy struct {
	// The DH Group used in IKE Phase 1 for initial SA.
	DhGroup string `pulumi:"dhGroup"`
	// The IKE encryption algorithm (IKE phase 2).
	IkeEncryption string `pulumi:"ikeEncryption"`
	// The IKE integrity algorithm (IKE phase 2).
	IkeIntegrity string `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm (IKE phase 1).
	IpsecEncryption string `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm (IKE phase 1).
	IpsecIntegrity string `pulumi:"ipsecIntegrity"`
	// The Pfs Group used in IKE Phase 2 for new child SA.
	PfsGroup string `pulumi:"pfsGroup"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
	SaDataSizeKilobytes int `pulumi:"saDataSizeKilobytes"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
	SaLifeTimeSeconds int `pulumi:"saLifeTimeSeconds"`
}

// IpsecPolicyInput is an input type that accepts IpsecPolicyArgs and IpsecPolicyOutput values.
// You can construct a concrete instance of `IpsecPolicyInput` via:
//
//          IpsecPolicyArgs{...}
type IpsecPolicyInput interface {
	pulumi.Input

	ToIpsecPolicyOutput() IpsecPolicyOutput
	ToIpsecPolicyOutputWithContext(context.Context) IpsecPolicyOutput
}

// An IPSec Policy configuration for a virtual network gateway connection.
type IpsecPolicyArgs struct {
	// The DH Group used in IKE Phase 1 for initial SA.
	DhGroup pulumi.StringInput `pulumi:"dhGroup"`
	// The IKE encryption algorithm (IKE phase 2).
	IkeEncryption pulumi.StringInput `pulumi:"ikeEncryption"`
	// The IKE integrity algorithm (IKE phase 2).
	IkeIntegrity pulumi.StringInput `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm (IKE phase 1).
	IpsecEncryption pulumi.StringInput `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm (IKE phase 1).
	IpsecIntegrity pulumi.StringInput `pulumi:"ipsecIntegrity"`
	// The Pfs Group used in IKE Phase 2 for new child SA.
	PfsGroup pulumi.StringInput `pulumi:"pfsGroup"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
	SaDataSizeKilobytes pulumi.IntInput `pulumi:"saDataSizeKilobytes"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
	SaLifeTimeSeconds pulumi.IntInput `pulumi:"saLifeTimeSeconds"`
}

func (IpsecPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecPolicy)(nil)).Elem()
}

func (i IpsecPolicyArgs) ToIpsecPolicyOutput() IpsecPolicyOutput {
	return i.ToIpsecPolicyOutputWithContext(context.Background())
}

func (i IpsecPolicyArgs) ToIpsecPolicyOutputWithContext(ctx context.Context) IpsecPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecPolicyOutput)
}

// IpsecPolicyArrayInput is an input type that accepts IpsecPolicyArray and IpsecPolicyArrayOutput values.
// You can construct a concrete instance of `IpsecPolicyArrayInput` via:
//
//          IpsecPolicyArray{ IpsecPolicyArgs{...} }
type IpsecPolicyArrayInput interface {
	pulumi.Input

	ToIpsecPolicyArrayOutput() IpsecPolicyArrayOutput
	ToIpsecPolicyArrayOutputWithContext(context.Context) IpsecPolicyArrayOutput
}

type IpsecPolicyArray []IpsecPolicyInput

func (IpsecPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecPolicy)(nil)).Elem()
}

func (i IpsecPolicyArray) ToIpsecPolicyArrayOutput() IpsecPolicyArrayOutput {
	return i.ToIpsecPolicyArrayOutputWithContext(context.Background())
}

func (i IpsecPolicyArray) ToIpsecPolicyArrayOutputWithContext(ctx context.Context) IpsecPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecPolicyArrayOutput)
}

// An IPSec Policy configuration for a virtual network gateway connection.
type IpsecPolicyOutput struct{ *pulumi.OutputState }

func (IpsecPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecPolicy)(nil)).Elem()
}

func (o IpsecPolicyOutput) ToIpsecPolicyOutput() IpsecPolicyOutput {
	return o
}

func (o IpsecPolicyOutput) ToIpsecPolicyOutputWithContext(ctx context.Context) IpsecPolicyOutput {
	return o
}

// The DH Group used in IKE Phase 1 for initial SA.
func (o IpsecPolicyOutput) DhGroup() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.DhGroup }).(pulumi.StringOutput)
}

// The IKE encryption algorithm (IKE phase 2).
func (o IpsecPolicyOutput) IkeEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.IkeEncryption }).(pulumi.StringOutput)
}

// The IKE integrity algorithm (IKE phase 2).
func (o IpsecPolicyOutput) IkeIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.IkeIntegrity }).(pulumi.StringOutput)
}

// The IPSec encryption algorithm (IKE phase 1).
func (o IpsecPolicyOutput) IpsecEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.IpsecEncryption }).(pulumi.StringOutput)
}

// The IPSec integrity algorithm (IKE phase 1).
func (o IpsecPolicyOutput) IpsecIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.IpsecIntegrity }).(pulumi.StringOutput)
}

// The Pfs Group used in IKE Phase 2 for new child SA.
func (o IpsecPolicyOutput) PfsGroup() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.PfsGroup }).(pulumi.StringOutput)
}

// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
func (o IpsecPolicyOutput) SaDataSizeKilobytes() pulumi.IntOutput {
	return o.ApplyT(func(v IpsecPolicy) int { return v.SaDataSizeKilobytes }).(pulumi.IntOutput)
}

// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
func (o IpsecPolicyOutput) SaLifeTimeSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v IpsecPolicy) int { return v.SaLifeTimeSeconds }).(pulumi.IntOutput)
}

type IpsecPolicyArrayOutput struct{ *pulumi.OutputState }

func (IpsecPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecPolicy)(nil)).Elem()
}

func (o IpsecPolicyArrayOutput) ToIpsecPolicyArrayOutput() IpsecPolicyArrayOutput {
	return o
}

func (o IpsecPolicyArrayOutput) ToIpsecPolicyArrayOutputWithContext(ctx context.Context) IpsecPolicyArrayOutput {
	return o
}

func (o IpsecPolicyArrayOutput) Index(i pulumi.IntInput) IpsecPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsecPolicy {
		return vs[0].([]IpsecPolicy)[vs[1].(int)]
	}).(IpsecPolicyOutput)
}

// An IPSec Policy configuration for a virtual network gateway connection.
type IpsecPolicyResponse struct {
	// The DH Group used in IKE Phase 1 for initial SA.
	DhGroup string `pulumi:"dhGroup"`
	// The IKE encryption algorithm (IKE phase 2).
	IkeEncryption string `pulumi:"ikeEncryption"`
	// The IKE integrity algorithm (IKE phase 2).
	IkeIntegrity string `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm (IKE phase 1).
	IpsecEncryption string `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm (IKE phase 1).
	IpsecIntegrity string `pulumi:"ipsecIntegrity"`
	// The Pfs Group used in IKE Phase 2 for new child SA.
	PfsGroup string `pulumi:"pfsGroup"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
	SaDataSizeKilobytes int `pulumi:"saDataSizeKilobytes"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
	SaLifeTimeSeconds int `pulumi:"saLifeTimeSeconds"`
}

// IpsecPolicyResponseInput is an input type that accepts IpsecPolicyResponseArgs and IpsecPolicyResponseOutput values.
// You can construct a concrete instance of `IpsecPolicyResponseInput` via:
//
//          IpsecPolicyResponseArgs{...}
type IpsecPolicyResponseInput interface {
	pulumi.Input

	ToIpsecPolicyResponseOutput() IpsecPolicyResponseOutput
	ToIpsecPolicyResponseOutputWithContext(context.Context) IpsecPolicyResponseOutput
}

// An IPSec Policy configuration for a virtual network gateway connection.
type IpsecPolicyResponseArgs struct {
	// The DH Group used in IKE Phase 1 for initial SA.
	DhGroup pulumi.StringInput `pulumi:"dhGroup"`
	// The IKE encryption algorithm (IKE phase 2).
	IkeEncryption pulumi.StringInput `pulumi:"ikeEncryption"`
	// The IKE integrity algorithm (IKE phase 2).
	IkeIntegrity pulumi.StringInput `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm (IKE phase 1).
	IpsecEncryption pulumi.StringInput `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm (IKE phase 1).
	IpsecIntegrity pulumi.StringInput `pulumi:"ipsecIntegrity"`
	// The Pfs Group used in IKE Phase 2 for new child SA.
	PfsGroup pulumi.StringInput `pulumi:"pfsGroup"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
	SaDataSizeKilobytes pulumi.IntInput `pulumi:"saDataSizeKilobytes"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
	SaLifeTimeSeconds pulumi.IntInput `pulumi:"saLifeTimeSeconds"`
}

func (IpsecPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecPolicyResponse)(nil)).Elem()
}

func (i IpsecPolicyResponseArgs) ToIpsecPolicyResponseOutput() IpsecPolicyResponseOutput {
	return i.ToIpsecPolicyResponseOutputWithContext(context.Background())
}

func (i IpsecPolicyResponseArgs) ToIpsecPolicyResponseOutputWithContext(ctx context.Context) IpsecPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecPolicyResponseOutput)
}

// IpsecPolicyResponseArrayInput is an input type that accepts IpsecPolicyResponseArray and IpsecPolicyResponseArrayOutput values.
// You can construct a concrete instance of `IpsecPolicyResponseArrayInput` via:
//
//          IpsecPolicyResponseArray{ IpsecPolicyResponseArgs{...} }
type IpsecPolicyResponseArrayInput interface {
	pulumi.Input

	ToIpsecPolicyResponseArrayOutput() IpsecPolicyResponseArrayOutput
	ToIpsecPolicyResponseArrayOutputWithContext(context.Context) IpsecPolicyResponseArrayOutput
}

type IpsecPolicyResponseArray []IpsecPolicyResponseInput

func (IpsecPolicyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecPolicyResponse)(nil)).Elem()
}

func (i IpsecPolicyResponseArray) ToIpsecPolicyResponseArrayOutput() IpsecPolicyResponseArrayOutput {
	return i.ToIpsecPolicyResponseArrayOutputWithContext(context.Background())
}

func (i IpsecPolicyResponseArray) ToIpsecPolicyResponseArrayOutputWithContext(ctx context.Context) IpsecPolicyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecPolicyResponseArrayOutput)
}

// An IPSec Policy configuration for a virtual network gateway connection.
type IpsecPolicyResponseOutput struct{ *pulumi.OutputState }

func (IpsecPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecPolicyResponse)(nil)).Elem()
}

func (o IpsecPolicyResponseOutput) ToIpsecPolicyResponseOutput() IpsecPolicyResponseOutput {
	return o
}

func (o IpsecPolicyResponseOutput) ToIpsecPolicyResponseOutputWithContext(ctx context.Context) IpsecPolicyResponseOutput {
	return o
}

// The DH Group used in IKE Phase 1 for initial SA.
func (o IpsecPolicyResponseOutput) DhGroup() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.DhGroup }).(pulumi.StringOutput)
}

// The IKE encryption algorithm (IKE phase 2).
func (o IpsecPolicyResponseOutput) IkeEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.IkeEncryption }).(pulumi.StringOutput)
}

// The IKE integrity algorithm (IKE phase 2).
func (o IpsecPolicyResponseOutput) IkeIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.IkeIntegrity }).(pulumi.StringOutput)
}

// The IPSec encryption algorithm (IKE phase 1).
func (o IpsecPolicyResponseOutput) IpsecEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.IpsecEncryption }).(pulumi.StringOutput)
}

// The IPSec integrity algorithm (IKE phase 1).
func (o IpsecPolicyResponseOutput) IpsecIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.IpsecIntegrity }).(pulumi.StringOutput)
}

// The Pfs Group used in IKE Phase 2 for new child SA.
func (o IpsecPolicyResponseOutput) PfsGroup() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.PfsGroup }).(pulumi.StringOutput)
}

// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
func (o IpsecPolicyResponseOutput) SaDataSizeKilobytes() pulumi.IntOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) int { return v.SaDataSizeKilobytes }).(pulumi.IntOutput)
}

// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
func (o IpsecPolicyResponseOutput) SaLifeTimeSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) int { return v.SaLifeTimeSeconds }).(pulumi.IntOutput)
}

type IpsecPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (IpsecPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecPolicyResponse)(nil)).Elem()
}

func (o IpsecPolicyResponseArrayOutput) ToIpsecPolicyResponseArrayOutput() IpsecPolicyResponseArrayOutput {
	return o
}

func (o IpsecPolicyResponseArrayOutput) ToIpsecPolicyResponseArrayOutputWithContext(ctx context.Context) IpsecPolicyResponseArrayOutput {
	return o
}

func (o IpsecPolicyResponseArrayOutput) Index(i pulumi.IntInput) IpsecPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsecPolicyResponse {
		return vs[0].([]IpsecPolicyResponse)[vs[1].(int)]
	}).(IpsecPolicyResponseOutput)
}

// IPv6 Circuit Connection properties for global reach.
type Ipv6CircuitConnectionConfig struct {
	// /125 IP address space to carve out customer addresses for global reach.
	AddressPrefix *string `pulumi:"addressPrefix"`
}

// Ipv6CircuitConnectionConfigInput is an input type that accepts Ipv6CircuitConnectionConfigArgs and Ipv6CircuitConnectionConfigOutput values.
// You can construct a concrete instance of `Ipv6CircuitConnectionConfigInput` via:
//
//          Ipv6CircuitConnectionConfigArgs{...}
type Ipv6CircuitConnectionConfigInput interface {
	pulumi.Input

	ToIpv6CircuitConnectionConfigOutput() Ipv6CircuitConnectionConfigOutput
	ToIpv6CircuitConnectionConfigOutputWithContext(context.Context) Ipv6CircuitConnectionConfigOutput
}

// IPv6 Circuit Connection properties for global reach.
type Ipv6CircuitConnectionConfigArgs struct {
	// /125 IP address space to carve out customer addresses for global reach.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
}

func (Ipv6CircuitConnectionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6CircuitConnectionConfig)(nil)).Elem()
}

func (i Ipv6CircuitConnectionConfigArgs) ToIpv6CircuitConnectionConfigOutput() Ipv6CircuitConnectionConfigOutput {
	return i.ToIpv6CircuitConnectionConfigOutputWithContext(context.Background())
}

func (i Ipv6CircuitConnectionConfigArgs) ToIpv6CircuitConnectionConfigOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6CircuitConnectionConfigOutput)
}

func (i Ipv6CircuitConnectionConfigArgs) ToIpv6CircuitConnectionConfigPtrOutput() Ipv6CircuitConnectionConfigPtrOutput {
	return i.ToIpv6CircuitConnectionConfigPtrOutputWithContext(context.Background())
}

func (i Ipv6CircuitConnectionConfigArgs) ToIpv6CircuitConnectionConfigPtrOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6CircuitConnectionConfigOutput).ToIpv6CircuitConnectionConfigPtrOutputWithContext(ctx)
}

// Ipv6CircuitConnectionConfigPtrInput is an input type that accepts Ipv6CircuitConnectionConfigArgs, Ipv6CircuitConnectionConfigPtr and Ipv6CircuitConnectionConfigPtrOutput values.
// You can construct a concrete instance of `Ipv6CircuitConnectionConfigPtrInput` via:
//
//          Ipv6CircuitConnectionConfigArgs{...}
//
//  or:
//
//          nil
type Ipv6CircuitConnectionConfigPtrInput interface {
	pulumi.Input

	ToIpv6CircuitConnectionConfigPtrOutput() Ipv6CircuitConnectionConfigPtrOutput
	ToIpv6CircuitConnectionConfigPtrOutputWithContext(context.Context) Ipv6CircuitConnectionConfigPtrOutput
}

type ipv6CircuitConnectionConfigPtrType Ipv6CircuitConnectionConfigArgs

func Ipv6CircuitConnectionConfigPtr(v *Ipv6CircuitConnectionConfigArgs) Ipv6CircuitConnectionConfigPtrInput {
	return (*ipv6CircuitConnectionConfigPtrType)(v)
}

func (*ipv6CircuitConnectionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6CircuitConnectionConfig)(nil)).Elem()
}

func (i *ipv6CircuitConnectionConfigPtrType) ToIpv6CircuitConnectionConfigPtrOutput() Ipv6CircuitConnectionConfigPtrOutput {
	return i.ToIpv6CircuitConnectionConfigPtrOutputWithContext(context.Background())
}

func (i *ipv6CircuitConnectionConfigPtrType) ToIpv6CircuitConnectionConfigPtrOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6CircuitConnectionConfigPtrOutput)
}

// IPv6 Circuit Connection properties for global reach.
type Ipv6CircuitConnectionConfigOutput struct{ *pulumi.OutputState }

func (Ipv6CircuitConnectionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6CircuitConnectionConfig)(nil)).Elem()
}

func (o Ipv6CircuitConnectionConfigOutput) ToIpv6CircuitConnectionConfigOutput() Ipv6CircuitConnectionConfigOutput {
	return o
}

func (o Ipv6CircuitConnectionConfigOutput) ToIpv6CircuitConnectionConfigOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigOutput {
	return o
}

func (o Ipv6CircuitConnectionConfigOutput) ToIpv6CircuitConnectionConfigPtrOutput() Ipv6CircuitConnectionConfigPtrOutput {
	return o.ToIpv6CircuitConnectionConfigPtrOutputWithContext(context.Background())
}

func (o Ipv6CircuitConnectionConfigOutput) ToIpv6CircuitConnectionConfigPtrOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigPtrOutput {
	return o.ApplyT(func(v Ipv6CircuitConnectionConfig) *Ipv6CircuitConnectionConfig {
		return &v
	}).(Ipv6CircuitConnectionConfigPtrOutput)
}

// /125 IP address space to carve out customer addresses for global reach.
func (o Ipv6CircuitConnectionConfigOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6CircuitConnectionConfig) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

type Ipv6CircuitConnectionConfigPtrOutput struct{ *pulumi.OutputState }

func (Ipv6CircuitConnectionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6CircuitConnectionConfig)(nil)).Elem()
}

func (o Ipv6CircuitConnectionConfigPtrOutput) ToIpv6CircuitConnectionConfigPtrOutput() Ipv6CircuitConnectionConfigPtrOutput {
	return o
}

func (o Ipv6CircuitConnectionConfigPtrOutput) ToIpv6CircuitConnectionConfigPtrOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigPtrOutput {
	return o
}

func (o Ipv6CircuitConnectionConfigPtrOutput) Elem() Ipv6CircuitConnectionConfigOutput {
	return o.ApplyT(func(v *Ipv6CircuitConnectionConfig) Ipv6CircuitConnectionConfig { return *v }).(Ipv6CircuitConnectionConfigOutput)
}

// /125 IP address space to carve out customer addresses for global reach.
func (o Ipv6CircuitConnectionConfigPtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6CircuitConnectionConfig) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// IPv6 Circuit Connection properties for global reach.
type Ipv6CircuitConnectionConfigResponse struct {
	// /125 IP address space to carve out customer addresses for global reach.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// Express Route Circuit connection state.
	CircuitConnectionStatus string `pulumi:"circuitConnectionStatus"`
}

// Ipv6CircuitConnectionConfigResponseInput is an input type that accepts Ipv6CircuitConnectionConfigResponseArgs and Ipv6CircuitConnectionConfigResponseOutput values.
// You can construct a concrete instance of `Ipv6CircuitConnectionConfigResponseInput` via:
//
//          Ipv6CircuitConnectionConfigResponseArgs{...}
type Ipv6CircuitConnectionConfigResponseInput interface {
	pulumi.Input

	ToIpv6CircuitConnectionConfigResponseOutput() Ipv6CircuitConnectionConfigResponseOutput
	ToIpv6CircuitConnectionConfigResponseOutputWithContext(context.Context) Ipv6CircuitConnectionConfigResponseOutput
}

// IPv6 Circuit Connection properties for global reach.
type Ipv6CircuitConnectionConfigResponseArgs struct {
	// /125 IP address space to carve out customer addresses for global reach.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// Express Route Circuit connection state.
	CircuitConnectionStatus pulumi.StringInput `pulumi:"circuitConnectionStatus"`
}

func (Ipv6CircuitConnectionConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6CircuitConnectionConfigResponse)(nil)).Elem()
}

func (i Ipv6CircuitConnectionConfigResponseArgs) ToIpv6CircuitConnectionConfigResponseOutput() Ipv6CircuitConnectionConfigResponseOutput {
	return i.ToIpv6CircuitConnectionConfigResponseOutputWithContext(context.Background())
}

func (i Ipv6CircuitConnectionConfigResponseArgs) ToIpv6CircuitConnectionConfigResponseOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6CircuitConnectionConfigResponseOutput)
}

func (i Ipv6CircuitConnectionConfigResponseArgs) ToIpv6CircuitConnectionConfigResponsePtrOutput() Ipv6CircuitConnectionConfigResponsePtrOutput {
	return i.ToIpv6CircuitConnectionConfigResponsePtrOutputWithContext(context.Background())
}

func (i Ipv6CircuitConnectionConfigResponseArgs) ToIpv6CircuitConnectionConfigResponsePtrOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6CircuitConnectionConfigResponseOutput).ToIpv6CircuitConnectionConfigResponsePtrOutputWithContext(ctx)
}

// Ipv6CircuitConnectionConfigResponsePtrInput is an input type that accepts Ipv6CircuitConnectionConfigResponseArgs, Ipv6CircuitConnectionConfigResponsePtr and Ipv6CircuitConnectionConfigResponsePtrOutput values.
// You can construct a concrete instance of `Ipv6CircuitConnectionConfigResponsePtrInput` via:
//
//          Ipv6CircuitConnectionConfigResponseArgs{...}
//
//  or:
//
//          nil
type Ipv6CircuitConnectionConfigResponsePtrInput interface {
	pulumi.Input

	ToIpv6CircuitConnectionConfigResponsePtrOutput() Ipv6CircuitConnectionConfigResponsePtrOutput
	ToIpv6CircuitConnectionConfigResponsePtrOutputWithContext(context.Context) Ipv6CircuitConnectionConfigResponsePtrOutput
}

type ipv6CircuitConnectionConfigResponsePtrType Ipv6CircuitConnectionConfigResponseArgs

func Ipv6CircuitConnectionConfigResponsePtr(v *Ipv6CircuitConnectionConfigResponseArgs) Ipv6CircuitConnectionConfigResponsePtrInput {
	return (*ipv6CircuitConnectionConfigResponsePtrType)(v)
}

func (*ipv6CircuitConnectionConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6CircuitConnectionConfigResponse)(nil)).Elem()
}

func (i *ipv6CircuitConnectionConfigResponsePtrType) ToIpv6CircuitConnectionConfigResponsePtrOutput() Ipv6CircuitConnectionConfigResponsePtrOutput {
	return i.ToIpv6CircuitConnectionConfigResponsePtrOutputWithContext(context.Background())
}

func (i *ipv6CircuitConnectionConfigResponsePtrType) ToIpv6CircuitConnectionConfigResponsePtrOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6CircuitConnectionConfigResponsePtrOutput)
}

// IPv6 Circuit Connection properties for global reach.
type Ipv6CircuitConnectionConfigResponseOutput struct{ *pulumi.OutputState }

func (Ipv6CircuitConnectionConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6CircuitConnectionConfigResponse)(nil)).Elem()
}

func (o Ipv6CircuitConnectionConfigResponseOutput) ToIpv6CircuitConnectionConfigResponseOutput() Ipv6CircuitConnectionConfigResponseOutput {
	return o
}

func (o Ipv6CircuitConnectionConfigResponseOutput) ToIpv6CircuitConnectionConfigResponseOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigResponseOutput {
	return o
}

func (o Ipv6CircuitConnectionConfigResponseOutput) ToIpv6CircuitConnectionConfigResponsePtrOutput() Ipv6CircuitConnectionConfigResponsePtrOutput {
	return o.ToIpv6CircuitConnectionConfigResponsePtrOutputWithContext(context.Background())
}

func (o Ipv6CircuitConnectionConfigResponseOutput) ToIpv6CircuitConnectionConfigResponsePtrOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigResponsePtrOutput {
	return o.ApplyT(func(v Ipv6CircuitConnectionConfigResponse) *Ipv6CircuitConnectionConfigResponse {
		return &v
	}).(Ipv6CircuitConnectionConfigResponsePtrOutput)
}

// /125 IP address space to carve out customer addresses for global reach.
func (o Ipv6CircuitConnectionConfigResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6CircuitConnectionConfigResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// Express Route Circuit connection state.
func (o Ipv6CircuitConnectionConfigResponseOutput) CircuitConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v Ipv6CircuitConnectionConfigResponse) string { return v.CircuitConnectionStatus }).(pulumi.StringOutput)
}

type Ipv6CircuitConnectionConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (Ipv6CircuitConnectionConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6CircuitConnectionConfigResponse)(nil)).Elem()
}

func (o Ipv6CircuitConnectionConfigResponsePtrOutput) ToIpv6CircuitConnectionConfigResponsePtrOutput() Ipv6CircuitConnectionConfigResponsePtrOutput {
	return o
}

func (o Ipv6CircuitConnectionConfigResponsePtrOutput) ToIpv6CircuitConnectionConfigResponsePtrOutputWithContext(ctx context.Context) Ipv6CircuitConnectionConfigResponsePtrOutput {
	return o
}

func (o Ipv6CircuitConnectionConfigResponsePtrOutput) Elem() Ipv6CircuitConnectionConfigResponseOutput {
	return o.ApplyT(func(v *Ipv6CircuitConnectionConfigResponse) Ipv6CircuitConnectionConfigResponse { return *v }).(Ipv6CircuitConnectionConfigResponseOutput)
}

// /125 IP address space to carve out customer addresses for global reach.
func (o Ipv6CircuitConnectionConfigResponsePtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6CircuitConnectionConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// Express Route Circuit connection state.
func (o Ipv6CircuitConnectionConfigResponsePtrOutput) CircuitConnectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6CircuitConnectionConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.CircuitConnectionStatus
	}).(pulumi.StringPtrOutput)
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfig struct {
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfig `pulumi:"microsoftPeeringConfig"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// The reference to the RouteFilter resource.
	RouteFilter *SubResource `pulumi:"routeFilter"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The state of peering.
	State *string `pulumi:"state"`
}

// Ipv6ExpressRouteCircuitPeeringConfigInput is an input type that accepts Ipv6ExpressRouteCircuitPeeringConfigArgs and Ipv6ExpressRouteCircuitPeeringConfigOutput values.
// You can construct a concrete instance of `Ipv6ExpressRouteCircuitPeeringConfigInput` via:
//
//          Ipv6ExpressRouteCircuitPeeringConfigArgs{...}
type Ipv6ExpressRouteCircuitPeeringConfigInput interface {
	pulumi.Input

	ToIpv6ExpressRouteCircuitPeeringConfigOutput() Ipv6ExpressRouteCircuitPeeringConfigOutput
	ToIpv6ExpressRouteCircuitPeeringConfigOutputWithContext(context.Context) Ipv6ExpressRouteCircuitPeeringConfigOutput
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfigArgs struct {
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig ExpressRouteCircuitPeeringConfigPtrInput `pulumi:"microsoftPeeringConfig"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"primaryPeerAddressPrefix"`
	// The reference to the RouteFilter resource.
	RouteFilter SubResourcePtrInput `pulumi:"routeFilter"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"secondaryPeerAddressPrefix"`
	// The state of peering.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (Ipv6ExpressRouteCircuitPeeringConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (i Ipv6ExpressRouteCircuitPeeringConfigArgs) ToIpv6ExpressRouteCircuitPeeringConfigOutput() Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigOutputWithContext(context.Background())
}

func (i Ipv6ExpressRouteCircuitPeeringConfigArgs) ToIpv6ExpressRouteCircuitPeeringConfigOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigOutput)
}

func (i Ipv6ExpressRouteCircuitPeeringConfigArgs) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (i Ipv6ExpressRouteCircuitPeeringConfigArgs) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigOutput).ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx)
}

// Ipv6ExpressRouteCircuitPeeringConfigPtrInput is an input type that accepts Ipv6ExpressRouteCircuitPeeringConfigArgs, Ipv6ExpressRouteCircuitPeeringConfigPtr and Ipv6ExpressRouteCircuitPeeringConfigPtrOutput values.
// You can construct a concrete instance of `Ipv6ExpressRouteCircuitPeeringConfigPtrInput` via:
//
//          Ipv6ExpressRouteCircuitPeeringConfigArgs{...}
//
//  or:
//
//          nil
type Ipv6ExpressRouteCircuitPeeringConfigPtrInput interface {
	pulumi.Input

	ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput
	ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput
}

type ipv6ExpressRouteCircuitPeeringConfigPtrType Ipv6ExpressRouteCircuitPeeringConfigArgs

func Ipv6ExpressRouteCircuitPeeringConfigPtr(v *Ipv6ExpressRouteCircuitPeeringConfigArgs) Ipv6ExpressRouteCircuitPeeringConfigPtrInput {
	return (*ipv6ExpressRouteCircuitPeeringConfigPtrType)(v)
}

func (*ipv6ExpressRouteCircuitPeeringConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (i *ipv6ExpressRouteCircuitPeeringConfigPtrType) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (i *ipv6ExpressRouteCircuitPeeringConfigPtrType) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigPtrOutput)
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfigOutput struct{ *pulumi.OutputState }

func (Ipv6ExpressRouteCircuitPeeringConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) ToIpv6ExpressRouteCircuitPeeringConfigOutput() Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) ToIpv6ExpressRouteCircuitPeeringConfigOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *Ipv6ExpressRouteCircuitPeeringConfig {
		return &v
	}).(Ipv6ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The Microsoft peering configuration.
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *ExpressRouteCircuitPeeringConfig {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The primary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The reference to the RouteFilter resource.
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) RouteFilter() SubResourcePtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *SubResource { return v.RouteFilter }).(SubResourcePtrOutput)
}

// The secondary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The state of peering.
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *string { return v.State }).(pulumi.StringPtrOutput)
}

type Ipv6ExpressRouteCircuitPeeringConfigPtrOutput struct{ *pulumi.OutputState }

func (Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) Elem() Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) Ipv6ExpressRouteCircuitPeeringConfig { return *v }).(Ipv6ExpressRouteCircuitPeeringConfigOutput)
}

// The Microsoft peering configuration.
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *ExpressRouteCircuitPeeringConfig {
		if v == nil {
			return nil
		}
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The primary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The reference to the RouteFilter resource.
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) RouteFilter() SubResourcePtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *SubResource {
		if v == nil {
			return nil
		}
		return v.RouteFilter
	}).(SubResourcePtrOutput)
}

// The secondary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The state of peering.
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfigResponse struct {
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfigResponse `pulumi:"microsoftPeeringConfig"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// The reference to the RouteFilter resource.
	RouteFilter *SubResourceResponse `pulumi:"routeFilter"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The state of peering.
	State *string `pulumi:"state"`
}

// Ipv6ExpressRouteCircuitPeeringConfigResponseInput is an input type that accepts Ipv6ExpressRouteCircuitPeeringConfigResponseArgs and Ipv6ExpressRouteCircuitPeeringConfigResponseOutput values.
// You can construct a concrete instance of `Ipv6ExpressRouteCircuitPeeringConfigResponseInput` via:
//
//          Ipv6ExpressRouteCircuitPeeringConfigResponseArgs{...}
type Ipv6ExpressRouteCircuitPeeringConfigResponseInput interface {
	pulumi.Input

	ToIpv6ExpressRouteCircuitPeeringConfigResponseOutput() Ipv6ExpressRouteCircuitPeeringConfigResponseOutput
	ToIpv6ExpressRouteCircuitPeeringConfigResponseOutputWithContext(context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponseOutput
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfigResponseArgs struct {
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig ExpressRouteCircuitPeeringConfigResponsePtrInput `pulumi:"microsoftPeeringConfig"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"primaryPeerAddressPrefix"`
	// The reference to the RouteFilter resource.
	RouteFilter SubResourceResponsePtrInput `pulumi:"routeFilter"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"secondaryPeerAddressPrefix"`
	// The state of peering.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (Ipv6ExpressRouteCircuitPeeringConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (i Ipv6ExpressRouteCircuitPeeringConfigResponseArgs) ToIpv6ExpressRouteCircuitPeeringConfigResponseOutput() Ipv6ExpressRouteCircuitPeeringConfigResponseOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigResponseOutputWithContext(context.Background())
}

func (i Ipv6ExpressRouteCircuitPeeringConfigResponseArgs) ToIpv6ExpressRouteCircuitPeeringConfigResponseOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigResponseOutput)
}

func (i Ipv6ExpressRouteCircuitPeeringConfigResponseArgs) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutput() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (i Ipv6ExpressRouteCircuitPeeringConfigResponseArgs) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigResponseOutput).ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx)
}

// Ipv6ExpressRouteCircuitPeeringConfigResponsePtrInput is an input type that accepts Ipv6ExpressRouteCircuitPeeringConfigResponseArgs, Ipv6ExpressRouteCircuitPeeringConfigResponsePtr and Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput values.
// You can construct a concrete instance of `Ipv6ExpressRouteCircuitPeeringConfigResponsePtrInput` via:
//
//          Ipv6ExpressRouteCircuitPeeringConfigResponseArgs{...}
//
//  or:
//
//          nil
type Ipv6ExpressRouteCircuitPeeringConfigResponsePtrInput interface {
	pulumi.Input

	ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutput() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput
	ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput
}

type ipv6ExpressRouteCircuitPeeringConfigResponsePtrType Ipv6ExpressRouteCircuitPeeringConfigResponseArgs

func Ipv6ExpressRouteCircuitPeeringConfigResponsePtr(v *Ipv6ExpressRouteCircuitPeeringConfigResponseArgs) Ipv6ExpressRouteCircuitPeeringConfigResponsePtrInput {
	return (*ipv6ExpressRouteCircuitPeeringConfigResponsePtrType)(v)
}

func (*ipv6ExpressRouteCircuitPeeringConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (i *ipv6ExpressRouteCircuitPeeringConfigResponsePtrType) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutput() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (i *ipv6ExpressRouteCircuitPeeringConfigResponsePtrType) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfigResponseOutput struct{ *pulumi.OutputState }

func (Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponseOutput() Ipv6ExpressRouteCircuitPeeringConfigResponseOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponseOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponseOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutput() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *Ipv6ExpressRouteCircuitPeeringConfigResponse {
		return &v
	}).(Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The Microsoft peering configuration.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *ExpressRouteCircuitPeeringConfigResponse {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The primary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The reference to the RouteFilter resource.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) RouteFilter() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *SubResourceResponse { return v.RouteFilter }).(SubResourceResponsePtrOutput)
}

// The secondary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The state of peering.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutput() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) Elem() Ipv6ExpressRouteCircuitPeeringConfigResponseOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) Ipv6ExpressRouteCircuitPeeringConfigResponse {
		return *v
	}).(Ipv6ExpressRouteCircuitPeeringConfigResponseOutput)
}

// The Microsoft peering configuration.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *ExpressRouteCircuitPeeringConfigResponse {
		if v == nil {
			return nil
		}
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The primary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The reference to the RouteFilter resource.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) RouteFilter() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.RouteFilter
	}).(SubResourceResponsePtrOutput)
}

// The secondary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The state of peering.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// The Key Vault containing the SSL certificate
type KeyVaultCertificateSourceParametersResponseVault struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// KeyVaultCertificateSourceParametersResponseVaultInput is an input type that accepts KeyVaultCertificateSourceParametersResponseVaultArgs and KeyVaultCertificateSourceParametersResponseVaultOutput values.
// You can construct a concrete instance of `KeyVaultCertificateSourceParametersResponseVaultInput` via:
//
//          KeyVaultCertificateSourceParametersResponseVaultArgs{...}
type KeyVaultCertificateSourceParametersResponseVaultInput interface {
	pulumi.Input

	ToKeyVaultCertificateSourceParametersResponseVaultOutput() KeyVaultCertificateSourceParametersResponseVaultOutput
	ToKeyVaultCertificateSourceParametersResponseVaultOutputWithContext(context.Context) KeyVaultCertificateSourceParametersResponseVaultOutput
}

// The Key Vault containing the SSL certificate
type KeyVaultCertificateSourceParametersResponseVaultArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (KeyVaultCertificateSourceParametersResponseVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultCertificateSourceParametersResponseVault)(nil)).Elem()
}

func (i KeyVaultCertificateSourceParametersResponseVaultArgs) ToKeyVaultCertificateSourceParametersResponseVaultOutput() KeyVaultCertificateSourceParametersResponseVaultOutput {
	return i.ToKeyVaultCertificateSourceParametersResponseVaultOutputWithContext(context.Background())
}

func (i KeyVaultCertificateSourceParametersResponseVaultArgs) ToKeyVaultCertificateSourceParametersResponseVaultOutputWithContext(ctx context.Context) KeyVaultCertificateSourceParametersResponseVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultCertificateSourceParametersResponseVaultOutput)
}

func (i KeyVaultCertificateSourceParametersResponseVaultArgs) ToKeyVaultCertificateSourceParametersResponseVaultPtrOutput() KeyVaultCertificateSourceParametersResponseVaultPtrOutput {
	return i.ToKeyVaultCertificateSourceParametersResponseVaultPtrOutputWithContext(context.Background())
}

func (i KeyVaultCertificateSourceParametersResponseVaultArgs) ToKeyVaultCertificateSourceParametersResponseVaultPtrOutputWithContext(ctx context.Context) KeyVaultCertificateSourceParametersResponseVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultCertificateSourceParametersResponseVaultOutput).ToKeyVaultCertificateSourceParametersResponseVaultPtrOutputWithContext(ctx)
}

// KeyVaultCertificateSourceParametersResponseVaultPtrInput is an input type that accepts KeyVaultCertificateSourceParametersResponseVaultArgs, KeyVaultCertificateSourceParametersResponseVaultPtr and KeyVaultCertificateSourceParametersResponseVaultPtrOutput values.
// You can construct a concrete instance of `KeyVaultCertificateSourceParametersResponseVaultPtrInput` via:
//
//          KeyVaultCertificateSourceParametersResponseVaultArgs{...}
//
//  or:
//
//          nil
type KeyVaultCertificateSourceParametersResponseVaultPtrInput interface {
	pulumi.Input

	ToKeyVaultCertificateSourceParametersResponseVaultPtrOutput() KeyVaultCertificateSourceParametersResponseVaultPtrOutput
	ToKeyVaultCertificateSourceParametersResponseVaultPtrOutputWithContext(context.Context) KeyVaultCertificateSourceParametersResponseVaultPtrOutput
}

type keyVaultCertificateSourceParametersResponseVaultPtrType KeyVaultCertificateSourceParametersResponseVaultArgs

func KeyVaultCertificateSourceParametersResponseVaultPtr(v *KeyVaultCertificateSourceParametersResponseVaultArgs) KeyVaultCertificateSourceParametersResponseVaultPtrInput {
	return (*keyVaultCertificateSourceParametersResponseVaultPtrType)(v)
}

func (*keyVaultCertificateSourceParametersResponseVaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultCertificateSourceParametersResponseVault)(nil)).Elem()
}

func (i *keyVaultCertificateSourceParametersResponseVaultPtrType) ToKeyVaultCertificateSourceParametersResponseVaultPtrOutput() KeyVaultCertificateSourceParametersResponseVaultPtrOutput {
	return i.ToKeyVaultCertificateSourceParametersResponseVaultPtrOutputWithContext(context.Background())
}

func (i *keyVaultCertificateSourceParametersResponseVaultPtrType) ToKeyVaultCertificateSourceParametersResponseVaultPtrOutputWithContext(ctx context.Context) KeyVaultCertificateSourceParametersResponseVaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyVaultCertificateSourceParametersResponseVaultPtrOutput)
}

// The Key Vault containing the SSL certificate
type KeyVaultCertificateSourceParametersResponseVaultOutput struct{ *pulumi.OutputState }

func (KeyVaultCertificateSourceParametersResponseVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyVaultCertificateSourceParametersResponseVault)(nil)).Elem()
}

func (o KeyVaultCertificateSourceParametersResponseVaultOutput) ToKeyVaultCertificateSourceParametersResponseVaultOutput() KeyVaultCertificateSourceParametersResponseVaultOutput {
	return o
}

func (o KeyVaultCertificateSourceParametersResponseVaultOutput) ToKeyVaultCertificateSourceParametersResponseVaultOutputWithContext(ctx context.Context) KeyVaultCertificateSourceParametersResponseVaultOutput {
	return o
}

func (o KeyVaultCertificateSourceParametersResponseVaultOutput) ToKeyVaultCertificateSourceParametersResponseVaultPtrOutput() KeyVaultCertificateSourceParametersResponseVaultPtrOutput {
	return o.ToKeyVaultCertificateSourceParametersResponseVaultPtrOutputWithContext(context.Background())
}

func (o KeyVaultCertificateSourceParametersResponseVaultOutput) ToKeyVaultCertificateSourceParametersResponseVaultPtrOutputWithContext(ctx context.Context) KeyVaultCertificateSourceParametersResponseVaultPtrOutput {
	return o.ApplyT(func(v KeyVaultCertificateSourceParametersResponseVault) *KeyVaultCertificateSourceParametersResponseVault {
		return &v
	}).(KeyVaultCertificateSourceParametersResponseVaultPtrOutput)
}

// Resource ID.
func (o KeyVaultCertificateSourceParametersResponseVaultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyVaultCertificateSourceParametersResponseVault) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type KeyVaultCertificateSourceParametersResponseVaultPtrOutput struct{ *pulumi.OutputState }

func (KeyVaultCertificateSourceParametersResponseVaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyVaultCertificateSourceParametersResponseVault)(nil)).Elem()
}

func (o KeyVaultCertificateSourceParametersResponseVaultPtrOutput) ToKeyVaultCertificateSourceParametersResponseVaultPtrOutput() KeyVaultCertificateSourceParametersResponseVaultPtrOutput {
	return o
}

func (o KeyVaultCertificateSourceParametersResponseVaultPtrOutput) ToKeyVaultCertificateSourceParametersResponseVaultPtrOutputWithContext(ctx context.Context) KeyVaultCertificateSourceParametersResponseVaultPtrOutput {
	return o
}

func (o KeyVaultCertificateSourceParametersResponseVaultPtrOutput) Elem() KeyVaultCertificateSourceParametersResponseVaultOutput {
	return o.ApplyT(func(v *KeyVaultCertificateSourceParametersResponseVault) KeyVaultCertificateSourceParametersResponseVault {
		return *v
	}).(KeyVaultCertificateSourceParametersResponseVaultOutput)
}

// Resource ID.
func (o KeyVaultCertificateSourceParametersResponseVaultPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyVaultCertificateSourceParametersResponseVault) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Load balancer backend addresses.
type LoadBalancerBackendAddress struct {
	// IP Address belonging to the referenced virtual network.
	IpAddress *string `pulumi:"ipAddress"`
	// Reference to the frontend ip address configuration defined in regional loadbalancer.
	LoadBalancerFrontendIPConfiguration *SubResource `pulumi:"loadBalancerFrontendIPConfiguration"`
	// Name of the backend address.
	Name *string `pulumi:"name"`
	// Reference to an existing virtual network.
	VirtualNetwork *SubResource `pulumi:"virtualNetwork"`
}

// LoadBalancerBackendAddressInput is an input type that accepts LoadBalancerBackendAddressArgs and LoadBalancerBackendAddressOutput values.
// You can construct a concrete instance of `LoadBalancerBackendAddressInput` via:
//
//          LoadBalancerBackendAddressArgs{...}
type LoadBalancerBackendAddressInput interface {
	pulumi.Input

	ToLoadBalancerBackendAddressOutput() LoadBalancerBackendAddressOutput
	ToLoadBalancerBackendAddressOutputWithContext(context.Context) LoadBalancerBackendAddressOutput
}

// Load balancer backend addresses.
type LoadBalancerBackendAddressArgs struct {
	// IP Address belonging to the referenced virtual network.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Reference to the frontend ip address configuration defined in regional loadbalancer.
	LoadBalancerFrontendIPConfiguration SubResourcePtrInput `pulumi:"loadBalancerFrontendIPConfiguration"`
	// Name of the backend address.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference to an existing virtual network.
	VirtualNetwork SubResourcePtrInput `pulumi:"virtualNetwork"`
}

func (LoadBalancerBackendAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendAddress)(nil)).Elem()
}

func (i LoadBalancerBackendAddressArgs) ToLoadBalancerBackendAddressOutput() LoadBalancerBackendAddressOutput {
	return i.ToLoadBalancerBackendAddressOutputWithContext(context.Background())
}

func (i LoadBalancerBackendAddressArgs) ToLoadBalancerBackendAddressOutputWithContext(ctx context.Context) LoadBalancerBackendAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendAddressOutput)
}

// LoadBalancerBackendAddressArrayInput is an input type that accepts LoadBalancerBackendAddressArray and LoadBalancerBackendAddressArrayOutput values.
// You can construct a concrete instance of `LoadBalancerBackendAddressArrayInput` via:
//
//          LoadBalancerBackendAddressArray{ LoadBalancerBackendAddressArgs{...} }
type LoadBalancerBackendAddressArrayInput interface {
	pulumi.Input

	ToLoadBalancerBackendAddressArrayOutput() LoadBalancerBackendAddressArrayOutput
	ToLoadBalancerBackendAddressArrayOutputWithContext(context.Context) LoadBalancerBackendAddressArrayOutput
}

type LoadBalancerBackendAddressArray []LoadBalancerBackendAddressInput

func (LoadBalancerBackendAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackendAddress)(nil)).Elem()
}

func (i LoadBalancerBackendAddressArray) ToLoadBalancerBackendAddressArrayOutput() LoadBalancerBackendAddressArrayOutput {
	return i.ToLoadBalancerBackendAddressArrayOutputWithContext(context.Background())
}

func (i LoadBalancerBackendAddressArray) ToLoadBalancerBackendAddressArrayOutputWithContext(ctx context.Context) LoadBalancerBackendAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendAddressArrayOutput)
}

// Load balancer backend addresses.
type LoadBalancerBackendAddressOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendAddress)(nil)).Elem()
}

func (o LoadBalancerBackendAddressOutput) ToLoadBalancerBackendAddressOutput() LoadBalancerBackendAddressOutput {
	return o
}

func (o LoadBalancerBackendAddressOutput) ToLoadBalancerBackendAddressOutputWithContext(ctx context.Context) LoadBalancerBackendAddressOutput {
	return o
}

// IP Address belonging to the referenced virtual network.
func (o LoadBalancerBackendAddressOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddress) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Reference to the frontend ip address configuration defined in regional loadbalancer.
func (o LoadBalancerBackendAddressOutput) LoadBalancerFrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddress) *SubResource { return v.LoadBalancerFrontendIPConfiguration }).(SubResourcePtrOutput)
}

// Name of the backend address.
func (o LoadBalancerBackendAddressOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddress) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to an existing virtual network.
func (o LoadBalancerBackendAddressOutput) VirtualNetwork() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddress) *SubResource { return v.VirtualNetwork }).(SubResourcePtrOutput)
}

type LoadBalancerBackendAddressArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackendAddress)(nil)).Elem()
}

func (o LoadBalancerBackendAddressArrayOutput) ToLoadBalancerBackendAddressArrayOutput() LoadBalancerBackendAddressArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressArrayOutput) ToLoadBalancerBackendAddressArrayOutputWithContext(ctx context.Context) LoadBalancerBackendAddressArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressArrayOutput) Index(i pulumi.IntInput) LoadBalancerBackendAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerBackendAddress {
		return vs[0].([]LoadBalancerBackendAddress)[vs[1].(int)]
	}).(LoadBalancerBackendAddressOutput)
}

// Load balancer backend addresses.
type LoadBalancerBackendAddressResponse struct {
	// IP Address belonging to the referenced virtual network.
	IpAddress *string `pulumi:"ipAddress"`
	// Reference to the frontend ip address configuration defined in regional loadbalancer.
	LoadBalancerFrontendIPConfiguration *SubResourceResponse `pulumi:"loadBalancerFrontendIPConfiguration"`
	// Name of the backend address.
	Name *string `pulumi:"name"`
	// Reference to IP address defined in network interfaces.
	NetworkInterfaceIPConfiguration SubResourceResponse `pulumi:"networkInterfaceIPConfiguration"`
	// Reference to an existing virtual network.
	VirtualNetwork *SubResourceResponse `pulumi:"virtualNetwork"`
}

// LoadBalancerBackendAddressResponseInput is an input type that accepts LoadBalancerBackendAddressResponseArgs and LoadBalancerBackendAddressResponseOutput values.
// You can construct a concrete instance of `LoadBalancerBackendAddressResponseInput` via:
//
//          LoadBalancerBackendAddressResponseArgs{...}
type LoadBalancerBackendAddressResponseInput interface {
	pulumi.Input

	ToLoadBalancerBackendAddressResponseOutput() LoadBalancerBackendAddressResponseOutput
	ToLoadBalancerBackendAddressResponseOutputWithContext(context.Context) LoadBalancerBackendAddressResponseOutput
}

// Load balancer backend addresses.
type LoadBalancerBackendAddressResponseArgs struct {
	// IP Address belonging to the referenced virtual network.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// Reference to the frontend ip address configuration defined in regional loadbalancer.
	LoadBalancerFrontendIPConfiguration SubResourceResponsePtrInput `pulumi:"loadBalancerFrontendIPConfiguration"`
	// Name of the backend address.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference to IP address defined in network interfaces.
	NetworkInterfaceIPConfiguration SubResourceResponseInput `pulumi:"networkInterfaceIPConfiguration"`
	// Reference to an existing virtual network.
	VirtualNetwork SubResourceResponsePtrInput `pulumi:"virtualNetwork"`
}

func (LoadBalancerBackendAddressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendAddressResponse)(nil)).Elem()
}

func (i LoadBalancerBackendAddressResponseArgs) ToLoadBalancerBackendAddressResponseOutput() LoadBalancerBackendAddressResponseOutput {
	return i.ToLoadBalancerBackendAddressResponseOutputWithContext(context.Background())
}

func (i LoadBalancerBackendAddressResponseArgs) ToLoadBalancerBackendAddressResponseOutputWithContext(ctx context.Context) LoadBalancerBackendAddressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendAddressResponseOutput)
}

// LoadBalancerBackendAddressResponseArrayInput is an input type that accepts LoadBalancerBackendAddressResponseArray and LoadBalancerBackendAddressResponseArrayOutput values.
// You can construct a concrete instance of `LoadBalancerBackendAddressResponseArrayInput` via:
//
//          LoadBalancerBackendAddressResponseArray{ LoadBalancerBackendAddressResponseArgs{...} }
type LoadBalancerBackendAddressResponseArrayInput interface {
	pulumi.Input

	ToLoadBalancerBackendAddressResponseArrayOutput() LoadBalancerBackendAddressResponseArrayOutput
	ToLoadBalancerBackendAddressResponseArrayOutputWithContext(context.Context) LoadBalancerBackendAddressResponseArrayOutput
}

type LoadBalancerBackendAddressResponseArray []LoadBalancerBackendAddressResponseInput

func (LoadBalancerBackendAddressResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackendAddressResponse)(nil)).Elem()
}

func (i LoadBalancerBackendAddressResponseArray) ToLoadBalancerBackendAddressResponseArrayOutput() LoadBalancerBackendAddressResponseArrayOutput {
	return i.ToLoadBalancerBackendAddressResponseArrayOutputWithContext(context.Background())
}

func (i LoadBalancerBackendAddressResponseArray) ToLoadBalancerBackendAddressResponseArrayOutputWithContext(ctx context.Context) LoadBalancerBackendAddressResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerBackendAddressResponseArrayOutput)
}

// Load balancer backend addresses.
type LoadBalancerBackendAddressResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerBackendAddressResponse)(nil)).Elem()
}

func (o LoadBalancerBackendAddressResponseOutput) ToLoadBalancerBackendAddressResponseOutput() LoadBalancerBackendAddressResponseOutput {
	return o
}

func (o LoadBalancerBackendAddressResponseOutput) ToLoadBalancerBackendAddressResponseOutputWithContext(ctx context.Context) LoadBalancerBackendAddressResponseOutput {
	return o
}

// IP Address belonging to the referenced virtual network.
func (o LoadBalancerBackendAddressResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// Reference to the frontend ip address configuration defined in regional loadbalancer.
func (o LoadBalancerBackendAddressResponseOutput) LoadBalancerFrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) *SubResourceResponse {
		return v.LoadBalancerFrontendIPConfiguration
	}).(SubResourceResponsePtrOutput)
}

// Name of the backend address.
func (o LoadBalancerBackendAddressResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to IP address defined in network interfaces.
func (o LoadBalancerBackendAddressResponseOutput) NetworkInterfaceIPConfiguration() SubResourceResponseOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) SubResourceResponse {
		return v.NetworkInterfaceIPConfiguration
	}).(SubResourceResponseOutput)
}

// Reference to an existing virtual network.
func (o LoadBalancerBackendAddressResponseOutput) VirtualNetwork() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancerBackendAddressResponse) *SubResourceResponse { return v.VirtualNetwork }).(SubResourceResponsePtrOutput)
}

type LoadBalancerBackendAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerBackendAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerBackendAddressResponse)(nil)).Elem()
}

func (o LoadBalancerBackendAddressResponseArrayOutput) ToLoadBalancerBackendAddressResponseArrayOutput() LoadBalancerBackendAddressResponseArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressResponseArrayOutput) ToLoadBalancerBackendAddressResponseArrayOutputWithContext(ctx context.Context) LoadBalancerBackendAddressResponseArrayOutput {
	return o
}

func (o LoadBalancerBackendAddressResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancerBackendAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerBackendAddressResponse {
		return vs[0].([]LoadBalancerBackendAddressResponse)[vs[1].(int)]
	}).(LoadBalancerBackendAddressResponseOutput)
}

// SKU of a load balancer.
type LoadBalancerSku struct {
	// Name of a load balancer SKU.
	Name *string `pulumi:"name"`
	// Tier of a load balancer SKU.
	Tier *string `pulumi:"tier"`
}

// LoadBalancerSkuInput is an input type that accepts LoadBalancerSkuArgs and LoadBalancerSkuOutput values.
// You can construct a concrete instance of `LoadBalancerSkuInput` via:
//
//          LoadBalancerSkuArgs{...}
type LoadBalancerSkuInput interface {
	pulumi.Input

	ToLoadBalancerSkuOutput() LoadBalancerSkuOutput
	ToLoadBalancerSkuOutputWithContext(context.Context) LoadBalancerSkuOutput
}

// SKU of a load balancer.
type LoadBalancerSkuArgs struct {
	// Name of a load balancer SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of a load balancer SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (LoadBalancerSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSku)(nil)).Elem()
}

func (i LoadBalancerSkuArgs) ToLoadBalancerSkuOutput() LoadBalancerSkuOutput {
	return i.ToLoadBalancerSkuOutputWithContext(context.Background())
}

func (i LoadBalancerSkuArgs) ToLoadBalancerSkuOutputWithContext(ctx context.Context) LoadBalancerSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuOutput)
}

func (i LoadBalancerSkuArgs) ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput {
	return i.ToLoadBalancerSkuPtrOutputWithContext(context.Background())
}

func (i LoadBalancerSkuArgs) ToLoadBalancerSkuPtrOutputWithContext(ctx context.Context) LoadBalancerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuOutput).ToLoadBalancerSkuPtrOutputWithContext(ctx)
}

// LoadBalancerSkuPtrInput is an input type that accepts LoadBalancerSkuArgs, LoadBalancerSkuPtr and LoadBalancerSkuPtrOutput values.
// You can construct a concrete instance of `LoadBalancerSkuPtrInput` via:
//
//          LoadBalancerSkuArgs{...}
//
//  or:
//
//          nil
type LoadBalancerSkuPtrInput interface {
	pulumi.Input

	ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput
	ToLoadBalancerSkuPtrOutputWithContext(context.Context) LoadBalancerSkuPtrOutput
}

type loadBalancerSkuPtrType LoadBalancerSkuArgs

func LoadBalancerSkuPtr(v *LoadBalancerSkuArgs) LoadBalancerSkuPtrInput {
	return (*loadBalancerSkuPtrType)(v)
}

func (*loadBalancerSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerSku)(nil)).Elem()
}

func (i *loadBalancerSkuPtrType) ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput {
	return i.ToLoadBalancerSkuPtrOutputWithContext(context.Background())
}

func (i *loadBalancerSkuPtrType) ToLoadBalancerSkuPtrOutputWithContext(ctx context.Context) LoadBalancerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuPtrOutput)
}

// SKU of a load balancer.
type LoadBalancerSkuOutput struct{ *pulumi.OutputState }

func (LoadBalancerSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSku)(nil)).Elem()
}

func (o LoadBalancerSkuOutput) ToLoadBalancerSkuOutput() LoadBalancerSkuOutput {
	return o
}

func (o LoadBalancerSkuOutput) ToLoadBalancerSkuOutputWithContext(ctx context.Context) LoadBalancerSkuOutput {
	return o
}

func (o LoadBalancerSkuOutput) ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput {
	return o.ToLoadBalancerSkuPtrOutputWithContext(context.Background())
}

func (o LoadBalancerSkuOutput) ToLoadBalancerSkuPtrOutputWithContext(ctx context.Context) LoadBalancerSkuPtrOutput {
	return o.ApplyT(func(v LoadBalancerSku) *LoadBalancerSku {
		return &v
	}).(LoadBalancerSkuPtrOutput)
}

// Name of a load balancer SKU.
func (o LoadBalancerSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of a load balancer SKU.
func (o LoadBalancerSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type LoadBalancerSkuPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerSku)(nil)).Elem()
}

func (o LoadBalancerSkuPtrOutput) ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput {
	return o
}

func (o LoadBalancerSkuPtrOutput) ToLoadBalancerSkuPtrOutputWithContext(ctx context.Context) LoadBalancerSkuPtrOutput {
	return o
}

func (o LoadBalancerSkuPtrOutput) Elem() LoadBalancerSkuOutput {
	return o.ApplyT(func(v *LoadBalancerSku) LoadBalancerSku { return *v }).(LoadBalancerSkuOutput)
}

// Name of a load balancer SKU.
func (o LoadBalancerSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of a load balancer SKU.
func (o LoadBalancerSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU of a load balancer.
type LoadBalancerSkuResponse struct {
	// Name of a load balancer SKU.
	Name *string `pulumi:"name"`
	// Tier of a load balancer SKU.
	Tier *string `pulumi:"tier"`
}

// LoadBalancerSkuResponseInput is an input type that accepts LoadBalancerSkuResponseArgs and LoadBalancerSkuResponseOutput values.
// You can construct a concrete instance of `LoadBalancerSkuResponseInput` via:
//
//          LoadBalancerSkuResponseArgs{...}
type LoadBalancerSkuResponseInput interface {
	pulumi.Input

	ToLoadBalancerSkuResponseOutput() LoadBalancerSkuResponseOutput
	ToLoadBalancerSkuResponseOutputWithContext(context.Context) LoadBalancerSkuResponseOutput
}

// SKU of a load balancer.
type LoadBalancerSkuResponseArgs struct {
	// Name of a load balancer SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of a load balancer SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (LoadBalancerSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSkuResponse)(nil)).Elem()
}

func (i LoadBalancerSkuResponseArgs) ToLoadBalancerSkuResponseOutput() LoadBalancerSkuResponseOutput {
	return i.ToLoadBalancerSkuResponseOutputWithContext(context.Background())
}

func (i LoadBalancerSkuResponseArgs) ToLoadBalancerSkuResponseOutputWithContext(ctx context.Context) LoadBalancerSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuResponseOutput)
}

func (i LoadBalancerSkuResponseArgs) ToLoadBalancerSkuResponsePtrOutput() LoadBalancerSkuResponsePtrOutput {
	return i.ToLoadBalancerSkuResponsePtrOutputWithContext(context.Background())
}

func (i LoadBalancerSkuResponseArgs) ToLoadBalancerSkuResponsePtrOutputWithContext(ctx context.Context) LoadBalancerSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuResponseOutput).ToLoadBalancerSkuResponsePtrOutputWithContext(ctx)
}

// LoadBalancerSkuResponsePtrInput is an input type that accepts LoadBalancerSkuResponseArgs, LoadBalancerSkuResponsePtr and LoadBalancerSkuResponsePtrOutput values.
// You can construct a concrete instance of `LoadBalancerSkuResponsePtrInput` via:
//
//          LoadBalancerSkuResponseArgs{...}
//
//  or:
//
//          nil
type LoadBalancerSkuResponsePtrInput interface {
	pulumi.Input

	ToLoadBalancerSkuResponsePtrOutput() LoadBalancerSkuResponsePtrOutput
	ToLoadBalancerSkuResponsePtrOutputWithContext(context.Context) LoadBalancerSkuResponsePtrOutput
}

type loadBalancerSkuResponsePtrType LoadBalancerSkuResponseArgs

func LoadBalancerSkuResponsePtr(v *LoadBalancerSkuResponseArgs) LoadBalancerSkuResponsePtrInput {
	return (*loadBalancerSkuResponsePtrType)(v)
}

func (*loadBalancerSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerSkuResponse)(nil)).Elem()
}

func (i *loadBalancerSkuResponsePtrType) ToLoadBalancerSkuResponsePtrOutput() LoadBalancerSkuResponsePtrOutput {
	return i.ToLoadBalancerSkuResponsePtrOutputWithContext(context.Background())
}

func (i *loadBalancerSkuResponsePtrType) ToLoadBalancerSkuResponsePtrOutputWithContext(ctx context.Context) LoadBalancerSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuResponsePtrOutput)
}

// SKU of a load balancer.
type LoadBalancerSkuResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSkuResponse)(nil)).Elem()
}

func (o LoadBalancerSkuResponseOutput) ToLoadBalancerSkuResponseOutput() LoadBalancerSkuResponseOutput {
	return o
}

func (o LoadBalancerSkuResponseOutput) ToLoadBalancerSkuResponseOutputWithContext(ctx context.Context) LoadBalancerSkuResponseOutput {
	return o
}

func (o LoadBalancerSkuResponseOutput) ToLoadBalancerSkuResponsePtrOutput() LoadBalancerSkuResponsePtrOutput {
	return o.ToLoadBalancerSkuResponsePtrOutputWithContext(context.Background())
}

func (o LoadBalancerSkuResponseOutput) ToLoadBalancerSkuResponsePtrOutputWithContext(ctx context.Context) LoadBalancerSkuResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancerSkuResponse) *LoadBalancerSkuResponse {
		return &v
	}).(LoadBalancerSkuResponsePtrOutput)
}

// Name of a load balancer SKU.
func (o LoadBalancerSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of a load balancer SKU.
func (o LoadBalancerSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type LoadBalancerSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerSkuResponse)(nil)).Elem()
}

func (o LoadBalancerSkuResponsePtrOutput) ToLoadBalancerSkuResponsePtrOutput() LoadBalancerSkuResponsePtrOutput {
	return o
}

func (o LoadBalancerSkuResponsePtrOutput) ToLoadBalancerSkuResponsePtrOutputWithContext(ctx context.Context) LoadBalancerSkuResponsePtrOutput {
	return o
}

func (o LoadBalancerSkuResponsePtrOutput) Elem() LoadBalancerSkuResponseOutput {
	return o.ApplyT(func(v *LoadBalancerSkuResponse) LoadBalancerSkuResponse { return *v }).(LoadBalancerSkuResponseOutput)
}

// Name of a load balancer SKU.
func (o LoadBalancerSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of a load balancer SKU.
func (o LoadBalancerSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRule struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool *SubResource `pulumi:"backendAddressPool"`
	// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port".
	BackendPort *int `pulumi:"backendPort"`
	// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
	DisableOutboundSnat *bool `pulumi:"disableOutboundSnat"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port".
	FrontendPort int `pulumi:"frontendPort"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule.
	LoadDistribution *string `pulumi:"loadDistribution"`
	// The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference to the load balancer probe used by the load balancing rule.
	Probe *SubResource `pulumi:"probe"`
	// The reference to the transport protocol used by the load balancing rule.
	Protocol string `pulumi:"protocol"`
}

// LoadBalancingRuleInput is an input type that accepts LoadBalancingRuleArgs and LoadBalancingRuleOutput values.
// You can construct a concrete instance of `LoadBalancingRuleInput` via:
//
//          LoadBalancingRuleArgs{...}
type LoadBalancingRuleInput interface {
	pulumi.Input

	ToLoadBalancingRuleOutput() LoadBalancingRuleOutput
	ToLoadBalancingRuleOutputWithContext(context.Context) LoadBalancingRuleOutput
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleArgs struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourcePtrInput `pulumi:"backendAddressPool"`
	// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port".
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
	DisableOutboundSnat pulumi.BoolPtrInput `pulumi:"disableOutboundSnat"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port".
	FrontendPort pulumi.IntInput `pulumi:"frontendPort"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule.
	LoadDistribution pulumi.StringPtrInput `pulumi:"loadDistribution"`
	// The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference to the load balancer probe used by the load balancing rule.
	Probe SubResourcePtrInput `pulumi:"probe"`
	// The reference to the transport protocol used by the load balancing rule.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (LoadBalancingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRule)(nil)).Elem()
}

func (i LoadBalancingRuleArgs) ToLoadBalancingRuleOutput() LoadBalancingRuleOutput {
	return i.ToLoadBalancingRuleOutputWithContext(context.Background())
}

func (i LoadBalancingRuleArgs) ToLoadBalancingRuleOutputWithContext(ctx context.Context) LoadBalancingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleOutput)
}

// LoadBalancingRuleArrayInput is an input type that accepts LoadBalancingRuleArray and LoadBalancingRuleArrayOutput values.
// You can construct a concrete instance of `LoadBalancingRuleArrayInput` via:
//
//          LoadBalancingRuleArray{ LoadBalancingRuleArgs{...} }
type LoadBalancingRuleArrayInput interface {
	pulumi.Input

	ToLoadBalancingRuleArrayOutput() LoadBalancingRuleArrayOutput
	ToLoadBalancingRuleArrayOutputWithContext(context.Context) LoadBalancingRuleArrayOutput
}

type LoadBalancingRuleArray []LoadBalancingRuleInput

func (LoadBalancingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRule)(nil)).Elem()
}

func (i LoadBalancingRuleArray) ToLoadBalancingRuleArrayOutput() LoadBalancingRuleArrayOutput {
	return i.ToLoadBalancingRuleArrayOutputWithContext(context.Background())
}

func (i LoadBalancingRuleArray) ToLoadBalancingRuleArrayOutputWithContext(ctx context.Context) LoadBalancingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleArrayOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRule)(nil)).Elem()
}

func (o LoadBalancingRuleOutput) ToLoadBalancingRuleOutput() LoadBalancingRuleOutput {
	return o
}

func (o LoadBalancingRuleOutput) ToLoadBalancingRuleOutputWithContext(ctx context.Context) LoadBalancingRuleOutput {
	return o
}

// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
func (o LoadBalancingRuleOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *SubResource { return v.BackendAddressPool }).(SubResourcePtrOutput)
}

// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port".
func (o LoadBalancingRuleOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
func (o LoadBalancingRuleOutput) DisableOutboundSnat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *bool { return v.DisableOutboundSnat }).(pulumi.BoolPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o LoadBalancingRuleOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRuleOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A reference to frontend IP addresses.
func (o LoadBalancingRuleOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port".
func (o LoadBalancingRuleOutput) FrontendPort() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancingRule) int { return v.FrontendPort }).(pulumi.IntOutput)
}

// Resource ID.
func (o LoadBalancingRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRuleOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The load distribution policy for this rule.
func (o LoadBalancingRuleOutput) LoadDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *string { return v.LoadDistribution }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.
func (o LoadBalancingRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference to the load balancer probe used by the load balancing rule.
func (o LoadBalancingRuleOutput) Probe() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *SubResource { return v.Probe }).(SubResourcePtrOutput)
}

// The reference to the transport protocol used by the load balancing rule.
func (o LoadBalancingRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingRule) string { return v.Protocol }).(pulumi.StringOutput)
}

type LoadBalancingRuleArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRule)(nil)).Elem()
}

func (o LoadBalancingRuleArrayOutput) ToLoadBalancingRuleArrayOutput() LoadBalancingRuleArrayOutput {
	return o
}

func (o LoadBalancingRuleArrayOutput) ToLoadBalancingRuleArrayOutputWithContext(ctx context.Context) LoadBalancingRuleArrayOutput {
	return o
}

func (o LoadBalancingRuleArrayOutput) Index(i pulumi.IntInput) LoadBalancingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancingRule {
		return vs[0].([]LoadBalancingRule)[vs[1].(int)]
	}).(LoadBalancingRuleOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleResponse struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool *SubResourceResponse `pulumi:"backendAddressPool"`
	// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port".
	BackendPort *int `pulumi:"backendPort"`
	// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
	DisableOutboundSnat *bool `pulumi:"disableOutboundSnat"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port".
	FrontendPort int `pulumi:"frontendPort"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule.
	LoadDistribution *string `pulumi:"loadDistribution"`
	// The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference to the load balancer probe used by the load balancing rule.
	Probe *SubResourceResponse `pulumi:"probe"`
	// The reference to the transport protocol used by the load balancing rule.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the load balancing rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// LoadBalancingRuleResponseInput is an input type that accepts LoadBalancingRuleResponseArgs and LoadBalancingRuleResponseOutput values.
// You can construct a concrete instance of `LoadBalancingRuleResponseInput` via:
//
//          LoadBalancingRuleResponseArgs{...}
type LoadBalancingRuleResponseInput interface {
	pulumi.Input

	ToLoadBalancingRuleResponseOutput() LoadBalancingRuleResponseOutput
	ToLoadBalancingRuleResponseOutputWithContext(context.Context) LoadBalancingRuleResponseOutput
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleResponseArgs struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceResponsePtrInput `pulumi:"backendAddressPool"`
	// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port".
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
	DisableOutboundSnat pulumi.BoolPtrInput `pulumi:"disableOutboundSnat"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourceResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port".
	FrontendPort pulumi.IntInput `pulumi:"frontendPort"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule.
	LoadDistribution pulumi.StringPtrInput `pulumi:"loadDistribution"`
	// The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference to the load balancer probe used by the load balancing rule.
	Probe SubResourceResponsePtrInput `pulumi:"probe"`
	// The reference to the transport protocol used by the load balancing rule.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The provisioning state of the load balancing rule resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LoadBalancingRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRuleResponse)(nil)).Elem()
}

func (i LoadBalancingRuleResponseArgs) ToLoadBalancingRuleResponseOutput() LoadBalancingRuleResponseOutput {
	return i.ToLoadBalancingRuleResponseOutputWithContext(context.Background())
}

func (i LoadBalancingRuleResponseArgs) ToLoadBalancingRuleResponseOutputWithContext(ctx context.Context) LoadBalancingRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleResponseOutput)
}

// LoadBalancingRuleResponseArrayInput is an input type that accepts LoadBalancingRuleResponseArray and LoadBalancingRuleResponseArrayOutput values.
// You can construct a concrete instance of `LoadBalancingRuleResponseArrayInput` via:
//
//          LoadBalancingRuleResponseArray{ LoadBalancingRuleResponseArgs{...} }
type LoadBalancingRuleResponseArrayInput interface {
	pulumi.Input

	ToLoadBalancingRuleResponseArrayOutput() LoadBalancingRuleResponseArrayOutput
	ToLoadBalancingRuleResponseArrayOutputWithContext(context.Context) LoadBalancingRuleResponseArrayOutput
}

type LoadBalancingRuleResponseArray []LoadBalancingRuleResponseInput

func (LoadBalancingRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRuleResponse)(nil)).Elem()
}

func (i LoadBalancingRuleResponseArray) ToLoadBalancingRuleResponseArrayOutput() LoadBalancingRuleResponseArrayOutput {
	return i.ToLoadBalancingRuleResponseArrayOutputWithContext(context.Background())
}

func (i LoadBalancingRuleResponseArray) ToLoadBalancingRuleResponseArrayOutputWithContext(ctx context.Context) LoadBalancingRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleResponseArrayOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRuleResponse)(nil)).Elem()
}

func (o LoadBalancingRuleResponseOutput) ToLoadBalancingRuleResponseOutput() LoadBalancingRuleResponseOutput {
	return o
}

func (o LoadBalancingRuleResponseOutput) ToLoadBalancingRuleResponseOutputWithContext(ctx context.Context) LoadBalancingRuleResponseOutput {
	return o
}

// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
func (o LoadBalancingRuleResponseOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponsePtrOutput)
}

// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port".
func (o LoadBalancingRuleResponseOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
func (o LoadBalancingRuleResponseOutput) DisableOutboundSnat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *bool { return v.DisableOutboundSnat }).(pulumi.BoolPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o LoadBalancingRuleResponseOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRuleResponseOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LoadBalancingRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// A reference to frontend IP addresses.
func (o LoadBalancingRuleResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port".
func (o LoadBalancingRuleResponseOutput) FrontendPort() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) int { return v.FrontendPort }).(pulumi.IntOutput)
}

// Resource ID.
func (o LoadBalancingRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRuleResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The load distribution policy for this rule.
func (o LoadBalancingRuleResponseOutput) LoadDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *string { return v.LoadDistribution }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within the set of load balancing rules used by the load balancer. This name can be used to access the resource.
func (o LoadBalancingRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference to the load balancer probe used by the load balancing rule.
func (o LoadBalancingRuleResponseOutput) Probe() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *SubResourceResponse { return v.Probe }).(SubResourceResponsePtrOutput)
}

// The reference to the transport protocol used by the load balancing rule.
func (o LoadBalancingRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the load balancing rule resource.
func (o LoadBalancingRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o LoadBalancingRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

type LoadBalancingRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRuleResponse)(nil)).Elem()
}

func (o LoadBalancingRuleResponseArrayOutput) ToLoadBalancingRuleResponseArrayOutput() LoadBalancingRuleResponseArrayOutput {
	return o
}

func (o LoadBalancingRuleResponseArrayOutput) ToLoadBalancingRuleResponseArrayOutputWithContext(ctx context.Context) LoadBalancingRuleResponseArrayOutput {
	return o
}

func (o LoadBalancingRuleResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancingRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancingRuleResponse {
		return vs[0].([]LoadBalancingRuleResponse)[vs[1].(int)]
	}).(LoadBalancingRuleResponseOutput)
}

// Load balancing settings for a backend pool
type LoadBalancingSettingsModel struct {
	// The additional latency in milliseconds for probes to fall into the lowest latency bucket
	AdditionalLatencyMilliseconds *int `pulumi:"additionalLatencyMilliseconds"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource name.
	Name *string `pulumi:"name"`
	// The number of samples to consider for load balancing decisions
	SampleSize *int `pulumi:"sampleSize"`
	// The number of samples within the sample period that must succeed
	SuccessfulSamplesRequired *int `pulumi:"successfulSamplesRequired"`
}

// LoadBalancingSettingsModelInput is an input type that accepts LoadBalancingSettingsModelArgs and LoadBalancingSettingsModelOutput values.
// You can construct a concrete instance of `LoadBalancingSettingsModelInput` via:
//
//          LoadBalancingSettingsModelArgs{...}
type LoadBalancingSettingsModelInput interface {
	pulumi.Input

	ToLoadBalancingSettingsModelOutput() LoadBalancingSettingsModelOutput
	ToLoadBalancingSettingsModelOutputWithContext(context.Context) LoadBalancingSettingsModelOutput
}

// Load balancing settings for a backend pool
type LoadBalancingSettingsModelArgs struct {
	// The additional latency in milliseconds for probes to fall into the lowest latency bucket
	AdditionalLatencyMilliseconds pulumi.IntPtrInput `pulumi:"additionalLatencyMilliseconds"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The number of samples to consider for load balancing decisions
	SampleSize pulumi.IntPtrInput `pulumi:"sampleSize"`
	// The number of samples within the sample period that must succeed
	SuccessfulSamplesRequired pulumi.IntPtrInput `pulumi:"successfulSamplesRequired"`
}

func (LoadBalancingSettingsModelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingSettingsModel)(nil)).Elem()
}

func (i LoadBalancingSettingsModelArgs) ToLoadBalancingSettingsModelOutput() LoadBalancingSettingsModelOutput {
	return i.ToLoadBalancingSettingsModelOutputWithContext(context.Background())
}

func (i LoadBalancingSettingsModelArgs) ToLoadBalancingSettingsModelOutputWithContext(ctx context.Context) LoadBalancingSettingsModelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingSettingsModelOutput)
}

// LoadBalancingSettingsModelArrayInput is an input type that accepts LoadBalancingSettingsModelArray and LoadBalancingSettingsModelArrayOutput values.
// You can construct a concrete instance of `LoadBalancingSettingsModelArrayInput` via:
//
//          LoadBalancingSettingsModelArray{ LoadBalancingSettingsModelArgs{...} }
type LoadBalancingSettingsModelArrayInput interface {
	pulumi.Input

	ToLoadBalancingSettingsModelArrayOutput() LoadBalancingSettingsModelArrayOutput
	ToLoadBalancingSettingsModelArrayOutputWithContext(context.Context) LoadBalancingSettingsModelArrayOutput
}

type LoadBalancingSettingsModelArray []LoadBalancingSettingsModelInput

func (LoadBalancingSettingsModelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingSettingsModel)(nil)).Elem()
}

func (i LoadBalancingSettingsModelArray) ToLoadBalancingSettingsModelArrayOutput() LoadBalancingSettingsModelArrayOutput {
	return i.ToLoadBalancingSettingsModelArrayOutputWithContext(context.Background())
}

func (i LoadBalancingSettingsModelArray) ToLoadBalancingSettingsModelArrayOutputWithContext(ctx context.Context) LoadBalancingSettingsModelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingSettingsModelArrayOutput)
}

// Load balancing settings for a backend pool
type LoadBalancingSettingsModelOutput struct{ *pulumi.OutputState }

func (LoadBalancingSettingsModelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingSettingsModel)(nil)).Elem()
}

func (o LoadBalancingSettingsModelOutput) ToLoadBalancingSettingsModelOutput() LoadBalancingSettingsModelOutput {
	return o
}

func (o LoadBalancingSettingsModelOutput) ToLoadBalancingSettingsModelOutputWithContext(ctx context.Context) LoadBalancingSettingsModelOutput {
	return o
}

// The additional latency in milliseconds for probes to fall into the lowest latency bucket
func (o LoadBalancingSettingsModelOutput) AdditionalLatencyMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModel) *int { return v.AdditionalLatencyMilliseconds }).(pulumi.IntPtrOutput)
}

// Resource ID.
func (o LoadBalancingSettingsModelOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModel) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LoadBalancingSettingsModelOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModel) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The number of samples to consider for load balancing decisions
func (o LoadBalancingSettingsModelOutput) SampleSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModel) *int { return v.SampleSize }).(pulumi.IntPtrOutput)
}

// The number of samples within the sample period that must succeed
func (o LoadBalancingSettingsModelOutput) SuccessfulSamplesRequired() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModel) *int { return v.SuccessfulSamplesRequired }).(pulumi.IntPtrOutput)
}

type LoadBalancingSettingsModelArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancingSettingsModelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingSettingsModel)(nil)).Elem()
}

func (o LoadBalancingSettingsModelArrayOutput) ToLoadBalancingSettingsModelArrayOutput() LoadBalancingSettingsModelArrayOutput {
	return o
}

func (o LoadBalancingSettingsModelArrayOutput) ToLoadBalancingSettingsModelArrayOutputWithContext(ctx context.Context) LoadBalancingSettingsModelArrayOutput {
	return o
}

func (o LoadBalancingSettingsModelArrayOutput) Index(i pulumi.IntInput) LoadBalancingSettingsModelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancingSettingsModel {
		return vs[0].([]LoadBalancingSettingsModel)[vs[1].(int)]
	}).(LoadBalancingSettingsModelOutput)
}

// Load balancing settings for a backend pool
type LoadBalancingSettingsModelResponse struct {
	// The additional latency in milliseconds for probes to fall into the lowest latency bucket
	AdditionalLatencyMilliseconds *int `pulumi:"additionalLatencyMilliseconds"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource name.
	Name *string `pulumi:"name"`
	// Resource status.
	ResourceState string `pulumi:"resourceState"`
	// The number of samples to consider for load balancing decisions
	SampleSize *int `pulumi:"sampleSize"`
	// The number of samples within the sample period that must succeed
	SuccessfulSamplesRequired *int `pulumi:"successfulSamplesRequired"`
	// Resource type.
	Type string `pulumi:"type"`
}

// LoadBalancingSettingsModelResponseInput is an input type that accepts LoadBalancingSettingsModelResponseArgs and LoadBalancingSettingsModelResponseOutput values.
// You can construct a concrete instance of `LoadBalancingSettingsModelResponseInput` via:
//
//          LoadBalancingSettingsModelResponseArgs{...}
type LoadBalancingSettingsModelResponseInput interface {
	pulumi.Input

	ToLoadBalancingSettingsModelResponseOutput() LoadBalancingSettingsModelResponseOutput
	ToLoadBalancingSettingsModelResponseOutputWithContext(context.Context) LoadBalancingSettingsModelResponseOutput
}

// Load balancing settings for a backend pool
type LoadBalancingSettingsModelResponseArgs struct {
	// The additional latency in milliseconds for probes to fall into the lowest latency bucket
	AdditionalLatencyMilliseconds pulumi.IntPtrInput `pulumi:"additionalLatencyMilliseconds"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Resource status.
	ResourceState pulumi.StringInput `pulumi:"resourceState"`
	// The number of samples to consider for load balancing decisions
	SampleSize pulumi.IntPtrInput `pulumi:"sampleSize"`
	// The number of samples within the sample period that must succeed
	SuccessfulSamplesRequired pulumi.IntPtrInput `pulumi:"successfulSamplesRequired"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LoadBalancingSettingsModelResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingSettingsModelResponse)(nil)).Elem()
}

func (i LoadBalancingSettingsModelResponseArgs) ToLoadBalancingSettingsModelResponseOutput() LoadBalancingSettingsModelResponseOutput {
	return i.ToLoadBalancingSettingsModelResponseOutputWithContext(context.Background())
}

func (i LoadBalancingSettingsModelResponseArgs) ToLoadBalancingSettingsModelResponseOutputWithContext(ctx context.Context) LoadBalancingSettingsModelResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingSettingsModelResponseOutput)
}

// LoadBalancingSettingsModelResponseArrayInput is an input type that accepts LoadBalancingSettingsModelResponseArray and LoadBalancingSettingsModelResponseArrayOutput values.
// You can construct a concrete instance of `LoadBalancingSettingsModelResponseArrayInput` via:
//
//          LoadBalancingSettingsModelResponseArray{ LoadBalancingSettingsModelResponseArgs{...} }
type LoadBalancingSettingsModelResponseArrayInput interface {
	pulumi.Input

	ToLoadBalancingSettingsModelResponseArrayOutput() LoadBalancingSettingsModelResponseArrayOutput
	ToLoadBalancingSettingsModelResponseArrayOutputWithContext(context.Context) LoadBalancingSettingsModelResponseArrayOutput
}

type LoadBalancingSettingsModelResponseArray []LoadBalancingSettingsModelResponseInput

func (LoadBalancingSettingsModelResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingSettingsModelResponse)(nil)).Elem()
}

func (i LoadBalancingSettingsModelResponseArray) ToLoadBalancingSettingsModelResponseArrayOutput() LoadBalancingSettingsModelResponseArrayOutput {
	return i.ToLoadBalancingSettingsModelResponseArrayOutputWithContext(context.Background())
}

func (i LoadBalancingSettingsModelResponseArray) ToLoadBalancingSettingsModelResponseArrayOutputWithContext(ctx context.Context) LoadBalancingSettingsModelResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingSettingsModelResponseArrayOutput)
}

// Load balancing settings for a backend pool
type LoadBalancingSettingsModelResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancingSettingsModelResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingSettingsModelResponse)(nil)).Elem()
}

func (o LoadBalancingSettingsModelResponseOutput) ToLoadBalancingSettingsModelResponseOutput() LoadBalancingSettingsModelResponseOutput {
	return o
}

func (o LoadBalancingSettingsModelResponseOutput) ToLoadBalancingSettingsModelResponseOutputWithContext(ctx context.Context) LoadBalancingSettingsModelResponseOutput {
	return o
}

// The additional latency in milliseconds for probes to fall into the lowest latency bucket
func (o LoadBalancingSettingsModelResponseOutput) AdditionalLatencyMilliseconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModelResponse) *int { return v.AdditionalLatencyMilliseconds }).(pulumi.IntPtrOutput)
}

// Resource ID.
func (o LoadBalancingSettingsModelResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModelResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LoadBalancingSettingsModelResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModelResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Resource status.
func (o LoadBalancingSettingsModelResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModelResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

// The number of samples to consider for load balancing decisions
func (o LoadBalancingSettingsModelResponseOutput) SampleSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModelResponse) *int { return v.SampleSize }).(pulumi.IntPtrOutput)
}

// The number of samples within the sample period that must succeed
func (o LoadBalancingSettingsModelResponseOutput) SuccessfulSamplesRequired() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModelResponse) *int { return v.SuccessfulSamplesRequired }).(pulumi.IntPtrOutput)
}

// Resource type.
func (o LoadBalancingSettingsModelResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingSettingsModelResponse) string { return v.Type }).(pulumi.StringOutput)
}

type LoadBalancingSettingsModelResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancingSettingsModelResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingSettingsModelResponse)(nil)).Elem()
}

func (o LoadBalancingSettingsModelResponseArrayOutput) ToLoadBalancingSettingsModelResponseArrayOutput() LoadBalancingSettingsModelResponseArrayOutput {
	return o
}

func (o LoadBalancingSettingsModelResponseArrayOutput) ToLoadBalancingSettingsModelResponseArrayOutputWithContext(ctx context.Context) LoadBalancingSettingsModelResponseArrayOutput {
	return o
}

func (o LoadBalancingSettingsModelResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancingSettingsModelResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancingSettingsModelResponse {
		return vs[0].([]LoadBalancingSettingsModelResponse)[vs[1].(int)]
	}).(LoadBalancingSettingsModelResponseOutput)
}

// A common class for general resource information.
type LocalNetworkGatewayType struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings *BgpSettings `pulumi:"bgpSettings"`
	// FQDN of local network gateway.
	Fqdn *string `pulumi:"fqdn"`
	// IP address of local network gateway.
	GatewayIpAddress *string `pulumi:"gatewayIpAddress"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Local network site address space.
	LocalNetworkAddressSpace *AddressSpace `pulumi:"localNetworkAddressSpace"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// LocalNetworkGatewayTypeInput is an input type that accepts LocalNetworkGatewayTypeArgs and LocalNetworkGatewayTypeOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayTypeInput` via:
//
//          LocalNetworkGatewayTypeArgs{...}
type LocalNetworkGatewayTypeInput interface {
	pulumi.Input

	ToLocalNetworkGatewayTypeOutput() LocalNetworkGatewayTypeOutput
	ToLocalNetworkGatewayTypeOutputWithContext(context.Context) LocalNetworkGatewayTypeOutput
}

// A common class for general resource information.
type LocalNetworkGatewayTypeArgs struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings BgpSettingsPtrInput `pulumi:"bgpSettings"`
	// FQDN of local network gateway.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// IP address of local network gateway.
	GatewayIpAddress pulumi.StringPtrInput `pulumi:"gatewayIpAddress"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Local network site address space.
	LocalNetworkAddressSpace AddressSpacePtrInput `pulumi:"localNetworkAddressSpace"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LocalNetworkGatewayTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayType)(nil)).Elem()
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypeOutput() LocalNetworkGatewayTypeOutput {
	return i.ToLocalNetworkGatewayTypeOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypeOutputWithContext(ctx context.Context) LocalNetworkGatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayTypeOutput)
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return i.ToLocalNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayTypeOutput).ToLocalNetworkGatewayTypePtrOutputWithContext(ctx)
}

// LocalNetworkGatewayTypePtrInput is an input type that accepts LocalNetworkGatewayTypeArgs, LocalNetworkGatewayTypePtr and LocalNetworkGatewayTypePtrOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayTypePtrInput` via:
//
//          LocalNetworkGatewayTypeArgs{...}
//
//  or:
//
//          nil
type LocalNetworkGatewayTypePtrInput interface {
	pulumi.Input

	ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput
	ToLocalNetworkGatewayTypePtrOutputWithContext(context.Context) LocalNetworkGatewayTypePtrOutput
}

type localNetworkGatewayTypePtrType LocalNetworkGatewayTypeArgs

func LocalNetworkGatewayTypePtr(v *LocalNetworkGatewayTypeArgs) LocalNetworkGatewayTypePtrInput {
	return (*localNetworkGatewayTypePtrType)(v)
}

func (*localNetworkGatewayTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayType)(nil)).Elem()
}

func (i *localNetworkGatewayTypePtrType) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return i.ToLocalNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i *localNetworkGatewayTypePtrType) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayTypePtrOutput)
}

// A common class for general resource information.
type LocalNetworkGatewayTypeOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayType)(nil)).Elem()
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypeOutput() LocalNetworkGatewayTypeOutput {
	return o
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypeOutputWithContext(ctx context.Context) LocalNetworkGatewayTypeOutput {
	return o
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return o.ToLocalNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *LocalNetworkGatewayType {
		return &v
	}).(LocalNetworkGatewayTypePtrOutput)
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayTypeOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *BgpSettings { return v.BgpSettings }).(BgpSettingsPtrOutput)
}

// FQDN of local network gateway.
func (o LocalNetworkGatewayTypeOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayTypeOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.GatewayIpAddress }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o LocalNetworkGatewayTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayTypeOutput) LocalNetworkAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *AddressSpace { return v.LocalNetworkAddressSpace }).(AddressSpacePtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o LocalNetworkGatewayTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type LocalNetworkGatewayTypePtrOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayType)(nil)).Elem()
}

func (o LocalNetworkGatewayTypePtrOutput) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return o
}

func (o LocalNetworkGatewayTypePtrOutput) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return o
}

func (o LocalNetworkGatewayTypePtrOutput) Elem() LocalNetworkGatewayTypeOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) LocalNetworkGatewayType { return *v }).(LocalNetworkGatewayTypeOutput)
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayTypePtrOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *BgpSettings {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsPtrOutput)
}

// FQDN of local network gateway.
func (o LocalNetworkGatewayTypePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayTypePtrOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.GatewayIpAddress
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o LocalNetworkGatewayTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayTypePtrOutput) LocalNetworkAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *AddressSpace {
		if v == nil {
			return nil
		}
		return v.LocalNetworkAddressSpace
	}).(AddressSpacePtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o LocalNetworkGatewayTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// A common class for general resource information.
type LocalNetworkGatewayResponse struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings *BgpSettingsResponse `pulumi:"bgpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// FQDN of local network gateway.
	Fqdn *string `pulumi:"fqdn"`
	// IP address of local network gateway.
	GatewayIpAddress *string `pulumi:"gatewayIpAddress"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Local network site address space.
	LocalNetworkAddressSpace *AddressSpaceResponse `pulumi:"localNetworkAddressSpace"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the local network gateway resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the local network gateway resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// LocalNetworkGatewayResponseInput is an input type that accepts LocalNetworkGatewayResponseArgs and LocalNetworkGatewayResponseOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayResponseInput` via:
//
//          LocalNetworkGatewayResponseArgs{...}
type LocalNetworkGatewayResponseInput interface {
	pulumi.Input

	ToLocalNetworkGatewayResponseOutput() LocalNetworkGatewayResponseOutput
	ToLocalNetworkGatewayResponseOutputWithContext(context.Context) LocalNetworkGatewayResponseOutput
}

// A common class for general resource information.
type LocalNetworkGatewayResponseArgs struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings BgpSettingsResponsePtrInput `pulumi:"bgpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// FQDN of local network gateway.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// IP address of local network gateway.
	GatewayIpAddress pulumi.StringPtrInput `pulumi:"gatewayIpAddress"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Local network site address space.
	LocalNetworkAddressSpace AddressSpaceResponsePtrInput `pulumi:"localNetworkAddressSpace"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the local network gateway resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resource GUID property of the local network gateway resource.
	ResourceGuid pulumi.StringInput `pulumi:"resourceGuid"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LocalNetworkGatewayResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayResponse)(nil)).Elem()
}

func (i LocalNetworkGatewayResponseArgs) ToLocalNetworkGatewayResponseOutput() LocalNetworkGatewayResponseOutput {
	return i.ToLocalNetworkGatewayResponseOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayResponseArgs) ToLocalNetworkGatewayResponseOutputWithContext(ctx context.Context) LocalNetworkGatewayResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayResponseOutput)
}

func (i LocalNetworkGatewayResponseArgs) ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput {
	return i.ToLocalNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayResponseArgs) ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayResponseOutput).ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx)
}

// LocalNetworkGatewayResponsePtrInput is an input type that accepts LocalNetworkGatewayResponseArgs, LocalNetworkGatewayResponsePtr and LocalNetworkGatewayResponsePtrOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayResponsePtrInput` via:
//
//          LocalNetworkGatewayResponseArgs{...}
//
//  or:
//
//          nil
type LocalNetworkGatewayResponsePtrInput interface {
	pulumi.Input

	ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput
	ToLocalNetworkGatewayResponsePtrOutputWithContext(context.Context) LocalNetworkGatewayResponsePtrOutput
}

type localNetworkGatewayResponsePtrType LocalNetworkGatewayResponseArgs

func LocalNetworkGatewayResponsePtr(v *LocalNetworkGatewayResponseArgs) LocalNetworkGatewayResponsePtrInput {
	return (*localNetworkGatewayResponsePtrType)(v)
}

func (*localNetworkGatewayResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayResponse)(nil)).Elem()
}

func (i *localNetworkGatewayResponsePtrType) ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput {
	return i.ToLocalNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (i *localNetworkGatewayResponsePtrType) ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayResponsePtrOutput)
}

// A common class for general resource information.
type LocalNetworkGatewayResponseOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayResponse)(nil)).Elem()
}

func (o LocalNetworkGatewayResponseOutput) ToLocalNetworkGatewayResponseOutput() LocalNetworkGatewayResponseOutput {
	return o
}

func (o LocalNetworkGatewayResponseOutput) ToLocalNetworkGatewayResponseOutputWithContext(ctx context.Context) LocalNetworkGatewayResponseOutput {
	return o
}

func (o LocalNetworkGatewayResponseOutput) ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput {
	return o.ToLocalNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (o LocalNetworkGatewayResponseOutput) ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayResponsePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *LocalNetworkGatewayResponse {
		return &v
	}).(LocalNetworkGatewayResponsePtrOutput)
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayResponseOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *BgpSettingsResponse { return v.BgpSettings }).(BgpSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LocalNetworkGatewayResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// FQDN of local network gateway.
func (o LocalNetworkGatewayResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayResponseOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.GatewayIpAddress }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o LocalNetworkGatewayResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayResponseOutput) LocalNetworkAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *AddressSpaceResponse { return v.LocalNetworkAddressSpace }).(AddressSpaceResponsePtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LocalNetworkGatewayResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the local network gateway resource.
func (o LocalNetworkGatewayResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the local network gateway resource.
func (o LocalNetworkGatewayResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Resource tags.
func (o LocalNetworkGatewayResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o LocalNetworkGatewayResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) string { return v.Type }).(pulumi.StringOutput)
}

type LocalNetworkGatewayResponsePtrOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayResponse)(nil)).Elem()
}

func (o LocalNetworkGatewayResponsePtrOutput) ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput {
	return o
}

func (o LocalNetworkGatewayResponsePtrOutput) ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayResponsePtrOutput {
	return o
}

func (o LocalNetworkGatewayResponsePtrOutput) Elem() LocalNetworkGatewayResponseOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) LocalNetworkGatewayResponse { return *v }).(LocalNetworkGatewayResponseOutput)
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayResponsePtrOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *BgpSettingsResponse {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LocalNetworkGatewayResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// FQDN of local network gateway.
func (o LocalNetworkGatewayResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayResponsePtrOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.GatewayIpAddress
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o LocalNetworkGatewayResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayResponsePtrOutput) LocalNetworkAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *AddressSpaceResponse {
		if v == nil {
			return nil
		}
		return v.LocalNetworkAddressSpace
	}).(AddressSpaceResponsePtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LocalNetworkGatewayResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the local network gateway resource.
func (o LocalNetworkGatewayResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the local network gateway resource.
func (o LocalNetworkGatewayResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o LocalNetworkGatewayResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o LocalNetworkGatewayResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Exclude variables from managed rule evaluation.
type ManagedRuleExclusion struct {
	// The variable type to be excluded.
	MatchVariable string `pulumi:"matchVariable"`
	// Selector value for which elements in the collection this exclusion applies to.
	Selector string `pulumi:"selector"`
	// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
}

// ManagedRuleExclusionInput is an input type that accepts ManagedRuleExclusionArgs and ManagedRuleExclusionOutput values.
// You can construct a concrete instance of `ManagedRuleExclusionInput` via:
//
//          ManagedRuleExclusionArgs{...}
type ManagedRuleExclusionInput interface {
	pulumi.Input

	ToManagedRuleExclusionOutput() ManagedRuleExclusionOutput
	ToManagedRuleExclusionOutputWithContext(context.Context) ManagedRuleExclusionOutput
}

// Exclude variables from managed rule evaluation.
type ManagedRuleExclusionArgs struct {
	// The variable type to be excluded.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// Selector value for which elements in the collection this exclusion applies to.
	Selector pulumi.StringInput `pulumi:"selector"`
	// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to.
	SelectorMatchOperator pulumi.StringInput `pulumi:"selectorMatchOperator"`
}

func (ManagedRuleExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleExclusion)(nil)).Elem()
}

func (i ManagedRuleExclusionArgs) ToManagedRuleExclusionOutput() ManagedRuleExclusionOutput {
	return i.ToManagedRuleExclusionOutputWithContext(context.Background())
}

func (i ManagedRuleExclusionArgs) ToManagedRuleExclusionOutputWithContext(ctx context.Context) ManagedRuleExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleExclusionOutput)
}

// Exclude variables from managed rule evaluation.
type ManagedRuleExclusionOutput struct{ *pulumi.OutputState }

func (ManagedRuleExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleExclusion)(nil)).Elem()
}

func (o ManagedRuleExclusionOutput) ToManagedRuleExclusionOutput() ManagedRuleExclusionOutput {
	return o
}

func (o ManagedRuleExclusionOutput) ToManagedRuleExclusionOutputWithContext(ctx context.Context) ManagedRuleExclusionOutput {
	return o
}

// The variable type to be excluded.
func (o ManagedRuleExclusionOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleExclusion) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// Selector value for which elements in the collection this exclusion applies to.
func (o ManagedRuleExclusionOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleExclusion) string { return v.Selector }).(pulumi.StringOutput)
}

// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to.
func (o ManagedRuleExclusionOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleExclusion) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

// Exclude variables from managed rule evaluation.
type ManagedRuleExclusionResponse struct {
	// The variable type to be excluded.
	MatchVariable string `pulumi:"matchVariable"`
	// Selector value for which elements in the collection this exclusion applies to.
	Selector string `pulumi:"selector"`
	// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
}

// ManagedRuleExclusionResponseInput is an input type that accepts ManagedRuleExclusionResponseArgs and ManagedRuleExclusionResponseOutput values.
// You can construct a concrete instance of `ManagedRuleExclusionResponseInput` via:
//
//          ManagedRuleExclusionResponseArgs{...}
type ManagedRuleExclusionResponseInput interface {
	pulumi.Input

	ToManagedRuleExclusionResponseOutput() ManagedRuleExclusionResponseOutput
	ToManagedRuleExclusionResponseOutputWithContext(context.Context) ManagedRuleExclusionResponseOutput
}

// Exclude variables from managed rule evaluation.
type ManagedRuleExclusionResponseArgs struct {
	// The variable type to be excluded.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// Selector value for which elements in the collection this exclusion applies to.
	Selector pulumi.StringInput `pulumi:"selector"`
	// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to.
	SelectorMatchOperator pulumi.StringInput `pulumi:"selectorMatchOperator"`
}

func (ManagedRuleExclusionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleExclusionResponse)(nil)).Elem()
}

func (i ManagedRuleExclusionResponseArgs) ToManagedRuleExclusionResponseOutput() ManagedRuleExclusionResponseOutput {
	return i.ToManagedRuleExclusionResponseOutputWithContext(context.Background())
}

func (i ManagedRuleExclusionResponseArgs) ToManagedRuleExclusionResponseOutputWithContext(ctx context.Context) ManagedRuleExclusionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleExclusionResponseOutput)
}

// Exclude variables from managed rule evaluation.
type ManagedRuleExclusionResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleExclusionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleExclusionResponse)(nil)).Elem()
}

func (o ManagedRuleExclusionResponseOutput) ToManagedRuleExclusionResponseOutput() ManagedRuleExclusionResponseOutput {
	return o
}

func (o ManagedRuleExclusionResponseOutput) ToManagedRuleExclusionResponseOutputWithContext(ctx context.Context) ManagedRuleExclusionResponseOutput {
	return o
}

// The variable type to be excluded.
func (o ManagedRuleExclusionResponseOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleExclusionResponse) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// Selector value for which elements in the collection this exclusion applies to.
func (o ManagedRuleExclusionResponseOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleExclusionResponse) string { return v.Selector }).(pulumi.StringOutput)
}

// Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to.
func (o ManagedRuleExclusionResponseOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleExclusionResponse) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverride struct {
	// The managed rule group to override.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules []ManagedRuleOverride `pulumi:"rules"`
}

// ManagedRuleGroupOverrideInput is an input type that accepts ManagedRuleGroupOverrideArgs and ManagedRuleGroupOverrideOutput values.
// You can construct a concrete instance of `ManagedRuleGroupOverrideInput` via:
//
//          ManagedRuleGroupOverrideArgs{...}
type ManagedRuleGroupOverrideInput interface {
	pulumi.Input

	ToManagedRuleGroupOverrideOutput() ManagedRuleGroupOverrideOutput
	ToManagedRuleGroupOverrideOutputWithContext(context.Context) ManagedRuleGroupOverrideOutput
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideArgs struct {
	// The managed rule group to override.
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules ManagedRuleOverrideArrayInput `pulumi:"rules"`
}

func (ManagedRuleGroupOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverride)(nil)).Elem()
}

func (i ManagedRuleGroupOverrideArgs) ToManagedRuleGroupOverrideOutput() ManagedRuleGroupOverrideOutput {
	return i.ToManagedRuleGroupOverrideOutputWithContext(context.Background())
}

func (i ManagedRuleGroupOverrideArgs) ToManagedRuleGroupOverrideOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleGroupOverrideOutput)
}

// ManagedRuleGroupOverrideArrayInput is an input type that accepts ManagedRuleGroupOverrideArray and ManagedRuleGroupOverrideArrayOutput values.
// You can construct a concrete instance of `ManagedRuleGroupOverrideArrayInput` via:
//
//          ManagedRuleGroupOverrideArray{ ManagedRuleGroupOverrideArgs{...} }
type ManagedRuleGroupOverrideArrayInput interface {
	pulumi.Input

	ToManagedRuleGroupOverrideArrayOutput() ManagedRuleGroupOverrideArrayOutput
	ToManagedRuleGroupOverrideArrayOutputWithContext(context.Context) ManagedRuleGroupOverrideArrayOutput
}

type ManagedRuleGroupOverrideArray []ManagedRuleGroupOverrideInput

func (ManagedRuleGroupOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverride)(nil)).Elem()
}

func (i ManagedRuleGroupOverrideArray) ToManagedRuleGroupOverrideArrayOutput() ManagedRuleGroupOverrideArrayOutput {
	return i.ToManagedRuleGroupOverrideArrayOutputWithContext(context.Background())
}

func (i ManagedRuleGroupOverrideArray) ToManagedRuleGroupOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleGroupOverrideArrayOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverride)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideOutput) ToManagedRuleGroupOverrideOutput() ManagedRuleGroupOverrideOutput {
	return o
}

func (o ManagedRuleGroupOverrideOutput) ToManagedRuleGroupOverrideOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideOutput {
	return o
}

// The managed rule group to override.
func (o ManagedRuleGroupOverrideOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverride) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
func (o ManagedRuleGroupOverrideOutput) Rules() ManagedRuleOverrideArrayOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverride) []ManagedRuleOverride { return v.Rules }).(ManagedRuleOverrideArrayOutput)
}

type ManagedRuleGroupOverrideArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverride)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideArrayOutput) ToManagedRuleGroupOverrideArrayOutput() ManagedRuleGroupOverrideArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideArrayOutput) ToManagedRuleGroupOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideArrayOutput) Index(i pulumi.IntInput) ManagedRuleGroupOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleGroupOverride {
		return vs[0].([]ManagedRuleGroupOverride)[vs[1].(int)]
	}).(ManagedRuleGroupOverrideOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideResponse struct {
	// The managed rule group to override.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules []ManagedRuleOverrideResponse `pulumi:"rules"`
}

// ManagedRuleGroupOverrideResponseInput is an input type that accepts ManagedRuleGroupOverrideResponseArgs and ManagedRuleGroupOverrideResponseOutput values.
// You can construct a concrete instance of `ManagedRuleGroupOverrideResponseInput` via:
//
//          ManagedRuleGroupOverrideResponseArgs{...}
type ManagedRuleGroupOverrideResponseInput interface {
	pulumi.Input

	ToManagedRuleGroupOverrideResponseOutput() ManagedRuleGroupOverrideResponseOutput
	ToManagedRuleGroupOverrideResponseOutputWithContext(context.Context) ManagedRuleGroupOverrideResponseOutput
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideResponseArgs struct {
	// The managed rule group to override.
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
	Rules ManagedRuleOverrideResponseArrayInput `pulumi:"rules"`
}

func (ManagedRuleGroupOverrideResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverrideResponse)(nil)).Elem()
}

func (i ManagedRuleGroupOverrideResponseArgs) ToManagedRuleGroupOverrideResponseOutput() ManagedRuleGroupOverrideResponseOutput {
	return i.ToManagedRuleGroupOverrideResponseOutputWithContext(context.Background())
}

func (i ManagedRuleGroupOverrideResponseArgs) ToManagedRuleGroupOverrideResponseOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleGroupOverrideResponseOutput)
}

// ManagedRuleGroupOverrideResponseArrayInput is an input type that accepts ManagedRuleGroupOverrideResponseArray and ManagedRuleGroupOverrideResponseArrayOutput values.
// You can construct a concrete instance of `ManagedRuleGroupOverrideResponseArrayInput` via:
//
//          ManagedRuleGroupOverrideResponseArray{ ManagedRuleGroupOverrideResponseArgs{...} }
type ManagedRuleGroupOverrideResponseArrayInput interface {
	pulumi.Input

	ToManagedRuleGroupOverrideResponseArrayOutput() ManagedRuleGroupOverrideResponseArrayOutput
	ToManagedRuleGroupOverrideResponseArrayOutputWithContext(context.Context) ManagedRuleGroupOverrideResponseArrayOutput
}

type ManagedRuleGroupOverrideResponseArray []ManagedRuleGroupOverrideResponseInput

func (ManagedRuleGroupOverrideResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverrideResponse)(nil)).Elem()
}

func (i ManagedRuleGroupOverrideResponseArray) ToManagedRuleGroupOverrideResponseArrayOutput() ManagedRuleGroupOverrideResponseArrayOutput {
	return i.ToManagedRuleGroupOverrideResponseArrayOutputWithContext(context.Background())
}

func (i ManagedRuleGroupOverrideResponseArray) ToManagedRuleGroupOverrideResponseArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleGroupOverrideResponseArrayOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleGroupOverrideResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleGroupOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideResponseOutput) ToManagedRuleGroupOverrideResponseOutput() ManagedRuleGroupOverrideResponseOutput {
	return o
}

func (o ManagedRuleGroupOverrideResponseOutput) ToManagedRuleGroupOverrideResponseOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideResponseOutput {
	return o
}

// The managed rule group to override.
func (o ManagedRuleGroupOverrideResponseOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverrideResponse) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// List of rules that will be disabled. If none specified, all rules in the group will be disabled.
func (o ManagedRuleGroupOverrideResponseOutput) Rules() ManagedRuleOverrideResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleGroupOverrideResponse) []ManagedRuleOverrideResponse { return v.Rules }).(ManagedRuleOverrideResponseArrayOutput)
}

type ManagedRuleGroupOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleGroupOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleGroupOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleGroupOverrideResponseArrayOutput) ToManagedRuleGroupOverrideResponseArrayOutput() ManagedRuleGroupOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideResponseArrayOutput) ToManagedRuleGroupOverrideResponseArrayOutputWithContext(ctx context.Context) ManagedRuleGroupOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleGroupOverrideResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleGroupOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleGroupOverrideResponse {
		return vs[0].([]ManagedRuleGroupOverrideResponse)[vs[1].(int)]
	}).(ManagedRuleGroupOverrideResponseOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverride struct {
	// Identifier for the managed rule.
	RuleId string `pulumi:"ruleId"`
	// The state of the managed rule. Defaults to Disabled if not specified.
	State *string `pulumi:"state"`
}

// ManagedRuleOverrideInput is an input type that accepts ManagedRuleOverrideArgs and ManagedRuleOverrideOutput values.
// You can construct a concrete instance of `ManagedRuleOverrideInput` via:
//
//          ManagedRuleOverrideArgs{...}
type ManagedRuleOverrideInput interface {
	pulumi.Input

	ToManagedRuleOverrideOutput() ManagedRuleOverrideOutput
	ToManagedRuleOverrideOutputWithContext(context.Context) ManagedRuleOverrideOutput
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideArgs struct {
	// Identifier for the managed rule.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// The state of the managed rule. Defaults to Disabled if not specified.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (ManagedRuleOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverride)(nil)).Elem()
}

func (i ManagedRuleOverrideArgs) ToManagedRuleOverrideOutput() ManagedRuleOverrideOutput {
	return i.ToManagedRuleOverrideOutputWithContext(context.Background())
}

func (i ManagedRuleOverrideArgs) ToManagedRuleOverrideOutputWithContext(ctx context.Context) ManagedRuleOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleOverrideOutput)
}

// ManagedRuleOverrideArrayInput is an input type that accepts ManagedRuleOverrideArray and ManagedRuleOverrideArrayOutput values.
// You can construct a concrete instance of `ManagedRuleOverrideArrayInput` via:
//
//          ManagedRuleOverrideArray{ ManagedRuleOverrideArgs{...} }
type ManagedRuleOverrideArrayInput interface {
	pulumi.Input

	ToManagedRuleOverrideArrayOutput() ManagedRuleOverrideArrayOutput
	ToManagedRuleOverrideArrayOutputWithContext(context.Context) ManagedRuleOverrideArrayOutput
}

type ManagedRuleOverrideArray []ManagedRuleOverrideInput

func (ManagedRuleOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverride)(nil)).Elem()
}

func (i ManagedRuleOverrideArray) ToManagedRuleOverrideArrayOutput() ManagedRuleOverrideArrayOutput {
	return i.ToManagedRuleOverrideArrayOutputWithContext(context.Background())
}

func (i ManagedRuleOverrideArray) ToManagedRuleOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleOverrideArrayOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverride)(nil)).Elem()
}

func (o ManagedRuleOverrideOutput) ToManagedRuleOverrideOutput() ManagedRuleOverrideOutput {
	return o
}

func (o ManagedRuleOverrideOutput) ToManagedRuleOverrideOutputWithContext(ctx context.Context) ManagedRuleOverrideOutput {
	return o
}

// Identifier for the managed rule.
func (o ManagedRuleOverrideOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleOverride) string { return v.RuleId }).(pulumi.StringOutput)
}

// The state of the managed rule. Defaults to Disabled if not specified.
func (o ManagedRuleOverrideOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverride) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ManagedRuleOverrideArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverride)(nil)).Elem()
}

func (o ManagedRuleOverrideArrayOutput) ToManagedRuleOverrideArrayOutput() ManagedRuleOverrideArrayOutput {
	return o
}

func (o ManagedRuleOverrideArrayOutput) ToManagedRuleOverrideArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideArrayOutput {
	return o
}

func (o ManagedRuleOverrideArrayOutput) Index(i pulumi.IntInput) ManagedRuleOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleOverride {
		return vs[0].([]ManagedRuleOverride)[vs[1].(int)]
	}).(ManagedRuleOverrideOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideResponse struct {
	// Identifier for the managed rule.
	RuleId string `pulumi:"ruleId"`
	// The state of the managed rule. Defaults to Disabled if not specified.
	State *string `pulumi:"state"`
}

// ManagedRuleOverrideResponseInput is an input type that accepts ManagedRuleOverrideResponseArgs and ManagedRuleOverrideResponseOutput values.
// You can construct a concrete instance of `ManagedRuleOverrideResponseInput` via:
//
//          ManagedRuleOverrideResponseArgs{...}
type ManagedRuleOverrideResponseInput interface {
	pulumi.Input

	ToManagedRuleOverrideResponseOutput() ManagedRuleOverrideResponseOutput
	ToManagedRuleOverrideResponseOutputWithContext(context.Context) ManagedRuleOverrideResponseOutput
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideResponseArgs struct {
	// Identifier for the managed rule.
	RuleId pulumi.StringInput `pulumi:"ruleId"`
	// The state of the managed rule. Defaults to Disabled if not specified.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (ManagedRuleOverrideResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverrideResponse)(nil)).Elem()
}

func (i ManagedRuleOverrideResponseArgs) ToManagedRuleOverrideResponseOutput() ManagedRuleOverrideResponseOutput {
	return i.ToManagedRuleOverrideResponseOutputWithContext(context.Background())
}

func (i ManagedRuleOverrideResponseArgs) ToManagedRuleOverrideResponseOutputWithContext(ctx context.Context) ManagedRuleOverrideResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleOverrideResponseOutput)
}

// ManagedRuleOverrideResponseArrayInput is an input type that accepts ManagedRuleOverrideResponseArray and ManagedRuleOverrideResponseArrayOutput values.
// You can construct a concrete instance of `ManagedRuleOverrideResponseArrayInput` via:
//
//          ManagedRuleOverrideResponseArray{ ManagedRuleOverrideResponseArgs{...} }
type ManagedRuleOverrideResponseArrayInput interface {
	pulumi.Input

	ToManagedRuleOverrideResponseArrayOutput() ManagedRuleOverrideResponseArrayOutput
	ToManagedRuleOverrideResponseArrayOutputWithContext(context.Context) ManagedRuleOverrideResponseArrayOutput
}

type ManagedRuleOverrideResponseArray []ManagedRuleOverrideResponseInput

func (ManagedRuleOverrideResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverrideResponse)(nil)).Elem()
}

func (i ManagedRuleOverrideResponseArray) ToManagedRuleOverrideResponseArrayOutput() ManagedRuleOverrideResponseArrayOutput {
	return i.ToManagedRuleOverrideResponseArrayOutputWithContext(context.Background())
}

func (i ManagedRuleOverrideResponseArray) ToManagedRuleOverrideResponseArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleOverrideResponseArrayOutput)
}

// Defines a managed rule group override setting.
type ManagedRuleOverrideResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleOverrideResponseOutput) ToManagedRuleOverrideResponseOutput() ManagedRuleOverrideResponseOutput {
	return o
}

func (o ManagedRuleOverrideResponseOutput) ToManagedRuleOverrideResponseOutputWithContext(ctx context.Context) ManagedRuleOverrideResponseOutput {
	return o
}

// Identifier for the managed rule.
func (o ManagedRuleOverrideResponseOutput) RuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleOverrideResponse) string { return v.RuleId }).(pulumi.StringOutput)
}

// The state of the managed rule. Defaults to Disabled if not specified.
func (o ManagedRuleOverrideResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedRuleOverrideResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ManagedRuleOverrideResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleOverrideResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleOverrideResponse)(nil)).Elem()
}

func (o ManagedRuleOverrideResponseArrayOutput) ToManagedRuleOverrideResponseArrayOutput() ManagedRuleOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleOverrideResponseArrayOutput) ToManagedRuleOverrideResponseArrayOutputWithContext(ctx context.Context) ManagedRuleOverrideResponseArrayOutput {
	return o
}

func (o ManagedRuleOverrideResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleOverrideResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleOverrideResponse {
		return vs[0].([]ManagedRuleOverrideResponse)[vs[1].(int)]
	}).(ManagedRuleOverrideResponseOutput)
}

// Defines a managed rule set.
type ManagedRuleSet struct {
	// Defines the rule group overrides to apply to the rule set.
	RuleGroupOverrides []ManagedRuleGroupOverride `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType string `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// ManagedRuleSetInput is an input type that accepts ManagedRuleSetArgs and ManagedRuleSetOutput values.
// You can construct a concrete instance of `ManagedRuleSetInput` via:
//
//          ManagedRuleSetArgs{...}
type ManagedRuleSetInput interface {
	pulumi.Input

	ToManagedRuleSetOutput() ManagedRuleSetOutput
	ToManagedRuleSetOutputWithContext(context.Context) ManagedRuleSetOutput
}

// Defines a managed rule set.
type ManagedRuleSetArgs struct {
	// Defines the rule group overrides to apply to the rule set.
	RuleGroupOverrides ManagedRuleGroupOverrideArrayInput `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType pulumi.StringInput `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (ManagedRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSet)(nil)).Elem()
}

func (i ManagedRuleSetArgs) ToManagedRuleSetOutput() ManagedRuleSetOutput {
	return i.ToManagedRuleSetOutputWithContext(context.Background())
}

func (i ManagedRuleSetArgs) ToManagedRuleSetOutputWithContext(ctx context.Context) ManagedRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetOutput)
}

// ManagedRuleSetArrayInput is an input type that accepts ManagedRuleSetArray and ManagedRuleSetArrayOutput values.
// You can construct a concrete instance of `ManagedRuleSetArrayInput` via:
//
//          ManagedRuleSetArray{ ManagedRuleSetArgs{...} }
type ManagedRuleSetArrayInput interface {
	pulumi.Input

	ToManagedRuleSetArrayOutput() ManagedRuleSetArrayOutput
	ToManagedRuleSetArrayOutputWithContext(context.Context) ManagedRuleSetArrayOutput
}

type ManagedRuleSetArray []ManagedRuleSetInput

func (ManagedRuleSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSet)(nil)).Elem()
}

func (i ManagedRuleSetArray) ToManagedRuleSetArrayOutput() ManagedRuleSetArrayOutput {
	return i.ToManagedRuleSetArrayOutputWithContext(context.Background())
}

func (i ManagedRuleSetArray) ToManagedRuleSetArrayOutputWithContext(ctx context.Context) ManagedRuleSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetArrayOutput)
}

// Defines a managed rule set.
type ManagedRuleSetOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSet)(nil)).Elem()
}

func (o ManagedRuleSetOutput) ToManagedRuleSetOutput() ManagedRuleSetOutput {
	return o
}

func (o ManagedRuleSetOutput) ToManagedRuleSetOutputWithContext(ctx context.Context) ManagedRuleSetOutput {
	return o
}

// Defines the rule group overrides to apply to the rule set.
func (o ManagedRuleSetOutput) RuleGroupOverrides() ManagedRuleGroupOverrideArrayOutput {
	return o.ApplyT(func(v ManagedRuleSet) []ManagedRuleGroupOverride { return v.RuleGroupOverrides }).(ManagedRuleGroupOverrideArrayOutput)
}

// Defines the rule set type to use.
func (o ManagedRuleSetOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSet) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// Defines the version of the rule set to use.
func (o ManagedRuleSetOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSet) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ManagedRuleSetArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSet)(nil)).Elem()
}

func (o ManagedRuleSetArrayOutput) ToManagedRuleSetArrayOutput() ManagedRuleSetArrayOutput {
	return o
}

func (o ManagedRuleSetArrayOutput) ToManagedRuleSetArrayOutputWithContext(ctx context.Context) ManagedRuleSetArrayOutput {
	return o
}

func (o ManagedRuleSetArrayOutput) Index(i pulumi.IntInput) ManagedRuleSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleSet {
		return vs[0].([]ManagedRuleSet)[vs[1].(int)]
	}).(ManagedRuleSetOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetList struct {
	// List of rule sets.
	ManagedRuleSets []ManagedRuleSet `pulumi:"managedRuleSets"`
}

// ManagedRuleSetListInput is an input type that accepts ManagedRuleSetListArgs and ManagedRuleSetListOutput values.
// You can construct a concrete instance of `ManagedRuleSetListInput` via:
//
//          ManagedRuleSetListArgs{...}
type ManagedRuleSetListInput interface {
	pulumi.Input

	ToManagedRuleSetListOutput() ManagedRuleSetListOutput
	ToManagedRuleSetListOutputWithContext(context.Context) ManagedRuleSetListOutput
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListArgs struct {
	// List of rule sets.
	ManagedRuleSets ManagedRuleSetArrayInput `pulumi:"managedRuleSets"`
}

func (ManagedRuleSetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetList)(nil)).Elem()
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListOutput() ManagedRuleSetListOutput {
	return i.ToManagedRuleSetListOutputWithContext(context.Background())
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListOutputWithContext(ctx context.Context) ManagedRuleSetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListOutput)
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return i.ToManagedRuleSetListPtrOutputWithContext(context.Background())
}

func (i ManagedRuleSetListArgs) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListOutput).ToManagedRuleSetListPtrOutputWithContext(ctx)
}

// ManagedRuleSetListPtrInput is an input type that accepts ManagedRuleSetListArgs, ManagedRuleSetListPtr and ManagedRuleSetListPtrOutput values.
// You can construct a concrete instance of `ManagedRuleSetListPtrInput` via:
//
//          ManagedRuleSetListArgs{...}
//
//  or:
//
//          nil
type ManagedRuleSetListPtrInput interface {
	pulumi.Input

	ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput
	ToManagedRuleSetListPtrOutputWithContext(context.Context) ManagedRuleSetListPtrOutput
}

type managedRuleSetListPtrType ManagedRuleSetListArgs

func ManagedRuleSetListPtr(v *ManagedRuleSetListArgs) ManagedRuleSetListPtrInput {
	return (*managedRuleSetListPtrType)(v)
}

func (*managedRuleSetListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRuleSetList)(nil)).Elem()
}

func (i *managedRuleSetListPtrType) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return i.ToManagedRuleSetListPtrOutputWithContext(context.Background())
}

func (i *managedRuleSetListPtrType) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListPtrOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetList)(nil)).Elem()
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListOutput() ManagedRuleSetListOutput {
	return o
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListOutputWithContext(ctx context.Context) ManagedRuleSetListOutput {
	return o
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return o.ToManagedRuleSetListPtrOutputWithContext(context.Background())
}

func (o ManagedRuleSetListOutput) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return o.ApplyT(func(v ManagedRuleSetList) *ManagedRuleSetList {
		return &v
	}).(ManagedRuleSetListPtrOutput)
}

// List of rule sets.
func (o ManagedRuleSetListOutput) ManagedRuleSets() ManagedRuleSetArrayOutput {
	return o.ApplyT(func(v ManagedRuleSetList) []ManagedRuleSet { return v.ManagedRuleSets }).(ManagedRuleSetArrayOutput)
}

type ManagedRuleSetListPtrOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRuleSetList)(nil)).Elem()
}

func (o ManagedRuleSetListPtrOutput) ToManagedRuleSetListPtrOutput() ManagedRuleSetListPtrOutput {
	return o
}

func (o ManagedRuleSetListPtrOutput) ToManagedRuleSetListPtrOutputWithContext(ctx context.Context) ManagedRuleSetListPtrOutput {
	return o
}

func (o ManagedRuleSetListPtrOutput) Elem() ManagedRuleSetListOutput {
	return o.ApplyT(func(v *ManagedRuleSetList) ManagedRuleSetList { return *v }).(ManagedRuleSetListOutput)
}

// List of rule sets.
func (o ManagedRuleSetListPtrOutput) ManagedRuleSets() ManagedRuleSetArrayOutput {
	return o.ApplyT(func(v *ManagedRuleSetList) []ManagedRuleSet {
		if v == nil {
			return nil
		}
		return v.ManagedRuleSets
	}).(ManagedRuleSetArrayOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListResponse struct {
	// List of rule sets.
	ManagedRuleSets []ManagedRuleSetResponse `pulumi:"managedRuleSets"`
}

// ManagedRuleSetListResponseInput is an input type that accepts ManagedRuleSetListResponseArgs and ManagedRuleSetListResponseOutput values.
// You can construct a concrete instance of `ManagedRuleSetListResponseInput` via:
//
//          ManagedRuleSetListResponseArgs{...}
type ManagedRuleSetListResponseInput interface {
	pulumi.Input

	ToManagedRuleSetListResponseOutput() ManagedRuleSetListResponseOutput
	ToManagedRuleSetListResponseOutputWithContext(context.Context) ManagedRuleSetListResponseOutput
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListResponseArgs struct {
	// List of rule sets.
	ManagedRuleSets ManagedRuleSetResponseArrayInput `pulumi:"managedRuleSets"`
}

func (ManagedRuleSetListResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetListResponse)(nil)).Elem()
}

func (i ManagedRuleSetListResponseArgs) ToManagedRuleSetListResponseOutput() ManagedRuleSetListResponseOutput {
	return i.ToManagedRuleSetListResponseOutputWithContext(context.Background())
}

func (i ManagedRuleSetListResponseArgs) ToManagedRuleSetListResponseOutputWithContext(ctx context.Context) ManagedRuleSetListResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListResponseOutput)
}

func (i ManagedRuleSetListResponseArgs) ToManagedRuleSetListResponsePtrOutput() ManagedRuleSetListResponsePtrOutput {
	return i.ToManagedRuleSetListResponsePtrOutputWithContext(context.Background())
}

func (i ManagedRuleSetListResponseArgs) ToManagedRuleSetListResponsePtrOutputWithContext(ctx context.Context) ManagedRuleSetListResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListResponseOutput).ToManagedRuleSetListResponsePtrOutputWithContext(ctx)
}

// ManagedRuleSetListResponsePtrInput is an input type that accepts ManagedRuleSetListResponseArgs, ManagedRuleSetListResponsePtr and ManagedRuleSetListResponsePtrOutput values.
// You can construct a concrete instance of `ManagedRuleSetListResponsePtrInput` via:
//
//          ManagedRuleSetListResponseArgs{...}
//
//  or:
//
//          nil
type ManagedRuleSetListResponsePtrInput interface {
	pulumi.Input

	ToManagedRuleSetListResponsePtrOutput() ManagedRuleSetListResponsePtrOutput
	ToManagedRuleSetListResponsePtrOutputWithContext(context.Context) ManagedRuleSetListResponsePtrOutput
}

type managedRuleSetListResponsePtrType ManagedRuleSetListResponseArgs

func ManagedRuleSetListResponsePtr(v *ManagedRuleSetListResponseArgs) ManagedRuleSetListResponsePtrInput {
	return (*managedRuleSetListResponsePtrType)(v)
}

func (*managedRuleSetListResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRuleSetListResponse)(nil)).Elem()
}

func (i *managedRuleSetListResponsePtrType) ToManagedRuleSetListResponsePtrOutput() ManagedRuleSetListResponsePtrOutput {
	return i.ToManagedRuleSetListResponsePtrOutputWithContext(context.Background())
}

func (i *managedRuleSetListResponsePtrType) ToManagedRuleSetListResponsePtrOutputWithContext(ctx context.Context) ManagedRuleSetListResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetListResponsePtrOutput)
}

// Defines the list of managed rule sets for the policy.
type ManagedRuleSetListResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetListResponse)(nil)).Elem()
}

func (o ManagedRuleSetListResponseOutput) ToManagedRuleSetListResponseOutput() ManagedRuleSetListResponseOutput {
	return o
}

func (o ManagedRuleSetListResponseOutput) ToManagedRuleSetListResponseOutputWithContext(ctx context.Context) ManagedRuleSetListResponseOutput {
	return o
}

func (o ManagedRuleSetListResponseOutput) ToManagedRuleSetListResponsePtrOutput() ManagedRuleSetListResponsePtrOutput {
	return o.ToManagedRuleSetListResponsePtrOutputWithContext(context.Background())
}

func (o ManagedRuleSetListResponseOutput) ToManagedRuleSetListResponsePtrOutputWithContext(ctx context.Context) ManagedRuleSetListResponsePtrOutput {
	return o.ApplyT(func(v ManagedRuleSetListResponse) *ManagedRuleSetListResponse {
		return &v
	}).(ManagedRuleSetListResponsePtrOutput)
}

// List of rule sets.
func (o ManagedRuleSetListResponseOutput) ManagedRuleSets() ManagedRuleSetResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleSetListResponse) []ManagedRuleSetResponse { return v.ManagedRuleSets }).(ManagedRuleSetResponseArrayOutput)
}

type ManagedRuleSetListResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetListResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRuleSetListResponse)(nil)).Elem()
}

func (o ManagedRuleSetListResponsePtrOutput) ToManagedRuleSetListResponsePtrOutput() ManagedRuleSetListResponsePtrOutput {
	return o
}

func (o ManagedRuleSetListResponsePtrOutput) ToManagedRuleSetListResponsePtrOutputWithContext(ctx context.Context) ManagedRuleSetListResponsePtrOutput {
	return o
}

func (o ManagedRuleSetListResponsePtrOutput) Elem() ManagedRuleSetListResponseOutput {
	return o.ApplyT(func(v *ManagedRuleSetListResponse) ManagedRuleSetListResponse { return *v }).(ManagedRuleSetListResponseOutput)
}

// List of rule sets.
func (o ManagedRuleSetListResponsePtrOutput) ManagedRuleSets() ManagedRuleSetResponseArrayOutput {
	return o.ApplyT(func(v *ManagedRuleSetListResponse) []ManagedRuleSetResponse {
		if v == nil {
			return nil
		}
		return v.ManagedRuleSets
	}).(ManagedRuleSetResponseArrayOutput)
}

// Defines a managed rule set.
type ManagedRuleSetResponse struct {
	// Defines the rule group overrides to apply to the rule set.
	RuleGroupOverrides []ManagedRuleGroupOverrideResponse `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType string `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// ManagedRuleSetResponseInput is an input type that accepts ManagedRuleSetResponseArgs and ManagedRuleSetResponseOutput values.
// You can construct a concrete instance of `ManagedRuleSetResponseInput` via:
//
//          ManagedRuleSetResponseArgs{...}
type ManagedRuleSetResponseInput interface {
	pulumi.Input

	ToManagedRuleSetResponseOutput() ManagedRuleSetResponseOutput
	ToManagedRuleSetResponseOutputWithContext(context.Context) ManagedRuleSetResponseOutput
}

// Defines a managed rule set.
type ManagedRuleSetResponseArgs struct {
	// Defines the rule group overrides to apply to the rule set.
	RuleGroupOverrides ManagedRuleGroupOverrideResponseArrayInput `pulumi:"ruleGroupOverrides"`
	// Defines the rule set type to use.
	RuleSetType pulumi.StringInput `pulumi:"ruleSetType"`
	// Defines the version of the rule set to use.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (ManagedRuleSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetResponse)(nil)).Elem()
}

func (i ManagedRuleSetResponseArgs) ToManagedRuleSetResponseOutput() ManagedRuleSetResponseOutput {
	return i.ToManagedRuleSetResponseOutputWithContext(context.Background())
}

func (i ManagedRuleSetResponseArgs) ToManagedRuleSetResponseOutputWithContext(ctx context.Context) ManagedRuleSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetResponseOutput)
}

// ManagedRuleSetResponseArrayInput is an input type that accepts ManagedRuleSetResponseArray and ManagedRuleSetResponseArrayOutput values.
// You can construct a concrete instance of `ManagedRuleSetResponseArrayInput` via:
//
//          ManagedRuleSetResponseArray{ ManagedRuleSetResponseArgs{...} }
type ManagedRuleSetResponseArrayInput interface {
	pulumi.Input

	ToManagedRuleSetResponseArrayOutput() ManagedRuleSetResponseArrayOutput
	ToManagedRuleSetResponseArrayOutputWithContext(context.Context) ManagedRuleSetResponseArrayOutput
}

type ManagedRuleSetResponseArray []ManagedRuleSetResponseInput

func (ManagedRuleSetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSetResponse)(nil)).Elem()
}

func (i ManagedRuleSetResponseArray) ToManagedRuleSetResponseArrayOutput() ManagedRuleSetResponseArrayOutput {
	return i.ToManagedRuleSetResponseArrayOutputWithContext(context.Background())
}

func (i ManagedRuleSetResponseArray) ToManagedRuleSetResponseArrayOutputWithContext(ctx context.Context) ManagedRuleSetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRuleSetResponseArrayOutput)
}

// Defines a managed rule set.
type ManagedRuleSetResponseOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRuleSetResponse)(nil)).Elem()
}

func (o ManagedRuleSetResponseOutput) ToManagedRuleSetResponseOutput() ManagedRuleSetResponseOutput {
	return o
}

func (o ManagedRuleSetResponseOutput) ToManagedRuleSetResponseOutputWithContext(ctx context.Context) ManagedRuleSetResponseOutput {
	return o
}

// Defines the rule group overrides to apply to the rule set.
func (o ManagedRuleSetResponseOutput) RuleGroupOverrides() ManagedRuleGroupOverrideResponseArrayOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) []ManagedRuleGroupOverrideResponse { return v.RuleGroupOverrides }).(ManagedRuleGroupOverrideResponseArrayOutput)
}

// Defines the rule set type to use.
func (o ManagedRuleSetResponseOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// Defines the version of the rule set to use.
func (o ManagedRuleSetResponseOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedRuleSetResponse) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ManagedRuleSetResponseArrayOutput struct{ *pulumi.OutputState }

func (ManagedRuleSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ManagedRuleSetResponse)(nil)).Elem()
}

func (o ManagedRuleSetResponseArrayOutput) ToManagedRuleSetResponseArrayOutput() ManagedRuleSetResponseArrayOutput {
	return o
}

func (o ManagedRuleSetResponseArrayOutput) ToManagedRuleSetResponseArrayOutputWithContext(ctx context.Context) ManagedRuleSetResponseArrayOutput {
	return o
}

func (o ManagedRuleSetResponseArrayOutput) Index(i pulumi.IntInput) ManagedRuleSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ManagedRuleSetResponse {
		return vs[0].([]ManagedRuleSetResponse)[vs[1].(int)]
	}).(ManagedRuleSetResponseOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ManagedRulesDefinition struct {
	// The Exclusions that are applied on the policy.
	Exclusions []OwaspCrsExclusionEntry `pulumi:"exclusions"`
	// The managed rule sets that are associated with the policy.
	ManagedRuleSets []ManagedRuleSet `pulumi:"managedRuleSets"`
}

// ManagedRulesDefinitionInput is an input type that accepts ManagedRulesDefinitionArgs and ManagedRulesDefinitionOutput values.
// You can construct a concrete instance of `ManagedRulesDefinitionInput` via:
//
//          ManagedRulesDefinitionArgs{...}
type ManagedRulesDefinitionInput interface {
	pulumi.Input

	ToManagedRulesDefinitionOutput() ManagedRulesDefinitionOutput
	ToManagedRulesDefinitionOutputWithContext(context.Context) ManagedRulesDefinitionOutput
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ManagedRulesDefinitionArgs struct {
	// The Exclusions that are applied on the policy.
	Exclusions OwaspCrsExclusionEntryArrayInput `pulumi:"exclusions"`
	// The managed rule sets that are associated with the policy.
	ManagedRuleSets ManagedRuleSetArrayInput `pulumi:"managedRuleSets"`
}

func (ManagedRulesDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRulesDefinition)(nil)).Elem()
}

func (i ManagedRulesDefinitionArgs) ToManagedRulesDefinitionOutput() ManagedRulesDefinitionOutput {
	return i.ToManagedRulesDefinitionOutputWithContext(context.Background())
}

func (i ManagedRulesDefinitionArgs) ToManagedRulesDefinitionOutputWithContext(ctx context.Context) ManagedRulesDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRulesDefinitionOutput)
}

func (i ManagedRulesDefinitionArgs) ToManagedRulesDefinitionPtrOutput() ManagedRulesDefinitionPtrOutput {
	return i.ToManagedRulesDefinitionPtrOutputWithContext(context.Background())
}

func (i ManagedRulesDefinitionArgs) ToManagedRulesDefinitionPtrOutputWithContext(ctx context.Context) ManagedRulesDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRulesDefinitionOutput).ToManagedRulesDefinitionPtrOutputWithContext(ctx)
}

// ManagedRulesDefinitionPtrInput is an input type that accepts ManagedRulesDefinitionArgs, ManagedRulesDefinitionPtr and ManagedRulesDefinitionPtrOutput values.
// You can construct a concrete instance of `ManagedRulesDefinitionPtrInput` via:
//
//          ManagedRulesDefinitionArgs{...}
//
//  or:
//
//          nil
type ManagedRulesDefinitionPtrInput interface {
	pulumi.Input

	ToManagedRulesDefinitionPtrOutput() ManagedRulesDefinitionPtrOutput
	ToManagedRulesDefinitionPtrOutputWithContext(context.Context) ManagedRulesDefinitionPtrOutput
}

type managedRulesDefinitionPtrType ManagedRulesDefinitionArgs

func ManagedRulesDefinitionPtr(v *ManagedRulesDefinitionArgs) ManagedRulesDefinitionPtrInput {
	return (*managedRulesDefinitionPtrType)(v)
}

func (*managedRulesDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRulesDefinition)(nil)).Elem()
}

func (i *managedRulesDefinitionPtrType) ToManagedRulesDefinitionPtrOutput() ManagedRulesDefinitionPtrOutput {
	return i.ToManagedRulesDefinitionPtrOutputWithContext(context.Background())
}

func (i *managedRulesDefinitionPtrType) ToManagedRulesDefinitionPtrOutputWithContext(ctx context.Context) ManagedRulesDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRulesDefinitionPtrOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ManagedRulesDefinitionOutput struct{ *pulumi.OutputState }

func (ManagedRulesDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRulesDefinition)(nil)).Elem()
}

func (o ManagedRulesDefinitionOutput) ToManagedRulesDefinitionOutput() ManagedRulesDefinitionOutput {
	return o
}

func (o ManagedRulesDefinitionOutput) ToManagedRulesDefinitionOutputWithContext(ctx context.Context) ManagedRulesDefinitionOutput {
	return o
}

func (o ManagedRulesDefinitionOutput) ToManagedRulesDefinitionPtrOutput() ManagedRulesDefinitionPtrOutput {
	return o.ToManagedRulesDefinitionPtrOutputWithContext(context.Background())
}

func (o ManagedRulesDefinitionOutput) ToManagedRulesDefinitionPtrOutputWithContext(ctx context.Context) ManagedRulesDefinitionPtrOutput {
	return o.ApplyT(func(v ManagedRulesDefinition) *ManagedRulesDefinition {
		return &v
	}).(ManagedRulesDefinitionPtrOutput)
}

// The Exclusions that are applied on the policy.
func (o ManagedRulesDefinitionOutput) Exclusions() OwaspCrsExclusionEntryArrayOutput {
	return o.ApplyT(func(v ManagedRulesDefinition) []OwaspCrsExclusionEntry { return v.Exclusions }).(OwaspCrsExclusionEntryArrayOutput)
}

// The managed rule sets that are associated with the policy.
func (o ManagedRulesDefinitionOutput) ManagedRuleSets() ManagedRuleSetArrayOutput {
	return o.ApplyT(func(v ManagedRulesDefinition) []ManagedRuleSet { return v.ManagedRuleSets }).(ManagedRuleSetArrayOutput)
}

type ManagedRulesDefinitionPtrOutput struct{ *pulumi.OutputState }

func (ManagedRulesDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRulesDefinition)(nil)).Elem()
}

func (o ManagedRulesDefinitionPtrOutput) ToManagedRulesDefinitionPtrOutput() ManagedRulesDefinitionPtrOutput {
	return o
}

func (o ManagedRulesDefinitionPtrOutput) ToManagedRulesDefinitionPtrOutputWithContext(ctx context.Context) ManagedRulesDefinitionPtrOutput {
	return o
}

func (o ManagedRulesDefinitionPtrOutput) Elem() ManagedRulesDefinitionOutput {
	return o.ApplyT(func(v *ManagedRulesDefinition) ManagedRulesDefinition { return *v }).(ManagedRulesDefinitionOutput)
}

// The Exclusions that are applied on the policy.
func (o ManagedRulesDefinitionPtrOutput) Exclusions() OwaspCrsExclusionEntryArrayOutput {
	return o.ApplyT(func(v *ManagedRulesDefinition) []OwaspCrsExclusionEntry {
		if v == nil {
			return nil
		}
		return v.Exclusions
	}).(OwaspCrsExclusionEntryArrayOutput)
}

// The managed rule sets that are associated with the policy.
func (o ManagedRulesDefinitionPtrOutput) ManagedRuleSets() ManagedRuleSetArrayOutput {
	return o.ApplyT(func(v *ManagedRulesDefinition) []ManagedRuleSet {
		if v == nil {
			return nil
		}
		return v.ManagedRuleSets
	}).(ManagedRuleSetArrayOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ManagedRulesDefinitionResponse struct {
	// The Exclusions that are applied on the policy.
	Exclusions []OwaspCrsExclusionEntryResponse `pulumi:"exclusions"`
	// The managed rule sets that are associated with the policy.
	ManagedRuleSets []ManagedRuleSetResponse `pulumi:"managedRuleSets"`
}

// ManagedRulesDefinitionResponseInput is an input type that accepts ManagedRulesDefinitionResponseArgs and ManagedRulesDefinitionResponseOutput values.
// You can construct a concrete instance of `ManagedRulesDefinitionResponseInput` via:
//
//          ManagedRulesDefinitionResponseArgs{...}
type ManagedRulesDefinitionResponseInput interface {
	pulumi.Input

	ToManagedRulesDefinitionResponseOutput() ManagedRulesDefinitionResponseOutput
	ToManagedRulesDefinitionResponseOutputWithContext(context.Context) ManagedRulesDefinitionResponseOutput
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ManagedRulesDefinitionResponseArgs struct {
	// The Exclusions that are applied on the policy.
	Exclusions OwaspCrsExclusionEntryResponseArrayInput `pulumi:"exclusions"`
	// The managed rule sets that are associated with the policy.
	ManagedRuleSets ManagedRuleSetResponseArrayInput `pulumi:"managedRuleSets"`
}

func (ManagedRulesDefinitionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRulesDefinitionResponse)(nil)).Elem()
}

func (i ManagedRulesDefinitionResponseArgs) ToManagedRulesDefinitionResponseOutput() ManagedRulesDefinitionResponseOutput {
	return i.ToManagedRulesDefinitionResponseOutputWithContext(context.Background())
}

func (i ManagedRulesDefinitionResponseArgs) ToManagedRulesDefinitionResponseOutputWithContext(ctx context.Context) ManagedRulesDefinitionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRulesDefinitionResponseOutput)
}

func (i ManagedRulesDefinitionResponseArgs) ToManagedRulesDefinitionResponsePtrOutput() ManagedRulesDefinitionResponsePtrOutput {
	return i.ToManagedRulesDefinitionResponsePtrOutputWithContext(context.Background())
}

func (i ManagedRulesDefinitionResponseArgs) ToManagedRulesDefinitionResponsePtrOutputWithContext(ctx context.Context) ManagedRulesDefinitionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRulesDefinitionResponseOutput).ToManagedRulesDefinitionResponsePtrOutputWithContext(ctx)
}

// ManagedRulesDefinitionResponsePtrInput is an input type that accepts ManagedRulesDefinitionResponseArgs, ManagedRulesDefinitionResponsePtr and ManagedRulesDefinitionResponsePtrOutput values.
// You can construct a concrete instance of `ManagedRulesDefinitionResponsePtrInput` via:
//
//          ManagedRulesDefinitionResponseArgs{...}
//
//  or:
//
//          nil
type ManagedRulesDefinitionResponsePtrInput interface {
	pulumi.Input

	ToManagedRulesDefinitionResponsePtrOutput() ManagedRulesDefinitionResponsePtrOutput
	ToManagedRulesDefinitionResponsePtrOutputWithContext(context.Context) ManagedRulesDefinitionResponsePtrOutput
}

type managedRulesDefinitionResponsePtrType ManagedRulesDefinitionResponseArgs

func ManagedRulesDefinitionResponsePtr(v *ManagedRulesDefinitionResponseArgs) ManagedRulesDefinitionResponsePtrInput {
	return (*managedRulesDefinitionResponsePtrType)(v)
}

func (*managedRulesDefinitionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRulesDefinitionResponse)(nil)).Elem()
}

func (i *managedRulesDefinitionResponsePtrType) ToManagedRulesDefinitionResponsePtrOutput() ManagedRulesDefinitionResponsePtrOutput {
	return i.ToManagedRulesDefinitionResponsePtrOutputWithContext(context.Background())
}

func (i *managedRulesDefinitionResponsePtrType) ToManagedRulesDefinitionResponsePtrOutputWithContext(ctx context.Context) ManagedRulesDefinitionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedRulesDefinitionResponsePtrOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type ManagedRulesDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ManagedRulesDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedRulesDefinitionResponse)(nil)).Elem()
}

func (o ManagedRulesDefinitionResponseOutput) ToManagedRulesDefinitionResponseOutput() ManagedRulesDefinitionResponseOutput {
	return o
}

func (o ManagedRulesDefinitionResponseOutput) ToManagedRulesDefinitionResponseOutputWithContext(ctx context.Context) ManagedRulesDefinitionResponseOutput {
	return o
}

func (o ManagedRulesDefinitionResponseOutput) ToManagedRulesDefinitionResponsePtrOutput() ManagedRulesDefinitionResponsePtrOutput {
	return o.ToManagedRulesDefinitionResponsePtrOutputWithContext(context.Background())
}

func (o ManagedRulesDefinitionResponseOutput) ToManagedRulesDefinitionResponsePtrOutputWithContext(ctx context.Context) ManagedRulesDefinitionResponsePtrOutput {
	return o.ApplyT(func(v ManagedRulesDefinitionResponse) *ManagedRulesDefinitionResponse {
		return &v
	}).(ManagedRulesDefinitionResponsePtrOutput)
}

// The Exclusions that are applied on the policy.
func (o ManagedRulesDefinitionResponseOutput) Exclusions() OwaspCrsExclusionEntryResponseArrayOutput {
	return o.ApplyT(func(v ManagedRulesDefinitionResponse) []OwaspCrsExclusionEntryResponse { return v.Exclusions }).(OwaspCrsExclusionEntryResponseArrayOutput)
}

// The managed rule sets that are associated with the policy.
func (o ManagedRulesDefinitionResponseOutput) ManagedRuleSets() ManagedRuleSetResponseArrayOutput {
	return o.ApplyT(func(v ManagedRulesDefinitionResponse) []ManagedRuleSetResponse { return v.ManagedRuleSets }).(ManagedRuleSetResponseArrayOutput)
}

type ManagedRulesDefinitionResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedRulesDefinitionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedRulesDefinitionResponse)(nil)).Elem()
}

func (o ManagedRulesDefinitionResponsePtrOutput) ToManagedRulesDefinitionResponsePtrOutput() ManagedRulesDefinitionResponsePtrOutput {
	return o
}

func (o ManagedRulesDefinitionResponsePtrOutput) ToManagedRulesDefinitionResponsePtrOutputWithContext(ctx context.Context) ManagedRulesDefinitionResponsePtrOutput {
	return o
}

func (o ManagedRulesDefinitionResponsePtrOutput) Elem() ManagedRulesDefinitionResponseOutput {
	return o.ApplyT(func(v *ManagedRulesDefinitionResponse) ManagedRulesDefinitionResponse { return *v }).(ManagedRulesDefinitionResponseOutput)
}

// The Exclusions that are applied on the policy.
func (o ManagedRulesDefinitionResponsePtrOutput) Exclusions() OwaspCrsExclusionEntryResponseArrayOutput {
	return o.ApplyT(func(v *ManagedRulesDefinitionResponse) []OwaspCrsExclusionEntryResponse {
		if v == nil {
			return nil
		}
		return v.Exclusions
	}).(OwaspCrsExclusionEntryResponseArrayOutput)
}

// The managed rule sets that are associated with the policy.
func (o ManagedRulesDefinitionResponsePtrOutput) ManagedRuleSets() ManagedRuleSetResponseArrayOutput {
	return o.ApplyT(func(v *ManagedRulesDefinitionResponse) []ManagedRuleSetResponse {
		if v == nil {
			return nil
		}
		return v.ManagedRuleSets
	}).(ManagedRuleSetResponseArrayOutput)
}

// Identity for the resource.
type ManagedServiceIdentity struct {
	// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
	Type *string `pulumi:"type"`
}

// ManagedServiceIdentityInput is an input type that accepts ManagedServiceIdentityArgs and ManagedServiceIdentityOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityInput` via:
//
//          ManagedServiceIdentityArgs{...}
type ManagedServiceIdentityInput interface {
	pulumi.Input

	ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput
	ToManagedServiceIdentityOutputWithContext(context.Context) ManagedServiceIdentityOutput
}

// Identity for the resource.
type ManagedServiceIdentityArgs struct {
	// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ManagedServiceIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return i.ToManagedServiceIdentityOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput)
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityArgs) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityOutput).ToManagedServiceIdentityPtrOutputWithContext(ctx)
}

// ManagedServiceIdentityPtrInput is an input type that accepts ManagedServiceIdentityArgs, ManagedServiceIdentityPtr and ManagedServiceIdentityPtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityPtrInput` via:
//
//          ManagedServiceIdentityArgs{...}
//
//  or:
//
//          nil
type ManagedServiceIdentityPtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput
	ToManagedServiceIdentityPtrOutputWithContext(context.Context) ManagedServiceIdentityPtrOutput
}

type managedServiceIdentityPtrType ManagedServiceIdentityArgs

func ManagedServiceIdentityPtr(v *ManagedServiceIdentityArgs) ManagedServiceIdentityPtrInput {
	return (*managedServiceIdentityPtrType)(v)
}

func (*managedServiceIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return i.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityPtrType) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityPtrOutput)
}

// Identity for the resource.
type ManagedServiceIdentityOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutput() ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityOutputWithContext(ctx context.Context) ManagedServiceIdentityOutput {
	return o
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o.ToManagedServiceIdentityPtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) *ManagedServiceIdentity {
		return &v
	}).(ManagedServiceIdentityPtrOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
func (o ManagedServiceIdentityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ManagedServiceIdentityPtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentity)(nil)).Elem()
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutput() ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) ToManagedServiceIdentityPtrOutputWithContext(ctx context.Context) ManagedServiceIdentityPtrOutput {
	return o
}

func (o ManagedServiceIdentityPtrOutput) Elem() ManagedServiceIdentityOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) ManagedServiceIdentity { return *v }).(ManagedServiceIdentityOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
func (o ManagedServiceIdentityPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentity) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Identity for the resource.
type ManagedServiceIdentityResponse struct {
	// The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId string `pulumi:"principalId"`
	// The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId string `pulumi:"tenantId"`
	// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
	Type *string `pulumi:"type"`
	// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities map[string]ManagedServiceIdentityResponseUserAssignedIdentities `pulumi:"userAssignedIdentities"`
}

// ManagedServiceIdentityResponseInput is an input type that accepts ManagedServiceIdentityResponseArgs and ManagedServiceIdentityResponseOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityResponseInput` via:
//
//          ManagedServiceIdentityResponseArgs{...}
type ManagedServiceIdentityResponseInput interface {
	pulumi.Input

	ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput
	ToManagedServiceIdentityResponseOutputWithContext(context.Context) ManagedServiceIdentityResponseOutput
}

// Identity for the resource.
type ManagedServiceIdentityResponseArgs struct {
	// The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
	// The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
	UserAssignedIdentities ManagedServiceIdentityResponseUserAssignedIdentitiesMapInput `pulumi:"userAssignedIdentities"`
}

func (ManagedServiceIdentityResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return i.ToManagedServiceIdentityResponseOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponseOutput)
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return i.ToManagedServiceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityResponseArgs) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponseOutput).ToManagedServiceIdentityResponsePtrOutputWithContext(ctx)
}

// ManagedServiceIdentityResponsePtrInput is an input type that accepts ManagedServiceIdentityResponseArgs, ManagedServiceIdentityResponsePtr and ManagedServiceIdentityResponsePtrOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityResponsePtrInput` via:
//
//          ManagedServiceIdentityResponseArgs{...}
//
//  or:
//
//          nil
type ManagedServiceIdentityResponsePtrInput interface {
	pulumi.Input

	ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput
	ToManagedServiceIdentityResponsePtrOutputWithContext(context.Context) ManagedServiceIdentityResponsePtrOutput
}

type managedServiceIdentityResponsePtrType ManagedServiceIdentityResponseArgs

func ManagedServiceIdentityResponsePtr(v *ManagedServiceIdentityResponseArgs) ManagedServiceIdentityResponsePtrInput {
	return (*managedServiceIdentityResponsePtrType)(v)
}

func (*managedServiceIdentityResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (i *managedServiceIdentityResponsePtrType) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return i.ToManagedServiceIdentityResponsePtrOutputWithContext(context.Background())
}

func (i *managedServiceIdentityResponsePtrType) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponsePtrOutput)
}

// Identity for the resource.
type ManagedServiceIdentityResponseOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutput() ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponseOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseOutput {
	return o
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o.ToManagedServiceIdentityResponsePtrOutputWithContext(context.Background())
}

func (o ManagedServiceIdentityResponseOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) *ManagedServiceIdentityResponse {
		return &v
	}).(ManagedServiceIdentityResponsePtrOutput)
}

// The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.PrincipalId }).(pulumi.StringOutput)
}

// The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponseOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) string { return v.TenantId }).(pulumi.StringOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
func (o ManagedServiceIdentityResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedServiceIdentityResponseOutput) UserAssignedIdentities() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponse) map[string]ManagedServiceIdentityResponseUserAssignedIdentities {
		return v.UserAssignedIdentities
	}).(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput)
}

type ManagedServiceIdentityResponsePtrOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedServiceIdentityResponse)(nil)).Elem()
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutput() ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) ToManagedServiceIdentityResponsePtrOutputWithContext(ctx context.Context) ManagedServiceIdentityResponsePtrOutput {
	return o
}

func (o ManagedServiceIdentityResponsePtrOutput) Elem() ManagedServiceIdentityResponseOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) ManagedServiceIdentityResponse { return *v }).(ManagedServiceIdentityResponseOutput)
}

// The principal id of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) PrincipalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.PrincipalId
	}).(pulumi.StringPtrOutput)
}

// The tenant id of the system assigned identity. This property will only be provided for a system assigned identity.
func (o ManagedServiceIdentityResponsePtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

// The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the virtual machine.
func (o ManagedServiceIdentityResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
func (o ManagedServiceIdentityResponsePtrOutput) UserAssignedIdentities() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o.ApplyT(func(v *ManagedServiceIdentityResponse) map[string]ManagedServiceIdentityResponseUserAssignedIdentities {
		if v == nil {
			return nil
		}
		return v.UserAssignedIdentities
	}).(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput)
}

type ManagedServiceIdentityResponseUserAssignedIdentities struct {
	// The client id of user assigned identity.
	ClientId string `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId string `pulumi:"principalId"`
}

// ManagedServiceIdentityResponseUserAssignedIdentitiesInput is an input type that accepts ManagedServiceIdentityResponseUserAssignedIdentitiesArgs and ManagedServiceIdentityResponseUserAssignedIdentitiesOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityResponseUserAssignedIdentitiesInput` via:
//
//          ManagedServiceIdentityResponseUserAssignedIdentitiesArgs{...}
type ManagedServiceIdentityResponseUserAssignedIdentitiesInput interface {
	pulumi.Input

	ToManagedServiceIdentityResponseUserAssignedIdentitiesOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesOutput
	ToManagedServiceIdentityResponseUserAssignedIdentitiesOutputWithContext(context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesOutput
}

type ManagedServiceIdentityResponseUserAssignedIdentitiesArgs struct {
	// The client id of user assigned identity.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The principal id of user assigned identity.
	PrincipalId pulumi.StringInput `pulumi:"principalId"`
}

func (ManagedServiceIdentityResponseUserAssignedIdentitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (i ManagedServiceIdentityResponseUserAssignedIdentitiesArgs) ToManagedServiceIdentityResponseUserAssignedIdentitiesOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return i.ToManagedServiceIdentityResponseUserAssignedIdentitiesOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityResponseUserAssignedIdentitiesArgs) ToManagedServiceIdentityResponseUserAssignedIdentitiesOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponseUserAssignedIdentitiesOutput)
}

// ManagedServiceIdentityResponseUserAssignedIdentitiesMapInput is an input type that accepts ManagedServiceIdentityResponseUserAssignedIdentitiesMap and ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput values.
// You can construct a concrete instance of `ManagedServiceIdentityResponseUserAssignedIdentitiesMapInput` via:
//
//          ManagedServiceIdentityResponseUserAssignedIdentitiesMap{ "key": ManagedServiceIdentityResponseUserAssignedIdentitiesArgs{...} }
type ManagedServiceIdentityResponseUserAssignedIdentitiesMapInput interface {
	pulumi.Input

	ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput
	ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutputWithContext(context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput
}

type ManagedServiceIdentityResponseUserAssignedIdentitiesMap map[string]ManagedServiceIdentityResponseUserAssignedIdentitiesInput

func (ManagedServiceIdentityResponseUserAssignedIdentitiesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedServiceIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (i ManagedServiceIdentityResponseUserAssignedIdentitiesMap) ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return i.ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutputWithContext(context.Background())
}

func (i ManagedServiceIdentityResponseUserAssignedIdentitiesMap) ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput)
}

type ManagedServiceIdentityResponseUserAssignedIdentitiesOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedServiceIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return o
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return o
}

// The client id of user assigned identity.
func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponseUserAssignedIdentities) string { return v.ClientId }).(pulumi.StringOutput)
}

// The principal id of user assigned identity.
func (o ManagedServiceIdentityResponseUserAssignedIdentitiesOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v ManagedServiceIdentityResponseUserAssignedIdentities) string { return v.PrincipalId }).(pulumi.StringOutput)
}

type ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput struct{ *pulumi.OutputState }

func (ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ManagedServiceIdentityResponseUserAssignedIdentities)(nil)).Elem()
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput() ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) ToManagedServiceIdentityResponseUserAssignedIdentitiesMapOutputWithContext(ctx context.Context) ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput {
	return o
}

func (o ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput) MapIndex(k pulumi.StringInput) ManagedServiceIdentityResponseUserAssignedIdentitiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ManagedServiceIdentityResponseUserAssignedIdentities {
		return vs[0].(map[string]ManagedServiceIdentityResponseUserAssignedIdentities)[vs[1].(string)]
	}).(ManagedServiceIdentityResponseUserAssignedIdentitiesOutput)
}

// Define match conditions.
type MatchCondition struct {
	// Match value.
	MatchValues []string `pulumi:"matchValues"`
	// List of match variables.
	MatchVariables []MatchVariable `pulumi:"matchVariables"`
	// Whether this is negate condition or not.
	NegationConditon *bool `pulumi:"negationConditon"`
	// The operator to be matched.
	Operator string `pulumi:"operator"`
	// List of transforms.
	Transforms []string `pulumi:"transforms"`
}

// MatchConditionInput is an input type that accepts MatchConditionArgs and MatchConditionOutput values.
// You can construct a concrete instance of `MatchConditionInput` via:
//
//          MatchConditionArgs{...}
type MatchConditionInput interface {
	pulumi.Input

	ToMatchConditionOutput() MatchConditionOutput
	ToMatchConditionOutputWithContext(context.Context) MatchConditionOutput
}

// Define match conditions.
type MatchConditionArgs struct {
	// Match value.
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// List of match variables.
	MatchVariables MatchVariableArrayInput `pulumi:"matchVariables"`
	// Whether this is negate condition or not.
	NegationConditon pulumi.BoolPtrInput `pulumi:"negationConditon"`
	// The operator to be matched.
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms.
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (MatchConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchCondition)(nil)).Elem()
}

func (i MatchConditionArgs) ToMatchConditionOutput() MatchConditionOutput {
	return i.ToMatchConditionOutputWithContext(context.Background())
}

func (i MatchConditionArgs) ToMatchConditionOutputWithContext(ctx context.Context) MatchConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchConditionOutput)
}

// MatchConditionArrayInput is an input type that accepts MatchConditionArray and MatchConditionArrayOutput values.
// You can construct a concrete instance of `MatchConditionArrayInput` via:
//
//          MatchConditionArray{ MatchConditionArgs{...} }
type MatchConditionArrayInput interface {
	pulumi.Input

	ToMatchConditionArrayOutput() MatchConditionArrayOutput
	ToMatchConditionArrayOutputWithContext(context.Context) MatchConditionArrayOutput
}

type MatchConditionArray []MatchConditionInput

func (MatchConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchCondition)(nil)).Elem()
}

func (i MatchConditionArray) ToMatchConditionArrayOutput() MatchConditionArrayOutput {
	return i.ToMatchConditionArrayOutputWithContext(context.Background())
}

func (i MatchConditionArray) ToMatchConditionArrayOutputWithContext(ctx context.Context) MatchConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchConditionArrayOutput)
}

// Define match conditions.
type MatchConditionOutput struct{ *pulumi.OutputState }

func (MatchConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchCondition)(nil)).Elem()
}

func (o MatchConditionOutput) ToMatchConditionOutput() MatchConditionOutput {
	return o
}

func (o MatchConditionOutput) ToMatchConditionOutputWithContext(ctx context.Context) MatchConditionOutput {
	return o
}

// Match value.
func (o MatchConditionOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchCondition) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// List of match variables.
func (o MatchConditionOutput) MatchVariables() MatchVariableArrayOutput {
	return o.ApplyT(func(v MatchCondition) []MatchVariable { return v.MatchVariables }).(MatchVariableArrayOutput)
}

// Whether this is negate condition or not.
func (o MatchConditionOutput) NegationConditon() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MatchCondition) *bool { return v.NegationConditon }).(pulumi.BoolPtrOutput)
}

// The operator to be matched.
func (o MatchConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v MatchCondition) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms.
func (o MatchConditionOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchCondition) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

type MatchConditionArrayOutput struct{ *pulumi.OutputState }

func (MatchConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchCondition)(nil)).Elem()
}

func (o MatchConditionArrayOutput) ToMatchConditionArrayOutput() MatchConditionArrayOutput {
	return o
}

func (o MatchConditionArrayOutput) ToMatchConditionArrayOutputWithContext(ctx context.Context) MatchConditionArrayOutput {
	return o
}

func (o MatchConditionArrayOutput) Index(i pulumi.IntInput) MatchConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MatchCondition {
		return vs[0].([]MatchCondition)[vs[1].(int)]
	}).(MatchConditionOutput)
}

// Define match conditions.
type MatchConditionResponse struct {
	// Match value.
	MatchValues []string `pulumi:"matchValues"`
	// List of match variables.
	MatchVariables []MatchVariableResponse `pulumi:"matchVariables"`
	// Whether this is negate condition or not.
	NegationConditon *bool `pulumi:"negationConditon"`
	// The operator to be matched.
	Operator string `pulumi:"operator"`
	// List of transforms.
	Transforms []string `pulumi:"transforms"`
}

// MatchConditionResponseInput is an input type that accepts MatchConditionResponseArgs and MatchConditionResponseOutput values.
// You can construct a concrete instance of `MatchConditionResponseInput` via:
//
//          MatchConditionResponseArgs{...}
type MatchConditionResponseInput interface {
	pulumi.Input

	ToMatchConditionResponseOutput() MatchConditionResponseOutput
	ToMatchConditionResponseOutputWithContext(context.Context) MatchConditionResponseOutput
}

// Define match conditions.
type MatchConditionResponseArgs struct {
	// Match value.
	MatchValues pulumi.StringArrayInput `pulumi:"matchValues"`
	// List of match variables.
	MatchVariables MatchVariableResponseArrayInput `pulumi:"matchVariables"`
	// Whether this is negate condition or not.
	NegationConditon pulumi.BoolPtrInput `pulumi:"negationConditon"`
	// The operator to be matched.
	Operator pulumi.StringInput `pulumi:"operator"`
	// List of transforms.
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (MatchConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchConditionResponse)(nil)).Elem()
}

func (i MatchConditionResponseArgs) ToMatchConditionResponseOutput() MatchConditionResponseOutput {
	return i.ToMatchConditionResponseOutputWithContext(context.Background())
}

func (i MatchConditionResponseArgs) ToMatchConditionResponseOutputWithContext(ctx context.Context) MatchConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchConditionResponseOutput)
}

// MatchConditionResponseArrayInput is an input type that accepts MatchConditionResponseArray and MatchConditionResponseArrayOutput values.
// You can construct a concrete instance of `MatchConditionResponseArrayInput` via:
//
//          MatchConditionResponseArray{ MatchConditionResponseArgs{...} }
type MatchConditionResponseArrayInput interface {
	pulumi.Input

	ToMatchConditionResponseArrayOutput() MatchConditionResponseArrayOutput
	ToMatchConditionResponseArrayOutputWithContext(context.Context) MatchConditionResponseArrayOutput
}

type MatchConditionResponseArray []MatchConditionResponseInput

func (MatchConditionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchConditionResponse)(nil)).Elem()
}

func (i MatchConditionResponseArray) ToMatchConditionResponseArrayOutput() MatchConditionResponseArrayOutput {
	return i.ToMatchConditionResponseArrayOutputWithContext(context.Background())
}

func (i MatchConditionResponseArray) ToMatchConditionResponseArrayOutputWithContext(ctx context.Context) MatchConditionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchConditionResponseArrayOutput)
}

// Define match conditions.
type MatchConditionResponseOutput struct{ *pulumi.OutputState }

func (MatchConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchConditionResponse)(nil)).Elem()
}

func (o MatchConditionResponseOutput) ToMatchConditionResponseOutput() MatchConditionResponseOutput {
	return o
}

func (o MatchConditionResponseOutput) ToMatchConditionResponseOutputWithContext(ctx context.Context) MatchConditionResponseOutput {
	return o
}

// Match value.
func (o MatchConditionResponseOutput) MatchValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchConditionResponse) []string { return v.MatchValues }).(pulumi.StringArrayOutput)
}

// List of match variables.
func (o MatchConditionResponseOutput) MatchVariables() MatchVariableResponseArrayOutput {
	return o.ApplyT(func(v MatchConditionResponse) []MatchVariableResponse { return v.MatchVariables }).(MatchVariableResponseArrayOutput)
}

// Whether this is negate condition or not.
func (o MatchConditionResponseOutput) NegationConditon() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MatchConditionResponse) *bool { return v.NegationConditon }).(pulumi.BoolPtrOutput)
}

// The operator to be matched.
func (o MatchConditionResponseOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v MatchConditionResponse) string { return v.Operator }).(pulumi.StringOutput)
}

// List of transforms.
func (o MatchConditionResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MatchConditionResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

type MatchConditionResponseArrayOutput struct{ *pulumi.OutputState }

func (MatchConditionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchConditionResponse)(nil)).Elem()
}

func (o MatchConditionResponseArrayOutput) ToMatchConditionResponseArrayOutput() MatchConditionResponseArrayOutput {
	return o
}

func (o MatchConditionResponseArrayOutput) ToMatchConditionResponseArrayOutputWithContext(ctx context.Context) MatchConditionResponseArrayOutput {
	return o
}

func (o MatchConditionResponseArrayOutput) Index(i pulumi.IntInput) MatchConditionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MatchConditionResponse {
		return vs[0].([]MatchConditionResponse)[vs[1].(int)]
	}).(MatchConditionResponseOutput)
}

// Define match variables.
type MatchVariable struct {
	// The selector of match variable.
	Selector *string `pulumi:"selector"`
	// Match Variable.
	VariableName string `pulumi:"variableName"`
}

// MatchVariableInput is an input type that accepts MatchVariableArgs and MatchVariableOutput values.
// You can construct a concrete instance of `MatchVariableInput` via:
//
//          MatchVariableArgs{...}
type MatchVariableInput interface {
	pulumi.Input

	ToMatchVariableOutput() MatchVariableOutput
	ToMatchVariableOutputWithContext(context.Context) MatchVariableOutput
}

// Define match variables.
type MatchVariableArgs struct {
	// The selector of match variable.
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// Match Variable.
	VariableName pulumi.StringInput `pulumi:"variableName"`
}

func (MatchVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchVariable)(nil)).Elem()
}

func (i MatchVariableArgs) ToMatchVariableOutput() MatchVariableOutput {
	return i.ToMatchVariableOutputWithContext(context.Background())
}

func (i MatchVariableArgs) ToMatchVariableOutputWithContext(ctx context.Context) MatchVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchVariableOutput)
}

// MatchVariableArrayInput is an input type that accepts MatchVariableArray and MatchVariableArrayOutput values.
// You can construct a concrete instance of `MatchVariableArrayInput` via:
//
//          MatchVariableArray{ MatchVariableArgs{...} }
type MatchVariableArrayInput interface {
	pulumi.Input

	ToMatchVariableArrayOutput() MatchVariableArrayOutput
	ToMatchVariableArrayOutputWithContext(context.Context) MatchVariableArrayOutput
}

type MatchVariableArray []MatchVariableInput

func (MatchVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchVariable)(nil)).Elem()
}

func (i MatchVariableArray) ToMatchVariableArrayOutput() MatchVariableArrayOutput {
	return i.ToMatchVariableArrayOutputWithContext(context.Background())
}

func (i MatchVariableArray) ToMatchVariableArrayOutputWithContext(ctx context.Context) MatchVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchVariableArrayOutput)
}

// Define match variables.
type MatchVariableOutput struct{ *pulumi.OutputState }

func (MatchVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchVariable)(nil)).Elem()
}

func (o MatchVariableOutput) ToMatchVariableOutput() MatchVariableOutput {
	return o
}

func (o MatchVariableOutput) ToMatchVariableOutputWithContext(ctx context.Context) MatchVariableOutput {
	return o
}

// The selector of match variable.
func (o MatchVariableOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MatchVariable) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// Match Variable.
func (o MatchVariableOutput) VariableName() pulumi.StringOutput {
	return o.ApplyT(func(v MatchVariable) string { return v.VariableName }).(pulumi.StringOutput)
}

type MatchVariableArrayOutput struct{ *pulumi.OutputState }

func (MatchVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchVariable)(nil)).Elem()
}

func (o MatchVariableArrayOutput) ToMatchVariableArrayOutput() MatchVariableArrayOutput {
	return o
}

func (o MatchVariableArrayOutput) ToMatchVariableArrayOutputWithContext(ctx context.Context) MatchVariableArrayOutput {
	return o
}

func (o MatchVariableArrayOutput) Index(i pulumi.IntInput) MatchVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MatchVariable {
		return vs[0].([]MatchVariable)[vs[1].(int)]
	}).(MatchVariableOutput)
}

// Define match variables.
type MatchVariableResponse struct {
	// The selector of match variable.
	Selector *string `pulumi:"selector"`
	// Match Variable.
	VariableName string `pulumi:"variableName"`
}

// MatchVariableResponseInput is an input type that accepts MatchVariableResponseArgs and MatchVariableResponseOutput values.
// You can construct a concrete instance of `MatchVariableResponseInput` via:
//
//          MatchVariableResponseArgs{...}
type MatchVariableResponseInput interface {
	pulumi.Input

	ToMatchVariableResponseOutput() MatchVariableResponseOutput
	ToMatchVariableResponseOutputWithContext(context.Context) MatchVariableResponseOutput
}

// Define match variables.
type MatchVariableResponseArgs struct {
	// The selector of match variable.
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// Match Variable.
	VariableName pulumi.StringInput `pulumi:"variableName"`
}

func (MatchVariableResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchVariableResponse)(nil)).Elem()
}

func (i MatchVariableResponseArgs) ToMatchVariableResponseOutput() MatchVariableResponseOutput {
	return i.ToMatchVariableResponseOutputWithContext(context.Background())
}

func (i MatchVariableResponseArgs) ToMatchVariableResponseOutputWithContext(ctx context.Context) MatchVariableResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchVariableResponseOutput)
}

// MatchVariableResponseArrayInput is an input type that accepts MatchVariableResponseArray and MatchVariableResponseArrayOutput values.
// You can construct a concrete instance of `MatchVariableResponseArrayInput` via:
//
//          MatchVariableResponseArray{ MatchVariableResponseArgs{...} }
type MatchVariableResponseArrayInput interface {
	pulumi.Input

	ToMatchVariableResponseArrayOutput() MatchVariableResponseArrayOutput
	ToMatchVariableResponseArrayOutputWithContext(context.Context) MatchVariableResponseArrayOutput
}

type MatchVariableResponseArray []MatchVariableResponseInput

func (MatchVariableResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchVariableResponse)(nil)).Elem()
}

func (i MatchVariableResponseArray) ToMatchVariableResponseArrayOutput() MatchVariableResponseArrayOutput {
	return i.ToMatchVariableResponseArrayOutputWithContext(context.Background())
}

func (i MatchVariableResponseArray) ToMatchVariableResponseArrayOutputWithContext(ctx context.Context) MatchVariableResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchVariableResponseArrayOutput)
}

// Define match variables.
type MatchVariableResponseOutput struct{ *pulumi.OutputState }

func (MatchVariableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MatchVariableResponse)(nil)).Elem()
}

func (o MatchVariableResponseOutput) ToMatchVariableResponseOutput() MatchVariableResponseOutput {
	return o
}

func (o MatchVariableResponseOutput) ToMatchVariableResponseOutputWithContext(ctx context.Context) MatchVariableResponseOutput {
	return o
}

// The selector of match variable.
func (o MatchVariableResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MatchVariableResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// Match Variable.
func (o MatchVariableResponseOutput) VariableName() pulumi.StringOutput {
	return o.ApplyT(func(v MatchVariableResponse) string { return v.VariableName }).(pulumi.StringOutput)
}

type MatchVariableResponseArrayOutput struct{ *pulumi.OutputState }

func (MatchVariableResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MatchVariableResponse)(nil)).Elem()
}

func (o MatchVariableResponseArrayOutput) ToMatchVariableResponseArrayOutput() MatchVariableResponseArrayOutput {
	return o
}

func (o MatchVariableResponseArrayOutput) ToMatchVariableResponseArrayOutputWithContext(ctx context.Context) MatchVariableResponseArrayOutput {
	return o
}

func (o MatchVariableResponseArrayOutput) Index(i pulumi.IntInput) MatchVariableResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MatchVariableResponse {
		return vs[0].([]MatchVariableResponse)[vs[1].(int)]
	}).(MatchVariableResponseOutput)
}

// Class containing endpoint monitoring settings in a Traffic Manager profile.
type MonitorConfig struct {
	// List of custom headers.
	CustomHeaders []MonitorConfigCustomHeaders `pulumi:"customHeaders"`
	// List of expected status code ranges.
	ExpectedStatusCodeRanges []MonitorConfigExpectedStatusCodeRanges `pulumi:"expectedStatusCodeRanges"`
	// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// The path relative to the endpoint domain name used to probe for endpoint health.
	Path *string `pulumi:"path"`
	// The TCP port used to probe for endpoint health.
	Port *int `pulumi:"port"`
	// The profile-level monitoring status of the Traffic Manager profile.
	ProfileMonitorStatus *string `pulumi:"profileMonitorStatus"`
	// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
	Protocol *string `pulumi:"protocol"`
	// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
	TimeoutInSeconds *int `pulumi:"timeoutInSeconds"`
	// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
	ToleratedNumberOfFailures *int `pulumi:"toleratedNumberOfFailures"`
}

// MonitorConfigInput is an input type that accepts MonitorConfigArgs and MonitorConfigOutput values.
// You can construct a concrete instance of `MonitorConfigInput` via:
//
//          MonitorConfigArgs{...}
type MonitorConfigInput interface {
	pulumi.Input

	ToMonitorConfigOutput() MonitorConfigOutput
	ToMonitorConfigOutputWithContext(context.Context) MonitorConfigOutput
}

// Class containing endpoint monitoring settings in a Traffic Manager profile.
type MonitorConfigArgs struct {
	// List of custom headers.
	CustomHeaders MonitorConfigCustomHeadersArrayInput `pulumi:"customHeaders"`
	// List of expected status code ranges.
	ExpectedStatusCodeRanges MonitorConfigExpectedStatusCodeRangesArrayInput `pulumi:"expectedStatusCodeRanges"`
	// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// The path relative to the endpoint domain name used to probe for endpoint health.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The TCP port used to probe for endpoint health.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The profile-level monitoring status of the Traffic Manager profile.
	ProfileMonitorStatus pulumi.StringPtrInput `pulumi:"profileMonitorStatus"`
	// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
	TimeoutInSeconds pulumi.IntPtrInput `pulumi:"timeoutInSeconds"`
	// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
	ToleratedNumberOfFailures pulumi.IntPtrInput `pulumi:"toleratedNumberOfFailures"`
}

func (MonitorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfig)(nil)).Elem()
}

func (i MonitorConfigArgs) ToMonitorConfigOutput() MonitorConfigOutput {
	return i.ToMonitorConfigOutputWithContext(context.Background())
}

func (i MonitorConfigArgs) ToMonitorConfigOutputWithContext(ctx context.Context) MonitorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigOutput)
}

func (i MonitorConfigArgs) ToMonitorConfigPtrOutput() MonitorConfigPtrOutput {
	return i.ToMonitorConfigPtrOutputWithContext(context.Background())
}

func (i MonitorConfigArgs) ToMonitorConfigPtrOutputWithContext(ctx context.Context) MonitorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigOutput).ToMonitorConfigPtrOutputWithContext(ctx)
}

// MonitorConfigPtrInput is an input type that accepts MonitorConfigArgs, MonitorConfigPtr and MonitorConfigPtrOutput values.
// You can construct a concrete instance of `MonitorConfigPtrInput` via:
//
//          MonitorConfigArgs{...}
//
//  or:
//
//          nil
type MonitorConfigPtrInput interface {
	pulumi.Input

	ToMonitorConfigPtrOutput() MonitorConfigPtrOutput
	ToMonitorConfigPtrOutputWithContext(context.Context) MonitorConfigPtrOutput
}

type monitorConfigPtrType MonitorConfigArgs

func MonitorConfigPtr(v *MonitorConfigArgs) MonitorConfigPtrInput {
	return (*monitorConfigPtrType)(v)
}

func (*monitorConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorConfig)(nil)).Elem()
}

func (i *monitorConfigPtrType) ToMonitorConfigPtrOutput() MonitorConfigPtrOutput {
	return i.ToMonitorConfigPtrOutputWithContext(context.Background())
}

func (i *monitorConfigPtrType) ToMonitorConfigPtrOutputWithContext(ctx context.Context) MonitorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigPtrOutput)
}

// Class containing endpoint monitoring settings in a Traffic Manager profile.
type MonitorConfigOutput struct{ *pulumi.OutputState }

func (MonitorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfig)(nil)).Elem()
}

func (o MonitorConfigOutput) ToMonitorConfigOutput() MonitorConfigOutput {
	return o
}

func (o MonitorConfigOutput) ToMonitorConfigOutputWithContext(ctx context.Context) MonitorConfigOutput {
	return o
}

func (o MonitorConfigOutput) ToMonitorConfigPtrOutput() MonitorConfigPtrOutput {
	return o.ToMonitorConfigPtrOutputWithContext(context.Background())
}

func (o MonitorConfigOutput) ToMonitorConfigPtrOutputWithContext(ctx context.Context) MonitorConfigPtrOutput {
	return o.ApplyT(func(v MonitorConfig) *MonitorConfig {
		return &v
	}).(MonitorConfigPtrOutput)
}

// List of custom headers.
func (o MonitorConfigOutput) CustomHeaders() MonitorConfigCustomHeadersArrayOutput {
	return o.ApplyT(func(v MonitorConfig) []MonitorConfigCustomHeaders { return v.CustomHeaders }).(MonitorConfigCustomHeadersArrayOutput)
}

// List of expected status code ranges.
func (o MonitorConfigOutput) ExpectedStatusCodeRanges() MonitorConfigExpectedStatusCodeRangesArrayOutput {
	return o.ApplyT(func(v MonitorConfig) []MonitorConfigExpectedStatusCodeRanges { return v.ExpectedStatusCodeRanges }).(MonitorConfigExpectedStatusCodeRangesArrayOutput)
}

// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
func (o MonitorConfigOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfig) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The path relative to the endpoint domain name used to probe for endpoint health.
func (o MonitorConfigOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfig) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The TCP port used to probe for endpoint health.
func (o MonitorConfigOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfig) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The profile-level monitoring status of the Traffic Manager profile.
func (o MonitorConfigOutput) ProfileMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfig) *string { return v.ProfileMonitorStatus }).(pulumi.StringPtrOutput)
}

// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
func (o MonitorConfigOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfig) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
func (o MonitorConfigOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfig) *int { return v.TimeoutInSeconds }).(pulumi.IntPtrOutput)
}

// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
func (o MonitorConfigOutput) ToleratedNumberOfFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfig) *int { return v.ToleratedNumberOfFailures }).(pulumi.IntPtrOutput)
}

type MonitorConfigPtrOutput struct{ *pulumi.OutputState }

func (MonitorConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorConfig)(nil)).Elem()
}

func (o MonitorConfigPtrOutput) ToMonitorConfigPtrOutput() MonitorConfigPtrOutput {
	return o
}

func (o MonitorConfigPtrOutput) ToMonitorConfigPtrOutputWithContext(ctx context.Context) MonitorConfigPtrOutput {
	return o
}

func (o MonitorConfigPtrOutput) Elem() MonitorConfigOutput {
	return o.ApplyT(func(v *MonitorConfig) MonitorConfig { return *v }).(MonitorConfigOutput)
}

// List of custom headers.
func (o MonitorConfigPtrOutput) CustomHeaders() MonitorConfigCustomHeadersArrayOutput {
	return o.ApplyT(func(v *MonitorConfig) []MonitorConfigCustomHeaders {
		if v == nil {
			return nil
		}
		return v.CustomHeaders
	}).(MonitorConfigCustomHeadersArrayOutput)
}

// List of expected status code ranges.
func (o MonitorConfigPtrOutput) ExpectedStatusCodeRanges() MonitorConfigExpectedStatusCodeRangesArrayOutput {
	return o.ApplyT(func(v *MonitorConfig) []MonitorConfigExpectedStatusCodeRanges {
		if v == nil {
			return nil
		}
		return v.ExpectedStatusCodeRanges
	}).(MonitorConfigExpectedStatusCodeRangesArrayOutput)
}

// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
func (o MonitorConfigPtrOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The path relative to the endpoint domain name used to probe for endpoint health.
func (o MonitorConfigPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The TCP port used to probe for endpoint health.
func (o MonitorConfigPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The profile-level monitoring status of the Traffic Manager profile.
func (o MonitorConfigPtrOutput) ProfileMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProfileMonitorStatus
	}).(pulumi.StringPtrOutput)
}

// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
func (o MonitorConfigPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
func (o MonitorConfigPtrOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
func (o MonitorConfigPtrOutput) ToleratedNumberOfFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *int {
		if v == nil {
			return nil
		}
		return v.ToleratedNumberOfFailures
	}).(pulumi.IntPtrOutput)
}

// Custom header name and value.
type MonitorConfigCustomHeaders struct {
	// Header name.
	Name *string `pulumi:"name"`
	// Header value.
	Value *string `pulumi:"value"`
}

// MonitorConfigCustomHeadersInput is an input type that accepts MonitorConfigCustomHeadersArgs and MonitorConfigCustomHeadersOutput values.
// You can construct a concrete instance of `MonitorConfigCustomHeadersInput` via:
//
//          MonitorConfigCustomHeadersArgs{...}
type MonitorConfigCustomHeadersInput interface {
	pulumi.Input

	ToMonitorConfigCustomHeadersOutput() MonitorConfigCustomHeadersOutput
	ToMonitorConfigCustomHeadersOutputWithContext(context.Context) MonitorConfigCustomHeadersOutput
}

// Custom header name and value.
type MonitorConfigCustomHeadersArgs struct {
	// Header name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Header value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (MonitorConfigCustomHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigCustomHeaders)(nil)).Elem()
}

func (i MonitorConfigCustomHeadersArgs) ToMonitorConfigCustomHeadersOutput() MonitorConfigCustomHeadersOutput {
	return i.ToMonitorConfigCustomHeadersOutputWithContext(context.Background())
}

func (i MonitorConfigCustomHeadersArgs) ToMonitorConfigCustomHeadersOutputWithContext(ctx context.Context) MonitorConfigCustomHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigCustomHeadersOutput)
}

// MonitorConfigCustomHeadersArrayInput is an input type that accepts MonitorConfigCustomHeadersArray and MonitorConfigCustomHeadersArrayOutput values.
// You can construct a concrete instance of `MonitorConfigCustomHeadersArrayInput` via:
//
//          MonitorConfigCustomHeadersArray{ MonitorConfigCustomHeadersArgs{...} }
type MonitorConfigCustomHeadersArrayInput interface {
	pulumi.Input

	ToMonitorConfigCustomHeadersArrayOutput() MonitorConfigCustomHeadersArrayOutput
	ToMonitorConfigCustomHeadersArrayOutputWithContext(context.Context) MonitorConfigCustomHeadersArrayOutput
}

type MonitorConfigCustomHeadersArray []MonitorConfigCustomHeadersInput

func (MonitorConfigCustomHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigCustomHeaders)(nil)).Elem()
}

func (i MonitorConfigCustomHeadersArray) ToMonitorConfigCustomHeadersArrayOutput() MonitorConfigCustomHeadersArrayOutput {
	return i.ToMonitorConfigCustomHeadersArrayOutputWithContext(context.Background())
}

func (i MonitorConfigCustomHeadersArray) ToMonitorConfigCustomHeadersArrayOutputWithContext(ctx context.Context) MonitorConfigCustomHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigCustomHeadersArrayOutput)
}

// Custom header name and value.
type MonitorConfigCustomHeadersOutput struct{ *pulumi.OutputState }

func (MonitorConfigCustomHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigCustomHeaders)(nil)).Elem()
}

func (o MonitorConfigCustomHeadersOutput) ToMonitorConfigCustomHeadersOutput() MonitorConfigCustomHeadersOutput {
	return o
}

func (o MonitorConfigCustomHeadersOutput) ToMonitorConfigCustomHeadersOutputWithContext(ctx context.Context) MonitorConfigCustomHeadersOutput {
	return o
}

// Header name.
func (o MonitorConfigCustomHeadersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigCustomHeaders) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Header value.
func (o MonitorConfigCustomHeadersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigCustomHeaders) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type MonitorConfigCustomHeadersArrayOutput struct{ *pulumi.OutputState }

func (MonitorConfigCustomHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigCustomHeaders)(nil)).Elem()
}

func (o MonitorConfigCustomHeadersArrayOutput) ToMonitorConfigCustomHeadersArrayOutput() MonitorConfigCustomHeadersArrayOutput {
	return o
}

func (o MonitorConfigCustomHeadersArrayOutput) ToMonitorConfigCustomHeadersArrayOutputWithContext(ctx context.Context) MonitorConfigCustomHeadersArrayOutput {
	return o
}

func (o MonitorConfigCustomHeadersArrayOutput) Index(i pulumi.IntInput) MonitorConfigCustomHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorConfigCustomHeaders {
		return vs[0].([]MonitorConfigCustomHeaders)[vs[1].(int)]
	}).(MonitorConfigCustomHeadersOutput)
}

// Min and max value of a status code range.
type MonitorConfigExpectedStatusCodeRanges struct {
	// Max status code.
	Max *int `pulumi:"max"`
	// Min status code.
	Min *int `pulumi:"min"`
}

// MonitorConfigExpectedStatusCodeRangesInput is an input type that accepts MonitorConfigExpectedStatusCodeRangesArgs and MonitorConfigExpectedStatusCodeRangesOutput values.
// You can construct a concrete instance of `MonitorConfigExpectedStatusCodeRangesInput` via:
//
//          MonitorConfigExpectedStatusCodeRangesArgs{...}
type MonitorConfigExpectedStatusCodeRangesInput interface {
	pulumi.Input

	ToMonitorConfigExpectedStatusCodeRangesOutput() MonitorConfigExpectedStatusCodeRangesOutput
	ToMonitorConfigExpectedStatusCodeRangesOutputWithContext(context.Context) MonitorConfigExpectedStatusCodeRangesOutput
}

// Min and max value of a status code range.
type MonitorConfigExpectedStatusCodeRangesArgs struct {
	// Max status code.
	Max pulumi.IntPtrInput `pulumi:"max"`
	// Min status code.
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (MonitorConfigExpectedStatusCodeRangesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigExpectedStatusCodeRanges)(nil)).Elem()
}

func (i MonitorConfigExpectedStatusCodeRangesArgs) ToMonitorConfigExpectedStatusCodeRangesOutput() MonitorConfigExpectedStatusCodeRangesOutput {
	return i.ToMonitorConfigExpectedStatusCodeRangesOutputWithContext(context.Background())
}

func (i MonitorConfigExpectedStatusCodeRangesArgs) ToMonitorConfigExpectedStatusCodeRangesOutputWithContext(ctx context.Context) MonitorConfigExpectedStatusCodeRangesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigExpectedStatusCodeRangesOutput)
}

// MonitorConfigExpectedStatusCodeRangesArrayInput is an input type that accepts MonitorConfigExpectedStatusCodeRangesArray and MonitorConfigExpectedStatusCodeRangesArrayOutput values.
// You can construct a concrete instance of `MonitorConfigExpectedStatusCodeRangesArrayInput` via:
//
//          MonitorConfigExpectedStatusCodeRangesArray{ MonitorConfigExpectedStatusCodeRangesArgs{...} }
type MonitorConfigExpectedStatusCodeRangesArrayInput interface {
	pulumi.Input

	ToMonitorConfigExpectedStatusCodeRangesArrayOutput() MonitorConfigExpectedStatusCodeRangesArrayOutput
	ToMonitorConfigExpectedStatusCodeRangesArrayOutputWithContext(context.Context) MonitorConfigExpectedStatusCodeRangesArrayOutput
}

type MonitorConfigExpectedStatusCodeRangesArray []MonitorConfigExpectedStatusCodeRangesInput

func (MonitorConfigExpectedStatusCodeRangesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigExpectedStatusCodeRanges)(nil)).Elem()
}

func (i MonitorConfigExpectedStatusCodeRangesArray) ToMonitorConfigExpectedStatusCodeRangesArrayOutput() MonitorConfigExpectedStatusCodeRangesArrayOutput {
	return i.ToMonitorConfigExpectedStatusCodeRangesArrayOutputWithContext(context.Background())
}

func (i MonitorConfigExpectedStatusCodeRangesArray) ToMonitorConfigExpectedStatusCodeRangesArrayOutputWithContext(ctx context.Context) MonitorConfigExpectedStatusCodeRangesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigExpectedStatusCodeRangesArrayOutput)
}

// Min and max value of a status code range.
type MonitorConfigExpectedStatusCodeRangesOutput struct{ *pulumi.OutputState }

func (MonitorConfigExpectedStatusCodeRangesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigExpectedStatusCodeRanges)(nil)).Elem()
}

func (o MonitorConfigExpectedStatusCodeRangesOutput) ToMonitorConfigExpectedStatusCodeRangesOutput() MonitorConfigExpectedStatusCodeRangesOutput {
	return o
}

func (o MonitorConfigExpectedStatusCodeRangesOutput) ToMonitorConfigExpectedStatusCodeRangesOutputWithContext(ctx context.Context) MonitorConfigExpectedStatusCodeRangesOutput {
	return o
}

// Max status code.
func (o MonitorConfigExpectedStatusCodeRangesOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigExpectedStatusCodeRanges) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// Min status code.
func (o MonitorConfigExpectedStatusCodeRangesOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigExpectedStatusCodeRanges) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type MonitorConfigExpectedStatusCodeRangesArrayOutput struct{ *pulumi.OutputState }

func (MonitorConfigExpectedStatusCodeRangesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigExpectedStatusCodeRanges)(nil)).Elem()
}

func (o MonitorConfigExpectedStatusCodeRangesArrayOutput) ToMonitorConfigExpectedStatusCodeRangesArrayOutput() MonitorConfigExpectedStatusCodeRangesArrayOutput {
	return o
}

func (o MonitorConfigExpectedStatusCodeRangesArrayOutput) ToMonitorConfigExpectedStatusCodeRangesArrayOutputWithContext(ctx context.Context) MonitorConfigExpectedStatusCodeRangesArrayOutput {
	return o
}

func (o MonitorConfigExpectedStatusCodeRangesArrayOutput) Index(i pulumi.IntInput) MonitorConfigExpectedStatusCodeRangesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorConfigExpectedStatusCodeRanges {
		return vs[0].([]MonitorConfigExpectedStatusCodeRanges)[vs[1].(int)]
	}).(MonitorConfigExpectedStatusCodeRangesOutput)
}

// Class containing endpoint monitoring settings in a Traffic Manager profile.
type MonitorConfigResponse struct {
	// List of custom headers.
	CustomHeaders []MonitorConfigResponseCustomHeaders `pulumi:"customHeaders"`
	// List of expected status code ranges.
	ExpectedStatusCodeRanges []MonitorConfigResponseExpectedStatusCodeRanges `pulumi:"expectedStatusCodeRanges"`
	// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// The path relative to the endpoint domain name used to probe for endpoint health.
	Path *string `pulumi:"path"`
	// The TCP port used to probe for endpoint health.
	Port *int `pulumi:"port"`
	// The profile-level monitoring status of the Traffic Manager profile.
	ProfileMonitorStatus *string `pulumi:"profileMonitorStatus"`
	// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
	Protocol *string `pulumi:"protocol"`
	// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
	TimeoutInSeconds *int `pulumi:"timeoutInSeconds"`
	// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
	ToleratedNumberOfFailures *int `pulumi:"toleratedNumberOfFailures"`
}

// MonitorConfigResponseInput is an input type that accepts MonitorConfigResponseArgs and MonitorConfigResponseOutput values.
// You can construct a concrete instance of `MonitorConfigResponseInput` via:
//
//          MonitorConfigResponseArgs{...}
type MonitorConfigResponseInput interface {
	pulumi.Input

	ToMonitorConfigResponseOutput() MonitorConfigResponseOutput
	ToMonitorConfigResponseOutputWithContext(context.Context) MonitorConfigResponseOutput
}

// Class containing endpoint monitoring settings in a Traffic Manager profile.
type MonitorConfigResponseArgs struct {
	// List of custom headers.
	CustomHeaders MonitorConfigResponseCustomHeadersArrayInput `pulumi:"customHeaders"`
	// List of expected status code ranges.
	ExpectedStatusCodeRanges MonitorConfigResponseExpectedStatusCodeRangesArrayInput `pulumi:"expectedStatusCodeRanges"`
	// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// The path relative to the endpoint domain name used to probe for endpoint health.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The TCP port used to probe for endpoint health.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The profile-level monitoring status of the Traffic Manager profile.
	ProfileMonitorStatus pulumi.StringPtrInput `pulumi:"profileMonitorStatus"`
	// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
	TimeoutInSeconds pulumi.IntPtrInput `pulumi:"timeoutInSeconds"`
	// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
	ToleratedNumberOfFailures pulumi.IntPtrInput `pulumi:"toleratedNumberOfFailures"`
}

func (MonitorConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigResponse)(nil)).Elem()
}

func (i MonitorConfigResponseArgs) ToMonitorConfigResponseOutput() MonitorConfigResponseOutput {
	return i.ToMonitorConfigResponseOutputWithContext(context.Background())
}

func (i MonitorConfigResponseArgs) ToMonitorConfigResponseOutputWithContext(ctx context.Context) MonitorConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigResponseOutput)
}

func (i MonitorConfigResponseArgs) ToMonitorConfigResponsePtrOutput() MonitorConfigResponsePtrOutput {
	return i.ToMonitorConfigResponsePtrOutputWithContext(context.Background())
}

func (i MonitorConfigResponseArgs) ToMonitorConfigResponsePtrOutputWithContext(ctx context.Context) MonitorConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigResponseOutput).ToMonitorConfigResponsePtrOutputWithContext(ctx)
}

// MonitorConfigResponsePtrInput is an input type that accepts MonitorConfigResponseArgs, MonitorConfigResponsePtr and MonitorConfigResponsePtrOutput values.
// You can construct a concrete instance of `MonitorConfigResponsePtrInput` via:
//
//          MonitorConfigResponseArgs{...}
//
//  or:
//
//          nil
type MonitorConfigResponsePtrInput interface {
	pulumi.Input

	ToMonitorConfigResponsePtrOutput() MonitorConfigResponsePtrOutput
	ToMonitorConfigResponsePtrOutputWithContext(context.Context) MonitorConfigResponsePtrOutput
}

type monitorConfigResponsePtrType MonitorConfigResponseArgs

func MonitorConfigResponsePtr(v *MonitorConfigResponseArgs) MonitorConfigResponsePtrInput {
	return (*monitorConfigResponsePtrType)(v)
}

func (*monitorConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorConfigResponse)(nil)).Elem()
}

func (i *monitorConfigResponsePtrType) ToMonitorConfigResponsePtrOutput() MonitorConfigResponsePtrOutput {
	return i.ToMonitorConfigResponsePtrOutputWithContext(context.Background())
}

func (i *monitorConfigResponsePtrType) ToMonitorConfigResponsePtrOutputWithContext(ctx context.Context) MonitorConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigResponsePtrOutput)
}

// Class containing endpoint monitoring settings in a Traffic Manager profile.
type MonitorConfigResponseOutput struct{ *pulumi.OutputState }

func (MonitorConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigResponse)(nil)).Elem()
}

func (o MonitorConfigResponseOutput) ToMonitorConfigResponseOutput() MonitorConfigResponseOutput {
	return o
}

func (o MonitorConfigResponseOutput) ToMonitorConfigResponseOutputWithContext(ctx context.Context) MonitorConfigResponseOutput {
	return o
}

func (o MonitorConfigResponseOutput) ToMonitorConfigResponsePtrOutput() MonitorConfigResponsePtrOutput {
	return o.ToMonitorConfigResponsePtrOutputWithContext(context.Background())
}

func (o MonitorConfigResponseOutput) ToMonitorConfigResponsePtrOutputWithContext(ctx context.Context) MonitorConfigResponsePtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *MonitorConfigResponse {
		return &v
	}).(MonitorConfigResponsePtrOutput)
}

// List of custom headers.
func (o MonitorConfigResponseOutput) CustomHeaders() MonitorConfigResponseCustomHeadersArrayOutput {
	return o.ApplyT(func(v MonitorConfigResponse) []MonitorConfigResponseCustomHeaders { return v.CustomHeaders }).(MonitorConfigResponseCustomHeadersArrayOutput)
}

// List of expected status code ranges.
func (o MonitorConfigResponseOutput) ExpectedStatusCodeRanges() MonitorConfigResponseExpectedStatusCodeRangesArrayOutput {
	return o.ApplyT(func(v MonitorConfigResponse) []MonitorConfigResponseExpectedStatusCodeRanges {
		return v.ExpectedStatusCodeRanges
	}).(MonitorConfigResponseExpectedStatusCodeRangesArrayOutput)
}

// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
func (o MonitorConfigResponseOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The path relative to the endpoint domain name used to probe for endpoint health.
func (o MonitorConfigResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The TCP port used to probe for endpoint health.
func (o MonitorConfigResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The profile-level monitoring status of the Traffic Manager profile.
func (o MonitorConfigResponseOutput) ProfileMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *string { return v.ProfileMonitorStatus }).(pulumi.StringPtrOutput)
}

// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
func (o MonitorConfigResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
func (o MonitorConfigResponseOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *int { return v.TimeoutInSeconds }).(pulumi.IntPtrOutput)
}

// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
func (o MonitorConfigResponseOutput) ToleratedNumberOfFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *int { return v.ToleratedNumberOfFailures }).(pulumi.IntPtrOutput)
}

type MonitorConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (MonitorConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorConfigResponse)(nil)).Elem()
}

func (o MonitorConfigResponsePtrOutput) ToMonitorConfigResponsePtrOutput() MonitorConfigResponsePtrOutput {
	return o
}

func (o MonitorConfigResponsePtrOutput) ToMonitorConfigResponsePtrOutputWithContext(ctx context.Context) MonitorConfigResponsePtrOutput {
	return o
}

func (o MonitorConfigResponsePtrOutput) Elem() MonitorConfigResponseOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) MonitorConfigResponse { return *v }).(MonitorConfigResponseOutput)
}

// List of custom headers.
func (o MonitorConfigResponsePtrOutput) CustomHeaders() MonitorConfigResponseCustomHeadersArrayOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) []MonitorConfigResponseCustomHeaders {
		if v == nil {
			return nil
		}
		return v.CustomHeaders
	}).(MonitorConfigResponseCustomHeadersArrayOutput)
}

// List of expected status code ranges.
func (o MonitorConfigResponsePtrOutput) ExpectedStatusCodeRanges() MonitorConfigResponseExpectedStatusCodeRangesArrayOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) []MonitorConfigResponseExpectedStatusCodeRanges {
		if v == nil {
			return nil
		}
		return v.ExpectedStatusCodeRanges
	}).(MonitorConfigResponseExpectedStatusCodeRangesArrayOutput)
}

// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
func (o MonitorConfigResponsePtrOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The path relative to the endpoint domain name used to probe for endpoint health.
func (o MonitorConfigResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The TCP port used to probe for endpoint health.
func (o MonitorConfigResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The profile-level monitoring status of the Traffic Manager profile.
func (o MonitorConfigResponsePtrOutput) ProfileMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProfileMonitorStatus
	}).(pulumi.StringPtrOutput)
}

// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
func (o MonitorConfigResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
func (o MonitorConfigResponsePtrOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
func (o MonitorConfigResponsePtrOutput) ToleratedNumberOfFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.ToleratedNumberOfFailures
	}).(pulumi.IntPtrOutput)
}

// Custom header name and value.
type MonitorConfigResponseCustomHeaders struct {
	// Header name.
	Name *string `pulumi:"name"`
	// Header value.
	Value *string `pulumi:"value"`
}

// MonitorConfigResponseCustomHeadersInput is an input type that accepts MonitorConfigResponseCustomHeadersArgs and MonitorConfigResponseCustomHeadersOutput values.
// You can construct a concrete instance of `MonitorConfigResponseCustomHeadersInput` via:
//
//          MonitorConfigResponseCustomHeadersArgs{...}
type MonitorConfigResponseCustomHeadersInput interface {
	pulumi.Input

	ToMonitorConfigResponseCustomHeadersOutput() MonitorConfigResponseCustomHeadersOutput
	ToMonitorConfigResponseCustomHeadersOutputWithContext(context.Context) MonitorConfigResponseCustomHeadersOutput
}

// Custom header name and value.
type MonitorConfigResponseCustomHeadersArgs struct {
	// Header name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Header value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (MonitorConfigResponseCustomHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigResponseCustomHeaders)(nil)).Elem()
}

func (i MonitorConfigResponseCustomHeadersArgs) ToMonitorConfigResponseCustomHeadersOutput() MonitorConfigResponseCustomHeadersOutput {
	return i.ToMonitorConfigResponseCustomHeadersOutputWithContext(context.Background())
}

func (i MonitorConfigResponseCustomHeadersArgs) ToMonitorConfigResponseCustomHeadersOutputWithContext(ctx context.Context) MonitorConfigResponseCustomHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigResponseCustomHeadersOutput)
}

// MonitorConfigResponseCustomHeadersArrayInput is an input type that accepts MonitorConfigResponseCustomHeadersArray and MonitorConfigResponseCustomHeadersArrayOutput values.
// You can construct a concrete instance of `MonitorConfigResponseCustomHeadersArrayInput` via:
//
//          MonitorConfigResponseCustomHeadersArray{ MonitorConfigResponseCustomHeadersArgs{...} }
type MonitorConfigResponseCustomHeadersArrayInput interface {
	pulumi.Input

	ToMonitorConfigResponseCustomHeadersArrayOutput() MonitorConfigResponseCustomHeadersArrayOutput
	ToMonitorConfigResponseCustomHeadersArrayOutputWithContext(context.Context) MonitorConfigResponseCustomHeadersArrayOutput
}

type MonitorConfigResponseCustomHeadersArray []MonitorConfigResponseCustomHeadersInput

func (MonitorConfigResponseCustomHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigResponseCustomHeaders)(nil)).Elem()
}

func (i MonitorConfigResponseCustomHeadersArray) ToMonitorConfigResponseCustomHeadersArrayOutput() MonitorConfigResponseCustomHeadersArrayOutput {
	return i.ToMonitorConfigResponseCustomHeadersArrayOutputWithContext(context.Background())
}

func (i MonitorConfigResponseCustomHeadersArray) ToMonitorConfigResponseCustomHeadersArrayOutputWithContext(ctx context.Context) MonitorConfigResponseCustomHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigResponseCustomHeadersArrayOutput)
}

// Custom header name and value.
type MonitorConfigResponseCustomHeadersOutput struct{ *pulumi.OutputState }

func (MonitorConfigResponseCustomHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigResponseCustomHeaders)(nil)).Elem()
}

func (o MonitorConfigResponseCustomHeadersOutput) ToMonitorConfigResponseCustomHeadersOutput() MonitorConfigResponseCustomHeadersOutput {
	return o
}

func (o MonitorConfigResponseCustomHeadersOutput) ToMonitorConfigResponseCustomHeadersOutputWithContext(ctx context.Context) MonitorConfigResponseCustomHeadersOutput {
	return o
}

// Header name.
func (o MonitorConfigResponseCustomHeadersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponseCustomHeaders) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Header value.
func (o MonitorConfigResponseCustomHeadersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponseCustomHeaders) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type MonitorConfigResponseCustomHeadersArrayOutput struct{ *pulumi.OutputState }

func (MonitorConfigResponseCustomHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigResponseCustomHeaders)(nil)).Elem()
}

func (o MonitorConfigResponseCustomHeadersArrayOutput) ToMonitorConfigResponseCustomHeadersArrayOutput() MonitorConfigResponseCustomHeadersArrayOutput {
	return o
}

func (o MonitorConfigResponseCustomHeadersArrayOutput) ToMonitorConfigResponseCustomHeadersArrayOutputWithContext(ctx context.Context) MonitorConfigResponseCustomHeadersArrayOutput {
	return o
}

func (o MonitorConfigResponseCustomHeadersArrayOutput) Index(i pulumi.IntInput) MonitorConfigResponseCustomHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorConfigResponseCustomHeaders {
		return vs[0].([]MonitorConfigResponseCustomHeaders)[vs[1].(int)]
	}).(MonitorConfigResponseCustomHeadersOutput)
}

// Min and max value of a status code range.
type MonitorConfigResponseExpectedStatusCodeRanges struct {
	// Max status code.
	Max *int `pulumi:"max"`
	// Min status code.
	Min *int `pulumi:"min"`
}

// MonitorConfigResponseExpectedStatusCodeRangesInput is an input type that accepts MonitorConfigResponseExpectedStatusCodeRangesArgs and MonitorConfigResponseExpectedStatusCodeRangesOutput values.
// You can construct a concrete instance of `MonitorConfigResponseExpectedStatusCodeRangesInput` via:
//
//          MonitorConfigResponseExpectedStatusCodeRangesArgs{...}
type MonitorConfigResponseExpectedStatusCodeRangesInput interface {
	pulumi.Input

	ToMonitorConfigResponseExpectedStatusCodeRangesOutput() MonitorConfigResponseExpectedStatusCodeRangesOutput
	ToMonitorConfigResponseExpectedStatusCodeRangesOutputWithContext(context.Context) MonitorConfigResponseExpectedStatusCodeRangesOutput
}

// Min and max value of a status code range.
type MonitorConfigResponseExpectedStatusCodeRangesArgs struct {
	// Max status code.
	Max pulumi.IntPtrInput `pulumi:"max"`
	// Min status code.
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (MonitorConfigResponseExpectedStatusCodeRangesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigResponseExpectedStatusCodeRanges)(nil)).Elem()
}

func (i MonitorConfigResponseExpectedStatusCodeRangesArgs) ToMonitorConfigResponseExpectedStatusCodeRangesOutput() MonitorConfigResponseExpectedStatusCodeRangesOutput {
	return i.ToMonitorConfigResponseExpectedStatusCodeRangesOutputWithContext(context.Background())
}

func (i MonitorConfigResponseExpectedStatusCodeRangesArgs) ToMonitorConfigResponseExpectedStatusCodeRangesOutputWithContext(ctx context.Context) MonitorConfigResponseExpectedStatusCodeRangesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigResponseExpectedStatusCodeRangesOutput)
}

// MonitorConfigResponseExpectedStatusCodeRangesArrayInput is an input type that accepts MonitorConfigResponseExpectedStatusCodeRangesArray and MonitorConfigResponseExpectedStatusCodeRangesArrayOutput values.
// You can construct a concrete instance of `MonitorConfigResponseExpectedStatusCodeRangesArrayInput` via:
//
//          MonitorConfigResponseExpectedStatusCodeRangesArray{ MonitorConfigResponseExpectedStatusCodeRangesArgs{...} }
type MonitorConfigResponseExpectedStatusCodeRangesArrayInput interface {
	pulumi.Input

	ToMonitorConfigResponseExpectedStatusCodeRangesArrayOutput() MonitorConfigResponseExpectedStatusCodeRangesArrayOutput
	ToMonitorConfigResponseExpectedStatusCodeRangesArrayOutputWithContext(context.Context) MonitorConfigResponseExpectedStatusCodeRangesArrayOutput
}

type MonitorConfigResponseExpectedStatusCodeRangesArray []MonitorConfigResponseExpectedStatusCodeRangesInput

func (MonitorConfigResponseExpectedStatusCodeRangesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigResponseExpectedStatusCodeRanges)(nil)).Elem()
}

func (i MonitorConfigResponseExpectedStatusCodeRangesArray) ToMonitorConfigResponseExpectedStatusCodeRangesArrayOutput() MonitorConfigResponseExpectedStatusCodeRangesArrayOutput {
	return i.ToMonitorConfigResponseExpectedStatusCodeRangesArrayOutputWithContext(context.Background())
}

func (i MonitorConfigResponseExpectedStatusCodeRangesArray) ToMonitorConfigResponseExpectedStatusCodeRangesArrayOutputWithContext(ctx context.Context) MonitorConfigResponseExpectedStatusCodeRangesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigResponseExpectedStatusCodeRangesArrayOutput)
}

// Min and max value of a status code range.
type MonitorConfigResponseExpectedStatusCodeRangesOutput struct{ *pulumi.OutputState }

func (MonitorConfigResponseExpectedStatusCodeRangesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigResponseExpectedStatusCodeRanges)(nil)).Elem()
}

func (o MonitorConfigResponseExpectedStatusCodeRangesOutput) ToMonitorConfigResponseExpectedStatusCodeRangesOutput() MonitorConfigResponseExpectedStatusCodeRangesOutput {
	return o
}

func (o MonitorConfigResponseExpectedStatusCodeRangesOutput) ToMonitorConfigResponseExpectedStatusCodeRangesOutputWithContext(ctx context.Context) MonitorConfigResponseExpectedStatusCodeRangesOutput {
	return o
}

// Max status code.
func (o MonitorConfigResponseExpectedStatusCodeRangesOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponseExpectedStatusCodeRanges) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// Min status code.
func (o MonitorConfigResponseExpectedStatusCodeRangesOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponseExpectedStatusCodeRanges) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type MonitorConfigResponseExpectedStatusCodeRangesArrayOutput struct{ *pulumi.OutputState }

func (MonitorConfigResponseExpectedStatusCodeRangesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigResponseExpectedStatusCodeRanges)(nil)).Elem()
}

func (o MonitorConfigResponseExpectedStatusCodeRangesArrayOutput) ToMonitorConfigResponseExpectedStatusCodeRangesArrayOutput() MonitorConfigResponseExpectedStatusCodeRangesArrayOutput {
	return o
}

func (o MonitorConfigResponseExpectedStatusCodeRangesArrayOutput) ToMonitorConfigResponseExpectedStatusCodeRangesArrayOutputWithContext(ctx context.Context) MonitorConfigResponseExpectedStatusCodeRangesArrayOutput {
	return o
}

func (o MonitorConfigResponseExpectedStatusCodeRangesArrayOutput) Index(i pulumi.IntInput) MonitorConfigResponseExpectedStatusCodeRangesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorConfigResponseExpectedStatusCodeRanges {
		return vs[0].([]MonitorConfigResponseExpectedStatusCodeRanges)[vs[1].(int)]
	}).(MonitorConfigResponseExpectedStatusCodeRangesOutput)
}

// An MX record.
type MxRecord struct {
	// The domain name of the mail host for this MX record.
	Exchange *string `pulumi:"exchange"`
	// The preference value for this MX record.
	Preference *int `pulumi:"preference"`
}

// MxRecordInput is an input type that accepts MxRecordArgs and MxRecordOutput values.
// You can construct a concrete instance of `MxRecordInput` via:
//
//          MxRecordArgs{...}
type MxRecordInput interface {
	pulumi.Input

	ToMxRecordOutput() MxRecordOutput
	ToMxRecordOutputWithContext(context.Context) MxRecordOutput
}

// An MX record.
type MxRecordArgs struct {
	// The domain name of the mail host for this MX record.
	Exchange pulumi.StringPtrInput `pulumi:"exchange"`
	// The preference value for this MX record.
	Preference pulumi.IntPtrInput `pulumi:"preference"`
}

func (MxRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MxRecord)(nil)).Elem()
}

func (i MxRecordArgs) ToMxRecordOutput() MxRecordOutput {
	return i.ToMxRecordOutputWithContext(context.Background())
}

func (i MxRecordArgs) ToMxRecordOutputWithContext(ctx context.Context) MxRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MxRecordOutput)
}

// MxRecordArrayInput is an input type that accepts MxRecordArray and MxRecordArrayOutput values.
// You can construct a concrete instance of `MxRecordArrayInput` via:
//
//          MxRecordArray{ MxRecordArgs{...} }
type MxRecordArrayInput interface {
	pulumi.Input

	ToMxRecordArrayOutput() MxRecordArrayOutput
	ToMxRecordArrayOutputWithContext(context.Context) MxRecordArrayOutput
}

type MxRecordArray []MxRecordInput

func (MxRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MxRecord)(nil)).Elem()
}

func (i MxRecordArray) ToMxRecordArrayOutput() MxRecordArrayOutput {
	return i.ToMxRecordArrayOutputWithContext(context.Background())
}

func (i MxRecordArray) ToMxRecordArrayOutputWithContext(ctx context.Context) MxRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MxRecordArrayOutput)
}

// An MX record.
type MxRecordOutput struct{ *pulumi.OutputState }

func (MxRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MxRecord)(nil)).Elem()
}

func (o MxRecordOutput) ToMxRecordOutput() MxRecordOutput {
	return o
}

func (o MxRecordOutput) ToMxRecordOutputWithContext(ctx context.Context) MxRecordOutput {
	return o
}

// The domain name of the mail host for this MX record.
func (o MxRecordOutput) Exchange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MxRecord) *string { return v.Exchange }).(pulumi.StringPtrOutput)
}

// The preference value for this MX record.
func (o MxRecordOutput) Preference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MxRecord) *int { return v.Preference }).(pulumi.IntPtrOutput)
}

type MxRecordArrayOutput struct{ *pulumi.OutputState }

func (MxRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MxRecord)(nil)).Elem()
}

func (o MxRecordArrayOutput) ToMxRecordArrayOutput() MxRecordArrayOutput {
	return o
}

func (o MxRecordArrayOutput) ToMxRecordArrayOutputWithContext(ctx context.Context) MxRecordArrayOutput {
	return o
}

func (o MxRecordArrayOutput) Index(i pulumi.IntInput) MxRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MxRecord {
		return vs[0].([]MxRecord)[vs[1].(int)]
	}).(MxRecordOutput)
}

// An MX record.
type MxRecordResponse struct {
	// The domain name of the mail host for this MX record.
	Exchange *string `pulumi:"exchange"`
	// The preference value for this MX record.
	Preference *int `pulumi:"preference"`
}

// MxRecordResponseInput is an input type that accepts MxRecordResponseArgs and MxRecordResponseOutput values.
// You can construct a concrete instance of `MxRecordResponseInput` via:
//
//          MxRecordResponseArgs{...}
type MxRecordResponseInput interface {
	pulumi.Input

	ToMxRecordResponseOutput() MxRecordResponseOutput
	ToMxRecordResponseOutputWithContext(context.Context) MxRecordResponseOutput
}

// An MX record.
type MxRecordResponseArgs struct {
	// The domain name of the mail host for this MX record.
	Exchange pulumi.StringPtrInput `pulumi:"exchange"`
	// The preference value for this MX record.
	Preference pulumi.IntPtrInput `pulumi:"preference"`
}

func (MxRecordResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MxRecordResponse)(nil)).Elem()
}

func (i MxRecordResponseArgs) ToMxRecordResponseOutput() MxRecordResponseOutput {
	return i.ToMxRecordResponseOutputWithContext(context.Background())
}

func (i MxRecordResponseArgs) ToMxRecordResponseOutputWithContext(ctx context.Context) MxRecordResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MxRecordResponseOutput)
}

// MxRecordResponseArrayInput is an input type that accepts MxRecordResponseArray and MxRecordResponseArrayOutput values.
// You can construct a concrete instance of `MxRecordResponseArrayInput` via:
//
//          MxRecordResponseArray{ MxRecordResponseArgs{...} }
type MxRecordResponseArrayInput interface {
	pulumi.Input

	ToMxRecordResponseArrayOutput() MxRecordResponseArrayOutput
	ToMxRecordResponseArrayOutputWithContext(context.Context) MxRecordResponseArrayOutput
}

type MxRecordResponseArray []MxRecordResponseInput

func (MxRecordResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MxRecordResponse)(nil)).Elem()
}

func (i MxRecordResponseArray) ToMxRecordResponseArrayOutput() MxRecordResponseArrayOutput {
	return i.ToMxRecordResponseArrayOutputWithContext(context.Background())
}

func (i MxRecordResponseArray) ToMxRecordResponseArrayOutputWithContext(ctx context.Context) MxRecordResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MxRecordResponseArrayOutput)
}

// An MX record.
type MxRecordResponseOutput struct{ *pulumi.OutputState }

func (MxRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MxRecordResponse)(nil)).Elem()
}

func (o MxRecordResponseOutput) ToMxRecordResponseOutput() MxRecordResponseOutput {
	return o
}

func (o MxRecordResponseOutput) ToMxRecordResponseOutputWithContext(ctx context.Context) MxRecordResponseOutput {
	return o
}

// The domain name of the mail host for this MX record.
func (o MxRecordResponseOutput) Exchange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MxRecordResponse) *string { return v.Exchange }).(pulumi.StringPtrOutput)
}

// The preference value for this MX record.
func (o MxRecordResponseOutput) Preference() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MxRecordResponse) *int { return v.Preference }).(pulumi.IntPtrOutput)
}

type MxRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (MxRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MxRecordResponse)(nil)).Elem()
}

func (o MxRecordResponseArrayOutput) ToMxRecordResponseArrayOutput() MxRecordResponseArrayOutput {
	return o
}

func (o MxRecordResponseArrayOutput) ToMxRecordResponseArrayOutputWithContext(ctx context.Context) MxRecordResponseArrayOutput {
	return o
}

func (o MxRecordResponseArrayOutput) Index(i pulumi.IntInput) MxRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MxRecordResponse {
		return vs[0].([]MxRecordResponse)[vs[1].(int)]
	}).(MxRecordResponseOutput)
}

// SKU of nat gateway.
type NatGatewaySku struct {
	// Name of Nat Gateway SKU.
	Name *string `pulumi:"name"`
}

// NatGatewaySkuInput is an input type that accepts NatGatewaySkuArgs and NatGatewaySkuOutput values.
// You can construct a concrete instance of `NatGatewaySkuInput` via:
//
//          NatGatewaySkuArgs{...}
type NatGatewaySkuInput interface {
	pulumi.Input

	ToNatGatewaySkuOutput() NatGatewaySkuOutput
	ToNatGatewaySkuOutputWithContext(context.Context) NatGatewaySkuOutput
}

// SKU of nat gateway.
type NatGatewaySkuArgs struct {
	// Name of Nat Gateway SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (NatGatewaySkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NatGatewaySku)(nil)).Elem()
}

func (i NatGatewaySkuArgs) ToNatGatewaySkuOutput() NatGatewaySkuOutput {
	return i.ToNatGatewaySkuOutputWithContext(context.Background())
}

func (i NatGatewaySkuArgs) ToNatGatewaySkuOutputWithContext(ctx context.Context) NatGatewaySkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewaySkuOutput)
}

func (i NatGatewaySkuArgs) ToNatGatewaySkuPtrOutput() NatGatewaySkuPtrOutput {
	return i.ToNatGatewaySkuPtrOutputWithContext(context.Background())
}

func (i NatGatewaySkuArgs) ToNatGatewaySkuPtrOutputWithContext(ctx context.Context) NatGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewaySkuOutput).ToNatGatewaySkuPtrOutputWithContext(ctx)
}

// NatGatewaySkuPtrInput is an input type that accepts NatGatewaySkuArgs, NatGatewaySkuPtr and NatGatewaySkuPtrOutput values.
// You can construct a concrete instance of `NatGatewaySkuPtrInput` via:
//
//          NatGatewaySkuArgs{...}
//
//  or:
//
//          nil
type NatGatewaySkuPtrInput interface {
	pulumi.Input

	ToNatGatewaySkuPtrOutput() NatGatewaySkuPtrOutput
	ToNatGatewaySkuPtrOutputWithContext(context.Context) NatGatewaySkuPtrOutput
}

type natGatewaySkuPtrType NatGatewaySkuArgs

func NatGatewaySkuPtr(v *NatGatewaySkuArgs) NatGatewaySkuPtrInput {
	return (*natGatewaySkuPtrType)(v)
}

func (*natGatewaySkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGatewaySku)(nil)).Elem()
}

func (i *natGatewaySkuPtrType) ToNatGatewaySkuPtrOutput() NatGatewaySkuPtrOutput {
	return i.ToNatGatewaySkuPtrOutputWithContext(context.Background())
}

func (i *natGatewaySkuPtrType) ToNatGatewaySkuPtrOutputWithContext(ctx context.Context) NatGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewaySkuPtrOutput)
}

// SKU of nat gateway.
type NatGatewaySkuOutput struct{ *pulumi.OutputState }

func (NatGatewaySkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatGatewaySku)(nil)).Elem()
}

func (o NatGatewaySkuOutput) ToNatGatewaySkuOutput() NatGatewaySkuOutput {
	return o
}

func (o NatGatewaySkuOutput) ToNatGatewaySkuOutputWithContext(ctx context.Context) NatGatewaySkuOutput {
	return o
}

func (o NatGatewaySkuOutput) ToNatGatewaySkuPtrOutput() NatGatewaySkuPtrOutput {
	return o.ToNatGatewaySkuPtrOutputWithContext(context.Background())
}

func (o NatGatewaySkuOutput) ToNatGatewaySkuPtrOutputWithContext(ctx context.Context) NatGatewaySkuPtrOutput {
	return o.ApplyT(func(v NatGatewaySku) *NatGatewaySku {
		return &v
	}).(NatGatewaySkuPtrOutput)
}

// Name of Nat Gateway SKU.
func (o NatGatewaySkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatGatewaySku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type NatGatewaySkuPtrOutput struct{ *pulumi.OutputState }

func (NatGatewaySkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGatewaySku)(nil)).Elem()
}

func (o NatGatewaySkuPtrOutput) ToNatGatewaySkuPtrOutput() NatGatewaySkuPtrOutput {
	return o
}

func (o NatGatewaySkuPtrOutput) ToNatGatewaySkuPtrOutputWithContext(ctx context.Context) NatGatewaySkuPtrOutput {
	return o
}

func (o NatGatewaySkuPtrOutput) Elem() NatGatewaySkuOutput {
	return o.ApplyT(func(v *NatGatewaySku) NatGatewaySku { return *v }).(NatGatewaySkuOutput)
}

// Name of Nat Gateway SKU.
func (o NatGatewaySkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// SKU of nat gateway.
type NatGatewaySkuResponse struct {
	// Name of Nat Gateway SKU.
	Name *string `pulumi:"name"`
}

// NatGatewaySkuResponseInput is an input type that accepts NatGatewaySkuResponseArgs and NatGatewaySkuResponseOutput values.
// You can construct a concrete instance of `NatGatewaySkuResponseInput` via:
//
//          NatGatewaySkuResponseArgs{...}
type NatGatewaySkuResponseInput interface {
	pulumi.Input

	ToNatGatewaySkuResponseOutput() NatGatewaySkuResponseOutput
	ToNatGatewaySkuResponseOutputWithContext(context.Context) NatGatewaySkuResponseOutput
}

// SKU of nat gateway.
type NatGatewaySkuResponseArgs struct {
	// Name of Nat Gateway SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (NatGatewaySkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NatGatewaySkuResponse)(nil)).Elem()
}

func (i NatGatewaySkuResponseArgs) ToNatGatewaySkuResponseOutput() NatGatewaySkuResponseOutput {
	return i.ToNatGatewaySkuResponseOutputWithContext(context.Background())
}

func (i NatGatewaySkuResponseArgs) ToNatGatewaySkuResponseOutputWithContext(ctx context.Context) NatGatewaySkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewaySkuResponseOutput)
}

func (i NatGatewaySkuResponseArgs) ToNatGatewaySkuResponsePtrOutput() NatGatewaySkuResponsePtrOutput {
	return i.ToNatGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (i NatGatewaySkuResponseArgs) ToNatGatewaySkuResponsePtrOutputWithContext(ctx context.Context) NatGatewaySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewaySkuResponseOutput).ToNatGatewaySkuResponsePtrOutputWithContext(ctx)
}

// NatGatewaySkuResponsePtrInput is an input type that accepts NatGatewaySkuResponseArgs, NatGatewaySkuResponsePtr and NatGatewaySkuResponsePtrOutput values.
// You can construct a concrete instance of `NatGatewaySkuResponsePtrInput` via:
//
//          NatGatewaySkuResponseArgs{...}
//
//  or:
//
//          nil
type NatGatewaySkuResponsePtrInput interface {
	pulumi.Input

	ToNatGatewaySkuResponsePtrOutput() NatGatewaySkuResponsePtrOutput
	ToNatGatewaySkuResponsePtrOutputWithContext(context.Context) NatGatewaySkuResponsePtrOutput
}

type natGatewaySkuResponsePtrType NatGatewaySkuResponseArgs

func NatGatewaySkuResponsePtr(v *NatGatewaySkuResponseArgs) NatGatewaySkuResponsePtrInput {
	return (*natGatewaySkuResponsePtrType)(v)
}

func (*natGatewaySkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGatewaySkuResponse)(nil)).Elem()
}

func (i *natGatewaySkuResponsePtrType) ToNatGatewaySkuResponsePtrOutput() NatGatewaySkuResponsePtrOutput {
	return i.ToNatGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (i *natGatewaySkuResponsePtrType) ToNatGatewaySkuResponsePtrOutputWithContext(ctx context.Context) NatGatewaySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewaySkuResponsePtrOutput)
}

// SKU of nat gateway.
type NatGatewaySkuResponseOutput struct{ *pulumi.OutputState }

func (NatGatewaySkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatGatewaySkuResponse)(nil)).Elem()
}

func (o NatGatewaySkuResponseOutput) ToNatGatewaySkuResponseOutput() NatGatewaySkuResponseOutput {
	return o
}

func (o NatGatewaySkuResponseOutput) ToNatGatewaySkuResponseOutputWithContext(ctx context.Context) NatGatewaySkuResponseOutput {
	return o
}

func (o NatGatewaySkuResponseOutput) ToNatGatewaySkuResponsePtrOutput() NatGatewaySkuResponsePtrOutput {
	return o.ToNatGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (o NatGatewaySkuResponseOutput) ToNatGatewaySkuResponsePtrOutputWithContext(ctx context.Context) NatGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v NatGatewaySkuResponse) *NatGatewaySkuResponse {
		return &v
	}).(NatGatewaySkuResponsePtrOutput)
}

// Name of Nat Gateway SKU.
func (o NatGatewaySkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatGatewaySkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type NatGatewaySkuResponsePtrOutput struct{ *pulumi.OutputState }

func (NatGatewaySkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGatewaySkuResponse)(nil)).Elem()
}

func (o NatGatewaySkuResponsePtrOutput) ToNatGatewaySkuResponsePtrOutput() NatGatewaySkuResponsePtrOutput {
	return o
}

func (o NatGatewaySkuResponsePtrOutput) ToNatGatewaySkuResponsePtrOutputWithContext(ctx context.Context) NatGatewaySkuResponsePtrOutput {
	return o
}

func (o NatGatewaySkuResponsePtrOutput) Elem() NatGatewaySkuResponseOutput {
	return o.ApplyT(func(v *NatGatewaySkuResponse) NatGatewaySkuResponse { return *v }).(NatGatewaySkuResponseOutput)
}

// Name of Nat Gateway SKU.
func (o NatGatewaySkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Rule of type nat.
type NatRule struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleNetworkProtocols.
	IpProtocols []string `pulumi:"ipProtocols"`
	// Name of the rule.
	Name *string `pulumi:"name"`
	// Rule Type.
	RuleType string `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// The translated address for this NAT rule.
	TranslatedAddress *string `pulumi:"translatedAddress"`
	// The translated FQDN for this NAT rule.
	TranslatedFqdn *string `pulumi:"translatedFqdn"`
	// The translated port for this NAT rule.
	TranslatedPort *string `pulumi:"translatedPort"`
}

// NatRuleInput is an input type that accepts NatRuleArgs and NatRuleOutput values.
// You can construct a concrete instance of `NatRuleInput` via:
//
//          NatRuleArgs{...}
type NatRuleInput interface {
	pulumi.Input

	ToNatRuleOutput() NatRuleOutput
	ToNatRuleOutputWithContext(context.Context) NatRuleOutput
}

// Rule of type nat.
type NatRuleArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleNetworkProtocols.
	IpProtocols pulumi.StringArrayInput `pulumi:"ipProtocols"`
	// Name of the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rule Type.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
	// The translated address for this NAT rule.
	TranslatedAddress pulumi.StringPtrInput `pulumi:"translatedAddress"`
	// The translated FQDN for this NAT rule.
	TranslatedFqdn pulumi.StringPtrInput `pulumi:"translatedFqdn"`
	// The translated port for this NAT rule.
	TranslatedPort pulumi.StringPtrInput `pulumi:"translatedPort"`
}

func (NatRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NatRule)(nil)).Elem()
}

func (i NatRuleArgs) ToNatRuleOutput() NatRuleOutput {
	return i.ToNatRuleOutputWithContext(context.Background())
}

func (i NatRuleArgs) ToNatRuleOutputWithContext(ctx context.Context) NatRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatRuleOutput)
}

// Rule of type nat.
type NatRuleOutput struct{ *pulumi.OutputState }

func (NatRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatRule)(nil)).Elem()
}

func (o NatRuleOutput) ToNatRuleOutput() NatRuleOutput {
	return o
}

func (o NatRuleOutput) ToNatRuleOutputWithContext(ctx context.Context) NatRuleOutput {
	return o
}

// Description of the rule.
func (o NatRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NatRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NatRuleOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRule) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleNetworkProtocols.
func (o NatRuleOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRule) []string { return v.IpProtocols }).(pulumi.StringArrayOutput)
}

// Name of the rule.
func (o NatRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Type.
func (o NatRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v NatRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o NatRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NatRuleOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRule) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// The translated address for this NAT rule.
func (o NatRuleOutput) TranslatedAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRule) *string { return v.TranslatedAddress }).(pulumi.StringPtrOutput)
}

// The translated FQDN for this NAT rule.
func (o NatRuleOutput) TranslatedFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRule) *string { return v.TranslatedFqdn }).(pulumi.StringPtrOutput)
}

// The translated port for this NAT rule.
func (o NatRuleOutput) TranslatedPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRule) *string { return v.TranslatedPort }).(pulumi.StringPtrOutput)
}

// Rule condition of type nat.
type NatRuleCondition struct {
	// Description of the rule condition.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleConditionNetworkProtocols.
	IpProtocols []string `pulumi:"ipProtocols"`
	// Name of the rule condition.
	Name *string `pulumi:"name"`
	// Rule Condition Type.
	RuleConditionType string `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// NatRuleConditionInput is an input type that accepts NatRuleConditionArgs and NatRuleConditionOutput values.
// You can construct a concrete instance of `NatRuleConditionInput` via:
//
//          NatRuleConditionArgs{...}
type NatRuleConditionInput interface {
	pulumi.Input

	ToNatRuleConditionOutput() NatRuleConditionOutput
	ToNatRuleConditionOutputWithContext(context.Context) NatRuleConditionOutput
}

// Rule condition of type nat.
type NatRuleConditionArgs struct {
	// Description of the rule condition.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleConditionNetworkProtocols.
	IpProtocols pulumi.StringArrayInput `pulumi:"ipProtocols"`
	// Name of the rule condition.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rule Condition Type.
	RuleConditionType pulumi.StringInput `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
}

func (NatRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NatRuleCondition)(nil)).Elem()
}

func (i NatRuleConditionArgs) ToNatRuleConditionOutput() NatRuleConditionOutput {
	return i.ToNatRuleConditionOutputWithContext(context.Background())
}

func (i NatRuleConditionArgs) ToNatRuleConditionOutputWithContext(ctx context.Context) NatRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatRuleConditionOutput)
}

// Rule condition of type nat.
type NatRuleConditionOutput struct{ *pulumi.OutputState }

func (NatRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatRuleCondition)(nil)).Elem()
}

func (o NatRuleConditionOutput) ToNatRuleConditionOutput() NatRuleConditionOutput {
	return o
}

func (o NatRuleConditionOutput) ToNatRuleConditionOutputWithContext(ctx context.Context) NatRuleConditionOutput {
	return o
}

// Description of the rule condition.
func (o NatRuleConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NatRuleConditionOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleCondition) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NatRuleConditionOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleCondition) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleConditionNetworkProtocols.
func (o NatRuleConditionOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleCondition) []string { return v.IpProtocols }).(pulumi.StringArrayOutput)
}

// Name of the rule condition.
func (o NatRuleConditionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleCondition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Condition Type.
func (o NatRuleConditionOutput) RuleConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v NatRuleCondition) string { return v.RuleConditionType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o NatRuleConditionOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleCondition) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NatRuleConditionOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleCondition) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// Rule condition of type nat.
type NatRuleConditionResponse struct {
	// Description of the rule condition.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleConditionNetworkProtocols.
	IpProtocols []string `pulumi:"ipProtocols"`
	// Name of the rule condition.
	Name *string `pulumi:"name"`
	// Rule Condition Type.
	RuleConditionType string `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// NatRuleConditionResponseInput is an input type that accepts NatRuleConditionResponseArgs and NatRuleConditionResponseOutput values.
// You can construct a concrete instance of `NatRuleConditionResponseInput` via:
//
//          NatRuleConditionResponseArgs{...}
type NatRuleConditionResponseInput interface {
	pulumi.Input

	ToNatRuleConditionResponseOutput() NatRuleConditionResponseOutput
	ToNatRuleConditionResponseOutputWithContext(context.Context) NatRuleConditionResponseOutput
}

// Rule condition of type nat.
type NatRuleConditionResponseArgs struct {
	// Description of the rule condition.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleConditionNetworkProtocols.
	IpProtocols pulumi.StringArrayInput `pulumi:"ipProtocols"`
	// Name of the rule condition.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rule Condition Type.
	RuleConditionType pulumi.StringInput `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
}

func (NatRuleConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NatRuleConditionResponse)(nil)).Elem()
}

func (i NatRuleConditionResponseArgs) ToNatRuleConditionResponseOutput() NatRuleConditionResponseOutput {
	return i.ToNatRuleConditionResponseOutputWithContext(context.Background())
}

func (i NatRuleConditionResponseArgs) ToNatRuleConditionResponseOutputWithContext(ctx context.Context) NatRuleConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatRuleConditionResponseOutput)
}

// Rule condition of type nat.
type NatRuleConditionResponseOutput struct{ *pulumi.OutputState }

func (NatRuleConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatRuleConditionResponse)(nil)).Elem()
}

func (o NatRuleConditionResponseOutput) ToNatRuleConditionResponseOutput() NatRuleConditionResponseOutput {
	return o
}

func (o NatRuleConditionResponseOutput) ToNatRuleConditionResponseOutputWithContext(ctx context.Context) NatRuleConditionResponseOutput {
	return o
}

// Description of the rule condition.
func (o NatRuleConditionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleConditionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NatRuleConditionResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleConditionResponse) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NatRuleConditionResponseOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleConditionResponse) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleConditionNetworkProtocols.
func (o NatRuleConditionResponseOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleConditionResponse) []string { return v.IpProtocols }).(pulumi.StringArrayOutput)
}

// Name of the rule condition.
func (o NatRuleConditionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleConditionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Condition Type.
func (o NatRuleConditionResponseOutput) RuleConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v NatRuleConditionResponse) string { return v.RuleConditionType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o NatRuleConditionResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleConditionResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NatRuleConditionResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleConditionResponse) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// Rule of type nat.
type NatRuleResponse struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleNetworkProtocols.
	IpProtocols []string `pulumi:"ipProtocols"`
	// Name of the rule.
	Name *string `pulumi:"name"`
	// Rule Type.
	RuleType string `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
	// The translated address for this NAT rule.
	TranslatedAddress *string `pulumi:"translatedAddress"`
	// The translated FQDN for this NAT rule.
	TranslatedFqdn *string `pulumi:"translatedFqdn"`
	// The translated port for this NAT rule.
	TranslatedPort *string `pulumi:"translatedPort"`
}

// NatRuleResponseInput is an input type that accepts NatRuleResponseArgs and NatRuleResponseOutput values.
// You can construct a concrete instance of `NatRuleResponseInput` via:
//
//          NatRuleResponseArgs{...}
type NatRuleResponseInput interface {
	pulumi.Input

	ToNatRuleResponseOutput() NatRuleResponseOutput
	ToNatRuleResponseOutputWithContext(context.Context) NatRuleResponseOutput
}

// Rule of type nat.
type NatRuleResponseArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleNetworkProtocols.
	IpProtocols pulumi.StringArrayInput `pulumi:"ipProtocols"`
	// Name of the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rule Type.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
	// The translated address for this NAT rule.
	TranslatedAddress pulumi.StringPtrInput `pulumi:"translatedAddress"`
	// The translated FQDN for this NAT rule.
	TranslatedFqdn pulumi.StringPtrInput `pulumi:"translatedFqdn"`
	// The translated port for this NAT rule.
	TranslatedPort pulumi.StringPtrInput `pulumi:"translatedPort"`
}

func (NatRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NatRuleResponse)(nil)).Elem()
}

func (i NatRuleResponseArgs) ToNatRuleResponseOutput() NatRuleResponseOutput {
	return i.ToNatRuleResponseOutputWithContext(context.Background())
}

func (i NatRuleResponseArgs) ToNatRuleResponseOutputWithContext(ctx context.Context) NatRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatRuleResponseOutput)
}

// Rule of type nat.
type NatRuleResponseOutput struct{ *pulumi.OutputState }

func (NatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NatRuleResponse)(nil)).Elem()
}

func (o NatRuleResponseOutput) ToNatRuleResponseOutput() NatRuleResponseOutput {
	return o
}

func (o NatRuleResponseOutput) ToNatRuleResponseOutputWithContext(ctx context.Context) NatRuleResponseOutput {
	return o
}

// Description of the rule.
func (o NatRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NatRuleResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleResponse) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NatRuleResponseOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleResponse) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleNetworkProtocols.
func (o NatRuleResponseOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleResponse) []string { return v.IpProtocols }).(pulumi.StringArrayOutput)
}

// Name of the rule.
func (o NatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Type.
func (o NatRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v NatRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o NatRuleResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NatRuleResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NatRuleResponse) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// The translated address for this NAT rule.
func (o NatRuleResponseOutput) TranslatedAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleResponse) *string { return v.TranslatedAddress }).(pulumi.StringPtrOutput)
}

// The translated FQDN for this NAT rule.
func (o NatRuleResponseOutput) TranslatedFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleResponse) *string { return v.TranslatedFqdn }).(pulumi.StringPtrOutput)
}

// The translated port for this NAT rule.
func (o NatRuleResponseOutput) TranslatedPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NatRuleResponse) *string { return v.TranslatedPort }).(pulumi.StringPtrOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettings struct {
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers []string `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel *string `pulumi:"internalDnsNameLabel"`
}

// NetworkInterfaceDnsSettingsInput is an input type that accepts NetworkInterfaceDnsSettingsArgs and NetworkInterfaceDnsSettingsOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsInput` via:
//
//          NetworkInterfaceDnsSettingsArgs{...}
type NetworkInterfaceDnsSettingsInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsOutput() NetworkInterfaceDnsSettingsOutput
	ToNetworkInterfaceDnsSettingsOutputWithContext(context.Context) NetworkInterfaceDnsSettingsOutput
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsArgs struct {
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel pulumi.StringPtrInput `pulumi:"internalDnsNameLabel"`
}

func (NetworkInterfaceDnsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsOutput() NetworkInterfaceDnsSettingsOutput {
	return i.ToNetworkInterfaceDnsSettingsOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsOutput)
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return i.ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsOutput).ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx)
}

// NetworkInterfaceDnsSettingsPtrInput is an input type that accepts NetworkInterfaceDnsSettingsArgs, NetworkInterfaceDnsSettingsPtr and NetworkInterfaceDnsSettingsPtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsPtrInput` via:
//
//          NetworkInterfaceDnsSettingsArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceDnsSettingsPtrInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput
	ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Context) NetworkInterfaceDnsSettingsPtrOutput
}

type networkInterfaceDnsSettingsPtrType NetworkInterfaceDnsSettingsArgs

func NetworkInterfaceDnsSettingsPtr(v *NetworkInterfaceDnsSettingsArgs) NetworkInterfaceDnsSettingsPtrInput {
	return (*networkInterfaceDnsSettingsPtrType)(v)
}

func (*networkInterfaceDnsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (i *networkInterfaceDnsSettingsPtrType) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return i.ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Background())
}

func (i *networkInterfaceDnsSettingsPtrType) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsPtrOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsOutput() NetworkInterfaceDnsSettingsOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return o.ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) *NetworkInterfaceDnsSettings {
		return &v
	}).(NetworkInterfaceDnsSettingsPtrOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) *string { return v.InternalDnsNameLabel }).(pulumi.StringPtrOutput)
}

type NetworkInterfaceDnsSettingsPtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsPtrOutput) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsPtrOutput) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsPtrOutput) Elem() NetworkInterfaceDnsSettingsOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) NetworkInterfaceDnsSettings { return *v }).(NetworkInterfaceDnsSettingsOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsPtrOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.InternalDnsNameLabel
	}).(pulumi.StringPtrOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsResponse struct {
	// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
	AppliedDnsServers []string `pulumi:"appliedDnsServers"`
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers []string `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel *string `pulumi:"internalDnsNameLabel"`
	// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
	InternalDomainNameSuffix string `pulumi:"internalDomainNameSuffix"`
	// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn string `pulumi:"internalFqdn"`
}

// NetworkInterfaceDnsSettingsResponseInput is an input type that accepts NetworkInterfaceDnsSettingsResponseArgs and NetworkInterfaceDnsSettingsResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsResponseInput` via:
//
//          NetworkInterfaceDnsSettingsResponseArgs{...}
type NetworkInterfaceDnsSettingsResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsResponseOutput() NetworkInterfaceDnsSettingsResponseOutput
	ToNetworkInterfaceDnsSettingsResponseOutputWithContext(context.Context) NetworkInterfaceDnsSettingsResponseOutput
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsResponseArgs struct {
	// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
	AppliedDnsServers pulumi.StringArrayInput `pulumi:"appliedDnsServers"`
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel pulumi.StringPtrInput `pulumi:"internalDnsNameLabel"`
	// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
	InternalDomainNameSuffix pulumi.StringInput `pulumi:"internalDomainNameSuffix"`
	// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn pulumi.StringInput `pulumi:"internalFqdn"`
}

func (NetworkInterfaceDnsSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (i NetworkInterfaceDnsSettingsResponseArgs) ToNetworkInterfaceDnsSettingsResponseOutput() NetworkInterfaceDnsSettingsResponseOutput {
	return i.ToNetworkInterfaceDnsSettingsResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsResponseArgs) ToNetworkInterfaceDnsSettingsResponseOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsResponseOutput)
}

func (i NetworkInterfaceDnsSettingsResponseArgs) ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return i.ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsResponseArgs) ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsResponseOutput).ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx)
}

// NetworkInterfaceDnsSettingsResponsePtrInput is an input type that accepts NetworkInterfaceDnsSettingsResponseArgs, NetworkInterfaceDnsSettingsResponsePtr and NetworkInterfaceDnsSettingsResponsePtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsResponsePtrInput` via:
//
//          NetworkInterfaceDnsSettingsResponseArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceDnsSettingsResponsePtrInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput
	ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput
}

type networkInterfaceDnsSettingsResponsePtrType NetworkInterfaceDnsSettingsResponseArgs

func NetworkInterfaceDnsSettingsResponsePtr(v *NetworkInterfaceDnsSettingsResponseArgs) NetworkInterfaceDnsSettingsResponsePtrInput {
	return (*networkInterfaceDnsSettingsResponsePtrType)(v)
}

func (*networkInterfaceDnsSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (i *networkInterfaceDnsSettingsResponsePtrType) ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return i.ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *networkInterfaceDnsSettingsResponsePtrType) ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsResponsePtrOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponseOutput() NetworkInterfaceDnsSettingsResponseOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponseOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponseOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o.ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) *NetworkInterfaceDnsSettingsResponse {
		return &v
	}).(NetworkInterfaceDnsSettingsResponsePtrOutput)
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsResponseOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) []string { return v.AppliedDnsServers }).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) *string { return v.InternalDnsNameLabel }).(pulumi.StringPtrOutput)
}

// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalDomainNameSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) string { return v.InternalDomainNameSuffix }).(pulumi.StringOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalFqdn() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) string { return v.InternalFqdn }).(pulumi.StringOutput)
}

type NetworkInterfaceDnsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) Elem() NetworkInterfaceDnsSettingsResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) NetworkInterfaceDnsSettingsResponse { return *v }).(NetworkInterfaceDnsSettingsResponseOutput)
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.AppliedDnsServers
	}).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalDnsNameLabel
	}).(pulumi.StringPtrOutput)
}

// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalDomainNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InternalDomainNameSuffix
	}).(pulumi.StringPtrOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InternalFqdn
	}).(pulumi.StringPtrOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfiguration struct {
	// The reference to ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools []ApplicationGatewayBackendAddressPool `pulumi:"applicationGatewayBackendAddressPools"`
	// Application security groups in which the IP configuration is included.
	ApplicationSecurityGroups []ApplicationSecurityGroupType `pulumi:"applicationSecurityGroups"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The reference to LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools []BackendAddressPool `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules []InboundNatRuleType `pulumi:"loadBalancerInboundNatRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Whether this is a primary customer address on the network interface.
	Primary *bool `pulumi:"primary"`
	// Private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Public IP address bound to the IP configuration.
	PublicIPAddress *PublicIPAddressType `pulumi:"publicIPAddress"`
	// Subnet bound to the IP configuration.
	Subnet *SubnetType `pulumi:"subnet"`
	// The reference to Virtual Network Taps.
	VirtualNetworkTaps []VirtualNetworkTapType `pulumi:"virtualNetworkTaps"`
}

// NetworkInterfaceIPConfigurationInput is an input type that accepts NetworkInterfaceIPConfigurationArgs and NetworkInterfaceIPConfigurationOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationInput` via:
//
//          NetworkInterfaceIPConfigurationArgs{...}
type NetworkInterfaceIPConfigurationInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationOutput() NetworkInterfaceIPConfigurationOutput
	ToNetworkInterfaceIPConfigurationOutputWithContext(context.Context) NetworkInterfaceIPConfigurationOutput
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationArgs struct {
	// The reference to ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools ApplicationGatewayBackendAddressPoolArrayInput `pulumi:"applicationGatewayBackendAddressPools"`
	// Application security groups in which the IP configuration is included.
	ApplicationSecurityGroups ApplicationSecurityGroupTypeArrayInput `pulumi:"applicationSecurityGroups"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The reference to LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools BackendAddressPoolArrayInput `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules InboundNatRuleTypeArrayInput `pulumi:"loadBalancerInboundNatRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether this is a primary customer address on the network interface.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// Private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion pulumi.StringPtrInput `pulumi:"privateIPAddressVersion"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Public IP address bound to the IP configuration.
	PublicIPAddress PublicIPAddressTypePtrInput `pulumi:"publicIPAddress"`
	// Subnet bound to the IP configuration.
	Subnet SubnetTypePtrInput `pulumi:"subnet"`
	// The reference to Virtual Network Taps.
	VirtualNetworkTaps VirtualNetworkTapTypeArrayInput `pulumi:"virtualNetworkTaps"`
}

func (NetworkInterfaceIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationArgs) ToNetworkInterfaceIPConfigurationOutput() NetworkInterfaceIPConfigurationOutput {
	return i.ToNetworkInterfaceIPConfigurationOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationArgs) ToNetworkInterfaceIPConfigurationOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationOutput)
}

func (i NetworkInterfaceIPConfigurationArgs) ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput {
	return i.ToNetworkInterfaceIPConfigurationPtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationArgs) ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationOutput).ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx)
}

// NetworkInterfaceIPConfigurationPtrInput is an input type that accepts NetworkInterfaceIPConfigurationArgs, NetworkInterfaceIPConfigurationPtr and NetworkInterfaceIPConfigurationPtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationPtrInput` via:
//
//          NetworkInterfaceIPConfigurationArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceIPConfigurationPtrInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput
	ToNetworkInterfaceIPConfigurationPtrOutputWithContext(context.Context) NetworkInterfaceIPConfigurationPtrOutput
}

type networkInterfaceIPConfigurationPtrType NetworkInterfaceIPConfigurationArgs

func NetworkInterfaceIPConfigurationPtr(v *NetworkInterfaceIPConfigurationArgs) NetworkInterfaceIPConfigurationPtrInput {
	return (*networkInterfaceIPConfigurationPtrType)(v)
}

func (*networkInterfaceIPConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (i *networkInterfaceIPConfigurationPtrType) ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput {
	return i.ToNetworkInterfaceIPConfigurationPtrOutputWithContext(context.Background())
}

func (i *networkInterfaceIPConfigurationPtrType) ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationPtrOutput)
}

// NetworkInterfaceIPConfigurationArrayInput is an input type that accepts NetworkInterfaceIPConfigurationArray and NetworkInterfaceIPConfigurationArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationArrayInput` via:
//
//          NetworkInterfaceIPConfigurationArray{ NetworkInterfaceIPConfigurationArgs{...} }
type NetworkInterfaceIPConfigurationArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationArrayOutput() NetworkInterfaceIPConfigurationArrayOutput
	ToNetworkInterfaceIPConfigurationArrayOutputWithContext(context.Context) NetworkInterfaceIPConfigurationArrayOutput
}

type NetworkInterfaceIPConfigurationArray []NetworkInterfaceIPConfigurationInput

func (NetworkInterfaceIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationArray) ToNetworkInterfaceIPConfigurationArrayOutput() NetworkInterfaceIPConfigurationArrayOutput {
	return i.ToNetworkInterfaceIPConfigurationArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationArray) ToNetworkInterfaceIPConfigurationArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationArrayOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationOutput) ToNetworkInterfaceIPConfigurationOutput() NetworkInterfaceIPConfigurationOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationOutput) ToNetworkInterfaceIPConfigurationOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationOutput) ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput {
	return o.ToNetworkInterfaceIPConfigurationPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceIPConfigurationOutput) ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *NetworkInterfaceIPConfiguration {
		return &v
	}).(NetworkInterfaceIPConfigurationPtrOutput)
}

// The reference to ApplicationGatewayBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationOutput) ApplicationGatewayBackendAddressPools() ApplicationGatewayBackendAddressPoolArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) []ApplicationGatewayBackendAddressPool {
		return v.ApplicationGatewayBackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolArrayOutput)
}

// Application security groups in which the IP configuration is included.
func (o NetworkInterfaceIPConfigurationOutput) ApplicationSecurityGroups() ApplicationSecurityGroupTypeArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) []ApplicationSecurityGroupType {
		return v.ApplicationSecurityGroups
	}).(ApplicationSecurityGroupTypeArrayOutput)
}

// Resource ID.
func (o NetworkInterfaceIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The reference to LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationOutput) LoadBalancerBackendAddressPools() BackendAddressPoolArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) []BackendAddressPool { return v.LoadBalancerBackendAddressPools }).(BackendAddressPoolArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationOutput) LoadBalancerInboundNatRules() InboundNatRuleTypeArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) []InboundNatRuleType { return v.LoadBalancerInboundNatRules }).(InboundNatRuleTypeArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// Private IP address of the IP configuration.
func (o NetworkInterfaceIPConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
func (o NetworkInterfaceIPConfigurationOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o NetworkInterfaceIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Public IP address bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *PublicIPAddressType { return v.PublicIPAddress }).(PublicIPAddressTypePtrOutput)
}

// Subnet bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *SubnetType { return v.Subnet }).(SubnetTypePtrOutput)
}

// The reference to Virtual Network Taps.
func (o NetworkInterfaceIPConfigurationOutput) VirtualNetworkTaps() VirtualNetworkTapTypeArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) []VirtualNetworkTapType { return v.VirtualNetworkTaps }).(VirtualNetworkTapTypeArrayOutput)
}

type NetworkInterfaceIPConfigurationPtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationPtrOutput) ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPtrOutput) ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPtrOutput) Elem() NetworkInterfaceIPConfigurationOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) NetworkInterfaceIPConfiguration { return *v }).(NetworkInterfaceIPConfigurationOutput)
}

// The reference to ApplicationGatewayBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationPtrOutput) ApplicationGatewayBackendAddressPools() ApplicationGatewayBackendAddressPoolArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) []ApplicationGatewayBackendAddressPool {
		if v == nil {
			return nil
		}
		return v.ApplicationGatewayBackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolArrayOutput)
}

// Application security groups in which the IP configuration is included.
func (o NetworkInterfaceIPConfigurationPtrOutput) ApplicationSecurityGroups() ApplicationSecurityGroupTypeArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) []ApplicationSecurityGroupType {
		if v == nil {
			return nil
		}
		return v.ApplicationSecurityGroups
	}).(ApplicationSecurityGroupTypeArrayOutput)
}

// Resource ID.
func (o NetworkInterfaceIPConfigurationPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The reference to LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationPtrOutput) LoadBalancerBackendAddressPools() BackendAddressPoolArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) []BackendAddressPool {
		if v == nil {
			return nil
		}
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationPtrOutput) LoadBalancerInboundNatRules() InboundNatRuleTypeArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) []InboundNatRuleType {
		if v == nil {
			return nil
		}
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleTypeArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationPtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

// Private IP address of the IP configuration.
func (o NetworkInterfaceIPConfigurationPtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
func (o NetworkInterfaceIPConfigurationPtrOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o NetworkInterfaceIPConfigurationPtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// Public IP address bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationPtrOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *PublicIPAddressType {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressTypePtrOutput)
}

// Subnet bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationPtrOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *SubnetType {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetTypePtrOutput)
}

// The reference to Virtual Network Taps.
func (o NetworkInterfaceIPConfigurationPtrOutput) VirtualNetworkTaps() VirtualNetworkTapTypeArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) []VirtualNetworkTapType {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkTaps
	}).(VirtualNetworkTapTypeArrayOutput)
}

type NetworkInterfaceIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationArrayOutput) ToNetworkInterfaceIPConfigurationArrayOutput() NetworkInterfaceIPConfigurationArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationArrayOutput) ToNetworkInterfaceIPConfigurationArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceIPConfiguration {
		return vs[0].([]NetworkInterfaceIPConfiguration)[vs[1].(int)]
	}).(NetworkInterfaceIPConfigurationOutput)
}

// PrivateLinkConnection properties for the network interface.
type NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse struct {
	// List of FQDNs for current private link connection.
	Fqdns []string `pulumi:"fqdns"`
	// The group ID for current private link connection.
	GroupId string `pulumi:"groupId"`
	// The required member name for current private link connection.
	RequiredMemberName string `pulumi:"requiredMemberName"`
}

// NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseInput is an input type that accepts NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseArgs and NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseInput` via:
//
//          NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseArgs{...}
type NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput
	ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutputWithContext(context.Context) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput
}

// PrivateLinkConnection properties for the network interface.
type NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseArgs struct {
	// List of FQDNs for current private link connection.
	Fqdns pulumi.StringArrayInput `pulumi:"fqdns"`
	// The group ID for current private link connection.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// The required member name for current private link connection.
	RequiredMemberName pulumi.StringInput `pulumi:"requiredMemberName"`
}

func (NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseArgs) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput {
	return i.ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseArgs) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput)
}

func (i NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseArgs) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput {
	return i.ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseArgs) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput).ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutputWithContext(ctx)
}

// NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrInput is an input type that accepts NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseArgs, NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtr and NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrInput` via:
//
//          NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput
	ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutputWithContext(context.Context) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput
}

type networkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrType NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseArgs

func NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtr(v *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseArgs) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrInput {
	return (*networkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrType)(v)
}

func (*networkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse)(nil)).Elem()
}

func (i *networkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrType) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput {
	return i.ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *networkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrType) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput)
}

// PrivateLinkConnection properties for the network interface.
type NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput {
	return o.ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse {
		return &v
	}).(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput)
}

// List of FQDNs for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) []string {
		return v.Fqdns
	}).(pulumi.StringArrayOutput)
}

// The group ID for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) string {
		return v.GroupId
	}).(pulumi.StringOutput)
}

// The required member name for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput) RequiredMemberName() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) string {
		return v.RequiredMemberName
	}).(pulumi.StringOutput)
}

type NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) ToNetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) Elem() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse {
		return *v
	}).(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput)
}

// List of FQDNs for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) Fqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) []string {
		if v == nil {
			return nil
		}
		return v.Fqdns
	}).(pulumi.StringArrayOutput)
}

// The group ID for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.GroupId
	}).(pulumi.StringPtrOutput)
}

// The required member name for current private link connection.
func (o NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput) RequiredMemberName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RequiredMemberName
	}).(pulumi.StringPtrOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationResponse struct {
	// The reference to ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools []ApplicationGatewayBackendAddressPoolResponse `pulumi:"applicationGatewayBackendAddressPools"`
	// Application security groups in which the IP configuration is included.
	ApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"applicationSecurityGroups"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The reference to LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools []BackendAddressPoolResponse `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules []InboundNatRuleResponse `pulumi:"loadBalancerInboundNatRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Whether this is a primary customer address on the network interface.
	Primary *bool `pulumi:"primary"`
	// Private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// PrivateLinkConnection properties for the network interface.
	PrivateLinkConnectionProperties NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse `pulumi:"privateLinkConnectionProperties"`
	// The provisioning state of the network interface IP configuration.
	ProvisioningState string `pulumi:"provisioningState"`
	// Public IP address bound to the IP configuration.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// Subnet bound to the IP configuration.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// The reference to Virtual Network Taps.
	VirtualNetworkTaps []VirtualNetworkTapResponse `pulumi:"virtualNetworkTaps"`
}

// NetworkInterfaceIPConfigurationResponseInput is an input type that accepts NetworkInterfaceIPConfigurationResponseArgs and NetworkInterfaceIPConfigurationResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationResponseInput` via:
//
//          NetworkInterfaceIPConfigurationResponseArgs{...}
type NetworkInterfaceIPConfigurationResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationResponseOutput() NetworkInterfaceIPConfigurationResponseOutput
	ToNetworkInterfaceIPConfigurationResponseOutputWithContext(context.Context) NetworkInterfaceIPConfigurationResponseOutput
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationResponseArgs struct {
	// The reference to ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools ApplicationGatewayBackendAddressPoolResponseArrayInput `pulumi:"applicationGatewayBackendAddressPools"`
	// Application security groups in which the IP configuration is included.
	ApplicationSecurityGroups ApplicationSecurityGroupResponseArrayInput `pulumi:"applicationSecurityGroups"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The reference to LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools BackendAddressPoolResponseArrayInput `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules InboundNatRuleResponseArrayInput `pulumi:"loadBalancerInboundNatRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether this is a primary customer address on the network interface.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// Private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion pulumi.StringPtrInput `pulumi:"privateIPAddressVersion"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// PrivateLinkConnection properties for the network interface.
	PrivateLinkConnectionProperties NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseInput `pulumi:"privateLinkConnectionProperties"`
	// The provisioning state of the network interface IP configuration.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Public IP address bound to the IP configuration.
	PublicIPAddress PublicIPAddressResponsePtrInput `pulumi:"publicIPAddress"`
	// Subnet bound to the IP configuration.
	Subnet SubnetResponsePtrInput `pulumi:"subnet"`
	// The reference to Virtual Network Taps.
	VirtualNetworkTaps VirtualNetworkTapResponseArrayInput `pulumi:"virtualNetworkTaps"`
}

func (NetworkInterfaceIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationResponseArgs) ToNetworkInterfaceIPConfigurationResponseOutput() NetworkInterfaceIPConfigurationResponseOutput {
	return i.ToNetworkInterfaceIPConfigurationResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationResponseArgs) ToNetworkInterfaceIPConfigurationResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationResponseOutput)
}

func (i NetworkInterfaceIPConfigurationResponseArgs) ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return i.ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationResponseArgs) ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationResponseOutput).ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx)
}

// NetworkInterfaceIPConfigurationResponsePtrInput is an input type that accepts NetworkInterfaceIPConfigurationResponseArgs, NetworkInterfaceIPConfigurationResponsePtr and NetworkInterfaceIPConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationResponsePtrInput` via:
//
//          NetworkInterfaceIPConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceIPConfigurationResponsePtrInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput
	ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput
}

type networkInterfaceIPConfigurationResponsePtrType NetworkInterfaceIPConfigurationResponseArgs

func NetworkInterfaceIPConfigurationResponsePtr(v *NetworkInterfaceIPConfigurationResponseArgs) NetworkInterfaceIPConfigurationResponsePtrInput {
	return (*networkInterfaceIPConfigurationResponsePtrType)(v)
}

func (*networkInterfaceIPConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (i *networkInterfaceIPConfigurationResponsePtrType) ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return i.ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *networkInterfaceIPConfigurationResponsePtrType) ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// NetworkInterfaceIPConfigurationResponseArrayInput is an input type that accepts NetworkInterfaceIPConfigurationResponseArray and NetworkInterfaceIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationResponseArrayInput` via:
//
//          NetworkInterfaceIPConfigurationResponseArray{ NetworkInterfaceIPConfigurationResponseArgs{...} }
type NetworkInterfaceIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationResponseArrayOutput() NetworkInterfaceIPConfigurationResponseArrayOutput
	ToNetworkInterfaceIPConfigurationResponseArrayOutputWithContext(context.Context) NetworkInterfaceIPConfigurationResponseArrayOutput
}

type NetworkInterfaceIPConfigurationResponseArray []NetworkInterfaceIPConfigurationResponseInput

func (NetworkInterfaceIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationResponseArray) ToNetworkInterfaceIPConfigurationResponseArrayOutput() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return i.ToNetworkInterfaceIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationResponseArray) ToNetworkInterfaceIPConfigurationResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponseOutput() NetworkInterfaceIPConfigurationResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *NetworkInterfaceIPConfigurationResponse {
		return &v
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// The reference to ApplicationGatewayBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) ApplicationGatewayBackendAddressPools() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []ApplicationGatewayBackendAddressPoolResponse {
		return v.ApplicationGatewayBackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Application security groups in which the IP configuration is included.
func (o NetworkInterfaceIPConfigurationResponseOutput) ApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []ApplicationSecurityGroupResponse {
		return v.ApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o NetworkInterfaceIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The reference to LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) LoadBalancerBackendAddressPools() BackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []BackendAddressPoolResponse {
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolResponseArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationResponseOutput) LoadBalancerInboundNatRules() InboundNatRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []InboundNatRuleResponse {
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// Private IP address of the IP configuration.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// PrivateLinkConnection properties for the network interface.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateLinkConnectionProperties() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse {
		return v.PrivateLinkConnectionProperties
	}).(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput)
}

// The provisioning state of the network interface IP configuration.
func (o NetworkInterfaceIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Public IP address bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *PublicIPAddressResponse { return v.PublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// Subnet bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// The reference to Virtual Network Taps.
func (o NetworkInterfaceIPConfigurationResponseOutput) VirtualNetworkTaps() VirtualNetworkTapResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []VirtualNetworkTapResponse {
		return v.VirtualNetworkTaps
	}).(VirtualNetworkTapResponseArrayOutput)
}

type NetworkInterfaceIPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Elem() NetworkInterfaceIPConfigurationResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) NetworkInterfaceIPConfigurationResponse { return *v }).(NetworkInterfaceIPConfigurationResponseOutput)
}

// The reference to ApplicationGatewayBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ApplicationGatewayBackendAddressPools() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []ApplicationGatewayBackendAddressPoolResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationGatewayBackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Application security groups in which the IP configuration is included.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []ApplicationSecurityGroupResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The reference to LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) LoadBalancerBackendAddressPools() BackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []BackendAddressPoolResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolResponseArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) LoadBalancerInboundNatRules() InboundNatRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []InboundNatRuleResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

// Private IP address of the IP configuration.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// PrivateLinkConnection properties for the network interface.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateLinkConnectionProperties() NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponse {
		if v == nil {
			return nil
		}
		return &v.PrivateLinkConnectionProperties
	}).(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput)
}

// The provisioning state of the network interface IP configuration.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Public IP address bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// Subnet bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

// The reference to Virtual Network Taps.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) VirtualNetworkTaps() VirtualNetworkTapResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []VirtualNetworkTapResponse {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkTaps
	}).(VirtualNetworkTapResponseArrayOutput)
}

type NetworkInterfaceIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) ToNetworkInterfaceIPConfigurationResponseArrayOutput() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) ToNetworkInterfaceIPConfigurationResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceIPConfigurationResponse {
		return vs[0].([]NetworkInterfaceIPConfigurationResponse)[vs[1].(int)]
	}).(NetworkInterfaceIPConfigurationResponseOutput)
}

// A network interface in a resource group.
type NetworkInterfaceResponse struct {
	// The DNS settings in network interface.
	DnsSettings *NetworkInterfaceDnsSettingsResponse `pulumi:"dnsSettings"`
	// A reference to the dscp configuration to which the network interface is linked.
	DscpConfiguration SubResourceResponse `pulumi:"dscpConfiguration"`
	// If the network interface is accelerated networking enabled.
	EnableAcceleratedNetworking *bool `pulumi:"enableAcceleratedNetworking"`
	// Indicates whether IP forwarding is enabled on this network interface.
	EnableIPForwarding *bool `pulumi:"enableIPForwarding"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The extended location of the network interface.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// A list of references to linked BareMetal resources.
	HostedWorkloads []string `pulumi:"hostedWorkloads"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// A list of IPConfigurations of the network interface.
	IpConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The MAC address of the network interface.
	MacAddress string `pulumi:"macAddress"`
	// Resource name.
	Name string `pulumi:"name"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupResponse `pulumi:"networkSecurityGroup"`
	// Whether this is a primary network interface on a virtual machine.
	Primary bool `pulumi:"primary"`
	// A reference to the private endpoint to which the network interface is linked.
	PrivateEndpoint PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// The provisioning state of the network interface resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the network interface resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// A list of TapConfigurations of the network interface.
	TapConfigurations []NetworkInterfaceTapConfigurationResponse `pulumi:"tapConfigurations"`
	// Resource type.
	Type string `pulumi:"type"`
	// The reference to a virtual machine.
	VirtualMachine SubResourceResponse `pulumi:"virtualMachine"`
}

// NetworkInterfaceResponseInput is an input type that accepts NetworkInterfaceResponseArgs and NetworkInterfaceResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceResponseInput` via:
//
//          NetworkInterfaceResponseArgs{...}
type NetworkInterfaceResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput
	ToNetworkInterfaceResponseOutputWithContext(context.Context) NetworkInterfaceResponseOutput
}

// A network interface in a resource group.
type NetworkInterfaceResponseArgs struct {
	// The DNS settings in network interface.
	DnsSettings NetworkInterfaceDnsSettingsResponsePtrInput `pulumi:"dnsSettings"`
	// A reference to the dscp configuration to which the network interface is linked.
	DscpConfiguration SubResourceResponseInput `pulumi:"dscpConfiguration"`
	// If the network interface is accelerated networking enabled.
	EnableAcceleratedNetworking pulumi.BoolPtrInput `pulumi:"enableAcceleratedNetworking"`
	// Indicates whether IP forwarding is enabled on this network interface.
	EnableIPForwarding pulumi.BoolPtrInput `pulumi:"enableIPForwarding"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The extended location of the network interface.
	ExtendedLocation ExtendedLocationResponsePtrInput `pulumi:"extendedLocation"`
	// A list of references to linked BareMetal resources.
	HostedWorkloads pulumi.StringArrayInput `pulumi:"hostedWorkloads"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A list of IPConfigurations of the network interface.
	IpConfigurations NetworkInterfaceIPConfigurationResponseArrayInput `pulumi:"ipConfigurations"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The MAC address of the network interface.
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup NetworkSecurityGroupResponsePtrInput `pulumi:"networkSecurityGroup"`
	// Whether this is a primary network interface on a virtual machine.
	Primary pulumi.BoolInput `pulumi:"primary"`
	// A reference to the private endpoint to which the network interface is linked.
	PrivateEndpoint PrivateEndpointResponseInput `pulumi:"privateEndpoint"`
	// The provisioning state of the network interface resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resource GUID property of the network interface resource.
	ResourceGuid pulumi.StringInput `pulumi:"resourceGuid"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// A list of TapConfigurations of the network interface.
	TapConfigurations NetworkInterfaceTapConfigurationResponseArrayInput `pulumi:"tapConfigurations"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// The reference to a virtual machine.
	VirtualMachine SubResourceResponseInput `pulumi:"virtualMachine"`
}

func (NetworkInterfaceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResponse)(nil)).Elem()
}

func (i NetworkInterfaceResponseArgs) ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput {
	return i.ToNetworkInterfaceResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceResponseArgs) ToNetworkInterfaceResponseOutputWithContext(ctx context.Context) NetworkInterfaceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceResponseOutput)
}

// NetworkInterfaceResponseArrayInput is an input type that accepts NetworkInterfaceResponseArray and NetworkInterfaceResponseArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceResponseArrayInput` via:
//
//          NetworkInterfaceResponseArray{ NetworkInterfaceResponseArgs{...} }
type NetworkInterfaceResponseArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceResponseArrayOutput() NetworkInterfaceResponseArrayOutput
	ToNetworkInterfaceResponseArrayOutputWithContext(context.Context) NetworkInterfaceResponseArrayOutput
}

type NetworkInterfaceResponseArray []NetworkInterfaceResponseInput

func (NetworkInterfaceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceResponse)(nil)).Elem()
}

func (i NetworkInterfaceResponseArray) ToNetworkInterfaceResponseArrayOutput() NetworkInterfaceResponseArrayOutput {
	return i.ToNetworkInterfaceResponseArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceResponseArray) ToNetworkInterfaceResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceResponseArrayOutput)
}

// A network interface in a resource group.
type NetworkInterfaceResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput {
	return o
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutputWithContext(ctx context.Context) NetworkInterfaceResponseOutput {
	return o
}

// The DNS settings in network interface.
func (o NetworkInterfaceResponseOutput) DnsSettings() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *NetworkInterfaceDnsSettingsResponse { return v.DnsSettings }).(NetworkInterfaceDnsSettingsResponsePtrOutput)
}

// A reference to the dscp configuration to which the network interface is linked.
func (o NetworkInterfaceResponseOutput) DscpConfiguration() SubResourceResponseOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) SubResourceResponse { return v.DscpConfiguration }).(SubResourceResponseOutput)
}

// If the network interface is accelerated networking enabled.
func (o NetworkInterfaceResponseOutput) EnableAcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *bool { return v.EnableAcceleratedNetworking }).(pulumi.BoolPtrOutput)
}

// Indicates whether IP forwarding is enabled on this network interface.
func (o NetworkInterfaceResponseOutput) EnableIPForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *bool { return v.EnableIPForwarding }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The extended location of the network interface.
func (o NetworkInterfaceResponseOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// A list of references to linked BareMetal resources.
func (o NetworkInterfaceResponseOutput) HostedWorkloads() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) []string { return v.HostedWorkloads }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o NetworkInterfaceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A list of IPConfigurations of the network interface.
func (o NetworkInterfaceResponseOutput) IpConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) []NetworkInterfaceIPConfigurationResponse { return v.IpConfigurations }).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o NetworkInterfaceResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The MAC address of the network interface.
func (o NetworkInterfaceResponseOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.MacAddress }).(pulumi.StringOutput)
}

// Resource name.
func (o NetworkInterfaceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o NetworkInterfaceResponseOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *NetworkSecurityGroupResponse { return v.NetworkSecurityGroup }).(NetworkSecurityGroupResponsePtrOutput)
}

// Whether this is a primary network interface on a virtual machine.
func (o NetworkInterfaceResponseOutput) Primary() pulumi.BoolOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) bool { return v.Primary }).(pulumi.BoolOutput)
}

// A reference to the private endpoint to which the network interface is linked.
func (o NetworkInterfaceResponseOutput) PrivateEndpoint() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponseOutput)
}

// The provisioning state of the network interface resource.
func (o NetworkInterfaceResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the network interface resource.
func (o NetworkInterfaceResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Resource tags.
func (o NetworkInterfaceResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// A list of TapConfigurations of the network interface.
func (o NetworkInterfaceResponseOutput) TapConfigurations() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) []NetworkInterfaceTapConfigurationResponse {
		return v.TapConfigurations
	}).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// Resource type.
func (o NetworkInterfaceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The reference to a virtual machine.
func (o NetworkInterfaceResponseOutput) VirtualMachine() SubResourceResponseOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) SubResourceResponse { return v.VirtualMachine }).(SubResourceResponseOutput)
}

type NetworkInterfaceResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponseArrayOutput) ToNetworkInterfaceResponseArrayOutput() NetworkInterfaceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceResponseArrayOutput) ToNetworkInterfaceResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceResponse {
		return vs[0].([]NetworkInterfaceResponse)[vs[1].(int)]
	}).(NetworkInterfaceResponseOutput)
}

// Tap configuration in a Network Interface.
type NetworkInterfaceTapConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the network interface tap configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Sub Resource type.
	Type string `pulumi:"type"`
	// The reference to the Virtual Network Tap resource.
	VirtualNetworkTap *VirtualNetworkTapResponse `pulumi:"virtualNetworkTap"`
}

// NetworkInterfaceTapConfigurationResponseInput is an input type that accepts NetworkInterfaceTapConfigurationResponseArgs and NetworkInterfaceTapConfigurationResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceTapConfigurationResponseInput` via:
//
//          NetworkInterfaceTapConfigurationResponseArgs{...}
type NetworkInterfaceTapConfigurationResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceTapConfigurationResponseOutput() NetworkInterfaceTapConfigurationResponseOutput
	ToNetworkInterfaceTapConfigurationResponseOutputWithContext(context.Context) NetworkInterfaceTapConfigurationResponseOutput
}

// Tap configuration in a Network Interface.
type NetworkInterfaceTapConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the network interface tap configuration resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Sub Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// The reference to the Virtual Network Tap resource.
	VirtualNetworkTap VirtualNetworkTapResponsePtrInput `pulumi:"virtualNetworkTap"`
}

func (NetworkInterfaceTapConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceTapConfigurationResponse)(nil)).Elem()
}

func (i NetworkInterfaceTapConfigurationResponseArgs) ToNetworkInterfaceTapConfigurationResponseOutput() NetworkInterfaceTapConfigurationResponseOutput {
	return i.ToNetworkInterfaceTapConfigurationResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceTapConfigurationResponseArgs) ToNetworkInterfaceTapConfigurationResponseOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTapConfigurationResponseOutput)
}

// NetworkInterfaceTapConfigurationResponseArrayInput is an input type that accepts NetworkInterfaceTapConfigurationResponseArray and NetworkInterfaceTapConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceTapConfigurationResponseArrayInput` via:
//
//          NetworkInterfaceTapConfigurationResponseArray{ NetworkInterfaceTapConfigurationResponseArgs{...} }
type NetworkInterfaceTapConfigurationResponseArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceTapConfigurationResponseArrayOutput() NetworkInterfaceTapConfigurationResponseArrayOutput
	ToNetworkInterfaceTapConfigurationResponseArrayOutputWithContext(context.Context) NetworkInterfaceTapConfigurationResponseArrayOutput
}

type NetworkInterfaceTapConfigurationResponseArray []NetworkInterfaceTapConfigurationResponseInput

func (NetworkInterfaceTapConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceTapConfigurationResponse)(nil)).Elem()
}

func (i NetworkInterfaceTapConfigurationResponseArray) ToNetworkInterfaceTapConfigurationResponseArrayOutput() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return i.ToNetworkInterfaceTapConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceTapConfigurationResponseArray) ToNetworkInterfaceTapConfigurationResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// Tap configuration in a Network Interface.
type NetworkInterfaceTapConfigurationResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTapConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceTapConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceTapConfigurationResponseOutput) ToNetworkInterfaceTapConfigurationResponseOutput() NetworkInterfaceTapConfigurationResponseOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationResponseOutput) ToNetworkInterfaceTapConfigurationResponseOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceTapConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o NetworkInterfaceTapConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceTapConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the network interface tap configuration resource.
func (o NetworkInterfaceTapConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Sub Resource type.
func (o NetworkInterfaceTapConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The reference to the Virtual Network Tap resource.
func (o NetworkInterfaceTapConfigurationResponseOutput) VirtualNetworkTap() VirtualNetworkTapResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceTapConfigurationResponse) *VirtualNetworkTapResponse {
		return v.VirtualNetworkTap
	}).(VirtualNetworkTapResponsePtrOutput)
}

type NetworkInterfaceTapConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTapConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceTapConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceTapConfigurationResponseArrayOutput) ToNetworkInterfaceTapConfigurationResponseArrayOutput() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationResponseArrayOutput) ToNetworkInterfaceTapConfigurationResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceTapConfigurationResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceTapConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceTapConfigurationResponse {
		return vs[0].([]NetworkInterfaceTapConfigurationResponse)[vs[1].(int)]
	}).(NetworkInterfaceTapConfigurationResponseOutput)
}

// Rule of type network.
type NetworkRule struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination FQDNs.
	DestinationFqdns []string `pulumi:"destinationFqdns"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups []string `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleNetworkProtocols.
	IpProtocols []string `pulumi:"ipProtocols"`
	// Name of the rule.
	Name *string `pulumi:"name"`
	// Rule Type.
	RuleType string `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// NetworkRuleInput is an input type that accepts NetworkRuleArgs and NetworkRuleOutput values.
// You can construct a concrete instance of `NetworkRuleInput` via:
//
//          NetworkRuleArgs{...}
type NetworkRuleInput interface {
	pulumi.Input

	ToNetworkRuleOutput() NetworkRuleOutput
	ToNetworkRuleOutputWithContext(context.Context) NetworkRuleOutput
}

// Rule of type network.
type NetworkRuleArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination FQDNs.
	DestinationFqdns pulumi.StringArrayInput `pulumi:"destinationFqdns"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups pulumi.StringArrayInput `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleNetworkProtocols.
	IpProtocols pulumi.StringArrayInput `pulumi:"ipProtocols"`
	// Name of the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rule Type.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
}

func (NetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRule)(nil)).Elem()
}

func (i NetworkRuleArgs) ToNetworkRuleOutput() NetworkRuleOutput {
	return i.ToNetworkRuleOutputWithContext(context.Background())
}

func (i NetworkRuleArgs) ToNetworkRuleOutputWithContext(ctx context.Context) NetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleOutput)
}

// Rule of type network.
type NetworkRuleOutput struct{ *pulumi.OutputState }

func (NetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRule)(nil)).Elem()
}

func (o NetworkRuleOutput) ToNetworkRuleOutput() NetworkRuleOutput {
	return o
}

func (o NetworkRuleOutput) ToNetworkRuleOutputWithContext(ctx context.Context) NetworkRuleOutput {
	return o
}

// Description of the rule.
func (o NetworkRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NetworkRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination FQDNs.
func (o NetworkRuleOutput) DestinationFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRule) []string { return v.DestinationFqdns }).(pulumi.StringArrayOutput)
}

// List of destination IpGroups for this rule.
func (o NetworkRuleOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRule) []string { return v.DestinationIpGroups }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NetworkRuleOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRule) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleNetworkProtocols.
func (o NetworkRuleOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRule) []string { return v.IpProtocols }).(pulumi.StringArrayOutput)
}

// Name of the rule.
func (o NetworkRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Type.
func (o NetworkRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRule) string { return v.RuleType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o NetworkRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NetworkRuleOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRule) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// Rule condition of type network.
type NetworkRuleCondition struct {
	// Description of the rule condition.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups []string `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleConditionNetworkProtocols.
	IpProtocols []string `pulumi:"ipProtocols"`
	// Name of the rule condition.
	Name *string `pulumi:"name"`
	// Rule Condition Type.
	RuleConditionType string `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// NetworkRuleConditionInput is an input type that accepts NetworkRuleConditionArgs and NetworkRuleConditionOutput values.
// You can construct a concrete instance of `NetworkRuleConditionInput` via:
//
//          NetworkRuleConditionArgs{...}
type NetworkRuleConditionInput interface {
	pulumi.Input

	ToNetworkRuleConditionOutput() NetworkRuleConditionOutput
	ToNetworkRuleConditionOutputWithContext(context.Context) NetworkRuleConditionOutput
}

// Rule condition of type network.
type NetworkRuleConditionArgs struct {
	// Description of the rule condition.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups pulumi.StringArrayInput `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleConditionNetworkProtocols.
	IpProtocols pulumi.StringArrayInput `pulumi:"ipProtocols"`
	// Name of the rule condition.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rule Condition Type.
	RuleConditionType pulumi.StringInput `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
}

func (NetworkRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleCondition)(nil)).Elem()
}

func (i NetworkRuleConditionArgs) ToNetworkRuleConditionOutput() NetworkRuleConditionOutput {
	return i.ToNetworkRuleConditionOutputWithContext(context.Background())
}

func (i NetworkRuleConditionArgs) ToNetworkRuleConditionOutputWithContext(ctx context.Context) NetworkRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleConditionOutput)
}

// Rule condition of type network.
type NetworkRuleConditionOutput struct{ *pulumi.OutputState }

func (NetworkRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleCondition)(nil)).Elem()
}

func (o NetworkRuleConditionOutput) ToNetworkRuleConditionOutput() NetworkRuleConditionOutput {
	return o
}

func (o NetworkRuleConditionOutput) ToNetworkRuleConditionOutputWithContext(ctx context.Context) NetworkRuleConditionOutput {
	return o
}

// Description of the rule condition.
func (o NetworkRuleConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NetworkRuleConditionOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleCondition) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination IpGroups for this rule.
func (o NetworkRuleConditionOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleCondition) []string { return v.DestinationIpGroups }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NetworkRuleConditionOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleCondition) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleConditionNetworkProtocols.
func (o NetworkRuleConditionOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleCondition) []string { return v.IpProtocols }).(pulumi.StringArrayOutput)
}

// Name of the rule condition.
func (o NetworkRuleConditionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleCondition) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Condition Type.
func (o NetworkRuleConditionOutput) RuleConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRuleCondition) string { return v.RuleConditionType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o NetworkRuleConditionOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleCondition) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NetworkRuleConditionOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleCondition) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// Rule condition of type network.
type NetworkRuleConditionResponse struct {
	// Description of the rule condition.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups []string `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleConditionNetworkProtocols.
	IpProtocols []string `pulumi:"ipProtocols"`
	// Name of the rule condition.
	Name *string `pulumi:"name"`
	// Rule Condition Type.
	RuleConditionType string `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// NetworkRuleConditionResponseInput is an input type that accepts NetworkRuleConditionResponseArgs and NetworkRuleConditionResponseOutput values.
// You can construct a concrete instance of `NetworkRuleConditionResponseInput` via:
//
//          NetworkRuleConditionResponseArgs{...}
type NetworkRuleConditionResponseInput interface {
	pulumi.Input

	ToNetworkRuleConditionResponseOutput() NetworkRuleConditionResponseOutput
	ToNetworkRuleConditionResponseOutputWithContext(context.Context) NetworkRuleConditionResponseOutput
}

// Rule condition of type network.
type NetworkRuleConditionResponseArgs struct {
	// Description of the rule condition.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups pulumi.StringArrayInput `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleConditionNetworkProtocols.
	IpProtocols pulumi.StringArrayInput `pulumi:"ipProtocols"`
	// Name of the rule condition.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rule Condition Type.
	RuleConditionType pulumi.StringInput `pulumi:"ruleConditionType"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
}

func (NetworkRuleConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleConditionResponse)(nil)).Elem()
}

func (i NetworkRuleConditionResponseArgs) ToNetworkRuleConditionResponseOutput() NetworkRuleConditionResponseOutput {
	return i.ToNetworkRuleConditionResponseOutputWithContext(context.Background())
}

func (i NetworkRuleConditionResponseArgs) ToNetworkRuleConditionResponseOutputWithContext(ctx context.Context) NetworkRuleConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleConditionResponseOutput)
}

// Rule condition of type network.
type NetworkRuleConditionResponseOutput struct{ *pulumi.OutputState }

func (NetworkRuleConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleConditionResponse)(nil)).Elem()
}

func (o NetworkRuleConditionResponseOutput) ToNetworkRuleConditionResponseOutput() NetworkRuleConditionResponseOutput {
	return o
}

func (o NetworkRuleConditionResponseOutput) ToNetworkRuleConditionResponseOutputWithContext(ctx context.Context) NetworkRuleConditionResponseOutput {
	return o
}

// Description of the rule condition.
func (o NetworkRuleConditionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleConditionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NetworkRuleConditionResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleConditionResponse) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination IpGroups for this rule.
func (o NetworkRuleConditionResponseOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleConditionResponse) []string { return v.DestinationIpGroups }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NetworkRuleConditionResponseOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleConditionResponse) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleConditionNetworkProtocols.
func (o NetworkRuleConditionResponseOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleConditionResponse) []string { return v.IpProtocols }).(pulumi.StringArrayOutput)
}

// Name of the rule condition.
func (o NetworkRuleConditionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleConditionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Condition Type.
func (o NetworkRuleConditionResponseOutput) RuleConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRuleConditionResponse) string { return v.RuleConditionType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o NetworkRuleConditionResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleConditionResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NetworkRuleConditionResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleConditionResponse) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// Rule of type network.
type NetworkRuleResponse struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination FQDNs.
	DestinationFqdns []string `pulumi:"destinationFqdns"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups []string `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleNetworkProtocols.
	IpProtocols []string `pulumi:"ipProtocols"`
	// Name of the rule.
	Name *string `pulumi:"name"`
	// Rule Type.
	RuleType string `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups []string `pulumi:"sourceIpGroups"`
}

// NetworkRuleResponseInput is an input type that accepts NetworkRuleResponseArgs and NetworkRuleResponseOutput values.
// You can construct a concrete instance of `NetworkRuleResponseInput` via:
//
//          NetworkRuleResponseArgs{...}
type NetworkRuleResponseInput interface {
	pulumi.Input

	ToNetworkRuleResponseOutput() NetworkRuleResponseOutput
	ToNetworkRuleResponseOutputWithContext(context.Context) NetworkRuleResponseOutput
}

// Rule of type network.
type NetworkRuleResponseArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses or Service Tags.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination FQDNs.
	DestinationFqdns pulumi.StringArrayInput `pulumi:"destinationFqdns"`
	// List of destination IpGroups for this rule.
	DestinationIpGroups pulumi.StringArrayInput `pulumi:"destinationIpGroups"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Array of FirewallPolicyRuleNetworkProtocols.
	IpProtocols pulumi.StringArrayInput `pulumi:"ipProtocols"`
	// Name of the rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Rule Type.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of source IpGroups for this rule.
	SourceIpGroups pulumi.StringArrayInput `pulumi:"sourceIpGroups"`
}

func (NetworkRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleResponse)(nil)).Elem()
}

func (i NetworkRuleResponseArgs) ToNetworkRuleResponseOutput() NetworkRuleResponseOutput {
	return i.ToNetworkRuleResponseOutputWithContext(context.Background())
}

func (i NetworkRuleResponseArgs) ToNetworkRuleResponseOutputWithContext(ctx context.Context) NetworkRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkRuleResponseOutput)
}

// Rule of type network.
type NetworkRuleResponseOutput struct{ *pulumi.OutputState }

func (NetworkRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkRuleResponse)(nil)).Elem()
}

func (o NetworkRuleResponseOutput) ToNetworkRuleResponseOutput() NetworkRuleResponseOutput {
	return o
}

func (o NetworkRuleResponseOutput) ToNetworkRuleResponseOutputWithContext(ctx context.Context) NetworkRuleResponseOutput {
	return o
}

// Description of the rule.
func (o NetworkRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses or Service Tags.
func (o NetworkRuleResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleResponse) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination FQDNs.
func (o NetworkRuleResponseOutput) DestinationFqdns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleResponse) []string { return v.DestinationFqdns }).(pulumi.StringArrayOutput)
}

// List of destination IpGroups for this rule.
func (o NetworkRuleResponseOutput) DestinationIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleResponse) []string { return v.DestinationIpGroups }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o NetworkRuleResponseOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleResponse) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Array of FirewallPolicyRuleNetworkProtocols.
func (o NetworkRuleResponseOutput) IpProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleResponse) []string { return v.IpProtocols }).(pulumi.StringArrayOutput)
}

// Name of the rule.
func (o NetworkRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Rule Type.
func (o NetworkRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

// List of source IP addresses for this rule.
func (o NetworkRuleResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of source IpGroups for this rule.
func (o NetworkRuleResponseOutput) SourceIpGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkRuleResponse) []string { return v.SourceIpGroups }).(pulumi.StringArrayOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupType struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// A collection of security rules of the network security group.
	SecurityRules []SecurityRuleType `pulumi:"securityRules"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// NetworkSecurityGroupTypeInput is an input type that accepts NetworkSecurityGroupTypeArgs and NetworkSecurityGroupTypeOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupTypeInput` via:
//
//          NetworkSecurityGroupTypeArgs{...}
type NetworkSecurityGroupTypeInput interface {
	pulumi.Input

	ToNetworkSecurityGroupTypeOutput() NetworkSecurityGroupTypeOutput
	ToNetworkSecurityGroupTypeOutputWithContext(context.Context) NetworkSecurityGroupTypeOutput
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupTypeArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// A collection of security rules of the network security group.
	SecurityRules SecurityRuleTypeArrayInput `pulumi:"securityRules"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (NetworkSecurityGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupType)(nil)).Elem()
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypeOutput() NetworkSecurityGroupTypeOutput {
	return i.ToNetworkSecurityGroupTypeOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypeOutputWithContext(ctx context.Context) NetworkSecurityGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupTypeOutput)
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return i.ToNetworkSecurityGroupTypePtrOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupTypeOutput).ToNetworkSecurityGroupTypePtrOutputWithContext(ctx)
}

// NetworkSecurityGroupTypePtrInput is an input type that accepts NetworkSecurityGroupTypeArgs, NetworkSecurityGroupTypePtr and NetworkSecurityGroupTypePtrOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupTypePtrInput` via:
//
//          NetworkSecurityGroupTypeArgs{...}
//
//  or:
//
//          nil
type NetworkSecurityGroupTypePtrInput interface {
	pulumi.Input

	ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput
	ToNetworkSecurityGroupTypePtrOutputWithContext(context.Context) NetworkSecurityGroupTypePtrOutput
}

type networkSecurityGroupTypePtrType NetworkSecurityGroupTypeArgs

func NetworkSecurityGroupTypePtr(v *NetworkSecurityGroupTypeArgs) NetworkSecurityGroupTypePtrInput {
	return (*networkSecurityGroupTypePtrType)(v)
}

func (*networkSecurityGroupTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupType)(nil)).Elem()
}

func (i *networkSecurityGroupTypePtrType) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return i.ToNetworkSecurityGroupTypePtrOutputWithContext(context.Background())
}

func (i *networkSecurityGroupTypePtrType) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupTypePtrOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupTypeOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupType)(nil)).Elem()
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypeOutput() NetworkSecurityGroupTypeOutput {
	return o
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypeOutputWithContext(ctx context.Context) NetworkSecurityGroupTypeOutput {
	return o
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return o.ToNetworkSecurityGroupTypePtrOutputWithContext(context.Background())
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *NetworkSecurityGroupType {
		return &v
	}).(NetworkSecurityGroupTypePtrOutput)
}

// Resource ID.
func (o NetworkSecurityGroupTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupTypeOutput) SecurityRules() SecurityRuleTypeArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) []SecurityRuleType { return v.SecurityRules }).(SecurityRuleTypeArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type NetworkSecurityGroupTypePtrOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupType)(nil)).Elem()
}

func (o NetworkSecurityGroupTypePtrOutput) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return o
}

func (o NetworkSecurityGroupTypePtrOutput) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return o
}

func (o NetworkSecurityGroupTypePtrOutput) Elem() NetworkSecurityGroupTypeOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) NetworkSecurityGroupType { return *v }).(NetworkSecurityGroupTypeOutput)
}

// Resource ID.
func (o NetworkSecurityGroupTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupTypePtrOutput) SecurityRules() SecurityRuleTypeArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) []SecurityRuleType {
		if v == nil {
			return nil
		}
		return v.SecurityRules
	}).(SecurityRuleTypeArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupResponse struct {
	// The default security rules of network security group.
	DefaultSecurityRules []SecurityRuleResponse `pulumi:"defaultSecurityRules"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// A collection of references to flow log resources.
	FlowLogs []FlowLogResponse `pulumi:"flowLogs"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// A collection of references to network interfaces.
	NetworkInterfaces []NetworkInterfaceResponse `pulumi:"networkInterfaces"`
	// The provisioning state of the network security group resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules []SecurityRuleResponse `pulumi:"securityRules"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// NetworkSecurityGroupResponseInput is an input type that accepts NetworkSecurityGroupResponseArgs and NetworkSecurityGroupResponseOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupResponseInput` via:
//
//          NetworkSecurityGroupResponseArgs{...}
type NetworkSecurityGroupResponseInput interface {
	pulumi.Input

	ToNetworkSecurityGroupResponseOutput() NetworkSecurityGroupResponseOutput
	ToNetworkSecurityGroupResponseOutputWithContext(context.Context) NetworkSecurityGroupResponseOutput
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupResponseArgs struct {
	// The default security rules of network security group.
	DefaultSecurityRules SecurityRuleResponseArrayInput `pulumi:"defaultSecurityRules"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// A collection of references to flow log resources.
	FlowLogs FlowLogResponseArrayInput `pulumi:"flowLogs"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// A collection of references to network interfaces.
	NetworkInterfaces NetworkInterfaceResponseArrayInput `pulumi:"networkInterfaces"`
	// The provisioning state of the network security group resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid pulumi.StringInput `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules SecurityRuleResponseArrayInput `pulumi:"securityRules"`
	// A collection of references to subnets.
	Subnets SubnetResponseArrayInput `pulumi:"subnets"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NetworkSecurityGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupResponse)(nil)).Elem()
}

func (i NetworkSecurityGroupResponseArgs) ToNetworkSecurityGroupResponseOutput() NetworkSecurityGroupResponseOutput {
	return i.ToNetworkSecurityGroupResponseOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupResponseArgs) ToNetworkSecurityGroupResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupResponseOutput)
}

func (i NetworkSecurityGroupResponseArgs) ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput {
	return i.ToNetworkSecurityGroupResponsePtrOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupResponseArgs) ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupResponseOutput).ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx)
}

// NetworkSecurityGroupResponsePtrInput is an input type that accepts NetworkSecurityGroupResponseArgs, NetworkSecurityGroupResponsePtr and NetworkSecurityGroupResponsePtrOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupResponsePtrInput` via:
//
//          NetworkSecurityGroupResponseArgs{...}
//
//  or:
//
//          nil
type NetworkSecurityGroupResponsePtrInput interface {
	pulumi.Input

	ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput
	ToNetworkSecurityGroupResponsePtrOutputWithContext(context.Context) NetworkSecurityGroupResponsePtrOutput
}

type networkSecurityGroupResponsePtrType NetworkSecurityGroupResponseArgs

func NetworkSecurityGroupResponsePtr(v *NetworkSecurityGroupResponseArgs) NetworkSecurityGroupResponsePtrInput {
	return (*networkSecurityGroupResponsePtrType)(v)
}

func (*networkSecurityGroupResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupResponse)(nil)).Elem()
}

func (i *networkSecurityGroupResponsePtrType) ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput {
	return i.ToNetworkSecurityGroupResponsePtrOutputWithContext(context.Background())
}

func (i *networkSecurityGroupResponsePtrType) ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupResponsePtrOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupResponseOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponseOutput() NetworkSecurityGroupResponseOutput {
	return o
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupResponseOutput {
	return o
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput {
	return o.ToNetworkSecurityGroupResponsePtrOutputWithContext(context.Background())
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *NetworkSecurityGroupResponse {
		return &v
	}).(NetworkSecurityGroupResponsePtrOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupResponseOutput) DefaultSecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []SecurityRuleResponse { return v.DefaultSecurityRules }).(SecurityRuleResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// A collection of references to flow log resources.
func (o NetworkSecurityGroupResponseOutput) FlowLogs() FlowLogResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []FlowLogResponse { return v.FlowLogs }).(FlowLogResponseArrayOutput)
}

// Resource ID.
func (o NetworkSecurityGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkSecurityGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// A collection of references to network interfaces.
func (o NetworkSecurityGroupResponseOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []NetworkInterfaceResponse { return v.NetworkInterfaces }).(NetworkInterfaceResponseArrayOutput)
}

// The provisioning state of the network security group resource.
func (o NetworkSecurityGroupResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupResponseOutput) SecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []SecurityRuleResponse { return v.SecurityRules }).(SecurityRuleResponseArrayOutput)
}

// A collection of references to subnets.
func (o NetworkSecurityGroupResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkSecurityGroupResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.Type }).(pulumi.StringOutput)
}

type NetworkSecurityGroupResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupResponsePtrOutput) ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupResponsePtrOutput) ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupResponsePtrOutput) Elem() NetworkSecurityGroupResponseOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) NetworkSecurityGroupResponse { return *v }).(NetworkSecurityGroupResponseOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupResponsePtrOutput) DefaultSecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []SecurityRuleResponse {
		if v == nil {
			return nil
		}
		return v.DefaultSecurityRules
	}).(SecurityRuleResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// A collection of references to flow log resources.
func (o NetworkSecurityGroupResponsePtrOutput) FlowLogs() FlowLogResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []FlowLogResponse {
		if v == nil {
			return nil
		}
		return v.FlowLogs
	}).(FlowLogResponseArrayOutput)
}

// Resource ID.
func (o NetworkSecurityGroupResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkSecurityGroupResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A collection of references to network interfaces.
func (o NetworkSecurityGroupResponsePtrOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []NetworkInterfaceResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceResponseArrayOutput)
}

// The provisioning state of the network security group resource.
func (o NetworkSecurityGroupResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupResponsePtrOutput) SecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []SecurityRuleResponse {
		if v == nil {
			return nil
		}
		return v.SecurityRules
	}).(SecurityRuleResponseArrayOutput)
}

// A collection of references to subnets.
func (o NetworkSecurityGroupResponsePtrOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkSecurityGroupResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Office365 breakout categories.
type O365BreakOutCategoryPolicies struct {
	// Flag to control allow category.
	Allow *bool `pulumi:"allow"`
	// Flag to control default category.
	Default *bool `pulumi:"default"`
	// Flag to control optimize category.
	Optimize *bool `pulumi:"optimize"`
}

// O365BreakOutCategoryPoliciesInput is an input type that accepts O365BreakOutCategoryPoliciesArgs and O365BreakOutCategoryPoliciesOutput values.
// You can construct a concrete instance of `O365BreakOutCategoryPoliciesInput` via:
//
//          O365BreakOutCategoryPoliciesArgs{...}
type O365BreakOutCategoryPoliciesInput interface {
	pulumi.Input

	ToO365BreakOutCategoryPoliciesOutput() O365BreakOutCategoryPoliciesOutput
	ToO365BreakOutCategoryPoliciesOutputWithContext(context.Context) O365BreakOutCategoryPoliciesOutput
}

// Office365 breakout categories.
type O365BreakOutCategoryPoliciesArgs struct {
	// Flag to control allow category.
	Allow pulumi.BoolPtrInput `pulumi:"allow"`
	// Flag to control default category.
	Default pulumi.BoolPtrInput `pulumi:"default"`
	// Flag to control optimize category.
	Optimize pulumi.BoolPtrInput `pulumi:"optimize"`
}

func (O365BreakOutCategoryPoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*O365BreakOutCategoryPolicies)(nil)).Elem()
}

func (i O365BreakOutCategoryPoliciesArgs) ToO365BreakOutCategoryPoliciesOutput() O365BreakOutCategoryPoliciesOutput {
	return i.ToO365BreakOutCategoryPoliciesOutputWithContext(context.Background())
}

func (i O365BreakOutCategoryPoliciesArgs) ToO365BreakOutCategoryPoliciesOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(O365BreakOutCategoryPoliciesOutput)
}

func (i O365BreakOutCategoryPoliciesArgs) ToO365BreakOutCategoryPoliciesPtrOutput() O365BreakOutCategoryPoliciesPtrOutput {
	return i.ToO365BreakOutCategoryPoliciesPtrOutputWithContext(context.Background())
}

func (i O365BreakOutCategoryPoliciesArgs) ToO365BreakOutCategoryPoliciesPtrOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(O365BreakOutCategoryPoliciesOutput).ToO365BreakOutCategoryPoliciesPtrOutputWithContext(ctx)
}

// O365BreakOutCategoryPoliciesPtrInput is an input type that accepts O365BreakOutCategoryPoliciesArgs, O365BreakOutCategoryPoliciesPtr and O365BreakOutCategoryPoliciesPtrOutput values.
// You can construct a concrete instance of `O365BreakOutCategoryPoliciesPtrInput` via:
//
//          O365BreakOutCategoryPoliciesArgs{...}
//
//  or:
//
//          nil
type O365BreakOutCategoryPoliciesPtrInput interface {
	pulumi.Input

	ToO365BreakOutCategoryPoliciesPtrOutput() O365BreakOutCategoryPoliciesPtrOutput
	ToO365BreakOutCategoryPoliciesPtrOutputWithContext(context.Context) O365BreakOutCategoryPoliciesPtrOutput
}

type o365breakOutCategoryPoliciesPtrType O365BreakOutCategoryPoliciesArgs

func O365BreakOutCategoryPoliciesPtr(v *O365BreakOutCategoryPoliciesArgs) O365BreakOutCategoryPoliciesPtrInput {
	return (*o365breakOutCategoryPoliciesPtrType)(v)
}

func (*o365breakOutCategoryPoliciesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**O365BreakOutCategoryPolicies)(nil)).Elem()
}

func (i *o365breakOutCategoryPoliciesPtrType) ToO365BreakOutCategoryPoliciesPtrOutput() O365BreakOutCategoryPoliciesPtrOutput {
	return i.ToO365BreakOutCategoryPoliciesPtrOutputWithContext(context.Background())
}

func (i *o365breakOutCategoryPoliciesPtrType) ToO365BreakOutCategoryPoliciesPtrOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(O365BreakOutCategoryPoliciesPtrOutput)
}

// Office365 breakout categories.
type O365BreakOutCategoryPoliciesOutput struct{ *pulumi.OutputState }

func (O365BreakOutCategoryPoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*O365BreakOutCategoryPolicies)(nil)).Elem()
}

func (o O365BreakOutCategoryPoliciesOutput) ToO365BreakOutCategoryPoliciesOutput() O365BreakOutCategoryPoliciesOutput {
	return o
}

func (o O365BreakOutCategoryPoliciesOutput) ToO365BreakOutCategoryPoliciesOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesOutput {
	return o
}

func (o O365BreakOutCategoryPoliciesOutput) ToO365BreakOutCategoryPoliciesPtrOutput() O365BreakOutCategoryPoliciesPtrOutput {
	return o.ToO365BreakOutCategoryPoliciesPtrOutputWithContext(context.Background())
}

func (o O365BreakOutCategoryPoliciesOutput) ToO365BreakOutCategoryPoliciesPtrOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesPtrOutput {
	return o.ApplyT(func(v O365BreakOutCategoryPolicies) *O365BreakOutCategoryPolicies {
		return &v
	}).(O365BreakOutCategoryPoliciesPtrOutput)
}

// Flag to control allow category.
func (o O365BreakOutCategoryPoliciesOutput) Allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v O365BreakOutCategoryPolicies) *bool { return v.Allow }).(pulumi.BoolPtrOutput)
}

// Flag to control default category.
func (o O365BreakOutCategoryPoliciesOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v O365BreakOutCategoryPolicies) *bool { return v.Default }).(pulumi.BoolPtrOutput)
}

// Flag to control optimize category.
func (o O365BreakOutCategoryPoliciesOutput) Optimize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v O365BreakOutCategoryPolicies) *bool { return v.Optimize }).(pulumi.BoolPtrOutput)
}

type O365BreakOutCategoryPoliciesPtrOutput struct{ *pulumi.OutputState }

func (O365BreakOutCategoryPoliciesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**O365BreakOutCategoryPolicies)(nil)).Elem()
}

func (o O365BreakOutCategoryPoliciesPtrOutput) ToO365BreakOutCategoryPoliciesPtrOutput() O365BreakOutCategoryPoliciesPtrOutput {
	return o
}

func (o O365BreakOutCategoryPoliciesPtrOutput) ToO365BreakOutCategoryPoliciesPtrOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesPtrOutput {
	return o
}

func (o O365BreakOutCategoryPoliciesPtrOutput) Elem() O365BreakOutCategoryPoliciesOutput {
	return o.ApplyT(func(v *O365BreakOutCategoryPolicies) O365BreakOutCategoryPolicies { return *v }).(O365BreakOutCategoryPoliciesOutput)
}

// Flag to control allow category.
func (o O365BreakOutCategoryPoliciesPtrOutput) Allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *O365BreakOutCategoryPolicies) *bool {
		if v == nil {
			return nil
		}
		return v.Allow
	}).(pulumi.BoolPtrOutput)
}

// Flag to control default category.
func (o O365BreakOutCategoryPoliciesPtrOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *O365BreakOutCategoryPolicies) *bool {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.BoolPtrOutput)
}

// Flag to control optimize category.
func (o O365BreakOutCategoryPoliciesPtrOutput) Optimize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *O365BreakOutCategoryPolicies) *bool {
		if v == nil {
			return nil
		}
		return v.Optimize
	}).(pulumi.BoolPtrOutput)
}

// Office365 breakout categories.
type O365BreakOutCategoryPoliciesResponse struct {
	// Flag to control allow category.
	Allow *bool `pulumi:"allow"`
	// Flag to control default category.
	Default *bool `pulumi:"default"`
	// Flag to control optimize category.
	Optimize *bool `pulumi:"optimize"`
}

// O365BreakOutCategoryPoliciesResponseInput is an input type that accepts O365BreakOutCategoryPoliciesResponseArgs and O365BreakOutCategoryPoliciesResponseOutput values.
// You can construct a concrete instance of `O365BreakOutCategoryPoliciesResponseInput` via:
//
//          O365BreakOutCategoryPoliciesResponseArgs{...}
type O365BreakOutCategoryPoliciesResponseInput interface {
	pulumi.Input

	ToO365BreakOutCategoryPoliciesResponseOutput() O365BreakOutCategoryPoliciesResponseOutput
	ToO365BreakOutCategoryPoliciesResponseOutputWithContext(context.Context) O365BreakOutCategoryPoliciesResponseOutput
}

// Office365 breakout categories.
type O365BreakOutCategoryPoliciesResponseArgs struct {
	// Flag to control allow category.
	Allow pulumi.BoolPtrInput `pulumi:"allow"`
	// Flag to control default category.
	Default pulumi.BoolPtrInput `pulumi:"default"`
	// Flag to control optimize category.
	Optimize pulumi.BoolPtrInput `pulumi:"optimize"`
}

func (O365BreakOutCategoryPoliciesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*O365BreakOutCategoryPoliciesResponse)(nil)).Elem()
}

func (i O365BreakOutCategoryPoliciesResponseArgs) ToO365BreakOutCategoryPoliciesResponseOutput() O365BreakOutCategoryPoliciesResponseOutput {
	return i.ToO365BreakOutCategoryPoliciesResponseOutputWithContext(context.Background())
}

func (i O365BreakOutCategoryPoliciesResponseArgs) ToO365BreakOutCategoryPoliciesResponseOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(O365BreakOutCategoryPoliciesResponseOutput)
}

func (i O365BreakOutCategoryPoliciesResponseArgs) ToO365BreakOutCategoryPoliciesResponsePtrOutput() O365BreakOutCategoryPoliciesResponsePtrOutput {
	return i.ToO365BreakOutCategoryPoliciesResponsePtrOutputWithContext(context.Background())
}

func (i O365BreakOutCategoryPoliciesResponseArgs) ToO365BreakOutCategoryPoliciesResponsePtrOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(O365BreakOutCategoryPoliciesResponseOutput).ToO365BreakOutCategoryPoliciesResponsePtrOutputWithContext(ctx)
}

// O365BreakOutCategoryPoliciesResponsePtrInput is an input type that accepts O365BreakOutCategoryPoliciesResponseArgs, O365BreakOutCategoryPoliciesResponsePtr and O365BreakOutCategoryPoliciesResponsePtrOutput values.
// You can construct a concrete instance of `O365BreakOutCategoryPoliciesResponsePtrInput` via:
//
//          O365BreakOutCategoryPoliciesResponseArgs{...}
//
//  or:
//
//          nil
type O365BreakOutCategoryPoliciesResponsePtrInput interface {
	pulumi.Input

	ToO365BreakOutCategoryPoliciesResponsePtrOutput() O365BreakOutCategoryPoliciesResponsePtrOutput
	ToO365BreakOutCategoryPoliciesResponsePtrOutputWithContext(context.Context) O365BreakOutCategoryPoliciesResponsePtrOutput
}

type o365breakOutCategoryPoliciesResponsePtrType O365BreakOutCategoryPoliciesResponseArgs

func O365BreakOutCategoryPoliciesResponsePtr(v *O365BreakOutCategoryPoliciesResponseArgs) O365BreakOutCategoryPoliciesResponsePtrInput {
	return (*o365breakOutCategoryPoliciesResponsePtrType)(v)
}

func (*o365breakOutCategoryPoliciesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**O365BreakOutCategoryPoliciesResponse)(nil)).Elem()
}

func (i *o365breakOutCategoryPoliciesResponsePtrType) ToO365BreakOutCategoryPoliciesResponsePtrOutput() O365BreakOutCategoryPoliciesResponsePtrOutput {
	return i.ToO365BreakOutCategoryPoliciesResponsePtrOutputWithContext(context.Background())
}

func (i *o365breakOutCategoryPoliciesResponsePtrType) ToO365BreakOutCategoryPoliciesResponsePtrOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(O365BreakOutCategoryPoliciesResponsePtrOutput)
}

// Office365 breakout categories.
type O365BreakOutCategoryPoliciesResponseOutput struct{ *pulumi.OutputState }

func (O365BreakOutCategoryPoliciesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*O365BreakOutCategoryPoliciesResponse)(nil)).Elem()
}

func (o O365BreakOutCategoryPoliciesResponseOutput) ToO365BreakOutCategoryPoliciesResponseOutput() O365BreakOutCategoryPoliciesResponseOutput {
	return o
}

func (o O365BreakOutCategoryPoliciesResponseOutput) ToO365BreakOutCategoryPoliciesResponseOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesResponseOutput {
	return o
}

func (o O365BreakOutCategoryPoliciesResponseOutput) ToO365BreakOutCategoryPoliciesResponsePtrOutput() O365BreakOutCategoryPoliciesResponsePtrOutput {
	return o.ToO365BreakOutCategoryPoliciesResponsePtrOutputWithContext(context.Background())
}

func (o O365BreakOutCategoryPoliciesResponseOutput) ToO365BreakOutCategoryPoliciesResponsePtrOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesResponsePtrOutput {
	return o.ApplyT(func(v O365BreakOutCategoryPoliciesResponse) *O365BreakOutCategoryPoliciesResponse {
		return &v
	}).(O365BreakOutCategoryPoliciesResponsePtrOutput)
}

// Flag to control allow category.
func (o O365BreakOutCategoryPoliciesResponseOutput) Allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v O365BreakOutCategoryPoliciesResponse) *bool { return v.Allow }).(pulumi.BoolPtrOutput)
}

// Flag to control default category.
func (o O365BreakOutCategoryPoliciesResponseOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v O365BreakOutCategoryPoliciesResponse) *bool { return v.Default }).(pulumi.BoolPtrOutput)
}

// Flag to control optimize category.
func (o O365BreakOutCategoryPoliciesResponseOutput) Optimize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v O365BreakOutCategoryPoliciesResponse) *bool { return v.Optimize }).(pulumi.BoolPtrOutput)
}

type O365BreakOutCategoryPoliciesResponsePtrOutput struct{ *pulumi.OutputState }

func (O365BreakOutCategoryPoliciesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**O365BreakOutCategoryPoliciesResponse)(nil)).Elem()
}

func (o O365BreakOutCategoryPoliciesResponsePtrOutput) ToO365BreakOutCategoryPoliciesResponsePtrOutput() O365BreakOutCategoryPoliciesResponsePtrOutput {
	return o
}

func (o O365BreakOutCategoryPoliciesResponsePtrOutput) ToO365BreakOutCategoryPoliciesResponsePtrOutputWithContext(ctx context.Context) O365BreakOutCategoryPoliciesResponsePtrOutput {
	return o
}

func (o O365BreakOutCategoryPoliciesResponsePtrOutput) Elem() O365BreakOutCategoryPoliciesResponseOutput {
	return o.ApplyT(func(v *O365BreakOutCategoryPoliciesResponse) O365BreakOutCategoryPoliciesResponse { return *v }).(O365BreakOutCategoryPoliciesResponseOutput)
}

// Flag to control allow category.
func (o O365BreakOutCategoryPoliciesResponsePtrOutput) Allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *O365BreakOutCategoryPoliciesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Allow
	}).(pulumi.BoolPtrOutput)
}

// Flag to control default category.
func (o O365BreakOutCategoryPoliciesResponsePtrOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *O365BreakOutCategoryPoliciesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.BoolPtrOutput)
}

// Flag to control optimize category.
func (o O365BreakOutCategoryPoliciesResponsePtrOutput) Optimize() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *O365BreakOutCategoryPoliciesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Optimize
	}).(pulumi.BoolPtrOutput)
}

// The Office365 breakout policy.
type O365PolicyProperties struct {
	// Office365 breakout categories.
	BreakOutCategories *O365BreakOutCategoryPolicies `pulumi:"breakOutCategories"`
}

// O365PolicyPropertiesInput is an input type that accepts O365PolicyPropertiesArgs and O365PolicyPropertiesOutput values.
// You can construct a concrete instance of `O365PolicyPropertiesInput` via:
//
//          O365PolicyPropertiesArgs{...}
type O365PolicyPropertiesInput interface {
	pulumi.Input

	ToO365PolicyPropertiesOutput() O365PolicyPropertiesOutput
	ToO365PolicyPropertiesOutputWithContext(context.Context) O365PolicyPropertiesOutput
}

// The Office365 breakout policy.
type O365PolicyPropertiesArgs struct {
	// Office365 breakout categories.
	BreakOutCategories O365BreakOutCategoryPoliciesPtrInput `pulumi:"breakOutCategories"`
}

func (O365PolicyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*O365PolicyProperties)(nil)).Elem()
}

func (i O365PolicyPropertiesArgs) ToO365PolicyPropertiesOutput() O365PolicyPropertiesOutput {
	return i.ToO365PolicyPropertiesOutputWithContext(context.Background())
}

func (i O365PolicyPropertiesArgs) ToO365PolicyPropertiesOutputWithContext(ctx context.Context) O365PolicyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(O365PolicyPropertiesOutput)
}

func (i O365PolicyPropertiesArgs) ToO365PolicyPropertiesPtrOutput() O365PolicyPropertiesPtrOutput {
	return i.ToO365PolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i O365PolicyPropertiesArgs) ToO365PolicyPropertiesPtrOutputWithContext(ctx context.Context) O365PolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(O365PolicyPropertiesOutput).ToO365PolicyPropertiesPtrOutputWithContext(ctx)
}

// O365PolicyPropertiesPtrInput is an input type that accepts O365PolicyPropertiesArgs, O365PolicyPropertiesPtr and O365PolicyPropertiesPtrOutput values.
// You can construct a concrete instance of `O365PolicyPropertiesPtrInput` via:
//
//          O365PolicyPropertiesArgs{...}
//
//  or:
//
//          nil
type O365PolicyPropertiesPtrInput interface {
	pulumi.Input

	ToO365PolicyPropertiesPtrOutput() O365PolicyPropertiesPtrOutput
	ToO365PolicyPropertiesPtrOutputWithContext(context.Context) O365PolicyPropertiesPtrOutput
}

type o365policyPropertiesPtrType O365PolicyPropertiesArgs

func O365PolicyPropertiesPtr(v *O365PolicyPropertiesArgs) O365PolicyPropertiesPtrInput {
	return (*o365policyPropertiesPtrType)(v)
}

func (*o365policyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**O365PolicyProperties)(nil)).Elem()
}

func (i *o365policyPropertiesPtrType) ToO365PolicyPropertiesPtrOutput() O365PolicyPropertiesPtrOutput {
	return i.ToO365PolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i *o365policyPropertiesPtrType) ToO365PolicyPropertiesPtrOutputWithContext(ctx context.Context) O365PolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(O365PolicyPropertiesPtrOutput)
}

// The Office365 breakout policy.
type O365PolicyPropertiesOutput struct{ *pulumi.OutputState }

func (O365PolicyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*O365PolicyProperties)(nil)).Elem()
}

func (o O365PolicyPropertiesOutput) ToO365PolicyPropertiesOutput() O365PolicyPropertiesOutput {
	return o
}

func (o O365PolicyPropertiesOutput) ToO365PolicyPropertiesOutputWithContext(ctx context.Context) O365PolicyPropertiesOutput {
	return o
}

func (o O365PolicyPropertiesOutput) ToO365PolicyPropertiesPtrOutput() O365PolicyPropertiesPtrOutput {
	return o.ToO365PolicyPropertiesPtrOutputWithContext(context.Background())
}

func (o O365PolicyPropertiesOutput) ToO365PolicyPropertiesPtrOutputWithContext(ctx context.Context) O365PolicyPropertiesPtrOutput {
	return o.ApplyT(func(v O365PolicyProperties) *O365PolicyProperties {
		return &v
	}).(O365PolicyPropertiesPtrOutput)
}

// Office365 breakout categories.
func (o O365PolicyPropertiesOutput) BreakOutCategories() O365BreakOutCategoryPoliciesPtrOutput {
	return o.ApplyT(func(v O365PolicyProperties) *O365BreakOutCategoryPolicies { return v.BreakOutCategories }).(O365BreakOutCategoryPoliciesPtrOutput)
}

type O365PolicyPropertiesPtrOutput struct{ *pulumi.OutputState }

func (O365PolicyPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**O365PolicyProperties)(nil)).Elem()
}

func (o O365PolicyPropertiesPtrOutput) ToO365PolicyPropertiesPtrOutput() O365PolicyPropertiesPtrOutput {
	return o
}

func (o O365PolicyPropertiesPtrOutput) ToO365PolicyPropertiesPtrOutputWithContext(ctx context.Context) O365PolicyPropertiesPtrOutput {
	return o
}

func (o O365PolicyPropertiesPtrOutput) Elem() O365PolicyPropertiesOutput {
	return o.ApplyT(func(v *O365PolicyProperties) O365PolicyProperties { return *v }).(O365PolicyPropertiesOutput)
}

// Office365 breakout categories.
func (o O365PolicyPropertiesPtrOutput) BreakOutCategories() O365BreakOutCategoryPoliciesPtrOutput {
	return o.ApplyT(func(v *O365PolicyProperties) *O365BreakOutCategoryPolicies {
		if v == nil {
			return nil
		}
		return v.BreakOutCategories
	}).(O365BreakOutCategoryPoliciesPtrOutput)
}

// The Office365 breakout policy.
type O365PolicyPropertiesResponse struct {
	// Office365 breakout categories.
	BreakOutCategories *O365BreakOutCategoryPoliciesResponse `pulumi:"breakOutCategories"`
}

// O365PolicyPropertiesResponseInput is an input type that accepts O365PolicyPropertiesResponseArgs and O365PolicyPropertiesResponseOutput values.
// You can construct a concrete instance of `O365PolicyPropertiesResponseInput` via:
//
//          O365PolicyPropertiesResponseArgs{...}
type O365PolicyPropertiesResponseInput interface {
	pulumi.Input

	ToO365PolicyPropertiesResponseOutput() O365PolicyPropertiesResponseOutput
	ToO365PolicyPropertiesResponseOutputWithContext(context.Context) O365PolicyPropertiesResponseOutput
}

// The Office365 breakout policy.
type O365PolicyPropertiesResponseArgs struct {
	// Office365 breakout categories.
	BreakOutCategories O365BreakOutCategoryPoliciesResponsePtrInput `pulumi:"breakOutCategories"`
}

func (O365PolicyPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*O365PolicyPropertiesResponse)(nil)).Elem()
}

func (i O365PolicyPropertiesResponseArgs) ToO365PolicyPropertiesResponseOutput() O365PolicyPropertiesResponseOutput {
	return i.ToO365PolicyPropertiesResponseOutputWithContext(context.Background())
}

func (i O365PolicyPropertiesResponseArgs) ToO365PolicyPropertiesResponseOutputWithContext(ctx context.Context) O365PolicyPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(O365PolicyPropertiesResponseOutput)
}

func (i O365PolicyPropertiesResponseArgs) ToO365PolicyPropertiesResponsePtrOutput() O365PolicyPropertiesResponsePtrOutput {
	return i.ToO365PolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i O365PolicyPropertiesResponseArgs) ToO365PolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) O365PolicyPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(O365PolicyPropertiesResponseOutput).ToO365PolicyPropertiesResponsePtrOutputWithContext(ctx)
}

// O365PolicyPropertiesResponsePtrInput is an input type that accepts O365PolicyPropertiesResponseArgs, O365PolicyPropertiesResponsePtr and O365PolicyPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `O365PolicyPropertiesResponsePtrInput` via:
//
//          O365PolicyPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type O365PolicyPropertiesResponsePtrInput interface {
	pulumi.Input

	ToO365PolicyPropertiesResponsePtrOutput() O365PolicyPropertiesResponsePtrOutput
	ToO365PolicyPropertiesResponsePtrOutputWithContext(context.Context) O365PolicyPropertiesResponsePtrOutput
}

type o365policyPropertiesResponsePtrType O365PolicyPropertiesResponseArgs

func O365PolicyPropertiesResponsePtr(v *O365PolicyPropertiesResponseArgs) O365PolicyPropertiesResponsePtrInput {
	return (*o365policyPropertiesResponsePtrType)(v)
}

func (*o365policyPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**O365PolicyPropertiesResponse)(nil)).Elem()
}

func (i *o365policyPropertiesResponsePtrType) ToO365PolicyPropertiesResponsePtrOutput() O365PolicyPropertiesResponsePtrOutput {
	return i.ToO365PolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *o365policyPropertiesResponsePtrType) ToO365PolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) O365PolicyPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(O365PolicyPropertiesResponsePtrOutput)
}

// The Office365 breakout policy.
type O365PolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (O365PolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*O365PolicyPropertiesResponse)(nil)).Elem()
}

func (o O365PolicyPropertiesResponseOutput) ToO365PolicyPropertiesResponseOutput() O365PolicyPropertiesResponseOutput {
	return o
}

func (o O365PolicyPropertiesResponseOutput) ToO365PolicyPropertiesResponseOutputWithContext(ctx context.Context) O365PolicyPropertiesResponseOutput {
	return o
}

func (o O365PolicyPropertiesResponseOutput) ToO365PolicyPropertiesResponsePtrOutput() O365PolicyPropertiesResponsePtrOutput {
	return o.ToO365PolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o O365PolicyPropertiesResponseOutput) ToO365PolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) O365PolicyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v O365PolicyPropertiesResponse) *O365PolicyPropertiesResponse {
		return &v
	}).(O365PolicyPropertiesResponsePtrOutput)
}

// Office365 breakout categories.
func (o O365PolicyPropertiesResponseOutput) BreakOutCategories() O365BreakOutCategoryPoliciesResponsePtrOutput {
	return o.ApplyT(func(v O365PolicyPropertiesResponse) *O365BreakOutCategoryPoliciesResponse {
		return v.BreakOutCategories
	}).(O365BreakOutCategoryPoliciesResponsePtrOutput)
}

type O365PolicyPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (O365PolicyPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**O365PolicyPropertiesResponse)(nil)).Elem()
}

func (o O365PolicyPropertiesResponsePtrOutput) ToO365PolicyPropertiesResponsePtrOutput() O365PolicyPropertiesResponsePtrOutput {
	return o
}

func (o O365PolicyPropertiesResponsePtrOutput) ToO365PolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) O365PolicyPropertiesResponsePtrOutput {
	return o
}

func (o O365PolicyPropertiesResponsePtrOutput) Elem() O365PolicyPropertiesResponseOutput {
	return o.ApplyT(func(v *O365PolicyPropertiesResponse) O365PolicyPropertiesResponse { return *v }).(O365PolicyPropertiesResponseOutput)
}

// Office365 breakout categories.
func (o O365PolicyPropertiesResponsePtrOutput) BreakOutCategories() O365BreakOutCategoryPoliciesResponsePtrOutput {
	return o.ApplyT(func(v *O365PolicyPropertiesResponse) *O365BreakOutCategoryPoliciesResponse {
		if v == nil {
			return nil
		}
		return v.BreakOutCategories
	}).(O365BreakOutCategoryPoliciesResponsePtrOutput)
}

// Network Virtual Appliance Sku Properties.
type Office365PolicyProperties struct {
	// Office 365 breakout categories.
	BreakOutCategories *BreakOutCategoryPolicies `pulumi:"breakOutCategories"`
}

// Office365PolicyPropertiesInput is an input type that accepts Office365PolicyPropertiesArgs and Office365PolicyPropertiesOutput values.
// You can construct a concrete instance of `Office365PolicyPropertiesInput` via:
//
//          Office365PolicyPropertiesArgs{...}
type Office365PolicyPropertiesInput interface {
	pulumi.Input

	ToOffice365PolicyPropertiesOutput() Office365PolicyPropertiesOutput
	ToOffice365PolicyPropertiesOutputWithContext(context.Context) Office365PolicyPropertiesOutput
}

// Network Virtual Appliance Sku Properties.
type Office365PolicyPropertiesArgs struct {
	// Office 365 breakout categories.
	BreakOutCategories BreakOutCategoryPoliciesPtrInput `pulumi:"breakOutCategories"`
}

func (Office365PolicyPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Office365PolicyProperties)(nil)).Elem()
}

func (i Office365PolicyPropertiesArgs) ToOffice365PolicyPropertiesOutput() Office365PolicyPropertiesOutput {
	return i.ToOffice365PolicyPropertiesOutputWithContext(context.Background())
}

func (i Office365PolicyPropertiesArgs) ToOffice365PolicyPropertiesOutputWithContext(ctx context.Context) Office365PolicyPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Office365PolicyPropertiesOutput)
}

func (i Office365PolicyPropertiesArgs) ToOffice365PolicyPropertiesPtrOutput() Office365PolicyPropertiesPtrOutput {
	return i.ToOffice365PolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i Office365PolicyPropertiesArgs) ToOffice365PolicyPropertiesPtrOutputWithContext(ctx context.Context) Office365PolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Office365PolicyPropertiesOutput).ToOffice365PolicyPropertiesPtrOutputWithContext(ctx)
}

// Office365PolicyPropertiesPtrInput is an input type that accepts Office365PolicyPropertiesArgs, Office365PolicyPropertiesPtr and Office365PolicyPropertiesPtrOutput values.
// You can construct a concrete instance of `Office365PolicyPropertiesPtrInput` via:
//
//          Office365PolicyPropertiesArgs{...}
//
//  or:
//
//          nil
type Office365PolicyPropertiesPtrInput interface {
	pulumi.Input

	ToOffice365PolicyPropertiesPtrOutput() Office365PolicyPropertiesPtrOutput
	ToOffice365PolicyPropertiesPtrOutputWithContext(context.Context) Office365PolicyPropertiesPtrOutput
}

type office365PolicyPropertiesPtrType Office365PolicyPropertiesArgs

func Office365PolicyPropertiesPtr(v *Office365PolicyPropertiesArgs) Office365PolicyPropertiesPtrInput {
	return (*office365PolicyPropertiesPtrType)(v)
}

func (*office365PolicyPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Office365PolicyProperties)(nil)).Elem()
}

func (i *office365PolicyPropertiesPtrType) ToOffice365PolicyPropertiesPtrOutput() Office365PolicyPropertiesPtrOutput {
	return i.ToOffice365PolicyPropertiesPtrOutputWithContext(context.Background())
}

func (i *office365PolicyPropertiesPtrType) ToOffice365PolicyPropertiesPtrOutputWithContext(ctx context.Context) Office365PolicyPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Office365PolicyPropertiesPtrOutput)
}

// Network Virtual Appliance Sku Properties.
type Office365PolicyPropertiesOutput struct{ *pulumi.OutputState }

func (Office365PolicyPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Office365PolicyProperties)(nil)).Elem()
}

func (o Office365PolicyPropertiesOutput) ToOffice365PolicyPropertiesOutput() Office365PolicyPropertiesOutput {
	return o
}

func (o Office365PolicyPropertiesOutput) ToOffice365PolicyPropertiesOutputWithContext(ctx context.Context) Office365PolicyPropertiesOutput {
	return o
}

func (o Office365PolicyPropertiesOutput) ToOffice365PolicyPropertiesPtrOutput() Office365PolicyPropertiesPtrOutput {
	return o.ToOffice365PolicyPropertiesPtrOutputWithContext(context.Background())
}

func (o Office365PolicyPropertiesOutput) ToOffice365PolicyPropertiesPtrOutputWithContext(ctx context.Context) Office365PolicyPropertiesPtrOutput {
	return o.ApplyT(func(v Office365PolicyProperties) *Office365PolicyProperties {
		return &v
	}).(Office365PolicyPropertiesPtrOutput)
}

// Office 365 breakout categories.
func (o Office365PolicyPropertiesOutput) BreakOutCategories() BreakOutCategoryPoliciesPtrOutput {
	return o.ApplyT(func(v Office365PolicyProperties) *BreakOutCategoryPolicies { return v.BreakOutCategories }).(BreakOutCategoryPoliciesPtrOutput)
}

type Office365PolicyPropertiesPtrOutput struct{ *pulumi.OutputState }

func (Office365PolicyPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Office365PolicyProperties)(nil)).Elem()
}

func (o Office365PolicyPropertiesPtrOutput) ToOffice365PolicyPropertiesPtrOutput() Office365PolicyPropertiesPtrOutput {
	return o
}

func (o Office365PolicyPropertiesPtrOutput) ToOffice365PolicyPropertiesPtrOutputWithContext(ctx context.Context) Office365PolicyPropertiesPtrOutput {
	return o
}

func (o Office365PolicyPropertiesPtrOutput) Elem() Office365PolicyPropertiesOutput {
	return o.ApplyT(func(v *Office365PolicyProperties) Office365PolicyProperties { return *v }).(Office365PolicyPropertiesOutput)
}

// Office 365 breakout categories.
func (o Office365PolicyPropertiesPtrOutput) BreakOutCategories() BreakOutCategoryPoliciesPtrOutput {
	return o.ApplyT(func(v *Office365PolicyProperties) *BreakOutCategoryPolicies {
		if v == nil {
			return nil
		}
		return v.BreakOutCategories
	}).(BreakOutCategoryPoliciesPtrOutput)
}

// Network Virtual Appliance Sku Properties.
type Office365PolicyPropertiesResponse struct {
	// Office 365 breakout categories.
	BreakOutCategories *BreakOutCategoryPoliciesResponse `pulumi:"breakOutCategories"`
}

// Office365PolicyPropertiesResponseInput is an input type that accepts Office365PolicyPropertiesResponseArgs and Office365PolicyPropertiesResponseOutput values.
// You can construct a concrete instance of `Office365PolicyPropertiesResponseInput` via:
//
//          Office365PolicyPropertiesResponseArgs{...}
type Office365PolicyPropertiesResponseInput interface {
	pulumi.Input

	ToOffice365PolicyPropertiesResponseOutput() Office365PolicyPropertiesResponseOutput
	ToOffice365PolicyPropertiesResponseOutputWithContext(context.Context) Office365PolicyPropertiesResponseOutput
}

// Network Virtual Appliance Sku Properties.
type Office365PolicyPropertiesResponseArgs struct {
	// Office 365 breakout categories.
	BreakOutCategories BreakOutCategoryPoliciesResponsePtrInput `pulumi:"breakOutCategories"`
}

func (Office365PolicyPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Office365PolicyPropertiesResponse)(nil)).Elem()
}

func (i Office365PolicyPropertiesResponseArgs) ToOffice365PolicyPropertiesResponseOutput() Office365PolicyPropertiesResponseOutput {
	return i.ToOffice365PolicyPropertiesResponseOutputWithContext(context.Background())
}

func (i Office365PolicyPropertiesResponseArgs) ToOffice365PolicyPropertiesResponseOutputWithContext(ctx context.Context) Office365PolicyPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Office365PolicyPropertiesResponseOutput)
}

func (i Office365PolicyPropertiesResponseArgs) ToOffice365PolicyPropertiesResponsePtrOutput() Office365PolicyPropertiesResponsePtrOutput {
	return i.ToOffice365PolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i Office365PolicyPropertiesResponseArgs) ToOffice365PolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) Office365PolicyPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Office365PolicyPropertiesResponseOutput).ToOffice365PolicyPropertiesResponsePtrOutputWithContext(ctx)
}

// Office365PolicyPropertiesResponsePtrInput is an input type that accepts Office365PolicyPropertiesResponseArgs, Office365PolicyPropertiesResponsePtr and Office365PolicyPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `Office365PolicyPropertiesResponsePtrInput` via:
//
//          Office365PolicyPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type Office365PolicyPropertiesResponsePtrInput interface {
	pulumi.Input

	ToOffice365PolicyPropertiesResponsePtrOutput() Office365PolicyPropertiesResponsePtrOutput
	ToOffice365PolicyPropertiesResponsePtrOutputWithContext(context.Context) Office365PolicyPropertiesResponsePtrOutput
}

type office365PolicyPropertiesResponsePtrType Office365PolicyPropertiesResponseArgs

func Office365PolicyPropertiesResponsePtr(v *Office365PolicyPropertiesResponseArgs) Office365PolicyPropertiesResponsePtrInput {
	return (*office365PolicyPropertiesResponsePtrType)(v)
}

func (*office365PolicyPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Office365PolicyPropertiesResponse)(nil)).Elem()
}

func (i *office365PolicyPropertiesResponsePtrType) ToOffice365PolicyPropertiesResponsePtrOutput() Office365PolicyPropertiesResponsePtrOutput {
	return i.ToOffice365PolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *office365PolicyPropertiesResponsePtrType) ToOffice365PolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) Office365PolicyPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Office365PolicyPropertiesResponsePtrOutput)
}

// Network Virtual Appliance Sku Properties.
type Office365PolicyPropertiesResponseOutput struct{ *pulumi.OutputState }

func (Office365PolicyPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Office365PolicyPropertiesResponse)(nil)).Elem()
}

func (o Office365PolicyPropertiesResponseOutput) ToOffice365PolicyPropertiesResponseOutput() Office365PolicyPropertiesResponseOutput {
	return o
}

func (o Office365PolicyPropertiesResponseOutput) ToOffice365PolicyPropertiesResponseOutputWithContext(ctx context.Context) Office365PolicyPropertiesResponseOutput {
	return o
}

func (o Office365PolicyPropertiesResponseOutput) ToOffice365PolicyPropertiesResponsePtrOutput() Office365PolicyPropertiesResponsePtrOutput {
	return o.ToOffice365PolicyPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o Office365PolicyPropertiesResponseOutput) ToOffice365PolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) Office365PolicyPropertiesResponsePtrOutput {
	return o.ApplyT(func(v Office365PolicyPropertiesResponse) *Office365PolicyPropertiesResponse {
		return &v
	}).(Office365PolicyPropertiesResponsePtrOutput)
}

// Office 365 breakout categories.
func (o Office365PolicyPropertiesResponseOutput) BreakOutCategories() BreakOutCategoryPoliciesResponsePtrOutput {
	return o.ApplyT(func(v Office365PolicyPropertiesResponse) *BreakOutCategoryPoliciesResponse {
		return v.BreakOutCategories
	}).(BreakOutCategoryPoliciesResponsePtrOutput)
}

type Office365PolicyPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (Office365PolicyPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Office365PolicyPropertiesResponse)(nil)).Elem()
}

func (o Office365PolicyPropertiesResponsePtrOutput) ToOffice365PolicyPropertiesResponsePtrOutput() Office365PolicyPropertiesResponsePtrOutput {
	return o
}

func (o Office365PolicyPropertiesResponsePtrOutput) ToOffice365PolicyPropertiesResponsePtrOutputWithContext(ctx context.Context) Office365PolicyPropertiesResponsePtrOutput {
	return o
}

func (o Office365PolicyPropertiesResponsePtrOutput) Elem() Office365PolicyPropertiesResponseOutput {
	return o.ApplyT(func(v *Office365PolicyPropertiesResponse) Office365PolicyPropertiesResponse { return *v }).(Office365PolicyPropertiesResponseOutput)
}

// Office 365 breakout categories.
func (o Office365PolicyPropertiesResponsePtrOutput) BreakOutCategories() BreakOutCategoryPoliciesResponsePtrOutput {
	return o.ApplyT(func(v *Office365PolicyPropertiesResponse) *BreakOutCategoryPoliciesResponse {
		if v == nil {
			return nil
		}
		return v.BreakOutCategories
	}).(BreakOutCategoryPoliciesResponsePtrOutput)
}

// Outbound rule of the load balancer.
type OutboundRule struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts *int `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResource `pulumi:"backendAddressPool"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations []SubResource `pulumi:"frontendIPConfigurations"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The protocol for the outbound rule in load balancer.
	Protocol string `pulumi:"protocol"`
}

// OutboundRuleInput is an input type that accepts OutboundRuleArgs and OutboundRuleOutput values.
// You can construct a concrete instance of `OutboundRuleInput` via:
//
//          OutboundRuleArgs{...}
type OutboundRuleInput interface {
	pulumi.Input

	ToOutboundRuleOutput() OutboundRuleOutput
	ToOutboundRuleOutputWithContext(context.Context) OutboundRuleOutput
}

// Outbound rule of the load balancer.
type OutboundRuleArgs struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts pulumi.IntPtrInput `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceInput `pulumi:"backendAddressPool"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations SubResourceArrayInput `pulumi:"frontendIPConfigurations"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The protocol for the outbound rule in load balancer.
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (OutboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundRule)(nil)).Elem()
}

func (i OutboundRuleArgs) ToOutboundRuleOutput() OutboundRuleOutput {
	return i.ToOutboundRuleOutputWithContext(context.Background())
}

func (i OutboundRuleArgs) ToOutboundRuleOutputWithContext(ctx context.Context) OutboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRuleOutput)
}

// OutboundRuleArrayInput is an input type that accepts OutboundRuleArray and OutboundRuleArrayOutput values.
// You can construct a concrete instance of `OutboundRuleArrayInput` via:
//
//          OutboundRuleArray{ OutboundRuleArgs{...} }
type OutboundRuleArrayInput interface {
	pulumi.Input

	ToOutboundRuleArrayOutput() OutboundRuleArrayOutput
	ToOutboundRuleArrayOutputWithContext(context.Context) OutboundRuleArrayOutput
}

type OutboundRuleArray []OutboundRuleInput

func (OutboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundRule)(nil)).Elem()
}

func (i OutboundRuleArray) ToOutboundRuleArrayOutput() OutboundRuleArrayOutput {
	return i.ToOutboundRuleArrayOutputWithContext(context.Background())
}

func (i OutboundRuleArray) ToOutboundRuleArrayOutputWithContext(ctx context.Context) OutboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRuleArrayOutput)
}

// Outbound rule of the load balancer.
type OutboundRuleOutput struct{ *pulumi.OutputState }

func (OutboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundRule)(nil)).Elem()
}

func (o OutboundRuleOutput) ToOutboundRuleOutput() OutboundRuleOutput {
	return o
}

func (o OutboundRuleOutput) ToOutboundRuleOutputWithContext(ctx context.Context) OutboundRuleOutput {
	return o
}

// The number of outbound ports to be used for NAT.
func (o OutboundRuleOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OutboundRule) *int { return v.AllocatedOutboundPorts }).(pulumi.IntPtrOutput)
}

// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
func (o OutboundRuleOutput) BackendAddressPool() SubResourceOutput {
	return o.ApplyT(func(v OutboundRule) SubResource { return v.BackendAddressPool }).(SubResourceOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o OutboundRuleOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OutboundRule) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// The Frontend IP addresses of the load balancer.
func (o OutboundRuleOutput) FrontendIPConfigurations() SubResourceArrayOutput {
	return o.ApplyT(func(v OutboundRule) []SubResource { return v.FrontendIPConfigurations }).(SubResourceArrayOutput)
}

// Resource ID.
func (o OutboundRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection.
func (o OutboundRuleOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OutboundRule) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.
func (o OutboundRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The protocol for the outbound rule in load balancer.
func (o OutboundRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v OutboundRule) string { return v.Protocol }).(pulumi.StringOutput)
}

type OutboundRuleArrayOutput struct{ *pulumi.OutputState }

func (OutboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundRule)(nil)).Elem()
}

func (o OutboundRuleArrayOutput) ToOutboundRuleArrayOutput() OutboundRuleArrayOutput {
	return o
}

func (o OutboundRuleArrayOutput) ToOutboundRuleArrayOutputWithContext(ctx context.Context) OutboundRuleArrayOutput {
	return o
}

func (o OutboundRuleArrayOutput) Index(i pulumi.IntInput) OutboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OutboundRule {
		return vs[0].([]OutboundRule)[vs[1].(int)]
	}).(OutboundRuleOutput)
}

// Outbound rule of the load balancer.
type OutboundRuleResponse struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts *int `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceResponse `pulumi:"backendAddressPool"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset *bool `pulumi:"enableTcpReset"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations []SubResourceResponse `pulumi:"frontendIPConfigurations"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The protocol for the outbound rule in load balancer.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the outbound rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// OutboundRuleResponseInput is an input type that accepts OutboundRuleResponseArgs and OutboundRuleResponseOutput values.
// You can construct a concrete instance of `OutboundRuleResponseInput` via:
//
//          OutboundRuleResponseArgs{...}
type OutboundRuleResponseInput interface {
	pulumi.Input

	ToOutboundRuleResponseOutput() OutboundRuleResponseOutput
	ToOutboundRuleResponseOutputWithContext(context.Context) OutboundRuleResponseOutput
}

// Outbound rule of the load balancer.
type OutboundRuleResponseArgs struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts pulumi.IntPtrInput `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceResponseInput `pulumi:"backendAddressPool"`
	// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
	EnableTcpReset pulumi.BoolPtrInput `pulumi:"enableTcpReset"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations SubResourceResponseArrayInput `pulumi:"frontendIPConfigurations"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The protocol for the outbound rule in load balancer.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The provisioning state of the outbound rule resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (OutboundRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundRuleResponse)(nil)).Elem()
}

func (i OutboundRuleResponseArgs) ToOutboundRuleResponseOutput() OutboundRuleResponseOutput {
	return i.ToOutboundRuleResponseOutputWithContext(context.Background())
}

func (i OutboundRuleResponseArgs) ToOutboundRuleResponseOutputWithContext(ctx context.Context) OutboundRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRuleResponseOutput)
}

// OutboundRuleResponseArrayInput is an input type that accepts OutboundRuleResponseArray and OutboundRuleResponseArrayOutput values.
// You can construct a concrete instance of `OutboundRuleResponseArrayInput` via:
//
//          OutboundRuleResponseArray{ OutboundRuleResponseArgs{...} }
type OutboundRuleResponseArrayInput interface {
	pulumi.Input

	ToOutboundRuleResponseArrayOutput() OutboundRuleResponseArrayOutput
	ToOutboundRuleResponseArrayOutputWithContext(context.Context) OutboundRuleResponseArrayOutput
}

type OutboundRuleResponseArray []OutboundRuleResponseInput

func (OutboundRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundRuleResponse)(nil)).Elem()
}

func (i OutboundRuleResponseArray) ToOutboundRuleResponseArrayOutput() OutboundRuleResponseArrayOutput {
	return i.ToOutboundRuleResponseArrayOutputWithContext(context.Background())
}

func (i OutboundRuleResponseArray) ToOutboundRuleResponseArrayOutputWithContext(ctx context.Context) OutboundRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundRuleResponseArrayOutput)
}

// Outbound rule of the load balancer.
type OutboundRuleResponseOutput struct{ *pulumi.OutputState }

func (OutboundRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundRuleResponse)(nil)).Elem()
}

func (o OutboundRuleResponseOutput) ToOutboundRuleResponseOutput() OutboundRuleResponseOutput {
	return o
}

func (o OutboundRuleResponseOutput) ToOutboundRuleResponseOutputWithContext(ctx context.Context) OutboundRuleResponseOutput {
	return o
}

// The number of outbound ports to be used for NAT.
func (o OutboundRuleResponseOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OutboundRuleResponse) *int { return v.AllocatedOutboundPorts }).(pulumi.IntPtrOutput)
}

// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
func (o OutboundRuleResponseOutput) BackendAddressPool() SubResourceResponseOutput {
	return o.ApplyT(func(v OutboundRuleResponse) SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponseOutput)
}

// Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
func (o OutboundRuleResponseOutput) EnableTcpReset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OutboundRuleResponse) *bool { return v.EnableTcpReset }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o OutboundRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v OutboundRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The Frontend IP addresses of the load balancer.
func (o OutboundRuleResponseOutput) FrontendIPConfigurations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v OutboundRuleResponse) []SubResourceResponse { return v.FrontendIPConfigurations }).(SubResourceResponseArrayOutput)
}

// Resource ID.
func (o OutboundRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection.
func (o OutboundRuleResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OutboundRuleResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can be used to access the resource.
func (o OutboundRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The protocol for the outbound rule in load balancer.
func (o OutboundRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v OutboundRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the outbound rule resource.
func (o OutboundRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v OutboundRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o OutboundRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OutboundRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

type OutboundRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (OutboundRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundRuleResponse)(nil)).Elem()
}

func (o OutboundRuleResponseArrayOutput) ToOutboundRuleResponseArrayOutput() OutboundRuleResponseArrayOutput {
	return o
}

func (o OutboundRuleResponseArrayOutput) ToOutboundRuleResponseArrayOutputWithContext(ctx context.Context) OutboundRuleResponseArrayOutput {
	return o
}

func (o OutboundRuleResponseArrayOutput) Index(i pulumi.IntInput) OutboundRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OutboundRuleResponse {
		return vs[0].([]OutboundRuleResponse)[vs[1].(int)]
	}).(OutboundRuleResponseOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type OwaspCrsExclusionEntry struct {
	// The variable to be excluded.
	MatchVariable string `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
	Selector string `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
}

// OwaspCrsExclusionEntryInput is an input type that accepts OwaspCrsExclusionEntryArgs and OwaspCrsExclusionEntryOutput values.
// You can construct a concrete instance of `OwaspCrsExclusionEntryInput` via:
//
//          OwaspCrsExclusionEntryArgs{...}
type OwaspCrsExclusionEntryInput interface {
	pulumi.Input

	ToOwaspCrsExclusionEntryOutput() OwaspCrsExclusionEntryOutput
	ToOwaspCrsExclusionEntryOutputWithContext(context.Context) OwaspCrsExclusionEntryOutput
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type OwaspCrsExclusionEntryArgs struct {
	// The variable to be excluded.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
	Selector pulumi.StringInput `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
	SelectorMatchOperator pulumi.StringInput `pulumi:"selectorMatchOperator"`
}

func (OwaspCrsExclusionEntryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OwaspCrsExclusionEntry)(nil)).Elem()
}

func (i OwaspCrsExclusionEntryArgs) ToOwaspCrsExclusionEntryOutput() OwaspCrsExclusionEntryOutput {
	return i.ToOwaspCrsExclusionEntryOutputWithContext(context.Background())
}

func (i OwaspCrsExclusionEntryArgs) ToOwaspCrsExclusionEntryOutputWithContext(ctx context.Context) OwaspCrsExclusionEntryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OwaspCrsExclusionEntryOutput)
}

// OwaspCrsExclusionEntryArrayInput is an input type that accepts OwaspCrsExclusionEntryArray and OwaspCrsExclusionEntryArrayOutput values.
// You can construct a concrete instance of `OwaspCrsExclusionEntryArrayInput` via:
//
//          OwaspCrsExclusionEntryArray{ OwaspCrsExclusionEntryArgs{...} }
type OwaspCrsExclusionEntryArrayInput interface {
	pulumi.Input

	ToOwaspCrsExclusionEntryArrayOutput() OwaspCrsExclusionEntryArrayOutput
	ToOwaspCrsExclusionEntryArrayOutputWithContext(context.Context) OwaspCrsExclusionEntryArrayOutput
}

type OwaspCrsExclusionEntryArray []OwaspCrsExclusionEntryInput

func (OwaspCrsExclusionEntryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OwaspCrsExclusionEntry)(nil)).Elem()
}

func (i OwaspCrsExclusionEntryArray) ToOwaspCrsExclusionEntryArrayOutput() OwaspCrsExclusionEntryArrayOutput {
	return i.ToOwaspCrsExclusionEntryArrayOutputWithContext(context.Background())
}

func (i OwaspCrsExclusionEntryArray) ToOwaspCrsExclusionEntryArrayOutputWithContext(ctx context.Context) OwaspCrsExclusionEntryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OwaspCrsExclusionEntryArrayOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type OwaspCrsExclusionEntryOutput struct{ *pulumi.OutputState }

func (OwaspCrsExclusionEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OwaspCrsExclusionEntry)(nil)).Elem()
}

func (o OwaspCrsExclusionEntryOutput) ToOwaspCrsExclusionEntryOutput() OwaspCrsExclusionEntryOutput {
	return o
}

func (o OwaspCrsExclusionEntryOutput) ToOwaspCrsExclusionEntryOutputWithContext(ctx context.Context) OwaspCrsExclusionEntryOutput {
	return o
}

// The variable to be excluded.
func (o OwaspCrsExclusionEntryOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v OwaspCrsExclusionEntry) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
func (o OwaspCrsExclusionEntryOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v OwaspCrsExclusionEntry) string { return v.Selector }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
func (o OwaspCrsExclusionEntryOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v OwaspCrsExclusionEntry) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

type OwaspCrsExclusionEntryArrayOutput struct{ *pulumi.OutputState }

func (OwaspCrsExclusionEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OwaspCrsExclusionEntry)(nil)).Elem()
}

func (o OwaspCrsExclusionEntryArrayOutput) ToOwaspCrsExclusionEntryArrayOutput() OwaspCrsExclusionEntryArrayOutput {
	return o
}

func (o OwaspCrsExclusionEntryArrayOutput) ToOwaspCrsExclusionEntryArrayOutputWithContext(ctx context.Context) OwaspCrsExclusionEntryArrayOutput {
	return o
}

func (o OwaspCrsExclusionEntryArrayOutput) Index(i pulumi.IntInput) OwaspCrsExclusionEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OwaspCrsExclusionEntry {
		return vs[0].([]OwaspCrsExclusionEntry)[vs[1].(int)]
	}).(OwaspCrsExclusionEntryOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type OwaspCrsExclusionEntryResponse struct {
	// The variable to be excluded.
	MatchVariable string `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
	Selector string `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
	SelectorMatchOperator string `pulumi:"selectorMatchOperator"`
}

// OwaspCrsExclusionEntryResponseInput is an input type that accepts OwaspCrsExclusionEntryResponseArgs and OwaspCrsExclusionEntryResponseOutput values.
// You can construct a concrete instance of `OwaspCrsExclusionEntryResponseInput` via:
//
//          OwaspCrsExclusionEntryResponseArgs{...}
type OwaspCrsExclusionEntryResponseInput interface {
	pulumi.Input

	ToOwaspCrsExclusionEntryResponseOutput() OwaspCrsExclusionEntryResponseOutput
	ToOwaspCrsExclusionEntryResponseOutputWithContext(context.Context) OwaspCrsExclusionEntryResponseOutput
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type OwaspCrsExclusionEntryResponseArgs struct {
	// The variable to be excluded.
	MatchVariable pulumi.StringInput `pulumi:"matchVariable"`
	// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
	Selector pulumi.StringInput `pulumi:"selector"`
	// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
	SelectorMatchOperator pulumi.StringInput `pulumi:"selectorMatchOperator"`
}

func (OwaspCrsExclusionEntryResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OwaspCrsExclusionEntryResponse)(nil)).Elem()
}

func (i OwaspCrsExclusionEntryResponseArgs) ToOwaspCrsExclusionEntryResponseOutput() OwaspCrsExclusionEntryResponseOutput {
	return i.ToOwaspCrsExclusionEntryResponseOutputWithContext(context.Background())
}

func (i OwaspCrsExclusionEntryResponseArgs) ToOwaspCrsExclusionEntryResponseOutputWithContext(ctx context.Context) OwaspCrsExclusionEntryResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OwaspCrsExclusionEntryResponseOutput)
}

// OwaspCrsExclusionEntryResponseArrayInput is an input type that accepts OwaspCrsExclusionEntryResponseArray and OwaspCrsExclusionEntryResponseArrayOutput values.
// You can construct a concrete instance of `OwaspCrsExclusionEntryResponseArrayInput` via:
//
//          OwaspCrsExclusionEntryResponseArray{ OwaspCrsExclusionEntryResponseArgs{...} }
type OwaspCrsExclusionEntryResponseArrayInput interface {
	pulumi.Input

	ToOwaspCrsExclusionEntryResponseArrayOutput() OwaspCrsExclusionEntryResponseArrayOutput
	ToOwaspCrsExclusionEntryResponseArrayOutputWithContext(context.Context) OwaspCrsExclusionEntryResponseArrayOutput
}

type OwaspCrsExclusionEntryResponseArray []OwaspCrsExclusionEntryResponseInput

func (OwaspCrsExclusionEntryResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OwaspCrsExclusionEntryResponse)(nil)).Elem()
}

func (i OwaspCrsExclusionEntryResponseArray) ToOwaspCrsExclusionEntryResponseArrayOutput() OwaspCrsExclusionEntryResponseArrayOutput {
	return i.ToOwaspCrsExclusionEntryResponseArrayOutputWithContext(context.Background())
}

func (i OwaspCrsExclusionEntryResponseArray) ToOwaspCrsExclusionEntryResponseArrayOutputWithContext(ctx context.Context) OwaspCrsExclusionEntryResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OwaspCrsExclusionEntryResponseArrayOutput)
}

// Allow to exclude some variable satisfy the condition for the WAF check.
type OwaspCrsExclusionEntryResponseOutput struct{ *pulumi.OutputState }

func (OwaspCrsExclusionEntryResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OwaspCrsExclusionEntryResponse)(nil)).Elem()
}

func (o OwaspCrsExclusionEntryResponseOutput) ToOwaspCrsExclusionEntryResponseOutput() OwaspCrsExclusionEntryResponseOutput {
	return o
}

func (o OwaspCrsExclusionEntryResponseOutput) ToOwaspCrsExclusionEntryResponseOutputWithContext(ctx context.Context) OwaspCrsExclusionEntryResponseOutput {
	return o
}

// The variable to be excluded.
func (o OwaspCrsExclusionEntryResponseOutput) MatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v OwaspCrsExclusionEntryResponse) string { return v.MatchVariable }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to.
func (o OwaspCrsExclusionEntryResponseOutput) Selector() pulumi.StringOutput {
	return o.ApplyT(func(v OwaspCrsExclusionEntryResponse) string { return v.Selector }).(pulumi.StringOutput)
}

// When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to.
func (o OwaspCrsExclusionEntryResponseOutput) SelectorMatchOperator() pulumi.StringOutput {
	return o.ApplyT(func(v OwaspCrsExclusionEntryResponse) string { return v.SelectorMatchOperator }).(pulumi.StringOutput)
}

type OwaspCrsExclusionEntryResponseArrayOutput struct{ *pulumi.OutputState }

func (OwaspCrsExclusionEntryResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OwaspCrsExclusionEntryResponse)(nil)).Elem()
}

func (o OwaspCrsExclusionEntryResponseArrayOutput) ToOwaspCrsExclusionEntryResponseArrayOutput() OwaspCrsExclusionEntryResponseArrayOutput {
	return o
}

func (o OwaspCrsExclusionEntryResponseArrayOutput) ToOwaspCrsExclusionEntryResponseArrayOutputWithContext(ctx context.Context) OwaspCrsExclusionEntryResponseArrayOutput {
	return o
}

func (o OwaspCrsExclusionEntryResponseArrayOutput) Index(i pulumi.IntInput) OwaspCrsExclusionEntryResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OwaspCrsExclusionEntryResponse {
		return vs[0].([]OwaspCrsExclusionEntryResponse)[vs[1].(int)]
	}).(OwaspCrsExclusionEntryResponseOutput)
}

// P2SConnectionConfiguration Resource.
type P2SConnectionConfiguration struct {
	// Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.
	EnableInternetSecurity *bool `pulumi:"enableInternetSecurity"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration *RoutingConfiguration `pulumi:"routingConfiguration"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpace `pulumi:"vpnClientAddressPool"`
}

// P2SConnectionConfigurationInput is an input type that accepts P2SConnectionConfigurationArgs and P2SConnectionConfigurationOutput values.
// You can construct a concrete instance of `P2SConnectionConfigurationInput` via:
//
//          P2SConnectionConfigurationArgs{...}
type P2SConnectionConfigurationInput interface {
	pulumi.Input

	ToP2SConnectionConfigurationOutput() P2SConnectionConfigurationOutput
	ToP2SConnectionConfigurationOutputWithContext(context.Context) P2SConnectionConfigurationOutput
}

// P2SConnectionConfiguration Resource.
type P2SConnectionConfigurationArgs struct {
	// Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.
	EnableInternetSecurity pulumi.BoolPtrInput `pulumi:"enableInternetSecurity"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration RoutingConfigurationPtrInput `pulumi:"routingConfiguration"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpacePtrInput `pulumi:"vpnClientAddressPool"`
}

func (P2SConnectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SConnectionConfiguration)(nil)).Elem()
}

func (i P2SConnectionConfigurationArgs) ToP2SConnectionConfigurationOutput() P2SConnectionConfigurationOutput {
	return i.ToP2SConnectionConfigurationOutputWithContext(context.Background())
}

func (i P2SConnectionConfigurationArgs) ToP2SConnectionConfigurationOutputWithContext(ctx context.Context) P2SConnectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SConnectionConfigurationOutput)
}

// P2SConnectionConfigurationArrayInput is an input type that accepts P2SConnectionConfigurationArray and P2SConnectionConfigurationArrayOutput values.
// You can construct a concrete instance of `P2SConnectionConfigurationArrayInput` via:
//
//          P2SConnectionConfigurationArray{ P2SConnectionConfigurationArgs{...} }
type P2SConnectionConfigurationArrayInput interface {
	pulumi.Input

	ToP2SConnectionConfigurationArrayOutput() P2SConnectionConfigurationArrayOutput
	ToP2SConnectionConfigurationArrayOutputWithContext(context.Context) P2SConnectionConfigurationArrayOutput
}

type P2SConnectionConfigurationArray []P2SConnectionConfigurationInput

func (P2SConnectionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SConnectionConfiguration)(nil)).Elem()
}

func (i P2SConnectionConfigurationArray) ToP2SConnectionConfigurationArrayOutput() P2SConnectionConfigurationArrayOutput {
	return i.ToP2SConnectionConfigurationArrayOutputWithContext(context.Background())
}

func (i P2SConnectionConfigurationArray) ToP2SConnectionConfigurationArrayOutputWithContext(ctx context.Context) P2SConnectionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SConnectionConfigurationArrayOutput)
}

// P2SConnectionConfiguration Resource.
type P2SConnectionConfigurationOutput struct{ *pulumi.OutputState }

func (P2SConnectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SConnectionConfiguration)(nil)).Elem()
}

func (o P2SConnectionConfigurationOutput) ToP2SConnectionConfigurationOutput() P2SConnectionConfigurationOutput {
	return o
}

func (o P2SConnectionConfigurationOutput) ToP2SConnectionConfigurationOutputWithContext(ctx context.Context) P2SConnectionConfigurationOutput {
	return o
}

// Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.
func (o P2SConnectionConfigurationOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v P2SConnectionConfiguration) *bool { return v.EnableInternetSecurity }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o P2SConnectionConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SConnectionConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SConnectionConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SConnectionConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Routing Configuration indicating the associated and propagated route tables on this connection.
func (o P2SConnectionConfigurationOutput) RoutingConfiguration() RoutingConfigurationPtrOutput {
	return o.ApplyT(func(v P2SConnectionConfiguration) *RoutingConfiguration { return v.RoutingConfiguration }).(RoutingConfigurationPtrOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o P2SConnectionConfigurationOutput) VpnClientAddressPool() AddressSpacePtrOutput {
	return o.ApplyT(func(v P2SConnectionConfiguration) *AddressSpace { return v.VpnClientAddressPool }).(AddressSpacePtrOutput)
}

type P2SConnectionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (P2SConnectionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SConnectionConfiguration)(nil)).Elem()
}

func (o P2SConnectionConfigurationArrayOutput) ToP2SConnectionConfigurationArrayOutput() P2SConnectionConfigurationArrayOutput {
	return o
}

func (o P2SConnectionConfigurationArrayOutput) ToP2SConnectionConfigurationArrayOutputWithContext(ctx context.Context) P2SConnectionConfigurationArrayOutput {
	return o
}

func (o P2SConnectionConfigurationArrayOutput) Index(i pulumi.IntInput) P2SConnectionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SConnectionConfiguration {
		return vs[0].([]P2SConnectionConfiguration)[vs[1].(int)]
	}).(P2SConnectionConfigurationOutput)
}

// P2SConnectionConfiguration Resource.
type P2SConnectionConfigurationResponse struct {
	// Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.
	EnableInternetSecurity *bool `pulumi:"enableInternetSecurity"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the P2SConnectionConfiguration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration *RoutingConfigurationResponse `pulumi:"routingConfiguration"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpaceResponse `pulumi:"vpnClientAddressPool"`
}

// P2SConnectionConfigurationResponseInput is an input type that accepts P2SConnectionConfigurationResponseArgs and P2SConnectionConfigurationResponseOutput values.
// You can construct a concrete instance of `P2SConnectionConfigurationResponseInput` via:
//
//          P2SConnectionConfigurationResponseArgs{...}
type P2SConnectionConfigurationResponseInput interface {
	pulumi.Input

	ToP2SConnectionConfigurationResponseOutput() P2SConnectionConfigurationResponseOutput
	ToP2SConnectionConfigurationResponseOutputWithContext(context.Context) P2SConnectionConfigurationResponseOutput
}

// P2SConnectionConfiguration Resource.
type P2SConnectionConfigurationResponseArgs struct {
	// Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.
	EnableInternetSecurity pulumi.BoolPtrInput `pulumi:"enableInternetSecurity"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the P2SConnectionConfiguration resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration RoutingConfigurationResponsePtrInput `pulumi:"routingConfiguration"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpaceResponsePtrInput `pulumi:"vpnClientAddressPool"`
}

func (P2SConnectionConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SConnectionConfigurationResponse)(nil)).Elem()
}

func (i P2SConnectionConfigurationResponseArgs) ToP2SConnectionConfigurationResponseOutput() P2SConnectionConfigurationResponseOutput {
	return i.ToP2SConnectionConfigurationResponseOutputWithContext(context.Background())
}

func (i P2SConnectionConfigurationResponseArgs) ToP2SConnectionConfigurationResponseOutputWithContext(ctx context.Context) P2SConnectionConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SConnectionConfigurationResponseOutput)
}

// P2SConnectionConfigurationResponseArrayInput is an input type that accepts P2SConnectionConfigurationResponseArray and P2SConnectionConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `P2SConnectionConfigurationResponseArrayInput` via:
//
//          P2SConnectionConfigurationResponseArray{ P2SConnectionConfigurationResponseArgs{...} }
type P2SConnectionConfigurationResponseArrayInput interface {
	pulumi.Input

	ToP2SConnectionConfigurationResponseArrayOutput() P2SConnectionConfigurationResponseArrayOutput
	ToP2SConnectionConfigurationResponseArrayOutputWithContext(context.Context) P2SConnectionConfigurationResponseArrayOutput
}

type P2SConnectionConfigurationResponseArray []P2SConnectionConfigurationResponseInput

func (P2SConnectionConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SConnectionConfigurationResponse)(nil)).Elem()
}

func (i P2SConnectionConfigurationResponseArray) ToP2SConnectionConfigurationResponseArrayOutput() P2SConnectionConfigurationResponseArrayOutput {
	return i.ToP2SConnectionConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i P2SConnectionConfigurationResponseArray) ToP2SConnectionConfigurationResponseArrayOutputWithContext(ctx context.Context) P2SConnectionConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SConnectionConfigurationResponseArrayOutput)
}

// P2SConnectionConfiguration Resource.
type P2SConnectionConfigurationResponseOutput struct{ *pulumi.OutputState }

func (P2SConnectionConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SConnectionConfigurationResponse)(nil)).Elem()
}

func (o P2SConnectionConfigurationResponseOutput) ToP2SConnectionConfigurationResponseOutput() P2SConnectionConfigurationResponseOutput {
	return o
}

func (o P2SConnectionConfigurationResponseOutput) ToP2SConnectionConfigurationResponseOutputWithContext(ctx context.Context) P2SConnectionConfigurationResponseOutput {
	return o
}

// Flag indicating whether the enable internet security flag is turned on for the P2S Connections or not.
func (o P2SConnectionConfigurationResponseOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v P2SConnectionConfigurationResponse) *bool { return v.EnableInternetSecurity }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SConnectionConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v P2SConnectionConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o P2SConnectionConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SConnectionConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SConnectionConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SConnectionConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the P2SConnectionConfiguration resource.
func (o P2SConnectionConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v P2SConnectionConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The Routing Configuration indicating the associated and propagated route tables on this connection.
func (o P2SConnectionConfigurationResponseOutput) RoutingConfiguration() RoutingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v P2SConnectionConfigurationResponse) *RoutingConfigurationResponse {
		return v.RoutingConfiguration
	}).(RoutingConfigurationResponsePtrOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o P2SConnectionConfigurationResponseOutput) VpnClientAddressPool() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v P2SConnectionConfigurationResponse) *AddressSpaceResponse { return v.VpnClientAddressPool }).(AddressSpaceResponsePtrOutput)
}

type P2SConnectionConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (P2SConnectionConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SConnectionConfigurationResponse)(nil)).Elem()
}

func (o P2SConnectionConfigurationResponseArrayOutput) ToP2SConnectionConfigurationResponseArrayOutput() P2SConnectionConfigurationResponseArrayOutput {
	return o
}

func (o P2SConnectionConfigurationResponseArrayOutput) ToP2SConnectionConfigurationResponseArrayOutputWithContext(ctx context.Context) P2SConnectionConfigurationResponseArrayOutput {
	return o
}

func (o P2SConnectionConfigurationResponseArrayOutput) Index(i pulumi.IntInput) P2SConnectionConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SConnectionConfigurationResponse {
		return vs[0].([]P2SConnectionConfigurationResponse)[vs[1].(int)]
	}).(P2SConnectionConfigurationResponseOutput)
}

// P2SVpnGateway Resource.
type P2SVpnGatewayResponse struct {
	// List of all customer specified DNS servers IP addresses.
	CustomDnsServers []string `pulumi:"customDnsServers"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway.
	IsRoutingPreferenceInternet *bool `pulumi:"isRoutingPreferenceInternet"`
	// Resource location.
	Location string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// List of all p2s connection configurations of the gateway.
	P2SConnectionConfigurations []P2SConnectionConfigurationResponse `pulumi:"p2SConnectionConfigurations"`
	// The provisioning state of the P2S VPN gateway resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// The VirtualHub to which the gateway belongs.
	VirtualHub *SubResourceResponse `pulumi:"virtualHub"`
	// All P2S VPN clients' connection health status.
	VpnClientConnectionHealth VpnClientConnectionHealthResponse `pulumi:"vpnClientConnectionHealth"`
	// The scale unit for this p2s vpn gateway.
	VpnGatewayScaleUnit *int `pulumi:"vpnGatewayScaleUnit"`
	// The VpnServerConfiguration to which the p2sVpnGateway is attached to.
	VpnServerConfiguration *SubResourceResponse `pulumi:"vpnServerConfiguration"`
}

// P2SVpnGatewayResponseInput is an input type that accepts P2SVpnGatewayResponseArgs and P2SVpnGatewayResponseOutput values.
// You can construct a concrete instance of `P2SVpnGatewayResponseInput` via:
//
//          P2SVpnGatewayResponseArgs{...}
type P2SVpnGatewayResponseInput interface {
	pulumi.Input

	ToP2SVpnGatewayResponseOutput() P2SVpnGatewayResponseOutput
	ToP2SVpnGatewayResponseOutputWithContext(context.Context) P2SVpnGatewayResponseOutput
}

// P2SVpnGateway Resource.
type P2SVpnGatewayResponseArgs struct {
	// List of all customer specified DNS servers IP addresses.
	CustomDnsServers pulumi.StringArrayInput `pulumi:"customDnsServers"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway.
	IsRoutingPreferenceInternet pulumi.BoolPtrInput `pulumi:"isRoutingPreferenceInternet"`
	// Resource location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// List of all p2s connection configurations of the gateway.
	P2SConnectionConfigurations P2SConnectionConfigurationResponseArrayInput `pulumi:"p2SConnectionConfigurations"`
	// The provisioning state of the P2S VPN gateway resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// The VirtualHub to which the gateway belongs.
	VirtualHub SubResourceResponsePtrInput `pulumi:"virtualHub"`
	// All P2S VPN clients' connection health status.
	VpnClientConnectionHealth VpnClientConnectionHealthResponseInput `pulumi:"vpnClientConnectionHealth"`
	// The scale unit for this p2s vpn gateway.
	VpnGatewayScaleUnit pulumi.IntPtrInput `pulumi:"vpnGatewayScaleUnit"`
	// The VpnServerConfiguration to which the p2sVpnGateway is attached to.
	VpnServerConfiguration SubResourceResponsePtrInput `pulumi:"vpnServerConfiguration"`
}

func (P2SVpnGatewayResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnGatewayResponse)(nil)).Elem()
}

func (i P2SVpnGatewayResponseArgs) ToP2SVpnGatewayResponseOutput() P2SVpnGatewayResponseOutput {
	return i.ToP2SVpnGatewayResponseOutputWithContext(context.Background())
}

func (i P2SVpnGatewayResponseArgs) ToP2SVpnGatewayResponseOutputWithContext(ctx context.Context) P2SVpnGatewayResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnGatewayResponseOutput)
}

// P2SVpnGatewayResponseArrayInput is an input type that accepts P2SVpnGatewayResponseArray and P2SVpnGatewayResponseArrayOutput values.
// You can construct a concrete instance of `P2SVpnGatewayResponseArrayInput` via:
//
//          P2SVpnGatewayResponseArray{ P2SVpnGatewayResponseArgs{...} }
type P2SVpnGatewayResponseArrayInput interface {
	pulumi.Input

	ToP2SVpnGatewayResponseArrayOutput() P2SVpnGatewayResponseArrayOutput
	ToP2SVpnGatewayResponseArrayOutputWithContext(context.Context) P2SVpnGatewayResponseArrayOutput
}

type P2SVpnGatewayResponseArray []P2SVpnGatewayResponseInput

func (P2SVpnGatewayResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnGatewayResponse)(nil)).Elem()
}

func (i P2SVpnGatewayResponseArray) ToP2SVpnGatewayResponseArrayOutput() P2SVpnGatewayResponseArrayOutput {
	return i.ToP2SVpnGatewayResponseArrayOutputWithContext(context.Background())
}

func (i P2SVpnGatewayResponseArray) ToP2SVpnGatewayResponseArrayOutputWithContext(ctx context.Context) P2SVpnGatewayResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnGatewayResponseArrayOutput)
}

// P2SVpnGateway Resource.
type P2SVpnGatewayResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnGatewayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnGatewayResponse)(nil)).Elem()
}

func (o P2SVpnGatewayResponseOutput) ToP2SVpnGatewayResponseOutput() P2SVpnGatewayResponseOutput {
	return o
}

func (o P2SVpnGatewayResponseOutput) ToP2SVpnGatewayResponseOutputWithContext(ctx context.Context) P2SVpnGatewayResponseOutput {
	return o
}

// List of all customer specified DNS servers IP addresses.
func (o P2SVpnGatewayResponseOutput) CustomDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) []string { return v.CustomDnsServers }).(pulumi.StringArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnGatewayResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o P2SVpnGatewayResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Enable Routing Preference property for the Public IP Interface of the P2SVpnGateway.
func (o P2SVpnGatewayResponseOutput) IsRoutingPreferenceInternet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) *bool { return v.IsRoutingPreferenceInternet }).(pulumi.BoolPtrOutput)
}

// Resource location.
func (o P2SVpnGatewayResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name.
func (o P2SVpnGatewayResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) string { return v.Name }).(pulumi.StringOutput)
}

// List of all p2s connection configurations of the gateway.
func (o P2SVpnGatewayResponseOutput) P2SConnectionConfigurations() P2SConnectionConfigurationResponseArrayOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) []P2SConnectionConfigurationResponse {
		return v.P2SConnectionConfigurations
	}).(P2SConnectionConfigurationResponseArrayOutput)
}

// The provisioning state of the P2S VPN gateway resource.
func (o P2SVpnGatewayResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource tags.
func (o P2SVpnGatewayResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o P2SVpnGatewayResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The VirtualHub to which the gateway belongs.
func (o P2SVpnGatewayResponseOutput) VirtualHub() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) *SubResourceResponse { return v.VirtualHub }).(SubResourceResponsePtrOutput)
}

// All P2S VPN clients' connection health status.
func (o P2SVpnGatewayResponseOutput) VpnClientConnectionHealth() VpnClientConnectionHealthResponseOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) VpnClientConnectionHealthResponse { return v.VpnClientConnectionHealth }).(VpnClientConnectionHealthResponseOutput)
}

// The scale unit for this p2s vpn gateway.
func (o P2SVpnGatewayResponseOutput) VpnGatewayScaleUnit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) *int { return v.VpnGatewayScaleUnit }).(pulumi.IntPtrOutput)
}

// The VpnServerConfiguration to which the p2sVpnGateway is attached to.
func (o P2SVpnGatewayResponseOutput) VpnServerConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v P2SVpnGatewayResponse) *SubResourceResponse { return v.VpnServerConfiguration }).(SubResourceResponsePtrOutput)
}

type P2SVpnGatewayResponseArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnGatewayResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnGatewayResponse)(nil)).Elem()
}

func (o P2SVpnGatewayResponseArrayOutput) ToP2SVpnGatewayResponseArrayOutput() P2SVpnGatewayResponseArrayOutput {
	return o
}

func (o P2SVpnGatewayResponseArrayOutput) ToP2SVpnGatewayResponseArrayOutputWithContext(ctx context.Context) P2SVpnGatewayResponseArrayOutput {
	return o
}

func (o P2SVpnGatewayResponseArrayOutput) Index(i pulumi.IntInput) P2SVpnGatewayResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnGatewayResponse {
		return vs[0].([]P2SVpnGatewayResponse)[vs[1].(int)]
	}).(P2SVpnGatewayResponseOutput)
}

// Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The Radius client root certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// P2SVpnServerConfigRadiusClientRootCertificateInput is an input type that accepts P2SVpnServerConfigRadiusClientRootCertificateArgs and P2SVpnServerConfigRadiusClientRootCertificateOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusClientRootCertificateInput` via:
//
//          P2SVpnServerConfigRadiusClientRootCertificateArgs{...}
type P2SVpnServerConfigRadiusClientRootCertificateInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusClientRootCertificateOutput() P2SVpnServerConfigRadiusClientRootCertificateOutput
	ToP2SVpnServerConfigRadiusClientRootCertificateOutputWithContext(context.Context) P2SVpnServerConfigRadiusClientRootCertificateOutput
}

// Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Radius client root certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (P2SVpnServerConfigRadiusClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusClientRootCertificateArgs) ToP2SVpnServerConfigRadiusClientRootCertificateOutput() P2SVpnServerConfigRadiusClientRootCertificateOutput {
	return i.ToP2SVpnServerConfigRadiusClientRootCertificateOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusClientRootCertificateArgs) ToP2SVpnServerConfigRadiusClientRootCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusClientRootCertificateOutput)
}

// P2SVpnServerConfigRadiusClientRootCertificateArrayInput is an input type that accepts P2SVpnServerConfigRadiusClientRootCertificateArray and P2SVpnServerConfigRadiusClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusClientRootCertificateArrayInput` via:
//
//          P2SVpnServerConfigRadiusClientRootCertificateArray{ P2SVpnServerConfigRadiusClientRootCertificateArgs{...} }
type P2SVpnServerConfigRadiusClientRootCertificateArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutput() P2SVpnServerConfigRadiusClientRootCertificateArrayOutput
	ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(context.Context) P2SVpnServerConfigRadiusClientRootCertificateArrayOutput
}

type P2SVpnServerConfigRadiusClientRootCertificateArray []P2SVpnServerConfigRadiusClientRootCertificateInput

func (P2SVpnServerConfigRadiusClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusClientRootCertificateArray) ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutput() P2SVpnServerConfigRadiusClientRootCertificateArrayOutput {
	return i.ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusClientRootCertificateArray) ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusClientRootCertificateArrayOutput)
}

// Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificateOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusClientRootCertificateOutput) ToP2SVpnServerConfigRadiusClientRootCertificateOutput() P2SVpnServerConfigRadiusClientRootCertificateOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificateOutput) ToP2SVpnServerConfigRadiusClientRootCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigRadiusClientRootCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigRadiusClientRootCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigRadiusClientRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Radius client root certificate thumbprint.
func (o P2SVpnServerConfigRadiusClientRootCertificateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificate) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type P2SVpnServerConfigRadiusClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusClientRootCertificateArrayOutput) ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutput() P2SVpnServerConfigRadiusClientRootCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificateArrayOutput) ToP2SVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificateArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigRadiusClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigRadiusClientRootCertificate {
		return vs[0].([]P2SVpnServerConfigRadiusClientRootCertificate)[vs[1].(int)]
	}).(P2SVpnServerConfigRadiusClientRootCertificateOutput)
}

// Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the radius client root certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The Radius client root certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// P2SVpnServerConfigRadiusClientRootCertificateResponseInput is an input type that accepts P2SVpnServerConfigRadiusClientRootCertificateResponseArgs and P2SVpnServerConfigRadiusClientRootCertificateResponseOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusClientRootCertificateResponseInput` via:
//
//          P2SVpnServerConfigRadiusClientRootCertificateResponseArgs{...}
type P2SVpnServerConfigRadiusClientRootCertificateResponseInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusClientRootCertificateResponseOutput() P2SVpnServerConfigRadiusClientRootCertificateResponseOutput
	ToP2SVpnServerConfigRadiusClientRootCertificateResponseOutputWithContext(context.Context) P2SVpnServerConfigRadiusClientRootCertificateResponseOutput
}

// Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificateResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the radius client root certificate resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The Radius client root certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (P2SVpnServerConfigRadiusClientRootCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusClientRootCertificateResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusClientRootCertificateResponseArgs) ToP2SVpnServerConfigRadiusClientRootCertificateResponseOutput() P2SVpnServerConfigRadiusClientRootCertificateResponseOutput {
	return i.ToP2SVpnServerConfigRadiusClientRootCertificateResponseOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusClientRootCertificateResponseArgs) ToP2SVpnServerConfigRadiusClientRootCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusClientRootCertificateResponseOutput)
}

// P2SVpnServerConfigRadiusClientRootCertificateResponseArrayInput is an input type that accepts P2SVpnServerConfigRadiusClientRootCertificateResponseArray and P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusClientRootCertificateResponseArrayInput` via:
//
//          P2SVpnServerConfigRadiusClientRootCertificateResponseArray{ P2SVpnServerConfigRadiusClientRootCertificateResponseArgs{...} }
type P2SVpnServerConfigRadiusClientRootCertificateResponseArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput() P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput
	ToP2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutputWithContext(context.Context) P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput
}

type P2SVpnServerConfigRadiusClientRootCertificateResponseArray []P2SVpnServerConfigRadiusClientRootCertificateResponseInput

func (P2SVpnServerConfigRadiusClientRootCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusClientRootCertificateResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusClientRootCertificateResponseArray) ToP2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput() P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return i.ToP2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusClientRootCertificateResponseArray) ToP2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput)
}

// Radius client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusClientRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusClientRootCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) ToP2SVpnServerConfigRadiusClientRootCertificateResponseOutput() P2SVpnServerConfigRadiusClientRootCertificateResponseOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) ToP2SVpnServerConfigRadiusClientRootCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the radius client root certificate resource.
func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The Radius client root certificate thumbprint.
func (o P2SVpnServerConfigRadiusClientRootCertificateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusClientRootCertificateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusClientRootCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput) ToP2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput() P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput) ToP2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigRadiusClientRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigRadiusClientRootCertificateResponse {
		return vs[0].([]P2SVpnServerConfigRadiusClientRootCertificateResponse)[vs[1].(int)]
	}).(P2SVpnServerConfigRadiusClientRootCertificateResponseOutput)
}

// Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// P2SVpnServerConfigRadiusServerRootCertificateInput is an input type that accepts P2SVpnServerConfigRadiusServerRootCertificateArgs and P2SVpnServerConfigRadiusServerRootCertificateOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusServerRootCertificateInput` via:
//
//          P2SVpnServerConfigRadiusServerRootCertificateArgs{...}
type P2SVpnServerConfigRadiusServerRootCertificateInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusServerRootCertificateOutput() P2SVpnServerConfigRadiusServerRootCertificateOutput
	ToP2SVpnServerConfigRadiusServerRootCertificateOutputWithContext(context.Context) P2SVpnServerConfigRadiusServerRootCertificateOutput
}

// Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The certificate public data.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (P2SVpnServerConfigRadiusServerRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusServerRootCertificateArgs) ToP2SVpnServerConfigRadiusServerRootCertificateOutput() P2SVpnServerConfigRadiusServerRootCertificateOutput {
	return i.ToP2SVpnServerConfigRadiusServerRootCertificateOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusServerRootCertificateArgs) ToP2SVpnServerConfigRadiusServerRootCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusServerRootCertificateOutput)
}

// P2SVpnServerConfigRadiusServerRootCertificateArrayInput is an input type that accepts P2SVpnServerConfigRadiusServerRootCertificateArray and P2SVpnServerConfigRadiusServerRootCertificateArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusServerRootCertificateArrayInput` via:
//
//          P2SVpnServerConfigRadiusServerRootCertificateArray{ P2SVpnServerConfigRadiusServerRootCertificateArgs{...} }
type P2SVpnServerConfigRadiusServerRootCertificateArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutput() P2SVpnServerConfigRadiusServerRootCertificateArrayOutput
	ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(context.Context) P2SVpnServerConfigRadiusServerRootCertificateArrayOutput
}

type P2SVpnServerConfigRadiusServerRootCertificateArray []P2SVpnServerConfigRadiusServerRootCertificateInput

func (P2SVpnServerConfigRadiusServerRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusServerRootCertificateArray) ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutput() P2SVpnServerConfigRadiusServerRootCertificateArrayOutput {
	return i.ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusServerRootCertificateArray) ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusServerRootCertificateArrayOutput)
}

// Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificateOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusServerRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusServerRootCertificateOutput) ToP2SVpnServerConfigRadiusServerRootCertificateOutput() P2SVpnServerConfigRadiusServerRootCertificateOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificateOutput) ToP2SVpnServerConfigRadiusServerRootCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigRadiusServerRootCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigRadiusServerRootCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigRadiusServerRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o P2SVpnServerConfigRadiusServerRootCertificateOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificate) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type P2SVpnServerConfigRadiusServerRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusServerRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusServerRootCertificateArrayOutput) ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutput() P2SVpnServerConfigRadiusServerRootCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificateArrayOutput) ToP2SVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificateArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigRadiusServerRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigRadiusServerRootCertificate {
		return vs[0].([]P2SVpnServerConfigRadiusServerRootCertificate)[vs[1].(int)]
	}).(P2SVpnServerConfigRadiusServerRootCertificateOutput)
}

// Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the radius server root certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// P2SVpnServerConfigRadiusServerRootCertificateResponseInput is an input type that accepts P2SVpnServerConfigRadiusServerRootCertificateResponseArgs and P2SVpnServerConfigRadiusServerRootCertificateResponseOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusServerRootCertificateResponseInput` via:
//
//          P2SVpnServerConfigRadiusServerRootCertificateResponseArgs{...}
type P2SVpnServerConfigRadiusServerRootCertificateResponseInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusServerRootCertificateResponseOutput() P2SVpnServerConfigRadiusServerRootCertificateResponseOutput
	ToP2SVpnServerConfigRadiusServerRootCertificateResponseOutputWithContext(context.Context) P2SVpnServerConfigRadiusServerRootCertificateResponseOutput
}

// Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificateResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the radius server root certificate resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The certificate public data.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (P2SVpnServerConfigRadiusServerRootCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusServerRootCertificateResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusServerRootCertificateResponseArgs) ToP2SVpnServerConfigRadiusServerRootCertificateResponseOutput() P2SVpnServerConfigRadiusServerRootCertificateResponseOutput {
	return i.ToP2SVpnServerConfigRadiusServerRootCertificateResponseOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusServerRootCertificateResponseArgs) ToP2SVpnServerConfigRadiusServerRootCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusServerRootCertificateResponseOutput)
}

// P2SVpnServerConfigRadiusServerRootCertificateResponseArrayInput is an input type that accepts P2SVpnServerConfigRadiusServerRootCertificateResponseArray and P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigRadiusServerRootCertificateResponseArrayInput` via:
//
//          P2SVpnServerConfigRadiusServerRootCertificateResponseArray{ P2SVpnServerConfigRadiusServerRootCertificateResponseArgs{...} }
type P2SVpnServerConfigRadiusServerRootCertificateResponseArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput() P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput
	ToP2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutputWithContext(context.Context) P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput
}

type P2SVpnServerConfigRadiusServerRootCertificateResponseArray []P2SVpnServerConfigRadiusServerRootCertificateResponseInput

func (P2SVpnServerConfigRadiusServerRootCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusServerRootCertificateResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigRadiusServerRootCertificateResponseArray) ToP2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput() P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return i.ToP2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigRadiusServerRootCertificateResponseArray) ToP2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput)
}

// Radius Server root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigRadiusServerRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigRadiusServerRootCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) ToP2SVpnServerConfigRadiusServerRootCertificateResponseOutput() P2SVpnServerConfigRadiusServerRootCertificateResponseOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) ToP2SVpnServerConfigRadiusServerRootCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the radius server root certificate resource.
func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The certificate public data.
func (o P2SVpnServerConfigRadiusServerRootCertificateResponseOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigRadiusServerRootCertificateResponse) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigRadiusServerRootCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput) ToP2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput() P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput) ToP2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigRadiusServerRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigRadiusServerRootCertificateResponse {
		return vs[0].([]P2SVpnServerConfigRadiusServerRootCertificateResponse)[vs[1].(int)]
	}).(P2SVpnServerConfigRadiusServerRootCertificateResponseOutput)
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// P2SVpnServerConfigVpnClientRevokedCertificateInput is an input type that accepts P2SVpnServerConfigVpnClientRevokedCertificateArgs and P2SVpnServerConfigVpnClientRevokedCertificateOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRevokedCertificateInput` via:
//
//          P2SVpnServerConfigVpnClientRevokedCertificateArgs{...}
type P2SVpnServerConfigVpnClientRevokedCertificateInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRevokedCertificateOutput() P2SVpnServerConfigVpnClientRevokedCertificateOutput
	ToP2SVpnServerConfigVpnClientRevokedCertificateOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRevokedCertificateOutput
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (P2SVpnServerConfigVpnClientRevokedCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateArgs) ToP2SVpnServerConfigVpnClientRevokedCertificateOutput() P2SVpnServerConfigVpnClientRevokedCertificateOutput {
	return i.ToP2SVpnServerConfigVpnClientRevokedCertificateOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateArgs) ToP2SVpnServerConfigVpnClientRevokedCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRevokedCertificateOutput)
}

// P2SVpnServerConfigVpnClientRevokedCertificateArrayInput is an input type that accepts P2SVpnServerConfigVpnClientRevokedCertificateArray and P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRevokedCertificateArrayInput` via:
//
//          P2SVpnServerConfigVpnClientRevokedCertificateArray{ P2SVpnServerConfigVpnClientRevokedCertificateArgs{...} }
type P2SVpnServerConfigVpnClientRevokedCertificateArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutput() P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput
	ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput
}

type P2SVpnServerConfigVpnClientRevokedCertificateArray []P2SVpnServerConfigVpnClientRevokedCertificateInput

func (P2SVpnServerConfigVpnClientRevokedCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateArray) ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutput() P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return i.ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateArray) ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput)
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificateOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRevokedCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateOutput() P2SVpnServerConfigVpnClientRevokedCertificateOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigVpnClientRevokedCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigVpnClientRevokedCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigVpnClientRevokedCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The revoked VPN client certificate thumbprint.
func (o P2SVpnServerConfigVpnClientRevokedCertificateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificate) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutput() P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigVpnClientRevokedCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigVpnClientRevokedCertificate {
		return vs[0].([]P2SVpnServerConfigVpnClientRevokedCertificate)[vs[1].(int)]
	}).(P2SVpnServerConfigVpnClientRevokedCertificateOutput)
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN client revoked certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// P2SVpnServerConfigVpnClientRevokedCertificateResponseInput is an input type that accepts P2SVpnServerConfigVpnClientRevokedCertificateResponseArgs and P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRevokedCertificateResponseInput` via:
//
//          P2SVpnServerConfigVpnClientRevokedCertificateResponseArgs{...}
type P2SVpnServerConfigVpnClientRevokedCertificateResponseInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRevokedCertificateResponseOutput() P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput
	ToP2SVpnServerConfigVpnClientRevokedCertificateResponseOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificateResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the VPN client revoked certificate resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (P2SVpnServerConfigVpnClientRevokedCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateResponseArgs) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseOutput() P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return i.ToP2SVpnServerConfigVpnClientRevokedCertificateResponseOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateResponseArgs) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput)
}

// P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayInput is an input type that accepts P2SVpnServerConfigVpnClientRevokedCertificateResponseArray and P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayInput` via:
//
//          P2SVpnServerConfigVpnClientRevokedCertificateResponseArray{ P2SVpnServerConfigVpnClientRevokedCertificateResponseArgs{...} }
type P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput() P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput
	ToP2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput
}

type P2SVpnServerConfigVpnClientRevokedCertificateResponseArray []P2SVpnServerConfigVpnClientRevokedCertificateResponseInput

func (P2SVpnServerConfigVpnClientRevokedCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateResponseArray) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput() P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return i.ToP2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRevokedCertificateResponseArray) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput)
}

// VPN client revoked certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseOutput() P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN client revoked certificate resource.
func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The revoked VPN client certificate thumbprint.
func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRevokedCertificateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput() P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) ToP2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigVpnClientRevokedCertificateResponse {
		return vs[0].([]P2SVpnServerConfigVpnClientRevokedCertificateResponse)[vs[1].(int)]
	}).(P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput)
}

// VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// P2SVpnServerConfigVpnClientRootCertificateInput is an input type that accepts P2SVpnServerConfigVpnClientRootCertificateArgs and P2SVpnServerConfigVpnClientRootCertificateOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRootCertificateInput` via:
//
//          P2SVpnServerConfigVpnClientRootCertificateArgs{...}
type P2SVpnServerConfigVpnClientRootCertificateInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRootCertificateOutput() P2SVpnServerConfigVpnClientRootCertificateOutput
	ToP2SVpnServerConfigVpnClientRootCertificateOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRootCertificateOutput
}

// VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The certificate public data.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (P2SVpnServerConfigVpnClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRootCertificateArgs) ToP2SVpnServerConfigVpnClientRootCertificateOutput() P2SVpnServerConfigVpnClientRootCertificateOutput {
	return i.ToP2SVpnServerConfigVpnClientRootCertificateOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRootCertificateArgs) ToP2SVpnServerConfigVpnClientRootCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRootCertificateOutput)
}

// P2SVpnServerConfigVpnClientRootCertificateArrayInput is an input type that accepts P2SVpnServerConfigVpnClientRootCertificateArray and P2SVpnServerConfigVpnClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRootCertificateArrayInput` via:
//
//          P2SVpnServerConfigVpnClientRootCertificateArray{ P2SVpnServerConfigVpnClientRootCertificateArgs{...} }
type P2SVpnServerConfigVpnClientRootCertificateArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRootCertificateArrayOutput() P2SVpnServerConfigVpnClientRootCertificateArrayOutput
	ToP2SVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRootCertificateArrayOutput
}

type P2SVpnServerConfigVpnClientRootCertificateArray []P2SVpnServerConfigVpnClientRootCertificateInput

func (P2SVpnServerConfigVpnClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRootCertificateArray) ToP2SVpnServerConfigVpnClientRootCertificateArrayOutput() P2SVpnServerConfigVpnClientRootCertificateArrayOutput {
	return i.ToP2SVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRootCertificateArray) ToP2SVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRootCertificateArrayOutput)
}

// VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificateOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRootCertificateOutput) ToP2SVpnServerConfigVpnClientRootCertificateOutput() P2SVpnServerConfigVpnClientRootCertificateOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificateOutput) ToP2SVpnServerConfigVpnClientRootCertificateOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigVpnClientRootCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigVpnClientRootCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigVpnClientRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o P2SVpnServerConfigVpnClientRootCertificateOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificate) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type P2SVpnServerConfigVpnClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRootCertificateArrayOutput) ToP2SVpnServerConfigVpnClientRootCertificateArrayOutput() P2SVpnServerConfigVpnClientRootCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificateArrayOutput) ToP2SVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificateArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigVpnClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigVpnClientRootCertificate {
		return vs[0].([]P2SVpnServerConfigVpnClientRootCertificate)[vs[1].(int)]
	}).(P2SVpnServerConfigVpnClientRootCertificateOutput)
}

// VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN client root certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// P2SVpnServerConfigVpnClientRootCertificateResponseInput is an input type that accepts P2SVpnServerConfigVpnClientRootCertificateResponseArgs and P2SVpnServerConfigVpnClientRootCertificateResponseOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRootCertificateResponseInput` via:
//
//          P2SVpnServerConfigVpnClientRootCertificateResponseArgs{...}
type P2SVpnServerConfigVpnClientRootCertificateResponseInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRootCertificateResponseOutput() P2SVpnServerConfigVpnClientRootCertificateResponseOutput
	ToP2SVpnServerConfigVpnClientRootCertificateResponseOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRootCertificateResponseOutput
}

// VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificateResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the VPN client root certificate resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The certificate public data.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (P2SVpnServerConfigVpnClientRootCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRootCertificateResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRootCertificateResponseArgs) ToP2SVpnServerConfigVpnClientRootCertificateResponseOutput() P2SVpnServerConfigVpnClientRootCertificateResponseOutput {
	return i.ToP2SVpnServerConfigVpnClientRootCertificateResponseOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRootCertificateResponseArgs) ToP2SVpnServerConfigVpnClientRootCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRootCertificateResponseOutput)
}

// P2SVpnServerConfigVpnClientRootCertificateResponseArrayInput is an input type that accepts P2SVpnServerConfigVpnClientRootCertificateResponseArray and P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput values.
// You can construct a concrete instance of `P2SVpnServerConfigVpnClientRootCertificateResponseArrayInput` via:
//
//          P2SVpnServerConfigVpnClientRootCertificateResponseArray{ P2SVpnServerConfigVpnClientRootCertificateResponseArgs{...} }
type P2SVpnServerConfigVpnClientRootCertificateResponseArrayInput interface {
	pulumi.Input

	ToP2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput() P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput
	ToP2SVpnServerConfigVpnClientRootCertificateResponseArrayOutputWithContext(context.Context) P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput
}

type P2SVpnServerConfigVpnClientRootCertificateResponseArray []P2SVpnServerConfigVpnClientRootCertificateResponseInput

func (P2SVpnServerConfigVpnClientRootCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRootCertificateResponse)(nil)).Elem()
}

func (i P2SVpnServerConfigVpnClientRootCertificateResponseArray) ToP2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput() P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return i.ToP2SVpnServerConfigVpnClientRootCertificateResponseArrayOutputWithContext(context.Background())
}

func (i P2SVpnServerConfigVpnClientRootCertificateResponseArray) ToP2SVpnServerConfigVpnClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput)
}

// VPN client root certificate of P2SVpnServerConfiguration.
type P2SVpnServerConfigVpnClientRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*P2SVpnServerConfigVpnClientRootCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) ToP2SVpnServerConfigVpnClientRootCertificateResponseOutput() P2SVpnServerConfigVpnClientRootCertificateResponseOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) ToP2SVpnServerConfigVpnClientRootCertificateResponseOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN client root certificate resource.
func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The certificate public data.
func (o P2SVpnServerConfigVpnClientRootCertificateResponseOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v P2SVpnServerConfigVpnClientRootCertificateResponse) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]P2SVpnServerConfigVpnClientRootCertificateResponse)(nil)).Elem()
}

func (o P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput) ToP2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput() P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput) ToP2SVpnServerConfigVpnClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) P2SVpnServerConfigVpnClientRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) P2SVpnServerConfigVpnClientRootCertificateResponse {
		return vs[0].([]P2SVpnServerConfigVpnClientRootCertificateResponse)[vs[1].(int)]
	}).(P2SVpnServerConfigVpnClientRootCertificateResponseOutput)
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilter struct {
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalIPAddress *string `pulumi:"localIPAddress"`
	// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalPort *string `pulumi:"localPort"`
	// Protocol to be filtered on.
	Protocol *string `pulumi:"protocol"`
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemoteIPAddress *string `pulumi:"remoteIPAddress"`
	// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemotePort *string `pulumi:"remotePort"`
}

// PacketCaptureFilterInput is an input type that accepts PacketCaptureFilterArgs and PacketCaptureFilterOutput values.
// You can construct a concrete instance of `PacketCaptureFilterInput` via:
//
//          PacketCaptureFilterArgs{...}
type PacketCaptureFilterInput interface {
	pulumi.Input

	ToPacketCaptureFilterOutput() PacketCaptureFilterOutput
	ToPacketCaptureFilterOutputWithContext(context.Context) PacketCaptureFilterOutput
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterArgs struct {
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalIPAddress pulumi.StringPtrInput `pulumi:"localIPAddress"`
	// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalPort pulumi.StringPtrInput `pulumi:"localPort"`
	// Protocol to be filtered on.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemoteIPAddress pulumi.StringPtrInput `pulumi:"remoteIPAddress"`
	// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemotePort pulumi.StringPtrInput `pulumi:"remotePort"`
}

func (PacketCaptureFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureFilter)(nil)).Elem()
}

func (i PacketCaptureFilterArgs) ToPacketCaptureFilterOutput() PacketCaptureFilterOutput {
	return i.ToPacketCaptureFilterOutputWithContext(context.Background())
}

func (i PacketCaptureFilterArgs) ToPacketCaptureFilterOutputWithContext(ctx context.Context) PacketCaptureFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureFilterOutput)
}

// PacketCaptureFilterArrayInput is an input type that accepts PacketCaptureFilterArray and PacketCaptureFilterArrayOutput values.
// You can construct a concrete instance of `PacketCaptureFilterArrayInput` via:
//
//          PacketCaptureFilterArray{ PacketCaptureFilterArgs{...} }
type PacketCaptureFilterArrayInput interface {
	pulumi.Input

	ToPacketCaptureFilterArrayOutput() PacketCaptureFilterArrayOutput
	ToPacketCaptureFilterArrayOutputWithContext(context.Context) PacketCaptureFilterArrayOutput
}

type PacketCaptureFilterArray []PacketCaptureFilterInput

func (PacketCaptureFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketCaptureFilter)(nil)).Elem()
}

func (i PacketCaptureFilterArray) ToPacketCaptureFilterArrayOutput() PacketCaptureFilterArrayOutput {
	return i.ToPacketCaptureFilterArrayOutputWithContext(context.Background())
}

func (i PacketCaptureFilterArray) ToPacketCaptureFilterArrayOutputWithContext(ctx context.Context) PacketCaptureFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureFilterArrayOutput)
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureFilter)(nil)).Elem()
}

func (o PacketCaptureFilterOutput) ToPacketCaptureFilterOutput() PacketCaptureFilterOutput {
	return o
}

func (o PacketCaptureFilterOutput) ToPacketCaptureFilterOutputWithContext(ctx context.Context) PacketCaptureFilterOutput {
	return o
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) LocalIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.LocalIPAddress }).(pulumi.StringPtrOutput)
}

// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) LocalPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.LocalPort }).(pulumi.StringPtrOutput)
}

// Protocol to be filtered on.
func (o PacketCaptureFilterOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) RemoteIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.RemoteIPAddress }).(pulumi.StringPtrOutput)
}

// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) RemotePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.RemotePort }).(pulumi.StringPtrOutput)
}

type PacketCaptureFilterArrayOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketCaptureFilter)(nil)).Elem()
}

func (o PacketCaptureFilterArrayOutput) ToPacketCaptureFilterArrayOutput() PacketCaptureFilterArrayOutput {
	return o
}

func (o PacketCaptureFilterArrayOutput) ToPacketCaptureFilterArrayOutputWithContext(ctx context.Context) PacketCaptureFilterArrayOutput {
	return o
}

func (o PacketCaptureFilterArrayOutput) Index(i pulumi.IntInput) PacketCaptureFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PacketCaptureFilter {
		return vs[0].([]PacketCaptureFilter)[vs[1].(int)]
	}).(PacketCaptureFilterOutput)
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterResponse struct {
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalIPAddress *string `pulumi:"localIPAddress"`
	// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalPort *string `pulumi:"localPort"`
	// Protocol to be filtered on.
	Protocol *string `pulumi:"protocol"`
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemoteIPAddress *string `pulumi:"remoteIPAddress"`
	// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemotePort *string `pulumi:"remotePort"`
}

// PacketCaptureFilterResponseInput is an input type that accepts PacketCaptureFilterResponseArgs and PacketCaptureFilterResponseOutput values.
// You can construct a concrete instance of `PacketCaptureFilterResponseInput` via:
//
//          PacketCaptureFilterResponseArgs{...}
type PacketCaptureFilterResponseInput interface {
	pulumi.Input

	ToPacketCaptureFilterResponseOutput() PacketCaptureFilterResponseOutput
	ToPacketCaptureFilterResponseOutputWithContext(context.Context) PacketCaptureFilterResponseOutput
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterResponseArgs struct {
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalIPAddress pulumi.StringPtrInput `pulumi:"localIPAddress"`
	// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalPort pulumi.StringPtrInput `pulumi:"localPort"`
	// Protocol to be filtered on.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemoteIPAddress pulumi.StringPtrInput `pulumi:"remoteIPAddress"`
	// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemotePort pulumi.StringPtrInput `pulumi:"remotePort"`
}

func (PacketCaptureFilterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureFilterResponse)(nil)).Elem()
}

func (i PacketCaptureFilterResponseArgs) ToPacketCaptureFilterResponseOutput() PacketCaptureFilterResponseOutput {
	return i.ToPacketCaptureFilterResponseOutputWithContext(context.Background())
}

func (i PacketCaptureFilterResponseArgs) ToPacketCaptureFilterResponseOutputWithContext(ctx context.Context) PacketCaptureFilterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureFilterResponseOutput)
}

// PacketCaptureFilterResponseArrayInput is an input type that accepts PacketCaptureFilterResponseArray and PacketCaptureFilterResponseArrayOutput values.
// You can construct a concrete instance of `PacketCaptureFilterResponseArrayInput` via:
//
//          PacketCaptureFilterResponseArray{ PacketCaptureFilterResponseArgs{...} }
type PacketCaptureFilterResponseArrayInput interface {
	pulumi.Input

	ToPacketCaptureFilterResponseArrayOutput() PacketCaptureFilterResponseArrayOutput
	ToPacketCaptureFilterResponseArrayOutputWithContext(context.Context) PacketCaptureFilterResponseArrayOutput
}

type PacketCaptureFilterResponseArray []PacketCaptureFilterResponseInput

func (PacketCaptureFilterResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketCaptureFilterResponse)(nil)).Elem()
}

func (i PacketCaptureFilterResponseArray) ToPacketCaptureFilterResponseArrayOutput() PacketCaptureFilterResponseArrayOutput {
	return i.ToPacketCaptureFilterResponseArrayOutputWithContext(context.Background())
}

func (i PacketCaptureFilterResponseArray) ToPacketCaptureFilterResponseArrayOutputWithContext(ctx context.Context) PacketCaptureFilterResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureFilterResponseArrayOutput)
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterResponseOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureFilterResponse)(nil)).Elem()
}

func (o PacketCaptureFilterResponseOutput) ToPacketCaptureFilterResponseOutput() PacketCaptureFilterResponseOutput {
	return o
}

func (o PacketCaptureFilterResponseOutput) ToPacketCaptureFilterResponseOutputWithContext(ctx context.Context) PacketCaptureFilterResponseOutput {
	return o
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) LocalIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.LocalIPAddress }).(pulumi.StringPtrOutput)
}

// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) LocalPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.LocalPort }).(pulumi.StringPtrOutput)
}

// Protocol to be filtered on.
func (o PacketCaptureFilterResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) RemoteIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.RemoteIPAddress }).(pulumi.StringPtrOutput)
}

// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) RemotePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.RemotePort }).(pulumi.StringPtrOutput)
}

type PacketCaptureFilterResponseArrayOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketCaptureFilterResponse)(nil)).Elem()
}

func (o PacketCaptureFilterResponseArrayOutput) ToPacketCaptureFilterResponseArrayOutput() PacketCaptureFilterResponseArrayOutput {
	return o
}

func (o PacketCaptureFilterResponseArrayOutput) ToPacketCaptureFilterResponseArrayOutputWithContext(ctx context.Context) PacketCaptureFilterResponseArrayOutput {
	return o
}

func (o PacketCaptureFilterResponseArrayOutput) Index(i pulumi.IntInput) PacketCaptureFilterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PacketCaptureFilterResponse {
		return vs[0].([]PacketCaptureFilterResponse)[vs[1].(int)]
	}).(PacketCaptureFilterResponseOutput)
}

// The storage location for a packet capture session.
type PacketCaptureStorageLocation struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
	FilePath *string `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
	StorageId *string `pulumi:"storageId"`
	// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
	StoragePath *string `pulumi:"storagePath"`
}

// PacketCaptureStorageLocationInput is an input type that accepts PacketCaptureStorageLocationArgs and PacketCaptureStorageLocationOutput values.
// You can construct a concrete instance of `PacketCaptureStorageLocationInput` via:
//
//          PacketCaptureStorageLocationArgs{...}
type PacketCaptureStorageLocationInput interface {
	pulumi.Input

	ToPacketCaptureStorageLocationOutput() PacketCaptureStorageLocationOutput
	ToPacketCaptureStorageLocationOutputWithContext(context.Context) PacketCaptureStorageLocationOutput
}

// The storage location for a packet capture session.
type PacketCaptureStorageLocationArgs struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
	StorageId pulumi.StringPtrInput `pulumi:"storageId"`
	// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
	StoragePath pulumi.StringPtrInput `pulumi:"storagePath"`
}

func (PacketCaptureStorageLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureStorageLocation)(nil)).Elem()
}

func (i PacketCaptureStorageLocationArgs) ToPacketCaptureStorageLocationOutput() PacketCaptureStorageLocationOutput {
	return i.ToPacketCaptureStorageLocationOutputWithContext(context.Background())
}

func (i PacketCaptureStorageLocationArgs) ToPacketCaptureStorageLocationOutputWithContext(ctx context.Context) PacketCaptureStorageLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationOutput)
}

func (i PacketCaptureStorageLocationArgs) ToPacketCaptureStorageLocationPtrOutput() PacketCaptureStorageLocationPtrOutput {
	return i.ToPacketCaptureStorageLocationPtrOutputWithContext(context.Background())
}

func (i PacketCaptureStorageLocationArgs) ToPacketCaptureStorageLocationPtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationOutput).ToPacketCaptureStorageLocationPtrOutputWithContext(ctx)
}

// PacketCaptureStorageLocationPtrInput is an input type that accepts PacketCaptureStorageLocationArgs, PacketCaptureStorageLocationPtr and PacketCaptureStorageLocationPtrOutput values.
// You can construct a concrete instance of `PacketCaptureStorageLocationPtrInput` via:
//
//          PacketCaptureStorageLocationArgs{...}
//
//  or:
//
//          nil
type PacketCaptureStorageLocationPtrInput interface {
	pulumi.Input

	ToPacketCaptureStorageLocationPtrOutput() PacketCaptureStorageLocationPtrOutput
	ToPacketCaptureStorageLocationPtrOutputWithContext(context.Context) PacketCaptureStorageLocationPtrOutput
}

type packetCaptureStorageLocationPtrType PacketCaptureStorageLocationArgs

func PacketCaptureStorageLocationPtr(v *PacketCaptureStorageLocationArgs) PacketCaptureStorageLocationPtrInput {
	return (*packetCaptureStorageLocationPtrType)(v)
}

func (*packetCaptureStorageLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCaptureStorageLocation)(nil)).Elem()
}

func (i *packetCaptureStorageLocationPtrType) ToPacketCaptureStorageLocationPtrOutput() PacketCaptureStorageLocationPtrOutput {
	return i.ToPacketCaptureStorageLocationPtrOutputWithContext(context.Background())
}

func (i *packetCaptureStorageLocationPtrType) ToPacketCaptureStorageLocationPtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationPtrOutput)
}

// The storage location for a packet capture session.
type PacketCaptureStorageLocationOutput struct{ *pulumi.OutputState }

func (PacketCaptureStorageLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureStorageLocation)(nil)).Elem()
}

func (o PacketCaptureStorageLocationOutput) ToPacketCaptureStorageLocationOutput() PacketCaptureStorageLocationOutput {
	return o
}

func (o PacketCaptureStorageLocationOutput) ToPacketCaptureStorageLocationOutputWithContext(ctx context.Context) PacketCaptureStorageLocationOutput {
	return o
}

func (o PacketCaptureStorageLocationOutput) ToPacketCaptureStorageLocationPtrOutput() PacketCaptureStorageLocationPtrOutput {
	return o.ToPacketCaptureStorageLocationPtrOutputWithContext(context.Background())
}

func (o PacketCaptureStorageLocationOutput) ToPacketCaptureStorageLocationPtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocation) *PacketCaptureStorageLocation {
		return &v
	}).(PacketCaptureStorageLocationPtrOutput)
}

// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
func (o PacketCaptureStorageLocationOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocation) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
func (o PacketCaptureStorageLocationOutput) StorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocation) *string { return v.StorageId }).(pulumi.StringPtrOutput)
}

// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
func (o PacketCaptureStorageLocationOutput) StoragePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocation) *string { return v.StoragePath }).(pulumi.StringPtrOutput)
}

type PacketCaptureStorageLocationPtrOutput struct{ *pulumi.OutputState }

func (PacketCaptureStorageLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCaptureStorageLocation)(nil)).Elem()
}

func (o PacketCaptureStorageLocationPtrOutput) ToPacketCaptureStorageLocationPtrOutput() PacketCaptureStorageLocationPtrOutput {
	return o
}

func (o PacketCaptureStorageLocationPtrOutput) ToPacketCaptureStorageLocationPtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationPtrOutput {
	return o
}

func (o PacketCaptureStorageLocationPtrOutput) Elem() PacketCaptureStorageLocationOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocation) PacketCaptureStorageLocation { return *v }).(PacketCaptureStorageLocationOutput)
}

// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
func (o PacketCaptureStorageLocationPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocation) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
func (o PacketCaptureStorageLocationPtrOutput) StorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocation) *string {
		if v == nil {
			return nil
		}
		return v.StorageId
	}).(pulumi.StringPtrOutput)
}

// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
func (o PacketCaptureStorageLocationPtrOutput) StoragePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocation) *string {
		if v == nil {
			return nil
		}
		return v.StoragePath
	}).(pulumi.StringPtrOutput)
}

// The storage location for a packet capture session.
type PacketCaptureStorageLocationResponse struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
	FilePath *string `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
	StorageId *string `pulumi:"storageId"`
	// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
	StoragePath *string `pulumi:"storagePath"`
}

// PacketCaptureStorageLocationResponseInput is an input type that accepts PacketCaptureStorageLocationResponseArgs and PacketCaptureStorageLocationResponseOutput values.
// You can construct a concrete instance of `PacketCaptureStorageLocationResponseInput` via:
//
//          PacketCaptureStorageLocationResponseArgs{...}
type PacketCaptureStorageLocationResponseInput interface {
	pulumi.Input

	ToPacketCaptureStorageLocationResponseOutput() PacketCaptureStorageLocationResponseOutput
	ToPacketCaptureStorageLocationResponseOutputWithContext(context.Context) PacketCaptureStorageLocationResponseOutput
}

// The storage location for a packet capture session.
type PacketCaptureStorageLocationResponseArgs struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
	StorageId pulumi.StringPtrInput `pulumi:"storageId"`
	// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
	StoragePath pulumi.StringPtrInput `pulumi:"storagePath"`
}

func (PacketCaptureStorageLocationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureStorageLocationResponse)(nil)).Elem()
}

func (i PacketCaptureStorageLocationResponseArgs) ToPacketCaptureStorageLocationResponseOutput() PacketCaptureStorageLocationResponseOutput {
	return i.ToPacketCaptureStorageLocationResponseOutputWithContext(context.Background())
}

func (i PacketCaptureStorageLocationResponseArgs) ToPacketCaptureStorageLocationResponseOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationResponseOutput)
}

func (i PacketCaptureStorageLocationResponseArgs) ToPacketCaptureStorageLocationResponsePtrOutput() PacketCaptureStorageLocationResponsePtrOutput {
	return i.ToPacketCaptureStorageLocationResponsePtrOutputWithContext(context.Background())
}

func (i PacketCaptureStorageLocationResponseArgs) ToPacketCaptureStorageLocationResponsePtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationResponseOutput).ToPacketCaptureStorageLocationResponsePtrOutputWithContext(ctx)
}

// PacketCaptureStorageLocationResponsePtrInput is an input type that accepts PacketCaptureStorageLocationResponseArgs, PacketCaptureStorageLocationResponsePtr and PacketCaptureStorageLocationResponsePtrOutput values.
// You can construct a concrete instance of `PacketCaptureStorageLocationResponsePtrInput` via:
//
//          PacketCaptureStorageLocationResponseArgs{...}
//
//  or:
//
//          nil
type PacketCaptureStorageLocationResponsePtrInput interface {
	pulumi.Input

	ToPacketCaptureStorageLocationResponsePtrOutput() PacketCaptureStorageLocationResponsePtrOutput
	ToPacketCaptureStorageLocationResponsePtrOutputWithContext(context.Context) PacketCaptureStorageLocationResponsePtrOutput
}

type packetCaptureStorageLocationResponsePtrType PacketCaptureStorageLocationResponseArgs

func PacketCaptureStorageLocationResponsePtr(v *PacketCaptureStorageLocationResponseArgs) PacketCaptureStorageLocationResponsePtrInput {
	return (*packetCaptureStorageLocationResponsePtrType)(v)
}

func (*packetCaptureStorageLocationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCaptureStorageLocationResponse)(nil)).Elem()
}

func (i *packetCaptureStorageLocationResponsePtrType) ToPacketCaptureStorageLocationResponsePtrOutput() PacketCaptureStorageLocationResponsePtrOutput {
	return i.ToPacketCaptureStorageLocationResponsePtrOutputWithContext(context.Background())
}

func (i *packetCaptureStorageLocationResponsePtrType) ToPacketCaptureStorageLocationResponsePtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationResponsePtrOutput)
}

// The storage location for a packet capture session.
type PacketCaptureStorageLocationResponseOutput struct{ *pulumi.OutputState }

func (PacketCaptureStorageLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureStorageLocationResponse)(nil)).Elem()
}

func (o PacketCaptureStorageLocationResponseOutput) ToPacketCaptureStorageLocationResponseOutput() PacketCaptureStorageLocationResponseOutput {
	return o
}

func (o PacketCaptureStorageLocationResponseOutput) ToPacketCaptureStorageLocationResponseOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponseOutput {
	return o
}

func (o PacketCaptureStorageLocationResponseOutput) ToPacketCaptureStorageLocationResponsePtrOutput() PacketCaptureStorageLocationResponsePtrOutput {
	return o.ToPacketCaptureStorageLocationResponsePtrOutputWithContext(context.Background())
}

func (o PacketCaptureStorageLocationResponseOutput) ToPacketCaptureStorageLocationResponsePtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponsePtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocationResponse) *PacketCaptureStorageLocationResponse {
		return &v
	}).(PacketCaptureStorageLocationResponsePtrOutput)
}

// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
func (o PacketCaptureStorageLocationResponseOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocationResponse) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
func (o PacketCaptureStorageLocationResponseOutput) StorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocationResponse) *string { return v.StorageId }).(pulumi.StringPtrOutput)
}

// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
func (o PacketCaptureStorageLocationResponseOutput) StoragePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocationResponse) *string { return v.StoragePath }).(pulumi.StringPtrOutput)
}

type PacketCaptureStorageLocationResponsePtrOutput struct{ *pulumi.OutputState }

func (PacketCaptureStorageLocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCaptureStorageLocationResponse)(nil)).Elem()
}

func (o PacketCaptureStorageLocationResponsePtrOutput) ToPacketCaptureStorageLocationResponsePtrOutput() PacketCaptureStorageLocationResponsePtrOutput {
	return o
}

func (o PacketCaptureStorageLocationResponsePtrOutput) ToPacketCaptureStorageLocationResponsePtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponsePtrOutput {
	return o
}

func (o PacketCaptureStorageLocationResponsePtrOutput) Elem() PacketCaptureStorageLocationResponseOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocationResponse) PacketCaptureStorageLocationResponse { return *v }).(PacketCaptureStorageLocationResponseOutput)
}

// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
func (o PacketCaptureStorageLocationResponsePtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
func (o PacketCaptureStorageLocationResponsePtrOutput) StorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageId
	}).(pulumi.StringPtrOutput)
}

// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
func (o PacketCaptureStorageLocationResponsePtrOutput) StoragePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.StoragePath
	}).(pulumi.StringPtrOutput)
}

// Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type PeerExpressRouteCircuitConnectionResponse struct {
	// /29 IP address space to carve out Customer addresses for tunnels.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// The resource guid of the authorization used for the express route circuit connection.
	AuthResourceGuid *string `pulumi:"authResourceGuid"`
	// Express Route Circuit connection state.
	CircuitConnectionStatus string `pulumi:"circuitConnectionStatus"`
	// The name of the express route circuit connection resource.
	ConnectionName *string `pulumi:"connectionName"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Reference to Express Route Circuit Private Peering Resource of the circuit.
	ExpressRouteCircuitPeering *SubResourceResponse `pulumi:"expressRouteCircuitPeering"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
	PeerExpressRouteCircuitPeering *SubResourceResponse `pulumi:"peerExpressRouteCircuitPeering"`
	// The provisioning state of the peer express route circuit connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// PeerExpressRouteCircuitConnectionResponseInput is an input type that accepts PeerExpressRouteCircuitConnectionResponseArgs and PeerExpressRouteCircuitConnectionResponseOutput values.
// You can construct a concrete instance of `PeerExpressRouteCircuitConnectionResponseInput` via:
//
//          PeerExpressRouteCircuitConnectionResponseArgs{...}
type PeerExpressRouteCircuitConnectionResponseInput interface {
	pulumi.Input

	ToPeerExpressRouteCircuitConnectionResponseOutput() PeerExpressRouteCircuitConnectionResponseOutput
	ToPeerExpressRouteCircuitConnectionResponseOutputWithContext(context.Context) PeerExpressRouteCircuitConnectionResponseOutput
}

// Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type PeerExpressRouteCircuitConnectionResponseArgs struct {
	// /29 IP address space to carve out Customer addresses for tunnels.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// The resource guid of the authorization used for the express route circuit connection.
	AuthResourceGuid pulumi.StringPtrInput `pulumi:"authResourceGuid"`
	// Express Route Circuit connection state.
	CircuitConnectionStatus pulumi.StringInput `pulumi:"circuitConnectionStatus"`
	// The name of the express route circuit connection resource.
	ConnectionName pulumi.StringPtrInput `pulumi:"connectionName"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Reference to Express Route Circuit Private Peering Resource of the circuit.
	ExpressRouteCircuitPeering SubResourceResponsePtrInput `pulumi:"expressRouteCircuitPeering"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
	PeerExpressRouteCircuitPeering SubResourceResponsePtrInput `pulumi:"peerExpressRouteCircuitPeering"`
	// The provisioning state of the peer express route circuit connection resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PeerExpressRouteCircuitConnectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (i PeerExpressRouteCircuitConnectionResponseArgs) ToPeerExpressRouteCircuitConnectionResponseOutput() PeerExpressRouteCircuitConnectionResponseOutput {
	return i.ToPeerExpressRouteCircuitConnectionResponseOutputWithContext(context.Background())
}

func (i PeerExpressRouteCircuitConnectionResponseArgs) ToPeerExpressRouteCircuitConnectionResponseOutputWithContext(ctx context.Context) PeerExpressRouteCircuitConnectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerExpressRouteCircuitConnectionResponseOutput)
}

// PeerExpressRouteCircuitConnectionResponseArrayInput is an input type that accepts PeerExpressRouteCircuitConnectionResponseArray and PeerExpressRouteCircuitConnectionResponseArrayOutput values.
// You can construct a concrete instance of `PeerExpressRouteCircuitConnectionResponseArrayInput` via:
//
//          PeerExpressRouteCircuitConnectionResponseArray{ PeerExpressRouteCircuitConnectionResponseArgs{...} }
type PeerExpressRouteCircuitConnectionResponseArrayInput interface {
	pulumi.Input

	ToPeerExpressRouteCircuitConnectionResponseArrayOutput() PeerExpressRouteCircuitConnectionResponseArrayOutput
	ToPeerExpressRouteCircuitConnectionResponseArrayOutputWithContext(context.Context) PeerExpressRouteCircuitConnectionResponseArrayOutput
}

type PeerExpressRouteCircuitConnectionResponseArray []PeerExpressRouteCircuitConnectionResponseInput

func (PeerExpressRouteCircuitConnectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PeerExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (i PeerExpressRouteCircuitConnectionResponseArray) ToPeerExpressRouteCircuitConnectionResponseArrayOutput() PeerExpressRouteCircuitConnectionResponseArrayOutput {
	return i.ToPeerExpressRouteCircuitConnectionResponseArrayOutputWithContext(context.Background())
}

func (i PeerExpressRouteCircuitConnectionResponseArray) ToPeerExpressRouteCircuitConnectionResponseArrayOutputWithContext(ctx context.Context) PeerExpressRouteCircuitConnectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PeerExpressRouteCircuitConnectionResponseArrayOutput)
}

// Peer Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type PeerExpressRouteCircuitConnectionResponseOutput struct{ *pulumi.OutputState }

func (PeerExpressRouteCircuitConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PeerExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (o PeerExpressRouteCircuitConnectionResponseOutput) ToPeerExpressRouteCircuitConnectionResponseOutput() PeerExpressRouteCircuitConnectionResponseOutput {
	return o
}

func (o PeerExpressRouteCircuitConnectionResponseOutput) ToPeerExpressRouteCircuitConnectionResponseOutputWithContext(ctx context.Context) PeerExpressRouteCircuitConnectionResponseOutput {
	return o
}

// /29 IP address space to carve out Customer addresses for tunnels.
func (o PeerExpressRouteCircuitConnectionResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// The resource guid of the authorization used for the express route circuit connection.
func (o PeerExpressRouteCircuitConnectionResponseOutput) AuthResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) *string { return v.AuthResourceGuid }).(pulumi.StringPtrOutput)
}

// Express Route Circuit connection state.
func (o PeerExpressRouteCircuitConnectionResponseOutput) CircuitConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) string { return v.CircuitConnectionStatus }).(pulumi.StringOutput)
}

// The name of the express route circuit connection resource.
func (o PeerExpressRouteCircuitConnectionResponseOutput) ConnectionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) *string { return v.ConnectionName }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PeerExpressRouteCircuitConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the circuit.
func (o PeerExpressRouteCircuitConnectionResponseOutput) ExpressRouteCircuitPeering() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) *SubResourceResponse {
		return v.ExpressRouteCircuitPeering
	}).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o PeerExpressRouteCircuitConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o PeerExpressRouteCircuitConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
func (o PeerExpressRouteCircuitConnectionResponseOutput) PeerExpressRouteCircuitPeering() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) *SubResourceResponse {
		return v.PeerExpressRouteCircuitPeering
	}).(SubResourceResponsePtrOutput)
}

// The provisioning state of the peer express route circuit connection resource.
func (o PeerExpressRouteCircuitConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Type of the resource.
func (o PeerExpressRouteCircuitConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PeerExpressRouteCircuitConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PeerExpressRouteCircuitConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PeerExpressRouteCircuitConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PeerExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (o PeerExpressRouteCircuitConnectionResponseArrayOutput) ToPeerExpressRouteCircuitConnectionResponseArrayOutput() PeerExpressRouteCircuitConnectionResponseArrayOutput {
	return o
}

func (o PeerExpressRouteCircuitConnectionResponseArrayOutput) ToPeerExpressRouteCircuitConnectionResponseArrayOutputWithContext(ctx context.Context) PeerExpressRouteCircuitConnectionResponseArrayOutput {
	return o
}

func (o PeerExpressRouteCircuitConnectionResponseArrayOutput) Index(i pulumi.IntInput) PeerExpressRouteCircuitConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PeerExpressRouteCircuitConnectionResponse {
		return vs[0].([]PeerExpressRouteCircuitConnectionResponse)[vs[1].(int)]
	}).(PeerExpressRouteCircuitConnectionResponseOutput)
}

// Defines contents of a web application firewall global configuration.
type PolicySettings struct {
	// Maximum file upload size in Mb for WAF.
	FileUploadLimitInMb *int `pulumi:"fileUploadLimitInMb"`
	// Maximum request body size in Kb for WAF.
	MaxRequestBodySizeInKb *int `pulumi:"maxRequestBodySizeInKb"`
	// The mode of the policy.
	Mode *string `pulumi:"mode"`
	// Whether to allow WAF to check request Body.
	RequestBodyCheck *bool `pulumi:"requestBodyCheck"`
	// The state of the policy.
	State *string `pulumi:"state"`
}

// PolicySettingsInput is an input type that accepts PolicySettingsArgs and PolicySettingsOutput values.
// You can construct a concrete instance of `PolicySettingsInput` via:
//
//          PolicySettingsArgs{...}
type PolicySettingsInput interface {
	pulumi.Input

	ToPolicySettingsOutput() PolicySettingsOutput
	ToPolicySettingsOutputWithContext(context.Context) PolicySettingsOutput
}

// Defines contents of a web application firewall global configuration.
type PolicySettingsArgs struct {
	// Maximum file upload size in Mb for WAF.
	FileUploadLimitInMb pulumi.IntPtrInput `pulumi:"fileUploadLimitInMb"`
	// Maximum request body size in Kb for WAF.
	MaxRequestBodySizeInKb pulumi.IntPtrInput `pulumi:"maxRequestBodySizeInKb"`
	// The mode of the policy.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Whether to allow WAF to check request Body.
	RequestBodyCheck pulumi.BoolPtrInput `pulumi:"requestBodyCheck"`
	// The state of the policy.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (PolicySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettings)(nil)).Elem()
}

func (i PolicySettingsArgs) ToPolicySettingsOutput() PolicySettingsOutput {
	return i.ToPolicySettingsOutputWithContext(context.Background())
}

func (i PolicySettingsArgs) ToPolicySettingsOutputWithContext(ctx context.Context) PolicySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsOutput)
}

func (i PolicySettingsArgs) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return i.ToPolicySettingsPtrOutputWithContext(context.Background())
}

func (i PolicySettingsArgs) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsOutput).ToPolicySettingsPtrOutputWithContext(ctx)
}

// PolicySettingsPtrInput is an input type that accepts PolicySettingsArgs, PolicySettingsPtr and PolicySettingsPtrOutput values.
// You can construct a concrete instance of `PolicySettingsPtrInput` via:
//
//          PolicySettingsArgs{...}
//
//  or:
//
//          nil
type PolicySettingsPtrInput interface {
	pulumi.Input

	ToPolicySettingsPtrOutput() PolicySettingsPtrOutput
	ToPolicySettingsPtrOutputWithContext(context.Context) PolicySettingsPtrOutput
}

type policySettingsPtrType PolicySettingsArgs

func PolicySettingsPtr(v *PolicySettingsArgs) PolicySettingsPtrInput {
	return (*policySettingsPtrType)(v)
}

func (*policySettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettings)(nil)).Elem()
}

func (i *policySettingsPtrType) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return i.ToPolicySettingsPtrOutputWithContext(context.Background())
}

func (i *policySettingsPtrType) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsPtrOutput)
}

// Defines contents of a web application firewall global configuration.
type PolicySettingsOutput struct{ *pulumi.OutputState }

func (PolicySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettings)(nil)).Elem()
}

func (o PolicySettingsOutput) ToPolicySettingsOutput() PolicySettingsOutput {
	return o
}

func (o PolicySettingsOutput) ToPolicySettingsOutputWithContext(ctx context.Context) PolicySettingsOutput {
	return o
}

func (o PolicySettingsOutput) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return o.ToPolicySettingsPtrOutputWithContext(context.Background())
}

func (o PolicySettingsOutput) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return o.ApplyT(func(v PolicySettings) *PolicySettings {
		return &v
	}).(PolicySettingsPtrOutput)
}

// Maximum file upload size in Mb for WAF.
func (o PolicySettingsOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettings) *int { return v.FileUploadLimitInMb }).(pulumi.IntPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o PolicySettingsOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettings) *int { return v.MaxRequestBodySizeInKb }).(pulumi.IntPtrOutput)
}

// The mode of the policy.
func (o PolicySettingsOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettings) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Whether to allow WAF to check request Body.
func (o PolicySettingsOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicySettings) *bool { return v.RequestBodyCheck }).(pulumi.BoolPtrOutput)
}

// The state of the policy.
func (o PolicySettingsOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettings) *string { return v.State }).(pulumi.StringPtrOutput)
}

type PolicySettingsPtrOutput struct{ *pulumi.OutputState }

func (PolicySettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettings)(nil)).Elem()
}

func (o PolicySettingsPtrOutput) ToPolicySettingsPtrOutput() PolicySettingsPtrOutput {
	return o
}

func (o PolicySettingsPtrOutput) ToPolicySettingsPtrOutputWithContext(ctx context.Context) PolicySettingsPtrOutput {
	return o
}

func (o PolicySettingsPtrOutput) Elem() PolicySettingsOutput {
	return o.ApplyT(func(v *PolicySettings) PolicySettings { return *v }).(PolicySettingsOutput)
}

// Maximum file upload size in Mb for WAF.
func (o PolicySettingsPtrOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *int {
		if v == nil {
			return nil
		}
		return v.FileUploadLimitInMb
	}).(pulumi.IntPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o PolicySettingsPtrOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySizeInKb
	}).(pulumi.IntPtrOutput)
}

// The mode of the policy.
func (o PolicySettingsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Whether to allow WAF to check request Body.
func (o PolicySettingsPtrOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *bool {
		if v == nil {
			return nil
		}
		return v.RequestBodyCheck
	}).(pulumi.BoolPtrOutput)
}

// The state of the policy.
func (o PolicySettingsPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettings) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Defines contents of a web application firewall global configuration.
type PolicySettingsResponse struct {
	// Maximum file upload size in Mb for WAF.
	FileUploadLimitInMb *int `pulumi:"fileUploadLimitInMb"`
	// Maximum request body size in Kb for WAF.
	MaxRequestBodySizeInKb *int `pulumi:"maxRequestBodySizeInKb"`
	// The mode of the policy.
	Mode *string `pulumi:"mode"`
	// Whether to allow WAF to check request Body.
	RequestBodyCheck *bool `pulumi:"requestBodyCheck"`
	// The state of the policy.
	State *string `pulumi:"state"`
}

// PolicySettingsResponseInput is an input type that accepts PolicySettingsResponseArgs and PolicySettingsResponseOutput values.
// You can construct a concrete instance of `PolicySettingsResponseInput` via:
//
//          PolicySettingsResponseArgs{...}
type PolicySettingsResponseInput interface {
	pulumi.Input

	ToPolicySettingsResponseOutput() PolicySettingsResponseOutput
	ToPolicySettingsResponseOutputWithContext(context.Context) PolicySettingsResponseOutput
}

// Defines contents of a web application firewall global configuration.
type PolicySettingsResponseArgs struct {
	// Maximum file upload size in Mb for WAF.
	FileUploadLimitInMb pulumi.IntPtrInput `pulumi:"fileUploadLimitInMb"`
	// Maximum request body size in Kb for WAF.
	MaxRequestBodySizeInKb pulumi.IntPtrInput `pulumi:"maxRequestBodySizeInKb"`
	// The mode of the policy.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Whether to allow WAF to check request Body.
	RequestBodyCheck pulumi.BoolPtrInput `pulumi:"requestBodyCheck"`
	// The state of the policy.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (PolicySettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettingsResponse)(nil)).Elem()
}

func (i PolicySettingsResponseArgs) ToPolicySettingsResponseOutput() PolicySettingsResponseOutput {
	return i.ToPolicySettingsResponseOutputWithContext(context.Background())
}

func (i PolicySettingsResponseArgs) ToPolicySettingsResponseOutputWithContext(ctx context.Context) PolicySettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsResponseOutput)
}

func (i PolicySettingsResponseArgs) ToPolicySettingsResponsePtrOutput() PolicySettingsResponsePtrOutput {
	return i.ToPolicySettingsResponsePtrOutputWithContext(context.Background())
}

func (i PolicySettingsResponseArgs) ToPolicySettingsResponsePtrOutputWithContext(ctx context.Context) PolicySettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsResponseOutput).ToPolicySettingsResponsePtrOutputWithContext(ctx)
}

// PolicySettingsResponsePtrInput is an input type that accepts PolicySettingsResponseArgs, PolicySettingsResponsePtr and PolicySettingsResponsePtrOutput values.
// You can construct a concrete instance of `PolicySettingsResponsePtrInput` via:
//
//          PolicySettingsResponseArgs{...}
//
//  or:
//
//          nil
type PolicySettingsResponsePtrInput interface {
	pulumi.Input

	ToPolicySettingsResponsePtrOutput() PolicySettingsResponsePtrOutput
	ToPolicySettingsResponsePtrOutputWithContext(context.Context) PolicySettingsResponsePtrOutput
}

type policySettingsResponsePtrType PolicySettingsResponseArgs

func PolicySettingsResponsePtr(v *PolicySettingsResponseArgs) PolicySettingsResponsePtrInput {
	return (*policySettingsResponsePtrType)(v)
}

func (*policySettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettingsResponse)(nil)).Elem()
}

func (i *policySettingsResponsePtrType) ToPolicySettingsResponsePtrOutput() PolicySettingsResponsePtrOutput {
	return i.ToPolicySettingsResponsePtrOutputWithContext(context.Background())
}

func (i *policySettingsResponsePtrType) ToPolicySettingsResponsePtrOutputWithContext(ctx context.Context) PolicySettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySettingsResponsePtrOutput)
}

// Defines contents of a web application firewall global configuration.
type PolicySettingsResponseOutput struct{ *pulumi.OutputState }

func (PolicySettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySettingsResponse)(nil)).Elem()
}

func (o PolicySettingsResponseOutput) ToPolicySettingsResponseOutput() PolicySettingsResponseOutput {
	return o
}

func (o PolicySettingsResponseOutput) ToPolicySettingsResponseOutputWithContext(ctx context.Context) PolicySettingsResponseOutput {
	return o
}

func (o PolicySettingsResponseOutput) ToPolicySettingsResponsePtrOutput() PolicySettingsResponsePtrOutput {
	return o.ToPolicySettingsResponsePtrOutputWithContext(context.Background())
}

func (o PolicySettingsResponseOutput) ToPolicySettingsResponsePtrOutputWithContext(ctx context.Context) PolicySettingsResponsePtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *PolicySettingsResponse {
		return &v
	}).(PolicySettingsResponsePtrOutput)
}

// Maximum file upload size in Mb for WAF.
func (o PolicySettingsResponseOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *int { return v.FileUploadLimitInMb }).(pulumi.IntPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o PolicySettingsResponseOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *int { return v.MaxRequestBodySizeInKb }).(pulumi.IntPtrOutput)
}

// The mode of the policy.
func (o PolicySettingsResponseOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Whether to allow WAF to check request Body.
func (o PolicySettingsResponseOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *bool { return v.RequestBodyCheck }).(pulumi.BoolPtrOutput)
}

// The state of the policy.
func (o PolicySettingsResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySettingsResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type PolicySettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PolicySettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySettingsResponse)(nil)).Elem()
}

func (o PolicySettingsResponsePtrOutput) ToPolicySettingsResponsePtrOutput() PolicySettingsResponsePtrOutput {
	return o
}

func (o PolicySettingsResponsePtrOutput) ToPolicySettingsResponsePtrOutputWithContext(ctx context.Context) PolicySettingsResponsePtrOutput {
	return o
}

func (o PolicySettingsResponsePtrOutput) Elem() PolicySettingsResponseOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) PolicySettingsResponse { return *v }).(PolicySettingsResponseOutput)
}

// Maximum file upload size in Mb for WAF.
func (o PolicySettingsResponsePtrOutput) FileUploadLimitInMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.FileUploadLimitInMb
	}).(pulumi.IntPtrOutput)
}

// Maximum request body size in Kb for WAF.
func (o PolicySettingsResponsePtrOutput) MaxRequestBodySizeInKb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySizeInKb
	}).(pulumi.IntPtrOutput)
}

// The mode of the policy.
func (o PolicySettingsResponsePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Whether to allow WAF to check request Body.
func (o PolicySettingsResponsePtrOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequestBodyCheck
	}).(pulumi.BoolPtrOutput)
}

// The state of the policy.
func (o PolicySettingsResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// PrivateDnsZoneConfig resource.
type PrivateDnsZoneConfig struct {
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The resource id of the private dns zone.
	PrivateDnsZoneId *string `pulumi:"privateDnsZoneId"`
}

// PrivateDnsZoneConfigInput is an input type that accepts PrivateDnsZoneConfigArgs and PrivateDnsZoneConfigOutput values.
// You can construct a concrete instance of `PrivateDnsZoneConfigInput` via:
//
//          PrivateDnsZoneConfigArgs{...}
type PrivateDnsZoneConfigInput interface {
	pulumi.Input

	ToPrivateDnsZoneConfigOutput() PrivateDnsZoneConfigOutput
	ToPrivateDnsZoneConfigOutputWithContext(context.Context) PrivateDnsZoneConfigOutput
}

// PrivateDnsZoneConfig resource.
type PrivateDnsZoneConfigArgs struct {
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The resource id of the private dns zone.
	PrivateDnsZoneId pulumi.StringPtrInput `pulumi:"privateDnsZoneId"`
}

func (PrivateDnsZoneConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsZoneConfig)(nil)).Elem()
}

func (i PrivateDnsZoneConfigArgs) ToPrivateDnsZoneConfigOutput() PrivateDnsZoneConfigOutput {
	return i.ToPrivateDnsZoneConfigOutputWithContext(context.Background())
}

func (i PrivateDnsZoneConfigArgs) ToPrivateDnsZoneConfigOutputWithContext(ctx context.Context) PrivateDnsZoneConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsZoneConfigOutput)
}

// PrivateDnsZoneConfigArrayInput is an input type that accepts PrivateDnsZoneConfigArray and PrivateDnsZoneConfigArrayOutput values.
// You can construct a concrete instance of `PrivateDnsZoneConfigArrayInput` via:
//
//          PrivateDnsZoneConfigArray{ PrivateDnsZoneConfigArgs{...} }
type PrivateDnsZoneConfigArrayInput interface {
	pulumi.Input

	ToPrivateDnsZoneConfigArrayOutput() PrivateDnsZoneConfigArrayOutput
	ToPrivateDnsZoneConfigArrayOutputWithContext(context.Context) PrivateDnsZoneConfigArrayOutput
}

type PrivateDnsZoneConfigArray []PrivateDnsZoneConfigInput

func (PrivateDnsZoneConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateDnsZoneConfig)(nil)).Elem()
}

func (i PrivateDnsZoneConfigArray) ToPrivateDnsZoneConfigArrayOutput() PrivateDnsZoneConfigArrayOutput {
	return i.ToPrivateDnsZoneConfigArrayOutputWithContext(context.Background())
}

func (i PrivateDnsZoneConfigArray) ToPrivateDnsZoneConfigArrayOutputWithContext(ctx context.Context) PrivateDnsZoneConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsZoneConfigArrayOutput)
}

// PrivateDnsZoneConfig resource.
type PrivateDnsZoneConfigOutput struct{ *pulumi.OutputState }

func (PrivateDnsZoneConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsZoneConfig)(nil)).Elem()
}

func (o PrivateDnsZoneConfigOutput) ToPrivateDnsZoneConfigOutput() PrivateDnsZoneConfigOutput {
	return o
}

func (o PrivateDnsZoneConfigOutput) ToPrivateDnsZoneConfigOutputWithContext(ctx context.Context) PrivateDnsZoneConfigOutput {
	return o
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o PrivateDnsZoneConfigOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateDnsZoneConfig) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource id of the private dns zone.
func (o PrivateDnsZoneConfigOutput) PrivateDnsZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateDnsZoneConfig) *string { return v.PrivateDnsZoneId }).(pulumi.StringPtrOutput)
}

type PrivateDnsZoneConfigArrayOutput struct{ *pulumi.OutputState }

func (PrivateDnsZoneConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateDnsZoneConfig)(nil)).Elem()
}

func (o PrivateDnsZoneConfigArrayOutput) ToPrivateDnsZoneConfigArrayOutput() PrivateDnsZoneConfigArrayOutput {
	return o
}

func (o PrivateDnsZoneConfigArrayOutput) ToPrivateDnsZoneConfigArrayOutputWithContext(ctx context.Context) PrivateDnsZoneConfigArrayOutput {
	return o
}

func (o PrivateDnsZoneConfigArrayOutput) Index(i pulumi.IntInput) PrivateDnsZoneConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateDnsZoneConfig {
		return vs[0].([]PrivateDnsZoneConfig)[vs[1].(int)]
	}).(PrivateDnsZoneConfigOutput)
}

// PrivateDnsZoneConfig resource.
type PrivateDnsZoneConfigResponse struct {
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The resource id of the private dns zone.
	PrivateDnsZoneId *string `pulumi:"privateDnsZoneId"`
	// A collection of information regarding a recordSet, holding information to identify private resources.
	RecordSets []RecordSetResponse `pulumi:"recordSets"`
}

// PrivateDnsZoneConfigResponseInput is an input type that accepts PrivateDnsZoneConfigResponseArgs and PrivateDnsZoneConfigResponseOutput values.
// You can construct a concrete instance of `PrivateDnsZoneConfigResponseInput` via:
//
//          PrivateDnsZoneConfigResponseArgs{...}
type PrivateDnsZoneConfigResponseInput interface {
	pulumi.Input

	ToPrivateDnsZoneConfigResponseOutput() PrivateDnsZoneConfigResponseOutput
	ToPrivateDnsZoneConfigResponseOutputWithContext(context.Context) PrivateDnsZoneConfigResponseOutput
}

// PrivateDnsZoneConfig resource.
type PrivateDnsZoneConfigResponseArgs struct {
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The resource id of the private dns zone.
	PrivateDnsZoneId pulumi.StringPtrInput `pulumi:"privateDnsZoneId"`
	// A collection of information regarding a recordSet, holding information to identify private resources.
	RecordSets RecordSetResponseArrayInput `pulumi:"recordSets"`
}

func (PrivateDnsZoneConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsZoneConfigResponse)(nil)).Elem()
}

func (i PrivateDnsZoneConfigResponseArgs) ToPrivateDnsZoneConfigResponseOutput() PrivateDnsZoneConfigResponseOutput {
	return i.ToPrivateDnsZoneConfigResponseOutputWithContext(context.Background())
}

func (i PrivateDnsZoneConfigResponseArgs) ToPrivateDnsZoneConfigResponseOutputWithContext(ctx context.Context) PrivateDnsZoneConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsZoneConfigResponseOutput)
}

// PrivateDnsZoneConfigResponseArrayInput is an input type that accepts PrivateDnsZoneConfigResponseArray and PrivateDnsZoneConfigResponseArrayOutput values.
// You can construct a concrete instance of `PrivateDnsZoneConfigResponseArrayInput` via:
//
//          PrivateDnsZoneConfigResponseArray{ PrivateDnsZoneConfigResponseArgs{...} }
type PrivateDnsZoneConfigResponseArrayInput interface {
	pulumi.Input

	ToPrivateDnsZoneConfigResponseArrayOutput() PrivateDnsZoneConfigResponseArrayOutput
	ToPrivateDnsZoneConfigResponseArrayOutputWithContext(context.Context) PrivateDnsZoneConfigResponseArrayOutput
}

type PrivateDnsZoneConfigResponseArray []PrivateDnsZoneConfigResponseInput

func (PrivateDnsZoneConfigResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateDnsZoneConfigResponse)(nil)).Elem()
}

func (i PrivateDnsZoneConfigResponseArray) ToPrivateDnsZoneConfigResponseArrayOutput() PrivateDnsZoneConfigResponseArrayOutput {
	return i.ToPrivateDnsZoneConfigResponseArrayOutputWithContext(context.Background())
}

func (i PrivateDnsZoneConfigResponseArray) ToPrivateDnsZoneConfigResponseArrayOutputWithContext(ctx context.Context) PrivateDnsZoneConfigResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsZoneConfigResponseArrayOutput)
}

// PrivateDnsZoneConfig resource.
type PrivateDnsZoneConfigResponseOutput struct{ *pulumi.OutputState }

func (PrivateDnsZoneConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsZoneConfigResponse)(nil)).Elem()
}

func (o PrivateDnsZoneConfigResponseOutput) ToPrivateDnsZoneConfigResponseOutput() PrivateDnsZoneConfigResponseOutput {
	return o
}

func (o PrivateDnsZoneConfigResponseOutput) ToPrivateDnsZoneConfigResponseOutputWithContext(ctx context.Context) PrivateDnsZoneConfigResponseOutput {
	return o
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o PrivateDnsZoneConfigResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateDnsZoneConfigResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource id of the private dns zone.
func (o PrivateDnsZoneConfigResponseOutput) PrivateDnsZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateDnsZoneConfigResponse) *string { return v.PrivateDnsZoneId }).(pulumi.StringPtrOutput)
}

// A collection of information regarding a recordSet, holding information to identify private resources.
func (o PrivateDnsZoneConfigResponseOutput) RecordSets() RecordSetResponseArrayOutput {
	return o.ApplyT(func(v PrivateDnsZoneConfigResponse) []RecordSetResponse { return v.RecordSets }).(RecordSetResponseArrayOutput)
}

type PrivateDnsZoneConfigResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateDnsZoneConfigResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateDnsZoneConfigResponse)(nil)).Elem()
}

func (o PrivateDnsZoneConfigResponseArrayOutput) ToPrivateDnsZoneConfigResponseArrayOutput() PrivateDnsZoneConfigResponseArrayOutput {
	return o
}

func (o PrivateDnsZoneConfigResponseArrayOutput) ToPrivateDnsZoneConfigResponseArrayOutputWithContext(ctx context.Context) PrivateDnsZoneConfigResponseArrayOutput {
	return o
}

func (o PrivateDnsZoneConfigResponseArrayOutput) Index(i pulumi.IntInput) PrivateDnsZoneConfigResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateDnsZoneConfigResponse {
		return vs[0].([]PrivateDnsZoneConfigResponse)[vs[1].(int)]
	}).(PrivateDnsZoneConfigResponseOutput)
}

// PrivateEndpointConnection resource.
type PrivateEndpointConnectionResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The consumer link id.
	LinkIdentifier string `pulumi:"linkIdentifier"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint PrivateEndpointResponse `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource type.
	Type string `pulumi:"type"`
}

// PrivateEndpointConnectionResponseInput is an input type that accepts PrivateEndpointConnectionResponseArgs and PrivateEndpointConnectionResponseOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionResponseInput` via:
//
//          PrivateEndpointConnectionResponseArgs{...}
type PrivateEndpointConnectionResponseInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput
	ToPrivateEndpointConnectionResponseOutputWithContext(context.Context) PrivateEndpointConnectionResponseOutput
}

// PrivateEndpointConnection resource.
type PrivateEndpointConnectionResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The consumer link id.
	LinkIdentifier pulumi.StringInput `pulumi:"linkIdentifier"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The resource of private end point.
	PrivateEndpoint PrivateEndpointResponseInput `pulumi:"privateEndpoint"`
	// A collection of information about the state of the connection between service consumer and provider.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponsePtrInput `pulumi:"privateLinkServiceConnectionState"`
	// The provisioning state of the private endpoint connection resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PrivateEndpointConnectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (i PrivateEndpointConnectionResponseArgs) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return i.ToPrivateEndpointConnectionResponseOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionResponseArgs) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionResponseOutput)
}

// PrivateEndpointConnectionResponseArrayInput is an input type that accepts PrivateEndpointConnectionResponseArray and PrivateEndpointConnectionResponseArrayOutput values.
// You can construct a concrete instance of `PrivateEndpointConnectionResponseArrayInput` via:
//
//          PrivateEndpointConnectionResponseArray{ PrivateEndpointConnectionResponseArgs{...} }
type PrivateEndpointConnectionResponseArrayInput interface {
	pulumi.Input

	ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput
	ToPrivateEndpointConnectionResponseArrayOutputWithContext(context.Context) PrivateEndpointConnectionResponseArrayOutput
}

type PrivateEndpointConnectionResponseArray []PrivateEndpointConnectionResponseInput

func (PrivateEndpointConnectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (i PrivateEndpointConnectionResponseArray) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return i.ToPrivateEndpointConnectionResponseArrayOutputWithContext(context.Background())
}

func (i PrivateEndpointConnectionResponseArray) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointConnectionResponseArrayOutput)
}

// PrivateEndpointConnection resource.
type PrivateEndpointConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutput() PrivateEndpointConnectionResponseOutput {
	return o
}

func (o PrivateEndpointConnectionResponseOutput) ToPrivateEndpointConnectionResponseOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateEndpointConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o PrivateEndpointConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The consumer link id.
func (o PrivateEndpointConnectionResponseOutput) LinkIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.LinkIdentifier }).(pulumi.StringOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o PrivateEndpointConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The resource of private end point.
func (o PrivateEndpointConnectionResponseOutput) PrivateEndpoint() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) PrivateEndpointResponse { return v.PrivateEndpoint }).(PrivateEndpointResponseOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
func (o PrivateEndpointConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) *PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// The provisioning state of the private endpoint connection resource.
func (o PrivateEndpointConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource type.
func (o PrivateEndpointConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointConnectionResponse)(nil)).Elem()
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutput() PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) ToPrivateEndpointConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointConnectionResponseArrayOutput {
	return o
}

func (o PrivateEndpointConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointConnectionResponse {
		return vs[0].([]PrivateEndpointConnectionResponse)[vs[1].(int)]
	}).(PrivateEndpointConnectionResponseOutput)
}

// Private endpoint resource.
type PrivateEndpointResponse struct {
	// An array of custom dns configurations.
	CustomDnsConfigs []CustomDnsConfigPropertiesFormatResponse `pulumi:"customDnsConfigs"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
	ManualPrivateLinkServiceConnections []PrivateLinkServiceConnectionResponse `pulumi:"manualPrivateLinkServiceConnections"`
	// Resource name.
	Name string `pulumi:"name"`
	// An array of references to the network interfaces created for this private endpoint.
	NetworkInterfaces []NetworkInterfaceResponse `pulumi:"networkInterfaces"`
	// A grouping of information about the connection to the remote resource.
	PrivateLinkServiceConnections []PrivateLinkServiceConnectionResponse `pulumi:"privateLinkServiceConnections"`
	// The provisioning state of the private endpoint resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The ID of the subnet from which the private IP will be allocated.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// PrivateEndpointResponseInput is an input type that accepts PrivateEndpointResponseArgs and PrivateEndpointResponseOutput values.
// You can construct a concrete instance of `PrivateEndpointResponseInput` via:
//
//          PrivateEndpointResponseArgs{...}
type PrivateEndpointResponseInput interface {
	pulumi.Input

	ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput
	ToPrivateEndpointResponseOutputWithContext(context.Context) PrivateEndpointResponseOutput
}

// Private endpoint resource.
type PrivateEndpointResponseArgs struct {
	// An array of custom dns configurations.
	CustomDnsConfigs CustomDnsConfigPropertiesFormatResponseArrayInput `pulumi:"customDnsConfigs"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
	ManualPrivateLinkServiceConnections PrivateLinkServiceConnectionResponseArrayInput `pulumi:"manualPrivateLinkServiceConnections"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// An array of references to the network interfaces created for this private endpoint.
	NetworkInterfaces NetworkInterfaceResponseArrayInput `pulumi:"networkInterfaces"`
	// A grouping of information about the connection to the remote resource.
	PrivateLinkServiceConnections PrivateLinkServiceConnectionResponseArrayInput `pulumi:"privateLinkServiceConnections"`
	// The provisioning state of the private endpoint resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The ID of the subnet from which the private IP will be allocated.
	Subnet SubnetResponsePtrInput `pulumi:"subnet"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PrivateEndpointResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return i.ToPrivateEndpointResponseOutputWithContext(context.Background())
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointResponseOutput)
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return i.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (i PrivateEndpointResponseArgs) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointResponseOutput).ToPrivateEndpointResponsePtrOutputWithContext(ctx)
}

// PrivateEndpointResponsePtrInput is an input type that accepts PrivateEndpointResponseArgs, PrivateEndpointResponsePtr and PrivateEndpointResponsePtrOutput values.
// You can construct a concrete instance of `PrivateEndpointResponsePtrInput` via:
//
//          PrivateEndpointResponseArgs{...}
//
//  or:
//
//          nil
type PrivateEndpointResponsePtrInput interface {
	pulumi.Input

	ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput
	ToPrivateEndpointResponsePtrOutputWithContext(context.Context) PrivateEndpointResponsePtrOutput
}

type privateEndpointResponsePtrType PrivateEndpointResponseArgs

func PrivateEndpointResponsePtr(v *PrivateEndpointResponseArgs) PrivateEndpointResponsePtrInput {
	return (*privateEndpointResponsePtrType)(v)
}

func (*privateEndpointResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (i *privateEndpointResponsePtrType) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return i.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (i *privateEndpointResponsePtrType) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointResponsePtrOutput)
}

// PrivateEndpointResponseArrayInput is an input type that accepts PrivateEndpointResponseArray and PrivateEndpointResponseArrayOutput values.
// You can construct a concrete instance of `PrivateEndpointResponseArrayInput` via:
//
//          PrivateEndpointResponseArray{ PrivateEndpointResponseArgs{...} }
type PrivateEndpointResponseArrayInput interface {
	pulumi.Input

	ToPrivateEndpointResponseArrayOutput() PrivateEndpointResponseArrayOutput
	ToPrivateEndpointResponseArrayOutputWithContext(context.Context) PrivateEndpointResponseArrayOutput
}

type PrivateEndpointResponseArray []PrivateEndpointResponseInput

func (PrivateEndpointResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointResponse)(nil)).Elem()
}

func (i PrivateEndpointResponseArray) ToPrivateEndpointResponseArrayOutput() PrivateEndpointResponseArrayOutput {
	return i.ToPrivateEndpointResponseArrayOutputWithContext(context.Background())
}

func (i PrivateEndpointResponseArray) ToPrivateEndpointResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateEndpointResponseArrayOutput)
}

// Private endpoint resource.
type PrivateEndpointResponseOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutput() PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponseOutputWithContext(ctx context.Context) PrivateEndpointResponseOutput {
	return o
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o.ToPrivateEndpointResponsePtrOutputWithContext(context.Background())
}

func (o PrivateEndpointResponseOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *PrivateEndpointResponse {
		return &v
	}).(PrivateEndpointResponsePtrOutput)
}

// An array of custom dns configurations.
func (o PrivateEndpointResponseOutput) CustomDnsConfigs() CustomDnsConfigPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) []CustomDnsConfigPropertiesFormatResponse { return v.CustomDnsConfigs }).(CustomDnsConfigPropertiesFormatResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateEndpointResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o PrivateEndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o PrivateEndpointResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
func (o PrivateEndpointResponseOutput) ManualPrivateLinkServiceConnections() PrivateLinkServiceConnectionResponseArrayOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) []PrivateLinkServiceConnectionResponse {
		return v.ManualPrivateLinkServiceConnections
	}).(PrivateLinkServiceConnectionResponseArrayOutput)
}

// Resource name.
func (o PrivateEndpointResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Name }).(pulumi.StringOutput)
}

// An array of references to the network interfaces created for this private endpoint.
func (o PrivateEndpointResponseOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) []NetworkInterfaceResponse { return v.NetworkInterfaces }).(NetworkInterfaceResponseArrayOutput)
}

// A grouping of information about the connection to the remote resource.
func (o PrivateEndpointResponseOutput) PrivateLinkServiceConnections() PrivateLinkServiceConnectionResponseArrayOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) []PrivateLinkServiceConnectionResponse {
		return v.PrivateLinkServiceConnections
	}).(PrivateLinkServiceConnectionResponseArrayOutput)
}

// The provisioning state of the private endpoint resource.
func (o PrivateEndpointResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The ID of the subnet from which the private IP will be allocated.
func (o PrivateEndpointResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// Resource tags.
func (o PrivateEndpointResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o PrivateEndpointResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateEndpointResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateEndpointResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutput() PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) ToPrivateEndpointResponsePtrOutputWithContext(ctx context.Context) PrivateEndpointResponsePtrOutput {
	return o
}

func (o PrivateEndpointResponsePtrOutput) Elem() PrivateEndpointResponseOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) PrivateEndpointResponse { return *v }).(PrivateEndpointResponseOutput)
}

// An array of custom dns configurations.
func (o PrivateEndpointResponsePtrOutput) CustomDnsConfigs() CustomDnsConfigPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) []CustomDnsConfigPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return v.CustomDnsConfigs
	}).(CustomDnsConfigPropertiesFormatResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateEndpointResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o PrivateEndpointResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o PrivateEndpointResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// A grouping of information about the connection to the remote resource. Used when the network admin does not have access to approve connections to the remote resource.
func (o PrivateEndpointResponsePtrOutput) ManualPrivateLinkServiceConnections() PrivateLinkServiceConnectionResponseArrayOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) []PrivateLinkServiceConnectionResponse {
		if v == nil {
			return nil
		}
		return v.ManualPrivateLinkServiceConnections
	}).(PrivateLinkServiceConnectionResponseArrayOutput)
}

// Resource name.
func (o PrivateEndpointResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// An array of references to the network interfaces created for this private endpoint.
func (o PrivateEndpointResponsePtrOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) []NetworkInterfaceResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceResponseArrayOutput)
}

// A grouping of information about the connection to the remote resource.
func (o PrivateEndpointResponsePtrOutput) PrivateLinkServiceConnections() PrivateLinkServiceConnectionResponseArrayOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) []PrivateLinkServiceConnectionResponse {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceConnections
	}).(PrivateLinkServiceConnectionResponseArrayOutput)
}

// The provisioning state of the private endpoint resource.
func (o PrivateEndpointResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The ID of the subnet from which the private IP will be allocated.
func (o PrivateEndpointResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

// Resource tags.
func (o PrivateEndpointResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o PrivateEndpointResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateEndpointResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type PrivateEndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateEndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateEndpointResponse)(nil)).Elem()
}

func (o PrivateEndpointResponseArrayOutput) ToPrivateEndpointResponseArrayOutput() PrivateEndpointResponseArrayOutput {
	return o
}

func (o PrivateEndpointResponseArrayOutput) ToPrivateEndpointResponseArrayOutputWithContext(ctx context.Context) PrivateEndpointResponseArrayOutput {
	return o
}

func (o PrivateEndpointResponseArrayOutput) Index(i pulumi.IntInput) PrivateEndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateEndpointResponse {
		return vs[0].([]PrivateEndpointResponse)[vs[1].(int)]
	}).(PrivateEndpointResponseOutput)
}

// PrivateLinkServiceConnection resource.
type PrivateLinkServiceConnection struct {
	// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
	GroupIds []string `pulumi:"groupIds"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// A collection of read-only information about the state of the connection to the remote resource.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionState `pulumi:"privateLinkServiceConnectionState"`
	// The resource id of private link service.
	PrivateLinkServiceId *string `pulumi:"privateLinkServiceId"`
	// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
	RequestMessage *string `pulumi:"requestMessage"`
}

// PrivateLinkServiceConnectionInput is an input type that accepts PrivateLinkServiceConnectionArgs and PrivateLinkServiceConnectionOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionInput` via:
//
//          PrivateLinkServiceConnectionArgs{...}
type PrivateLinkServiceConnectionInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionOutput() PrivateLinkServiceConnectionOutput
	ToPrivateLinkServiceConnectionOutputWithContext(context.Context) PrivateLinkServiceConnectionOutput
}

// PrivateLinkServiceConnection resource.
type PrivateLinkServiceConnectionArgs struct {
	// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
	GroupIds pulumi.StringArrayInput `pulumi:"groupIds"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A collection of read-only information about the state of the connection to the remote resource.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStatePtrInput `pulumi:"privateLinkServiceConnectionState"`
	// The resource id of private link service.
	PrivateLinkServiceId pulumi.StringPtrInput `pulumi:"privateLinkServiceId"`
	// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
	RequestMessage pulumi.StringPtrInput `pulumi:"requestMessage"`
}

func (PrivateLinkServiceConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnection)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionArgs) ToPrivateLinkServiceConnectionOutput() PrivateLinkServiceConnectionOutput {
	return i.ToPrivateLinkServiceConnectionOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionArgs) ToPrivateLinkServiceConnectionOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionOutput)
}

// PrivateLinkServiceConnectionArrayInput is an input type that accepts PrivateLinkServiceConnectionArray and PrivateLinkServiceConnectionArrayOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionArrayInput` via:
//
//          PrivateLinkServiceConnectionArray{ PrivateLinkServiceConnectionArgs{...} }
type PrivateLinkServiceConnectionArrayInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionArrayOutput() PrivateLinkServiceConnectionArrayOutput
	ToPrivateLinkServiceConnectionArrayOutputWithContext(context.Context) PrivateLinkServiceConnectionArrayOutput
}

type PrivateLinkServiceConnectionArray []PrivateLinkServiceConnectionInput

func (PrivateLinkServiceConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceConnection)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionArray) ToPrivateLinkServiceConnectionArrayOutput() PrivateLinkServiceConnectionArrayOutput {
	return i.ToPrivateLinkServiceConnectionArrayOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionArray) ToPrivateLinkServiceConnectionArrayOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionArrayOutput)
}

// PrivateLinkServiceConnection resource.
type PrivateLinkServiceConnectionOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnection)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionOutput) ToPrivateLinkServiceConnectionOutput() PrivateLinkServiceConnectionOutput {
	return o
}

func (o PrivateLinkServiceConnectionOutput) ToPrivateLinkServiceConnectionOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionOutput {
	return o
}

// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
func (o PrivateLinkServiceConnectionOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnection) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o PrivateLinkServiceConnectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o PrivateLinkServiceConnectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A collection of read-only information about the state of the connection to the remote resource.
func (o PrivateLinkServiceConnectionOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnection) *PrivateLinkServiceConnectionState {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// The resource id of private link service.
func (o PrivateLinkServiceConnectionOutput) PrivateLinkServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnection) *string { return v.PrivateLinkServiceId }).(pulumi.StringPtrOutput)
}

// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
func (o PrivateLinkServiceConnectionOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnection) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceConnection)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionArrayOutput) ToPrivateLinkServiceConnectionArrayOutput() PrivateLinkServiceConnectionArrayOutput {
	return o
}

func (o PrivateLinkServiceConnectionArrayOutput) ToPrivateLinkServiceConnectionArrayOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionArrayOutput {
	return o
}

func (o PrivateLinkServiceConnectionArrayOutput) Index(i pulumi.IntInput) PrivateLinkServiceConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkServiceConnection {
		return vs[0].([]PrivateLinkServiceConnection)[vs[1].(int)]
	}).(PrivateLinkServiceConnectionOutput)
}

// PrivateLinkServiceConnection resource.
type PrivateLinkServiceConnectionResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
	GroupIds []string `pulumi:"groupIds"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// A collection of read-only information about the state of the connection to the remote resource.
	PrivateLinkServiceConnectionState *PrivateLinkServiceConnectionStateResponse `pulumi:"privateLinkServiceConnectionState"`
	// The resource id of private link service.
	PrivateLinkServiceId *string `pulumi:"privateLinkServiceId"`
	// The provisioning state of the private link service connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
	RequestMessage *string `pulumi:"requestMessage"`
	// The resource type.
	Type string `pulumi:"type"`
}

// PrivateLinkServiceConnectionResponseInput is an input type that accepts PrivateLinkServiceConnectionResponseArgs and PrivateLinkServiceConnectionResponseOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionResponseInput` via:
//
//          PrivateLinkServiceConnectionResponseArgs{...}
type PrivateLinkServiceConnectionResponseInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionResponseOutput() PrivateLinkServiceConnectionResponseOutput
	ToPrivateLinkServiceConnectionResponseOutputWithContext(context.Context) PrivateLinkServiceConnectionResponseOutput
}

// PrivateLinkServiceConnection resource.
type PrivateLinkServiceConnectionResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
	GroupIds pulumi.StringArrayInput `pulumi:"groupIds"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A collection of read-only information about the state of the connection to the remote resource.
	PrivateLinkServiceConnectionState PrivateLinkServiceConnectionStateResponsePtrInput `pulumi:"privateLinkServiceConnectionState"`
	// The resource id of private link service.
	PrivateLinkServiceId pulumi.StringPtrInput `pulumi:"privateLinkServiceId"`
	// The provisioning state of the private link service connection resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
	RequestMessage pulumi.StringPtrInput `pulumi:"requestMessage"`
	// The resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PrivateLinkServiceConnectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionResponse)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionResponseArgs) ToPrivateLinkServiceConnectionResponseOutput() PrivateLinkServiceConnectionResponseOutput {
	return i.ToPrivateLinkServiceConnectionResponseOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionResponseArgs) ToPrivateLinkServiceConnectionResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionResponseOutput)
}

// PrivateLinkServiceConnectionResponseArrayInput is an input type that accepts PrivateLinkServiceConnectionResponseArray and PrivateLinkServiceConnectionResponseArrayOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionResponseArrayInput` via:
//
//          PrivateLinkServiceConnectionResponseArray{ PrivateLinkServiceConnectionResponseArgs{...} }
type PrivateLinkServiceConnectionResponseArrayInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionResponseArrayOutput() PrivateLinkServiceConnectionResponseArrayOutput
	ToPrivateLinkServiceConnectionResponseArrayOutputWithContext(context.Context) PrivateLinkServiceConnectionResponseArrayOutput
}

type PrivateLinkServiceConnectionResponseArray []PrivateLinkServiceConnectionResponseInput

func (PrivateLinkServiceConnectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceConnectionResponse)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionResponseArray) ToPrivateLinkServiceConnectionResponseArrayOutput() PrivateLinkServiceConnectionResponseArrayOutput {
	return i.ToPrivateLinkServiceConnectionResponseArrayOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionResponseArray) ToPrivateLinkServiceConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionResponseArrayOutput)
}

// PrivateLinkServiceConnection resource.
type PrivateLinkServiceConnectionResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionResponseOutput) ToPrivateLinkServiceConnectionResponseOutput() PrivateLinkServiceConnectionResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionResponseOutput) ToPrivateLinkServiceConnectionResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateLinkServiceConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
func (o PrivateLinkServiceConnectionResponseOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o PrivateLinkServiceConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o PrivateLinkServiceConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A collection of read-only information about the state of the connection to the remote resource.
func (o PrivateLinkServiceConnectionResponseOutput) PrivateLinkServiceConnectionState() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *PrivateLinkServiceConnectionStateResponse {
		return v.PrivateLinkServiceConnectionState
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// The resource id of private link service.
func (o PrivateLinkServiceConnectionResponseOutput) PrivateLinkServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *string { return v.PrivateLinkServiceId }).(pulumi.StringPtrOutput)
}

// The provisioning state of the private link service connection resource.
func (o PrivateLinkServiceConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
func (o PrivateLinkServiceConnectionResponseOutput) RequestMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) *string { return v.RequestMessage }).(pulumi.StringPtrOutput)
}

// The resource type.
func (o PrivateLinkServiceConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateLinkServiceConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceConnectionResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionResponseArrayOutput) ToPrivateLinkServiceConnectionResponseArrayOutput() PrivateLinkServiceConnectionResponseArrayOutput {
	return o
}

func (o PrivateLinkServiceConnectionResponseArrayOutput) ToPrivateLinkServiceConnectionResponseArrayOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionResponseArrayOutput {
	return o
}

func (o PrivateLinkServiceConnectionResponseArrayOutput) Index(i pulumi.IntInput) PrivateLinkServiceConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkServiceConnectionResponse {
		return vs[0].([]PrivateLinkServiceConnectionResponse)[vs[1].(int)]
	}).(PrivateLinkServiceConnectionResponseOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionState struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateInput is an input type that accepts PrivateLinkServiceConnectionStateArgs and PrivateLinkServiceConnectionStateOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateInput` via:
//
//          PrivateLinkServiceConnectionStateArgs{...}
type PrivateLinkServiceConnectionStateInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput
	ToPrivateLinkServiceConnectionStateOutputWithContext(context.Context) PrivateLinkServiceConnectionStateOutput
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return i.ToPrivateLinkServiceConnectionStateOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput)
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateArgs) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateOutput).ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStatePtrInput is an input type that accepts PrivateLinkServiceConnectionStateArgs, PrivateLinkServiceConnectionStatePtr and PrivateLinkServiceConnectionStatePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStatePtrInput` via:
//
//          PrivateLinkServiceConnectionStateArgs{...}
//
//  or:
//
//          nil
type PrivateLinkServiceConnectionStatePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput
	ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStatePtrOutput
}

type privateLinkServiceConnectionStatePtrType PrivateLinkServiceConnectionStateArgs

func PrivateLinkServiceConnectionStatePtr(v *PrivateLinkServiceConnectionStateArgs) PrivateLinkServiceConnectionStatePtrInput {
	return (*privateLinkServiceConnectionStatePtrType)(v)
}

func (*privateLinkServiceConnectionStatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return i.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStatePtrType) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStatePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutput() PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStateOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o.ToPrivateLinkServiceConnectionStatePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *PrivateLinkServiceConnectionState {
		return &v
	}).(PrivateLinkServiceConnectionStatePtrOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionState) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStatePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionState)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutput() PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) ToPrivateLinkServiceConnectionStatePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStatePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStatePtrOutput) Elem() PrivateLinkServiceConnectionStateOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) PrivateLinkServiceConnectionState { return *v }).(PrivateLinkServiceConnectionStateOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStatePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStatePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStatePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionState) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponse struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired *string `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description *string `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status *string `pulumi:"status"`
}

// PrivateLinkServiceConnectionStateResponseInput is an input type that accepts PrivateLinkServiceConnectionStateResponseArgs and PrivateLinkServiceConnectionStateResponseOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateResponseInput` via:
//
//          PrivateLinkServiceConnectionStateResponseArgs{...}
type PrivateLinkServiceConnectionStateResponseInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput
	ToPrivateLinkServiceConnectionStateResponseOutputWithContext(context.Context) PrivateLinkServiceConnectionStateResponseOutput
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseArgs struct {
	// A message indicating if changes on the service provider require any updates on the consumer.
	ActionsRequired pulumi.StringPtrInput `pulumi:"actionsRequired"`
	// The reason for approval/rejection of the connection.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (PrivateLinkServiceConnectionStateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return i.ToPrivateLinkServiceConnectionStateResponseOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateResponseOutput)
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return i.ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (i PrivateLinkServiceConnectionStateResponseArgs) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateResponseOutput).ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx)
}

// PrivateLinkServiceConnectionStateResponsePtrInput is an input type that accepts PrivateLinkServiceConnectionStateResponseArgs, PrivateLinkServiceConnectionStateResponsePtr and PrivateLinkServiceConnectionStateResponsePtrOutput values.
// You can construct a concrete instance of `PrivateLinkServiceConnectionStateResponsePtrInput` via:
//
//          PrivateLinkServiceConnectionStateResponseArgs{...}
//
//  or:
//
//          nil
type PrivateLinkServiceConnectionStateResponsePtrInput interface {
	pulumi.Input

	ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput
	ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput
}

type privateLinkServiceConnectionStateResponsePtrType PrivateLinkServiceConnectionStateResponseArgs

func PrivateLinkServiceConnectionStateResponsePtr(v *PrivateLinkServiceConnectionStateResponseArgs) PrivateLinkServiceConnectionStateResponsePtrInput {
	return (*privateLinkServiceConnectionStateResponsePtrType)(v)
}

func (*privateLinkServiceConnectionStateResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (i *privateLinkServiceConnectionStateResponsePtrType) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return i.ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (i *privateLinkServiceConnectionStateResponsePtrType) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// A collection of information about the state of the connection between service consumer and provider.
type PrivateLinkServiceConnectionStateResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutput() PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponseOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponseOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(context.Background())
}

func (o PrivateLinkServiceConnectionStateResponseOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *PrivateLinkServiceConnectionStateResponse {
		return &v
	}).(PrivateLinkServiceConnectionStateResponsePtrOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponseOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.ActionsRequired }).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponseOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceConnectionStateResponse) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type PrivateLinkServiceConnectionStateResponsePtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceConnectionStateResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServiceConnectionStateResponse)(nil)).Elem()
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutput() PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ToPrivateLinkServiceConnectionStateResponsePtrOutputWithContext(ctx context.Context) PrivateLinkServiceConnectionStateResponsePtrOutput {
	return o
}

func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Elem() PrivateLinkServiceConnectionStateResponseOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) PrivateLinkServiceConnectionStateResponse {
		return *v
	}).(PrivateLinkServiceConnectionStateResponseOutput)
}

// A message indicating if changes on the service provider require any updates on the consumer.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) ActionsRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.ActionsRequired
	}).(pulumi.StringPtrOutput)
}

// The reason for approval/rejection of the connection.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
func (o PrivateLinkServiceConnectionStateResponsePtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateLinkServiceConnectionStateResponse) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// The private link service ip configuration.
type PrivateLinkServiceIpConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of private link service ip configuration.
	Name *string `pulumi:"name"`
	// Whether the ip configuration is primary or not.
	Primary *bool `pulumi:"primary"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The reference to the subnet resource.
	Subnet *SubnetType `pulumi:"subnet"`
}

// PrivateLinkServiceIpConfigurationInput is an input type that accepts PrivateLinkServiceIpConfigurationArgs and PrivateLinkServiceIpConfigurationOutput values.
// You can construct a concrete instance of `PrivateLinkServiceIpConfigurationInput` via:
//
//          PrivateLinkServiceIpConfigurationArgs{...}
type PrivateLinkServiceIpConfigurationInput interface {
	pulumi.Input

	ToPrivateLinkServiceIpConfigurationOutput() PrivateLinkServiceIpConfigurationOutput
	ToPrivateLinkServiceIpConfigurationOutputWithContext(context.Context) PrivateLinkServiceIpConfigurationOutput
}

// The private link service ip configuration.
type PrivateLinkServiceIpConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of private link service ip configuration.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether the ip configuration is primary or not.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion pulumi.StringPtrInput `pulumi:"privateIPAddressVersion"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The reference to the subnet resource.
	Subnet SubnetTypePtrInput `pulumi:"subnet"`
}

func (PrivateLinkServiceIpConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceIpConfiguration)(nil)).Elem()
}

func (i PrivateLinkServiceIpConfigurationArgs) ToPrivateLinkServiceIpConfigurationOutput() PrivateLinkServiceIpConfigurationOutput {
	return i.ToPrivateLinkServiceIpConfigurationOutputWithContext(context.Background())
}

func (i PrivateLinkServiceIpConfigurationArgs) ToPrivateLinkServiceIpConfigurationOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceIpConfigurationOutput)
}

// PrivateLinkServiceIpConfigurationArrayInput is an input type that accepts PrivateLinkServiceIpConfigurationArray and PrivateLinkServiceIpConfigurationArrayOutput values.
// You can construct a concrete instance of `PrivateLinkServiceIpConfigurationArrayInput` via:
//
//          PrivateLinkServiceIpConfigurationArray{ PrivateLinkServiceIpConfigurationArgs{...} }
type PrivateLinkServiceIpConfigurationArrayInput interface {
	pulumi.Input

	ToPrivateLinkServiceIpConfigurationArrayOutput() PrivateLinkServiceIpConfigurationArrayOutput
	ToPrivateLinkServiceIpConfigurationArrayOutputWithContext(context.Context) PrivateLinkServiceIpConfigurationArrayOutput
}

type PrivateLinkServiceIpConfigurationArray []PrivateLinkServiceIpConfigurationInput

func (PrivateLinkServiceIpConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceIpConfiguration)(nil)).Elem()
}

func (i PrivateLinkServiceIpConfigurationArray) ToPrivateLinkServiceIpConfigurationArrayOutput() PrivateLinkServiceIpConfigurationArrayOutput {
	return i.ToPrivateLinkServiceIpConfigurationArrayOutputWithContext(context.Background())
}

func (i PrivateLinkServiceIpConfigurationArray) ToPrivateLinkServiceIpConfigurationArrayOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceIpConfigurationArrayOutput)
}

// The private link service ip configuration.
type PrivateLinkServiceIpConfigurationOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceIpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceIpConfiguration)(nil)).Elem()
}

func (o PrivateLinkServiceIpConfigurationOutput) ToPrivateLinkServiceIpConfigurationOutput() PrivateLinkServiceIpConfigurationOutput {
	return o
}

func (o PrivateLinkServiceIpConfigurationOutput) ToPrivateLinkServiceIpConfigurationOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationOutput {
	return o
}

// Resource ID.
func (o PrivateLinkServiceIpConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of private link service ip configuration.
func (o PrivateLinkServiceIpConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether the ip configuration is primary or not.
func (o PrivateLinkServiceIpConfigurationOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// The private IP address of the IP configuration.
func (o PrivateLinkServiceIpConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
func (o PrivateLinkServiceIpConfigurationOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o PrivateLinkServiceIpConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The reference to the subnet resource.
func (o PrivateLinkServiceIpConfigurationOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfiguration) *SubnetType { return v.Subnet }).(SubnetTypePtrOutput)
}

type PrivateLinkServiceIpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceIpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceIpConfiguration)(nil)).Elem()
}

func (o PrivateLinkServiceIpConfigurationArrayOutput) ToPrivateLinkServiceIpConfigurationArrayOutput() PrivateLinkServiceIpConfigurationArrayOutput {
	return o
}

func (o PrivateLinkServiceIpConfigurationArrayOutput) ToPrivateLinkServiceIpConfigurationArrayOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationArrayOutput {
	return o
}

func (o PrivateLinkServiceIpConfigurationArrayOutput) Index(i pulumi.IntInput) PrivateLinkServiceIpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkServiceIpConfiguration {
		return vs[0].([]PrivateLinkServiceIpConfiguration)[vs[1].(int)]
	}).(PrivateLinkServiceIpConfigurationOutput)
}

// The private link service ip configuration.
type PrivateLinkServiceIpConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of private link service ip configuration.
	Name *string `pulumi:"name"`
	// Whether the ip configuration is primary or not.
	Primary *bool `pulumi:"primary"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the private link service IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the subnet resource.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// The resource type.
	Type string `pulumi:"type"`
}

// PrivateLinkServiceIpConfigurationResponseInput is an input type that accepts PrivateLinkServiceIpConfigurationResponseArgs and PrivateLinkServiceIpConfigurationResponseOutput values.
// You can construct a concrete instance of `PrivateLinkServiceIpConfigurationResponseInput` via:
//
//          PrivateLinkServiceIpConfigurationResponseArgs{...}
type PrivateLinkServiceIpConfigurationResponseInput interface {
	pulumi.Input

	ToPrivateLinkServiceIpConfigurationResponseOutput() PrivateLinkServiceIpConfigurationResponseOutput
	ToPrivateLinkServiceIpConfigurationResponseOutputWithContext(context.Context) PrivateLinkServiceIpConfigurationResponseOutput
}

// The private link service ip configuration.
type PrivateLinkServiceIpConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of private link service ip configuration.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether the ip configuration is primary or not.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
	PrivateIPAddressVersion pulumi.StringPtrInput `pulumi:"privateIPAddressVersion"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the private link service IP configuration resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The reference to the subnet resource.
	Subnet SubnetResponsePtrInput `pulumi:"subnet"`
	// The resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PrivateLinkServiceIpConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceIpConfigurationResponse)(nil)).Elem()
}

func (i PrivateLinkServiceIpConfigurationResponseArgs) ToPrivateLinkServiceIpConfigurationResponseOutput() PrivateLinkServiceIpConfigurationResponseOutput {
	return i.ToPrivateLinkServiceIpConfigurationResponseOutputWithContext(context.Background())
}

func (i PrivateLinkServiceIpConfigurationResponseArgs) ToPrivateLinkServiceIpConfigurationResponseOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceIpConfigurationResponseOutput)
}

// PrivateLinkServiceIpConfigurationResponseArrayInput is an input type that accepts PrivateLinkServiceIpConfigurationResponseArray and PrivateLinkServiceIpConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `PrivateLinkServiceIpConfigurationResponseArrayInput` via:
//
//          PrivateLinkServiceIpConfigurationResponseArray{ PrivateLinkServiceIpConfigurationResponseArgs{...} }
type PrivateLinkServiceIpConfigurationResponseArrayInput interface {
	pulumi.Input

	ToPrivateLinkServiceIpConfigurationResponseArrayOutput() PrivateLinkServiceIpConfigurationResponseArrayOutput
	ToPrivateLinkServiceIpConfigurationResponseArrayOutputWithContext(context.Context) PrivateLinkServiceIpConfigurationResponseArrayOutput
}

type PrivateLinkServiceIpConfigurationResponseArray []PrivateLinkServiceIpConfigurationResponseInput

func (PrivateLinkServiceIpConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceIpConfigurationResponse)(nil)).Elem()
}

func (i PrivateLinkServiceIpConfigurationResponseArray) ToPrivateLinkServiceIpConfigurationResponseArrayOutput() PrivateLinkServiceIpConfigurationResponseArrayOutput {
	return i.ToPrivateLinkServiceIpConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i PrivateLinkServiceIpConfigurationResponseArray) ToPrivateLinkServiceIpConfigurationResponseArrayOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServiceIpConfigurationResponseArrayOutput)
}

// The private link service ip configuration.
type PrivateLinkServiceIpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceIpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServiceIpConfigurationResponse)(nil)).Elem()
}

func (o PrivateLinkServiceIpConfigurationResponseOutput) ToPrivateLinkServiceIpConfigurationResponseOutput() PrivateLinkServiceIpConfigurationResponseOutput {
	return o
}

func (o PrivateLinkServiceIpConfigurationResponseOutput) ToPrivateLinkServiceIpConfigurationResponseOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o PrivateLinkServiceIpConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o PrivateLinkServiceIpConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of private link service ip configuration.
func (o PrivateLinkServiceIpConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether the ip configuration is primary or not.
func (o PrivateLinkServiceIpConfigurationResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// The private IP address of the IP configuration.
func (o PrivateLinkServiceIpConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.
func (o PrivateLinkServiceIpConfigurationResponseOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o PrivateLinkServiceIpConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the private link service IP configuration resource.
func (o PrivateLinkServiceIpConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the subnet resource.
func (o PrivateLinkServiceIpConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// The resource type.
func (o PrivateLinkServiceIpConfigurationResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateLinkServiceIpConfigurationResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PrivateLinkServiceIpConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (PrivateLinkServiceIpConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateLinkServiceIpConfigurationResponse)(nil)).Elem()
}

func (o PrivateLinkServiceIpConfigurationResponseArrayOutput) ToPrivateLinkServiceIpConfigurationResponseArrayOutput() PrivateLinkServiceIpConfigurationResponseArrayOutput {
	return o
}

func (o PrivateLinkServiceIpConfigurationResponseArrayOutput) ToPrivateLinkServiceIpConfigurationResponseArrayOutputWithContext(ctx context.Context) PrivateLinkServiceIpConfigurationResponseArrayOutput {
	return o
}

func (o PrivateLinkServiceIpConfigurationResponseArrayOutput) Index(i pulumi.IntInput) PrivateLinkServiceIpConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateLinkServiceIpConfigurationResponse {
		return vs[0].([]PrivateLinkServiceIpConfigurationResponse)[vs[1].(int)]
	}).(PrivateLinkServiceIpConfigurationResponseOutput)
}

// The auto-approval list of the private link service.
type PrivateLinkServicePropertiesAutoApproval struct {
	// The list of subscriptions.
	Subscriptions []string `pulumi:"subscriptions"`
}

// PrivateLinkServicePropertiesAutoApprovalInput is an input type that accepts PrivateLinkServicePropertiesAutoApprovalArgs and PrivateLinkServicePropertiesAutoApprovalOutput values.
// You can construct a concrete instance of `PrivateLinkServicePropertiesAutoApprovalInput` via:
//
//          PrivateLinkServicePropertiesAutoApprovalArgs{...}
type PrivateLinkServicePropertiesAutoApprovalInput interface {
	pulumi.Input

	ToPrivateLinkServicePropertiesAutoApprovalOutput() PrivateLinkServicePropertiesAutoApprovalOutput
	ToPrivateLinkServicePropertiesAutoApprovalOutputWithContext(context.Context) PrivateLinkServicePropertiesAutoApprovalOutput
}

// The auto-approval list of the private link service.
type PrivateLinkServicePropertiesAutoApprovalArgs struct {
	// The list of subscriptions.
	Subscriptions pulumi.StringArrayInput `pulumi:"subscriptions"`
}

func (PrivateLinkServicePropertiesAutoApprovalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesAutoApproval)(nil)).Elem()
}

func (i PrivateLinkServicePropertiesAutoApprovalArgs) ToPrivateLinkServicePropertiesAutoApprovalOutput() PrivateLinkServicePropertiesAutoApprovalOutput {
	return i.ToPrivateLinkServicePropertiesAutoApprovalOutputWithContext(context.Background())
}

func (i PrivateLinkServicePropertiesAutoApprovalArgs) ToPrivateLinkServicePropertiesAutoApprovalOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesAutoApprovalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesAutoApprovalOutput)
}

func (i PrivateLinkServicePropertiesAutoApprovalArgs) ToPrivateLinkServicePropertiesAutoApprovalPtrOutput() PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return i.ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(context.Background())
}

func (i PrivateLinkServicePropertiesAutoApprovalArgs) ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesAutoApprovalOutput).ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(ctx)
}

// PrivateLinkServicePropertiesAutoApprovalPtrInput is an input type that accepts PrivateLinkServicePropertiesAutoApprovalArgs, PrivateLinkServicePropertiesAutoApprovalPtr and PrivateLinkServicePropertiesAutoApprovalPtrOutput values.
// You can construct a concrete instance of `PrivateLinkServicePropertiesAutoApprovalPtrInput` via:
//
//          PrivateLinkServicePropertiesAutoApprovalArgs{...}
//
//  or:
//
//          nil
type PrivateLinkServicePropertiesAutoApprovalPtrInput interface {
	pulumi.Input

	ToPrivateLinkServicePropertiesAutoApprovalPtrOutput() PrivateLinkServicePropertiesAutoApprovalPtrOutput
	ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(context.Context) PrivateLinkServicePropertiesAutoApprovalPtrOutput
}

type privateLinkServicePropertiesAutoApprovalPtrType PrivateLinkServicePropertiesAutoApprovalArgs

func PrivateLinkServicePropertiesAutoApprovalPtr(v *PrivateLinkServicePropertiesAutoApprovalArgs) PrivateLinkServicePropertiesAutoApprovalPtrInput {
	return (*privateLinkServicePropertiesAutoApprovalPtrType)(v)
}

func (*privateLinkServicePropertiesAutoApprovalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesAutoApproval)(nil)).Elem()
}

func (i *privateLinkServicePropertiesAutoApprovalPtrType) ToPrivateLinkServicePropertiesAutoApprovalPtrOutput() PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return i.ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(context.Background())
}

func (i *privateLinkServicePropertiesAutoApprovalPtrType) ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesAutoApprovalPtrOutput)
}

// The auto-approval list of the private link service.
type PrivateLinkServicePropertiesAutoApprovalOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesAutoApprovalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesAutoApproval)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesAutoApprovalOutput) ToPrivateLinkServicePropertiesAutoApprovalOutput() PrivateLinkServicePropertiesAutoApprovalOutput {
	return o
}

func (o PrivateLinkServicePropertiesAutoApprovalOutput) ToPrivateLinkServicePropertiesAutoApprovalOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesAutoApprovalOutput {
	return o
}

func (o PrivateLinkServicePropertiesAutoApprovalOutput) ToPrivateLinkServicePropertiesAutoApprovalPtrOutput() PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return o.ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(context.Background())
}

func (o PrivateLinkServicePropertiesAutoApprovalOutput) ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return o.ApplyT(func(v PrivateLinkServicePropertiesAutoApproval) *PrivateLinkServicePropertiesAutoApproval {
		return &v
	}).(PrivateLinkServicePropertiesAutoApprovalPtrOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesAutoApprovalOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServicePropertiesAutoApproval) []string { return v.Subscriptions }).(pulumi.StringArrayOutput)
}

type PrivateLinkServicePropertiesAutoApprovalPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesAutoApprovalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesAutoApproval)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesAutoApprovalPtrOutput) ToPrivateLinkServicePropertiesAutoApprovalPtrOutput() PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesAutoApprovalPtrOutput) ToPrivateLinkServicePropertiesAutoApprovalPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesAutoApprovalPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesAutoApprovalPtrOutput) Elem() PrivateLinkServicePropertiesAutoApprovalOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesAutoApproval) PrivateLinkServicePropertiesAutoApproval { return *v }).(PrivateLinkServicePropertiesAutoApprovalOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesAutoApprovalPtrOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesAutoApproval) []string {
		if v == nil {
			return nil
		}
		return v.Subscriptions
	}).(pulumi.StringArrayOutput)
}

// The auto-approval list of the private link service.
type PrivateLinkServicePropertiesResponseAutoApproval struct {
	// The list of subscriptions.
	Subscriptions []string `pulumi:"subscriptions"`
}

// PrivateLinkServicePropertiesResponseAutoApprovalInput is an input type that accepts PrivateLinkServicePropertiesResponseAutoApprovalArgs and PrivateLinkServicePropertiesResponseAutoApprovalOutput values.
// You can construct a concrete instance of `PrivateLinkServicePropertiesResponseAutoApprovalInput` via:
//
//          PrivateLinkServicePropertiesResponseAutoApprovalArgs{...}
type PrivateLinkServicePropertiesResponseAutoApprovalInput interface {
	pulumi.Input

	ToPrivateLinkServicePropertiesResponseAutoApprovalOutput() PrivateLinkServicePropertiesResponseAutoApprovalOutput
	ToPrivateLinkServicePropertiesResponseAutoApprovalOutputWithContext(context.Context) PrivateLinkServicePropertiesResponseAutoApprovalOutput
}

// The auto-approval list of the private link service.
type PrivateLinkServicePropertiesResponseAutoApprovalArgs struct {
	// The list of subscriptions.
	Subscriptions pulumi.StringArrayInput `pulumi:"subscriptions"`
}

func (PrivateLinkServicePropertiesResponseAutoApprovalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesResponseAutoApproval)(nil)).Elem()
}

func (i PrivateLinkServicePropertiesResponseAutoApprovalArgs) ToPrivateLinkServicePropertiesResponseAutoApprovalOutput() PrivateLinkServicePropertiesResponseAutoApprovalOutput {
	return i.ToPrivateLinkServicePropertiesResponseAutoApprovalOutputWithContext(context.Background())
}

func (i PrivateLinkServicePropertiesResponseAutoApprovalArgs) ToPrivateLinkServicePropertiesResponseAutoApprovalOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseAutoApprovalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesResponseAutoApprovalOutput)
}

func (i PrivateLinkServicePropertiesResponseAutoApprovalArgs) ToPrivateLinkServicePropertiesResponseAutoApprovalPtrOutput() PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput {
	return i.ToPrivateLinkServicePropertiesResponseAutoApprovalPtrOutputWithContext(context.Background())
}

func (i PrivateLinkServicePropertiesResponseAutoApprovalArgs) ToPrivateLinkServicePropertiesResponseAutoApprovalPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesResponseAutoApprovalOutput).ToPrivateLinkServicePropertiesResponseAutoApprovalPtrOutputWithContext(ctx)
}

// PrivateLinkServicePropertiesResponseAutoApprovalPtrInput is an input type that accepts PrivateLinkServicePropertiesResponseAutoApprovalArgs, PrivateLinkServicePropertiesResponseAutoApprovalPtr and PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput values.
// You can construct a concrete instance of `PrivateLinkServicePropertiesResponseAutoApprovalPtrInput` via:
//
//          PrivateLinkServicePropertiesResponseAutoApprovalArgs{...}
//
//  or:
//
//          nil
type PrivateLinkServicePropertiesResponseAutoApprovalPtrInput interface {
	pulumi.Input

	ToPrivateLinkServicePropertiesResponseAutoApprovalPtrOutput() PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput
	ToPrivateLinkServicePropertiesResponseAutoApprovalPtrOutputWithContext(context.Context) PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput
}

type privateLinkServicePropertiesResponseAutoApprovalPtrType PrivateLinkServicePropertiesResponseAutoApprovalArgs

func PrivateLinkServicePropertiesResponseAutoApprovalPtr(v *PrivateLinkServicePropertiesResponseAutoApprovalArgs) PrivateLinkServicePropertiesResponseAutoApprovalPtrInput {
	return (*privateLinkServicePropertiesResponseAutoApprovalPtrType)(v)
}

func (*privateLinkServicePropertiesResponseAutoApprovalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesResponseAutoApproval)(nil)).Elem()
}

func (i *privateLinkServicePropertiesResponseAutoApprovalPtrType) ToPrivateLinkServicePropertiesResponseAutoApprovalPtrOutput() PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput {
	return i.ToPrivateLinkServicePropertiesResponseAutoApprovalPtrOutputWithContext(context.Background())
}

func (i *privateLinkServicePropertiesResponseAutoApprovalPtrType) ToPrivateLinkServicePropertiesResponseAutoApprovalPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput)
}

// The auto-approval list of the private link service.
type PrivateLinkServicePropertiesResponseAutoApprovalOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesResponseAutoApprovalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesResponseAutoApproval)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesResponseAutoApprovalOutput) ToPrivateLinkServicePropertiesResponseAutoApprovalOutput() PrivateLinkServicePropertiesResponseAutoApprovalOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseAutoApprovalOutput) ToPrivateLinkServicePropertiesResponseAutoApprovalOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseAutoApprovalOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseAutoApprovalOutput) ToPrivateLinkServicePropertiesResponseAutoApprovalPtrOutput() PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput {
	return o.ToPrivateLinkServicePropertiesResponseAutoApprovalPtrOutputWithContext(context.Background())
}

func (o PrivateLinkServicePropertiesResponseAutoApprovalOutput) ToPrivateLinkServicePropertiesResponseAutoApprovalPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput {
	return o.ApplyT(func(v PrivateLinkServicePropertiesResponseAutoApproval) *PrivateLinkServicePropertiesResponseAutoApproval {
		return &v
	}).(PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesResponseAutoApprovalOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServicePropertiesResponseAutoApproval) []string { return v.Subscriptions }).(pulumi.StringArrayOutput)
}

type PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesResponseAutoApproval)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput) ToPrivateLinkServicePropertiesResponseAutoApprovalPtrOutput() PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput) ToPrivateLinkServicePropertiesResponseAutoApprovalPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput) Elem() PrivateLinkServicePropertiesResponseAutoApprovalOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesResponseAutoApproval) PrivateLinkServicePropertiesResponseAutoApproval {
		return *v
	}).(PrivateLinkServicePropertiesResponseAutoApprovalOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesResponseAutoApproval) []string {
		if v == nil {
			return nil
		}
		return v.Subscriptions
	}).(pulumi.StringArrayOutput)
}

// The visibility list of the private link service.
type PrivateLinkServicePropertiesResponseVisibility struct {
	// The list of subscriptions.
	Subscriptions []string `pulumi:"subscriptions"`
}

// PrivateLinkServicePropertiesResponseVisibilityInput is an input type that accepts PrivateLinkServicePropertiesResponseVisibilityArgs and PrivateLinkServicePropertiesResponseVisibilityOutput values.
// You can construct a concrete instance of `PrivateLinkServicePropertiesResponseVisibilityInput` via:
//
//          PrivateLinkServicePropertiesResponseVisibilityArgs{...}
type PrivateLinkServicePropertiesResponseVisibilityInput interface {
	pulumi.Input

	ToPrivateLinkServicePropertiesResponseVisibilityOutput() PrivateLinkServicePropertiesResponseVisibilityOutput
	ToPrivateLinkServicePropertiesResponseVisibilityOutputWithContext(context.Context) PrivateLinkServicePropertiesResponseVisibilityOutput
}

// The visibility list of the private link service.
type PrivateLinkServicePropertiesResponseVisibilityArgs struct {
	// The list of subscriptions.
	Subscriptions pulumi.StringArrayInput `pulumi:"subscriptions"`
}

func (PrivateLinkServicePropertiesResponseVisibilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesResponseVisibility)(nil)).Elem()
}

func (i PrivateLinkServicePropertiesResponseVisibilityArgs) ToPrivateLinkServicePropertiesResponseVisibilityOutput() PrivateLinkServicePropertiesResponseVisibilityOutput {
	return i.ToPrivateLinkServicePropertiesResponseVisibilityOutputWithContext(context.Background())
}

func (i PrivateLinkServicePropertiesResponseVisibilityArgs) ToPrivateLinkServicePropertiesResponseVisibilityOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseVisibilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesResponseVisibilityOutput)
}

func (i PrivateLinkServicePropertiesResponseVisibilityArgs) ToPrivateLinkServicePropertiesResponseVisibilityPtrOutput() PrivateLinkServicePropertiesResponseVisibilityPtrOutput {
	return i.ToPrivateLinkServicePropertiesResponseVisibilityPtrOutputWithContext(context.Background())
}

func (i PrivateLinkServicePropertiesResponseVisibilityArgs) ToPrivateLinkServicePropertiesResponseVisibilityPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseVisibilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesResponseVisibilityOutput).ToPrivateLinkServicePropertiesResponseVisibilityPtrOutputWithContext(ctx)
}

// PrivateLinkServicePropertiesResponseVisibilityPtrInput is an input type that accepts PrivateLinkServicePropertiesResponseVisibilityArgs, PrivateLinkServicePropertiesResponseVisibilityPtr and PrivateLinkServicePropertiesResponseVisibilityPtrOutput values.
// You can construct a concrete instance of `PrivateLinkServicePropertiesResponseVisibilityPtrInput` via:
//
//          PrivateLinkServicePropertiesResponseVisibilityArgs{...}
//
//  or:
//
//          nil
type PrivateLinkServicePropertiesResponseVisibilityPtrInput interface {
	pulumi.Input

	ToPrivateLinkServicePropertiesResponseVisibilityPtrOutput() PrivateLinkServicePropertiesResponseVisibilityPtrOutput
	ToPrivateLinkServicePropertiesResponseVisibilityPtrOutputWithContext(context.Context) PrivateLinkServicePropertiesResponseVisibilityPtrOutput
}

type privateLinkServicePropertiesResponseVisibilityPtrType PrivateLinkServicePropertiesResponseVisibilityArgs

func PrivateLinkServicePropertiesResponseVisibilityPtr(v *PrivateLinkServicePropertiesResponseVisibilityArgs) PrivateLinkServicePropertiesResponseVisibilityPtrInput {
	return (*privateLinkServicePropertiesResponseVisibilityPtrType)(v)
}

func (*privateLinkServicePropertiesResponseVisibilityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesResponseVisibility)(nil)).Elem()
}

func (i *privateLinkServicePropertiesResponseVisibilityPtrType) ToPrivateLinkServicePropertiesResponseVisibilityPtrOutput() PrivateLinkServicePropertiesResponseVisibilityPtrOutput {
	return i.ToPrivateLinkServicePropertiesResponseVisibilityPtrOutputWithContext(context.Background())
}

func (i *privateLinkServicePropertiesResponseVisibilityPtrType) ToPrivateLinkServicePropertiesResponseVisibilityPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseVisibilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesResponseVisibilityPtrOutput)
}

// The visibility list of the private link service.
type PrivateLinkServicePropertiesResponseVisibilityOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesResponseVisibilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesResponseVisibility)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesResponseVisibilityOutput) ToPrivateLinkServicePropertiesResponseVisibilityOutput() PrivateLinkServicePropertiesResponseVisibilityOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseVisibilityOutput) ToPrivateLinkServicePropertiesResponseVisibilityOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseVisibilityOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseVisibilityOutput) ToPrivateLinkServicePropertiesResponseVisibilityPtrOutput() PrivateLinkServicePropertiesResponseVisibilityPtrOutput {
	return o.ToPrivateLinkServicePropertiesResponseVisibilityPtrOutputWithContext(context.Background())
}

func (o PrivateLinkServicePropertiesResponseVisibilityOutput) ToPrivateLinkServicePropertiesResponseVisibilityPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseVisibilityPtrOutput {
	return o.ApplyT(func(v PrivateLinkServicePropertiesResponseVisibility) *PrivateLinkServicePropertiesResponseVisibility {
		return &v
	}).(PrivateLinkServicePropertiesResponseVisibilityPtrOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesResponseVisibilityOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServicePropertiesResponseVisibility) []string { return v.Subscriptions }).(pulumi.StringArrayOutput)
}

type PrivateLinkServicePropertiesResponseVisibilityPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesResponseVisibilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesResponseVisibility)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesResponseVisibilityPtrOutput) ToPrivateLinkServicePropertiesResponseVisibilityPtrOutput() PrivateLinkServicePropertiesResponseVisibilityPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseVisibilityPtrOutput) ToPrivateLinkServicePropertiesResponseVisibilityPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesResponseVisibilityPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesResponseVisibilityPtrOutput) Elem() PrivateLinkServicePropertiesResponseVisibilityOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesResponseVisibility) PrivateLinkServicePropertiesResponseVisibility {
		return *v
	}).(PrivateLinkServicePropertiesResponseVisibilityOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesResponseVisibilityPtrOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesResponseVisibility) []string {
		if v == nil {
			return nil
		}
		return v.Subscriptions
	}).(pulumi.StringArrayOutput)
}

// The visibility list of the private link service.
type PrivateLinkServicePropertiesVisibility struct {
	// The list of subscriptions.
	Subscriptions []string `pulumi:"subscriptions"`
}

// PrivateLinkServicePropertiesVisibilityInput is an input type that accepts PrivateLinkServicePropertiesVisibilityArgs and PrivateLinkServicePropertiesVisibilityOutput values.
// You can construct a concrete instance of `PrivateLinkServicePropertiesVisibilityInput` via:
//
//          PrivateLinkServicePropertiesVisibilityArgs{...}
type PrivateLinkServicePropertiesVisibilityInput interface {
	pulumi.Input

	ToPrivateLinkServicePropertiesVisibilityOutput() PrivateLinkServicePropertiesVisibilityOutput
	ToPrivateLinkServicePropertiesVisibilityOutputWithContext(context.Context) PrivateLinkServicePropertiesVisibilityOutput
}

// The visibility list of the private link service.
type PrivateLinkServicePropertiesVisibilityArgs struct {
	// The list of subscriptions.
	Subscriptions pulumi.StringArrayInput `pulumi:"subscriptions"`
}

func (PrivateLinkServicePropertiesVisibilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesVisibility)(nil)).Elem()
}

func (i PrivateLinkServicePropertiesVisibilityArgs) ToPrivateLinkServicePropertiesVisibilityOutput() PrivateLinkServicePropertiesVisibilityOutput {
	return i.ToPrivateLinkServicePropertiesVisibilityOutputWithContext(context.Background())
}

func (i PrivateLinkServicePropertiesVisibilityArgs) ToPrivateLinkServicePropertiesVisibilityOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesVisibilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesVisibilityOutput)
}

func (i PrivateLinkServicePropertiesVisibilityArgs) ToPrivateLinkServicePropertiesVisibilityPtrOutput() PrivateLinkServicePropertiesVisibilityPtrOutput {
	return i.ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(context.Background())
}

func (i PrivateLinkServicePropertiesVisibilityArgs) ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesVisibilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesVisibilityOutput).ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(ctx)
}

// PrivateLinkServicePropertiesVisibilityPtrInput is an input type that accepts PrivateLinkServicePropertiesVisibilityArgs, PrivateLinkServicePropertiesVisibilityPtr and PrivateLinkServicePropertiesVisibilityPtrOutput values.
// You can construct a concrete instance of `PrivateLinkServicePropertiesVisibilityPtrInput` via:
//
//          PrivateLinkServicePropertiesVisibilityArgs{...}
//
//  or:
//
//          nil
type PrivateLinkServicePropertiesVisibilityPtrInput interface {
	pulumi.Input

	ToPrivateLinkServicePropertiesVisibilityPtrOutput() PrivateLinkServicePropertiesVisibilityPtrOutput
	ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(context.Context) PrivateLinkServicePropertiesVisibilityPtrOutput
}

type privateLinkServicePropertiesVisibilityPtrType PrivateLinkServicePropertiesVisibilityArgs

func PrivateLinkServicePropertiesVisibilityPtr(v *PrivateLinkServicePropertiesVisibilityArgs) PrivateLinkServicePropertiesVisibilityPtrInput {
	return (*privateLinkServicePropertiesVisibilityPtrType)(v)
}

func (*privateLinkServicePropertiesVisibilityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesVisibility)(nil)).Elem()
}

func (i *privateLinkServicePropertiesVisibilityPtrType) ToPrivateLinkServicePropertiesVisibilityPtrOutput() PrivateLinkServicePropertiesVisibilityPtrOutput {
	return i.ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(context.Background())
}

func (i *privateLinkServicePropertiesVisibilityPtrType) ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesVisibilityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateLinkServicePropertiesVisibilityPtrOutput)
}

// The visibility list of the private link service.
type PrivateLinkServicePropertiesVisibilityOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesVisibilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateLinkServicePropertiesVisibility)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesVisibilityOutput) ToPrivateLinkServicePropertiesVisibilityOutput() PrivateLinkServicePropertiesVisibilityOutput {
	return o
}

func (o PrivateLinkServicePropertiesVisibilityOutput) ToPrivateLinkServicePropertiesVisibilityOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesVisibilityOutput {
	return o
}

func (o PrivateLinkServicePropertiesVisibilityOutput) ToPrivateLinkServicePropertiesVisibilityPtrOutput() PrivateLinkServicePropertiesVisibilityPtrOutput {
	return o.ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(context.Background())
}

func (o PrivateLinkServicePropertiesVisibilityOutput) ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesVisibilityPtrOutput {
	return o.ApplyT(func(v PrivateLinkServicePropertiesVisibility) *PrivateLinkServicePropertiesVisibility {
		return &v
	}).(PrivateLinkServicePropertiesVisibilityPtrOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesVisibilityOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PrivateLinkServicePropertiesVisibility) []string { return v.Subscriptions }).(pulumi.StringArrayOutput)
}

type PrivateLinkServicePropertiesVisibilityPtrOutput struct{ *pulumi.OutputState }

func (PrivateLinkServicePropertiesVisibilityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateLinkServicePropertiesVisibility)(nil)).Elem()
}

func (o PrivateLinkServicePropertiesVisibilityPtrOutput) ToPrivateLinkServicePropertiesVisibilityPtrOutput() PrivateLinkServicePropertiesVisibilityPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesVisibilityPtrOutput) ToPrivateLinkServicePropertiesVisibilityPtrOutputWithContext(ctx context.Context) PrivateLinkServicePropertiesVisibilityPtrOutput {
	return o
}

func (o PrivateLinkServicePropertiesVisibilityPtrOutput) Elem() PrivateLinkServicePropertiesVisibilityOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesVisibility) PrivateLinkServicePropertiesVisibility { return *v }).(PrivateLinkServicePropertiesVisibilityOutput)
}

// The list of subscriptions.
func (o PrivateLinkServicePropertiesVisibilityPtrOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PrivateLinkServicePropertiesVisibility) []string {
		if v == nil {
			return nil
		}
		return v.Subscriptions
	}).(pulumi.StringArrayOutput)
}

// A load balancer probe.
type Probe struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes *int `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port int `pulumi:"port"`
	// The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol string `pulumi:"protocol"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath *string `pulumi:"requestPath"`
}

// ProbeInput is an input type that accepts ProbeArgs and ProbeOutput values.
// You can construct a concrete instance of `ProbeInput` via:
//
//          ProbeArgs{...}
type ProbeInput interface {
	pulumi.Input

	ToProbeOutput() ProbeOutput
	ToProbeOutputWithContext(context.Context) ProbeOutput
}

// A load balancer probe.
type ProbeArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes pulumi.IntPtrInput `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath pulumi.StringPtrInput `pulumi:"requestPath"`
}

func (ProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Probe)(nil)).Elem()
}

func (i ProbeArgs) ToProbeOutput() ProbeOutput {
	return i.ToProbeOutputWithContext(context.Background())
}

func (i ProbeArgs) ToProbeOutputWithContext(ctx context.Context) ProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeOutput)
}

// ProbeArrayInput is an input type that accepts ProbeArray and ProbeArrayOutput values.
// You can construct a concrete instance of `ProbeArrayInput` via:
//
//          ProbeArray{ ProbeArgs{...} }
type ProbeArrayInput interface {
	pulumi.Input

	ToProbeArrayOutput() ProbeArrayOutput
	ToProbeArrayOutputWithContext(context.Context) ProbeArrayOutput
}

type ProbeArray []ProbeInput

func (ProbeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Probe)(nil)).Elem()
}

func (i ProbeArray) ToProbeArrayOutput() ProbeArrayOutput {
	return i.ToProbeArrayOutputWithContext(context.Background())
}

func (i ProbeArray) ToProbeArrayOutputWithContext(ctx context.Context) ProbeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeArrayOutput)
}

// A load balancer probe.
type ProbeOutput struct{ *pulumi.OutputState }

func (ProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Probe)(nil)).Elem()
}

func (o ProbeOutput) ToProbeOutput() ProbeOutput {
	return o
}

func (o ProbeOutput) ToProbeOutputWithContext(ctx context.Context) ProbeOutput {
	return o
}

// Resource ID.
func (o ProbeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Probe) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
func (o ProbeOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Probe) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.
func (o ProbeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Probe) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
func (o ProbeOutput) NumberOfProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Probe) *int { return v.NumberOfProbes }).(pulumi.IntPtrOutput)
}

// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
func (o ProbeOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v Probe) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
func (o ProbeOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v Probe) string { return v.Protocol }).(pulumi.StringOutput)
}

// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
func (o ProbeOutput) RequestPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Probe) *string { return v.RequestPath }).(pulumi.StringPtrOutput)
}

type ProbeArrayOutput struct{ *pulumi.OutputState }

func (ProbeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Probe)(nil)).Elem()
}

func (o ProbeArrayOutput) ToProbeArrayOutput() ProbeArrayOutput {
	return o
}

func (o ProbeArrayOutput) ToProbeArrayOutputWithContext(ctx context.Context) ProbeArrayOutput {
	return o
}

func (o ProbeArrayOutput) Index(i pulumi.IntInput) ProbeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Probe {
		return vs[0].([]Probe)[vs[1].(int)]
	}).(ProbeOutput)
}

// A load balancer probe.
type ProbeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// The load balancer rules that use this probe.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes *int `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port int `pulumi:"port"`
	// The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the probe resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath *string `pulumi:"requestPath"`
	// Type of the resource.
	Type string `pulumi:"type"`
}

// ProbeResponseInput is an input type that accepts ProbeResponseArgs and ProbeResponseOutput values.
// You can construct a concrete instance of `ProbeResponseInput` via:
//
//          ProbeResponseArgs{...}
type ProbeResponseInput interface {
	pulumi.Input

	ToProbeResponseOutput() ProbeResponseOutput
	ToProbeResponseOutputWithContext(context.Context) ProbeResponseOutput
}

// A load balancer probe.
type ProbeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// The load balancer rules that use this probe.
	LoadBalancingRules SubResourceResponseArrayInput `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes pulumi.IntPtrInput `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The provisioning state of the probe resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath pulumi.StringPtrInput `pulumi:"requestPath"`
	// Type of the resource.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ProbeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeResponse)(nil)).Elem()
}

func (i ProbeResponseArgs) ToProbeResponseOutput() ProbeResponseOutput {
	return i.ToProbeResponseOutputWithContext(context.Background())
}

func (i ProbeResponseArgs) ToProbeResponseOutputWithContext(ctx context.Context) ProbeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeResponseOutput)
}

// ProbeResponseArrayInput is an input type that accepts ProbeResponseArray and ProbeResponseArrayOutput values.
// You can construct a concrete instance of `ProbeResponseArrayInput` via:
//
//          ProbeResponseArray{ ProbeResponseArgs{...} }
type ProbeResponseArrayInput interface {
	pulumi.Input

	ToProbeResponseArrayOutput() ProbeResponseArrayOutput
	ToProbeResponseArrayOutputWithContext(context.Context) ProbeResponseArrayOutput
}

type ProbeResponseArray []ProbeResponseInput

func (ProbeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProbeResponse)(nil)).Elem()
}

func (i ProbeResponseArray) ToProbeResponseArrayOutput() ProbeResponseArrayOutput {
	return i.ToProbeResponseArrayOutputWithContext(context.Background())
}

func (i ProbeResponseArray) ToProbeResponseArrayOutputWithContext(ctx context.Context) ProbeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeResponseArrayOutput)
}

// A load balancer probe.
type ProbeResponseOutput struct{ *pulumi.OutputState }

func (ProbeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeResponse)(nil)).Elem()
}

func (o ProbeResponseOutput) ToProbeResponseOutput() ProbeResponseOutput {
	return o
}

func (o ProbeResponseOutput) ToProbeResponseOutputWithContext(ctx context.Context) ProbeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ProbeResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ProbeResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ProbeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
func (o ProbeResponseOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The load balancer rules that use this probe.
func (o ProbeResponseOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ProbeResponse) []SubResourceResponse { return v.LoadBalancingRules }).(SubResourceResponseArrayOutput)
}

// The name of the resource that is unique within the set of probes used by the load balancer. This name can be used to access the resource.
func (o ProbeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
func (o ProbeResponseOutput) NumberOfProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *int { return v.NumberOfProbes }).(pulumi.IntPtrOutput)
}

// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
func (o ProbeResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ProbeResponse) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
func (o ProbeResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ProbeResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the probe resource.
func (o ProbeResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ProbeResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
func (o ProbeResponseOutput) RequestPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *string { return v.RequestPath }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ProbeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProbeResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ProbeResponseArrayOutput struct{ *pulumi.OutputState }

func (ProbeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProbeResponse)(nil)).Elem()
}

func (o ProbeResponseArrayOutput) ToProbeResponseArrayOutput() ProbeResponseArrayOutput {
	return o
}

func (o ProbeResponseArrayOutput) ToProbeResponseArrayOutputWithContext(ctx context.Context) ProbeResponseArrayOutput {
	return o
}

func (o ProbeResponseArrayOutput) Index(i pulumi.IntInput) ProbeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProbeResponse {
		return vs[0].([]ProbeResponse)[vs[1].(int)]
	}).(ProbeResponseOutput)
}

// The list of RouteTables to advertise the routes to.
type PropagatedRouteTable struct {
	// The list of resource ids of all the RouteTables.
	Ids []SubResource `pulumi:"ids"`
	// The list of labels.
	Labels []string `pulumi:"labels"`
}

// PropagatedRouteTableInput is an input type that accepts PropagatedRouteTableArgs and PropagatedRouteTableOutput values.
// You can construct a concrete instance of `PropagatedRouteTableInput` via:
//
//          PropagatedRouteTableArgs{...}
type PropagatedRouteTableInput interface {
	pulumi.Input

	ToPropagatedRouteTableOutput() PropagatedRouteTableOutput
	ToPropagatedRouteTableOutputWithContext(context.Context) PropagatedRouteTableOutput
}

// The list of RouteTables to advertise the routes to.
type PropagatedRouteTableArgs struct {
	// The list of resource ids of all the RouteTables.
	Ids SubResourceArrayInput `pulumi:"ids"`
	// The list of labels.
	Labels pulumi.StringArrayInput `pulumi:"labels"`
}

func (PropagatedRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropagatedRouteTable)(nil)).Elem()
}

func (i PropagatedRouteTableArgs) ToPropagatedRouteTableOutput() PropagatedRouteTableOutput {
	return i.ToPropagatedRouteTableOutputWithContext(context.Background())
}

func (i PropagatedRouteTableArgs) ToPropagatedRouteTableOutputWithContext(ctx context.Context) PropagatedRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropagatedRouteTableOutput)
}

func (i PropagatedRouteTableArgs) ToPropagatedRouteTablePtrOutput() PropagatedRouteTablePtrOutput {
	return i.ToPropagatedRouteTablePtrOutputWithContext(context.Background())
}

func (i PropagatedRouteTableArgs) ToPropagatedRouteTablePtrOutputWithContext(ctx context.Context) PropagatedRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropagatedRouteTableOutput).ToPropagatedRouteTablePtrOutputWithContext(ctx)
}

// PropagatedRouteTablePtrInput is an input type that accepts PropagatedRouteTableArgs, PropagatedRouteTablePtr and PropagatedRouteTablePtrOutput values.
// You can construct a concrete instance of `PropagatedRouteTablePtrInput` via:
//
//          PropagatedRouteTableArgs{...}
//
//  or:
//
//          nil
type PropagatedRouteTablePtrInput interface {
	pulumi.Input

	ToPropagatedRouteTablePtrOutput() PropagatedRouteTablePtrOutput
	ToPropagatedRouteTablePtrOutputWithContext(context.Context) PropagatedRouteTablePtrOutput
}

type propagatedRouteTablePtrType PropagatedRouteTableArgs

func PropagatedRouteTablePtr(v *PropagatedRouteTableArgs) PropagatedRouteTablePtrInput {
	return (*propagatedRouteTablePtrType)(v)
}

func (*propagatedRouteTablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PropagatedRouteTable)(nil)).Elem()
}

func (i *propagatedRouteTablePtrType) ToPropagatedRouteTablePtrOutput() PropagatedRouteTablePtrOutput {
	return i.ToPropagatedRouteTablePtrOutputWithContext(context.Background())
}

func (i *propagatedRouteTablePtrType) ToPropagatedRouteTablePtrOutputWithContext(ctx context.Context) PropagatedRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropagatedRouteTablePtrOutput)
}

// The list of RouteTables to advertise the routes to.
type PropagatedRouteTableOutput struct{ *pulumi.OutputState }

func (PropagatedRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropagatedRouteTable)(nil)).Elem()
}

func (o PropagatedRouteTableOutput) ToPropagatedRouteTableOutput() PropagatedRouteTableOutput {
	return o
}

func (o PropagatedRouteTableOutput) ToPropagatedRouteTableOutputWithContext(ctx context.Context) PropagatedRouteTableOutput {
	return o
}

func (o PropagatedRouteTableOutput) ToPropagatedRouteTablePtrOutput() PropagatedRouteTablePtrOutput {
	return o.ToPropagatedRouteTablePtrOutputWithContext(context.Background())
}

func (o PropagatedRouteTableOutput) ToPropagatedRouteTablePtrOutputWithContext(ctx context.Context) PropagatedRouteTablePtrOutput {
	return o.ApplyT(func(v PropagatedRouteTable) *PropagatedRouteTable {
		return &v
	}).(PropagatedRouteTablePtrOutput)
}

// The list of resource ids of all the RouteTables.
func (o PropagatedRouteTableOutput) Ids() SubResourceArrayOutput {
	return o.ApplyT(func(v PropagatedRouteTable) []SubResource { return v.Ids }).(SubResourceArrayOutput)
}

// The list of labels.
func (o PropagatedRouteTableOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PropagatedRouteTable) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

type PropagatedRouteTablePtrOutput struct{ *pulumi.OutputState }

func (PropagatedRouteTablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PropagatedRouteTable)(nil)).Elem()
}

func (o PropagatedRouteTablePtrOutput) ToPropagatedRouteTablePtrOutput() PropagatedRouteTablePtrOutput {
	return o
}

func (o PropagatedRouteTablePtrOutput) ToPropagatedRouteTablePtrOutputWithContext(ctx context.Context) PropagatedRouteTablePtrOutput {
	return o
}

func (o PropagatedRouteTablePtrOutput) Elem() PropagatedRouteTableOutput {
	return o.ApplyT(func(v *PropagatedRouteTable) PropagatedRouteTable { return *v }).(PropagatedRouteTableOutput)
}

// The list of resource ids of all the RouteTables.
func (o PropagatedRouteTablePtrOutput) Ids() SubResourceArrayOutput {
	return o.ApplyT(func(v *PropagatedRouteTable) []SubResource {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(SubResourceArrayOutput)
}

// The list of labels.
func (o PropagatedRouteTablePtrOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PropagatedRouteTable) []string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

// The list of RouteTables to advertise the routes to.
type PropagatedRouteTableResponse struct {
	// The list of resource ids of all the RouteTables.
	Ids []SubResourceResponse `pulumi:"ids"`
	// The list of labels.
	Labels []string `pulumi:"labels"`
}

// PropagatedRouteTableResponseInput is an input type that accepts PropagatedRouteTableResponseArgs and PropagatedRouteTableResponseOutput values.
// You can construct a concrete instance of `PropagatedRouteTableResponseInput` via:
//
//          PropagatedRouteTableResponseArgs{...}
type PropagatedRouteTableResponseInput interface {
	pulumi.Input

	ToPropagatedRouteTableResponseOutput() PropagatedRouteTableResponseOutput
	ToPropagatedRouteTableResponseOutputWithContext(context.Context) PropagatedRouteTableResponseOutput
}

// The list of RouteTables to advertise the routes to.
type PropagatedRouteTableResponseArgs struct {
	// The list of resource ids of all the RouteTables.
	Ids SubResourceResponseArrayInput `pulumi:"ids"`
	// The list of labels.
	Labels pulumi.StringArrayInput `pulumi:"labels"`
}

func (PropagatedRouteTableResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PropagatedRouteTableResponse)(nil)).Elem()
}

func (i PropagatedRouteTableResponseArgs) ToPropagatedRouteTableResponseOutput() PropagatedRouteTableResponseOutput {
	return i.ToPropagatedRouteTableResponseOutputWithContext(context.Background())
}

func (i PropagatedRouteTableResponseArgs) ToPropagatedRouteTableResponseOutputWithContext(ctx context.Context) PropagatedRouteTableResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropagatedRouteTableResponseOutput)
}

func (i PropagatedRouteTableResponseArgs) ToPropagatedRouteTableResponsePtrOutput() PropagatedRouteTableResponsePtrOutput {
	return i.ToPropagatedRouteTableResponsePtrOutputWithContext(context.Background())
}

func (i PropagatedRouteTableResponseArgs) ToPropagatedRouteTableResponsePtrOutputWithContext(ctx context.Context) PropagatedRouteTableResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropagatedRouteTableResponseOutput).ToPropagatedRouteTableResponsePtrOutputWithContext(ctx)
}

// PropagatedRouteTableResponsePtrInput is an input type that accepts PropagatedRouteTableResponseArgs, PropagatedRouteTableResponsePtr and PropagatedRouteTableResponsePtrOutput values.
// You can construct a concrete instance of `PropagatedRouteTableResponsePtrInput` via:
//
//          PropagatedRouteTableResponseArgs{...}
//
//  or:
//
//          nil
type PropagatedRouteTableResponsePtrInput interface {
	pulumi.Input

	ToPropagatedRouteTableResponsePtrOutput() PropagatedRouteTableResponsePtrOutput
	ToPropagatedRouteTableResponsePtrOutputWithContext(context.Context) PropagatedRouteTableResponsePtrOutput
}

type propagatedRouteTableResponsePtrType PropagatedRouteTableResponseArgs

func PropagatedRouteTableResponsePtr(v *PropagatedRouteTableResponseArgs) PropagatedRouteTableResponsePtrInput {
	return (*propagatedRouteTableResponsePtrType)(v)
}

func (*propagatedRouteTableResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PropagatedRouteTableResponse)(nil)).Elem()
}

func (i *propagatedRouteTableResponsePtrType) ToPropagatedRouteTableResponsePtrOutput() PropagatedRouteTableResponsePtrOutput {
	return i.ToPropagatedRouteTableResponsePtrOutputWithContext(context.Background())
}

func (i *propagatedRouteTableResponsePtrType) ToPropagatedRouteTableResponsePtrOutputWithContext(ctx context.Context) PropagatedRouteTableResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PropagatedRouteTableResponsePtrOutput)
}

// The list of RouteTables to advertise the routes to.
type PropagatedRouteTableResponseOutput struct{ *pulumi.OutputState }

func (PropagatedRouteTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PropagatedRouteTableResponse)(nil)).Elem()
}

func (o PropagatedRouteTableResponseOutput) ToPropagatedRouteTableResponseOutput() PropagatedRouteTableResponseOutput {
	return o
}

func (o PropagatedRouteTableResponseOutput) ToPropagatedRouteTableResponseOutputWithContext(ctx context.Context) PropagatedRouteTableResponseOutput {
	return o
}

func (o PropagatedRouteTableResponseOutput) ToPropagatedRouteTableResponsePtrOutput() PropagatedRouteTableResponsePtrOutput {
	return o.ToPropagatedRouteTableResponsePtrOutputWithContext(context.Background())
}

func (o PropagatedRouteTableResponseOutput) ToPropagatedRouteTableResponsePtrOutputWithContext(ctx context.Context) PropagatedRouteTableResponsePtrOutput {
	return o.ApplyT(func(v PropagatedRouteTableResponse) *PropagatedRouteTableResponse {
		return &v
	}).(PropagatedRouteTableResponsePtrOutput)
}

// The list of resource ids of all the RouteTables.
func (o PropagatedRouteTableResponseOutput) Ids() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v PropagatedRouteTableResponse) []SubResourceResponse { return v.Ids }).(SubResourceResponseArrayOutput)
}

// The list of labels.
func (o PropagatedRouteTableResponseOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PropagatedRouteTableResponse) []string { return v.Labels }).(pulumi.StringArrayOutput)
}

type PropagatedRouteTableResponsePtrOutput struct{ *pulumi.OutputState }

func (PropagatedRouteTableResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PropagatedRouteTableResponse)(nil)).Elem()
}

func (o PropagatedRouteTableResponsePtrOutput) ToPropagatedRouteTableResponsePtrOutput() PropagatedRouteTableResponsePtrOutput {
	return o
}

func (o PropagatedRouteTableResponsePtrOutput) ToPropagatedRouteTableResponsePtrOutputWithContext(ctx context.Context) PropagatedRouteTableResponsePtrOutput {
	return o
}

func (o PropagatedRouteTableResponsePtrOutput) Elem() PropagatedRouteTableResponseOutput {
	return o.ApplyT(func(v *PropagatedRouteTableResponse) PropagatedRouteTableResponse { return *v }).(PropagatedRouteTableResponseOutput)
}

// The list of resource ids of all the RouteTables.
func (o PropagatedRouteTableResponsePtrOutput) Ids() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *PropagatedRouteTableResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.Ids
	}).(SubResourceResponseArrayOutput)
}

// The list of labels.
func (o PropagatedRouteTableResponsePtrOutput) Labels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PropagatedRouteTableResponse) []string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringArrayOutput)
}

// DDoS custom policy properties.
type ProtocolCustomSettingsFormat struct {
	// The protocol for which the DDoS protection policy is being customized.
	Protocol *string `pulumi:"protocol"`
	// The customized DDoS protection source rate.
	SourceRateOverride *string `pulumi:"sourceRateOverride"`
	// The customized DDoS protection trigger rate.
	TriggerRateOverride *string `pulumi:"triggerRateOverride"`
	// The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
	TriggerSensitivityOverride *string `pulumi:"triggerSensitivityOverride"`
}

// ProtocolCustomSettingsFormatInput is an input type that accepts ProtocolCustomSettingsFormatArgs and ProtocolCustomSettingsFormatOutput values.
// You can construct a concrete instance of `ProtocolCustomSettingsFormatInput` via:
//
//          ProtocolCustomSettingsFormatArgs{...}
type ProtocolCustomSettingsFormatInput interface {
	pulumi.Input

	ToProtocolCustomSettingsFormatOutput() ProtocolCustomSettingsFormatOutput
	ToProtocolCustomSettingsFormatOutputWithContext(context.Context) ProtocolCustomSettingsFormatOutput
}

// DDoS custom policy properties.
type ProtocolCustomSettingsFormatArgs struct {
	// The protocol for which the DDoS protection policy is being customized.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The customized DDoS protection source rate.
	SourceRateOverride pulumi.StringPtrInput `pulumi:"sourceRateOverride"`
	// The customized DDoS protection trigger rate.
	TriggerRateOverride pulumi.StringPtrInput `pulumi:"triggerRateOverride"`
	// The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
	TriggerSensitivityOverride pulumi.StringPtrInput `pulumi:"triggerSensitivityOverride"`
}

func (ProtocolCustomSettingsFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtocolCustomSettingsFormat)(nil)).Elem()
}

func (i ProtocolCustomSettingsFormatArgs) ToProtocolCustomSettingsFormatOutput() ProtocolCustomSettingsFormatOutput {
	return i.ToProtocolCustomSettingsFormatOutputWithContext(context.Background())
}

func (i ProtocolCustomSettingsFormatArgs) ToProtocolCustomSettingsFormatOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtocolCustomSettingsFormatOutput)
}

// ProtocolCustomSettingsFormatArrayInput is an input type that accepts ProtocolCustomSettingsFormatArray and ProtocolCustomSettingsFormatArrayOutput values.
// You can construct a concrete instance of `ProtocolCustomSettingsFormatArrayInput` via:
//
//          ProtocolCustomSettingsFormatArray{ ProtocolCustomSettingsFormatArgs{...} }
type ProtocolCustomSettingsFormatArrayInput interface {
	pulumi.Input

	ToProtocolCustomSettingsFormatArrayOutput() ProtocolCustomSettingsFormatArrayOutput
	ToProtocolCustomSettingsFormatArrayOutputWithContext(context.Context) ProtocolCustomSettingsFormatArrayOutput
}

type ProtocolCustomSettingsFormatArray []ProtocolCustomSettingsFormatInput

func (ProtocolCustomSettingsFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtocolCustomSettingsFormat)(nil)).Elem()
}

func (i ProtocolCustomSettingsFormatArray) ToProtocolCustomSettingsFormatArrayOutput() ProtocolCustomSettingsFormatArrayOutput {
	return i.ToProtocolCustomSettingsFormatArrayOutputWithContext(context.Background())
}

func (i ProtocolCustomSettingsFormatArray) ToProtocolCustomSettingsFormatArrayOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtocolCustomSettingsFormatArrayOutput)
}

// DDoS custom policy properties.
type ProtocolCustomSettingsFormatOutput struct{ *pulumi.OutputState }

func (ProtocolCustomSettingsFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtocolCustomSettingsFormat)(nil)).Elem()
}

func (o ProtocolCustomSettingsFormatOutput) ToProtocolCustomSettingsFormatOutput() ProtocolCustomSettingsFormatOutput {
	return o
}

func (o ProtocolCustomSettingsFormatOutput) ToProtocolCustomSettingsFormatOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatOutput {
	return o
}

// The protocol for which the DDoS protection policy is being customized.
func (o ProtocolCustomSettingsFormatOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormat) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The customized DDoS protection source rate.
func (o ProtocolCustomSettingsFormatOutput) SourceRateOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormat) *string { return v.SourceRateOverride }).(pulumi.StringPtrOutput)
}

// The customized DDoS protection trigger rate.
func (o ProtocolCustomSettingsFormatOutput) TriggerRateOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormat) *string { return v.TriggerRateOverride }).(pulumi.StringPtrOutput)
}

// The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
func (o ProtocolCustomSettingsFormatOutput) TriggerSensitivityOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormat) *string { return v.TriggerSensitivityOverride }).(pulumi.StringPtrOutput)
}

type ProtocolCustomSettingsFormatArrayOutput struct{ *pulumi.OutputState }

func (ProtocolCustomSettingsFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtocolCustomSettingsFormat)(nil)).Elem()
}

func (o ProtocolCustomSettingsFormatArrayOutput) ToProtocolCustomSettingsFormatArrayOutput() ProtocolCustomSettingsFormatArrayOutput {
	return o
}

func (o ProtocolCustomSettingsFormatArrayOutput) ToProtocolCustomSettingsFormatArrayOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatArrayOutput {
	return o
}

func (o ProtocolCustomSettingsFormatArrayOutput) Index(i pulumi.IntInput) ProtocolCustomSettingsFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProtocolCustomSettingsFormat {
		return vs[0].([]ProtocolCustomSettingsFormat)[vs[1].(int)]
	}).(ProtocolCustomSettingsFormatOutput)
}

// DDoS custom policy properties.
type ProtocolCustomSettingsFormatResponse struct {
	// The protocol for which the DDoS protection policy is being customized.
	Protocol *string `pulumi:"protocol"`
	// The customized DDoS protection source rate.
	SourceRateOverride *string `pulumi:"sourceRateOverride"`
	// The customized DDoS protection trigger rate.
	TriggerRateOverride *string `pulumi:"triggerRateOverride"`
	// The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
	TriggerSensitivityOverride *string `pulumi:"triggerSensitivityOverride"`
}

// ProtocolCustomSettingsFormatResponseInput is an input type that accepts ProtocolCustomSettingsFormatResponseArgs and ProtocolCustomSettingsFormatResponseOutput values.
// You can construct a concrete instance of `ProtocolCustomSettingsFormatResponseInput` via:
//
//          ProtocolCustomSettingsFormatResponseArgs{...}
type ProtocolCustomSettingsFormatResponseInput interface {
	pulumi.Input

	ToProtocolCustomSettingsFormatResponseOutput() ProtocolCustomSettingsFormatResponseOutput
	ToProtocolCustomSettingsFormatResponseOutputWithContext(context.Context) ProtocolCustomSettingsFormatResponseOutput
}

// DDoS custom policy properties.
type ProtocolCustomSettingsFormatResponseArgs struct {
	// The protocol for which the DDoS protection policy is being customized.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The customized DDoS protection source rate.
	SourceRateOverride pulumi.StringPtrInput `pulumi:"sourceRateOverride"`
	// The customized DDoS protection trigger rate.
	TriggerRateOverride pulumi.StringPtrInput `pulumi:"triggerRateOverride"`
	// The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
	TriggerSensitivityOverride pulumi.StringPtrInput `pulumi:"triggerSensitivityOverride"`
}

func (ProtocolCustomSettingsFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtocolCustomSettingsFormatResponse)(nil)).Elem()
}

func (i ProtocolCustomSettingsFormatResponseArgs) ToProtocolCustomSettingsFormatResponseOutput() ProtocolCustomSettingsFormatResponseOutput {
	return i.ToProtocolCustomSettingsFormatResponseOutputWithContext(context.Background())
}

func (i ProtocolCustomSettingsFormatResponseArgs) ToProtocolCustomSettingsFormatResponseOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtocolCustomSettingsFormatResponseOutput)
}

// ProtocolCustomSettingsFormatResponseArrayInput is an input type that accepts ProtocolCustomSettingsFormatResponseArray and ProtocolCustomSettingsFormatResponseArrayOutput values.
// You can construct a concrete instance of `ProtocolCustomSettingsFormatResponseArrayInput` via:
//
//          ProtocolCustomSettingsFormatResponseArray{ ProtocolCustomSettingsFormatResponseArgs{...} }
type ProtocolCustomSettingsFormatResponseArrayInput interface {
	pulumi.Input

	ToProtocolCustomSettingsFormatResponseArrayOutput() ProtocolCustomSettingsFormatResponseArrayOutput
	ToProtocolCustomSettingsFormatResponseArrayOutputWithContext(context.Context) ProtocolCustomSettingsFormatResponseArrayOutput
}

type ProtocolCustomSettingsFormatResponseArray []ProtocolCustomSettingsFormatResponseInput

func (ProtocolCustomSettingsFormatResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtocolCustomSettingsFormatResponse)(nil)).Elem()
}

func (i ProtocolCustomSettingsFormatResponseArray) ToProtocolCustomSettingsFormatResponseArrayOutput() ProtocolCustomSettingsFormatResponseArrayOutput {
	return i.ToProtocolCustomSettingsFormatResponseArrayOutputWithContext(context.Background())
}

func (i ProtocolCustomSettingsFormatResponseArray) ToProtocolCustomSettingsFormatResponseArrayOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProtocolCustomSettingsFormatResponseArrayOutput)
}

// DDoS custom policy properties.
type ProtocolCustomSettingsFormatResponseOutput struct{ *pulumi.OutputState }

func (ProtocolCustomSettingsFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProtocolCustomSettingsFormatResponse)(nil)).Elem()
}

func (o ProtocolCustomSettingsFormatResponseOutput) ToProtocolCustomSettingsFormatResponseOutput() ProtocolCustomSettingsFormatResponseOutput {
	return o
}

func (o ProtocolCustomSettingsFormatResponseOutput) ToProtocolCustomSettingsFormatResponseOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatResponseOutput {
	return o
}

// The protocol for which the DDoS protection policy is being customized.
func (o ProtocolCustomSettingsFormatResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormatResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The customized DDoS protection source rate.
func (o ProtocolCustomSettingsFormatResponseOutput) SourceRateOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormatResponse) *string { return v.SourceRateOverride }).(pulumi.StringPtrOutput)
}

// The customized DDoS protection trigger rate.
func (o ProtocolCustomSettingsFormatResponseOutput) TriggerRateOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormatResponse) *string { return v.TriggerRateOverride }).(pulumi.StringPtrOutput)
}

// The customized DDoS protection trigger rate sensitivity degrees. High: Trigger rate set with most sensitivity w.r.t. normal traffic. Default: Trigger rate set with moderate sensitivity w.r.t. normal traffic. Low: Trigger rate set with less sensitivity w.r.t. normal traffic. Relaxed: Trigger rate set with least sensitivity w.r.t. normal traffic.
func (o ProtocolCustomSettingsFormatResponseOutput) TriggerSensitivityOverride() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProtocolCustomSettingsFormatResponse) *string { return v.TriggerSensitivityOverride }).(pulumi.StringPtrOutput)
}

type ProtocolCustomSettingsFormatResponseArrayOutput struct{ *pulumi.OutputState }

func (ProtocolCustomSettingsFormatResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProtocolCustomSettingsFormatResponse)(nil)).Elem()
}

func (o ProtocolCustomSettingsFormatResponseArrayOutput) ToProtocolCustomSettingsFormatResponseArrayOutput() ProtocolCustomSettingsFormatResponseArrayOutput {
	return o
}

func (o ProtocolCustomSettingsFormatResponseArrayOutput) ToProtocolCustomSettingsFormatResponseArrayOutputWithContext(ctx context.Context) ProtocolCustomSettingsFormatResponseArrayOutput {
	return o
}

func (o ProtocolCustomSettingsFormatResponseArrayOutput) Index(i pulumi.IntInput) ProtocolCustomSettingsFormatResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProtocolCustomSettingsFormatResponse {
		return vs[0].([]ProtocolCustomSettingsFormatResponse)[vs[1].(int)]
	}).(ProtocolCustomSettingsFormatResponseOutput)
}

// A PTR record.
type PtrRecord struct {
	// The PTR target domain name for this PTR record.
	Ptrdname *string `pulumi:"ptrdname"`
}

// PtrRecordInput is an input type that accepts PtrRecordArgs and PtrRecordOutput values.
// You can construct a concrete instance of `PtrRecordInput` via:
//
//          PtrRecordArgs{...}
type PtrRecordInput interface {
	pulumi.Input

	ToPtrRecordOutput() PtrRecordOutput
	ToPtrRecordOutputWithContext(context.Context) PtrRecordOutput
}

// A PTR record.
type PtrRecordArgs struct {
	// The PTR target domain name for this PTR record.
	Ptrdname pulumi.StringPtrInput `pulumi:"ptrdname"`
}

func (PtrRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PtrRecord)(nil)).Elem()
}

func (i PtrRecordArgs) ToPtrRecordOutput() PtrRecordOutput {
	return i.ToPtrRecordOutputWithContext(context.Background())
}

func (i PtrRecordArgs) ToPtrRecordOutputWithContext(ctx context.Context) PtrRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PtrRecordOutput)
}

// PtrRecordArrayInput is an input type that accepts PtrRecordArray and PtrRecordArrayOutput values.
// You can construct a concrete instance of `PtrRecordArrayInput` via:
//
//          PtrRecordArray{ PtrRecordArgs{...} }
type PtrRecordArrayInput interface {
	pulumi.Input

	ToPtrRecordArrayOutput() PtrRecordArrayOutput
	ToPtrRecordArrayOutputWithContext(context.Context) PtrRecordArrayOutput
}

type PtrRecordArray []PtrRecordInput

func (PtrRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PtrRecord)(nil)).Elem()
}

func (i PtrRecordArray) ToPtrRecordArrayOutput() PtrRecordArrayOutput {
	return i.ToPtrRecordArrayOutputWithContext(context.Background())
}

func (i PtrRecordArray) ToPtrRecordArrayOutputWithContext(ctx context.Context) PtrRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PtrRecordArrayOutput)
}

// A PTR record.
type PtrRecordOutput struct{ *pulumi.OutputState }

func (PtrRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PtrRecord)(nil)).Elem()
}

func (o PtrRecordOutput) ToPtrRecordOutput() PtrRecordOutput {
	return o
}

func (o PtrRecordOutput) ToPtrRecordOutputWithContext(ctx context.Context) PtrRecordOutput {
	return o
}

// The PTR target domain name for this PTR record.
func (o PtrRecordOutput) Ptrdname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PtrRecord) *string { return v.Ptrdname }).(pulumi.StringPtrOutput)
}

type PtrRecordArrayOutput struct{ *pulumi.OutputState }

func (PtrRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PtrRecord)(nil)).Elem()
}

func (o PtrRecordArrayOutput) ToPtrRecordArrayOutput() PtrRecordArrayOutput {
	return o
}

func (o PtrRecordArrayOutput) ToPtrRecordArrayOutputWithContext(ctx context.Context) PtrRecordArrayOutput {
	return o
}

func (o PtrRecordArrayOutput) Index(i pulumi.IntInput) PtrRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PtrRecord {
		return vs[0].([]PtrRecord)[vs[1].(int)]
	}).(PtrRecordOutput)
}

// A PTR record.
type PtrRecordResponse struct {
	// The PTR target domain name for this PTR record.
	Ptrdname *string `pulumi:"ptrdname"`
}

// PtrRecordResponseInput is an input type that accepts PtrRecordResponseArgs and PtrRecordResponseOutput values.
// You can construct a concrete instance of `PtrRecordResponseInput` via:
//
//          PtrRecordResponseArgs{...}
type PtrRecordResponseInput interface {
	pulumi.Input

	ToPtrRecordResponseOutput() PtrRecordResponseOutput
	ToPtrRecordResponseOutputWithContext(context.Context) PtrRecordResponseOutput
}

// A PTR record.
type PtrRecordResponseArgs struct {
	// The PTR target domain name for this PTR record.
	Ptrdname pulumi.StringPtrInput `pulumi:"ptrdname"`
}

func (PtrRecordResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PtrRecordResponse)(nil)).Elem()
}

func (i PtrRecordResponseArgs) ToPtrRecordResponseOutput() PtrRecordResponseOutput {
	return i.ToPtrRecordResponseOutputWithContext(context.Background())
}

func (i PtrRecordResponseArgs) ToPtrRecordResponseOutputWithContext(ctx context.Context) PtrRecordResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PtrRecordResponseOutput)
}

// PtrRecordResponseArrayInput is an input type that accepts PtrRecordResponseArray and PtrRecordResponseArrayOutput values.
// You can construct a concrete instance of `PtrRecordResponseArrayInput` via:
//
//          PtrRecordResponseArray{ PtrRecordResponseArgs{...} }
type PtrRecordResponseArrayInput interface {
	pulumi.Input

	ToPtrRecordResponseArrayOutput() PtrRecordResponseArrayOutput
	ToPtrRecordResponseArrayOutputWithContext(context.Context) PtrRecordResponseArrayOutput
}

type PtrRecordResponseArray []PtrRecordResponseInput

func (PtrRecordResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PtrRecordResponse)(nil)).Elem()
}

func (i PtrRecordResponseArray) ToPtrRecordResponseArrayOutput() PtrRecordResponseArrayOutput {
	return i.ToPtrRecordResponseArrayOutputWithContext(context.Background())
}

func (i PtrRecordResponseArray) ToPtrRecordResponseArrayOutputWithContext(ctx context.Context) PtrRecordResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PtrRecordResponseArrayOutput)
}

// A PTR record.
type PtrRecordResponseOutput struct{ *pulumi.OutputState }

func (PtrRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PtrRecordResponse)(nil)).Elem()
}

func (o PtrRecordResponseOutput) ToPtrRecordResponseOutput() PtrRecordResponseOutput {
	return o
}

func (o PtrRecordResponseOutput) ToPtrRecordResponseOutputWithContext(ctx context.Context) PtrRecordResponseOutput {
	return o
}

// The PTR target domain name for this PTR record.
func (o PtrRecordResponseOutput) Ptrdname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PtrRecordResponse) *string { return v.Ptrdname }).(pulumi.StringPtrOutput)
}

type PtrRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (PtrRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PtrRecordResponse)(nil)).Elem()
}

func (o PtrRecordResponseArrayOutput) ToPtrRecordResponseArrayOutput() PtrRecordResponseArrayOutput {
	return o
}

func (o PtrRecordResponseArrayOutput) ToPtrRecordResponseArrayOutputWithContext(ctx context.Context) PtrRecordResponseArrayOutput {
	return o
}

func (o PtrRecordResponseArrayOutput) Index(i pulumi.IntInput) PtrRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PtrRecordResponse {
		return vs[0].([]PtrRecordResponse)[vs[1].(int)]
	}).(PtrRecordResponseOutput)
}

// Public IP address resource.
type PublicIPAddressType struct {
	// The DDoS protection custom policy associated with the public IP address.
	DdosSettings *DdosSettings `pulumi:"ddosSettings"`
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings *PublicIPAddressDnsSettings `pulumi:"dnsSettings"`
	// The extended location of the public ip address.
	ExtendedLocation *ExtendedLocation `pulumi:"extendedLocation"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The IP address associated with the public IP address resource.
	IpAddress *string `pulumi:"ipAddress"`
	// The list of tags associated with the public IP address.
	IpTags []IpTag `pulumi:"ipTags"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The public IP address version.
	PublicIPAddressVersion *string `pulumi:"publicIPAddressVersion"`
	// The public IP address allocation method.
	PublicIPAllocationMethod *string `pulumi:"publicIPAllocationMethod"`
	// The Public IP Prefix this Public IP Address should be allocated from.
	PublicIPPrefix *SubResource `pulumi:"publicIPPrefix"`
	// The public IP address SKU.
	Sku *PublicIPAddressSku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// PublicIPAddressTypeInput is an input type that accepts PublicIPAddressTypeArgs and PublicIPAddressTypeOutput values.
// You can construct a concrete instance of `PublicIPAddressTypeInput` via:
//
//          PublicIPAddressTypeArgs{...}
type PublicIPAddressTypeInput interface {
	pulumi.Input

	ToPublicIPAddressTypeOutput() PublicIPAddressTypeOutput
	ToPublicIPAddressTypeOutputWithContext(context.Context) PublicIPAddressTypeOutput
}

// Public IP address resource.
type PublicIPAddressTypeArgs struct {
	// The DDoS protection custom policy associated with the public IP address.
	DdosSettings DdosSettingsPtrInput `pulumi:"ddosSettings"`
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings PublicIPAddressDnsSettingsPtrInput `pulumi:"dnsSettings"`
	// The extended location of the public ip address.
	ExtendedLocation ExtendedLocationPtrInput `pulumi:"extendedLocation"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The IP address associated with the public IP address resource.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The list of tags associated with the public IP address.
	IpTags IpTagArrayInput `pulumi:"ipTags"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The public IP address version.
	PublicIPAddressVersion pulumi.StringPtrInput `pulumi:"publicIPAddressVersion"`
	// The public IP address allocation method.
	PublicIPAllocationMethod pulumi.StringPtrInput `pulumi:"publicIPAllocationMethod"`
	// The Public IP Prefix this Public IP Address should be allocated from.
	PublicIPPrefix SubResourcePtrInput `pulumi:"publicIPPrefix"`
	// The public IP address SKU.
	Sku PublicIPAddressSkuPtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (PublicIPAddressTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressType)(nil)).Elem()
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypeOutput() PublicIPAddressTypeOutput {
	return i.ToPublicIPAddressTypeOutputWithContext(context.Background())
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypeOutputWithContext(ctx context.Context) PublicIPAddressTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressTypeOutput)
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return i.ToPublicIPAddressTypePtrOutputWithContext(context.Background())
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressTypeOutput).ToPublicIPAddressTypePtrOutputWithContext(ctx)
}

// PublicIPAddressTypePtrInput is an input type that accepts PublicIPAddressTypeArgs, PublicIPAddressTypePtr and PublicIPAddressTypePtrOutput values.
// You can construct a concrete instance of `PublicIPAddressTypePtrInput` via:
//
//          PublicIPAddressTypeArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressTypePtrInput interface {
	pulumi.Input

	ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput
	ToPublicIPAddressTypePtrOutputWithContext(context.Context) PublicIPAddressTypePtrOutput
}

type publicIPAddressTypePtrType PublicIPAddressTypeArgs

func PublicIPAddressTypePtr(v *PublicIPAddressTypeArgs) PublicIPAddressTypePtrInput {
	return (*publicIPAddressTypePtrType)(v)
}

func (*publicIPAddressTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressType)(nil)).Elem()
}

func (i *publicIPAddressTypePtrType) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return i.ToPublicIPAddressTypePtrOutputWithContext(context.Background())
}

func (i *publicIPAddressTypePtrType) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressTypePtrOutput)
}

// Public IP address resource.
type PublicIPAddressTypeOutput struct{ *pulumi.OutputState }

func (PublicIPAddressTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressType)(nil)).Elem()
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypeOutput() PublicIPAddressTypeOutput {
	return o
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypeOutputWithContext(ctx context.Context) PublicIPAddressTypeOutput {
	return o
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return o.ToPublicIPAddressTypePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *PublicIPAddressType {
		return &v
	}).(PublicIPAddressTypePtrOutput)
}

// The DDoS protection custom policy associated with the public IP address.
func (o PublicIPAddressTypeOutput) DdosSettings() DdosSettingsPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *DdosSettings { return v.DdosSettings }).(DdosSettingsPtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressTypeOutput) DnsSettings() PublicIPAddressDnsSettingsPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *PublicIPAddressDnsSettings { return v.DnsSettings }).(PublicIPAddressDnsSettingsPtrOutput)
}

// The extended location of the public ip address.
func (o PublicIPAddressTypeOutput) ExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *ExtendedLocation { return v.ExtendedLocation }).(ExtendedLocationPtrOutput)
}

// Resource ID.
func (o PublicIPAddressTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressTypeOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressTypeOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressTypeOutput) IpTags() IpTagArrayOutput {
	return o.ApplyT(func(v PublicIPAddressType) []IpTag { return v.IpTags }).(IpTagArrayOutput)
}

// Resource location.
func (o PublicIPAddressTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The public IP address version.
func (o PublicIPAddressTypeOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.PublicIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The public IP address allocation method.
func (o PublicIPAddressTypeOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.PublicIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The Public IP Prefix this Public IP Address should be allocated from.
func (o PublicIPAddressTypeOutput) PublicIPPrefix() SubResourcePtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *SubResource { return v.PublicIPPrefix }).(SubResourcePtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressTypeOutput) Sku() PublicIPAddressSkuPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *PublicIPAddressSku { return v.Sku }).(PublicIPAddressSkuPtrOutput)
}

// Resource tags.
func (o PublicIPAddressTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PublicIPAddressType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressTypeOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PublicIPAddressType) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type PublicIPAddressTypePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressType)(nil)).Elem()
}

func (o PublicIPAddressTypePtrOutput) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return o
}

func (o PublicIPAddressTypePtrOutput) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return o
}

func (o PublicIPAddressTypePtrOutput) Elem() PublicIPAddressTypeOutput {
	return o.ApplyT(func(v *PublicIPAddressType) PublicIPAddressType { return *v }).(PublicIPAddressTypeOutput)
}

// The DDoS protection custom policy associated with the public IP address.
func (o PublicIPAddressTypePtrOutput) DdosSettings() DdosSettingsPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *DdosSettings {
		if v == nil {
			return nil
		}
		return v.DdosSettings
	}).(DdosSettingsPtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressTypePtrOutput) DnsSettings() PublicIPAddressDnsSettingsPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *PublicIPAddressDnsSettings {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(PublicIPAddressDnsSettingsPtrOutput)
}

// The extended location of the public ip address.
func (o PublicIPAddressTypePtrOutput) ExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *ExtendedLocation {
		if v == nil {
			return nil
		}
		return v.ExtendedLocation
	}).(ExtendedLocationPtrOutput)
}

// Resource ID.
func (o PublicIPAddressTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressTypePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressTypePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressTypePtrOutput) IpTags() IpTagArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressType) []IpTag {
		if v == nil {
			return nil
		}
		return v.IpTags
	}).(IpTagArrayOutput)
}

// Resource location.
func (o PublicIPAddressTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The public IP address version.
func (o PublicIPAddressTypePtrOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The public IP address allocation method.
func (o PublicIPAddressTypePtrOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The Public IP Prefix this Public IP Address should be allocated from.
func (o PublicIPAddressTypePtrOutput) PublicIPPrefix() SubResourcePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *SubResource {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefix
	}).(SubResourcePtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressTypePtrOutput) Sku() PublicIPAddressSkuPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *PublicIPAddressSku {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(PublicIPAddressSkuPtrOutput)
}

// Resource tags.
func (o PublicIPAddressTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PublicIPAddressType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressTypePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressType) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

// Contains FQDN of the DNS record associated with the public IP address.
type PublicIPAddressDnsSettings struct {
	// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn *string `pulumi:"fqdn"`
	// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn *string `pulumi:"reverseFqdn"`
}

// PublicIPAddressDnsSettingsInput is an input type that accepts PublicIPAddressDnsSettingsArgs and PublicIPAddressDnsSettingsOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsInput` via:
//
//          PublicIPAddressDnsSettingsArgs{...}
type PublicIPAddressDnsSettingsInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsOutput() PublicIPAddressDnsSettingsOutput
	ToPublicIPAddressDnsSettingsOutputWithContext(context.Context) PublicIPAddressDnsSettingsOutput
}

// Contains FQDN of the DNS record associated with the public IP address.
type PublicIPAddressDnsSettingsArgs struct {
	// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel pulumi.StringPtrInput `pulumi:"domainNameLabel"`
	// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn pulumi.StringPtrInput `pulumi:"reverseFqdn"`
}

func (PublicIPAddressDnsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettings)(nil)).Elem()
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsOutput() PublicIPAddressDnsSettingsOutput {
	return i.ToPublicIPAddressDnsSettingsOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsOutput)
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return i.ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsOutput).ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx)
}

// PublicIPAddressDnsSettingsPtrInput is an input type that accepts PublicIPAddressDnsSettingsArgs, PublicIPAddressDnsSettingsPtr and PublicIPAddressDnsSettingsPtrOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsPtrInput` via:
//
//          PublicIPAddressDnsSettingsArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressDnsSettingsPtrInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput
	ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Context) PublicIPAddressDnsSettingsPtrOutput
}

type publicIPAddressDnsSettingsPtrType PublicIPAddressDnsSettingsArgs

func PublicIPAddressDnsSettingsPtr(v *PublicIPAddressDnsSettingsArgs) PublicIPAddressDnsSettingsPtrInput {
	return (*publicIPAddressDnsSettingsPtrType)(v)
}

func (*publicIPAddressDnsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettings)(nil)).Elem()
}

func (i *publicIPAddressDnsSettingsPtrType) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return i.ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Background())
}

func (i *publicIPAddressDnsSettingsPtrType) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsPtrOutput)
}

// Contains FQDN of the DNS record associated with the public IP address.
type PublicIPAddressDnsSettingsOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettings)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsOutput() PublicIPAddressDnsSettingsOutput {
	return o
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsOutput {
	return o
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return o.ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Background())
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *PublicIPAddressDnsSettings {
		return &v
	}).(PublicIPAddressDnsSettingsPtrOutput)
}

// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *string { return v.DomainNameLabel }).(pulumi.StringPtrOutput)
}

// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *string { return v.ReverseFqdn }).(pulumi.StringPtrOutput)
}

type PublicIPAddressDnsSettingsPtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettings)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsPtrOutput) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsPtrOutput) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsPtrOutput) Elem() PublicIPAddressDnsSettingsOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) PublicIPAddressDnsSettings { return *v }).(PublicIPAddressDnsSettingsOutput)
}

// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsPtrOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.DomainNameLabel
	}).(pulumi.StringPtrOutput)
}

// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsPtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsPtrOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.ReverseFqdn
	}).(pulumi.StringPtrOutput)
}

// Contains FQDN of the DNS record associated with the public IP address.
type PublicIPAddressDnsSettingsResponse struct {
	// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn *string `pulumi:"fqdn"`
	// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn *string `pulumi:"reverseFqdn"`
}

// PublicIPAddressDnsSettingsResponseInput is an input type that accepts PublicIPAddressDnsSettingsResponseArgs and PublicIPAddressDnsSettingsResponseOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsResponseInput` via:
//
//          PublicIPAddressDnsSettingsResponseArgs{...}
type PublicIPAddressDnsSettingsResponseInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsResponseOutput() PublicIPAddressDnsSettingsResponseOutput
	ToPublicIPAddressDnsSettingsResponseOutputWithContext(context.Context) PublicIPAddressDnsSettingsResponseOutput
}

// Contains FQDN of the DNS record associated with the public IP address.
type PublicIPAddressDnsSettingsResponseArgs struct {
	// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel pulumi.StringPtrInput `pulumi:"domainNameLabel"`
	// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn pulumi.StringPtrInput `pulumi:"reverseFqdn"`
}

func (PublicIPAddressDnsSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (i PublicIPAddressDnsSettingsResponseArgs) ToPublicIPAddressDnsSettingsResponseOutput() PublicIPAddressDnsSettingsResponseOutput {
	return i.ToPublicIPAddressDnsSettingsResponseOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsResponseArgs) ToPublicIPAddressDnsSettingsResponseOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsResponseOutput)
}

func (i PublicIPAddressDnsSettingsResponseArgs) ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput {
	return i.ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsResponseArgs) ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsResponseOutput).ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx)
}

// PublicIPAddressDnsSettingsResponsePtrInput is an input type that accepts PublicIPAddressDnsSettingsResponseArgs, PublicIPAddressDnsSettingsResponsePtr and PublicIPAddressDnsSettingsResponsePtrOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsResponsePtrInput` via:
//
//          PublicIPAddressDnsSettingsResponseArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressDnsSettingsResponsePtrInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput
	ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(context.Context) PublicIPAddressDnsSettingsResponsePtrOutput
}

type publicIPAddressDnsSettingsResponsePtrType PublicIPAddressDnsSettingsResponseArgs

func PublicIPAddressDnsSettingsResponsePtr(v *PublicIPAddressDnsSettingsResponseArgs) PublicIPAddressDnsSettingsResponsePtrInput {
	return (*publicIPAddressDnsSettingsResponsePtrType)(v)
}

func (*publicIPAddressDnsSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (i *publicIPAddressDnsSettingsResponsePtrType) ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput {
	return i.ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *publicIPAddressDnsSettingsResponsePtrType) ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// Contains FQDN of the DNS record associated with the public IP address.
type PublicIPAddressDnsSettingsResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponseOutput() PublicIPAddressDnsSettingsResponseOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponseOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponseOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *PublicIPAddressDnsSettingsResponse {
		return &v
	}).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsResponseOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.DomainNameLabel }).(pulumi.StringPtrOutput)
}

// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsResponseOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.ReverseFqdn }).(pulumi.StringPtrOutput)
}

type PublicIPAddressDnsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponsePtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) Elem() PublicIPAddressDnsSettingsResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) PublicIPAddressDnsSettingsResponse { return *v }).(PublicIPAddressDnsSettingsResponseOutput)
}

// The domain name label. The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DomainNameLabel
	}).(pulumi.StringPtrOutput)
}

// The Fully Qualified Domain Name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReverseFqdn
	}).(pulumi.StringPtrOutput)
}

// Public IP address resource.
type PublicIPAddressResponse struct {
	// The DDoS protection custom policy associated with the public IP address.
	DdosSettings *DdosSettingsResponse `pulumi:"ddosSettings"`
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings *PublicIPAddressDnsSettingsResponse `pulumi:"dnsSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The extended location of the public ip address.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The IP address associated with the public IP address resource.
	IpAddress *string `pulumi:"ipAddress"`
	// The IP configuration associated with the public IP address.
	IpConfiguration IPConfigurationResponse `pulumi:"ipConfiguration"`
	// The list of tags associated with the public IP address.
	IpTags []IpTagResponse `pulumi:"ipTags"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the public IP address resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The public IP address version.
	PublicIPAddressVersion *string `pulumi:"publicIPAddressVersion"`
	// The public IP address allocation method.
	PublicIPAllocationMethod *string `pulumi:"publicIPAllocationMethod"`
	// The Public IP Prefix this Public IP Address should be allocated from.
	PublicIPPrefix *SubResourceResponse `pulumi:"publicIPPrefix"`
	// The resource GUID property of the public IP address resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// The public IP address SKU.
	Sku *PublicIPAddressSkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// PublicIPAddressResponseInput is an input type that accepts PublicIPAddressResponseArgs and PublicIPAddressResponseOutput values.
// You can construct a concrete instance of `PublicIPAddressResponseInput` via:
//
//          PublicIPAddressResponseArgs{...}
type PublicIPAddressResponseInput interface {
	pulumi.Input

	ToPublicIPAddressResponseOutput() PublicIPAddressResponseOutput
	ToPublicIPAddressResponseOutputWithContext(context.Context) PublicIPAddressResponseOutput
}

// Public IP address resource.
type PublicIPAddressResponseArgs struct {
	// The DDoS protection custom policy associated with the public IP address.
	DdosSettings DdosSettingsResponsePtrInput `pulumi:"ddosSettings"`
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings PublicIPAddressDnsSettingsResponsePtrInput `pulumi:"dnsSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The extended location of the public ip address.
	ExtendedLocation ExtendedLocationResponsePtrInput `pulumi:"extendedLocation"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The IP address associated with the public IP address resource.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The IP configuration associated with the public IP address.
	IpConfiguration IPConfigurationResponseInput `pulumi:"ipConfiguration"`
	// The list of tags associated with the public IP address.
	IpTags IpTagResponseArrayInput `pulumi:"ipTags"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the public IP address resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The public IP address version.
	PublicIPAddressVersion pulumi.StringPtrInput `pulumi:"publicIPAddressVersion"`
	// The public IP address allocation method.
	PublicIPAllocationMethod pulumi.StringPtrInput `pulumi:"publicIPAllocationMethod"`
	// The Public IP Prefix this Public IP Address should be allocated from.
	PublicIPPrefix SubResourceResponsePtrInput `pulumi:"publicIPPrefix"`
	// The resource GUID property of the public IP address resource.
	ResourceGuid pulumi.StringInput `pulumi:"resourceGuid"`
	// The public IP address SKU.
	Sku PublicIPAddressSkuResponsePtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (PublicIPAddressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressResponse)(nil)).Elem()
}

func (i PublicIPAddressResponseArgs) ToPublicIPAddressResponseOutput() PublicIPAddressResponseOutput {
	return i.ToPublicIPAddressResponseOutputWithContext(context.Background())
}

func (i PublicIPAddressResponseArgs) ToPublicIPAddressResponseOutputWithContext(ctx context.Context) PublicIPAddressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressResponseOutput)
}

func (i PublicIPAddressResponseArgs) ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput {
	return i.ToPublicIPAddressResponsePtrOutputWithContext(context.Background())
}

func (i PublicIPAddressResponseArgs) ToPublicIPAddressResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressResponseOutput).ToPublicIPAddressResponsePtrOutputWithContext(ctx)
}

// PublicIPAddressResponsePtrInput is an input type that accepts PublicIPAddressResponseArgs, PublicIPAddressResponsePtr and PublicIPAddressResponsePtrOutput values.
// You can construct a concrete instance of `PublicIPAddressResponsePtrInput` via:
//
//          PublicIPAddressResponseArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressResponsePtrInput interface {
	pulumi.Input

	ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput
	ToPublicIPAddressResponsePtrOutputWithContext(context.Context) PublicIPAddressResponsePtrOutput
}

type publicIPAddressResponsePtrType PublicIPAddressResponseArgs

func PublicIPAddressResponsePtr(v *PublicIPAddressResponseArgs) PublicIPAddressResponsePtrInput {
	return (*publicIPAddressResponsePtrType)(v)
}

func (*publicIPAddressResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressResponse)(nil)).Elem()
}

func (i *publicIPAddressResponsePtrType) ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput {
	return i.ToPublicIPAddressResponsePtrOutputWithContext(context.Background())
}

func (i *publicIPAddressResponsePtrType) ToPublicIPAddressResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressResponsePtrOutput)
}

// Public IP address resource.
type PublicIPAddressResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressResponse)(nil)).Elem()
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponseOutput() PublicIPAddressResponseOutput {
	return o
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponseOutputWithContext(ctx context.Context) PublicIPAddressResponseOutput {
	return o
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput {
	return o.ToPublicIPAddressResponsePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressResponse {
		return &v
	}).(PublicIPAddressResponsePtrOutput)
}

// The DDoS protection custom policy associated with the public IP address.
func (o PublicIPAddressResponseOutput) DdosSettings() DdosSettingsResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *DdosSettingsResponse { return v.DdosSettings }).(DdosSettingsResponsePtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressResponseOutput) DnsSettings() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressDnsSettingsResponse { return v.DnsSettings }).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The extended location of the public ip address.
func (o PublicIPAddressResponseOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// Resource ID.
func (o PublicIPAddressResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The IP configuration associated with the public IP address.
func (o PublicIPAddressResponseOutput) IpConfiguration() IPConfigurationResponseOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) IPConfigurationResponse { return v.IpConfiguration }).(IPConfigurationResponseOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressResponseOutput) IpTags() IpTagResponseArrayOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) []IpTagResponse { return v.IpTags }).(IpTagResponseArrayOutput)
}

// Resource location.
func (o PublicIPAddressResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PublicIPAddressResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the public IP address resource.
func (o PublicIPAddressResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The public IP address version.
func (o PublicIPAddressResponseOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.PublicIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The public IP address allocation method.
func (o PublicIPAddressResponseOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.PublicIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The Public IP Prefix this Public IP Address should be allocated from.
func (o PublicIPAddressResponseOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *SubResourceResponse { return v.PublicIPPrefix }).(SubResourceResponsePtrOutput)
}

// The resource GUID property of the public IP address resource.
func (o PublicIPAddressResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// The public IP address SKU.
func (o PublicIPAddressResponseOutput) Sku() PublicIPAddressSkuResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressSkuResponse { return v.Sku }).(PublicIPAddressSkuResponsePtrOutput)
}

// Resource tags.
func (o PublicIPAddressResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o PublicIPAddressResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressResponseOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type PublicIPAddressResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressResponse)(nil)).Elem()
}

func (o PublicIPAddressResponsePtrOutput) ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput {
	return o
}

func (o PublicIPAddressResponsePtrOutput) ToPublicIPAddressResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressResponsePtrOutput {
	return o
}

func (o PublicIPAddressResponsePtrOutput) Elem() PublicIPAddressResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) PublicIPAddressResponse { return *v }).(PublicIPAddressResponseOutput)
}

// The DDoS protection custom policy associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) DdosSettings() DdosSettingsResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *DdosSettingsResponse {
		if v == nil {
			return nil
		}
		return v.DdosSettings
	}).(DdosSettingsResponsePtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) DnsSettings() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *PublicIPAddressDnsSettingsResponse {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// The extended location of the public ip address.
func (o PublicIPAddressResponsePtrOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *ExtendedLocationResponse {
		if v == nil {
			return nil
		}
		return v.ExtendedLocation
	}).(ExtendedLocationResponsePtrOutput)
}

// Resource ID.
func (o PublicIPAddressResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressResponsePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressResponsePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The IP configuration associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) IpConfiguration() IPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *IPConfigurationResponse {
		if v == nil {
			return nil
		}
		return &v.IpConfiguration
	}).(IPConfigurationResponsePtrOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) IpTags() IpTagResponseArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) []IpTagResponse {
		if v == nil {
			return nil
		}
		return v.IpTags
	}).(IpTagResponseArrayOutput)
}

// Resource location.
func (o PublicIPAddressResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PublicIPAddressResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the public IP address resource.
func (o PublicIPAddressResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The public IP address version.
func (o PublicIPAddressResponsePtrOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The public IP address allocation method.
func (o PublicIPAddressResponsePtrOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The Public IP Prefix this Public IP Address should be allocated from.
func (o PublicIPAddressResponsePtrOutput) PublicIPPrefix() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPPrefix
	}).(SubResourceResponsePtrOutput)
}

// The resource GUID property of the public IP address resource.
func (o PublicIPAddressResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressResponsePtrOutput) Sku() PublicIPAddressSkuResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *PublicIPAddressSkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(PublicIPAddressSkuResponsePtrOutput)
}

// Resource tags.
func (o PublicIPAddressResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o PublicIPAddressResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressResponsePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

// SKU of a public IP address.
type PublicIPAddressSku struct {
	// Name of a public IP address SKU.
	Name *string `pulumi:"name"`
	// Tier of a public IP address SKU.
	Tier *string `pulumi:"tier"`
}

// PublicIPAddressSkuInput is an input type that accepts PublicIPAddressSkuArgs and PublicIPAddressSkuOutput values.
// You can construct a concrete instance of `PublicIPAddressSkuInput` via:
//
//          PublicIPAddressSkuArgs{...}
type PublicIPAddressSkuInput interface {
	pulumi.Input

	ToPublicIPAddressSkuOutput() PublicIPAddressSkuOutput
	ToPublicIPAddressSkuOutputWithContext(context.Context) PublicIPAddressSkuOutput
}

// SKU of a public IP address.
type PublicIPAddressSkuArgs struct {
	// Name of a public IP address SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of a public IP address SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (PublicIPAddressSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSku)(nil)).Elem()
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuOutput() PublicIPAddressSkuOutput {
	return i.ToPublicIPAddressSkuOutputWithContext(context.Background())
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuOutputWithContext(ctx context.Context) PublicIPAddressSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuOutput)
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return i.ToPublicIPAddressSkuPtrOutputWithContext(context.Background())
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuOutput).ToPublicIPAddressSkuPtrOutputWithContext(ctx)
}

// PublicIPAddressSkuPtrInput is an input type that accepts PublicIPAddressSkuArgs, PublicIPAddressSkuPtr and PublicIPAddressSkuPtrOutput values.
// You can construct a concrete instance of `PublicIPAddressSkuPtrInput` via:
//
//          PublicIPAddressSkuArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressSkuPtrInput interface {
	pulumi.Input

	ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput
	ToPublicIPAddressSkuPtrOutputWithContext(context.Context) PublicIPAddressSkuPtrOutput
}

type publicIPAddressSkuPtrType PublicIPAddressSkuArgs

func PublicIPAddressSkuPtr(v *PublicIPAddressSkuArgs) PublicIPAddressSkuPtrInput {
	return (*publicIPAddressSkuPtrType)(v)
}

func (*publicIPAddressSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSku)(nil)).Elem()
}

func (i *publicIPAddressSkuPtrType) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return i.ToPublicIPAddressSkuPtrOutputWithContext(context.Background())
}

func (i *publicIPAddressSkuPtrType) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuPtrOutput)
}

// SKU of a public IP address.
type PublicIPAddressSkuOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSku)(nil)).Elem()
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuOutput() PublicIPAddressSkuOutput {
	return o
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuOutputWithContext(ctx context.Context) PublicIPAddressSkuOutput {
	return o
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return o.ToPublicIPAddressSkuPtrOutputWithContext(context.Background())
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSku) *PublicIPAddressSku {
		return &v
	}).(PublicIPAddressSkuPtrOutput)
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of a public IP address SKU.
func (o PublicIPAddressSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type PublicIPAddressSkuPtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSku)(nil)).Elem()
}

func (o PublicIPAddressSkuPtrOutput) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return o
}

func (o PublicIPAddressSkuPtrOutput) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return o
}

func (o PublicIPAddressSkuPtrOutput) Elem() PublicIPAddressSkuOutput {
	return o.ApplyT(func(v *PublicIPAddressSku) PublicIPAddressSku { return *v }).(PublicIPAddressSkuOutput)
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of a public IP address SKU.
func (o PublicIPAddressSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU of a public IP address.
type PublicIPAddressSkuResponse struct {
	// Name of a public IP address SKU.
	Name *string `pulumi:"name"`
	// Tier of a public IP address SKU.
	Tier *string `pulumi:"tier"`
}

// PublicIPAddressSkuResponseInput is an input type that accepts PublicIPAddressSkuResponseArgs and PublicIPAddressSkuResponseOutput values.
// You can construct a concrete instance of `PublicIPAddressSkuResponseInput` via:
//
//          PublicIPAddressSkuResponseArgs{...}
type PublicIPAddressSkuResponseInput interface {
	pulumi.Input

	ToPublicIPAddressSkuResponseOutput() PublicIPAddressSkuResponseOutput
	ToPublicIPAddressSkuResponseOutputWithContext(context.Context) PublicIPAddressSkuResponseOutput
}

// SKU of a public IP address.
type PublicIPAddressSkuResponseArgs struct {
	// Name of a public IP address SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of a public IP address SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (PublicIPAddressSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSkuResponse)(nil)).Elem()
}

func (i PublicIPAddressSkuResponseArgs) ToPublicIPAddressSkuResponseOutput() PublicIPAddressSkuResponseOutput {
	return i.ToPublicIPAddressSkuResponseOutputWithContext(context.Background())
}

func (i PublicIPAddressSkuResponseArgs) ToPublicIPAddressSkuResponseOutputWithContext(ctx context.Context) PublicIPAddressSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuResponseOutput)
}

func (i PublicIPAddressSkuResponseArgs) ToPublicIPAddressSkuResponsePtrOutput() PublicIPAddressSkuResponsePtrOutput {
	return i.ToPublicIPAddressSkuResponsePtrOutputWithContext(context.Background())
}

func (i PublicIPAddressSkuResponseArgs) ToPublicIPAddressSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuResponseOutput).ToPublicIPAddressSkuResponsePtrOutputWithContext(ctx)
}

// PublicIPAddressSkuResponsePtrInput is an input type that accepts PublicIPAddressSkuResponseArgs, PublicIPAddressSkuResponsePtr and PublicIPAddressSkuResponsePtrOutput values.
// You can construct a concrete instance of `PublicIPAddressSkuResponsePtrInput` via:
//
//          PublicIPAddressSkuResponseArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressSkuResponsePtrInput interface {
	pulumi.Input

	ToPublicIPAddressSkuResponsePtrOutput() PublicIPAddressSkuResponsePtrOutput
	ToPublicIPAddressSkuResponsePtrOutputWithContext(context.Context) PublicIPAddressSkuResponsePtrOutput
}

type publicIPAddressSkuResponsePtrType PublicIPAddressSkuResponseArgs

func PublicIPAddressSkuResponsePtr(v *PublicIPAddressSkuResponseArgs) PublicIPAddressSkuResponsePtrInput {
	return (*publicIPAddressSkuResponsePtrType)(v)
}

func (*publicIPAddressSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSkuResponse)(nil)).Elem()
}

func (i *publicIPAddressSkuResponsePtrType) ToPublicIPAddressSkuResponsePtrOutput() PublicIPAddressSkuResponsePtrOutput {
	return i.ToPublicIPAddressSkuResponsePtrOutputWithContext(context.Background())
}

func (i *publicIPAddressSkuResponsePtrType) ToPublicIPAddressSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuResponsePtrOutput)
}

// SKU of a public IP address.
type PublicIPAddressSkuResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSkuResponse)(nil)).Elem()
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponseOutput() PublicIPAddressSkuResponseOutput {
	return o
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponseOutputWithContext(ctx context.Context) PublicIPAddressSkuResponseOutput {
	return o
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponsePtrOutput() PublicIPAddressSkuResponsePtrOutput {
	return o.ToPublicIPAddressSkuResponsePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressSkuResponse) *PublicIPAddressSkuResponse {
		return &v
	}).(PublicIPAddressSkuResponsePtrOutput)
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of a public IP address SKU.
func (o PublicIPAddressSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type PublicIPAddressSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSkuResponse)(nil)).Elem()
}

func (o PublicIPAddressSkuResponsePtrOutput) ToPublicIPAddressSkuResponsePtrOutput() PublicIPAddressSkuResponsePtrOutput {
	return o
}

func (o PublicIPAddressSkuResponsePtrOutput) ToPublicIPAddressSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuResponsePtrOutput {
	return o
}

func (o PublicIPAddressSkuResponsePtrOutput) Elem() PublicIPAddressSkuResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuResponse) PublicIPAddressSkuResponse { return *v }).(PublicIPAddressSkuResponseOutput)
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of a public IP address SKU.
func (o PublicIPAddressSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU of a public IP prefix.
type PublicIPPrefixSku struct {
	// Name of a public IP prefix SKU.
	Name *string `pulumi:"name"`
	// Tier of a public IP prefix SKU.
	Tier *string `pulumi:"tier"`
}

// PublicIPPrefixSkuInput is an input type that accepts PublicIPPrefixSkuArgs and PublicIPPrefixSkuOutput values.
// You can construct a concrete instance of `PublicIPPrefixSkuInput` via:
//
//          PublicIPPrefixSkuArgs{...}
type PublicIPPrefixSkuInput interface {
	pulumi.Input

	ToPublicIPPrefixSkuOutput() PublicIPPrefixSkuOutput
	ToPublicIPPrefixSkuOutputWithContext(context.Context) PublicIPPrefixSkuOutput
}

// SKU of a public IP prefix.
type PublicIPPrefixSkuArgs struct {
	// Name of a public IP prefix SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of a public IP prefix SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (PublicIPPrefixSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPPrefixSku)(nil)).Elem()
}

func (i PublicIPPrefixSkuArgs) ToPublicIPPrefixSkuOutput() PublicIPPrefixSkuOutput {
	return i.ToPublicIPPrefixSkuOutputWithContext(context.Background())
}

func (i PublicIPPrefixSkuArgs) ToPublicIPPrefixSkuOutputWithContext(ctx context.Context) PublicIPPrefixSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixSkuOutput)
}

func (i PublicIPPrefixSkuArgs) ToPublicIPPrefixSkuPtrOutput() PublicIPPrefixSkuPtrOutput {
	return i.ToPublicIPPrefixSkuPtrOutputWithContext(context.Background())
}

func (i PublicIPPrefixSkuArgs) ToPublicIPPrefixSkuPtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixSkuOutput).ToPublicIPPrefixSkuPtrOutputWithContext(ctx)
}

// PublicIPPrefixSkuPtrInput is an input type that accepts PublicIPPrefixSkuArgs, PublicIPPrefixSkuPtr and PublicIPPrefixSkuPtrOutput values.
// You can construct a concrete instance of `PublicIPPrefixSkuPtrInput` via:
//
//          PublicIPPrefixSkuArgs{...}
//
//  or:
//
//          nil
type PublicIPPrefixSkuPtrInput interface {
	pulumi.Input

	ToPublicIPPrefixSkuPtrOutput() PublicIPPrefixSkuPtrOutput
	ToPublicIPPrefixSkuPtrOutputWithContext(context.Context) PublicIPPrefixSkuPtrOutput
}

type publicIPPrefixSkuPtrType PublicIPPrefixSkuArgs

func PublicIPPrefixSkuPtr(v *PublicIPPrefixSkuArgs) PublicIPPrefixSkuPtrInput {
	return (*publicIPPrefixSkuPtrType)(v)
}

func (*publicIPPrefixSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPPrefixSku)(nil)).Elem()
}

func (i *publicIPPrefixSkuPtrType) ToPublicIPPrefixSkuPtrOutput() PublicIPPrefixSkuPtrOutput {
	return i.ToPublicIPPrefixSkuPtrOutputWithContext(context.Background())
}

func (i *publicIPPrefixSkuPtrType) ToPublicIPPrefixSkuPtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixSkuPtrOutput)
}

// SKU of a public IP prefix.
type PublicIPPrefixSkuOutput struct{ *pulumi.OutputState }

func (PublicIPPrefixSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPPrefixSku)(nil)).Elem()
}

func (o PublicIPPrefixSkuOutput) ToPublicIPPrefixSkuOutput() PublicIPPrefixSkuOutput {
	return o
}

func (o PublicIPPrefixSkuOutput) ToPublicIPPrefixSkuOutputWithContext(ctx context.Context) PublicIPPrefixSkuOutput {
	return o
}

func (o PublicIPPrefixSkuOutput) ToPublicIPPrefixSkuPtrOutput() PublicIPPrefixSkuPtrOutput {
	return o.ToPublicIPPrefixSkuPtrOutputWithContext(context.Background())
}

func (o PublicIPPrefixSkuOutput) ToPublicIPPrefixSkuPtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixSku) *PublicIPPrefixSku {
		return &v
	}).(PublicIPPrefixSkuPtrOutput)
}

// Name of a public IP prefix SKU.
func (o PublicIPPrefixSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of a public IP prefix SKU.
func (o PublicIPPrefixSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type PublicIPPrefixSkuPtrOutput struct{ *pulumi.OutputState }

func (PublicIPPrefixSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPPrefixSku)(nil)).Elem()
}

func (o PublicIPPrefixSkuPtrOutput) ToPublicIPPrefixSkuPtrOutput() PublicIPPrefixSkuPtrOutput {
	return o
}

func (o PublicIPPrefixSkuPtrOutput) ToPublicIPPrefixSkuPtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuPtrOutput {
	return o
}

func (o PublicIPPrefixSkuPtrOutput) Elem() PublicIPPrefixSkuOutput {
	return o.ApplyT(func(v *PublicIPPrefixSku) PublicIPPrefixSku { return *v }).(PublicIPPrefixSkuOutput)
}

// Name of a public IP prefix SKU.
func (o PublicIPPrefixSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of a public IP prefix SKU.
func (o PublicIPPrefixSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU of a public IP prefix.
type PublicIPPrefixSkuResponse struct {
	// Name of a public IP prefix SKU.
	Name *string `pulumi:"name"`
	// Tier of a public IP prefix SKU.
	Tier *string `pulumi:"tier"`
}

// PublicIPPrefixSkuResponseInput is an input type that accepts PublicIPPrefixSkuResponseArgs and PublicIPPrefixSkuResponseOutput values.
// You can construct a concrete instance of `PublicIPPrefixSkuResponseInput` via:
//
//          PublicIPPrefixSkuResponseArgs{...}
type PublicIPPrefixSkuResponseInput interface {
	pulumi.Input

	ToPublicIPPrefixSkuResponseOutput() PublicIPPrefixSkuResponseOutput
	ToPublicIPPrefixSkuResponseOutputWithContext(context.Context) PublicIPPrefixSkuResponseOutput
}

// SKU of a public IP prefix.
type PublicIPPrefixSkuResponseArgs struct {
	// Name of a public IP prefix SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of a public IP prefix SKU.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (PublicIPPrefixSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPPrefixSkuResponse)(nil)).Elem()
}

func (i PublicIPPrefixSkuResponseArgs) ToPublicIPPrefixSkuResponseOutput() PublicIPPrefixSkuResponseOutput {
	return i.ToPublicIPPrefixSkuResponseOutputWithContext(context.Background())
}

func (i PublicIPPrefixSkuResponseArgs) ToPublicIPPrefixSkuResponseOutputWithContext(ctx context.Context) PublicIPPrefixSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixSkuResponseOutput)
}

func (i PublicIPPrefixSkuResponseArgs) ToPublicIPPrefixSkuResponsePtrOutput() PublicIPPrefixSkuResponsePtrOutput {
	return i.ToPublicIPPrefixSkuResponsePtrOutputWithContext(context.Background())
}

func (i PublicIPPrefixSkuResponseArgs) ToPublicIPPrefixSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixSkuResponseOutput).ToPublicIPPrefixSkuResponsePtrOutputWithContext(ctx)
}

// PublicIPPrefixSkuResponsePtrInput is an input type that accepts PublicIPPrefixSkuResponseArgs, PublicIPPrefixSkuResponsePtr and PublicIPPrefixSkuResponsePtrOutput values.
// You can construct a concrete instance of `PublicIPPrefixSkuResponsePtrInput` via:
//
//          PublicIPPrefixSkuResponseArgs{...}
//
//  or:
//
//          nil
type PublicIPPrefixSkuResponsePtrInput interface {
	pulumi.Input

	ToPublicIPPrefixSkuResponsePtrOutput() PublicIPPrefixSkuResponsePtrOutput
	ToPublicIPPrefixSkuResponsePtrOutputWithContext(context.Context) PublicIPPrefixSkuResponsePtrOutput
}

type publicIPPrefixSkuResponsePtrType PublicIPPrefixSkuResponseArgs

func PublicIPPrefixSkuResponsePtr(v *PublicIPPrefixSkuResponseArgs) PublicIPPrefixSkuResponsePtrInput {
	return (*publicIPPrefixSkuResponsePtrType)(v)
}

func (*publicIPPrefixSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPPrefixSkuResponse)(nil)).Elem()
}

func (i *publicIPPrefixSkuResponsePtrType) ToPublicIPPrefixSkuResponsePtrOutput() PublicIPPrefixSkuResponsePtrOutput {
	return i.ToPublicIPPrefixSkuResponsePtrOutputWithContext(context.Background())
}

func (i *publicIPPrefixSkuResponsePtrType) ToPublicIPPrefixSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPPrefixSkuResponsePtrOutput)
}

// SKU of a public IP prefix.
type PublicIPPrefixSkuResponseOutput struct{ *pulumi.OutputState }

func (PublicIPPrefixSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPPrefixSkuResponse)(nil)).Elem()
}

func (o PublicIPPrefixSkuResponseOutput) ToPublicIPPrefixSkuResponseOutput() PublicIPPrefixSkuResponseOutput {
	return o
}

func (o PublicIPPrefixSkuResponseOutput) ToPublicIPPrefixSkuResponseOutputWithContext(ctx context.Context) PublicIPPrefixSkuResponseOutput {
	return o
}

func (o PublicIPPrefixSkuResponseOutput) ToPublicIPPrefixSkuResponsePtrOutput() PublicIPPrefixSkuResponsePtrOutput {
	return o.ToPublicIPPrefixSkuResponsePtrOutputWithContext(context.Background())
}

func (o PublicIPPrefixSkuResponseOutput) ToPublicIPPrefixSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuResponsePtrOutput {
	return o.ApplyT(func(v PublicIPPrefixSkuResponse) *PublicIPPrefixSkuResponse {
		return &v
	}).(PublicIPPrefixSkuResponsePtrOutput)
}

// Name of a public IP prefix SKU.
func (o PublicIPPrefixSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of a public IP prefix SKU.
func (o PublicIPPrefixSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPPrefixSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type PublicIPPrefixSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPPrefixSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPPrefixSkuResponse)(nil)).Elem()
}

func (o PublicIPPrefixSkuResponsePtrOutput) ToPublicIPPrefixSkuResponsePtrOutput() PublicIPPrefixSkuResponsePtrOutput {
	return o
}

func (o PublicIPPrefixSkuResponsePtrOutput) ToPublicIPPrefixSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPPrefixSkuResponsePtrOutput {
	return o
}

func (o PublicIPPrefixSkuResponsePtrOutput) Elem() PublicIPPrefixSkuResponseOutput {
	return o.ApplyT(func(v *PublicIPPrefixSkuResponse) PublicIPPrefixSkuResponse { return *v }).(PublicIPPrefixSkuResponseOutput)
}

// Name of a public IP prefix SKU.
func (o PublicIPPrefixSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of a public IP prefix SKU.
func (o PublicIPPrefixSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPPrefixSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Qos Traffic Profiler IP Range properties.
type QosIpRange struct {
	// End IP Address.
	EndIP *string `pulumi:"endIP"`
	// Start IP Address.
	StartIP *string `pulumi:"startIP"`
}

// QosIpRangeInput is an input type that accepts QosIpRangeArgs and QosIpRangeOutput values.
// You can construct a concrete instance of `QosIpRangeInput` via:
//
//          QosIpRangeArgs{...}
type QosIpRangeInput interface {
	pulumi.Input

	ToQosIpRangeOutput() QosIpRangeOutput
	ToQosIpRangeOutputWithContext(context.Context) QosIpRangeOutput
}

// Qos Traffic Profiler IP Range properties.
type QosIpRangeArgs struct {
	// End IP Address.
	EndIP pulumi.StringPtrInput `pulumi:"endIP"`
	// Start IP Address.
	StartIP pulumi.StringPtrInput `pulumi:"startIP"`
}

func (QosIpRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QosIpRange)(nil)).Elem()
}

func (i QosIpRangeArgs) ToQosIpRangeOutput() QosIpRangeOutput {
	return i.ToQosIpRangeOutputWithContext(context.Background())
}

func (i QosIpRangeArgs) ToQosIpRangeOutputWithContext(ctx context.Context) QosIpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosIpRangeOutput)
}

// QosIpRangeArrayInput is an input type that accepts QosIpRangeArray and QosIpRangeArrayOutput values.
// You can construct a concrete instance of `QosIpRangeArrayInput` via:
//
//          QosIpRangeArray{ QosIpRangeArgs{...} }
type QosIpRangeArrayInput interface {
	pulumi.Input

	ToQosIpRangeArrayOutput() QosIpRangeArrayOutput
	ToQosIpRangeArrayOutputWithContext(context.Context) QosIpRangeArrayOutput
}

type QosIpRangeArray []QosIpRangeInput

func (QosIpRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosIpRange)(nil)).Elem()
}

func (i QosIpRangeArray) ToQosIpRangeArrayOutput() QosIpRangeArrayOutput {
	return i.ToQosIpRangeArrayOutputWithContext(context.Background())
}

func (i QosIpRangeArray) ToQosIpRangeArrayOutputWithContext(ctx context.Context) QosIpRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosIpRangeArrayOutput)
}

// Qos Traffic Profiler IP Range properties.
type QosIpRangeOutput struct{ *pulumi.OutputState }

func (QosIpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QosIpRange)(nil)).Elem()
}

func (o QosIpRangeOutput) ToQosIpRangeOutput() QosIpRangeOutput {
	return o
}

func (o QosIpRangeOutput) ToQosIpRangeOutputWithContext(ctx context.Context) QosIpRangeOutput {
	return o
}

// End IP Address.
func (o QosIpRangeOutput) EndIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QosIpRange) *string { return v.EndIP }).(pulumi.StringPtrOutput)
}

// Start IP Address.
func (o QosIpRangeOutput) StartIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QosIpRange) *string { return v.StartIP }).(pulumi.StringPtrOutput)
}

type QosIpRangeArrayOutput struct{ *pulumi.OutputState }

func (QosIpRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosIpRange)(nil)).Elem()
}

func (o QosIpRangeArrayOutput) ToQosIpRangeArrayOutput() QosIpRangeArrayOutput {
	return o
}

func (o QosIpRangeArrayOutput) ToQosIpRangeArrayOutputWithContext(ctx context.Context) QosIpRangeArrayOutput {
	return o
}

func (o QosIpRangeArrayOutput) Index(i pulumi.IntInput) QosIpRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QosIpRange {
		return vs[0].([]QosIpRange)[vs[1].(int)]
	}).(QosIpRangeOutput)
}

// Qos Traffic Profiler IP Range properties.
type QosIpRangeResponse struct {
	// End IP Address.
	EndIP *string `pulumi:"endIP"`
	// Start IP Address.
	StartIP *string `pulumi:"startIP"`
}

// QosIpRangeResponseInput is an input type that accepts QosIpRangeResponseArgs and QosIpRangeResponseOutput values.
// You can construct a concrete instance of `QosIpRangeResponseInput` via:
//
//          QosIpRangeResponseArgs{...}
type QosIpRangeResponseInput interface {
	pulumi.Input

	ToQosIpRangeResponseOutput() QosIpRangeResponseOutput
	ToQosIpRangeResponseOutputWithContext(context.Context) QosIpRangeResponseOutput
}

// Qos Traffic Profiler IP Range properties.
type QosIpRangeResponseArgs struct {
	// End IP Address.
	EndIP pulumi.StringPtrInput `pulumi:"endIP"`
	// Start IP Address.
	StartIP pulumi.StringPtrInput `pulumi:"startIP"`
}

func (QosIpRangeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QosIpRangeResponse)(nil)).Elem()
}

func (i QosIpRangeResponseArgs) ToQosIpRangeResponseOutput() QosIpRangeResponseOutput {
	return i.ToQosIpRangeResponseOutputWithContext(context.Background())
}

func (i QosIpRangeResponseArgs) ToQosIpRangeResponseOutputWithContext(ctx context.Context) QosIpRangeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosIpRangeResponseOutput)
}

// QosIpRangeResponseArrayInput is an input type that accepts QosIpRangeResponseArray and QosIpRangeResponseArrayOutput values.
// You can construct a concrete instance of `QosIpRangeResponseArrayInput` via:
//
//          QosIpRangeResponseArray{ QosIpRangeResponseArgs{...} }
type QosIpRangeResponseArrayInput interface {
	pulumi.Input

	ToQosIpRangeResponseArrayOutput() QosIpRangeResponseArrayOutput
	ToQosIpRangeResponseArrayOutputWithContext(context.Context) QosIpRangeResponseArrayOutput
}

type QosIpRangeResponseArray []QosIpRangeResponseInput

func (QosIpRangeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosIpRangeResponse)(nil)).Elem()
}

func (i QosIpRangeResponseArray) ToQosIpRangeResponseArrayOutput() QosIpRangeResponseArrayOutput {
	return i.ToQosIpRangeResponseArrayOutputWithContext(context.Background())
}

func (i QosIpRangeResponseArray) ToQosIpRangeResponseArrayOutputWithContext(ctx context.Context) QosIpRangeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosIpRangeResponseArrayOutput)
}

// Qos Traffic Profiler IP Range properties.
type QosIpRangeResponseOutput struct{ *pulumi.OutputState }

func (QosIpRangeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QosIpRangeResponse)(nil)).Elem()
}

func (o QosIpRangeResponseOutput) ToQosIpRangeResponseOutput() QosIpRangeResponseOutput {
	return o
}

func (o QosIpRangeResponseOutput) ToQosIpRangeResponseOutputWithContext(ctx context.Context) QosIpRangeResponseOutput {
	return o
}

// End IP Address.
func (o QosIpRangeResponseOutput) EndIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QosIpRangeResponse) *string { return v.EndIP }).(pulumi.StringPtrOutput)
}

// Start IP Address.
func (o QosIpRangeResponseOutput) StartIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QosIpRangeResponse) *string { return v.StartIP }).(pulumi.StringPtrOutput)
}

type QosIpRangeResponseArrayOutput struct{ *pulumi.OutputState }

func (QosIpRangeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosIpRangeResponse)(nil)).Elem()
}

func (o QosIpRangeResponseArrayOutput) ToQosIpRangeResponseArrayOutput() QosIpRangeResponseArrayOutput {
	return o
}

func (o QosIpRangeResponseArrayOutput) ToQosIpRangeResponseArrayOutputWithContext(ctx context.Context) QosIpRangeResponseArrayOutput {
	return o
}

func (o QosIpRangeResponseArrayOutput) Index(i pulumi.IntInput) QosIpRangeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QosIpRangeResponse {
		return vs[0].([]QosIpRangeResponse)[vs[1].(int)]
	}).(QosIpRangeResponseOutput)
}

// Qos Traffic Profiler Port range properties.
type QosPortRange struct {
	// Qos Port Range end.
	End *int `pulumi:"end"`
	// Qos Port Range start.
	Start *int `pulumi:"start"`
}

// QosPortRangeInput is an input type that accepts QosPortRangeArgs and QosPortRangeOutput values.
// You can construct a concrete instance of `QosPortRangeInput` via:
//
//          QosPortRangeArgs{...}
type QosPortRangeInput interface {
	pulumi.Input

	ToQosPortRangeOutput() QosPortRangeOutput
	ToQosPortRangeOutputWithContext(context.Context) QosPortRangeOutput
}

// Qos Traffic Profiler Port range properties.
type QosPortRangeArgs struct {
	// Qos Port Range end.
	End pulumi.IntPtrInput `pulumi:"end"`
	// Qos Port Range start.
	Start pulumi.IntPtrInput `pulumi:"start"`
}

func (QosPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QosPortRange)(nil)).Elem()
}

func (i QosPortRangeArgs) ToQosPortRangeOutput() QosPortRangeOutput {
	return i.ToQosPortRangeOutputWithContext(context.Background())
}

func (i QosPortRangeArgs) ToQosPortRangeOutputWithContext(ctx context.Context) QosPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosPortRangeOutput)
}

// QosPortRangeArrayInput is an input type that accepts QosPortRangeArray and QosPortRangeArrayOutput values.
// You can construct a concrete instance of `QosPortRangeArrayInput` via:
//
//          QosPortRangeArray{ QosPortRangeArgs{...} }
type QosPortRangeArrayInput interface {
	pulumi.Input

	ToQosPortRangeArrayOutput() QosPortRangeArrayOutput
	ToQosPortRangeArrayOutputWithContext(context.Context) QosPortRangeArrayOutput
}

type QosPortRangeArray []QosPortRangeInput

func (QosPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosPortRange)(nil)).Elem()
}

func (i QosPortRangeArray) ToQosPortRangeArrayOutput() QosPortRangeArrayOutput {
	return i.ToQosPortRangeArrayOutputWithContext(context.Background())
}

func (i QosPortRangeArray) ToQosPortRangeArrayOutputWithContext(ctx context.Context) QosPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosPortRangeArrayOutput)
}

// Qos Traffic Profiler Port range properties.
type QosPortRangeOutput struct{ *pulumi.OutputState }

func (QosPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QosPortRange)(nil)).Elem()
}

func (o QosPortRangeOutput) ToQosPortRangeOutput() QosPortRangeOutput {
	return o
}

func (o QosPortRangeOutput) ToQosPortRangeOutputWithContext(ctx context.Context) QosPortRangeOutput {
	return o
}

// Qos Port Range end.
func (o QosPortRangeOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QosPortRange) *int { return v.End }).(pulumi.IntPtrOutput)
}

// Qos Port Range start.
func (o QosPortRangeOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QosPortRange) *int { return v.Start }).(pulumi.IntPtrOutput)
}

type QosPortRangeArrayOutput struct{ *pulumi.OutputState }

func (QosPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosPortRange)(nil)).Elem()
}

func (o QosPortRangeArrayOutput) ToQosPortRangeArrayOutput() QosPortRangeArrayOutput {
	return o
}

func (o QosPortRangeArrayOutput) ToQosPortRangeArrayOutputWithContext(ctx context.Context) QosPortRangeArrayOutput {
	return o
}

func (o QosPortRangeArrayOutput) Index(i pulumi.IntInput) QosPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QosPortRange {
		return vs[0].([]QosPortRange)[vs[1].(int)]
	}).(QosPortRangeOutput)
}

// Qos Traffic Profiler Port range properties.
type QosPortRangeResponse struct {
	// Qos Port Range end.
	End *int `pulumi:"end"`
	// Qos Port Range start.
	Start *int `pulumi:"start"`
}

// QosPortRangeResponseInput is an input type that accepts QosPortRangeResponseArgs and QosPortRangeResponseOutput values.
// You can construct a concrete instance of `QosPortRangeResponseInput` via:
//
//          QosPortRangeResponseArgs{...}
type QosPortRangeResponseInput interface {
	pulumi.Input

	ToQosPortRangeResponseOutput() QosPortRangeResponseOutput
	ToQosPortRangeResponseOutputWithContext(context.Context) QosPortRangeResponseOutput
}

// Qos Traffic Profiler Port range properties.
type QosPortRangeResponseArgs struct {
	// Qos Port Range end.
	End pulumi.IntPtrInput `pulumi:"end"`
	// Qos Port Range start.
	Start pulumi.IntPtrInput `pulumi:"start"`
}

func (QosPortRangeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QosPortRangeResponse)(nil)).Elem()
}

func (i QosPortRangeResponseArgs) ToQosPortRangeResponseOutput() QosPortRangeResponseOutput {
	return i.ToQosPortRangeResponseOutputWithContext(context.Background())
}

func (i QosPortRangeResponseArgs) ToQosPortRangeResponseOutputWithContext(ctx context.Context) QosPortRangeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosPortRangeResponseOutput)
}

// QosPortRangeResponseArrayInput is an input type that accepts QosPortRangeResponseArray and QosPortRangeResponseArrayOutput values.
// You can construct a concrete instance of `QosPortRangeResponseArrayInput` via:
//
//          QosPortRangeResponseArray{ QosPortRangeResponseArgs{...} }
type QosPortRangeResponseArrayInput interface {
	pulumi.Input

	ToQosPortRangeResponseArrayOutput() QosPortRangeResponseArrayOutput
	ToQosPortRangeResponseArrayOutputWithContext(context.Context) QosPortRangeResponseArrayOutput
}

type QosPortRangeResponseArray []QosPortRangeResponseInput

func (QosPortRangeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosPortRangeResponse)(nil)).Elem()
}

func (i QosPortRangeResponseArray) ToQosPortRangeResponseArrayOutput() QosPortRangeResponseArrayOutput {
	return i.ToQosPortRangeResponseArrayOutputWithContext(context.Background())
}

func (i QosPortRangeResponseArray) ToQosPortRangeResponseArrayOutputWithContext(ctx context.Context) QosPortRangeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QosPortRangeResponseArrayOutput)
}

// Qos Traffic Profiler Port range properties.
type QosPortRangeResponseOutput struct{ *pulumi.OutputState }

func (QosPortRangeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QosPortRangeResponse)(nil)).Elem()
}

func (o QosPortRangeResponseOutput) ToQosPortRangeResponseOutput() QosPortRangeResponseOutput {
	return o
}

func (o QosPortRangeResponseOutput) ToQosPortRangeResponseOutputWithContext(ctx context.Context) QosPortRangeResponseOutput {
	return o
}

// Qos Port Range end.
func (o QosPortRangeResponseOutput) End() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QosPortRangeResponse) *int { return v.End }).(pulumi.IntPtrOutput)
}

// Qos Port Range start.
func (o QosPortRangeResponseOutput) Start() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QosPortRangeResponse) *int { return v.Start }).(pulumi.IntPtrOutput)
}

type QosPortRangeResponseArrayOutput struct{ *pulumi.OutputState }

func (QosPortRangeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]QosPortRangeResponse)(nil)).Elem()
}

func (o QosPortRangeResponseArrayOutput) ToQosPortRangeResponseArrayOutput() QosPortRangeResponseArrayOutput {
	return o
}

func (o QosPortRangeResponseArrayOutput) ToQosPortRangeResponseArrayOutputWithContext(ctx context.Context) QosPortRangeResponseArrayOutput {
	return o
}

func (o QosPortRangeResponseArrayOutput) Index(i pulumi.IntInput) QosPortRangeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) QosPortRangeResponse {
		return vs[0].([]QosPortRangeResponse)[vs[1].(int)]
	}).(QosPortRangeResponseOutput)
}

// Radius Server Settings.
type RadiusServer struct {
	// The address of this radius server.
	RadiusServerAddress string `pulumi:"radiusServerAddress"`
	// The initial score assigned to this radius server.
	RadiusServerScore *int `pulumi:"radiusServerScore"`
	// The secret used for this radius server.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
}

// RadiusServerInput is an input type that accepts RadiusServerArgs and RadiusServerOutput values.
// You can construct a concrete instance of `RadiusServerInput` via:
//
//          RadiusServerArgs{...}
type RadiusServerInput interface {
	pulumi.Input

	ToRadiusServerOutput() RadiusServerOutput
	ToRadiusServerOutputWithContext(context.Context) RadiusServerOutput
}

// Radius Server Settings.
type RadiusServerArgs struct {
	// The address of this radius server.
	RadiusServerAddress pulumi.StringInput `pulumi:"radiusServerAddress"`
	// The initial score assigned to this radius server.
	RadiusServerScore pulumi.IntPtrInput `pulumi:"radiusServerScore"`
	// The secret used for this radius server.
	RadiusServerSecret pulumi.StringPtrInput `pulumi:"radiusServerSecret"`
}

func (RadiusServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RadiusServer)(nil)).Elem()
}

func (i RadiusServerArgs) ToRadiusServerOutput() RadiusServerOutput {
	return i.ToRadiusServerOutputWithContext(context.Background())
}

func (i RadiusServerArgs) ToRadiusServerOutputWithContext(ctx context.Context) RadiusServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RadiusServerOutput)
}

// RadiusServerArrayInput is an input type that accepts RadiusServerArray and RadiusServerArrayOutput values.
// You can construct a concrete instance of `RadiusServerArrayInput` via:
//
//          RadiusServerArray{ RadiusServerArgs{...} }
type RadiusServerArrayInput interface {
	pulumi.Input

	ToRadiusServerArrayOutput() RadiusServerArrayOutput
	ToRadiusServerArrayOutputWithContext(context.Context) RadiusServerArrayOutput
}

type RadiusServerArray []RadiusServerInput

func (RadiusServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RadiusServer)(nil)).Elem()
}

func (i RadiusServerArray) ToRadiusServerArrayOutput() RadiusServerArrayOutput {
	return i.ToRadiusServerArrayOutputWithContext(context.Background())
}

func (i RadiusServerArray) ToRadiusServerArrayOutputWithContext(ctx context.Context) RadiusServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RadiusServerArrayOutput)
}

// Radius Server Settings.
type RadiusServerOutput struct{ *pulumi.OutputState }

func (RadiusServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RadiusServer)(nil)).Elem()
}

func (o RadiusServerOutput) ToRadiusServerOutput() RadiusServerOutput {
	return o
}

func (o RadiusServerOutput) ToRadiusServerOutputWithContext(ctx context.Context) RadiusServerOutput {
	return o
}

// The address of this radius server.
func (o RadiusServerOutput) RadiusServerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v RadiusServer) string { return v.RadiusServerAddress }).(pulumi.StringOutput)
}

// The initial score assigned to this radius server.
func (o RadiusServerOutput) RadiusServerScore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RadiusServer) *int { return v.RadiusServerScore }).(pulumi.IntPtrOutput)
}

// The secret used for this radius server.
func (o RadiusServerOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RadiusServer) *string { return v.RadiusServerSecret }).(pulumi.StringPtrOutput)
}

type RadiusServerArrayOutput struct{ *pulumi.OutputState }

func (RadiusServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RadiusServer)(nil)).Elem()
}

func (o RadiusServerArrayOutput) ToRadiusServerArrayOutput() RadiusServerArrayOutput {
	return o
}

func (o RadiusServerArrayOutput) ToRadiusServerArrayOutputWithContext(ctx context.Context) RadiusServerArrayOutput {
	return o
}

func (o RadiusServerArrayOutput) Index(i pulumi.IntInput) RadiusServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RadiusServer {
		return vs[0].([]RadiusServer)[vs[1].(int)]
	}).(RadiusServerOutput)
}

// Radius Server Settings.
type RadiusServerResponse struct {
	// The address of this radius server.
	RadiusServerAddress string `pulumi:"radiusServerAddress"`
	// The initial score assigned to this radius server.
	RadiusServerScore *int `pulumi:"radiusServerScore"`
	// The secret used for this radius server.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
}

// RadiusServerResponseInput is an input type that accepts RadiusServerResponseArgs and RadiusServerResponseOutput values.
// You can construct a concrete instance of `RadiusServerResponseInput` via:
//
//          RadiusServerResponseArgs{...}
type RadiusServerResponseInput interface {
	pulumi.Input

	ToRadiusServerResponseOutput() RadiusServerResponseOutput
	ToRadiusServerResponseOutputWithContext(context.Context) RadiusServerResponseOutput
}

// Radius Server Settings.
type RadiusServerResponseArgs struct {
	// The address of this radius server.
	RadiusServerAddress pulumi.StringInput `pulumi:"radiusServerAddress"`
	// The initial score assigned to this radius server.
	RadiusServerScore pulumi.IntPtrInput `pulumi:"radiusServerScore"`
	// The secret used for this radius server.
	RadiusServerSecret pulumi.StringPtrInput `pulumi:"radiusServerSecret"`
}

func (RadiusServerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RadiusServerResponse)(nil)).Elem()
}

func (i RadiusServerResponseArgs) ToRadiusServerResponseOutput() RadiusServerResponseOutput {
	return i.ToRadiusServerResponseOutputWithContext(context.Background())
}

func (i RadiusServerResponseArgs) ToRadiusServerResponseOutputWithContext(ctx context.Context) RadiusServerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RadiusServerResponseOutput)
}

// RadiusServerResponseArrayInput is an input type that accepts RadiusServerResponseArray and RadiusServerResponseArrayOutput values.
// You can construct a concrete instance of `RadiusServerResponseArrayInput` via:
//
//          RadiusServerResponseArray{ RadiusServerResponseArgs{...} }
type RadiusServerResponseArrayInput interface {
	pulumi.Input

	ToRadiusServerResponseArrayOutput() RadiusServerResponseArrayOutput
	ToRadiusServerResponseArrayOutputWithContext(context.Context) RadiusServerResponseArrayOutput
}

type RadiusServerResponseArray []RadiusServerResponseInput

func (RadiusServerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RadiusServerResponse)(nil)).Elem()
}

func (i RadiusServerResponseArray) ToRadiusServerResponseArrayOutput() RadiusServerResponseArrayOutput {
	return i.ToRadiusServerResponseArrayOutputWithContext(context.Background())
}

func (i RadiusServerResponseArray) ToRadiusServerResponseArrayOutputWithContext(ctx context.Context) RadiusServerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RadiusServerResponseArrayOutput)
}

// Radius Server Settings.
type RadiusServerResponseOutput struct{ *pulumi.OutputState }

func (RadiusServerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RadiusServerResponse)(nil)).Elem()
}

func (o RadiusServerResponseOutput) ToRadiusServerResponseOutput() RadiusServerResponseOutput {
	return o
}

func (o RadiusServerResponseOutput) ToRadiusServerResponseOutputWithContext(ctx context.Context) RadiusServerResponseOutput {
	return o
}

// The address of this radius server.
func (o RadiusServerResponseOutput) RadiusServerAddress() pulumi.StringOutput {
	return o.ApplyT(func(v RadiusServerResponse) string { return v.RadiusServerAddress }).(pulumi.StringOutput)
}

// The initial score assigned to this radius server.
func (o RadiusServerResponseOutput) RadiusServerScore() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RadiusServerResponse) *int { return v.RadiusServerScore }).(pulumi.IntPtrOutput)
}

// The secret used for this radius server.
func (o RadiusServerResponseOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RadiusServerResponse) *string { return v.RadiusServerSecret }).(pulumi.StringPtrOutput)
}

type RadiusServerResponseArrayOutput struct{ *pulumi.OutputState }

func (RadiusServerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RadiusServerResponse)(nil)).Elem()
}

func (o RadiusServerResponseArrayOutput) ToRadiusServerResponseArrayOutput() RadiusServerResponseArrayOutput {
	return o
}

func (o RadiusServerResponseArrayOutput) ToRadiusServerResponseArrayOutputWithContext(ctx context.Context) RadiusServerResponseArrayOutput {
	return o
}

func (o RadiusServerResponseArrayOutput) Index(i pulumi.IntInput) RadiusServerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RadiusServerResponse {
		return vs[0].([]RadiusServerResponse)[vs[1].(int)]
	}).(RadiusServerResponseOutput)
}

// A collective group of information about the record set information.
type RecordSetResponse struct {
	// Fqdn that resolves to private endpoint ip address.
	Fqdn *string `pulumi:"fqdn"`
	// The private ip address of the private endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
	// The provisioning state of the recordset.
	ProvisioningState string `pulumi:"provisioningState"`
	// Recordset name.
	RecordSetName *string `pulumi:"recordSetName"`
	// Resource record type.
	RecordType *string `pulumi:"recordType"`
	// Recordset time to live.
	Ttl *int `pulumi:"ttl"`
}

// RecordSetResponseInput is an input type that accepts RecordSetResponseArgs and RecordSetResponseOutput values.
// You can construct a concrete instance of `RecordSetResponseInput` via:
//
//          RecordSetResponseArgs{...}
type RecordSetResponseInput interface {
	pulumi.Input

	ToRecordSetResponseOutput() RecordSetResponseOutput
	ToRecordSetResponseOutputWithContext(context.Context) RecordSetResponseOutput
}

// A collective group of information about the record set information.
type RecordSetResponseArgs struct {
	// Fqdn that resolves to private endpoint ip address.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// The private ip address of the private endpoint.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	// The provisioning state of the recordset.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Recordset name.
	RecordSetName pulumi.StringPtrInput `pulumi:"recordSetName"`
	// Resource record type.
	RecordType pulumi.StringPtrInput `pulumi:"recordType"`
	// Recordset time to live.
	Ttl pulumi.IntPtrInput `pulumi:"ttl"`
}

func (RecordSetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordSetResponse)(nil)).Elem()
}

func (i RecordSetResponseArgs) ToRecordSetResponseOutput() RecordSetResponseOutput {
	return i.ToRecordSetResponseOutputWithContext(context.Background())
}

func (i RecordSetResponseArgs) ToRecordSetResponseOutputWithContext(ctx context.Context) RecordSetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordSetResponseOutput)
}

// RecordSetResponseArrayInput is an input type that accepts RecordSetResponseArray and RecordSetResponseArrayOutput values.
// You can construct a concrete instance of `RecordSetResponseArrayInput` via:
//
//          RecordSetResponseArray{ RecordSetResponseArgs{...} }
type RecordSetResponseArrayInput interface {
	pulumi.Input

	ToRecordSetResponseArrayOutput() RecordSetResponseArrayOutput
	ToRecordSetResponseArrayOutputWithContext(context.Context) RecordSetResponseArrayOutput
}

type RecordSetResponseArray []RecordSetResponseInput

func (RecordSetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecordSetResponse)(nil)).Elem()
}

func (i RecordSetResponseArray) ToRecordSetResponseArrayOutput() RecordSetResponseArrayOutput {
	return i.ToRecordSetResponseArrayOutputWithContext(context.Background())
}

func (i RecordSetResponseArray) ToRecordSetResponseArrayOutputWithContext(ctx context.Context) RecordSetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecordSetResponseArrayOutput)
}

// A collective group of information about the record set information.
type RecordSetResponseOutput struct{ *pulumi.OutputState }

func (RecordSetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecordSetResponse)(nil)).Elem()
}

func (o RecordSetResponseOutput) ToRecordSetResponseOutput() RecordSetResponseOutput {
	return o
}

func (o RecordSetResponseOutput) ToRecordSetResponseOutputWithContext(ctx context.Context) RecordSetResponseOutput {
	return o
}

// Fqdn that resolves to private endpoint ip address.
func (o RecordSetResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// The private ip address of the private endpoint.
func (o RecordSetResponseOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecordSetResponse) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

// The provisioning state of the recordset.
func (o RecordSetResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RecordSetResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Recordset name.
func (o RecordSetResponseOutput) RecordSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetResponse) *string { return v.RecordSetName }).(pulumi.StringPtrOutput)
}

// Resource record type.
func (o RecordSetResponseOutput) RecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RecordSetResponse) *string { return v.RecordType }).(pulumi.StringPtrOutput)
}

// Recordset time to live.
func (o RecordSetResponseOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RecordSetResponse) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

type RecordSetResponseArrayOutput struct{ *pulumi.OutputState }

func (RecordSetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RecordSetResponse)(nil)).Elem()
}

func (o RecordSetResponseArrayOutput) ToRecordSetResponseArrayOutput() RecordSetResponseArrayOutput {
	return o
}

func (o RecordSetResponseArrayOutput) ToRecordSetResponseArrayOutputWithContext(ctx context.Context) RecordSetResponseArrayOutput {
	return o
}

func (o RecordSetResponseArrayOutput) Index(i pulumi.IntInput) RecordSetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RecordSetResponse {
		return vs[0].([]RecordSetResponse)[vs[1].(int)]
	}).(RecordSetResponseOutput)
}

// Describes Redirect Route.
type RedirectConfiguration struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment *string `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHost *string `pulumi:"customHost"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath *string `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &.
	CustomQueryString *string `pulumi:"customQueryString"`
	OdataType         string  `pulumi:"odataType"`
	// The protocol of the destination to where the traffic is redirected
	RedirectProtocol *string `pulumi:"redirectProtocol"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType *string `pulumi:"redirectType"`
}

// RedirectConfigurationInput is an input type that accepts RedirectConfigurationArgs and RedirectConfigurationOutput values.
// You can construct a concrete instance of `RedirectConfigurationInput` via:
//
//          RedirectConfigurationArgs{...}
type RedirectConfigurationInput interface {
	pulumi.Input

	ToRedirectConfigurationOutput() RedirectConfigurationOutput
	ToRedirectConfigurationOutputWithContext(context.Context) RedirectConfigurationOutput
}

// Describes Redirect Route.
type RedirectConfigurationArgs struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment pulumi.StringPtrInput `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHost pulumi.StringPtrInput `pulumi:"customHost"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath pulumi.StringPtrInput `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &.
	CustomQueryString pulumi.StringPtrInput `pulumi:"customQueryString"`
	OdataType         pulumi.StringInput    `pulumi:"odataType"`
	// The protocol of the destination to where the traffic is redirected
	RedirectProtocol pulumi.StringPtrInput `pulumi:"redirectProtocol"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType pulumi.StringPtrInput `pulumi:"redirectType"`
}

func (RedirectConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectConfiguration)(nil)).Elem()
}

func (i RedirectConfigurationArgs) ToRedirectConfigurationOutput() RedirectConfigurationOutput {
	return i.ToRedirectConfigurationOutputWithContext(context.Background())
}

func (i RedirectConfigurationArgs) ToRedirectConfigurationOutputWithContext(ctx context.Context) RedirectConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectConfigurationOutput)
}

// Describes Redirect Route.
type RedirectConfigurationOutput struct{ *pulumi.OutputState }

func (RedirectConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectConfiguration)(nil)).Elem()
}

func (o RedirectConfigurationOutput) ToRedirectConfigurationOutput() RedirectConfigurationOutput {
	return o
}

func (o RedirectConfigurationOutput) ToRedirectConfigurationOutputWithContext(ctx context.Context) RedirectConfigurationOutput {
	return o
}

// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
func (o RedirectConfigurationOutput) CustomFragment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfiguration) *string { return v.CustomFragment }).(pulumi.StringPtrOutput)
}

// Host to redirect. Leave empty to use the incoming host as the destination host.
func (o RedirectConfigurationOutput) CustomHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfiguration) *string { return v.CustomHost }).(pulumi.StringPtrOutput)
}

// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
func (o RedirectConfigurationOutput) CustomPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfiguration) *string { return v.CustomPath }).(pulumi.StringPtrOutput)
}

// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &.
func (o RedirectConfigurationOutput) CustomQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfiguration) *string { return v.CustomQueryString }).(pulumi.StringPtrOutput)
}

func (o RedirectConfigurationOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RedirectConfiguration) string { return v.OdataType }).(pulumi.StringOutput)
}

// The protocol of the destination to where the traffic is redirected
func (o RedirectConfigurationOutput) RedirectProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfiguration) *string { return v.RedirectProtocol }).(pulumi.StringPtrOutput)
}

// The redirect type the rule will use when redirecting traffic.
func (o RedirectConfigurationOutput) RedirectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfiguration) *string { return v.RedirectType }).(pulumi.StringPtrOutput)
}

// Describes Redirect Route.
type RedirectConfigurationResponse struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment *string `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHost *string `pulumi:"customHost"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath *string `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &.
	CustomQueryString *string `pulumi:"customQueryString"`
	OdataType         string  `pulumi:"odataType"`
	// The protocol of the destination to where the traffic is redirected
	RedirectProtocol *string `pulumi:"redirectProtocol"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType *string `pulumi:"redirectType"`
}

// RedirectConfigurationResponseInput is an input type that accepts RedirectConfigurationResponseArgs and RedirectConfigurationResponseOutput values.
// You can construct a concrete instance of `RedirectConfigurationResponseInput` via:
//
//          RedirectConfigurationResponseArgs{...}
type RedirectConfigurationResponseInput interface {
	pulumi.Input

	ToRedirectConfigurationResponseOutput() RedirectConfigurationResponseOutput
	ToRedirectConfigurationResponseOutputWithContext(context.Context) RedirectConfigurationResponseOutput
}

// Describes Redirect Route.
type RedirectConfigurationResponseArgs struct {
	// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
	CustomFragment pulumi.StringPtrInput `pulumi:"customFragment"`
	// Host to redirect. Leave empty to use the incoming host as the destination host.
	CustomHost pulumi.StringPtrInput `pulumi:"customHost"`
	// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
	CustomPath pulumi.StringPtrInput `pulumi:"customPath"`
	// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &.
	CustomQueryString pulumi.StringPtrInput `pulumi:"customQueryString"`
	OdataType         pulumi.StringInput    `pulumi:"odataType"`
	// The protocol of the destination to where the traffic is redirected
	RedirectProtocol pulumi.StringPtrInput `pulumi:"redirectProtocol"`
	// The redirect type the rule will use when redirecting traffic.
	RedirectType pulumi.StringPtrInput `pulumi:"redirectType"`
}

func (RedirectConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectConfigurationResponse)(nil)).Elem()
}

func (i RedirectConfigurationResponseArgs) ToRedirectConfigurationResponseOutput() RedirectConfigurationResponseOutput {
	return i.ToRedirectConfigurationResponseOutputWithContext(context.Background())
}

func (i RedirectConfigurationResponseArgs) ToRedirectConfigurationResponseOutputWithContext(ctx context.Context) RedirectConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RedirectConfigurationResponseOutput)
}

// Describes Redirect Route.
type RedirectConfigurationResponseOutput struct{ *pulumi.OutputState }

func (RedirectConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RedirectConfigurationResponse)(nil)).Elem()
}

func (o RedirectConfigurationResponseOutput) ToRedirectConfigurationResponseOutput() RedirectConfigurationResponseOutput {
	return o
}

func (o RedirectConfigurationResponseOutput) ToRedirectConfigurationResponseOutputWithContext(ctx context.Context) RedirectConfigurationResponseOutput {
	return o
}

// Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #.
func (o RedirectConfigurationResponseOutput) CustomFragment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfigurationResponse) *string { return v.CustomFragment }).(pulumi.StringPtrOutput)
}

// Host to redirect. Leave empty to use the incoming host as the destination host.
func (o RedirectConfigurationResponseOutput) CustomHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfigurationResponse) *string { return v.CustomHost }).(pulumi.StringPtrOutput)
}

// The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.
func (o RedirectConfigurationResponseOutput) CustomPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfigurationResponse) *string { return v.CustomPath }).(pulumi.StringPtrOutput)
}

// The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. The first ? and & will be added automatically so do not include them in the front, but do separate multiple query strings with &.
func (o RedirectConfigurationResponseOutput) CustomQueryString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfigurationResponse) *string { return v.CustomQueryString }).(pulumi.StringPtrOutput)
}

func (o RedirectConfigurationResponseOutput) OdataType() pulumi.StringOutput {
	return o.ApplyT(func(v RedirectConfigurationResponse) string { return v.OdataType }).(pulumi.StringOutput)
}

// The protocol of the destination to where the traffic is redirected
func (o RedirectConfigurationResponseOutput) RedirectProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfigurationResponse) *string { return v.RedirectProtocol }).(pulumi.StringPtrOutput)
}

// The redirect type the rule will use when redirecting traffic.
func (o RedirectConfigurationResponseOutput) RedirectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RedirectConfigurationResponse) *string { return v.RedirectType }).(pulumi.StringPtrOutput)
}

// Reference to a public IP address.
type ReferencedPublicIpAddressResponse struct {
	// The PublicIPAddress Reference.
	Id *string `pulumi:"id"`
}

// ReferencedPublicIpAddressResponseInput is an input type that accepts ReferencedPublicIpAddressResponseArgs and ReferencedPublicIpAddressResponseOutput values.
// You can construct a concrete instance of `ReferencedPublicIpAddressResponseInput` via:
//
//          ReferencedPublicIpAddressResponseArgs{...}
type ReferencedPublicIpAddressResponseInput interface {
	pulumi.Input

	ToReferencedPublicIpAddressResponseOutput() ReferencedPublicIpAddressResponseOutput
	ToReferencedPublicIpAddressResponseOutputWithContext(context.Context) ReferencedPublicIpAddressResponseOutput
}

// Reference to a public IP address.
type ReferencedPublicIpAddressResponseArgs struct {
	// The PublicIPAddress Reference.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (ReferencedPublicIpAddressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferencedPublicIpAddressResponse)(nil)).Elem()
}

func (i ReferencedPublicIpAddressResponseArgs) ToReferencedPublicIpAddressResponseOutput() ReferencedPublicIpAddressResponseOutput {
	return i.ToReferencedPublicIpAddressResponseOutputWithContext(context.Background())
}

func (i ReferencedPublicIpAddressResponseArgs) ToReferencedPublicIpAddressResponseOutputWithContext(ctx context.Context) ReferencedPublicIpAddressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferencedPublicIpAddressResponseOutput)
}

// ReferencedPublicIpAddressResponseArrayInput is an input type that accepts ReferencedPublicIpAddressResponseArray and ReferencedPublicIpAddressResponseArrayOutput values.
// You can construct a concrete instance of `ReferencedPublicIpAddressResponseArrayInput` via:
//
//          ReferencedPublicIpAddressResponseArray{ ReferencedPublicIpAddressResponseArgs{...} }
type ReferencedPublicIpAddressResponseArrayInput interface {
	pulumi.Input

	ToReferencedPublicIpAddressResponseArrayOutput() ReferencedPublicIpAddressResponseArrayOutput
	ToReferencedPublicIpAddressResponseArrayOutputWithContext(context.Context) ReferencedPublicIpAddressResponseArrayOutput
}

type ReferencedPublicIpAddressResponseArray []ReferencedPublicIpAddressResponseInput

func (ReferencedPublicIpAddressResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferencedPublicIpAddressResponse)(nil)).Elem()
}

func (i ReferencedPublicIpAddressResponseArray) ToReferencedPublicIpAddressResponseArrayOutput() ReferencedPublicIpAddressResponseArrayOutput {
	return i.ToReferencedPublicIpAddressResponseArrayOutputWithContext(context.Background())
}

func (i ReferencedPublicIpAddressResponseArray) ToReferencedPublicIpAddressResponseArrayOutputWithContext(ctx context.Context) ReferencedPublicIpAddressResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReferencedPublicIpAddressResponseArrayOutput)
}

// Reference to a public IP address.
type ReferencedPublicIpAddressResponseOutput struct{ *pulumi.OutputState }

func (ReferencedPublicIpAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReferencedPublicIpAddressResponse)(nil)).Elem()
}

func (o ReferencedPublicIpAddressResponseOutput) ToReferencedPublicIpAddressResponseOutput() ReferencedPublicIpAddressResponseOutput {
	return o
}

func (o ReferencedPublicIpAddressResponseOutput) ToReferencedPublicIpAddressResponseOutputWithContext(ctx context.Context) ReferencedPublicIpAddressResponseOutput {
	return o
}

// The PublicIPAddress Reference.
func (o ReferencedPublicIpAddressResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReferencedPublicIpAddressResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type ReferencedPublicIpAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (ReferencedPublicIpAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReferencedPublicIpAddressResponse)(nil)).Elem()
}

func (o ReferencedPublicIpAddressResponseArrayOutput) ToReferencedPublicIpAddressResponseArrayOutput() ReferencedPublicIpAddressResponseArrayOutput {
	return o
}

func (o ReferencedPublicIpAddressResponseArrayOutput) ToReferencedPublicIpAddressResponseArrayOutputWithContext(ctx context.Context) ReferencedPublicIpAddressResponseArrayOutput {
	return o
}

func (o ReferencedPublicIpAddressResponseArrayOutput) Index(i pulumi.IntInput) ReferencedPublicIpAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReferencedPublicIpAddressResponse {
		return vs[0].([]ReferencedPublicIpAddressResponse)[vs[1].(int)]
	}).(ReferencedPublicIpAddressResponseOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Link to the external resource
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
}

// ResourceNavigationLinkInput is an input type that accepts ResourceNavigationLinkArgs and ResourceNavigationLinkOutput values.
// You can construct a concrete instance of `ResourceNavigationLinkInput` via:
//
//          ResourceNavigationLinkArgs{...}
type ResourceNavigationLinkInput interface {
	pulumi.Input

	ToResourceNavigationLinkOutput() ResourceNavigationLinkOutput
	ToResourceNavigationLinkOutputWithContext(context.Context) ResourceNavigationLinkOutput
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Link to the external resource
	Link pulumi.StringPtrInput `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType pulumi.StringPtrInput `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ResourceNavigationLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLink)(nil)).Elem()
}

func (i ResourceNavigationLinkArgs) ToResourceNavigationLinkOutput() ResourceNavigationLinkOutput {
	return i.ToResourceNavigationLinkOutputWithContext(context.Background())
}

func (i ResourceNavigationLinkArgs) ToResourceNavigationLinkOutputWithContext(ctx context.Context) ResourceNavigationLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLink)(nil)).Elem()
}

func (o ResourceNavigationLinkOutput) ToResourceNavigationLinkOutput() ResourceNavigationLinkOutput {
	return o
}

func (o ResourceNavigationLinkOutput) ToResourceNavigationLinkOutputWithContext(ctx context.Context) ResourceNavigationLinkOutput {
	return o
}

// Resource ID.
func (o ResourceNavigationLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Link to the external resource
func (o ResourceNavigationLinkOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLink) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ResourceNavigationLinkOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLink) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ResourceNavigationLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id string `pulumi:"id"`
	// Link to the external resource.
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the resource navigation link resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ResourceNavigationLinkResponseInput is an input type that accepts ResourceNavigationLinkResponseArgs and ResourceNavigationLinkResponseOutput values.
// You can construct a concrete instance of `ResourceNavigationLinkResponseInput` via:
//
//          ResourceNavigationLinkResponseArgs{...}
type ResourceNavigationLinkResponseInput interface {
	pulumi.Input

	ToResourceNavigationLinkResponseOutput() ResourceNavigationLinkResponseOutput
	ToResourceNavigationLinkResponseOutputWithContext(context.Context) ResourceNavigationLinkResponseOutput
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Link to the external resource.
	Link pulumi.StringPtrInput `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType pulumi.StringPtrInput `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the resource navigation link resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ResourceNavigationLinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLinkResponse)(nil)).Elem()
}

func (i ResourceNavigationLinkResponseArgs) ToResourceNavigationLinkResponseOutput() ResourceNavigationLinkResponseOutput {
	return i.ToResourceNavigationLinkResponseOutputWithContext(context.Background())
}

func (i ResourceNavigationLinkResponseArgs) ToResourceNavigationLinkResponseOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkResponseOutput)
}

// ResourceNavigationLinkResponseArrayInput is an input type that accepts ResourceNavigationLinkResponseArray and ResourceNavigationLinkResponseArrayOutput values.
// You can construct a concrete instance of `ResourceNavigationLinkResponseArrayInput` via:
//
//          ResourceNavigationLinkResponseArray{ ResourceNavigationLinkResponseArgs{...} }
type ResourceNavigationLinkResponseArrayInput interface {
	pulumi.Input

	ToResourceNavigationLinkResponseArrayOutput() ResourceNavigationLinkResponseArrayOutput
	ToResourceNavigationLinkResponseArrayOutputWithContext(context.Context) ResourceNavigationLinkResponseArrayOutput
}

type ResourceNavigationLinkResponseArray []ResourceNavigationLinkResponseInput

func (ResourceNavigationLinkResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceNavigationLinkResponse)(nil)).Elem()
}

func (i ResourceNavigationLinkResponseArray) ToResourceNavigationLinkResponseArrayOutput() ResourceNavigationLinkResponseArrayOutput {
	return i.ToResourceNavigationLinkResponseArrayOutputWithContext(context.Background())
}

func (i ResourceNavigationLinkResponseArray) ToResourceNavigationLinkResponseArrayOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkResponseArrayOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkResponseOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLinkResponse)(nil)).Elem()
}

func (o ResourceNavigationLinkResponseOutput) ToResourceNavigationLinkResponseOutput() ResourceNavigationLinkResponseOutput {
	return o
}

func (o ResourceNavigationLinkResponseOutput) ToResourceNavigationLinkResponseOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ResourceNavigationLinkResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ResourceNavigationLinkResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Link to the external resource.
func (o ResourceNavigationLinkResponseOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ResourceNavigationLinkResponseOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ResourceNavigationLinkResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource navigation link resource.
func (o ResourceNavigationLinkResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o ResourceNavigationLinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ResourceNavigationLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceNavigationLinkResponse)(nil)).Elem()
}

func (o ResourceNavigationLinkResponseArrayOutput) ToResourceNavigationLinkResponseArrayOutput() ResourceNavigationLinkResponseArrayOutput {
	return o
}

func (o ResourceNavigationLinkResponseArrayOutput) ToResourceNavigationLinkResponseArrayOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseArrayOutput {
	return o
}

func (o ResourceNavigationLinkResponseArrayOutput) Index(i pulumi.IntInput) ResourceNavigationLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceNavigationLinkResponse {
		return vs[0].([]ResourceNavigationLinkResponse)[vs[1].(int)]
	}).(ResourceNavigationLinkResponseOutput)
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParameters struct {
	// Number of days to retain flow log records.
	Days *int `pulumi:"days"`
	// Flag to enable/disable retention.
	Enabled *bool `pulumi:"enabled"`
}

// RetentionPolicyParametersInput is an input type that accepts RetentionPolicyParametersArgs and RetentionPolicyParametersOutput values.
// You can construct a concrete instance of `RetentionPolicyParametersInput` via:
//
//          RetentionPolicyParametersArgs{...}
type RetentionPolicyParametersInput interface {
	pulumi.Input

	ToRetentionPolicyParametersOutput() RetentionPolicyParametersOutput
	ToRetentionPolicyParametersOutputWithContext(context.Context) RetentionPolicyParametersOutput
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParametersArgs struct {
	// Number of days to retain flow log records.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// Flag to enable/disable retention.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (RetentionPolicyParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicyParameters)(nil)).Elem()
}

func (i RetentionPolicyParametersArgs) ToRetentionPolicyParametersOutput() RetentionPolicyParametersOutput {
	return i.ToRetentionPolicyParametersOutputWithContext(context.Background())
}

func (i RetentionPolicyParametersArgs) ToRetentionPolicyParametersOutputWithContext(ctx context.Context) RetentionPolicyParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyParametersOutput)
}

func (i RetentionPolicyParametersArgs) ToRetentionPolicyParametersPtrOutput() RetentionPolicyParametersPtrOutput {
	return i.ToRetentionPolicyParametersPtrOutputWithContext(context.Background())
}

func (i RetentionPolicyParametersArgs) ToRetentionPolicyParametersPtrOutputWithContext(ctx context.Context) RetentionPolicyParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyParametersOutput).ToRetentionPolicyParametersPtrOutputWithContext(ctx)
}

// RetentionPolicyParametersPtrInput is an input type that accepts RetentionPolicyParametersArgs, RetentionPolicyParametersPtr and RetentionPolicyParametersPtrOutput values.
// You can construct a concrete instance of `RetentionPolicyParametersPtrInput` via:
//
//          RetentionPolicyParametersArgs{...}
//
//  or:
//
//          nil
type RetentionPolicyParametersPtrInput interface {
	pulumi.Input

	ToRetentionPolicyParametersPtrOutput() RetentionPolicyParametersPtrOutput
	ToRetentionPolicyParametersPtrOutputWithContext(context.Context) RetentionPolicyParametersPtrOutput
}

type retentionPolicyParametersPtrType RetentionPolicyParametersArgs

func RetentionPolicyParametersPtr(v *RetentionPolicyParametersArgs) RetentionPolicyParametersPtrInput {
	return (*retentionPolicyParametersPtrType)(v)
}

func (*retentionPolicyParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicyParameters)(nil)).Elem()
}

func (i *retentionPolicyParametersPtrType) ToRetentionPolicyParametersPtrOutput() RetentionPolicyParametersPtrOutput {
	return i.ToRetentionPolicyParametersPtrOutputWithContext(context.Background())
}

func (i *retentionPolicyParametersPtrType) ToRetentionPolicyParametersPtrOutputWithContext(ctx context.Context) RetentionPolicyParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyParametersPtrOutput)
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParametersOutput struct{ *pulumi.OutputState }

func (RetentionPolicyParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicyParameters)(nil)).Elem()
}

func (o RetentionPolicyParametersOutput) ToRetentionPolicyParametersOutput() RetentionPolicyParametersOutput {
	return o
}

func (o RetentionPolicyParametersOutput) ToRetentionPolicyParametersOutputWithContext(ctx context.Context) RetentionPolicyParametersOutput {
	return o
}

func (o RetentionPolicyParametersOutput) ToRetentionPolicyParametersPtrOutput() RetentionPolicyParametersPtrOutput {
	return o.ToRetentionPolicyParametersPtrOutputWithContext(context.Background())
}

func (o RetentionPolicyParametersOutput) ToRetentionPolicyParametersPtrOutputWithContext(ctx context.Context) RetentionPolicyParametersPtrOutput {
	return o.ApplyT(func(v RetentionPolicyParameters) *RetentionPolicyParameters {
		return &v
	}).(RetentionPolicyParametersPtrOutput)
}

// Number of days to retain flow log records.
func (o RetentionPolicyParametersOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionPolicyParameters) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Flag to enable/disable retention.
func (o RetentionPolicyParametersOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RetentionPolicyParameters) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type RetentionPolicyParametersPtrOutput struct{ *pulumi.OutputState }

func (RetentionPolicyParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicyParameters)(nil)).Elem()
}

func (o RetentionPolicyParametersPtrOutput) ToRetentionPolicyParametersPtrOutput() RetentionPolicyParametersPtrOutput {
	return o
}

func (o RetentionPolicyParametersPtrOutput) ToRetentionPolicyParametersPtrOutputWithContext(ctx context.Context) RetentionPolicyParametersPtrOutput {
	return o
}

func (o RetentionPolicyParametersPtrOutput) Elem() RetentionPolicyParametersOutput {
	return o.ApplyT(func(v *RetentionPolicyParameters) RetentionPolicyParameters { return *v }).(RetentionPolicyParametersOutput)
}

// Number of days to retain flow log records.
func (o RetentionPolicyParametersPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyParameters) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// Flag to enable/disable retention.
func (o RetentionPolicyParametersPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyParameters) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParametersResponse struct {
	// Number of days to retain flow log records.
	Days *int `pulumi:"days"`
	// Flag to enable/disable retention.
	Enabled *bool `pulumi:"enabled"`
}

// RetentionPolicyParametersResponseInput is an input type that accepts RetentionPolicyParametersResponseArgs and RetentionPolicyParametersResponseOutput values.
// You can construct a concrete instance of `RetentionPolicyParametersResponseInput` via:
//
//          RetentionPolicyParametersResponseArgs{...}
type RetentionPolicyParametersResponseInput interface {
	pulumi.Input

	ToRetentionPolicyParametersResponseOutput() RetentionPolicyParametersResponseOutput
	ToRetentionPolicyParametersResponseOutputWithContext(context.Context) RetentionPolicyParametersResponseOutput
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParametersResponseArgs struct {
	// Number of days to retain flow log records.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// Flag to enable/disable retention.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (RetentionPolicyParametersResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicyParametersResponse)(nil)).Elem()
}

func (i RetentionPolicyParametersResponseArgs) ToRetentionPolicyParametersResponseOutput() RetentionPolicyParametersResponseOutput {
	return i.ToRetentionPolicyParametersResponseOutputWithContext(context.Background())
}

func (i RetentionPolicyParametersResponseArgs) ToRetentionPolicyParametersResponseOutputWithContext(ctx context.Context) RetentionPolicyParametersResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyParametersResponseOutput)
}

func (i RetentionPolicyParametersResponseArgs) ToRetentionPolicyParametersResponsePtrOutput() RetentionPolicyParametersResponsePtrOutput {
	return i.ToRetentionPolicyParametersResponsePtrOutputWithContext(context.Background())
}

func (i RetentionPolicyParametersResponseArgs) ToRetentionPolicyParametersResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyParametersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyParametersResponseOutput).ToRetentionPolicyParametersResponsePtrOutputWithContext(ctx)
}

// RetentionPolicyParametersResponsePtrInput is an input type that accepts RetentionPolicyParametersResponseArgs, RetentionPolicyParametersResponsePtr and RetentionPolicyParametersResponsePtrOutput values.
// You can construct a concrete instance of `RetentionPolicyParametersResponsePtrInput` via:
//
//          RetentionPolicyParametersResponseArgs{...}
//
//  or:
//
//          nil
type RetentionPolicyParametersResponsePtrInput interface {
	pulumi.Input

	ToRetentionPolicyParametersResponsePtrOutput() RetentionPolicyParametersResponsePtrOutput
	ToRetentionPolicyParametersResponsePtrOutputWithContext(context.Context) RetentionPolicyParametersResponsePtrOutput
}

type retentionPolicyParametersResponsePtrType RetentionPolicyParametersResponseArgs

func RetentionPolicyParametersResponsePtr(v *RetentionPolicyParametersResponseArgs) RetentionPolicyParametersResponsePtrInput {
	return (*retentionPolicyParametersResponsePtrType)(v)
}

func (*retentionPolicyParametersResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicyParametersResponse)(nil)).Elem()
}

func (i *retentionPolicyParametersResponsePtrType) ToRetentionPolicyParametersResponsePtrOutput() RetentionPolicyParametersResponsePtrOutput {
	return i.ToRetentionPolicyParametersResponsePtrOutputWithContext(context.Background())
}

func (i *retentionPolicyParametersResponsePtrType) ToRetentionPolicyParametersResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyParametersResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionPolicyParametersResponsePtrOutput)
}

// Parameters that define the retention policy for flow log.
type RetentionPolicyParametersResponseOutput struct{ *pulumi.OutputState }

func (RetentionPolicyParametersResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RetentionPolicyParametersResponse)(nil)).Elem()
}

func (o RetentionPolicyParametersResponseOutput) ToRetentionPolicyParametersResponseOutput() RetentionPolicyParametersResponseOutput {
	return o
}

func (o RetentionPolicyParametersResponseOutput) ToRetentionPolicyParametersResponseOutputWithContext(ctx context.Context) RetentionPolicyParametersResponseOutput {
	return o
}

func (o RetentionPolicyParametersResponseOutput) ToRetentionPolicyParametersResponsePtrOutput() RetentionPolicyParametersResponsePtrOutput {
	return o.ToRetentionPolicyParametersResponsePtrOutputWithContext(context.Background())
}

func (o RetentionPolicyParametersResponseOutput) ToRetentionPolicyParametersResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyParametersResponsePtrOutput {
	return o.ApplyT(func(v RetentionPolicyParametersResponse) *RetentionPolicyParametersResponse {
		return &v
	}).(RetentionPolicyParametersResponsePtrOutput)
}

// Number of days to retain flow log records.
func (o RetentionPolicyParametersResponseOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RetentionPolicyParametersResponse) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// Flag to enable/disable retention.
func (o RetentionPolicyParametersResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RetentionPolicyParametersResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type RetentionPolicyParametersResponsePtrOutput struct{ *pulumi.OutputState }

func (RetentionPolicyParametersResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionPolicyParametersResponse)(nil)).Elem()
}

func (o RetentionPolicyParametersResponsePtrOutput) ToRetentionPolicyParametersResponsePtrOutput() RetentionPolicyParametersResponsePtrOutput {
	return o
}

func (o RetentionPolicyParametersResponsePtrOutput) ToRetentionPolicyParametersResponsePtrOutputWithContext(ctx context.Context) RetentionPolicyParametersResponsePtrOutput {
	return o
}

func (o RetentionPolicyParametersResponsePtrOutput) Elem() RetentionPolicyParametersResponseOutput {
	return o.ApplyT(func(v *RetentionPolicyParametersResponse) RetentionPolicyParametersResponse { return *v }).(RetentionPolicyParametersResponseOutput)
}

// Number of days to retain flow log records.
func (o RetentionPolicyParametersResponsePtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyParametersResponse) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// Flag to enable/disable retention.
func (o RetentionPolicyParametersResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RetentionPolicyParametersResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Route resource.
type RouteType struct {
	// The destination CIDR to which the route applies.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to.
	NextHopType string `pulumi:"nextHopType"`
}

// RouteTypeInput is an input type that accepts RouteTypeArgs and RouteTypeOutput values.
// You can construct a concrete instance of `RouteTypeInput` via:
//
//          RouteTypeArgs{...}
type RouteTypeInput interface {
	pulumi.Input

	ToRouteTypeOutput() RouteTypeOutput
	ToRouteTypeOutputWithContext(context.Context) RouteTypeOutput
}

// Route resource.
type RouteTypeArgs struct {
	// The destination CIDR to which the route applies.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to.
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
}

func (RouteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteType)(nil)).Elem()
}

func (i RouteTypeArgs) ToRouteTypeOutput() RouteTypeOutput {
	return i.ToRouteTypeOutputWithContext(context.Background())
}

func (i RouteTypeArgs) ToRouteTypeOutputWithContext(ctx context.Context) RouteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTypeOutput)
}

// RouteTypeArrayInput is an input type that accepts RouteTypeArray and RouteTypeArrayOutput values.
// You can construct a concrete instance of `RouteTypeArrayInput` via:
//
//          RouteTypeArray{ RouteTypeArgs{...} }
type RouteTypeArrayInput interface {
	pulumi.Input

	ToRouteTypeArrayOutput() RouteTypeArrayOutput
	ToRouteTypeArrayOutputWithContext(context.Context) RouteTypeArrayOutput
}

type RouteTypeArray []RouteTypeInput

func (RouteTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteType)(nil)).Elem()
}

func (i RouteTypeArray) ToRouteTypeArrayOutput() RouteTypeArrayOutput {
	return i.ToRouteTypeArrayOutputWithContext(context.Background())
}

func (i RouteTypeArray) ToRouteTypeArrayOutputWithContext(ctx context.Context) RouteTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTypeArrayOutput)
}

// Route resource.
type RouteTypeOutput struct{ *pulumi.OutputState }

func (RouteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteType)(nil)).Elem()
}

func (o RouteTypeOutput) ToRouteTypeOutput() RouteTypeOutput {
	return o
}

func (o RouteTypeOutput) ToRouteTypeOutputWithContext(ctx context.Context) RouteTypeOutput {
	return o
}

// The destination CIDR to which the route applies.
func (o RouteTypeOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RouteTypeOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to.
func (o RouteTypeOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteType) string { return v.NextHopType }).(pulumi.StringOutput)
}

type RouteTypeArrayOutput struct{ *pulumi.OutputState }

func (RouteTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteType)(nil)).Elem()
}

func (o RouteTypeArrayOutput) ToRouteTypeArrayOutput() RouteTypeArrayOutput {
	return o
}

func (o RouteTypeArrayOutput) ToRouteTypeArrayOutputWithContext(ctx context.Context) RouteTypeArrayOutput {
	return o
}

func (o RouteTypeArrayOutput) Index(i pulumi.IntInput) RouteTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteType {
		return vs[0].([]RouteType)[vs[1].(int)]
	}).(RouteTypeOutput)
}

// Route Filter Rule Resource.
type RouteFilterRuleType struct {
	// The access type of the rule.
	Access string `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
	Communities []string `pulumi:"communities"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The rule type of the rule.
	RouteFilterRuleType string `pulumi:"routeFilterRuleType"`
}

// RouteFilterRuleTypeInput is an input type that accepts RouteFilterRuleTypeArgs and RouteFilterRuleTypeOutput values.
// You can construct a concrete instance of `RouteFilterRuleTypeInput` via:
//
//          RouteFilterRuleTypeArgs{...}
type RouteFilterRuleTypeInput interface {
	pulumi.Input

	ToRouteFilterRuleTypeOutput() RouteFilterRuleTypeOutput
	ToRouteFilterRuleTypeOutputWithContext(context.Context) RouteFilterRuleTypeOutput
}

// Route Filter Rule Resource.
type RouteFilterRuleTypeArgs struct {
	// The access type of the rule.
	Access pulumi.StringInput `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
	Communities pulumi.StringArrayInput `pulumi:"communities"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The rule type of the rule.
	RouteFilterRuleType pulumi.StringInput `pulumi:"routeFilterRuleType"`
}

func (RouteFilterRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleType)(nil)).Elem()
}

func (i RouteFilterRuleTypeArgs) ToRouteFilterRuleTypeOutput() RouteFilterRuleTypeOutput {
	return i.ToRouteFilterRuleTypeOutputWithContext(context.Background())
}

func (i RouteFilterRuleTypeArgs) ToRouteFilterRuleTypeOutputWithContext(ctx context.Context) RouteFilterRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRuleTypeOutput)
}

// RouteFilterRuleTypeArrayInput is an input type that accepts RouteFilterRuleTypeArray and RouteFilterRuleTypeArrayOutput values.
// You can construct a concrete instance of `RouteFilterRuleTypeArrayInput` via:
//
//          RouteFilterRuleTypeArray{ RouteFilterRuleTypeArgs{...} }
type RouteFilterRuleTypeArrayInput interface {
	pulumi.Input

	ToRouteFilterRuleTypeArrayOutput() RouteFilterRuleTypeArrayOutput
	ToRouteFilterRuleTypeArrayOutputWithContext(context.Context) RouteFilterRuleTypeArrayOutput
}

type RouteFilterRuleTypeArray []RouteFilterRuleTypeInput

func (RouteFilterRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteFilterRuleType)(nil)).Elem()
}

func (i RouteFilterRuleTypeArray) ToRouteFilterRuleTypeArrayOutput() RouteFilterRuleTypeArrayOutput {
	return i.ToRouteFilterRuleTypeArrayOutputWithContext(context.Background())
}

func (i RouteFilterRuleTypeArray) ToRouteFilterRuleTypeArrayOutputWithContext(ctx context.Context) RouteFilterRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRuleTypeArrayOutput)
}

// Route Filter Rule Resource.
type RouteFilterRuleTypeOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleType)(nil)).Elem()
}

func (o RouteFilterRuleTypeOutput) ToRouteFilterRuleTypeOutput() RouteFilterRuleTypeOutput {
	return o
}

func (o RouteFilterRuleTypeOutput) ToRouteFilterRuleTypeOutputWithContext(ctx context.Context) RouteFilterRuleTypeOutput {
	return o
}

// The access type of the rule.
func (o RouteFilterRuleTypeOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleType) string { return v.Access }).(pulumi.StringOutput)
}

// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
func (o RouteFilterRuleTypeOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteFilterRuleType) []string { return v.Communities }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o RouteFilterRuleTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteFilterRuleTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteFilterRuleTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The rule type of the rule.
func (o RouteFilterRuleTypeOutput) RouteFilterRuleType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleType) string { return v.RouteFilterRuleType }).(pulumi.StringOutput)
}

type RouteFilterRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteFilterRuleType)(nil)).Elem()
}

func (o RouteFilterRuleTypeArrayOutput) ToRouteFilterRuleTypeArrayOutput() RouteFilterRuleTypeArrayOutput {
	return o
}

func (o RouteFilterRuleTypeArrayOutput) ToRouteFilterRuleTypeArrayOutputWithContext(ctx context.Context) RouteFilterRuleTypeArrayOutput {
	return o
}

func (o RouteFilterRuleTypeArrayOutput) Index(i pulumi.IntInput) RouteFilterRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteFilterRuleType {
		return vs[0].([]RouteFilterRuleType)[vs[1].(int)]
	}).(RouteFilterRuleTypeOutput)
}

// Route Filter Rule Resource.
type RouteFilterRuleResponse struct {
	// The access type of the rule.
	Access string `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
	Communities []string `pulumi:"communities"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the route filter rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The rule type of the rule.
	RouteFilterRuleType string `pulumi:"routeFilterRuleType"`
}

// RouteFilterRuleResponseInput is an input type that accepts RouteFilterRuleResponseArgs and RouteFilterRuleResponseOutput values.
// You can construct a concrete instance of `RouteFilterRuleResponseInput` via:
//
//          RouteFilterRuleResponseArgs{...}
type RouteFilterRuleResponseInput interface {
	pulumi.Input

	ToRouteFilterRuleResponseOutput() RouteFilterRuleResponseOutput
	ToRouteFilterRuleResponseOutputWithContext(context.Context) RouteFilterRuleResponseOutput
}

// Route Filter Rule Resource.
type RouteFilterRuleResponseArgs struct {
	// The access type of the rule.
	Access pulumi.StringInput `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
	Communities pulumi.StringArrayInput `pulumi:"communities"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the route filter rule resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The rule type of the rule.
	RouteFilterRuleType pulumi.StringInput `pulumi:"routeFilterRuleType"`
}

func (RouteFilterRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleResponse)(nil)).Elem()
}

func (i RouteFilterRuleResponseArgs) ToRouteFilterRuleResponseOutput() RouteFilterRuleResponseOutput {
	return i.ToRouteFilterRuleResponseOutputWithContext(context.Background())
}

func (i RouteFilterRuleResponseArgs) ToRouteFilterRuleResponseOutputWithContext(ctx context.Context) RouteFilterRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRuleResponseOutput)
}

// RouteFilterRuleResponseArrayInput is an input type that accepts RouteFilterRuleResponseArray and RouteFilterRuleResponseArrayOutput values.
// You can construct a concrete instance of `RouteFilterRuleResponseArrayInput` via:
//
//          RouteFilterRuleResponseArray{ RouteFilterRuleResponseArgs{...} }
type RouteFilterRuleResponseArrayInput interface {
	pulumi.Input

	ToRouteFilterRuleResponseArrayOutput() RouteFilterRuleResponseArrayOutput
	ToRouteFilterRuleResponseArrayOutputWithContext(context.Context) RouteFilterRuleResponseArrayOutput
}

type RouteFilterRuleResponseArray []RouteFilterRuleResponseInput

func (RouteFilterRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteFilterRuleResponse)(nil)).Elem()
}

func (i RouteFilterRuleResponseArray) ToRouteFilterRuleResponseArrayOutput() RouteFilterRuleResponseArrayOutput {
	return i.ToRouteFilterRuleResponseArrayOutputWithContext(context.Background())
}

func (i RouteFilterRuleResponseArray) ToRouteFilterRuleResponseArrayOutputWithContext(ctx context.Context) RouteFilterRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRuleResponseArrayOutput)
}

// Route Filter Rule Resource.
type RouteFilterRuleResponseOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleResponse)(nil)).Elem()
}

func (o RouteFilterRuleResponseOutput) ToRouteFilterRuleResponseOutput() RouteFilterRuleResponseOutput {
	return o
}

func (o RouteFilterRuleResponseOutput) ToRouteFilterRuleResponseOutputWithContext(ctx context.Context) RouteFilterRuleResponseOutput {
	return o
}

// The access type of the rule.
func (o RouteFilterRuleResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) string { return v.Access }).(pulumi.StringOutput)
}

// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020'].
func (o RouteFilterRuleResponseOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) []string { return v.Communities }).(pulumi.StringArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteFilterRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o RouteFilterRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteFilterRuleResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteFilterRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the route filter rule resource.
func (o RouteFilterRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The rule type of the rule.
func (o RouteFilterRuleResponseOutput) RouteFilterRuleType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) string { return v.RouteFilterRuleType }).(pulumi.StringOutput)
}

type RouteFilterRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteFilterRuleResponse)(nil)).Elem()
}

func (o RouteFilterRuleResponseArrayOutput) ToRouteFilterRuleResponseArrayOutput() RouteFilterRuleResponseArrayOutput {
	return o
}

func (o RouteFilterRuleResponseArrayOutput) ToRouteFilterRuleResponseArrayOutputWithContext(ctx context.Context) RouteFilterRuleResponseArrayOutput {
	return o
}

func (o RouteFilterRuleResponseArrayOutput) Index(i pulumi.IntInput) RouteFilterRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteFilterRuleResponse {
		return vs[0].([]RouteFilterRuleResponse)[vs[1].(int)]
	}).(RouteFilterRuleResponseOutput)
}

// Route resource.
type RouteResponse struct {
	// The destination CIDR to which the route applies.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to.
	NextHopType string `pulumi:"nextHopType"`
	// The provisioning state of the route resource.
	ProvisioningState string `pulumi:"provisioningState"`
}

// RouteResponseInput is an input type that accepts RouteResponseArgs and RouteResponseOutput values.
// You can construct a concrete instance of `RouteResponseInput` via:
//
//          RouteResponseArgs{...}
type RouteResponseInput interface {
	pulumi.Input

	ToRouteResponseOutput() RouteResponseOutput
	ToRouteResponseOutputWithContext(context.Context) RouteResponseOutput
}

// Route resource.
type RouteResponseArgs struct {
	// The destination CIDR to which the route applies.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to.
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
	// The provisioning state of the route resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (RouteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteResponse)(nil)).Elem()
}

func (i RouteResponseArgs) ToRouteResponseOutput() RouteResponseOutput {
	return i.ToRouteResponseOutputWithContext(context.Background())
}

func (i RouteResponseArgs) ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteResponseOutput)
}

// RouteResponseArrayInput is an input type that accepts RouteResponseArray and RouteResponseArrayOutput values.
// You can construct a concrete instance of `RouteResponseArrayInput` via:
//
//          RouteResponseArray{ RouteResponseArgs{...} }
type RouteResponseArrayInput interface {
	pulumi.Input

	ToRouteResponseArrayOutput() RouteResponseArrayOutput
	ToRouteResponseArrayOutputWithContext(context.Context) RouteResponseArrayOutput
}

type RouteResponseArray []RouteResponseInput

func (RouteResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteResponse)(nil)).Elem()
}

func (i RouteResponseArray) ToRouteResponseArrayOutput() RouteResponseArrayOutput {
	return i.ToRouteResponseArrayOutputWithContext(context.Background())
}

func (i RouteResponseArray) ToRouteResponseArrayOutputWithContext(ctx context.Context) RouteResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteResponseArrayOutput)
}

// Route resource.
type RouteResponseOutput struct{ *pulumi.OutputState }

func (RouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteResponse)(nil)).Elem()
}

func (o RouteResponseOutput) ToRouteResponseOutput() RouteResponseOutput {
	return o
}

func (o RouteResponseOutput) ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput {
	return o
}

// The destination CIDR to which the route applies.
func (o RouteResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o RouteResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RouteResponseOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to.
func (o RouteResponseOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The provisioning state of the route resource.
func (o RouteResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type RouteResponseArrayOutput struct{ *pulumi.OutputState }

func (RouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteResponse)(nil)).Elem()
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutput() RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutputWithContext(ctx context.Context) RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) Index(i pulumi.IntInput) RouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteResponse {
		return vs[0].([]RouteResponse)[vs[1].(int)]
	}).(RouteResponseOutput)
}

// Route table resource.
type RouteTableType struct {
	// Whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation *bool `pulumi:"disableBgpRoutePropagation"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Collection of routes contained within a route table.
	Routes []RouteType `pulumi:"routes"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// RouteTableTypeInput is an input type that accepts RouteTableTypeArgs and RouteTableTypeOutput values.
// You can construct a concrete instance of `RouteTableTypeInput` via:
//
//          RouteTableTypeArgs{...}
type RouteTableTypeInput interface {
	pulumi.Input

	ToRouteTableTypeOutput() RouteTableTypeOutput
	ToRouteTableTypeOutputWithContext(context.Context) RouteTableTypeOutput
}

// Route table resource.
type RouteTableTypeArgs struct {
	// Whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation pulumi.BoolPtrInput `pulumi:"disableBgpRoutePropagation"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Collection of routes contained within a route table.
	Routes RouteTypeArrayInput `pulumi:"routes"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (RouteTableTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableType)(nil)).Elem()
}

func (i RouteTableTypeArgs) ToRouteTableTypeOutput() RouteTableTypeOutput {
	return i.ToRouteTableTypeOutputWithContext(context.Background())
}

func (i RouteTableTypeArgs) ToRouteTableTypeOutputWithContext(ctx context.Context) RouteTableTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTypeOutput)
}

func (i RouteTableTypeArgs) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return i.ToRouteTableTypePtrOutputWithContext(context.Background())
}

func (i RouteTableTypeArgs) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTypeOutput).ToRouteTableTypePtrOutputWithContext(ctx)
}

// RouteTableTypePtrInput is an input type that accepts RouteTableTypeArgs, RouteTableTypePtr and RouteTableTypePtrOutput values.
// You can construct a concrete instance of `RouteTableTypePtrInput` via:
//
//          RouteTableTypeArgs{...}
//
//  or:
//
//          nil
type RouteTableTypePtrInput interface {
	pulumi.Input

	ToRouteTableTypePtrOutput() RouteTableTypePtrOutput
	ToRouteTableTypePtrOutputWithContext(context.Context) RouteTableTypePtrOutput
}

type routeTableTypePtrType RouteTableTypeArgs

func RouteTableTypePtr(v *RouteTableTypeArgs) RouteTableTypePtrInput {
	return (*routeTableTypePtrType)(v)
}

func (*routeTableTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableType)(nil)).Elem()
}

func (i *routeTableTypePtrType) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return i.ToRouteTableTypePtrOutputWithContext(context.Background())
}

func (i *routeTableTypePtrType) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTypePtrOutput)
}

// Route table resource.
type RouteTableTypeOutput struct{ *pulumi.OutputState }

func (RouteTableTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableType)(nil)).Elem()
}

func (o RouteTableTypeOutput) ToRouteTableTypeOutput() RouteTableTypeOutput {
	return o
}

func (o RouteTableTypeOutput) ToRouteTableTypeOutputWithContext(ctx context.Context) RouteTableTypeOutput {
	return o
}

func (o RouteTableTypeOutput) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return o.ToRouteTableTypePtrOutputWithContext(context.Background())
}

func (o RouteTableTypeOutput) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return o.ApplyT(func(v RouteTableType) *RouteTableType {
		return &v
	}).(RouteTableTypePtrOutput)
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableTypeOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteTableType) *bool { return v.DisableBgpRoutePropagation }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o RouteTableTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableTypeOutput) Routes() RouteTypeArrayOutput {
	return o.ApplyT(func(v RouteTableType) []RouteType { return v.Routes }).(RouteTypeArrayOutput)
}

// Resource tags.
func (o RouteTableTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteTableType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type RouteTableTypePtrOutput struct{ *pulumi.OutputState }

func (RouteTableTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableType)(nil)).Elem()
}

func (o RouteTableTypePtrOutput) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return o
}

func (o RouteTableTypePtrOutput) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return o
}

func (o RouteTableTypePtrOutput) Elem() RouteTableTypeOutput {
	return o.ApplyT(func(v *RouteTableType) RouteTableType { return *v }).(RouteTableTypeOutput)
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableTypePtrOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *bool {
		if v == nil {
			return nil
		}
		return v.DisableBgpRoutePropagation
	}).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o RouteTableTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableTypePtrOutput) Routes() RouteTypeArrayOutput {
	return o.ApplyT(func(v *RouteTableType) []RouteType {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RouteTypeArrayOutput)
}

// Resource tags.
func (o RouteTableTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteTableType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Route table resource.
type RouteTableResponse struct {
	// Whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation *bool `pulumi:"disableBgpRoutePropagation"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the route table resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes []RouteResponse `pulumi:"routes"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// RouteTableResponseInput is an input type that accepts RouteTableResponseArgs and RouteTableResponseOutput values.
// You can construct a concrete instance of `RouteTableResponseInput` via:
//
//          RouteTableResponseArgs{...}
type RouteTableResponseInput interface {
	pulumi.Input

	ToRouteTableResponseOutput() RouteTableResponseOutput
	ToRouteTableResponseOutputWithContext(context.Context) RouteTableResponseOutput
}

// Route table resource.
type RouteTableResponseArgs struct {
	// Whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation pulumi.BoolPtrInput `pulumi:"disableBgpRoutePropagation"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the route table resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes RouteResponseArrayInput `pulumi:"routes"`
	// A collection of references to subnets.
	Subnets SubnetResponseArrayInput `pulumi:"subnets"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RouteTableResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableResponse)(nil)).Elem()
}

func (i RouteTableResponseArgs) ToRouteTableResponseOutput() RouteTableResponseOutput {
	return i.ToRouteTableResponseOutputWithContext(context.Background())
}

func (i RouteTableResponseArgs) ToRouteTableResponseOutputWithContext(ctx context.Context) RouteTableResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableResponseOutput)
}

func (i RouteTableResponseArgs) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return i.ToRouteTableResponsePtrOutputWithContext(context.Background())
}

func (i RouteTableResponseArgs) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableResponseOutput).ToRouteTableResponsePtrOutputWithContext(ctx)
}

// RouteTableResponsePtrInput is an input type that accepts RouteTableResponseArgs, RouteTableResponsePtr and RouteTableResponsePtrOutput values.
// You can construct a concrete instance of `RouteTableResponsePtrInput` via:
//
//          RouteTableResponseArgs{...}
//
//  or:
//
//          nil
type RouteTableResponsePtrInput interface {
	pulumi.Input

	ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput
	ToRouteTableResponsePtrOutputWithContext(context.Context) RouteTableResponsePtrOutput
}

type routeTableResponsePtrType RouteTableResponseArgs

func RouteTableResponsePtr(v *RouteTableResponseArgs) RouteTableResponsePtrInput {
	return (*routeTableResponsePtrType)(v)
}

func (*routeTableResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableResponse)(nil)).Elem()
}

func (i *routeTableResponsePtrType) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return i.ToRouteTableResponsePtrOutputWithContext(context.Background())
}

func (i *routeTableResponsePtrType) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableResponsePtrOutput)
}

// Route table resource.
type RouteTableResponseOutput struct{ *pulumi.OutputState }

func (RouteTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableResponse)(nil)).Elem()
}

func (o RouteTableResponseOutput) ToRouteTableResponseOutput() RouteTableResponseOutput {
	return o
}

func (o RouteTableResponseOutput) ToRouteTableResponseOutputWithContext(ctx context.Context) RouteTableResponseOutput {
	return o
}

func (o RouteTableResponseOutput) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return o.ToRouteTableResponsePtrOutputWithContext(context.Background())
}

func (o RouteTableResponseOutput) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *RouteTableResponse {
		return &v
	}).(RouteTableResponsePtrOutput)
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableResponseOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *bool { return v.DisableBgpRoutePropagation }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteTableResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o RouteTableResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteTableResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the route table resource.
func (o RouteTableResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableResponseOutput) Routes() RouteResponseArrayOutput {
	return o.ApplyT(func(v RouteTableResponse) []RouteResponse { return v.Routes }).(RouteResponseArrayOutput)
}

// A collection of references to subnets.
func (o RouteTableResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v RouteTableResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o RouteTableResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteTableResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteTableResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Type }).(pulumi.StringOutput)
}

type RouteTableResponsePtrOutput struct{ *pulumi.OutputState }

func (RouteTableResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableResponse)(nil)).Elem()
}

func (o RouteTableResponsePtrOutput) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return o
}

func (o RouteTableResponsePtrOutput) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return o
}

func (o RouteTableResponsePtrOutput) Elem() RouteTableResponseOutput {
	return o.ApplyT(func(v *RouteTableResponse) RouteTableResponse { return *v }).(RouteTableResponseOutput)
}

// Whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableResponsePtrOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableBgpRoutePropagation
	}).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteTableResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTableResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteTableResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the route table resource.
func (o RouteTableResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableResponsePtrOutput) Routes() RouteResponseArrayOutput {
	return o.ApplyT(func(v *RouteTableResponse) []RouteResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RouteResponseArrayOutput)
}

// A collection of references to subnets.
func (o RouteTableResponsePtrOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v *RouteTableResponse) []SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o RouteTableResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteTableResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteTableResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Routing Configuration indicating the associated and propagated route tables for this connection.
type RoutingConfiguration struct {
	// The resource id RouteTable associated with this RoutingConfiguration.
	AssociatedRouteTable *SubResource `pulumi:"associatedRouteTable"`
	// The list of RouteTables to advertise the routes to.
	PropagatedRouteTables *PropagatedRouteTable `pulumi:"propagatedRouteTables"`
	// List of routes that control routing from VirtualHub into a virtual network connection.
	VnetRoutes *VnetRoute `pulumi:"vnetRoutes"`
}

// RoutingConfigurationInput is an input type that accepts RoutingConfigurationArgs and RoutingConfigurationOutput values.
// You can construct a concrete instance of `RoutingConfigurationInput` via:
//
//          RoutingConfigurationArgs{...}
type RoutingConfigurationInput interface {
	pulumi.Input

	ToRoutingConfigurationOutput() RoutingConfigurationOutput
	ToRoutingConfigurationOutputWithContext(context.Context) RoutingConfigurationOutput
}

// Routing Configuration indicating the associated and propagated route tables for this connection.
type RoutingConfigurationArgs struct {
	// The resource id RouteTable associated with this RoutingConfiguration.
	AssociatedRouteTable SubResourcePtrInput `pulumi:"associatedRouteTable"`
	// The list of RouteTables to advertise the routes to.
	PropagatedRouteTables PropagatedRouteTablePtrInput `pulumi:"propagatedRouteTables"`
	// List of routes that control routing from VirtualHub into a virtual network connection.
	VnetRoutes VnetRoutePtrInput `pulumi:"vnetRoutes"`
}

func (RoutingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingConfiguration)(nil)).Elem()
}

func (i RoutingConfigurationArgs) ToRoutingConfigurationOutput() RoutingConfigurationOutput {
	return i.ToRoutingConfigurationOutputWithContext(context.Background())
}

func (i RoutingConfigurationArgs) ToRoutingConfigurationOutputWithContext(ctx context.Context) RoutingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingConfigurationOutput)
}

func (i RoutingConfigurationArgs) ToRoutingConfigurationPtrOutput() RoutingConfigurationPtrOutput {
	return i.ToRoutingConfigurationPtrOutputWithContext(context.Background())
}

func (i RoutingConfigurationArgs) ToRoutingConfigurationPtrOutputWithContext(ctx context.Context) RoutingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingConfigurationOutput).ToRoutingConfigurationPtrOutputWithContext(ctx)
}

// RoutingConfigurationPtrInput is an input type that accepts RoutingConfigurationArgs, RoutingConfigurationPtr and RoutingConfigurationPtrOutput values.
// You can construct a concrete instance of `RoutingConfigurationPtrInput` via:
//
//          RoutingConfigurationArgs{...}
//
//  or:
//
//          nil
type RoutingConfigurationPtrInput interface {
	pulumi.Input

	ToRoutingConfigurationPtrOutput() RoutingConfigurationPtrOutput
	ToRoutingConfigurationPtrOutputWithContext(context.Context) RoutingConfigurationPtrOutput
}

type routingConfigurationPtrType RoutingConfigurationArgs

func RoutingConfigurationPtr(v *RoutingConfigurationArgs) RoutingConfigurationPtrInput {
	return (*routingConfigurationPtrType)(v)
}

func (*routingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingConfiguration)(nil)).Elem()
}

func (i *routingConfigurationPtrType) ToRoutingConfigurationPtrOutput() RoutingConfigurationPtrOutput {
	return i.ToRoutingConfigurationPtrOutputWithContext(context.Background())
}

func (i *routingConfigurationPtrType) ToRoutingConfigurationPtrOutputWithContext(ctx context.Context) RoutingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingConfigurationPtrOutput)
}

// Routing Configuration indicating the associated and propagated route tables for this connection.
type RoutingConfigurationOutput struct{ *pulumi.OutputState }

func (RoutingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingConfiguration)(nil)).Elem()
}

func (o RoutingConfigurationOutput) ToRoutingConfigurationOutput() RoutingConfigurationOutput {
	return o
}

func (o RoutingConfigurationOutput) ToRoutingConfigurationOutputWithContext(ctx context.Context) RoutingConfigurationOutput {
	return o
}

func (o RoutingConfigurationOutput) ToRoutingConfigurationPtrOutput() RoutingConfigurationPtrOutput {
	return o.ToRoutingConfigurationPtrOutputWithContext(context.Background())
}

func (o RoutingConfigurationOutput) ToRoutingConfigurationPtrOutputWithContext(ctx context.Context) RoutingConfigurationPtrOutput {
	return o.ApplyT(func(v RoutingConfiguration) *RoutingConfiguration {
		return &v
	}).(RoutingConfigurationPtrOutput)
}

// The resource id RouteTable associated with this RoutingConfiguration.
func (o RoutingConfigurationOutput) AssociatedRouteTable() SubResourcePtrOutput {
	return o.ApplyT(func(v RoutingConfiguration) *SubResource { return v.AssociatedRouteTable }).(SubResourcePtrOutput)
}

// The list of RouteTables to advertise the routes to.
func (o RoutingConfigurationOutput) PropagatedRouteTables() PropagatedRouteTablePtrOutput {
	return o.ApplyT(func(v RoutingConfiguration) *PropagatedRouteTable { return v.PropagatedRouteTables }).(PropagatedRouteTablePtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
func (o RoutingConfigurationOutput) VnetRoutes() VnetRoutePtrOutput {
	return o.ApplyT(func(v RoutingConfiguration) *VnetRoute { return v.VnetRoutes }).(VnetRoutePtrOutput)
}

type RoutingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RoutingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingConfiguration)(nil)).Elem()
}

func (o RoutingConfigurationPtrOutput) ToRoutingConfigurationPtrOutput() RoutingConfigurationPtrOutput {
	return o
}

func (o RoutingConfigurationPtrOutput) ToRoutingConfigurationPtrOutputWithContext(ctx context.Context) RoutingConfigurationPtrOutput {
	return o
}

func (o RoutingConfigurationPtrOutput) Elem() RoutingConfigurationOutput {
	return o.ApplyT(func(v *RoutingConfiguration) RoutingConfiguration { return *v }).(RoutingConfigurationOutput)
}

// The resource id RouteTable associated with this RoutingConfiguration.
func (o RoutingConfigurationPtrOutput) AssociatedRouteTable() SubResourcePtrOutput {
	return o.ApplyT(func(v *RoutingConfiguration) *SubResource {
		if v == nil {
			return nil
		}
		return v.AssociatedRouteTable
	}).(SubResourcePtrOutput)
}

// The list of RouteTables to advertise the routes to.
func (o RoutingConfigurationPtrOutput) PropagatedRouteTables() PropagatedRouteTablePtrOutput {
	return o.ApplyT(func(v *RoutingConfiguration) *PropagatedRouteTable {
		if v == nil {
			return nil
		}
		return v.PropagatedRouteTables
	}).(PropagatedRouteTablePtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
func (o RoutingConfigurationPtrOutput) VnetRoutes() VnetRoutePtrOutput {
	return o.ApplyT(func(v *RoutingConfiguration) *VnetRoute {
		if v == nil {
			return nil
		}
		return v.VnetRoutes
	}).(VnetRoutePtrOutput)
}

// Routing Configuration indicating the associated and propagated route tables for this connection.
type RoutingConfigurationResponse struct {
	// The resource id RouteTable associated with this RoutingConfiguration.
	AssociatedRouteTable *SubResourceResponse `pulumi:"associatedRouteTable"`
	// The list of RouteTables to advertise the routes to.
	PropagatedRouteTables *PropagatedRouteTableResponse `pulumi:"propagatedRouteTables"`
	// List of routes that control routing from VirtualHub into a virtual network connection.
	VnetRoutes *VnetRouteResponse `pulumi:"vnetRoutes"`
}

// RoutingConfigurationResponseInput is an input type that accepts RoutingConfigurationResponseArgs and RoutingConfigurationResponseOutput values.
// You can construct a concrete instance of `RoutingConfigurationResponseInput` via:
//
//          RoutingConfigurationResponseArgs{...}
type RoutingConfigurationResponseInput interface {
	pulumi.Input

	ToRoutingConfigurationResponseOutput() RoutingConfigurationResponseOutput
	ToRoutingConfigurationResponseOutputWithContext(context.Context) RoutingConfigurationResponseOutput
}

// Routing Configuration indicating the associated and propagated route tables for this connection.
type RoutingConfigurationResponseArgs struct {
	// The resource id RouteTable associated with this RoutingConfiguration.
	AssociatedRouteTable SubResourceResponsePtrInput `pulumi:"associatedRouteTable"`
	// The list of RouteTables to advertise the routes to.
	PropagatedRouteTables PropagatedRouteTableResponsePtrInput `pulumi:"propagatedRouteTables"`
	// List of routes that control routing from VirtualHub into a virtual network connection.
	VnetRoutes VnetRouteResponsePtrInput `pulumi:"vnetRoutes"`
}

func (RoutingConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingConfigurationResponse)(nil)).Elem()
}

func (i RoutingConfigurationResponseArgs) ToRoutingConfigurationResponseOutput() RoutingConfigurationResponseOutput {
	return i.ToRoutingConfigurationResponseOutputWithContext(context.Background())
}

func (i RoutingConfigurationResponseArgs) ToRoutingConfigurationResponseOutputWithContext(ctx context.Context) RoutingConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingConfigurationResponseOutput)
}

func (i RoutingConfigurationResponseArgs) ToRoutingConfigurationResponsePtrOutput() RoutingConfigurationResponsePtrOutput {
	return i.ToRoutingConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i RoutingConfigurationResponseArgs) ToRoutingConfigurationResponsePtrOutputWithContext(ctx context.Context) RoutingConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingConfigurationResponseOutput).ToRoutingConfigurationResponsePtrOutputWithContext(ctx)
}

// RoutingConfigurationResponsePtrInput is an input type that accepts RoutingConfigurationResponseArgs, RoutingConfigurationResponsePtr and RoutingConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `RoutingConfigurationResponsePtrInput` via:
//
//          RoutingConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type RoutingConfigurationResponsePtrInput interface {
	pulumi.Input

	ToRoutingConfigurationResponsePtrOutput() RoutingConfigurationResponsePtrOutput
	ToRoutingConfigurationResponsePtrOutputWithContext(context.Context) RoutingConfigurationResponsePtrOutput
}

type routingConfigurationResponsePtrType RoutingConfigurationResponseArgs

func RoutingConfigurationResponsePtr(v *RoutingConfigurationResponseArgs) RoutingConfigurationResponsePtrInput {
	return (*routingConfigurationResponsePtrType)(v)
}

func (*routingConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingConfigurationResponse)(nil)).Elem()
}

func (i *routingConfigurationResponsePtrType) ToRoutingConfigurationResponsePtrOutput() RoutingConfigurationResponsePtrOutput {
	return i.ToRoutingConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *routingConfigurationResponsePtrType) ToRoutingConfigurationResponsePtrOutputWithContext(ctx context.Context) RoutingConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingConfigurationResponsePtrOutput)
}

// Routing Configuration indicating the associated and propagated route tables for this connection.
type RoutingConfigurationResponseOutput struct{ *pulumi.OutputState }

func (RoutingConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingConfigurationResponse)(nil)).Elem()
}

func (o RoutingConfigurationResponseOutput) ToRoutingConfigurationResponseOutput() RoutingConfigurationResponseOutput {
	return o
}

func (o RoutingConfigurationResponseOutput) ToRoutingConfigurationResponseOutputWithContext(ctx context.Context) RoutingConfigurationResponseOutput {
	return o
}

func (o RoutingConfigurationResponseOutput) ToRoutingConfigurationResponsePtrOutput() RoutingConfigurationResponsePtrOutput {
	return o.ToRoutingConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o RoutingConfigurationResponseOutput) ToRoutingConfigurationResponsePtrOutputWithContext(ctx context.Context) RoutingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v RoutingConfigurationResponse) *RoutingConfigurationResponse {
		return &v
	}).(RoutingConfigurationResponsePtrOutput)
}

// The resource id RouteTable associated with this RoutingConfiguration.
func (o RoutingConfigurationResponseOutput) AssociatedRouteTable() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v RoutingConfigurationResponse) *SubResourceResponse { return v.AssociatedRouteTable }).(SubResourceResponsePtrOutput)
}

// The list of RouteTables to advertise the routes to.
func (o RoutingConfigurationResponseOutput) PropagatedRouteTables() PropagatedRouteTableResponsePtrOutput {
	return o.ApplyT(func(v RoutingConfigurationResponse) *PropagatedRouteTableResponse { return v.PropagatedRouteTables }).(PropagatedRouteTableResponsePtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
func (o RoutingConfigurationResponseOutput) VnetRoutes() VnetRouteResponsePtrOutput {
	return o.ApplyT(func(v RoutingConfigurationResponse) *VnetRouteResponse { return v.VnetRoutes }).(VnetRouteResponsePtrOutput)
}

type RoutingConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (RoutingConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingConfigurationResponse)(nil)).Elem()
}

func (o RoutingConfigurationResponsePtrOutput) ToRoutingConfigurationResponsePtrOutput() RoutingConfigurationResponsePtrOutput {
	return o
}

func (o RoutingConfigurationResponsePtrOutput) ToRoutingConfigurationResponsePtrOutputWithContext(ctx context.Context) RoutingConfigurationResponsePtrOutput {
	return o
}

func (o RoutingConfigurationResponsePtrOutput) Elem() RoutingConfigurationResponseOutput {
	return o.ApplyT(func(v *RoutingConfigurationResponse) RoutingConfigurationResponse { return *v }).(RoutingConfigurationResponseOutput)
}

// The resource id RouteTable associated with this RoutingConfiguration.
func (o RoutingConfigurationResponsePtrOutput) AssociatedRouteTable() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *RoutingConfigurationResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.AssociatedRouteTable
	}).(SubResourceResponsePtrOutput)
}

// The list of RouteTables to advertise the routes to.
func (o RoutingConfigurationResponsePtrOutput) PropagatedRouteTables() PropagatedRouteTableResponsePtrOutput {
	return o.ApplyT(func(v *RoutingConfigurationResponse) *PropagatedRouteTableResponse {
		if v == nil {
			return nil
		}
		return v.PropagatedRouteTables
	}).(PropagatedRouteTableResponsePtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
func (o RoutingConfigurationResponsePtrOutput) VnetRoutes() VnetRouteResponsePtrOutput {
	return o.ApplyT(func(v *RoutingConfigurationResponse) *VnetRouteResponse {
		if v == nil {
			return nil
		}
		return v.VnetRoutes
	}).(VnetRouteResponsePtrOutput)
}

// A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.
type RoutingRule struct {
	// Protocol schemes to match for this rule
	AcceptedProtocols []string `pulumi:"acceptedProtocols"`
	// Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
	EnabledState *string `pulumi:"enabledState"`
	// Frontend endpoints associated with this rule
	FrontendEndpoints []SubResource `pulumi:"frontendEndpoints"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource name.
	Name *string `pulumi:"name"`
	// The route patterns of the rule.
	PatternsToMatch []string `pulumi:"patternsToMatch"`
	// A reference to the routing configuration.
	RouteConfiguration interface{} `pulumi:"routeConfiguration"`
	// A reference to a specific Rules Engine Configuration to apply to this route.
	RulesEngine *SubResource `pulumi:"rulesEngine"`
	// Defines the Web Application Firewall policy for each routing rule (if applicable)
	WebApplicationFirewallPolicyLink *RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink `pulumi:"webApplicationFirewallPolicyLink"`
}

// RoutingRuleInput is an input type that accepts RoutingRuleArgs and RoutingRuleOutput values.
// You can construct a concrete instance of `RoutingRuleInput` via:
//
//          RoutingRuleArgs{...}
type RoutingRuleInput interface {
	pulumi.Input

	ToRoutingRuleOutput() RoutingRuleOutput
	ToRoutingRuleOutputWithContext(context.Context) RoutingRuleOutput
}

// A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.
type RoutingRuleArgs struct {
	// Protocol schemes to match for this rule
	AcceptedProtocols pulumi.StringArrayInput `pulumi:"acceptedProtocols"`
	// Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Frontend endpoints associated with this rule
	FrontendEndpoints SubResourceArrayInput `pulumi:"frontendEndpoints"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The route patterns of the rule.
	PatternsToMatch pulumi.StringArrayInput `pulumi:"patternsToMatch"`
	// A reference to the routing configuration.
	RouteConfiguration pulumi.Input `pulumi:"routeConfiguration"`
	// A reference to a specific Rules Engine Configuration to apply to this route.
	RulesEngine SubResourcePtrInput `pulumi:"rulesEngine"`
	// Defines the Web Application Firewall policy for each routing rule (if applicable)
	WebApplicationFirewallPolicyLink RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrInput `pulumi:"webApplicationFirewallPolicyLink"`
}

func (RoutingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRule)(nil)).Elem()
}

func (i RoutingRuleArgs) ToRoutingRuleOutput() RoutingRuleOutput {
	return i.ToRoutingRuleOutputWithContext(context.Background())
}

func (i RoutingRuleArgs) ToRoutingRuleOutputWithContext(ctx context.Context) RoutingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleOutput)
}

// RoutingRuleArrayInput is an input type that accepts RoutingRuleArray and RoutingRuleArrayOutput values.
// You can construct a concrete instance of `RoutingRuleArrayInput` via:
//
//          RoutingRuleArray{ RoutingRuleArgs{...} }
type RoutingRuleArrayInput interface {
	pulumi.Input

	ToRoutingRuleArrayOutput() RoutingRuleArrayOutput
	ToRoutingRuleArrayOutputWithContext(context.Context) RoutingRuleArrayOutput
}

type RoutingRuleArray []RoutingRuleInput

func (RoutingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingRule)(nil)).Elem()
}

func (i RoutingRuleArray) ToRoutingRuleArrayOutput() RoutingRuleArrayOutput {
	return i.ToRoutingRuleArrayOutputWithContext(context.Background())
}

func (i RoutingRuleArray) ToRoutingRuleArrayOutputWithContext(ctx context.Context) RoutingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleArrayOutput)
}

// A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.
type RoutingRuleOutput struct{ *pulumi.OutputState }

func (RoutingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRule)(nil)).Elem()
}

func (o RoutingRuleOutput) ToRoutingRuleOutput() RoutingRuleOutput {
	return o
}

func (o RoutingRuleOutput) ToRoutingRuleOutputWithContext(ctx context.Context) RoutingRuleOutput {
	return o
}

// Protocol schemes to match for this rule
func (o RoutingRuleOutput) AcceptedProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoutingRule) []string { return v.AcceptedProtocols }).(pulumi.StringArrayOutput)
}

// Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
func (o RoutingRuleOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRule) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Frontend endpoints associated with this rule
func (o RoutingRuleOutput) FrontendEndpoints() SubResourceArrayOutput {
	return o.ApplyT(func(v RoutingRule) []SubResource { return v.FrontendEndpoints }).(SubResourceArrayOutput)
}

// Resource ID.
func (o RoutingRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RoutingRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The route patterns of the rule.
func (o RoutingRuleOutput) PatternsToMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoutingRule) []string { return v.PatternsToMatch }).(pulumi.StringArrayOutput)
}

// A reference to the routing configuration.
func (o RoutingRuleOutput) RouteConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v RoutingRule) interface{} { return v.RouteConfiguration }).(pulumi.AnyOutput)
}

// A reference to a specific Rules Engine Configuration to apply to this route.
func (o RoutingRuleOutput) RulesEngine() SubResourcePtrOutput {
	return o.ApplyT(func(v RoutingRule) *SubResource { return v.RulesEngine }).(SubResourcePtrOutput)
}

// Defines the Web Application Firewall policy for each routing rule (if applicable)
func (o RoutingRuleOutput) WebApplicationFirewallPolicyLink() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ApplyT(func(v RoutingRule) *RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink {
		return v.WebApplicationFirewallPolicyLink
	}).(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput)
}

type RoutingRuleArrayOutput struct{ *pulumi.OutputState }

func (RoutingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingRule)(nil)).Elem()
}

func (o RoutingRuleArrayOutput) ToRoutingRuleArrayOutput() RoutingRuleArrayOutput {
	return o
}

func (o RoutingRuleArrayOutput) ToRoutingRuleArrayOutputWithContext(ctx context.Context) RoutingRuleArrayOutput {
	return o
}

func (o RoutingRuleArrayOutput) Index(i pulumi.IntInput) RoutingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingRule {
		return vs[0].([]RoutingRule)[vs[1].(int)]
	}).(RoutingRuleOutput)
}

// Defines the Resource ID for a Routing Rule.
type RoutingRuleLinkResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// RoutingRuleLinkResponseInput is an input type that accepts RoutingRuleLinkResponseArgs and RoutingRuleLinkResponseOutput values.
// You can construct a concrete instance of `RoutingRuleLinkResponseInput` via:
//
//          RoutingRuleLinkResponseArgs{...}
type RoutingRuleLinkResponseInput interface {
	pulumi.Input

	ToRoutingRuleLinkResponseOutput() RoutingRuleLinkResponseOutput
	ToRoutingRuleLinkResponseOutputWithContext(context.Context) RoutingRuleLinkResponseOutput
}

// Defines the Resource ID for a Routing Rule.
type RoutingRuleLinkResponseArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (RoutingRuleLinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleLinkResponse)(nil)).Elem()
}

func (i RoutingRuleLinkResponseArgs) ToRoutingRuleLinkResponseOutput() RoutingRuleLinkResponseOutput {
	return i.ToRoutingRuleLinkResponseOutputWithContext(context.Background())
}

func (i RoutingRuleLinkResponseArgs) ToRoutingRuleLinkResponseOutputWithContext(ctx context.Context) RoutingRuleLinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleLinkResponseOutput)
}

// RoutingRuleLinkResponseArrayInput is an input type that accepts RoutingRuleLinkResponseArray and RoutingRuleLinkResponseArrayOutput values.
// You can construct a concrete instance of `RoutingRuleLinkResponseArrayInput` via:
//
//          RoutingRuleLinkResponseArray{ RoutingRuleLinkResponseArgs{...} }
type RoutingRuleLinkResponseArrayInput interface {
	pulumi.Input

	ToRoutingRuleLinkResponseArrayOutput() RoutingRuleLinkResponseArrayOutput
	ToRoutingRuleLinkResponseArrayOutputWithContext(context.Context) RoutingRuleLinkResponseArrayOutput
}

type RoutingRuleLinkResponseArray []RoutingRuleLinkResponseInput

func (RoutingRuleLinkResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingRuleLinkResponse)(nil)).Elem()
}

func (i RoutingRuleLinkResponseArray) ToRoutingRuleLinkResponseArrayOutput() RoutingRuleLinkResponseArrayOutput {
	return i.ToRoutingRuleLinkResponseArrayOutputWithContext(context.Background())
}

func (i RoutingRuleLinkResponseArray) ToRoutingRuleLinkResponseArrayOutputWithContext(ctx context.Context) RoutingRuleLinkResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleLinkResponseArrayOutput)
}

// Defines the Resource ID for a Routing Rule.
type RoutingRuleLinkResponseOutput struct{ *pulumi.OutputState }

func (RoutingRuleLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleLinkResponse)(nil)).Elem()
}

func (o RoutingRuleLinkResponseOutput) ToRoutingRuleLinkResponseOutput() RoutingRuleLinkResponseOutput {
	return o
}

func (o RoutingRuleLinkResponseOutput) ToRoutingRuleLinkResponseOutputWithContext(ctx context.Context) RoutingRuleLinkResponseOutput {
	return o
}

// Resource ID.
func (o RoutingRuleLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRuleLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type RoutingRuleLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutingRuleLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingRuleLinkResponse)(nil)).Elem()
}

func (o RoutingRuleLinkResponseArrayOutput) ToRoutingRuleLinkResponseArrayOutput() RoutingRuleLinkResponseArrayOutput {
	return o
}

func (o RoutingRuleLinkResponseArrayOutput) ToRoutingRuleLinkResponseArrayOutputWithContext(ctx context.Context) RoutingRuleLinkResponseArrayOutput {
	return o
}

func (o RoutingRuleLinkResponseArrayOutput) Index(i pulumi.IntInput) RoutingRuleLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingRuleLinkResponse {
		return vs[0].([]RoutingRuleLinkResponse)[vs[1].(int)]
	}).(RoutingRuleLinkResponseOutput)
}

// A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.
type RoutingRuleResponse struct {
	// Protocol schemes to match for this rule
	AcceptedProtocols []string `pulumi:"acceptedProtocols"`
	// Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
	EnabledState *string `pulumi:"enabledState"`
	// Frontend endpoints associated with this rule
	FrontendEndpoints []SubResourceResponse `pulumi:"frontendEndpoints"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource name.
	Name *string `pulumi:"name"`
	// The route patterns of the rule.
	PatternsToMatch []string `pulumi:"patternsToMatch"`
	// Resource status.
	ResourceState string `pulumi:"resourceState"`
	// A reference to the routing configuration.
	RouteConfiguration interface{} `pulumi:"routeConfiguration"`
	// A reference to a specific Rules Engine Configuration to apply to this route.
	RulesEngine *SubResourceResponse `pulumi:"rulesEngine"`
	// Resource type.
	Type string `pulumi:"type"`
	// Defines the Web Application Firewall policy for each routing rule (if applicable)
	WebApplicationFirewallPolicyLink *RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink `pulumi:"webApplicationFirewallPolicyLink"`
}

// RoutingRuleResponseInput is an input type that accepts RoutingRuleResponseArgs and RoutingRuleResponseOutput values.
// You can construct a concrete instance of `RoutingRuleResponseInput` via:
//
//          RoutingRuleResponseArgs{...}
type RoutingRuleResponseInput interface {
	pulumi.Input

	ToRoutingRuleResponseOutput() RoutingRuleResponseOutput
	ToRoutingRuleResponseOutputWithContext(context.Context) RoutingRuleResponseOutput
}

// A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.
type RoutingRuleResponseArgs struct {
	// Protocol schemes to match for this rule
	AcceptedProtocols pulumi.StringArrayInput `pulumi:"acceptedProtocols"`
	// Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
	EnabledState pulumi.StringPtrInput `pulumi:"enabledState"`
	// Frontend endpoints associated with this rule
	FrontendEndpoints SubResourceResponseArrayInput `pulumi:"frontendEndpoints"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The route patterns of the rule.
	PatternsToMatch pulumi.StringArrayInput `pulumi:"patternsToMatch"`
	// Resource status.
	ResourceState pulumi.StringInput `pulumi:"resourceState"`
	// A reference to the routing configuration.
	RouteConfiguration pulumi.Input `pulumi:"routeConfiguration"`
	// A reference to a specific Rules Engine Configuration to apply to this route.
	RulesEngine SubResourceResponsePtrInput `pulumi:"rulesEngine"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// Defines the Web Application Firewall policy for each routing rule (if applicable)
	WebApplicationFirewallPolicyLink RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrInput `pulumi:"webApplicationFirewallPolicyLink"`
}

func (RoutingRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleResponse)(nil)).Elem()
}

func (i RoutingRuleResponseArgs) ToRoutingRuleResponseOutput() RoutingRuleResponseOutput {
	return i.ToRoutingRuleResponseOutputWithContext(context.Background())
}

func (i RoutingRuleResponseArgs) ToRoutingRuleResponseOutputWithContext(ctx context.Context) RoutingRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleResponseOutput)
}

// RoutingRuleResponseArrayInput is an input type that accepts RoutingRuleResponseArray and RoutingRuleResponseArrayOutput values.
// You can construct a concrete instance of `RoutingRuleResponseArrayInput` via:
//
//          RoutingRuleResponseArray{ RoutingRuleResponseArgs{...} }
type RoutingRuleResponseArrayInput interface {
	pulumi.Input

	ToRoutingRuleResponseArrayOutput() RoutingRuleResponseArrayOutput
	ToRoutingRuleResponseArrayOutputWithContext(context.Context) RoutingRuleResponseArrayOutput
}

type RoutingRuleResponseArray []RoutingRuleResponseInput

func (RoutingRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingRuleResponse)(nil)).Elem()
}

func (i RoutingRuleResponseArray) ToRoutingRuleResponseArrayOutput() RoutingRuleResponseArrayOutput {
	return i.ToRoutingRuleResponseArrayOutputWithContext(context.Background())
}

func (i RoutingRuleResponseArray) ToRoutingRuleResponseArrayOutputWithContext(ctx context.Context) RoutingRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleResponseArrayOutput)
}

// A routing rule represents a specification for traffic to treat and where to send it, along with health probe information.
type RoutingRuleResponseOutput struct{ *pulumi.OutputState }

func (RoutingRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleResponse)(nil)).Elem()
}

func (o RoutingRuleResponseOutput) ToRoutingRuleResponseOutput() RoutingRuleResponseOutput {
	return o
}

func (o RoutingRuleResponseOutput) ToRoutingRuleResponseOutputWithContext(ctx context.Context) RoutingRuleResponseOutput {
	return o
}

// Protocol schemes to match for this rule
func (o RoutingRuleResponseOutput) AcceptedProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoutingRuleResponse) []string { return v.AcceptedProtocols }).(pulumi.StringArrayOutput)
}

// Whether to enable use of this rule. Permitted values are 'Enabled' or 'Disabled'
func (o RoutingRuleResponseOutput) EnabledState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRuleResponse) *string { return v.EnabledState }).(pulumi.StringPtrOutput)
}

// Frontend endpoints associated with this rule
func (o RoutingRuleResponseOutput) FrontendEndpoints() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v RoutingRuleResponse) []SubResourceResponse { return v.FrontendEndpoints }).(SubResourceResponseArrayOutput)
}

// Resource ID.
func (o RoutingRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RoutingRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The route patterns of the rule.
func (o RoutingRuleResponseOutput) PatternsToMatch() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RoutingRuleResponse) []string { return v.PatternsToMatch }).(pulumi.StringArrayOutput)
}

// Resource status.
func (o RoutingRuleResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingRuleResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

// A reference to the routing configuration.
func (o RoutingRuleResponseOutput) RouteConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v RoutingRuleResponse) interface{} { return v.RouteConfiguration }).(pulumi.AnyOutput)
}

// A reference to a specific Rules Engine Configuration to apply to this route.
func (o RoutingRuleResponseOutput) RulesEngine() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v RoutingRuleResponse) *SubResourceResponse { return v.RulesEngine }).(SubResourceResponsePtrOutput)
}

// Resource type.
func (o RoutingRuleResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RoutingRuleResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Defines the Web Application Firewall policy for each routing rule (if applicable)
func (o RoutingRuleResponseOutput) WebApplicationFirewallPolicyLink() RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ApplyT(func(v RoutingRuleResponse) *RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink {
		return v.WebApplicationFirewallPolicyLink
	}).(RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput)
}

type RoutingRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RoutingRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoutingRuleResponse)(nil)).Elem()
}

func (o RoutingRuleResponseArrayOutput) ToRoutingRuleResponseArrayOutput() RoutingRuleResponseArrayOutput {
	return o
}

func (o RoutingRuleResponseArrayOutput) ToRoutingRuleResponseArrayOutputWithContext(ctx context.Context) RoutingRuleResponseArrayOutput {
	return o
}

func (o RoutingRuleResponseArrayOutput) Index(i pulumi.IntInput) RoutingRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoutingRuleResponse {
		return vs[0].([]RoutingRuleResponse)[vs[1].(int)]
	}).(RoutingRuleResponseOutput)
}

// Defines the Web Application Firewall policy for each routing rule (if applicable)
type RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkInput is an input type that accepts RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs and RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput values.
// You can construct a concrete instance of `RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkInput` via:
//
//          RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs{...}
type RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkInput interface {
	pulumi.Input

	ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput() RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput
	ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutputWithContext(context.Context) RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput
}

// Defines the Web Application Firewall policy for each routing rule (if applicable)
type RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs) ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput() RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return i.ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutputWithContext(context.Background())
}

func (i RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs) ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput)
}

func (i RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs) ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs) ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput).ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx)
}

// RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrInput is an input type that accepts RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs, RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtr and RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput values.
// You can construct a concrete instance of `RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrInput` via:
//
//          RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs{...}
//
//  or:
//
//          nil
type RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrInput interface {
	pulumi.Input

	ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput
	ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Context) RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput
}

type routingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrType RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs

func RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtr(v *RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkArgs) RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrInput {
	return (*routingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrType)(v)
}

func (*routingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i *routingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrType) ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i *routingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrType) ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput)
}

// Defines the Web Application Firewall policy for each routing rule (if applicable)
type RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput struct{ *pulumi.OutputState }

func (RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput() RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (o RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ApplyT(func(v RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink) *RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink {
		return &v
	}).(RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput)
}

// Resource ID.
func (o RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput struct{ *pulumi.OutputState }

func (RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput() RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) ToRoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) Elem() RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput {
	return o.ApplyT(func(v *RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink) RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink {
		return *v
	}).(RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput)
}

// Resource ID.
func (o RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLink) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Defines the Web Application Firewall policy for each routing rule (if applicable)
type RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkInput is an input type that accepts RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs and RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput values.
// You can construct a concrete instance of `RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkInput` via:
//
//          RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs{...}
type RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkInput interface {
	pulumi.Input

	ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput
	ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(context.Context) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput
}

// Defines the Web Application Firewall policy for each routing rule (if applicable)
type RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return i.ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(context.Background())
}

func (i RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput)
}

func (i RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput).ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx)
}

// RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrInput is an input type that accepts RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs, RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtr and RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput values.
// You can construct a concrete instance of `RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrInput` via:
//
//          RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs{...}
//
//  or:
//
//          nil
type RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrInput interface {
	pulumi.Input

	ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput
	ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Context) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput
}

type routingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrType RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs

func RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtr(v *RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkArgs) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrInput {
	return (*routingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrType)(v)
}

func (*routingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (i *routingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return i.ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (i *routingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrType) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput)
}

// Defines the Web Application Firewall policy for each routing rule (if applicable)
type RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput struct{ *pulumi.OutputState }

func (RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o
}

func (o RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(context.Background())
}

func (o RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o.ApplyT(func(v RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink) *RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink {
		return &v
	}).(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput)
}

// Resource ID.
func (o RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput struct{ *pulumi.OutputState }

func (RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink)(nil)).Elem()
}

func (o RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) ToRoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutputWithContext(ctx context.Context) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput {
	return o
}

func (o RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) Elem() RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput {
	return o.ApplyT(func(v *RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink) RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink {
		return *v
	}).(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput)
}

// Resource ID.
func (o RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RoutingRuleUpdateParametersWebApplicationFirewallPolicyLink) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// One or more actions that will execute, modifying the request and/or response.
type RulesEngineAction struct {
	// A list of header actions to apply from the request from AFD to the origin.
	RequestHeaderActions []HeaderAction `pulumi:"requestHeaderActions"`
	// A list of header actions to apply from the response from AFD to the client.
	ResponseHeaderActions []HeaderAction `pulumi:"responseHeaderActions"`
	// Override the route configuration.
	RouteConfigurationOverride interface{} `pulumi:"routeConfigurationOverride"`
}

// RulesEngineActionInput is an input type that accepts RulesEngineActionArgs and RulesEngineActionOutput values.
// You can construct a concrete instance of `RulesEngineActionInput` via:
//
//          RulesEngineActionArgs{...}
type RulesEngineActionInput interface {
	pulumi.Input

	ToRulesEngineActionOutput() RulesEngineActionOutput
	ToRulesEngineActionOutputWithContext(context.Context) RulesEngineActionOutput
}

// One or more actions that will execute, modifying the request and/or response.
type RulesEngineActionArgs struct {
	// A list of header actions to apply from the request from AFD to the origin.
	RequestHeaderActions HeaderActionArrayInput `pulumi:"requestHeaderActions"`
	// A list of header actions to apply from the response from AFD to the client.
	ResponseHeaderActions HeaderActionArrayInput `pulumi:"responseHeaderActions"`
	// Override the route configuration.
	RouteConfigurationOverride pulumi.Input `pulumi:"routeConfigurationOverride"`
}

func (RulesEngineActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineAction)(nil)).Elem()
}

func (i RulesEngineActionArgs) ToRulesEngineActionOutput() RulesEngineActionOutput {
	return i.ToRulesEngineActionOutputWithContext(context.Background())
}

func (i RulesEngineActionArgs) ToRulesEngineActionOutputWithContext(ctx context.Context) RulesEngineActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesEngineActionOutput)
}

// One or more actions that will execute, modifying the request and/or response.
type RulesEngineActionOutput struct{ *pulumi.OutputState }

func (RulesEngineActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineAction)(nil)).Elem()
}

func (o RulesEngineActionOutput) ToRulesEngineActionOutput() RulesEngineActionOutput {
	return o
}

func (o RulesEngineActionOutput) ToRulesEngineActionOutputWithContext(ctx context.Context) RulesEngineActionOutput {
	return o
}

// A list of header actions to apply from the request from AFD to the origin.
func (o RulesEngineActionOutput) RequestHeaderActions() HeaderActionArrayOutput {
	return o.ApplyT(func(v RulesEngineAction) []HeaderAction { return v.RequestHeaderActions }).(HeaderActionArrayOutput)
}

// A list of header actions to apply from the response from AFD to the client.
func (o RulesEngineActionOutput) ResponseHeaderActions() HeaderActionArrayOutput {
	return o.ApplyT(func(v RulesEngineAction) []HeaderAction { return v.ResponseHeaderActions }).(HeaderActionArrayOutput)
}

// Override the route configuration.
func (o RulesEngineActionOutput) RouteConfigurationOverride() pulumi.AnyOutput {
	return o.ApplyT(func(v RulesEngineAction) interface{} { return v.RouteConfigurationOverride }).(pulumi.AnyOutput)
}

// One or more actions that will execute, modifying the request and/or response.
type RulesEngineActionResponse struct {
	// A list of header actions to apply from the request from AFD to the origin.
	RequestHeaderActions []HeaderActionResponse `pulumi:"requestHeaderActions"`
	// A list of header actions to apply from the response from AFD to the client.
	ResponseHeaderActions []HeaderActionResponse `pulumi:"responseHeaderActions"`
	// Override the route configuration.
	RouteConfigurationOverride interface{} `pulumi:"routeConfigurationOverride"`
}

// RulesEngineActionResponseInput is an input type that accepts RulesEngineActionResponseArgs and RulesEngineActionResponseOutput values.
// You can construct a concrete instance of `RulesEngineActionResponseInput` via:
//
//          RulesEngineActionResponseArgs{...}
type RulesEngineActionResponseInput interface {
	pulumi.Input

	ToRulesEngineActionResponseOutput() RulesEngineActionResponseOutput
	ToRulesEngineActionResponseOutputWithContext(context.Context) RulesEngineActionResponseOutput
}

// One or more actions that will execute, modifying the request and/or response.
type RulesEngineActionResponseArgs struct {
	// A list of header actions to apply from the request from AFD to the origin.
	RequestHeaderActions HeaderActionResponseArrayInput `pulumi:"requestHeaderActions"`
	// A list of header actions to apply from the response from AFD to the client.
	ResponseHeaderActions HeaderActionResponseArrayInput `pulumi:"responseHeaderActions"`
	// Override the route configuration.
	RouteConfigurationOverride pulumi.Input `pulumi:"routeConfigurationOverride"`
}

func (RulesEngineActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineActionResponse)(nil)).Elem()
}

func (i RulesEngineActionResponseArgs) ToRulesEngineActionResponseOutput() RulesEngineActionResponseOutput {
	return i.ToRulesEngineActionResponseOutputWithContext(context.Background())
}

func (i RulesEngineActionResponseArgs) ToRulesEngineActionResponseOutputWithContext(ctx context.Context) RulesEngineActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesEngineActionResponseOutput)
}

// One or more actions that will execute, modifying the request and/or response.
type RulesEngineActionResponseOutput struct{ *pulumi.OutputState }

func (RulesEngineActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineActionResponse)(nil)).Elem()
}

func (o RulesEngineActionResponseOutput) ToRulesEngineActionResponseOutput() RulesEngineActionResponseOutput {
	return o
}

func (o RulesEngineActionResponseOutput) ToRulesEngineActionResponseOutputWithContext(ctx context.Context) RulesEngineActionResponseOutput {
	return o
}

// A list of header actions to apply from the request from AFD to the origin.
func (o RulesEngineActionResponseOutput) RequestHeaderActions() HeaderActionResponseArrayOutput {
	return o.ApplyT(func(v RulesEngineActionResponse) []HeaderActionResponse { return v.RequestHeaderActions }).(HeaderActionResponseArrayOutput)
}

// A list of header actions to apply from the response from AFD to the client.
func (o RulesEngineActionResponseOutput) ResponseHeaderActions() HeaderActionResponseArrayOutput {
	return o.ApplyT(func(v RulesEngineActionResponse) []HeaderActionResponse { return v.ResponseHeaderActions }).(HeaderActionResponseArrayOutput)
}

// Override the route configuration.
func (o RulesEngineActionResponseOutput) RouteConfigurationOverride() pulumi.AnyOutput {
	return o.ApplyT(func(v RulesEngineActionResponse) interface{} { return v.RouteConfigurationOverride }).(pulumi.AnyOutput)
}

// Define a match condition
type RulesEngineMatchCondition struct {
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	RulesEngineMatchValue []string `pulumi:"rulesEngineMatchValue"`
	// Match Variable
	RulesEngineMatchVariable string `pulumi:"rulesEngineMatchVariable"`
	// Describes operator to apply to the match condition.
	RulesEngineOperator string `pulumi:"rulesEngineOperator"`
	// Name of selector in RequestHeader or RequestBody to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// RulesEngineMatchConditionInput is an input type that accepts RulesEngineMatchConditionArgs and RulesEngineMatchConditionOutput values.
// You can construct a concrete instance of `RulesEngineMatchConditionInput` via:
//
//          RulesEngineMatchConditionArgs{...}
type RulesEngineMatchConditionInput interface {
	pulumi.Input

	ToRulesEngineMatchConditionOutput() RulesEngineMatchConditionOutput
	ToRulesEngineMatchConditionOutputWithContext(context.Context) RulesEngineMatchConditionOutput
}

// Define a match condition
type RulesEngineMatchConditionArgs struct {
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	RulesEngineMatchValue pulumi.StringArrayInput `pulumi:"rulesEngineMatchValue"`
	// Match Variable
	RulesEngineMatchVariable pulumi.StringInput `pulumi:"rulesEngineMatchVariable"`
	// Describes operator to apply to the match condition.
	RulesEngineOperator pulumi.StringInput `pulumi:"rulesEngineOperator"`
	// Name of selector in RequestHeader or RequestBody to be matched
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (RulesEngineMatchConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineMatchCondition)(nil)).Elem()
}

func (i RulesEngineMatchConditionArgs) ToRulesEngineMatchConditionOutput() RulesEngineMatchConditionOutput {
	return i.ToRulesEngineMatchConditionOutputWithContext(context.Background())
}

func (i RulesEngineMatchConditionArgs) ToRulesEngineMatchConditionOutputWithContext(ctx context.Context) RulesEngineMatchConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesEngineMatchConditionOutput)
}

// RulesEngineMatchConditionArrayInput is an input type that accepts RulesEngineMatchConditionArray and RulesEngineMatchConditionArrayOutput values.
// You can construct a concrete instance of `RulesEngineMatchConditionArrayInput` via:
//
//          RulesEngineMatchConditionArray{ RulesEngineMatchConditionArgs{...} }
type RulesEngineMatchConditionArrayInput interface {
	pulumi.Input

	ToRulesEngineMatchConditionArrayOutput() RulesEngineMatchConditionArrayOutput
	ToRulesEngineMatchConditionArrayOutputWithContext(context.Context) RulesEngineMatchConditionArrayOutput
}

type RulesEngineMatchConditionArray []RulesEngineMatchConditionInput

func (RulesEngineMatchConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesEngineMatchCondition)(nil)).Elem()
}

func (i RulesEngineMatchConditionArray) ToRulesEngineMatchConditionArrayOutput() RulesEngineMatchConditionArrayOutput {
	return i.ToRulesEngineMatchConditionArrayOutputWithContext(context.Background())
}

func (i RulesEngineMatchConditionArray) ToRulesEngineMatchConditionArrayOutputWithContext(ctx context.Context) RulesEngineMatchConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesEngineMatchConditionArrayOutput)
}

// Define a match condition
type RulesEngineMatchConditionOutput struct{ *pulumi.OutputState }

func (RulesEngineMatchConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineMatchCondition)(nil)).Elem()
}

func (o RulesEngineMatchConditionOutput) ToRulesEngineMatchConditionOutput() RulesEngineMatchConditionOutput {
	return o
}

func (o RulesEngineMatchConditionOutput) ToRulesEngineMatchConditionOutputWithContext(ctx context.Context) RulesEngineMatchConditionOutput {
	return o
}

// Describes if this is negate condition or not
func (o RulesEngineMatchConditionOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RulesEngineMatchCondition) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
func (o RulesEngineMatchConditionOutput) RulesEngineMatchValue() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RulesEngineMatchCondition) []string { return v.RulesEngineMatchValue }).(pulumi.StringArrayOutput)
}

// Match Variable
func (o RulesEngineMatchConditionOutput) RulesEngineMatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineMatchCondition) string { return v.RulesEngineMatchVariable }).(pulumi.StringOutput)
}

// Describes operator to apply to the match condition.
func (o RulesEngineMatchConditionOutput) RulesEngineOperator() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineMatchCondition) string { return v.RulesEngineOperator }).(pulumi.StringOutput)
}

// Name of selector in RequestHeader or RequestBody to be matched
func (o RulesEngineMatchConditionOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesEngineMatchCondition) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms
func (o RulesEngineMatchConditionOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RulesEngineMatchCondition) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

type RulesEngineMatchConditionArrayOutput struct{ *pulumi.OutputState }

func (RulesEngineMatchConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesEngineMatchCondition)(nil)).Elem()
}

func (o RulesEngineMatchConditionArrayOutput) ToRulesEngineMatchConditionArrayOutput() RulesEngineMatchConditionArrayOutput {
	return o
}

func (o RulesEngineMatchConditionArrayOutput) ToRulesEngineMatchConditionArrayOutputWithContext(ctx context.Context) RulesEngineMatchConditionArrayOutput {
	return o
}

func (o RulesEngineMatchConditionArrayOutput) Index(i pulumi.IntInput) RulesEngineMatchConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesEngineMatchCondition {
		return vs[0].([]RulesEngineMatchCondition)[vs[1].(int)]
	}).(RulesEngineMatchConditionOutput)
}

// Define a match condition
type RulesEngineMatchConditionResponse struct {
	// Describes if this is negate condition or not
	NegateCondition *bool `pulumi:"negateCondition"`
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	RulesEngineMatchValue []string `pulumi:"rulesEngineMatchValue"`
	// Match Variable
	RulesEngineMatchVariable string `pulumi:"rulesEngineMatchVariable"`
	// Describes operator to apply to the match condition.
	RulesEngineOperator string `pulumi:"rulesEngineOperator"`
	// Name of selector in RequestHeader or RequestBody to be matched
	Selector *string `pulumi:"selector"`
	// List of transforms
	Transforms []string `pulumi:"transforms"`
}

// RulesEngineMatchConditionResponseInput is an input type that accepts RulesEngineMatchConditionResponseArgs and RulesEngineMatchConditionResponseOutput values.
// You can construct a concrete instance of `RulesEngineMatchConditionResponseInput` via:
//
//          RulesEngineMatchConditionResponseArgs{...}
type RulesEngineMatchConditionResponseInput interface {
	pulumi.Input

	ToRulesEngineMatchConditionResponseOutput() RulesEngineMatchConditionResponseOutput
	ToRulesEngineMatchConditionResponseOutputWithContext(context.Context) RulesEngineMatchConditionResponseOutput
}

// Define a match condition
type RulesEngineMatchConditionResponseArgs struct {
	// Describes if this is negate condition or not
	NegateCondition pulumi.BoolPtrInput `pulumi:"negateCondition"`
	// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
	RulesEngineMatchValue pulumi.StringArrayInput `pulumi:"rulesEngineMatchValue"`
	// Match Variable
	RulesEngineMatchVariable pulumi.StringInput `pulumi:"rulesEngineMatchVariable"`
	// Describes operator to apply to the match condition.
	RulesEngineOperator pulumi.StringInput `pulumi:"rulesEngineOperator"`
	// Name of selector in RequestHeader or RequestBody to be matched
	Selector pulumi.StringPtrInput `pulumi:"selector"`
	// List of transforms
	Transforms pulumi.StringArrayInput `pulumi:"transforms"`
}

func (RulesEngineMatchConditionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineMatchConditionResponse)(nil)).Elem()
}

func (i RulesEngineMatchConditionResponseArgs) ToRulesEngineMatchConditionResponseOutput() RulesEngineMatchConditionResponseOutput {
	return i.ToRulesEngineMatchConditionResponseOutputWithContext(context.Background())
}

func (i RulesEngineMatchConditionResponseArgs) ToRulesEngineMatchConditionResponseOutputWithContext(ctx context.Context) RulesEngineMatchConditionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesEngineMatchConditionResponseOutput)
}

// RulesEngineMatchConditionResponseArrayInput is an input type that accepts RulesEngineMatchConditionResponseArray and RulesEngineMatchConditionResponseArrayOutput values.
// You can construct a concrete instance of `RulesEngineMatchConditionResponseArrayInput` via:
//
//          RulesEngineMatchConditionResponseArray{ RulesEngineMatchConditionResponseArgs{...} }
type RulesEngineMatchConditionResponseArrayInput interface {
	pulumi.Input

	ToRulesEngineMatchConditionResponseArrayOutput() RulesEngineMatchConditionResponseArrayOutput
	ToRulesEngineMatchConditionResponseArrayOutputWithContext(context.Context) RulesEngineMatchConditionResponseArrayOutput
}

type RulesEngineMatchConditionResponseArray []RulesEngineMatchConditionResponseInput

func (RulesEngineMatchConditionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesEngineMatchConditionResponse)(nil)).Elem()
}

func (i RulesEngineMatchConditionResponseArray) ToRulesEngineMatchConditionResponseArrayOutput() RulesEngineMatchConditionResponseArrayOutput {
	return i.ToRulesEngineMatchConditionResponseArrayOutputWithContext(context.Background())
}

func (i RulesEngineMatchConditionResponseArray) ToRulesEngineMatchConditionResponseArrayOutputWithContext(ctx context.Context) RulesEngineMatchConditionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesEngineMatchConditionResponseArrayOutput)
}

// Define a match condition
type RulesEngineMatchConditionResponseOutput struct{ *pulumi.OutputState }

func (RulesEngineMatchConditionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineMatchConditionResponse)(nil)).Elem()
}

func (o RulesEngineMatchConditionResponseOutput) ToRulesEngineMatchConditionResponseOutput() RulesEngineMatchConditionResponseOutput {
	return o
}

func (o RulesEngineMatchConditionResponseOutput) ToRulesEngineMatchConditionResponseOutputWithContext(ctx context.Context) RulesEngineMatchConditionResponseOutput {
	return o
}

// Describes if this is negate condition or not
func (o RulesEngineMatchConditionResponseOutput) NegateCondition() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RulesEngineMatchConditionResponse) *bool { return v.NegateCondition }).(pulumi.BoolPtrOutput)
}

// Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.
func (o RulesEngineMatchConditionResponseOutput) RulesEngineMatchValue() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RulesEngineMatchConditionResponse) []string { return v.RulesEngineMatchValue }).(pulumi.StringArrayOutput)
}

// Match Variable
func (o RulesEngineMatchConditionResponseOutput) RulesEngineMatchVariable() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineMatchConditionResponse) string { return v.RulesEngineMatchVariable }).(pulumi.StringOutput)
}

// Describes operator to apply to the match condition.
func (o RulesEngineMatchConditionResponseOutput) RulesEngineOperator() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineMatchConditionResponse) string { return v.RulesEngineOperator }).(pulumi.StringOutput)
}

// Name of selector in RequestHeader or RequestBody to be matched
func (o RulesEngineMatchConditionResponseOutput) Selector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesEngineMatchConditionResponse) *string { return v.Selector }).(pulumi.StringPtrOutput)
}

// List of transforms
func (o RulesEngineMatchConditionResponseOutput) Transforms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RulesEngineMatchConditionResponse) []string { return v.Transforms }).(pulumi.StringArrayOutput)
}

type RulesEngineMatchConditionResponseArrayOutput struct{ *pulumi.OutputState }

func (RulesEngineMatchConditionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesEngineMatchConditionResponse)(nil)).Elem()
}

func (o RulesEngineMatchConditionResponseArrayOutput) ToRulesEngineMatchConditionResponseArrayOutput() RulesEngineMatchConditionResponseArrayOutput {
	return o
}

func (o RulesEngineMatchConditionResponseArrayOutput) ToRulesEngineMatchConditionResponseArrayOutputWithContext(ctx context.Context) RulesEngineMatchConditionResponseArrayOutput {
	return o
}

func (o RulesEngineMatchConditionResponseArrayOutput) Index(i pulumi.IntInput) RulesEngineMatchConditionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesEngineMatchConditionResponse {
		return vs[0].([]RulesEngineMatchConditionResponse)[vs[1].(int)]
	}).(RulesEngineMatchConditionResponseOutput)
}

// A rules engine configuration containing a list of rules that will run to modify the runtime behavior of the request and response.
type RulesEngineResponse struct {
	// Resource ID.
	Id string `pulumi:"id"`
	// Resource name.
	Name string `pulumi:"name"`
	// Resource status.
	ResourceState string `pulumi:"resourceState"`
	// A list of rules that define a particular Rules Engine Configuration.
	Rules []RulesEngineRuleResponse `pulumi:"rules"`
	// Resource type.
	Type string `pulumi:"type"`
}

// RulesEngineResponseInput is an input type that accepts RulesEngineResponseArgs and RulesEngineResponseOutput values.
// You can construct a concrete instance of `RulesEngineResponseInput` via:
//
//          RulesEngineResponseArgs{...}
type RulesEngineResponseInput interface {
	pulumi.Input

	ToRulesEngineResponseOutput() RulesEngineResponseOutput
	ToRulesEngineResponseOutputWithContext(context.Context) RulesEngineResponseOutput
}

// A rules engine configuration containing a list of rules that will run to modify the runtime behavior of the request and response.
type RulesEngineResponseArgs struct {
	// Resource ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Resource status.
	ResourceState pulumi.StringInput `pulumi:"resourceState"`
	// A list of rules that define a particular Rules Engine Configuration.
	Rules RulesEngineRuleResponseArrayInput `pulumi:"rules"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RulesEngineResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineResponse)(nil)).Elem()
}

func (i RulesEngineResponseArgs) ToRulesEngineResponseOutput() RulesEngineResponseOutput {
	return i.ToRulesEngineResponseOutputWithContext(context.Background())
}

func (i RulesEngineResponseArgs) ToRulesEngineResponseOutputWithContext(ctx context.Context) RulesEngineResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesEngineResponseOutput)
}

// RulesEngineResponseArrayInput is an input type that accepts RulesEngineResponseArray and RulesEngineResponseArrayOutput values.
// You can construct a concrete instance of `RulesEngineResponseArrayInput` via:
//
//          RulesEngineResponseArray{ RulesEngineResponseArgs{...} }
type RulesEngineResponseArrayInput interface {
	pulumi.Input

	ToRulesEngineResponseArrayOutput() RulesEngineResponseArrayOutput
	ToRulesEngineResponseArrayOutputWithContext(context.Context) RulesEngineResponseArrayOutput
}

type RulesEngineResponseArray []RulesEngineResponseInput

func (RulesEngineResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesEngineResponse)(nil)).Elem()
}

func (i RulesEngineResponseArray) ToRulesEngineResponseArrayOutput() RulesEngineResponseArrayOutput {
	return i.ToRulesEngineResponseArrayOutputWithContext(context.Background())
}

func (i RulesEngineResponseArray) ToRulesEngineResponseArrayOutputWithContext(ctx context.Context) RulesEngineResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesEngineResponseArrayOutput)
}

// A rules engine configuration containing a list of rules that will run to modify the runtime behavior of the request and response.
type RulesEngineResponseOutput struct{ *pulumi.OutputState }

func (RulesEngineResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineResponse)(nil)).Elem()
}

func (o RulesEngineResponseOutput) ToRulesEngineResponseOutput() RulesEngineResponseOutput {
	return o
}

func (o RulesEngineResponseOutput) ToRulesEngineResponseOutputWithContext(ctx context.Context) RulesEngineResponseOutput {
	return o
}

// Resource ID.
func (o RulesEngineResponseOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineResponse) string { return v.Id }).(pulumi.StringOutput)
}

// Resource name.
func (o RulesEngineResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource status.
func (o RulesEngineResponseOutput) ResourceState() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineResponse) string { return v.ResourceState }).(pulumi.StringOutput)
}

// A list of rules that define a particular Rules Engine Configuration.
func (o RulesEngineResponseOutput) Rules() RulesEngineRuleResponseArrayOutput {
	return o.ApplyT(func(v RulesEngineResponse) []RulesEngineRuleResponse { return v.Rules }).(RulesEngineRuleResponseArrayOutput)
}

// Resource type.
func (o RulesEngineResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineResponse) string { return v.Type }).(pulumi.StringOutput)
}

type RulesEngineResponseArrayOutput struct{ *pulumi.OutputState }

func (RulesEngineResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesEngineResponse)(nil)).Elem()
}

func (o RulesEngineResponseArrayOutput) ToRulesEngineResponseArrayOutput() RulesEngineResponseArrayOutput {
	return o
}

func (o RulesEngineResponseArrayOutput) ToRulesEngineResponseArrayOutputWithContext(ctx context.Context) RulesEngineResponseArrayOutput {
	return o
}

func (o RulesEngineResponseArrayOutput) Index(i pulumi.IntInput) RulesEngineResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesEngineResponse {
		return vs[0].([]RulesEngineResponse)[vs[1].(int)]
	}).(RulesEngineResponseOutput)
}

// Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers manipulation.
type RulesEngineRule struct {
	// Actions to perform on the request and response if all of the match conditions are met.
	Action RulesEngineAction `pulumi:"action"`
	// A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means the actions will always run.
	MatchConditions []RulesEngineMatchCondition `pulumi:"matchConditions"`
	// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
	MatchProcessingBehavior *string `pulumi:"matchProcessingBehavior"`
	// A name to refer to this specific rule.
	Name string `pulumi:"name"`
	// A priority assigned to this rule.
	Priority int `pulumi:"priority"`
}

// RulesEngineRuleInput is an input type that accepts RulesEngineRuleArgs and RulesEngineRuleOutput values.
// You can construct a concrete instance of `RulesEngineRuleInput` via:
//
//          RulesEngineRuleArgs{...}
type RulesEngineRuleInput interface {
	pulumi.Input

	ToRulesEngineRuleOutput() RulesEngineRuleOutput
	ToRulesEngineRuleOutputWithContext(context.Context) RulesEngineRuleOutput
}

// Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers manipulation.
type RulesEngineRuleArgs struct {
	// Actions to perform on the request and response if all of the match conditions are met.
	Action RulesEngineActionInput `pulumi:"action"`
	// A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means the actions will always run.
	MatchConditions RulesEngineMatchConditionArrayInput `pulumi:"matchConditions"`
	// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
	MatchProcessingBehavior pulumi.StringPtrInput `pulumi:"matchProcessingBehavior"`
	// A name to refer to this specific rule.
	Name pulumi.StringInput `pulumi:"name"`
	// A priority assigned to this rule.
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (RulesEngineRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineRule)(nil)).Elem()
}

func (i RulesEngineRuleArgs) ToRulesEngineRuleOutput() RulesEngineRuleOutput {
	return i.ToRulesEngineRuleOutputWithContext(context.Background())
}

func (i RulesEngineRuleArgs) ToRulesEngineRuleOutputWithContext(ctx context.Context) RulesEngineRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesEngineRuleOutput)
}

// RulesEngineRuleArrayInput is an input type that accepts RulesEngineRuleArray and RulesEngineRuleArrayOutput values.
// You can construct a concrete instance of `RulesEngineRuleArrayInput` via:
//
//          RulesEngineRuleArray{ RulesEngineRuleArgs{...} }
type RulesEngineRuleArrayInput interface {
	pulumi.Input

	ToRulesEngineRuleArrayOutput() RulesEngineRuleArrayOutput
	ToRulesEngineRuleArrayOutputWithContext(context.Context) RulesEngineRuleArrayOutput
}

type RulesEngineRuleArray []RulesEngineRuleInput

func (RulesEngineRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesEngineRule)(nil)).Elem()
}

func (i RulesEngineRuleArray) ToRulesEngineRuleArrayOutput() RulesEngineRuleArrayOutput {
	return i.ToRulesEngineRuleArrayOutputWithContext(context.Background())
}

func (i RulesEngineRuleArray) ToRulesEngineRuleArrayOutputWithContext(ctx context.Context) RulesEngineRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesEngineRuleArrayOutput)
}

// Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers manipulation.
type RulesEngineRuleOutput struct{ *pulumi.OutputState }

func (RulesEngineRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineRule)(nil)).Elem()
}

func (o RulesEngineRuleOutput) ToRulesEngineRuleOutput() RulesEngineRuleOutput {
	return o
}

func (o RulesEngineRuleOutput) ToRulesEngineRuleOutputWithContext(ctx context.Context) RulesEngineRuleOutput {
	return o
}

// Actions to perform on the request and response if all of the match conditions are met.
func (o RulesEngineRuleOutput) Action() RulesEngineActionOutput {
	return o.ApplyT(func(v RulesEngineRule) RulesEngineAction { return v.Action }).(RulesEngineActionOutput)
}

// A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means the actions will always run.
func (o RulesEngineRuleOutput) MatchConditions() RulesEngineMatchConditionArrayOutput {
	return o.ApplyT(func(v RulesEngineRule) []RulesEngineMatchCondition { return v.MatchConditions }).(RulesEngineMatchConditionArrayOutput)
}

// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
func (o RulesEngineRuleOutput) MatchProcessingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesEngineRule) *string { return v.MatchProcessingBehavior }).(pulumi.StringPtrOutput)
}

// A name to refer to this specific rule.
func (o RulesEngineRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineRule) string { return v.Name }).(pulumi.StringOutput)
}

// A priority assigned to this rule.
func (o RulesEngineRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RulesEngineRule) int { return v.Priority }).(pulumi.IntOutput)
}

type RulesEngineRuleArrayOutput struct{ *pulumi.OutputState }

func (RulesEngineRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesEngineRule)(nil)).Elem()
}

func (o RulesEngineRuleArrayOutput) ToRulesEngineRuleArrayOutput() RulesEngineRuleArrayOutput {
	return o
}

func (o RulesEngineRuleArrayOutput) ToRulesEngineRuleArrayOutputWithContext(ctx context.Context) RulesEngineRuleArrayOutput {
	return o
}

func (o RulesEngineRuleArrayOutput) Index(i pulumi.IntInput) RulesEngineRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesEngineRule {
		return vs[0].([]RulesEngineRule)[vs[1].(int)]
	}).(RulesEngineRuleOutput)
}

// Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers manipulation.
type RulesEngineRuleResponse struct {
	// Actions to perform on the request and response if all of the match conditions are met.
	Action RulesEngineActionResponse `pulumi:"action"`
	// A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means the actions will always run.
	MatchConditions []RulesEngineMatchConditionResponse `pulumi:"matchConditions"`
	// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
	MatchProcessingBehavior *string `pulumi:"matchProcessingBehavior"`
	// A name to refer to this specific rule.
	Name string `pulumi:"name"`
	// A priority assigned to this rule.
	Priority int `pulumi:"priority"`
}

// RulesEngineRuleResponseInput is an input type that accepts RulesEngineRuleResponseArgs and RulesEngineRuleResponseOutput values.
// You can construct a concrete instance of `RulesEngineRuleResponseInput` via:
//
//          RulesEngineRuleResponseArgs{...}
type RulesEngineRuleResponseInput interface {
	pulumi.Input

	ToRulesEngineRuleResponseOutput() RulesEngineRuleResponseOutput
	ToRulesEngineRuleResponseOutputWithContext(context.Context) RulesEngineRuleResponseOutput
}

// Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers manipulation.
type RulesEngineRuleResponseArgs struct {
	// Actions to perform on the request and response if all of the match conditions are met.
	Action RulesEngineActionResponseInput `pulumi:"action"`
	// A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means the actions will always run.
	MatchConditions RulesEngineMatchConditionResponseArrayInput `pulumi:"matchConditions"`
	// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
	MatchProcessingBehavior pulumi.StringPtrInput `pulumi:"matchProcessingBehavior"`
	// A name to refer to this specific rule.
	Name pulumi.StringInput `pulumi:"name"`
	// A priority assigned to this rule.
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (RulesEngineRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineRuleResponse)(nil)).Elem()
}

func (i RulesEngineRuleResponseArgs) ToRulesEngineRuleResponseOutput() RulesEngineRuleResponseOutput {
	return i.ToRulesEngineRuleResponseOutputWithContext(context.Background())
}

func (i RulesEngineRuleResponseArgs) ToRulesEngineRuleResponseOutputWithContext(ctx context.Context) RulesEngineRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesEngineRuleResponseOutput)
}

// RulesEngineRuleResponseArrayInput is an input type that accepts RulesEngineRuleResponseArray and RulesEngineRuleResponseArrayOutput values.
// You can construct a concrete instance of `RulesEngineRuleResponseArrayInput` via:
//
//          RulesEngineRuleResponseArray{ RulesEngineRuleResponseArgs{...} }
type RulesEngineRuleResponseArrayInput interface {
	pulumi.Input

	ToRulesEngineRuleResponseArrayOutput() RulesEngineRuleResponseArrayOutput
	ToRulesEngineRuleResponseArrayOutputWithContext(context.Context) RulesEngineRuleResponseArrayOutput
}

type RulesEngineRuleResponseArray []RulesEngineRuleResponseInput

func (RulesEngineRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesEngineRuleResponse)(nil)).Elem()
}

func (i RulesEngineRuleResponseArray) ToRulesEngineRuleResponseArrayOutput() RulesEngineRuleResponseArrayOutput {
	return i.ToRulesEngineRuleResponseArrayOutputWithContext(context.Background())
}

func (i RulesEngineRuleResponseArray) ToRulesEngineRuleResponseArrayOutputWithContext(ctx context.Context) RulesEngineRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulesEngineRuleResponseArrayOutput)
}

// Contains a list of match conditions, and an action on how to modify the request/response. If multiple rules match, the actions from one rule that conflict with a previous rule overwrite for a singular action, or append in the case of headers manipulation.
type RulesEngineRuleResponseOutput struct{ *pulumi.OutputState }

func (RulesEngineRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulesEngineRuleResponse)(nil)).Elem()
}

func (o RulesEngineRuleResponseOutput) ToRulesEngineRuleResponseOutput() RulesEngineRuleResponseOutput {
	return o
}

func (o RulesEngineRuleResponseOutput) ToRulesEngineRuleResponseOutputWithContext(ctx context.Context) RulesEngineRuleResponseOutput {
	return o
}

// Actions to perform on the request and response if all of the match conditions are met.
func (o RulesEngineRuleResponseOutput) Action() RulesEngineActionResponseOutput {
	return o.ApplyT(func(v RulesEngineRuleResponse) RulesEngineActionResponse { return v.Action }).(RulesEngineActionResponseOutput)
}

// A list of match conditions that must meet in order for the actions of this rule to run. Having no match conditions means the actions will always run.
func (o RulesEngineRuleResponseOutput) MatchConditions() RulesEngineMatchConditionResponseArrayOutput {
	return o.ApplyT(func(v RulesEngineRuleResponse) []RulesEngineMatchConditionResponse { return v.MatchConditions }).(RulesEngineMatchConditionResponseArrayOutput)
}

// If this rule is a match should the rules engine continue running the remaining rules or stop. If not present, defaults to Continue.
func (o RulesEngineRuleResponseOutput) MatchProcessingBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulesEngineRuleResponse) *string { return v.MatchProcessingBehavior }).(pulumi.StringPtrOutput)
}

// A name to refer to this specific rule.
func (o RulesEngineRuleResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RulesEngineRuleResponse) string { return v.Name }).(pulumi.StringOutput)
}

// A priority assigned to this rule.
func (o RulesEngineRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RulesEngineRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

type RulesEngineRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RulesEngineRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulesEngineRuleResponse)(nil)).Elem()
}

func (o RulesEngineRuleResponseArrayOutput) ToRulesEngineRuleResponseArrayOutput() RulesEngineRuleResponseArrayOutput {
	return o
}

func (o RulesEngineRuleResponseArrayOutput) ToRulesEngineRuleResponseArrayOutputWithContext(ctx context.Context) RulesEngineRuleResponseArrayOutput {
	return o
}

func (o RulesEngineRuleResponseArrayOutput) Index(i pulumi.IntInput) RulesEngineRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulesEngineRuleResponse {
		return vs[0].([]RulesEngineRuleResponse)[vs[1].(int)]
	}).(RulesEngineRuleResponseOutput)
}

// Network security rule.
type SecurityRuleType struct {
	// The network traffic is allowed or denied.
	Access string `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes []string `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups []ApplicationSecurityGroupType `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction string `pulumi:"direction"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes []string `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups []ApplicationSecurityGroupType `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
}

// SecurityRuleTypeInput is an input type that accepts SecurityRuleTypeArgs and SecurityRuleTypeOutput values.
// You can construct a concrete instance of `SecurityRuleTypeInput` via:
//
//          SecurityRuleTypeArgs{...}
type SecurityRuleTypeInput interface {
	pulumi.Input

	ToSecurityRuleTypeOutput() SecurityRuleTypeOutput
	ToSecurityRuleTypeOutputWithContext(context.Context) SecurityRuleTypeOutput
}

// Network security rule.
type SecurityRuleTypeArgs struct {
	// The network traffic is allowed or denied.
	Access pulumi.StringInput `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix pulumi.StringPtrInput `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes pulumi.StringArrayInput `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups ApplicationSecurityGroupTypeArrayInput `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange pulumi.StringPtrInput `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges pulumi.StringArrayInput `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction pulumi.StringInput `pulumi:"direction"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix pulumi.StringPtrInput `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes pulumi.StringArrayInput `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups ApplicationSecurityGroupTypeArrayInput `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange pulumi.StringPtrInput `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges pulumi.StringArrayInput `pulumi:"sourcePortRanges"`
}

func (SecurityRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleType)(nil)).Elem()
}

func (i SecurityRuleTypeArgs) ToSecurityRuleTypeOutput() SecurityRuleTypeOutput {
	return i.ToSecurityRuleTypeOutputWithContext(context.Background())
}

func (i SecurityRuleTypeArgs) ToSecurityRuleTypeOutputWithContext(ctx context.Context) SecurityRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleTypeOutput)
}

// SecurityRuleTypeArrayInput is an input type that accepts SecurityRuleTypeArray and SecurityRuleTypeArrayOutput values.
// You can construct a concrete instance of `SecurityRuleTypeArrayInput` via:
//
//          SecurityRuleTypeArray{ SecurityRuleTypeArgs{...} }
type SecurityRuleTypeArrayInput interface {
	pulumi.Input

	ToSecurityRuleTypeArrayOutput() SecurityRuleTypeArrayOutput
	ToSecurityRuleTypeArrayOutputWithContext(context.Context) SecurityRuleTypeArrayOutput
}

type SecurityRuleTypeArray []SecurityRuleTypeInput

func (SecurityRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleType)(nil)).Elem()
}

func (i SecurityRuleTypeArray) ToSecurityRuleTypeArrayOutput() SecurityRuleTypeArrayOutput {
	return i.ToSecurityRuleTypeArrayOutputWithContext(context.Background())
}

func (i SecurityRuleTypeArray) ToSecurityRuleTypeArrayOutputWithContext(ctx context.Context) SecurityRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleTypeArrayOutput)
}

// Network security rule.
type SecurityRuleTypeOutput struct{ *pulumi.OutputState }

func (SecurityRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleType)(nil)).Elem()
}

func (o SecurityRuleTypeOutput) ToSecurityRuleTypeOutput() SecurityRuleTypeOutput {
	return o
}

func (o SecurityRuleTypeOutput) ToSecurityRuleTypeOutputWithContext(ctx context.Context) SecurityRuleTypeOutput {
	return o
}

// The network traffic is allowed or denied.
func (o SecurityRuleTypeOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleType) string { return v.Access }).(pulumi.StringOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o SecurityRuleTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
func (o SecurityRuleTypeOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.DestinationAddressPrefix }).(pulumi.StringPtrOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o SecurityRuleTypeOutput) DestinationAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []string { return v.DestinationAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as destination.
func (o SecurityRuleTypeOutput) DestinationApplicationSecurityGroups() ApplicationSecurityGroupTypeArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []ApplicationSecurityGroupType { return v.DestinationApplicationSecurityGroups }).(ApplicationSecurityGroupTypeArrayOutput)
}

// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleTypeOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o SecurityRuleTypeOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
func (o SecurityRuleTypeOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleType) string { return v.Direction }).(pulumi.StringOutput)
}

// Resource ID.
func (o SecurityRuleTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SecurityRuleTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o SecurityRuleTypeOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Network protocol this rule applies to.
func (o SecurityRuleTypeOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleType) string { return v.Protocol }).(pulumi.StringOutput)
}

// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
func (o SecurityRuleTypeOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.SourceAddressPrefix }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP ranges.
func (o SecurityRuleTypeOutput) SourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []string { return v.SourceAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as source.
func (o SecurityRuleTypeOutput) SourceApplicationSecurityGroups() ApplicationSecurityGroupTypeArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []ApplicationSecurityGroupType { return v.SourceApplicationSecurityGroups }).(ApplicationSecurityGroupTypeArrayOutput)
}

// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleTypeOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

// The source port ranges.
func (o SecurityRuleTypeOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

type SecurityRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (SecurityRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleType)(nil)).Elem()
}

func (o SecurityRuleTypeArrayOutput) ToSecurityRuleTypeArrayOutput() SecurityRuleTypeArrayOutput {
	return o
}

func (o SecurityRuleTypeArrayOutput) ToSecurityRuleTypeArrayOutputWithContext(ctx context.Context) SecurityRuleTypeArrayOutput {
	return o
}

func (o SecurityRuleTypeArrayOutput) Index(i pulumi.IntInput) SecurityRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityRuleType {
		return vs[0].([]SecurityRuleType)[vs[1].(int)]
	}).(SecurityRuleTypeOutput)
}

// Network security rule.
type SecurityRuleResponse struct {
	// The network traffic is allowed or denied.
	Access string `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes []string `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction string `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the security rule resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes []string `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
}

// SecurityRuleResponseInput is an input type that accepts SecurityRuleResponseArgs and SecurityRuleResponseOutput values.
// You can construct a concrete instance of `SecurityRuleResponseInput` via:
//
//          SecurityRuleResponseArgs{...}
type SecurityRuleResponseInput interface {
	pulumi.Input

	ToSecurityRuleResponseOutput() SecurityRuleResponseOutput
	ToSecurityRuleResponseOutputWithContext(context.Context) SecurityRuleResponseOutput
}

// Network security rule.
type SecurityRuleResponseArgs struct {
	// The network traffic is allowed or denied.
	Access pulumi.StringInput `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix pulumi.StringPtrInput `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes pulumi.StringArrayInput `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups ApplicationSecurityGroupResponseArrayInput `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange pulumi.StringPtrInput `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges pulumi.StringArrayInput `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
	Direction pulumi.StringInput `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Network protocol this rule applies to.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The provisioning state of the security rule resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix pulumi.StringPtrInput `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes pulumi.StringArrayInput `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups ApplicationSecurityGroupResponseArrayInput `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange pulumi.StringPtrInput `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges pulumi.StringArrayInput `pulumi:"sourcePortRanges"`
}

func (SecurityRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleResponse)(nil)).Elem()
}

func (i SecurityRuleResponseArgs) ToSecurityRuleResponseOutput() SecurityRuleResponseOutput {
	return i.ToSecurityRuleResponseOutputWithContext(context.Background())
}

func (i SecurityRuleResponseArgs) ToSecurityRuleResponseOutputWithContext(ctx context.Context) SecurityRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleResponseOutput)
}

// SecurityRuleResponseArrayInput is an input type that accepts SecurityRuleResponseArray and SecurityRuleResponseArrayOutput values.
// You can construct a concrete instance of `SecurityRuleResponseArrayInput` via:
//
//          SecurityRuleResponseArray{ SecurityRuleResponseArgs{...} }
type SecurityRuleResponseArrayInput interface {
	pulumi.Input

	ToSecurityRuleResponseArrayOutput() SecurityRuleResponseArrayOutput
	ToSecurityRuleResponseArrayOutputWithContext(context.Context) SecurityRuleResponseArrayOutput
}

type SecurityRuleResponseArray []SecurityRuleResponseInput

func (SecurityRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleResponse)(nil)).Elem()
}

func (i SecurityRuleResponseArray) ToSecurityRuleResponseArrayOutput() SecurityRuleResponseArrayOutput {
	return i.ToSecurityRuleResponseArrayOutputWithContext(context.Background())
}

func (i SecurityRuleResponseArray) ToSecurityRuleResponseArrayOutputWithContext(ctx context.Context) SecurityRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleResponseArrayOutput)
}

// Network security rule.
type SecurityRuleResponseOutput struct{ *pulumi.OutputState }

func (SecurityRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleResponse)(nil)).Elem()
}

func (o SecurityRuleResponseOutput) ToSecurityRuleResponseOutput() SecurityRuleResponseOutput {
	return o
}

func (o SecurityRuleResponseOutput) ToSecurityRuleResponseOutputWithContext(ctx context.Context) SecurityRuleResponseOutput {
	return o
}

// The network traffic is allowed or denied.
func (o SecurityRuleResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Access }).(pulumi.StringOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o SecurityRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
func (o SecurityRuleResponseOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.DestinationAddressPrefix }).(pulumi.StringPtrOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o SecurityRuleResponseOutput) DestinationAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.DestinationAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as destination.
func (o SecurityRuleResponseOutput) DestinationApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []ApplicationSecurityGroupResponse {
		return v.DestinationApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleResponseOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o SecurityRuleResponseOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic.
func (o SecurityRuleResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SecurityRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o SecurityRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SecurityRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o SecurityRuleResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Network protocol this rule applies to.
func (o SecurityRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the security rule resource.
func (o SecurityRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
func (o SecurityRuleResponseOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.SourceAddressPrefix }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP ranges.
func (o SecurityRuleResponseOutput) SourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.SourceAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as source.
func (o SecurityRuleResponseOutput) SourceApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []ApplicationSecurityGroupResponse {
		return v.SourceApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleResponseOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

// The source port ranges.
func (o SecurityRuleResponseOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

type SecurityRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleResponse)(nil)).Elem()
}

func (o SecurityRuleResponseArrayOutput) ToSecurityRuleResponseArrayOutput() SecurityRuleResponseArrayOutput {
	return o
}

func (o SecurityRuleResponseArrayOutput) ToSecurityRuleResponseArrayOutputWithContext(ctx context.Context) SecurityRuleResponseArrayOutput {
	return o
}

func (o SecurityRuleResponseArrayOutput) Index(i pulumi.IntInput) SecurityRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityRuleResponse {
		return vs[0].([]SecurityRuleResponse)[vs[1].(int)]
	}).(SecurityRuleResponseOutput)
}

// ServiceAssociationLink resource.
type ServiceAssociationLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Link to the external resource.
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
}

// ServiceAssociationLinkInput is an input type that accepts ServiceAssociationLinkArgs and ServiceAssociationLinkOutput values.
// You can construct a concrete instance of `ServiceAssociationLinkInput` via:
//
//          ServiceAssociationLinkArgs{...}
type ServiceAssociationLinkInput interface {
	pulumi.Input

	ToServiceAssociationLinkOutput() ServiceAssociationLinkOutput
	ToServiceAssociationLinkOutputWithContext(context.Context) ServiceAssociationLinkOutput
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Link to the external resource.
	Link pulumi.StringPtrInput `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType pulumi.StringPtrInput `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ServiceAssociationLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLink)(nil)).Elem()
}

func (i ServiceAssociationLinkArgs) ToServiceAssociationLinkOutput() ServiceAssociationLinkOutput {
	return i.ToServiceAssociationLinkOutputWithContext(context.Background())
}

func (i ServiceAssociationLinkArgs) ToServiceAssociationLinkOutputWithContext(ctx context.Context) ServiceAssociationLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAssociationLinkOutput)
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLink)(nil)).Elem()
}

func (o ServiceAssociationLinkOutput) ToServiceAssociationLinkOutput() ServiceAssociationLinkOutput {
	return o
}

func (o ServiceAssociationLinkOutput) ToServiceAssociationLinkOutputWithContext(ctx context.Context) ServiceAssociationLinkOutput {
	return o
}

// Resource ID.
func (o ServiceAssociationLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Link to the external resource.
func (o ServiceAssociationLinkOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLink) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ServiceAssociationLinkOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLink) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceAssociationLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkResponse struct {
	// If true, the resource can be deleted.
	AllowDelete *bool `pulumi:"allowDelete"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Link to the external resource.
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// A list of locations.
	Locations []string `pulumi:"locations"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the service association link resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ServiceAssociationLinkResponseInput is an input type that accepts ServiceAssociationLinkResponseArgs and ServiceAssociationLinkResponseOutput values.
// You can construct a concrete instance of `ServiceAssociationLinkResponseInput` via:
//
//          ServiceAssociationLinkResponseArgs{...}
type ServiceAssociationLinkResponseInput interface {
	pulumi.Input

	ToServiceAssociationLinkResponseOutput() ServiceAssociationLinkResponseOutput
	ToServiceAssociationLinkResponseOutputWithContext(context.Context) ServiceAssociationLinkResponseOutput
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkResponseArgs struct {
	// If true, the resource can be deleted.
	AllowDelete pulumi.BoolPtrInput `pulumi:"allowDelete"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Link to the external resource.
	Link pulumi.StringPtrInput `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType pulumi.StringPtrInput `pulumi:"linkedResourceType"`
	// A list of locations.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the service association link resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServiceAssociationLinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLinkResponse)(nil)).Elem()
}

func (i ServiceAssociationLinkResponseArgs) ToServiceAssociationLinkResponseOutput() ServiceAssociationLinkResponseOutput {
	return i.ToServiceAssociationLinkResponseOutputWithContext(context.Background())
}

func (i ServiceAssociationLinkResponseArgs) ToServiceAssociationLinkResponseOutputWithContext(ctx context.Context) ServiceAssociationLinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAssociationLinkResponseOutput)
}

// ServiceAssociationLinkResponseArrayInput is an input type that accepts ServiceAssociationLinkResponseArray and ServiceAssociationLinkResponseArrayOutput values.
// You can construct a concrete instance of `ServiceAssociationLinkResponseArrayInput` via:
//
//          ServiceAssociationLinkResponseArray{ ServiceAssociationLinkResponseArgs{...} }
type ServiceAssociationLinkResponseArrayInput interface {
	pulumi.Input

	ToServiceAssociationLinkResponseArrayOutput() ServiceAssociationLinkResponseArrayOutput
	ToServiceAssociationLinkResponseArrayOutputWithContext(context.Context) ServiceAssociationLinkResponseArrayOutput
}

type ServiceAssociationLinkResponseArray []ServiceAssociationLinkResponseInput

func (ServiceAssociationLinkResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAssociationLinkResponse)(nil)).Elem()
}

func (i ServiceAssociationLinkResponseArray) ToServiceAssociationLinkResponseArrayOutput() ServiceAssociationLinkResponseArrayOutput {
	return i.ToServiceAssociationLinkResponseArrayOutputWithContext(context.Background())
}

func (i ServiceAssociationLinkResponseArray) ToServiceAssociationLinkResponseArrayOutputWithContext(ctx context.Context) ServiceAssociationLinkResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAssociationLinkResponseArrayOutput)
}

// ServiceAssociationLink resource.
type ServiceAssociationLinkResponseOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAssociationLinkResponse)(nil)).Elem()
}

func (o ServiceAssociationLinkResponseOutput) ToServiceAssociationLinkResponseOutput() ServiceAssociationLinkResponseOutput {
	return o
}

func (o ServiceAssociationLinkResponseOutput) ToServiceAssociationLinkResponseOutputWithContext(ctx context.Context) ServiceAssociationLinkResponseOutput {
	return o
}

// If true, the resource can be deleted.
func (o ServiceAssociationLinkResponseOutput) AllowDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *bool { return v.AllowDelete }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceAssociationLinkResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ServiceAssociationLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Link to the external resource.
func (o ServiceAssociationLinkResponseOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ServiceAssociationLinkResponseOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// A list of locations.
func (o ServiceAssociationLinkResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceAssociationLinkResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the service association link resource.
func (o ServiceAssociationLinkResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o ServiceAssociationLinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAssociationLinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceAssociationLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceAssociationLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAssociationLinkResponse)(nil)).Elem()
}

func (o ServiceAssociationLinkResponseArrayOutput) ToServiceAssociationLinkResponseArrayOutput() ServiceAssociationLinkResponseArrayOutput {
	return o
}

func (o ServiceAssociationLinkResponseArrayOutput) ToServiceAssociationLinkResponseArrayOutputWithContext(ctx context.Context) ServiceAssociationLinkResponseArrayOutput {
	return o
}

func (o ServiceAssociationLinkResponseArrayOutput) Index(i pulumi.IntInput) ServiceAssociationLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceAssociationLinkResponse {
		return vs[0].([]ServiceAssociationLinkResponse)[vs[1].(int)]
	}).(ServiceAssociationLinkResponseOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicyType struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions []ServiceEndpointPolicyDefinitionType `pulumi:"serviceEndpointPolicyDefinitions"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// ServiceEndpointPolicyTypeInput is an input type that accepts ServiceEndpointPolicyTypeArgs and ServiceEndpointPolicyTypeOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyTypeInput` via:
//
//          ServiceEndpointPolicyTypeArgs{...}
type ServiceEndpointPolicyTypeInput interface {
	pulumi.Input

	ToServiceEndpointPolicyTypeOutput() ServiceEndpointPolicyTypeOutput
	ToServiceEndpointPolicyTypeOutputWithContext(context.Context) ServiceEndpointPolicyTypeOutput
}

// Service End point policy resource.
type ServiceEndpointPolicyTypeArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions ServiceEndpointPolicyDefinitionTypeArrayInput `pulumi:"serviceEndpointPolicyDefinitions"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ServiceEndpointPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyType)(nil)).Elem()
}

func (i ServiceEndpointPolicyTypeArgs) ToServiceEndpointPolicyTypeOutput() ServiceEndpointPolicyTypeOutput {
	return i.ToServiceEndpointPolicyTypeOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyTypeArgs) ToServiceEndpointPolicyTypeOutputWithContext(ctx context.Context) ServiceEndpointPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyTypeOutput)
}

// ServiceEndpointPolicyTypeArrayInput is an input type that accepts ServiceEndpointPolicyTypeArray and ServiceEndpointPolicyTypeArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyTypeArrayInput` via:
//
//          ServiceEndpointPolicyTypeArray{ ServiceEndpointPolicyTypeArgs{...} }
type ServiceEndpointPolicyTypeArrayInput interface {
	pulumi.Input

	ToServiceEndpointPolicyTypeArrayOutput() ServiceEndpointPolicyTypeArrayOutput
	ToServiceEndpointPolicyTypeArrayOutputWithContext(context.Context) ServiceEndpointPolicyTypeArrayOutput
}

type ServiceEndpointPolicyTypeArray []ServiceEndpointPolicyTypeInput

func (ServiceEndpointPolicyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyType)(nil)).Elem()
}

func (i ServiceEndpointPolicyTypeArray) ToServiceEndpointPolicyTypeArrayOutput() ServiceEndpointPolicyTypeArrayOutput {
	return i.ToServiceEndpointPolicyTypeArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyTypeArray) ToServiceEndpointPolicyTypeArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyTypeArrayOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicyTypeOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyType)(nil)).Elem()
}

func (o ServiceEndpointPolicyTypeOutput) ToServiceEndpointPolicyTypeOutput() ServiceEndpointPolicyTypeOutput {
	return o
}

func (o ServiceEndpointPolicyTypeOutput) ToServiceEndpointPolicyTypeOutputWithContext(ctx context.Context) ServiceEndpointPolicyTypeOutput {
	return o
}

// Resource ID.
func (o ServiceEndpointPolicyTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ServiceEndpointPolicyTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// A collection of service endpoint policy definitions of the service endpoint policy.
func (o ServiceEndpointPolicyTypeOutput) ServiceEndpointPolicyDefinitions() ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) []ServiceEndpointPolicyDefinitionType {
		return v.ServiceEndpointPolicyDefinitions
	}).(ServiceEndpointPolicyDefinitionTypeArrayOutput)
}

// Resource tags.
func (o ServiceEndpointPolicyTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ServiceEndpointPolicyTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyType)(nil)).Elem()
}

func (o ServiceEndpointPolicyTypeArrayOutput) ToServiceEndpointPolicyTypeArrayOutput() ServiceEndpointPolicyTypeArrayOutput {
	return o
}

func (o ServiceEndpointPolicyTypeArrayOutput) ToServiceEndpointPolicyTypeArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyTypeArrayOutput {
	return o
}

func (o ServiceEndpointPolicyTypeArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyType {
		return vs[0].([]ServiceEndpointPolicyType)[vs[1].(int)]
	}).(ServiceEndpointPolicyTypeOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionType struct {
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Service endpoint name.
	Service *string `pulumi:"service"`
	// A list of service resources.
	ServiceResources []string `pulumi:"serviceResources"`
}

// ServiceEndpointPolicyDefinitionTypeInput is an input type that accepts ServiceEndpointPolicyDefinitionTypeArgs and ServiceEndpointPolicyDefinitionTypeOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionTypeInput` via:
//
//          ServiceEndpointPolicyDefinitionTypeArgs{...}
type ServiceEndpointPolicyDefinitionTypeInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionTypeOutput() ServiceEndpointPolicyDefinitionTypeOutput
	ToServiceEndpointPolicyDefinitionTypeOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionTypeOutput
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionTypeArgs struct {
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Service endpoint name.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// A list of service resources.
	ServiceResources pulumi.StringArrayInput `pulumi:"serviceResources"`
}

func (ServiceEndpointPolicyDefinitionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionType)(nil)).Elem()
}

func (i ServiceEndpointPolicyDefinitionTypeArgs) ToServiceEndpointPolicyDefinitionTypeOutput() ServiceEndpointPolicyDefinitionTypeOutput {
	return i.ToServiceEndpointPolicyDefinitionTypeOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionTypeArgs) ToServiceEndpointPolicyDefinitionTypeOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionTypeOutput)
}

// ServiceEndpointPolicyDefinitionTypeArrayInput is an input type that accepts ServiceEndpointPolicyDefinitionTypeArray and ServiceEndpointPolicyDefinitionTypeArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionTypeArrayInput` via:
//
//          ServiceEndpointPolicyDefinitionTypeArray{ ServiceEndpointPolicyDefinitionTypeArgs{...} }
type ServiceEndpointPolicyDefinitionTypeArrayInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionTypeArrayOutput() ServiceEndpointPolicyDefinitionTypeArrayOutput
	ToServiceEndpointPolicyDefinitionTypeArrayOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionTypeArrayOutput
}

type ServiceEndpointPolicyDefinitionTypeArray []ServiceEndpointPolicyDefinitionTypeInput

func (ServiceEndpointPolicyDefinitionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinitionType)(nil)).Elem()
}

func (i ServiceEndpointPolicyDefinitionTypeArray) ToServiceEndpointPolicyDefinitionTypeArrayOutput() ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return i.ToServiceEndpointPolicyDefinitionTypeArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionTypeArray) ToServiceEndpointPolicyDefinitionTypeArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionTypeArrayOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionTypeOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionType)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionTypeOutput) ToServiceEndpointPolicyDefinitionTypeOutput() ServiceEndpointPolicyDefinitionTypeOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionTypeOutput) ToServiceEndpointPolicyDefinitionTypeOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionTypeOutput {
	return o
}

// A description for this rule. Restricted to 140 chars.
func (o ServiceEndpointPolicyDefinitionTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyDefinitionTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceEndpointPolicyDefinitionTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Service endpoint name.
func (o ServiceEndpointPolicyDefinitionTypeOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// A list of service resources.
func (o ServiceEndpointPolicyDefinitionTypeOutput) ServiceResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionType) []string { return v.ServiceResources }).(pulumi.StringArrayOutput)
}

type ServiceEndpointPolicyDefinitionTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinitionType)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionTypeArrayOutput) ToServiceEndpointPolicyDefinitionTypeArrayOutput() ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionTypeArrayOutput) ToServiceEndpointPolicyDefinitionTypeArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionTypeArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionTypeArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyDefinitionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyDefinitionType {
		return vs[0].([]ServiceEndpointPolicyDefinitionType)[vs[1].(int)]
	}).(ServiceEndpointPolicyDefinitionTypeOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionResponse struct {
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the service endpoint policy definition resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Service endpoint name.
	Service *string `pulumi:"service"`
	// A list of service resources.
	ServiceResources []string `pulumi:"serviceResources"`
}

// ServiceEndpointPolicyDefinitionResponseInput is an input type that accepts ServiceEndpointPolicyDefinitionResponseArgs and ServiceEndpointPolicyDefinitionResponseOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionResponseInput` via:
//
//          ServiceEndpointPolicyDefinitionResponseArgs{...}
type ServiceEndpointPolicyDefinitionResponseInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionResponseOutput() ServiceEndpointPolicyDefinitionResponseOutput
	ToServiceEndpointPolicyDefinitionResponseOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionResponseOutput
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionResponseArgs struct {
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the service endpoint policy definition resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Service endpoint name.
	Service pulumi.StringPtrInput `pulumi:"service"`
	// A list of service resources.
	ServiceResources pulumi.StringArrayInput `pulumi:"serviceResources"`
}

func (ServiceEndpointPolicyDefinitionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionResponse)(nil)).Elem()
}

func (i ServiceEndpointPolicyDefinitionResponseArgs) ToServiceEndpointPolicyDefinitionResponseOutput() ServiceEndpointPolicyDefinitionResponseOutput {
	return i.ToServiceEndpointPolicyDefinitionResponseOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionResponseArgs) ToServiceEndpointPolicyDefinitionResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionResponseOutput)
}

// ServiceEndpointPolicyDefinitionResponseArrayInput is an input type that accepts ServiceEndpointPolicyDefinitionResponseArray and ServiceEndpointPolicyDefinitionResponseArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyDefinitionResponseArrayInput` via:
//
//          ServiceEndpointPolicyDefinitionResponseArray{ ServiceEndpointPolicyDefinitionResponseArgs{...} }
type ServiceEndpointPolicyDefinitionResponseArrayInput interface {
	pulumi.Input

	ToServiceEndpointPolicyDefinitionResponseArrayOutput() ServiceEndpointPolicyDefinitionResponseArrayOutput
	ToServiceEndpointPolicyDefinitionResponseArrayOutputWithContext(context.Context) ServiceEndpointPolicyDefinitionResponseArrayOutput
}

type ServiceEndpointPolicyDefinitionResponseArray []ServiceEndpointPolicyDefinitionResponseInput

func (ServiceEndpointPolicyDefinitionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinitionResponse)(nil)).Elem()
}

func (i ServiceEndpointPolicyDefinitionResponseArray) ToServiceEndpointPolicyDefinitionResponseArrayOutput() ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return i.ToServiceEndpointPolicyDefinitionResponseArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyDefinitionResponseArray) ToServiceEndpointPolicyDefinitionResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyDefinitionResponseArrayOutput)
}

// Service Endpoint policy definitions.
type ServiceEndpointPolicyDefinitionResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyDefinitionResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionResponseOutput) ToServiceEndpointPolicyDefinitionResponseOutput() ServiceEndpointPolicyDefinitionResponseOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionResponseOutput) ToServiceEndpointPolicyDefinitionResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionResponseOutput {
	return o
}

// A description for this rule. Restricted to 140 chars.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the service endpoint policy definition resource.
func (o ServiceEndpointPolicyDefinitionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Service endpoint name.
func (o ServiceEndpointPolicyDefinitionResponseOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) *string { return v.Service }).(pulumi.StringPtrOutput)
}

// A list of service resources.
func (o ServiceEndpointPolicyDefinitionResponseOutput) ServiceResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyDefinitionResponse) []string { return v.ServiceResources }).(pulumi.StringArrayOutput)
}

type ServiceEndpointPolicyDefinitionResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyDefinitionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyDefinitionResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyDefinitionResponseArrayOutput) ToServiceEndpointPolicyDefinitionResponseArrayOutput() ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionResponseArrayOutput) ToServiceEndpointPolicyDefinitionResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyDefinitionResponseArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyDefinitionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyDefinitionResponse {
		return vs[0].([]ServiceEndpointPolicyDefinitionResponse)[vs[1].(int)]
	}).(ServiceEndpointPolicyDefinitionResponseOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicyResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the service endpoint policy resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the service endpoint policy resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions []ServiceEndpointPolicyDefinitionResponse `pulumi:"serviceEndpointPolicyDefinitions"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ServiceEndpointPolicyResponseInput is an input type that accepts ServiceEndpointPolicyResponseArgs and ServiceEndpointPolicyResponseOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyResponseInput` via:
//
//          ServiceEndpointPolicyResponseArgs{...}
type ServiceEndpointPolicyResponseInput interface {
	pulumi.Input

	ToServiceEndpointPolicyResponseOutput() ServiceEndpointPolicyResponseOutput
	ToServiceEndpointPolicyResponseOutputWithContext(context.Context) ServiceEndpointPolicyResponseOutput
}

// Service End point policy resource.
type ServiceEndpointPolicyResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the service endpoint policy resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resource GUID property of the service endpoint policy resource.
	ResourceGuid pulumi.StringInput `pulumi:"resourceGuid"`
	// A collection of service endpoint policy definitions of the service endpoint policy.
	ServiceEndpointPolicyDefinitions ServiceEndpointPolicyDefinitionResponseArrayInput `pulumi:"serviceEndpointPolicyDefinitions"`
	// A collection of references to subnets.
	Subnets SubnetResponseArrayInput `pulumi:"subnets"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServiceEndpointPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyResponse)(nil)).Elem()
}

func (i ServiceEndpointPolicyResponseArgs) ToServiceEndpointPolicyResponseOutput() ServiceEndpointPolicyResponseOutput {
	return i.ToServiceEndpointPolicyResponseOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyResponseArgs) ToServiceEndpointPolicyResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyResponseOutput)
}

// ServiceEndpointPolicyResponseArrayInput is an input type that accepts ServiceEndpointPolicyResponseArray and ServiceEndpointPolicyResponseArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPolicyResponseArrayInput` via:
//
//          ServiceEndpointPolicyResponseArray{ ServiceEndpointPolicyResponseArgs{...} }
type ServiceEndpointPolicyResponseArrayInput interface {
	pulumi.Input

	ToServiceEndpointPolicyResponseArrayOutput() ServiceEndpointPolicyResponseArrayOutput
	ToServiceEndpointPolicyResponseArrayOutputWithContext(context.Context) ServiceEndpointPolicyResponseArrayOutput
}

type ServiceEndpointPolicyResponseArray []ServiceEndpointPolicyResponseInput

func (ServiceEndpointPolicyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyResponse)(nil)).Elem()
}

func (i ServiceEndpointPolicyResponseArray) ToServiceEndpointPolicyResponseArrayOutput() ServiceEndpointPolicyResponseArrayOutput {
	return i.ToServiceEndpointPolicyResponseArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPolicyResponseArray) ToServiceEndpointPolicyResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPolicyResponseArrayOutput)
}

// Service End point policy resource.
type ServiceEndpointPolicyResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPolicyResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyResponseOutput) ToServiceEndpointPolicyResponseOutput() ServiceEndpointPolicyResponseOutput {
	return o
}

func (o ServiceEndpointPolicyResponseOutput) ToServiceEndpointPolicyResponseOutputWithContext(ctx context.Context) ServiceEndpointPolicyResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ServiceEndpointPolicyResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ServiceEndpointPolicyResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ServiceEndpointPolicyResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ServiceEndpointPolicyResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the service endpoint policy resource.
func (o ServiceEndpointPolicyResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the service endpoint policy resource.
func (o ServiceEndpointPolicyResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// A collection of service endpoint policy definitions of the service endpoint policy.
func (o ServiceEndpointPolicyResponseOutput) ServiceEndpointPolicyDefinitions() ServiceEndpointPolicyDefinitionResponseArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) []ServiceEndpointPolicyDefinitionResponse {
		return v.ServiceEndpointPolicyDefinitions
	}).(ServiceEndpointPolicyDefinitionResponseArrayOutput)
}

// A collection of references to subnets.
func (o ServiceEndpointPolicyResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o ServiceEndpointPolicyResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o ServiceEndpointPolicyResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPolicyResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceEndpointPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPolicyResponse)(nil)).Elem()
}

func (o ServiceEndpointPolicyResponseArrayOutput) ToServiceEndpointPolicyResponseArrayOutput() ServiceEndpointPolicyResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyResponseArrayOutput) ToServiceEndpointPolicyResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPolicyResponseArrayOutput {
	return o
}

func (o ServiceEndpointPolicyResponseArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPolicyResponse {
		return vs[0].([]ServiceEndpointPolicyResponse)[vs[1].(int)]
	}).(ServiceEndpointPolicyResponseOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormat struct {
	// A list of locations.
	Locations []string `pulumi:"locations"`
	// The type of the endpoint service.
	Service *string `pulumi:"service"`
}

// ServiceEndpointPropertiesFormatInput is an input type that accepts ServiceEndpointPropertiesFormatArgs and ServiceEndpointPropertiesFormatOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatInput` via:
//
//          ServiceEndpointPropertiesFormatArgs{...}
type ServiceEndpointPropertiesFormatInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput
	ToServiceEndpointPropertiesFormatOutputWithContext(context.Context) ServiceEndpointPropertiesFormatOutput
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatArgs struct {
	// A list of locations.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// The type of the endpoint service.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (ServiceEndpointPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatArgs) ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput {
	return i.ToServiceEndpointPropertiesFormatOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatArgs) ToServiceEndpointPropertiesFormatOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatOutput)
}

// ServiceEndpointPropertiesFormatArrayInput is an input type that accepts ServiceEndpointPropertiesFormatArray and ServiceEndpointPropertiesFormatArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatArrayInput` via:
//
//          ServiceEndpointPropertiesFormatArray{ ServiceEndpointPropertiesFormatArgs{...} }
type ServiceEndpointPropertiesFormatArrayInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput
	ToServiceEndpointPropertiesFormatArrayOutputWithContext(context.Context) ServiceEndpointPropertiesFormatArrayOutput
}

type ServiceEndpointPropertiesFormatArray []ServiceEndpointPropertiesFormatInput

func (ServiceEndpointPropertiesFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatArray) ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput {
	return i.ToServiceEndpointPropertiesFormatArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatArray) ToServiceEndpointPropertiesFormatArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatArrayOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatOutput) ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatOutput) ToServiceEndpointPropertiesFormatOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatOutput {
	return o
}

// A list of locations.
func (o ServiceEndpointPropertiesFormatOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormat) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// The type of the endpoint service.
func (o ServiceEndpointPropertiesFormatOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormat) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ServiceEndpointPropertiesFormatArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatArrayOutput) ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatArrayOutput) ToServiceEndpointPropertiesFormatArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPropertiesFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPropertiesFormat {
		return vs[0].([]ServiceEndpointPropertiesFormat)[vs[1].(int)]
	}).(ServiceEndpointPropertiesFormatOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatResponse struct {
	// A list of locations.
	Locations []string `pulumi:"locations"`
	// The provisioning state of the service endpoint resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The type of the endpoint service.
	Service *string `pulumi:"service"`
}

// ServiceEndpointPropertiesFormatResponseInput is an input type that accepts ServiceEndpointPropertiesFormatResponseArgs and ServiceEndpointPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatResponseInput` via:
//
//          ServiceEndpointPropertiesFormatResponseArgs{...}
type ServiceEndpointPropertiesFormatResponseInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatResponseOutput() ServiceEndpointPropertiesFormatResponseOutput
	ToServiceEndpointPropertiesFormatResponseOutputWithContext(context.Context) ServiceEndpointPropertiesFormatResponseOutput
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatResponseArgs struct {
	// A list of locations.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// The provisioning state of the service endpoint resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The type of the endpoint service.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (ServiceEndpointPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatResponseArgs) ToServiceEndpointPropertiesFormatResponseOutput() ServiceEndpointPropertiesFormatResponseOutput {
	return i.ToServiceEndpointPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatResponseArgs) ToServiceEndpointPropertiesFormatResponseOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatResponseOutput)
}

// ServiceEndpointPropertiesFormatResponseArrayInput is an input type that accepts ServiceEndpointPropertiesFormatResponseArray and ServiceEndpointPropertiesFormatResponseArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatResponseArrayInput` via:
//
//          ServiceEndpointPropertiesFormatResponseArray{ ServiceEndpointPropertiesFormatResponseArgs{...} }
type ServiceEndpointPropertiesFormatResponseArrayInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatResponseArrayOutput() ServiceEndpointPropertiesFormatResponseArrayOutput
	ToServiceEndpointPropertiesFormatResponseArrayOutputWithContext(context.Context) ServiceEndpointPropertiesFormatResponseArrayOutput
}

type ServiceEndpointPropertiesFormatResponseArray []ServiceEndpointPropertiesFormatResponseInput

func (ServiceEndpointPropertiesFormatResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatResponseArray) ToServiceEndpointPropertiesFormatResponseArrayOutput() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return i.ToServiceEndpointPropertiesFormatResponseArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatResponseArray) ToServiceEndpointPropertiesFormatResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatResponseArrayOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatResponseOutput) ToServiceEndpointPropertiesFormatResponseOutput() ServiceEndpointPropertiesFormatResponseOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseOutput) ToServiceEndpointPropertiesFormatResponseOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseOutput {
	return o
}

// A list of locations.
func (o ServiceEndpointPropertiesFormatResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// The provisioning state of the service endpoint resource.
func (o ServiceEndpointPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The type of the endpoint service.
func (o ServiceEndpointPropertiesFormatResponseOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ServiceEndpointPropertiesFormatResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) ToServiceEndpointPropertiesFormatResponseArrayOutput() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) ToServiceEndpointPropertiesFormatResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPropertiesFormatResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPropertiesFormatResponse {
		return vs[0].([]ServiceEndpointPropertiesFormatResponse)[vs[1].(int)]
	}).(ServiceEndpointPropertiesFormatResponseOutput)
}

// An SOA record.
type SoaRecord struct {
	// The email contact for this SOA record.
	Email *string `pulumi:"email"`
	// The expire time for this SOA record.
	ExpireTime *int `pulumi:"expireTime"`
	// The domain name of the authoritative name server for this SOA record.
	Host *string `pulumi:"host"`
	// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
	MinimumTtl *int `pulumi:"minimumTtl"`
	// The refresh value for this SOA record.
	RefreshTime *int `pulumi:"refreshTime"`
	// The retry time for this SOA record.
	RetryTime *int `pulumi:"retryTime"`
	// The serial number for this SOA record.
	SerialNumber *int `pulumi:"serialNumber"`
}

// SoaRecordInput is an input type that accepts SoaRecordArgs and SoaRecordOutput values.
// You can construct a concrete instance of `SoaRecordInput` via:
//
//          SoaRecordArgs{...}
type SoaRecordInput interface {
	pulumi.Input

	ToSoaRecordOutput() SoaRecordOutput
	ToSoaRecordOutputWithContext(context.Context) SoaRecordOutput
}

// An SOA record.
type SoaRecordArgs struct {
	// The email contact for this SOA record.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The expire time for this SOA record.
	ExpireTime pulumi.IntPtrInput `pulumi:"expireTime"`
	// The domain name of the authoritative name server for this SOA record.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
	MinimumTtl pulumi.IntPtrInput `pulumi:"minimumTtl"`
	// The refresh value for this SOA record.
	RefreshTime pulumi.IntPtrInput `pulumi:"refreshTime"`
	// The retry time for this SOA record.
	RetryTime pulumi.IntPtrInput `pulumi:"retryTime"`
	// The serial number for this SOA record.
	SerialNumber pulumi.IntPtrInput `pulumi:"serialNumber"`
}

func (SoaRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SoaRecord)(nil)).Elem()
}

func (i SoaRecordArgs) ToSoaRecordOutput() SoaRecordOutput {
	return i.ToSoaRecordOutputWithContext(context.Background())
}

func (i SoaRecordArgs) ToSoaRecordOutputWithContext(ctx context.Context) SoaRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoaRecordOutput)
}

func (i SoaRecordArgs) ToSoaRecordPtrOutput() SoaRecordPtrOutput {
	return i.ToSoaRecordPtrOutputWithContext(context.Background())
}

func (i SoaRecordArgs) ToSoaRecordPtrOutputWithContext(ctx context.Context) SoaRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoaRecordOutput).ToSoaRecordPtrOutputWithContext(ctx)
}

// SoaRecordPtrInput is an input type that accepts SoaRecordArgs, SoaRecordPtr and SoaRecordPtrOutput values.
// You can construct a concrete instance of `SoaRecordPtrInput` via:
//
//          SoaRecordArgs{...}
//
//  or:
//
//          nil
type SoaRecordPtrInput interface {
	pulumi.Input

	ToSoaRecordPtrOutput() SoaRecordPtrOutput
	ToSoaRecordPtrOutputWithContext(context.Context) SoaRecordPtrOutput
}

type soaRecordPtrType SoaRecordArgs

func SoaRecordPtr(v *SoaRecordArgs) SoaRecordPtrInput {
	return (*soaRecordPtrType)(v)
}

func (*soaRecordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SoaRecord)(nil)).Elem()
}

func (i *soaRecordPtrType) ToSoaRecordPtrOutput() SoaRecordPtrOutput {
	return i.ToSoaRecordPtrOutputWithContext(context.Background())
}

func (i *soaRecordPtrType) ToSoaRecordPtrOutputWithContext(ctx context.Context) SoaRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoaRecordPtrOutput)
}

// An SOA record.
type SoaRecordOutput struct{ *pulumi.OutputState }

func (SoaRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoaRecord)(nil)).Elem()
}

func (o SoaRecordOutput) ToSoaRecordOutput() SoaRecordOutput {
	return o
}

func (o SoaRecordOutput) ToSoaRecordOutputWithContext(ctx context.Context) SoaRecordOutput {
	return o
}

func (o SoaRecordOutput) ToSoaRecordPtrOutput() SoaRecordPtrOutput {
	return o.ToSoaRecordPtrOutputWithContext(context.Background())
}

func (o SoaRecordOutput) ToSoaRecordPtrOutputWithContext(ctx context.Context) SoaRecordPtrOutput {
	return o.ApplyT(func(v SoaRecord) *SoaRecord {
		return &v
	}).(SoaRecordPtrOutput)
}

// The email contact for this SOA record.
func (o SoaRecordOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoaRecord) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The expire time for this SOA record.
func (o SoaRecordOutput) ExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SoaRecord) *int { return v.ExpireTime }).(pulumi.IntPtrOutput)
}

// The domain name of the authoritative name server for this SOA record.
func (o SoaRecordOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoaRecord) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
func (o SoaRecordOutput) MinimumTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SoaRecord) *int { return v.MinimumTtl }).(pulumi.IntPtrOutput)
}

// The refresh value for this SOA record.
func (o SoaRecordOutput) RefreshTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SoaRecord) *int { return v.RefreshTime }).(pulumi.IntPtrOutput)
}

// The retry time for this SOA record.
func (o SoaRecordOutput) RetryTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SoaRecord) *int { return v.RetryTime }).(pulumi.IntPtrOutput)
}

// The serial number for this SOA record.
func (o SoaRecordOutput) SerialNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SoaRecord) *int { return v.SerialNumber }).(pulumi.IntPtrOutput)
}

type SoaRecordPtrOutput struct{ *pulumi.OutputState }

func (SoaRecordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoaRecord)(nil)).Elem()
}

func (o SoaRecordPtrOutput) ToSoaRecordPtrOutput() SoaRecordPtrOutput {
	return o
}

func (o SoaRecordPtrOutput) ToSoaRecordPtrOutputWithContext(ctx context.Context) SoaRecordPtrOutput {
	return o
}

func (o SoaRecordPtrOutput) Elem() SoaRecordOutput {
	return o.ApplyT(func(v *SoaRecord) SoaRecord { return *v }).(SoaRecordOutput)
}

// The email contact for this SOA record.
func (o SoaRecordPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoaRecord) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The expire time for this SOA record.
func (o SoaRecordPtrOutput) ExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SoaRecord) *int {
		if v == nil {
			return nil
		}
		return v.ExpireTime
	}).(pulumi.IntPtrOutput)
}

// The domain name of the authoritative name server for this SOA record.
func (o SoaRecordPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoaRecord) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
func (o SoaRecordPtrOutput) MinimumTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SoaRecord) *int {
		if v == nil {
			return nil
		}
		return v.MinimumTtl
	}).(pulumi.IntPtrOutput)
}

// The refresh value for this SOA record.
func (o SoaRecordPtrOutput) RefreshTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SoaRecord) *int {
		if v == nil {
			return nil
		}
		return v.RefreshTime
	}).(pulumi.IntPtrOutput)
}

// The retry time for this SOA record.
func (o SoaRecordPtrOutput) RetryTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SoaRecord) *int {
		if v == nil {
			return nil
		}
		return v.RetryTime
	}).(pulumi.IntPtrOutput)
}

// The serial number for this SOA record.
func (o SoaRecordPtrOutput) SerialNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SoaRecord) *int {
		if v == nil {
			return nil
		}
		return v.SerialNumber
	}).(pulumi.IntPtrOutput)
}

// An SOA record.
type SoaRecordResponse struct {
	// The email contact for this SOA record.
	Email *string `pulumi:"email"`
	// The expire time for this SOA record.
	ExpireTime *int `pulumi:"expireTime"`
	// The domain name of the authoritative name server for this SOA record.
	Host *string `pulumi:"host"`
	// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
	MinimumTtl *int `pulumi:"minimumTtl"`
	// The refresh value for this SOA record.
	RefreshTime *int `pulumi:"refreshTime"`
	// The retry time for this SOA record.
	RetryTime *int `pulumi:"retryTime"`
	// The serial number for this SOA record.
	SerialNumber *int `pulumi:"serialNumber"`
}

// SoaRecordResponseInput is an input type that accepts SoaRecordResponseArgs and SoaRecordResponseOutput values.
// You can construct a concrete instance of `SoaRecordResponseInput` via:
//
//          SoaRecordResponseArgs{...}
type SoaRecordResponseInput interface {
	pulumi.Input

	ToSoaRecordResponseOutput() SoaRecordResponseOutput
	ToSoaRecordResponseOutputWithContext(context.Context) SoaRecordResponseOutput
}

// An SOA record.
type SoaRecordResponseArgs struct {
	// The email contact for this SOA record.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The expire time for this SOA record.
	ExpireTime pulumi.IntPtrInput `pulumi:"expireTime"`
	// The domain name of the authoritative name server for this SOA record.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
	MinimumTtl pulumi.IntPtrInput `pulumi:"minimumTtl"`
	// The refresh value for this SOA record.
	RefreshTime pulumi.IntPtrInput `pulumi:"refreshTime"`
	// The retry time for this SOA record.
	RetryTime pulumi.IntPtrInput `pulumi:"retryTime"`
	// The serial number for this SOA record.
	SerialNumber pulumi.IntPtrInput `pulumi:"serialNumber"`
}

func (SoaRecordResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SoaRecordResponse)(nil)).Elem()
}

func (i SoaRecordResponseArgs) ToSoaRecordResponseOutput() SoaRecordResponseOutput {
	return i.ToSoaRecordResponseOutputWithContext(context.Background())
}

func (i SoaRecordResponseArgs) ToSoaRecordResponseOutputWithContext(ctx context.Context) SoaRecordResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoaRecordResponseOutput)
}

func (i SoaRecordResponseArgs) ToSoaRecordResponsePtrOutput() SoaRecordResponsePtrOutput {
	return i.ToSoaRecordResponsePtrOutputWithContext(context.Background())
}

func (i SoaRecordResponseArgs) ToSoaRecordResponsePtrOutputWithContext(ctx context.Context) SoaRecordResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoaRecordResponseOutput).ToSoaRecordResponsePtrOutputWithContext(ctx)
}

// SoaRecordResponsePtrInput is an input type that accepts SoaRecordResponseArgs, SoaRecordResponsePtr and SoaRecordResponsePtrOutput values.
// You can construct a concrete instance of `SoaRecordResponsePtrInput` via:
//
//          SoaRecordResponseArgs{...}
//
//  or:
//
//          nil
type SoaRecordResponsePtrInput interface {
	pulumi.Input

	ToSoaRecordResponsePtrOutput() SoaRecordResponsePtrOutput
	ToSoaRecordResponsePtrOutputWithContext(context.Context) SoaRecordResponsePtrOutput
}

type soaRecordResponsePtrType SoaRecordResponseArgs

func SoaRecordResponsePtr(v *SoaRecordResponseArgs) SoaRecordResponsePtrInput {
	return (*soaRecordResponsePtrType)(v)
}

func (*soaRecordResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SoaRecordResponse)(nil)).Elem()
}

func (i *soaRecordResponsePtrType) ToSoaRecordResponsePtrOutput() SoaRecordResponsePtrOutput {
	return i.ToSoaRecordResponsePtrOutputWithContext(context.Background())
}

func (i *soaRecordResponsePtrType) ToSoaRecordResponsePtrOutputWithContext(ctx context.Context) SoaRecordResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SoaRecordResponsePtrOutput)
}

// An SOA record.
type SoaRecordResponseOutput struct{ *pulumi.OutputState }

func (SoaRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SoaRecordResponse)(nil)).Elem()
}

func (o SoaRecordResponseOutput) ToSoaRecordResponseOutput() SoaRecordResponseOutput {
	return o
}

func (o SoaRecordResponseOutput) ToSoaRecordResponseOutputWithContext(ctx context.Context) SoaRecordResponseOutput {
	return o
}

func (o SoaRecordResponseOutput) ToSoaRecordResponsePtrOutput() SoaRecordResponsePtrOutput {
	return o.ToSoaRecordResponsePtrOutputWithContext(context.Background())
}

func (o SoaRecordResponseOutput) ToSoaRecordResponsePtrOutputWithContext(ctx context.Context) SoaRecordResponsePtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *SoaRecordResponse {
		return &v
	}).(SoaRecordResponsePtrOutput)
}

// The email contact for this SOA record.
func (o SoaRecordResponseOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// The expire time for this SOA record.
func (o SoaRecordResponseOutput) ExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *int { return v.ExpireTime }).(pulumi.IntPtrOutput)
}

// The domain name of the authoritative name server for this SOA record.
func (o SoaRecordResponseOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
func (o SoaRecordResponseOutput) MinimumTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *int { return v.MinimumTtl }).(pulumi.IntPtrOutput)
}

// The refresh value for this SOA record.
func (o SoaRecordResponseOutput) RefreshTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *int { return v.RefreshTime }).(pulumi.IntPtrOutput)
}

// The retry time for this SOA record.
func (o SoaRecordResponseOutput) RetryTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *int { return v.RetryTime }).(pulumi.IntPtrOutput)
}

// The serial number for this SOA record.
func (o SoaRecordResponseOutput) SerialNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SoaRecordResponse) *int { return v.SerialNumber }).(pulumi.IntPtrOutput)
}

type SoaRecordResponsePtrOutput struct{ *pulumi.OutputState }

func (SoaRecordResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SoaRecordResponse)(nil)).Elem()
}

func (o SoaRecordResponsePtrOutput) ToSoaRecordResponsePtrOutput() SoaRecordResponsePtrOutput {
	return o
}

func (o SoaRecordResponsePtrOutput) ToSoaRecordResponsePtrOutputWithContext(ctx context.Context) SoaRecordResponsePtrOutput {
	return o
}

func (o SoaRecordResponsePtrOutput) Elem() SoaRecordResponseOutput {
	return o.ApplyT(func(v *SoaRecordResponse) SoaRecordResponse { return *v }).(SoaRecordResponseOutput)
}

// The email contact for this SOA record.
func (o SoaRecordResponsePtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

// The expire time for this SOA record.
func (o SoaRecordResponsePtrOutput) ExpireTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *int {
		if v == nil {
			return nil
		}
		return v.ExpireTime
	}).(pulumi.IntPtrOutput)
}

// The domain name of the authoritative name server for this SOA record.
func (o SoaRecordResponsePtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// The minimum value for this SOA record. By convention this is used to determine the negative caching duration.
func (o SoaRecordResponsePtrOutput) MinimumTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *int {
		if v == nil {
			return nil
		}
		return v.MinimumTtl
	}).(pulumi.IntPtrOutput)
}

// The refresh value for this SOA record.
func (o SoaRecordResponsePtrOutput) RefreshTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *int {
		if v == nil {
			return nil
		}
		return v.RefreshTime
	}).(pulumi.IntPtrOutput)
}

// The retry time for this SOA record.
func (o SoaRecordResponsePtrOutput) RetryTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *int {
		if v == nil {
			return nil
		}
		return v.RetryTime
	}).(pulumi.IntPtrOutput)
}

// The serial number for this SOA record.
func (o SoaRecordResponsePtrOutput) SerialNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SoaRecordResponse) *int {
		if v == nil {
			return nil
		}
		return v.SerialNumber
	}).(pulumi.IntPtrOutput)
}

// An SRV record.
type SrvRecord struct {
	// The port value for this SRV record.
	Port *int `pulumi:"port"`
	// The priority value for this SRV record.
	Priority *int `pulumi:"priority"`
	// The target domain name for this SRV record.
	Target *string `pulumi:"target"`
	// The weight value for this SRV record.
	Weight *int `pulumi:"weight"`
}

// SrvRecordInput is an input type that accepts SrvRecordArgs and SrvRecordOutput values.
// You can construct a concrete instance of `SrvRecordInput` via:
//
//          SrvRecordArgs{...}
type SrvRecordInput interface {
	pulumi.Input

	ToSrvRecordOutput() SrvRecordOutput
	ToSrvRecordOutputWithContext(context.Context) SrvRecordOutput
}

// An SRV record.
type SrvRecordArgs struct {
	// The port value for this SRV record.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The priority value for this SRV record.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The target domain name for this SRV record.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The weight value for this SRV record.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (SrvRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SrvRecord)(nil)).Elem()
}

func (i SrvRecordArgs) ToSrvRecordOutput() SrvRecordOutput {
	return i.ToSrvRecordOutputWithContext(context.Background())
}

func (i SrvRecordArgs) ToSrvRecordOutputWithContext(ctx context.Context) SrvRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SrvRecordOutput)
}

// SrvRecordArrayInput is an input type that accepts SrvRecordArray and SrvRecordArrayOutput values.
// You can construct a concrete instance of `SrvRecordArrayInput` via:
//
//          SrvRecordArray{ SrvRecordArgs{...} }
type SrvRecordArrayInput interface {
	pulumi.Input

	ToSrvRecordArrayOutput() SrvRecordArrayOutput
	ToSrvRecordArrayOutputWithContext(context.Context) SrvRecordArrayOutput
}

type SrvRecordArray []SrvRecordInput

func (SrvRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SrvRecord)(nil)).Elem()
}

func (i SrvRecordArray) ToSrvRecordArrayOutput() SrvRecordArrayOutput {
	return i.ToSrvRecordArrayOutputWithContext(context.Background())
}

func (i SrvRecordArray) ToSrvRecordArrayOutputWithContext(ctx context.Context) SrvRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SrvRecordArrayOutput)
}

// An SRV record.
type SrvRecordOutput struct{ *pulumi.OutputState }

func (SrvRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SrvRecord)(nil)).Elem()
}

func (o SrvRecordOutput) ToSrvRecordOutput() SrvRecordOutput {
	return o
}

func (o SrvRecordOutput) ToSrvRecordOutputWithContext(ctx context.Context) SrvRecordOutput {
	return o
}

// The port value for this SRV record.
func (o SrvRecordOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SrvRecord) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The priority value for this SRV record.
func (o SrvRecordOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SrvRecord) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The target domain name for this SRV record.
func (o SrvRecordOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SrvRecord) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The weight value for this SRV record.
func (o SrvRecordOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SrvRecord) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type SrvRecordArrayOutput struct{ *pulumi.OutputState }

func (SrvRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SrvRecord)(nil)).Elem()
}

func (o SrvRecordArrayOutput) ToSrvRecordArrayOutput() SrvRecordArrayOutput {
	return o
}

func (o SrvRecordArrayOutput) ToSrvRecordArrayOutputWithContext(ctx context.Context) SrvRecordArrayOutput {
	return o
}

func (o SrvRecordArrayOutput) Index(i pulumi.IntInput) SrvRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SrvRecord {
		return vs[0].([]SrvRecord)[vs[1].(int)]
	}).(SrvRecordOutput)
}

// An SRV record.
type SrvRecordResponse struct {
	// The port value for this SRV record.
	Port *int `pulumi:"port"`
	// The priority value for this SRV record.
	Priority *int `pulumi:"priority"`
	// The target domain name for this SRV record.
	Target *string `pulumi:"target"`
	// The weight value for this SRV record.
	Weight *int `pulumi:"weight"`
}

// SrvRecordResponseInput is an input type that accepts SrvRecordResponseArgs and SrvRecordResponseOutput values.
// You can construct a concrete instance of `SrvRecordResponseInput` via:
//
//          SrvRecordResponseArgs{...}
type SrvRecordResponseInput interface {
	pulumi.Input

	ToSrvRecordResponseOutput() SrvRecordResponseOutput
	ToSrvRecordResponseOutputWithContext(context.Context) SrvRecordResponseOutput
}

// An SRV record.
type SrvRecordResponseArgs struct {
	// The port value for this SRV record.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The priority value for this SRV record.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The target domain name for this SRV record.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The weight value for this SRV record.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (SrvRecordResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SrvRecordResponse)(nil)).Elem()
}

func (i SrvRecordResponseArgs) ToSrvRecordResponseOutput() SrvRecordResponseOutput {
	return i.ToSrvRecordResponseOutputWithContext(context.Background())
}

func (i SrvRecordResponseArgs) ToSrvRecordResponseOutputWithContext(ctx context.Context) SrvRecordResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SrvRecordResponseOutput)
}

// SrvRecordResponseArrayInput is an input type that accepts SrvRecordResponseArray and SrvRecordResponseArrayOutput values.
// You can construct a concrete instance of `SrvRecordResponseArrayInput` via:
//
//          SrvRecordResponseArray{ SrvRecordResponseArgs{...} }
type SrvRecordResponseArrayInput interface {
	pulumi.Input

	ToSrvRecordResponseArrayOutput() SrvRecordResponseArrayOutput
	ToSrvRecordResponseArrayOutputWithContext(context.Context) SrvRecordResponseArrayOutput
}

type SrvRecordResponseArray []SrvRecordResponseInput

func (SrvRecordResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SrvRecordResponse)(nil)).Elem()
}

func (i SrvRecordResponseArray) ToSrvRecordResponseArrayOutput() SrvRecordResponseArrayOutput {
	return i.ToSrvRecordResponseArrayOutputWithContext(context.Background())
}

func (i SrvRecordResponseArray) ToSrvRecordResponseArrayOutputWithContext(ctx context.Context) SrvRecordResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SrvRecordResponseArrayOutput)
}

// An SRV record.
type SrvRecordResponseOutput struct{ *pulumi.OutputState }

func (SrvRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SrvRecordResponse)(nil)).Elem()
}

func (o SrvRecordResponseOutput) ToSrvRecordResponseOutput() SrvRecordResponseOutput {
	return o
}

func (o SrvRecordResponseOutput) ToSrvRecordResponseOutputWithContext(ctx context.Context) SrvRecordResponseOutput {
	return o
}

// The port value for this SRV record.
func (o SrvRecordResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SrvRecordResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The priority value for this SRV record.
func (o SrvRecordResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SrvRecordResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The target domain name for this SRV record.
func (o SrvRecordResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SrvRecordResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The weight value for this SRV record.
func (o SrvRecordResponseOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SrvRecordResponse) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type SrvRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (SrvRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SrvRecordResponse)(nil)).Elem()
}

func (o SrvRecordResponseArrayOutput) ToSrvRecordResponseArrayOutput() SrvRecordResponseArrayOutput {
	return o
}

func (o SrvRecordResponseArrayOutput) ToSrvRecordResponseArrayOutputWithContext(ctx context.Context) SrvRecordResponseArrayOutput {
	return o
}

func (o SrvRecordResponseArrayOutput) Index(i pulumi.IntInput) SrvRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SrvRecordResponse {
		return vs[0].([]SrvRecordResponse)[vs[1].(int)]
	}).(SrvRecordResponseOutput)
}

// List of all Static Routes.
type StaticRoute struct {
	// List of all address prefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// The name of the StaticRoute that is unique within a VnetRoute.
	Name *string `pulumi:"name"`
	// The ip address of the next hop.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
}

// StaticRouteInput is an input type that accepts StaticRouteArgs and StaticRouteOutput values.
// You can construct a concrete instance of `StaticRouteInput` via:
//
//          StaticRouteArgs{...}
type StaticRouteInput interface {
	pulumi.Input

	ToStaticRouteOutput() StaticRouteOutput
	ToStaticRouteOutputWithContext(context.Context) StaticRouteOutput
}

// List of all Static Routes.
type StaticRouteArgs struct {
	// List of all address prefixes.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// The name of the StaticRoute that is unique within a VnetRoute.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ip address of the next hop.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
}

func (StaticRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRoute)(nil)).Elem()
}

func (i StaticRouteArgs) ToStaticRouteOutput() StaticRouteOutput {
	return i.ToStaticRouteOutputWithContext(context.Background())
}

func (i StaticRouteArgs) ToStaticRouteOutputWithContext(ctx context.Context) StaticRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRouteOutput)
}

// StaticRouteArrayInput is an input type that accepts StaticRouteArray and StaticRouteArrayOutput values.
// You can construct a concrete instance of `StaticRouteArrayInput` via:
//
//          StaticRouteArray{ StaticRouteArgs{...} }
type StaticRouteArrayInput interface {
	pulumi.Input

	ToStaticRouteArrayOutput() StaticRouteArrayOutput
	ToStaticRouteArrayOutputWithContext(context.Context) StaticRouteArrayOutput
}

type StaticRouteArray []StaticRouteInput

func (StaticRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRoute)(nil)).Elem()
}

func (i StaticRouteArray) ToStaticRouteArrayOutput() StaticRouteArrayOutput {
	return i.ToStaticRouteArrayOutputWithContext(context.Background())
}

func (i StaticRouteArray) ToStaticRouteArrayOutputWithContext(ctx context.Context) StaticRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRouteArrayOutput)
}

// List of all Static Routes.
type StaticRouteOutput struct{ *pulumi.OutputState }

func (StaticRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRoute)(nil)).Elem()
}

func (o StaticRouteOutput) ToStaticRouteOutput() StaticRouteOutput {
	return o
}

func (o StaticRouteOutput) ToStaticRouteOutputWithContext(ctx context.Context) StaticRouteOutput {
	return o
}

// List of all address prefixes.
func (o StaticRouteOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StaticRoute) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// The name of the StaticRoute that is unique within a VnetRoute.
func (o StaticRouteOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRoute) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ip address of the next hop.
func (o StaticRouteOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRoute) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

type StaticRouteArrayOutput struct{ *pulumi.OutputState }

func (StaticRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRoute)(nil)).Elem()
}

func (o StaticRouteArrayOutput) ToStaticRouteArrayOutput() StaticRouteArrayOutput {
	return o
}

func (o StaticRouteArrayOutput) ToStaticRouteArrayOutputWithContext(ctx context.Context) StaticRouteArrayOutput {
	return o
}

func (o StaticRouteArrayOutput) Index(i pulumi.IntInput) StaticRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticRoute {
		return vs[0].([]StaticRoute)[vs[1].(int)]
	}).(StaticRouteOutput)
}

// List of all Static Routes.
type StaticRouteResponse struct {
	// List of all address prefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// The name of the StaticRoute that is unique within a VnetRoute.
	Name *string `pulumi:"name"`
	// The ip address of the next hop.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
}

// StaticRouteResponseInput is an input type that accepts StaticRouteResponseArgs and StaticRouteResponseOutput values.
// You can construct a concrete instance of `StaticRouteResponseInput` via:
//
//          StaticRouteResponseArgs{...}
type StaticRouteResponseInput interface {
	pulumi.Input

	ToStaticRouteResponseOutput() StaticRouteResponseOutput
	ToStaticRouteResponseOutputWithContext(context.Context) StaticRouteResponseOutput
}

// List of all Static Routes.
type StaticRouteResponseArgs struct {
	// List of all address prefixes.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// The name of the StaticRoute that is unique within a VnetRoute.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ip address of the next hop.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
}

func (StaticRouteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRouteResponse)(nil)).Elem()
}

func (i StaticRouteResponseArgs) ToStaticRouteResponseOutput() StaticRouteResponseOutput {
	return i.ToStaticRouteResponseOutputWithContext(context.Background())
}

func (i StaticRouteResponseArgs) ToStaticRouteResponseOutputWithContext(ctx context.Context) StaticRouteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRouteResponseOutput)
}

// StaticRouteResponseArrayInput is an input type that accepts StaticRouteResponseArray and StaticRouteResponseArrayOutput values.
// You can construct a concrete instance of `StaticRouteResponseArrayInput` via:
//
//          StaticRouteResponseArray{ StaticRouteResponseArgs{...} }
type StaticRouteResponseArrayInput interface {
	pulumi.Input

	ToStaticRouteResponseArrayOutput() StaticRouteResponseArrayOutput
	ToStaticRouteResponseArrayOutputWithContext(context.Context) StaticRouteResponseArrayOutput
}

type StaticRouteResponseArray []StaticRouteResponseInput

func (StaticRouteResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRouteResponse)(nil)).Elem()
}

func (i StaticRouteResponseArray) ToStaticRouteResponseArrayOutput() StaticRouteResponseArrayOutput {
	return i.ToStaticRouteResponseArrayOutputWithContext(context.Background())
}

func (i StaticRouteResponseArray) ToStaticRouteResponseArrayOutputWithContext(ctx context.Context) StaticRouteResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StaticRouteResponseArrayOutput)
}

// List of all Static Routes.
type StaticRouteResponseOutput struct{ *pulumi.OutputState }

func (StaticRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StaticRouteResponse)(nil)).Elem()
}

func (o StaticRouteResponseOutput) ToStaticRouteResponseOutput() StaticRouteResponseOutput {
	return o
}

func (o StaticRouteResponseOutput) ToStaticRouteResponseOutputWithContext(ctx context.Context) StaticRouteResponseOutput {
	return o
}

// List of all address prefixes.
func (o StaticRouteResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StaticRouteResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// The name of the StaticRoute that is unique within a VnetRoute.
func (o StaticRouteResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRouteResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ip address of the next hop.
func (o StaticRouteResponseOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StaticRouteResponse) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

type StaticRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (StaticRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StaticRouteResponse)(nil)).Elem()
}

func (o StaticRouteResponseArrayOutput) ToStaticRouteResponseArrayOutput() StaticRouteResponseArrayOutput {
	return o
}

func (o StaticRouteResponseArrayOutput) ToStaticRouteResponseArrayOutputWithContext(ctx context.Context) StaticRouteResponseArrayOutput {
	return o
}

func (o StaticRouteResponseArrayOutput) Index(i pulumi.IntInput) StaticRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StaticRouteResponse {
		return vs[0].([]StaticRouteResponse)[vs[1].(int)]
	}).(StaticRouteResponseOutput)
}

// A reference to a another resource
type SubResource struct {
	// Resource Id.
	Id *string `pulumi:"id"`
}

// SubResourceInput is an input type that accepts SubResourceArgs and SubResourceOutput values.
// You can construct a concrete instance of `SubResourceInput` via:
//
//          SubResourceArgs{...}
type SubResourceInput interface {
	pulumi.Input

	ToSubResourceOutput() SubResourceOutput
	ToSubResourceOutputWithContext(context.Context) SubResourceOutput
}

// A reference to a another resource
type SubResourceArgs struct {
	// Resource Id.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (i SubResourceArgs) ToSubResourceOutput() SubResourceOutput {
	return i.ToSubResourceOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput)
}

func (i SubResourceArgs) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput).ToSubResourcePtrOutputWithContext(ctx)
}

// SubResourcePtrInput is an input type that accepts SubResourceArgs, SubResourcePtr and SubResourcePtrOutput values.
// You can construct a concrete instance of `SubResourcePtrInput` via:
//
//          SubResourceArgs{...}
//
//  or:
//
//          nil
type SubResourcePtrInput interface {
	pulumi.Input

	ToSubResourcePtrOutput() SubResourcePtrOutput
	ToSubResourcePtrOutputWithContext(context.Context) SubResourcePtrOutput
}

type subResourcePtrType SubResourceArgs

func SubResourcePtr(v *SubResourceArgs) SubResourcePtrInput {
	return (*subResourcePtrType)(v)
}

func (*subResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (i *subResourcePtrType) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i *subResourcePtrType) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourcePtrOutput)
}

// SubResourceArrayInput is an input type that accepts SubResourceArray and SubResourceArrayOutput values.
// You can construct a concrete instance of `SubResourceArrayInput` via:
//
//          SubResourceArray{ SubResourceArgs{...} }
type SubResourceArrayInput interface {
	pulumi.Input

	ToSubResourceArrayOutput() SubResourceArrayOutput
	ToSubResourceArrayOutputWithContext(context.Context) SubResourceArrayOutput
}

type SubResourceArray []SubResourceInput

func (SubResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (i SubResourceArray) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return i.ToSubResourceArrayOutputWithContext(context.Background())
}

func (i SubResourceArray) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceArrayOutput)
}

// A reference to a another resource
type SubResourceOutput struct{ *pulumi.OutputState }

func (SubResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (o SubResourceOutput) ToSubResourceOutput() SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o.ToSubResourcePtrOutputWithContext(context.Background())
}

func (o SubResourceOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o.ApplyT(func(v SubResource) *SubResource {
		return &v
	}).(SubResourcePtrOutput)
}

// Resource Id.
func (o SubResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourcePtrOutput struct{ *pulumi.OutputState }

func (SubResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) Elem() SubResourceOutput {
	return o.ApplyT(func(v *SubResource) SubResource { return *v }).(SubResourceOutput)
}

// Resource Id.
func (o SubResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceArrayOutput struct{ *pulumi.OutputState }

func (SubResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) Index(i pulumi.IntInput) SubResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResource {
		return vs[0].([]SubResource)[vs[1].(int)]
	}).(SubResourceOutput)
}

// Reference to another subresource.
type SubResourceResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// SubResourceResponseInput is an input type that accepts SubResourceResponseArgs and SubResourceResponseOutput values.
// You can construct a concrete instance of `SubResourceResponseInput` via:
//
//          SubResourceResponseArgs{...}
type SubResourceResponseInput interface {
	pulumi.Input

	ToSubResourceResponseOutput() SubResourceResponseOutput
	ToSubResourceResponseOutputWithContext(context.Context) SubResourceResponseOutput
}

// Reference to another subresource.
type SubResourceResponseArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubResourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceResponse)(nil)).Elem()
}

func (i SubResourceResponseArgs) ToSubResourceResponseOutput() SubResourceResponseOutput {
	return i.ToSubResourceResponseOutputWithContext(context.Background())
}

func (i SubResourceResponseArgs) ToSubResourceResponseOutputWithContext(ctx context.Context) SubResourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponseOutput)
}

func (i SubResourceResponseArgs) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return i.ToSubResourceResponsePtrOutputWithContext(context.Background())
}

func (i SubResourceResponseArgs) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponseOutput).ToSubResourceResponsePtrOutputWithContext(ctx)
}

// SubResourceResponsePtrInput is an input type that accepts SubResourceResponseArgs, SubResourceResponsePtr and SubResourceResponsePtrOutput values.
// You can construct a concrete instance of `SubResourceResponsePtrInput` via:
//
//          SubResourceResponseArgs{...}
//
//  or:
//
//          nil
type SubResourceResponsePtrInput interface {
	pulumi.Input

	ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput
	ToSubResourceResponsePtrOutputWithContext(context.Context) SubResourceResponsePtrOutput
}

type subResourceResponsePtrType SubResourceResponseArgs

func SubResourceResponsePtr(v *SubResourceResponseArgs) SubResourceResponsePtrInput {
	return (*subResourceResponsePtrType)(v)
}

func (*subResourceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceResponse)(nil)).Elem()
}

func (i *subResourceResponsePtrType) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return i.ToSubResourceResponsePtrOutputWithContext(context.Background())
}

func (i *subResourceResponsePtrType) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponsePtrOutput)
}

// SubResourceResponseArrayInput is an input type that accepts SubResourceResponseArray and SubResourceResponseArrayOutput values.
// You can construct a concrete instance of `SubResourceResponseArrayInput` via:
//
//          SubResourceResponseArray{ SubResourceResponseArgs{...} }
type SubResourceResponseArrayInput interface {
	pulumi.Input

	ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput
	ToSubResourceResponseArrayOutputWithContext(context.Context) SubResourceResponseArrayOutput
}

type SubResourceResponseArray []SubResourceResponseInput

func (SubResourceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceResponse)(nil)).Elem()
}

func (i SubResourceResponseArray) ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput {
	return i.ToSubResourceResponseArrayOutputWithContext(context.Background())
}

func (i SubResourceResponseArray) ToSubResourceResponseArrayOutputWithContext(ctx context.Context) SubResourceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponseArrayOutput)
}

// Reference to another subresource.
type SubResourceResponseOutput struct{ *pulumi.OutputState }

func (SubResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutput() SubResourceResponseOutput {
	return o
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutputWithContext(ctx context.Context) SubResourceResponseOutput {
	return o
}

func (o SubResourceResponseOutput) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return o.ToSubResourceResponsePtrOutputWithContext(context.Background())
}

func (o SubResourceResponseOutput) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return o.ApplyT(func(v SubResourceResponse) *SubResourceResponse {
		return &v
	}).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o SubResourceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResourceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourceResponsePtrOutput struct{ *pulumi.OutputState }

func (SubResourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) Elem() SubResourceResponseOutput {
	return o.ApplyT(func(v *SubResourceResponse) SubResourceResponse { return *v }).(SubResourceResponseOutput)
}

// Resource ID.
func (o SubResourceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SubResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutputWithContext(ctx context.Context) SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) Index(i pulumi.IntInput) SubResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResourceResponse {
		return vs[0].([]SubResourceResponse)[vs[1].(int)]
	}).(SubResourceResponseOutput)
}

// Subnet in a virtual network resource.
type SubnetType struct {
	// The address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// List of address prefixes for the subnet.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// An array of references to the delegations on the subnet.
	Delegations []Delegation `pulumi:"delegations"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Array of IpAllocation which reference this subnet.
	IpAllocations []SubResource `pulumi:"ipAllocations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Nat gateway associated with this subnet.
	NatGateway *SubResource `pulumi:"natGateway"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupType `pulumi:"networkSecurityGroup"`
	// Enable or Disable apply network policies on private end point in the subnet.
	PrivateEndpointNetworkPolicies *string `pulumi:"privateEndpointNetworkPolicies"`
	// Enable or Disable apply network policies on private link service in the subnet.
	PrivateLinkServiceNetworkPolicies *string `pulumi:"privateLinkServiceNetworkPolicies"`
	// The reference to the RouteTable resource.
	RouteTable *RouteTableType `pulumi:"routeTable"`
	// An array of service endpoint policies.
	ServiceEndpointPolicies []ServiceEndpointPolicyType `pulumi:"serviceEndpointPolicies"`
	// An array of service endpoints.
	ServiceEndpoints []ServiceEndpointPropertiesFormat `pulumi:"serviceEndpoints"`
}

// SubnetTypeInput is an input type that accepts SubnetTypeArgs and SubnetTypeOutput values.
// You can construct a concrete instance of `SubnetTypeInput` via:
//
//          SubnetTypeArgs{...}
type SubnetTypeInput interface {
	pulumi.Input

	ToSubnetTypeOutput() SubnetTypeOutput
	ToSubnetTypeOutputWithContext(context.Context) SubnetTypeOutput
}

// Subnet in a virtual network resource.
type SubnetTypeArgs struct {
	// The address prefix for the subnet.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// List of address prefixes for the subnet.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// An array of references to the delegations on the subnet.
	Delegations DelegationArrayInput `pulumi:"delegations"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Array of IpAllocation which reference this subnet.
	IpAllocations SubResourceArrayInput `pulumi:"ipAllocations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Nat gateway associated with this subnet.
	NatGateway SubResourcePtrInput `pulumi:"natGateway"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup NetworkSecurityGroupTypePtrInput `pulumi:"networkSecurityGroup"`
	// Enable or Disable apply network policies on private end point in the subnet.
	PrivateEndpointNetworkPolicies pulumi.StringPtrInput `pulumi:"privateEndpointNetworkPolicies"`
	// Enable or Disable apply network policies on private link service in the subnet.
	PrivateLinkServiceNetworkPolicies pulumi.StringPtrInput `pulumi:"privateLinkServiceNetworkPolicies"`
	// The reference to the RouteTable resource.
	RouteTable RouteTableTypePtrInput `pulumi:"routeTable"`
	// An array of service endpoint policies.
	ServiceEndpointPolicies ServiceEndpointPolicyTypeArrayInput `pulumi:"serviceEndpointPolicies"`
	// An array of service endpoints.
	ServiceEndpoints ServiceEndpointPropertiesFormatArrayInput `pulumi:"serviceEndpoints"`
}

func (SubnetTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetType)(nil)).Elem()
}

func (i SubnetTypeArgs) ToSubnetTypeOutput() SubnetTypeOutput {
	return i.ToSubnetTypeOutputWithContext(context.Background())
}

func (i SubnetTypeArgs) ToSubnetTypeOutputWithContext(ctx context.Context) SubnetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypeOutput)
}

func (i SubnetTypeArgs) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return i.ToSubnetTypePtrOutputWithContext(context.Background())
}

func (i SubnetTypeArgs) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypeOutput).ToSubnetTypePtrOutputWithContext(ctx)
}

// SubnetTypePtrInput is an input type that accepts SubnetTypeArgs, SubnetTypePtr and SubnetTypePtrOutput values.
// You can construct a concrete instance of `SubnetTypePtrInput` via:
//
//          SubnetTypeArgs{...}
//
//  or:
//
//          nil
type SubnetTypePtrInput interface {
	pulumi.Input

	ToSubnetTypePtrOutput() SubnetTypePtrOutput
	ToSubnetTypePtrOutputWithContext(context.Context) SubnetTypePtrOutput
}

type subnetTypePtrType SubnetTypeArgs

func SubnetTypePtr(v *SubnetTypeArgs) SubnetTypePtrInput {
	return (*subnetTypePtrType)(v)
}

func (*subnetTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetType)(nil)).Elem()
}

func (i *subnetTypePtrType) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return i.ToSubnetTypePtrOutputWithContext(context.Background())
}

func (i *subnetTypePtrType) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypePtrOutput)
}

// SubnetTypeArrayInput is an input type that accepts SubnetTypeArray and SubnetTypeArrayOutput values.
// You can construct a concrete instance of `SubnetTypeArrayInput` via:
//
//          SubnetTypeArray{ SubnetTypeArgs{...} }
type SubnetTypeArrayInput interface {
	pulumi.Input

	ToSubnetTypeArrayOutput() SubnetTypeArrayOutput
	ToSubnetTypeArrayOutputWithContext(context.Context) SubnetTypeArrayOutput
}

type SubnetTypeArray []SubnetTypeInput

func (SubnetTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetType)(nil)).Elem()
}

func (i SubnetTypeArray) ToSubnetTypeArrayOutput() SubnetTypeArrayOutput {
	return i.ToSubnetTypeArrayOutputWithContext(context.Background())
}

func (i SubnetTypeArray) ToSubnetTypeArrayOutputWithContext(ctx context.Context) SubnetTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypeArrayOutput)
}

// Subnet in a virtual network resource.
type SubnetTypeOutput struct{ *pulumi.OutputState }

func (SubnetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetType)(nil)).Elem()
}

func (o SubnetTypeOutput) ToSubnetTypeOutput() SubnetTypeOutput {
	return o
}

func (o SubnetTypeOutput) ToSubnetTypeOutputWithContext(ctx context.Context) SubnetTypeOutput {
	return o
}

func (o SubnetTypeOutput) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return o.ToSubnetTypePtrOutputWithContext(context.Background())
}

func (o SubnetTypeOutput) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return o.ApplyT(func(v SubnetType) *SubnetType {
		return &v
	}).(SubnetTypePtrOutput)
}

// The address prefix for the subnet.
func (o SubnetTypeOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetTypeOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubnetType) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// An array of references to the delegations on the subnet.
func (o SubnetTypeOutput) Delegations() DelegationArrayOutput {
	return o.ApplyT(func(v SubnetType) []Delegation { return v.Delegations }).(DelegationArrayOutput)
}

// Resource ID.
func (o SubnetTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Array of IpAllocation which reference this subnet.
func (o SubnetTypeOutput) IpAllocations() SubResourceArrayOutput {
	return o.ApplyT(func(v SubnetType) []SubResource { return v.IpAllocations }).(SubResourceArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Nat gateway associated with this subnet.
func (o SubnetTypeOutput) NatGateway() SubResourcePtrOutput {
	return o.ApplyT(func(v SubnetType) *SubResource { return v.NatGateway }).(SubResourcePtrOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o SubnetTypeOutput) NetworkSecurityGroup() NetworkSecurityGroupTypePtrOutput {
	return o.ApplyT(func(v SubnetType) *NetworkSecurityGroupType { return v.NetworkSecurityGroup }).(NetworkSecurityGroupTypePtrOutput)
}

// Enable or Disable apply network policies on private end point in the subnet.
func (o SubnetTypeOutput) PrivateEndpointNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.PrivateEndpointNetworkPolicies }).(pulumi.StringPtrOutput)
}

// Enable or Disable apply network policies on private link service in the subnet.
func (o SubnetTypeOutput) PrivateLinkServiceNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.PrivateLinkServiceNetworkPolicies }).(pulumi.StringPtrOutput)
}

// The reference to the RouteTable resource.
func (o SubnetTypeOutput) RouteTable() RouteTableTypePtrOutput {
	return o.ApplyT(func(v SubnetType) *RouteTableType { return v.RouteTable }).(RouteTableTypePtrOutput)
}

// An array of service endpoint policies.
func (o SubnetTypeOutput) ServiceEndpointPolicies() ServiceEndpointPolicyTypeArrayOutput {
	return o.ApplyT(func(v SubnetType) []ServiceEndpointPolicyType { return v.ServiceEndpointPolicies }).(ServiceEndpointPolicyTypeArrayOutput)
}

// An array of service endpoints.
func (o SubnetTypeOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatArrayOutput {
	return o.ApplyT(func(v SubnetType) []ServiceEndpointPropertiesFormat { return v.ServiceEndpoints }).(ServiceEndpointPropertiesFormatArrayOutput)
}

type SubnetTypePtrOutput struct{ *pulumi.OutputState }

func (SubnetTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetType)(nil)).Elem()
}

func (o SubnetTypePtrOutput) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return o
}

func (o SubnetTypePtrOutput) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return o
}

func (o SubnetTypePtrOutput) Elem() SubnetTypeOutput {
	return o.ApplyT(func(v *SubnetType) SubnetType { return *v }).(SubnetTypeOutput)
}

// The address prefix for the subnet.
func (o SubnetTypePtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetTypePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SubnetType) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// An array of references to the delegations on the subnet.
func (o SubnetTypePtrOutput) Delegations() DelegationArrayOutput {
	return o.ApplyT(func(v *SubnetType) []Delegation {
		if v == nil {
			return nil
		}
		return v.Delegations
	}).(DelegationArrayOutput)
}

// Resource ID.
func (o SubnetTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Array of IpAllocation which reference this subnet.
func (o SubnetTypePtrOutput) IpAllocations() SubResourceArrayOutput {
	return o.ApplyT(func(v *SubnetType) []SubResource {
		if v == nil {
			return nil
		}
		return v.IpAllocations
	}).(SubResourceArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Nat gateway associated with this subnet.
func (o SubnetTypePtrOutput) NatGateway() SubResourcePtrOutput {
	return o.ApplyT(func(v *SubnetType) *SubResource {
		if v == nil {
			return nil
		}
		return v.NatGateway
	}).(SubResourcePtrOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o SubnetTypePtrOutput) NetworkSecurityGroup() NetworkSecurityGroupTypePtrOutput {
	return o.ApplyT(func(v *SubnetType) *NetworkSecurityGroupType {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupTypePtrOutput)
}

// Enable or Disable apply network policies on private end point in the subnet.
func (o SubnetTypePtrOutput) PrivateEndpointNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointNetworkPolicies
	}).(pulumi.StringPtrOutput)
}

// Enable or Disable apply network policies on private link service in the subnet.
func (o SubnetTypePtrOutput) PrivateLinkServiceNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceNetworkPolicies
	}).(pulumi.StringPtrOutput)
}

// The reference to the RouteTable resource.
func (o SubnetTypePtrOutput) RouteTable() RouteTableTypePtrOutput {
	return o.ApplyT(func(v *SubnetType) *RouteTableType {
		if v == nil {
			return nil
		}
		return v.RouteTable
	}).(RouteTableTypePtrOutput)
}

// An array of service endpoint policies.
func (o SubnetTypePtrOutput) ServiceEndpointPolicies() ServiceEndpointPolicyTypeArrayOutput {
	return o.ApplyT(func(v *SubnetType) []ServiceEndpointPolicyType {
		if v == nil {
			return nil
		}
		return v.ServiceEndpointPolicies
	}).(ServiceEndpointPolicyTypeArrayOutput)
}

// An array of service endpoints.
func (o SubnetTypePtrOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatArrayOutput {
	return o.ApplyT(func(v *SubnetType) []ServiceEndpointPropertiesFormat {
		if v == nil {
			return nil
		}
		return v.ServiceEndpoints
	}).(ServiceEndpointPropertiesFormatArrayOutput)
}

type SubnetTypeArrayOutput struct{ *pulumi.OutputState }

func (SubnetTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetType)(nil)).Elem()
}

func (o SubnetTypeArrayOutput) ToSubnetTypeArrayOutput() SubnetTypeArrayOutput {
	return o
}

func (o SubnetTypeArrayOutput) ToSubnetTypeArrayOutputWithContext(ctx context.Context) SubnetTypeArrayOutput {
	return o
}

func (o SubnetTypeArrayOutput) Index(i pulumi.IntInput) SubnetTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetType {
		return vs[0].([]SubnetType)[vs[1].(int)]
	}).(SubnetTypeOutput)
}

// Subnet in a virtual network resource.
type SubnetResponse struct {
	// The address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// List of address prefixes for the subnet.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// An array of references to the delegations on the subnet.
	Delegations []DelegationResponse `pulumi:"delegations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Array of IpAllocation which reference this subnet.
	IpAllocations []SubResourceResponse `pulumi:"ipAllocations"`
	// Array of IP configuration profiles which reference this subnet.
	IpConfigurationProfiles []IPConfigurationProfileResponse `pulumi:"ipConfigurationProfiles"`
	// An array of references to the network interface IP configurations using subnet.
	IpConfigurations []IPConfigurationResponse `pulumi:"ipConfigurations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Nat gateway associated with this subnet.
	NatGateway *SubResourceResponse `pulumi:"natGateway"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupResponse `pulumi:"networkSecurityGroup"`
	// Enable or Disable apply network policies on private end point in the subnet.
	PrivateEndpointNetworkPolicies *string `pulumi:"privateEndpointNetworkPolicies"`
	// An array of references to private endpoints.
	PrivateEndpoints []PrivateEndpointResponse `pulumi:"privateEndpoints"`
	// Enable or Disable apply network policies on private link service in the subnet.
	PrivateLinkServiceNetworkPolicies *string `pulumi:"privateLinkServiceNetworkPolicies"`
	// The provisioning state of the subnet resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
	Purpose string `pulumi:"purpose"`
	// An array of references to the external resources using subnet.
	ResourceNavigationLinks []ResourceNavigationLinkResponse `pulumi:"resourceNavigationLinks"`
	// The reference to the RouteTable resource.
	RouteTable *RouteTableResponse `pulumi:"routeTable"`
	// An array of references to services injecting into this subnet.
	ServiceAssociationLinks []ServiceAssociationLinkResponse `pulumi:"serviceAssociationLinks"`
	// An array of service endpoint policies.
	ServiceEndpointPolicies []ServiceEndpointPolicyResponse `pulumi:"serviceEndpointPolicies"`
	// An array of service endpoints.
	ServiceEndpoints []ServiceEndpointPropertiesFormatResponse `pulumi:"serviceEndpoints"`
}

// SubnetResponseInput is an input type that accepts SubnetResponseArgs and SubnetResponseOutput values.
// You can construct a concrete instance of `SubnetResponseInput` via:
//
//          SubnetResponseArgs{...}
type SubnetResponseInput interface {
	pulumi.Input

	ToSubnetResponseOutput() SubnetResponseOutput
	ToSubnetResponseOutputWithContext(context.Context) SubnetResponseOutput
}

// Subnet in a virtual network resource.
type SubnetResponseArgs struct {
	// The address prefix for the subnet.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// List of address prefixes for the subnet.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// An array of references to the delegations on the subnet.
	Delegations DelegationResponseArrayInput `pulumi:"delegations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Array of IpAllocation which reference this subnet.
	IpAllocations SubResourceResponseArrayInput `pulumi:"ipAllocations"`
	// Array of IP configuration profiles which reference this subnet.
	IpConfigurationProfiles IPConfigurationProfileResponseArrayInput `pulumi:"ipConfigurationProfiles"`
	// An array of references to the network interface IP configurations using subnet.
	IpConfigurations IPConfigurationResponseArrayInput `pulumi:"ipConfigurations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Nat gateway associated with this subnet.
	NatGateway SubResourceResponsePtrInput `pulumi:"natGateway"`
	// The reference to the NetworkSecurityGroup resource.
	NetworkSecurityGroup NetworkSecurityGroupResponsePtrInput `pulumi:"networkSecurityGroup"`
	// Enable or Disable apply network policies on private end point in the subnet.
	PrivateEndpointNetworkPolicies pulumi.StringPtrInput `pulumi:"privateEndpointNetworkPolicies"`
	// An array of references to private endpoints.
	PrivateEndpoints PrivateEndpointResponseArrayInput `pulumi:"privateEndpoints"`
	// Enable or Disable apply network policies on private link service in the subnet.
	PrivateLinkServiceNetworkPolicies pulumi.StringPtrInput `pulumi:"privateLinkServiceNetworkPolicies"`
	// The provisioning state of the subnet resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
	Purpose pulumi.StringInput `pulumi:"purpose"`
	// An array of references to the external resources using subnet.
	ResourceNavigationLinks ResourceNavigationLinkResponseArrayInput `pulumi:"resourceNavigationLinks"`
	// The reference to the RouteTable resource.
	RouteTable RouteTableResponsePtrInput `pulumi:"routeTable"`
	// An array of references to services injecting into this subnet.
	ServiceAssociationLinks ServiceAssociationLinkResponseArrayInput `pulumi:"serviceAssociationLinks"`
	// An array of service endpoint policies.
	ServiceEndpointPolicies ServiceEndpointPolicyResponseArrayInput `pulumi:"serviceEndpointPolicies"`
	// An array of service endpoints.
	ServiceEndpoints ServiceEndpointPropertiesFormatResponseArrayInput `pulumi:"serviceEndpoints"`
}

func (SubnetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResponse)(nil)).Elem()
}

func (i SubnetResponseArgs) ToSubnetResponseOutput() SubnetResponseOutput {
	return i.ToSubnetResponseOutputWithContext(context.Background())
}

func (i SubnetResponseArgs) ToSubnetResponseOutputWithContext(ctx context.Context) SubnetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponseOutput)
}

func (i SubnetResponseArgs) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return i.ToSubnetResponsePtrOutputWithContext(context.Background())
}

func (i SubnetResponseArgs) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponseOutput).ToSubnetResponsePtrOutputWithContext(ctx)
}

// SubnetResponsePtrInput is an input type that accepts SubnetResponseArgs, SubnetResponsePtr and SubnetResponsePtrOutput values.
// You can construct a concrete instance of `SubnetResponsePtrInput` via:
//
//          SubnetResponseArgs{...}
//
//  or:
//
//          nil
type SubnetResponsePtrInput interface {
	pulumi.Input

	ToSubnetResponsePtrOutput() SubnetResponsePtrOutput
	ToSubnetResponsePtrOutputWithContext(context.Context) SubnetResponsePtrOutput
}

type subnetResponsePtrType SubnetResponseArgs

func SubnetResponsePtr(v *SubnetResponseArgs) SubnetResponsePtrInput {
	return (*subnetResponsePtrType)(v)
}

func (*subnetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetResponse)(nil)).Elem()
}

func (i *subnetResponsePtrType) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return i.ToSubnetResponsePtrOutputWithContext(context.Background())
}

func (i *subnetResponsePtrType) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponsePtrOutput)
}

// SubnetResponseArrayInput is an input type that accepts SubnetResponseArray and SubnetResponseArrayOutput values.
// You can construct a concrete instance of `SubnetResponseArrayInput` via:
//
//          SubnetResponseArray{ SubnetResponseArgs{...} }
type SubnetResponseArrayInput interface {
	pulumi.Input

	ToSubnetResponseArrayOutput() SubnetResponseArrayOutput
	ToSubnetResponseArrayOutputWithContext(context.Context) SubnetResponseArrayOutput
}

type SubnetResponseArray []SubnetResponseInput

func (SubnetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResponse)(nil)).Elem()
}

func (i SubnetResponseArray) ToSubnetResponseArrayOutput() SubnetResponseArrayOutput {
	return i.ToSubnetResponseArrayOutputWithContext(context.Background())
}

func (i SubnetResponseArray) ToSubnetResponseArrayOutputWithContext(ctx context.Context) SubnetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponseArrayOutput)
}

// Subnet in a virtual network resource.
type SubnetResponseOutput struct{ *pulumi.OutputState }

func (SubnetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseOutput) ToSubnetResponseOutput() SubnetResponseOutput {
	return o
}

func (o SubnetResponseOutput) ToSubnetResponseOutputWithContext(ctx context.Context) SubnetResponseOutput {
	return o
}

func (o SubnetResponseOutput) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return o.ToSubnetResponsePtrOutputWithContext(context.Background())
}

func (o SubnetResponseOutput) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *SubnetResponse {
		return &v
	}).(SubnetResponsePtrOutput)
}

// The address prefix for the subnet.
func (o SubnetResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// An array of references to the delegations on the subnet.
func (o SubnetResponseOutput) Delegations() DelegationResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []DelegationResponse { return v.Delegations }).(DelegationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o SubnetResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Array of IpAllocation which reference this subnet.
func (o SubnetResponseOutput) IpAllocations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []SubResourceResponse { return v.IpAllocations }).(SubResourceResponseArrayOutput)
}

// Array of IP configuration profiles which reference this subnet.
func (o SubnetResponseOutput) IpConfigurationProfiles() IPConfigurationProfileResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []IPConfigurationProfileResponse { return v.IpConfigurationProfiles }).(IPConfigurationProfileResponseArrayOutput)
}

// An array of references to the network interface IP configurations using subnet.
func (o SubnetResponseOutput) IpConfigurations() IPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []IPConfigurationResponse { return v.IpConfigurations }).(IPConfigurationResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Nat gateway associated with this subnet.
func (o SubnetResponseOutput) NatGateway() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *SubResourceResponse { return v.NatGateway }).(SubResourceResponsePtrOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o SubnetResponseOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *NetworkSecurityGroupResponse { return v.NetworkSecurityGroup }).(NetworkSecurityGroupResponsePtrOutput)
}

// Enable or Disable apply network policies on private end point in the subnet.
func (o SubnetResponseOutput) PrivateEndpointNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.PrivateEndpointNetworkPolicies }).(pulumi.StringPtrOutput)
}

// An array of references to private endpoints.
func (o SubnetResponseOutput) PrivateEndpoints() PrivateEndpointResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []PrivateEndpointResponse { return v.PrivateEndpoints }).(PrivateEndpointResponseArrayOutput)
}

// Enable or Disable apply network policies on private link service in the subnet.
func (o SubnetResponseOutput) PrivateLinkServiceNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.PrivateLinkServiceNetworkPolicies }).(pulumi.StringPtrOutput)
}

// The provisioning state of the subnet resource.
func (o SubnetResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
func (o SubnetResponseOutput) Purpose() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetResponse) string { return v.Purpose }).(pulumi.StringOutput)
}

// An array of references to the external resources using subnet.
func (o SubnetResponseOutput) ResourceNavigationLinks() ResourceNavigationLinkResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ResourceNavigationLinkResponse { return v.ResourceNavigationLinks }).(ResourceNavigationLinkResponseArrayOutput)
}

// The reference to the RouteTable resource.
func (o SubnetResponseOutput) RouteTable() RouteTableResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *RouteTableResponse { return v.RouteTable }).(RouteTableResponsePtrOutput)
}

// An array of references to services injecting into this subnet.
func (o SubnetResponseOutput) ServiceAssociationLinks() ServiceAssociationLinkResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ServiceAssociationLinkResponse { return v.ServiceAssociationLinks }).(ServiceAssociationLinkResponseArrayOutput)
}

// An array of service endpoint policies.
func (o SubnetResponseOutput) ServiceEndpointPolicies() ServiceEndpointPolicyResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ServiceEndpointPolicyResponse { return v.ServiceEndpointPolicies }).(ServiceEndpointPolicyResponseArrayOutput)
}

// An array of service endpoints.
func (o SubnetResponseOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ServiceEndpointPropertiesFormatResponse { return v.ServiceEndpoints }).(ServiceEndpointPropertiesFormatResponseArrayOutput)
}

type SubnetResponsePtrOutput struct{ *pulumi.OutputState }

func (SubnetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetResponse)(nil)).Elem()
}

func (o SubnetResponsePtrOutput) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return o
}

func (o SubnetResponsePtrOutput) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return o
}

func (o SubnetResponsePtrOutput) Elem() SubnetResponseOutput {
	return o.ApplyT(func(v *SubnetResponse) SubnetResponse { return *v }).(SubnetResponseOutput)
}

// The address prefix for the subnet.
func (o SubnetResponsePtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// List of address prefixes for the subnet.
func (o SubnetResponsePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// An array of references to the delegations on the subnet.
func (o SubnetResponsePtrOutput) Delegations() DelegationResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []DelegationResponse {
		if v == nil {
			return nil
		}
		return v.Delegations
	}).(DelegationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SubnetResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Array of IpAllocation which reference this subnet.
func (o SubnetResponsePtrOutput) IpAllocations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.IpAllocations
	}).(SubResourceResponseArrayOutput)
}

// Array of IP configuration profiles which reference this subnet.
func (o SubnetResponsePtrOutput) IpConfigurationProfiles() IPConfigurationProfileResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []IPConfigurationProfileResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurationProfiles
	}).(IPConfigurationProfileResponseArrayOutput)
}

// An array of references to the network interface IP configurations using subnet.
func (o SubnetResponsePtrOutput) IpConfigurations() IPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []IPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(IPConfigurationResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Nat gateway associated with this subnet.
func (o SubnetResponsePtrOutput) NatGateway() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.NatGateway
	}).(SubResourceResponsePtrOutput)
}

// The reference to the NetworkSecurityGroup resource.
func (o SubnetResponsePtrOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *NetworkSecurityGroupResponse {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupResponsePtrOutput)
}

// Enable or Disable apply network policies on private end point in the subnet.
func (o SubnetResponsePtrOutput) PrivateEndpointNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateEndpointNetworkPolicies
	}).(pulumi.StringPtrOutput)
}

// An array of references to private endpoints.
func (o SubnetResponsePtrOutput) PrivateEndpoints() PrivateEndpointResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []PrivateEndpointResponse {
		if v == nil {
			return nil
		}
		return v.PrivateEndpoints
	}).(PrivateEndpointResponseArrayOutput)
}

// Enable or Disable apply network policies on private link service in the subnet.
func (o SubnetResponsePtrOutput) PrivateLinkServiceNetworkPolicies() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateLinkServiceNetworkPolicies
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the subnet resource.
func (o SubnetResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// A read-only string identifying the intention of use for this subnet based on delegations and other user-defined properties.
func (o SubnetResponsePtrOutput) Purpose() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Purpose
	}).(pulumi.StringPtrOutput)
}

// An array of references to the external resources using subnet.
func (o SubnetResponsePtrOutput) ResourceNavigationLinks() ResourceNavigationLinkResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ResourceNavigationLinkResponse {
		if v == nil {
			return nil
		}
		return v.ResourceNavigationLinks
	}).(ResourceNavigationLinkResponseArrayOutput)
}

// The reference to the RouteTable resource.
func (o SubnetResponsePtrOutput) RouteTable() RouteTableResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *RouteTableResponse {
		if v == nil {
			return nil
		}
		return v.RouteTable
	}).(RouteTableResponsePtrOutput)
}

// An array of references to services injecting into this subnet.
func (o SubnetResponsePtrOutput) ServiceAssociationLinks() ServiceAssociationLinkResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ServiceAssociationLinkResponse {
		if v == nil {
			return nil
		}
		return v.ServiceAssociationLinks
	}).(ServiceAssociationLinkResponseArrayOutput)
}

// An array of service endpoint policies.
func (o SubnetResponsePtrOutput) ServiceEndpointPolicies() ServiceEndpointPolicyResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ServiceEndpointPolicyResponse {
		if v == nil {
			return nil
		}
		return v.ServiceEndpointPolicies
	}).(ServiceEndpointPolicyResponseArrayOutput)
}

// An array of service endpoints.
func (o SubnetResponsePtrOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ServiceEndpointPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return v.ServiceEndpoints
	}).(ServiceEndpointPropertiesFormatResponseArrayOutput)
}

type SubnetResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutput() SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutputWithContext(ctx context.Context) SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) Index(i pulumi.IntInput) SubnetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetResponse {
		return vs[0].([]SubnetResponse)[vs[1].(int)]
	}).(SubnetResponseOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationProperties struct {
	// Flag to enable/disable traffic analytics.
	Enabled *bool `pulumi:"enabled"`
	// The interval in minutes which would decide how frequently TA service should do flow analytics.
	TrafficAnalyticsInterval *int `pulumi:"trafficAnalyticsInterval"`
	// The resource guid of the attached workspace.
	WorkspaceId *string `pulumi:"workspaceId"`
	// The location of the attached workspace.
	WorkspaceRegion *string `pulumi:"workspaceRegion"`
	// Resource Id of the attached workspace.
	WorkspaceResourceId *string `pulumi:"workspaceResourceId"`
}

// TrafficAnalyticsConfigurationPropertiesInput is an input type that accepts TrafficAnalyticsConfigurationPropertiesArgs and TrafficAnalyticsConfigurationPropertiesOutput values.
// You can construct a concrete instance of `TrafficAnalyticsConfigurationPropertiesInput` via:
//
//          TrafficAnalyticsConfigurationPropertiesArgs{...}
type TrafficAnalyticsConfigurationPropertiesInput interface {
	pulumi.Input

	ToTrafficAnalyticsConfigurationPropertiesOutput() TrafficAnalyticsConfigurationPropertiesOutput
	ToTrafficAnalyticsConfigurationPropertiesOutputWithContext(context.Context) TrafficAnalyticsConfigurationPropertiesOutput
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationPropertiesArgs struct {
	// Flag to enable/disable traffic analytics.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The interval in minutes which would decide how frequently TA service should do flow analytics.
	TrafficAnalyticsInterval pulumi.IntPtrInput `pulumi:"trafficAnalyticsInterval"`
	// The resource guid of the attached workspace.
	WorkspaceId pulumi.StringPtrInput `pulumi:"workspaceId"`
	// The location of the attached workspace.
	WorkspaceRegion pulumi.StringPtrInput `pulumi:"workspaceRegion"`
	// Resource Id of the attached workspace.
	WorkspaceResourceId pulumi.StringPtrInput `pulumi:"workspaceResourceId"`
}

func (TrafficAnalyticsConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsConfigurationProperties)(nil)).Elem()
}

func (i TrafficAnalyticsConfigurationPropertiesArgs) ToTrafficAnalyticsConfigurationPropertiesOutput() TrafficAnalyticsConfigurationPropertiesOutput {
	return i.ToTrafficAnalyticsConfigurationPropertiesOutputWithContext(context.Background())
}

func (i TrafficAnalyticsConfigurationPropertiesArgs) ToTrafficAnalyticsConfigurationPropertiesOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsConfigurationPropertiesOutput)
}

func (i TrafficAnalyticsConfigurationPropertiesArgs) ToTrafficAnalyticsConfigurationPropertiesPtrOutput() TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return i.ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i TrafficAnalyticsConfigurationPropertiesArgs) ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsConfigurationPropertiesOutput).ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(ctx)
}

// TrafficAnalyticsConfigurationPropertiesPtrInput is an input type that accepts TrafficAnalyticsConfigurationPropertiesArgs, TrafficAnalyticsConfigurationPropertiesPtr and TrafficAnalyticsConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `TrafficAnalyticsConfigurationPropertiesPtrInput` via:
//
//          TrafficAnalyticsConfigurationPropertiesArgs{...}
//
//  or:
//
//          nil
type TrafficAnalyticsConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToTrafficAnalyticsConfigurationPropertiesPtrOutput() TrafficAnalyticsConfigurationPropertiesPtrOutput
	ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(context.Context) TrafficAnalyticsConfigurationPropertiesPtrOutput
}

type trafficAnalyticsConfigurationPropertiesPtrType TrafficAnalyticsConfigurationPropertiesArgs

func TrafficAnalyticsConfigurationPropertiesPtr(v *TrafficAnalyticsConfigurationPropertiesArgs) TrafficAnalyticsConfigurationPropertiesPtrInput {
	return (*trafficAnalyticsConfigurationPropertiesPtrType)(v)
}

func (*trafficAnalyticsConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsConfigurationProperties)(nil)).Elem()
}

func (i *trafficAnalyticsConfigurationPropertiesPtrType) ToTrafficAnalyticsConfigurationPropertiesPtrOutput() TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return i.ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *trafficAnalyticsConfigurationPropertiesPtrType) ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsConfigurationPropertiesPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsConfigurationProperties)(nil)).Elem()
}

func (o TrafficAnalyticsConfigurationPropertiesOutput) ToTrafficAnalyticsConfigurationPropertiesOutput() TrafficAnalyticsConfigurationPropertiesOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesOutput) ToTrafficAnalyticsConfigurationPropertiesOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesOutput) ToTrafficAnalyticsConfigurationPropertiesPtrOutput() TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return o.ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o TrafficAnalyticsConfigurationPropertiesOutput) ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationProperties) *TrafficAnalyticsConfigurationProperties {
		return &v
	}).(TrafficAnalyticsConfigurationPropertiesPtrOutput)
}

// Flag to enable/disable traffic analytics.
func (o TrafficAnalyticsConfigurationPropertiesOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationProperties) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The interval in minutes which would decide how frequently TA service should do flow analytics.
func (o TrafficAnalyticsConfigurationPropertiesOutput) TrafficAnalyticsInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationProperties) *int { return v.TrafficAnalyticsInterval }).(pulumi.IntPtrOutput)
}

// The resource guid of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationProperties) *string { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

// The location of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesOutput) WorkspaceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationProperties) *string { return v.WorkspaceRegion }).(pulumi.StringPtrOutput)
}

// Resource Id of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationProperties) *string { return v.WorkspaceResourceId }).(pulumi.StringPtrOutput)
}

type TrafficAnalyticsConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsConfigurationProperties)(nil)).Elem()
}

func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) ToTrafficAnalyticsConfigurationPropertiesPtrOutput() TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) ToTrafficAnalyticsConfigurationPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) Elem() TrafficAnalyticsConfigurationPropertiesOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationProperties) TrafficAnalyticsConfigurationProperties { return *v }).(TrafficAnalyticsConfigurationPropertiesOutput)
}

// Flag to enable/disable traffic analytics.
func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationProperties) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The interval in minutes which would decide how frequently TA service should do flow analytics.
func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) TrafficAnalyticsInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationProperties) *int {
		if v == nil {
			return nil
		}
		return v.TrafficAnalyticsInterval
	}).(pulumi.IntPtrOutput)
}

// The resource guid of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceId
	}).(pulumi.StringPtrOutput)
}

// The location of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) WorkspaceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceRegion
	}).(pulumi.StringPtrOutput)
}

// Resource Id of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesPtrOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationProperties) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationPropertiesResponse struct {
	// Flag to enable/disable traffic analytics.
	Enabled *bool `pulumi:"enabled"`
	// The interval in minutes which would decide how frequently TA service should do flow analytics.
	TrafficAnalyticsInterval *int `pulumi:"trafficAnalyticsInterval"`
	// The resource guid of the attached workspace.
	WorkspaceId *string `pulumi:"workspaceId"`
	// The location of the attached workspace.
	WorkspaceRegion *string `pulumi:"workspaceRegion"`
	// Resource Id of the attached workspace.
	WorkspaceResourceId *string `pulumi:"workspaceResourceId"`
}

// TrafficAnalyticsConfigurationPropertiesResponseInput is an input type that accepts TrafficAnalyticsConfigurationPropertiesResponseArgs and TrafficAnalyticsConfigurationPropertiesResponseOutput values.
// You can construct a concrete instance of `TrafficAnalyticsConfigurationPropertiesResponseInput` via:
//
//          TrafficAnalyticsConfigurationPropertiesResponseArgs{...}
type TrafficAnalyticsConfigurationPropertiesResponseInput interface {
	pulumi.Input

	ToTrafficAnalyticsConfigurationPropertiesResponseOutput() TrafficAnalyticsConfigurationPropertiesResponseOutput
	ToTrafficAnalyticsConfigurationPropertiesResponseOutputWithContext(context.Context) TrafficAnalyticsConfigurationPropertiesResponseOutput
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationPropertiesResponseArgs struct {
	// Flag to enable/disable traffic analytics.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The interval in minutes which would decide how frequently TA service should do flow analytics.
	TrafficAnalyticsInterval pulumi.IntPtrInput `pulumi:"trafficAnalyticsInterval"`
	// The resource guid of the attached workspace.
	WorkspaceId pulumi.StringPtrInput `pulumi:"workspaceId"`
	// The location of the attached workspace.
	WorkspaceRegion pulumi.StringPtrInput `pulumi:"workspaceRegion"`
	// Resource Id of the attached workspace.
	WorkspaceResourceId pulumi.StringPtrInput `pulumi:"workspaceResourceId"`
}

func (TrafficAnalyticsConfigurationPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsConfigurationPropertiesResponse)(nil)).Elem()
}

func (i TrafficAnalyticsConfigurationPropertiesResponseArgs) ToTrafficAnalyticsConfigurationPropertiesResponseOutput() TrafficAnalyticsConfigurationPropertiesResponseOutput {
	return i.ToTrafficAnalyticsConfigurationPropertiesResponseOutputWithContext(context.Background())
}

func (i TrafficAnalyticsConfigurationPropertiesResponseArgs) ToTrafficAnalyticsConfigurationPropertiesResponseOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsConfigurationPropertiesResponseOutput)
}

func (i TrafficAnalyticsConfigurationPropertiesResponseArgs) ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutput() TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return i.ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i TrafficAnalyticsConfigurationPropertiesResponseArgs) ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsConfigurationPropertiesResponseOutput).ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutputWithContext(ctx)
}

// TrafficAnalyticsConfigurationPropertiesResponsePtrInput is an input type that accepts TrafficAnalyticsConfigurationPropertiesResponseArgs, TrafficAnalyticsConfigurationPropertiesResponsePtr and TrafficAnalyticsConfigurationPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `TrafficAnalyticsConfigurationPropertiesResponsePtrInput` via:
//
//          TrafficAnalyticsConfigurationPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type TrafficAnalyticsConfigurationPropertiesResponsePtrInput interface {
	pulumi.Input

	ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutput() TrafficAnalyticsConfigurationPropertiesResponsePtrOutput
	ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutputWithContext(context.Context) TrafficAnalyticsConfigurationPropertiesResponsePtrOutput
}

type trafficAnalyticsConfigurationPropertiesResponsePtrType TrafficAnalyticsConfigurationPropertiesResponseArgs

func TrafficAnalyticsConfigurationPropertiesResponsePtr(v *TrafficAnalyticsConfigurationPropertiesResponseArgs) TrafficAnalyticsConfigurationPropertiesResponsePtrInput {
	return (*trafficAnalyticsConfigurationPropertiesResponsePtrType)(v)
}

func (*trafficAnalyticsConfigurationPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsConfigurationPropertiesResponse)(nil)).Elem()
}

func (i *trafficAnalyticsConfigurationPropertiesResponsePtrType) ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutput() TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return i.ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *trafficAnalyticsConfigurationPropertiesResponsePtrType) ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsConfigurationPropertiesResponsePtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsConfigurationPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsConfigurationPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsConfigurationPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) ToTrafficAnalyticsConfigurationPropertiesResponseOutput() TrafficAnalyticsConfigurationPropertiesResponseOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) ToTrafficAnalyticsConfigurationPropertiesResponseOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesResponseOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutput() TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o.ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *TrafficAnalyticsConfigurationPropertiesResponse {
		return &v
	}).(TrafficAnalyticsConfigurationPropertiesResponsePtrOutput)
}

// Flag to enable/disable traffic analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The interval in minutes which would decide how frequently TA service should do flow analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) TrafficAnalyticsInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *int { return v.TrafficAnalyticsInterval }).(pulumi.IntPtrOutput)
}

// The resource guid of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *string { return v.WorkspaceId }).(pulumi.StringPtrOutput)
}

// The location of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) WorkspaceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *string { return v.WorkspaceRegion }).(pulumi.StringPtrOutput)
}

// Resource Id of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponseOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsConfigurationPropertiesResponse) *string { return v.WorkspaceResourceId }).(pulumi.StringPtrOutput)
}

type TrafficAnalyticsConfigurationPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsConfigurationPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutput() TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) ToTrafficAnalyticsConfigurationPropertiesResponsePtrOutputWithContext(ctx context.Context) TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) Elem() TrafficAnalyticsConfigurationPropertiesResponseOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) TrafficAnalyticsConfigurationPropertiesResponse {
		return *v
	}).(TrafficAnalyticsConfigurationPropertiesResponseOutput)
}

// Flag to enable/disable traffic analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The interval in minutes which would decide how frequently TA service should do flow analytics.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) TrafficAnalyticsInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.TrafficAnalyticsInterval
	}).(pulumi.IntPtrOutput)
}

// The resource guid of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) WorkspaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceId
	}).(pulumi.StringPtrOutput)
}

// The location of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) WorkspaceRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceRegion
	}).(pulumi.StringPtrOutput)
}

// Resource Id of the attached workspace.
func (o TrafficAnalyticsConfigurationPropertiesResponsePtrOutput) WorkspaceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsConfigurationPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.WorkspaceResourceId
	}).(pulumi.StringPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsProperties struct {
	// Parameters that define the configuration of traffic analytics.
	NetworkWatcherFlowAnalyticsConfiguration *TrafficAnalyticsConfigurationProperties `pulumi:"networkWatcherFlowAnalyticsConfiguration"`
}

// TrafficAnalyticsPropertiesInput is an input type that accepts TrafficAnalyticsPropertiesArgs and TrafficAnalyticsPropertiesOutput values.
// You can construct a concrete instance of `TrafficAnalyticsPropertiesInput` via:
//
//          TrafficAnalyticsPropertiesArgs{...}
type TrafficAnalyticsPropertiesInput interface {
	pulumi.Input

	ToTrafficAnalyticsPropertiesOutput() TrafficAnalyticsPropertiesOutput
	ToTrafficAnalyticsPropertiesOutputWithContext(context.Context) TrafficAnalyticsPropertiesOutput
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsPropertiesArgs struct {
	// Parameters that define the configuration of traffic analytics.
	NetworkWatcherFlowAnalyticsConfiguration TrafficAnalyticsConfigurationPropertiesPtrInput `pulumi:"networkWatcherFlowAnalyticsConfiguration"`
}

func (TrafficAnalyticsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsProperties)(nil)).Elem()
}

func (i TrafficAnalyticsPropertiesArgs) ToTrafficAnalyticsPropertiesOutput() TrafficAnalyticsPropertiesOutput {
	return i.ToTrafficAnalyticsPropertiesOutputWithContext(context.Background())
}

func (i TrafficAnalyticsPropertiesArgs) ToTrafficAnalyticsPropertiesOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsPropertiesOutput)
}

func (i TrafficAnalyticsPropertiesArgs) ToTrafficAnalyticsPropertiesPtrOutput() TrafficAnalyticsPropertiesPtrOutput {
	return i.ToTrafficAnalyticsPropertiesPtrOutputWithContext(context.Background())
}

func (i TrafficAnalyticsPropertiesArgs) ToTrafficAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsPropertiesOutput).ToTrafficAnalyticsPropertiesPtrOutputWithContext(ctx)
}

// TrafficAnalyticsPropertiesPtrInput is an input type that accepts TrafficAnalyticsPropertiesArgs, TrafficAnalyticsPropertiesPtr and TrafficAnalyticsPropertiesPtrOutput values.
// You can construct a concrete instance of `TrafficAnalyticsPropertiesPtrInput` via:
//
//          TrafficAnalyticsPropertiesArgs{...}
//
//  or:
//
//          nil
type TrafficAnalyticsPropertiesPtrInput interface {
	pulumi.Input

	ToTrafficAnalyticsPropertiesPtrOutput() TrafficAnalyticsPropertiesPtrOutput
	ToTrafficAnalyticsPropertiesPtrOutputWithContext(context.Context) TrafficAnalyticsPropertiesPtrOutput
}

type trafficAnalyticsPropertiesPtrType TrafficAnalyticsPropertiesArgs

func TrafficAnalyticsPropertiesPtr(v *TrafficAnalyticsPropertiesArgs) TrafficAnalyticsPropertiesPtrInput {
	return (*trafficAnalyticsPropertiesPtrType)(v)
}

func (*trafficAnalyticsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsProperties)(nil)).Elem()
}

func (i *trafficAnalyticsPropertiesPtrType) ToTrafficAnalyticsPropertiesPtrOutput() TrafficAnalyticsPropertiesPtrOutput {
	return i.ToTrafficAnalyticsPropertiesPtrOutputWithContext(context.Background())
}

func (i *trafficAnalyticsPropertiesPtrType) ToTrafficAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsPropertiesPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsPropertiesOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsProperties)(nil)).Elem()
}

func (o TrafficAnalyticsPropertiesOutput) ToTrafficAnalyticsPropertiesOutput() TrafficAnalyticsPropertiesOutput {
	return o
}

func (o TrafficAnalyticsPropertiesOutput) ToTrafficAnalyticsPropertiesOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesOutput {
	return o
}

func (o TrafficAnalyticsPropertiesOutput) ToTrafficAnalyticsPropertiesPtrOutput() TrafficAnalyticsPropertiesPtrOutput {
	return o.ToTrafficAnalyticsPropertiesPtrOutputWithContext(context.Background())
}

func (o TrafficAnalyticsPropertiesOutput) ToTrafficAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsProperties) *TrafficAnalyticsProperties {
		return &v
	}).(TrafficAnalyticsPropertiesPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
func (o TrafficAnalyticsPropertiesOutput) NetworkWatcherFlowAnalyticsConfiguration() TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsProperties) *TrafficAnalyticsConfigurationProperties {
		return v.NetworkWatcherFlowAnalyticsConfiguration
	}).(TrafficAnalyticsConfigurationPropertiesPtrOutput)
}

type TrafficAnalyticsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsProperties)(nil)).Elem()
}

func (o TrafficAnalyticsPropertiesPtrOutput) ToTrafficAnalyticsPropertiesPtrOutput() TrafficAnalyticsPropertiesPtrOutput {
	return o
}

func (o TrafficAnalyticsPropertiesPtrOutput) ToTrafficAnalyticsPropertiesPtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesPtrOutput {
	return o
}

func (o TrafficAnalyticsPropertiesPtrOutput) Elem() TrafficAnalyticsPropertiesOutput {
	return o.ApplyT(func(v *TrafficAnalyticsProperties) TrafficAnalyticsProperties { return *v }).(TrafficAnalyticsPropertiesOutput)
}

// Parameters that define the configuration of traffic analytics.
func (o TrafficAnalyticsPropertiesPtrOutput) NetworkWatcherFlowAnalyticsConfiguration() TrafficAnalyticsConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsProperties) *TrafficAnalyticsConfigurationProperties {
		if v == nil {
			return nil
		}
		return v.NetworkWatcherFlowAnalyticsConfiguration
	}).(TrafficAnalyticsConfigurationPropertiesPtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsPropertiesResponse struct {
	// Parameters that define the configuration of traffic analytics.
	NetworkWatcherFlowAnalyticsConfiguration *TrafficAnalyticsConfigurationPropertiesResponse `pulumi:"networkWatcherFlowAnalyticsConfiguration"`
}

// TrafficAnalyticsPropertiesResponseInput is an input type that accepts TrafficAnalyticsPropertiesResponseArgs and TrafficAnalyticsPropertiesResponseOutput values.
// You can construct a concrete instance of `TrafficAnalyticsPropertiesResponseInput` via:
//
//          TrafficAnalyticsPropertiesResponseArgs{...}
type TrafficAnalyticsPropertiesResponseInput interface {
	pulumi.Input

	ToTrafficAnalyticsPropertiesResponseOutput() TrafficAnalyticsPropertiesResponseOutput
	ToTrafficAnalyticsPropertiesResponseOutputWithContext(context.Context) TrafficAnalyticsPropertiesResponseOutput
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsPropertiesResponseArgs struct {
	// Parameters that define the configuration of traffic analytics.
	NetworkWatcherFlowAnalyticsConfiguration TrafficAnalyticsConfigurationPropertiesResponsePtrInput `pulumi:"networkWatcherFlowAnalyticsConfiguration"`
}

func (TrafficAnalyticsPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsPropertiesResponse)(nil)).Elem()
}

func (i TrafficAnalyticsPropertiesResponseArgs) ToTrafficAnalyticsPropertiesResponseOutput() TrafficAnalyticsPropertiesResponseOutput {
	return i.ToTrafficAnalyticsPropertiesResponseOutputWithContext(context.Background())
}

func (i TrafficAnalyticsPropertiesResponseArgs) ToTrafficAnalyticsPropertiesResponseOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsPropertiesResponseOutput)
}

func (i TrafficAnalyticsPropertiesResponseArgs) ToTrafficAnalyticsPropertiesResponsePtrOutput() TrafficAnalyticsPropertiesResponsePtrOutput {
	return i.ToTrafficAnalyticsPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i TrafficAnalyticsPropertiesResponseArgs) ToTrafficAnalyticsPropertiesResponsePtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsPropertiesResponseOutput).ToTrafficAnalyticsPropertiesResponsePtrOutputWithContext(ctx)
}

// TrafficAnalyticsPropertiesResponsePtrInput is an input type that accepts TrafficAnalyticsPropertiesResponseArgs, TrafficAnalyticsPropertiesResponsePtr and TrafficAnalyticsPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `TrafficAnalyticsPropertiesResponsePtrInput` via:
//
//          TrafficAnalyticsPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type TrafficAnalyticsPropertiesResponsePtrInput interface {
	pulumi.Input

	ToTrafficAnalyticsPropertiesResponsePtrOutput() TrafficAnalyticsPropertiesResponsePtrOutput
	ToTrafficAnalyticsPropertiesResponsePtrOutputWithContext(context.Context) TrafficAnalyticsPropertiesResponsePtrOutput
}

type trafficAnalyticsPropertiesResponsePtrType TrafficAnalyticsPropertiesResponseArgs

func TrafficAnalyticsPropertiesResponsePtr(v *TrafficAnalyticsPropertiesResponseArgs) TrafficAnalyticsPropertiesResponsePtrInput {
	return (*trafficAnalyticsPropertiesResponsePtrType)(v)
}

func (*trafficAnalyticsPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsPropertiesResponse)(nil)).Elem()
}

func (i *trafficAnalyticsPropertiesResponsePtrType) ToTrafficAnalyticsPropertiesResponsePtrOutput() TrafficAnalyticsPropertiesResponsePtrOutput {
	return i.ToTrafficAnalyticsPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *trafficAnalyticsPropertiesResponsePtrType) ToTrafficAnalyticsPropertiesResponsePtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficAnalyticsPropertiesResponsePtrOutput)
}

// Parameters that define the configuration of traffic analytics.
type TrafficAnalyticsPropertiesResponseOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficAnalyticsPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsPropertiesResponseOutput) ToTrafficAnalyticsPropertiesResponseOutput() TrafficAnalyticsPropertiesResponseOutput {
	return o
}

func (o TrafficAnalyticsPropertiesResponseOutput) ToTrafficAnalyticsPropertiesResponseOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesResponseOutput {
	return o
}

func (o TrafficAnalyticsPropertiesResponseOutput) ToTrafficAnalyticsPropertiesResponsePtrOutput() TrafficAnalyticsPropertiesResponsePtrOutput {
	return o.ToTrafficAnalyticsPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o TrafficAnalyticsPropertiesResponseOutput) ToTrafficAnalyticsPropertiesResponsePtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsPropertiesResponse) *TrafficAnalyticsPropertiesResponse {
		return &v
	}).(TrafficAnalyticsPropertiesResponsePtrOutput)
}

// Parameters that define the configuration of traffic analytics.
func (o TrafficAnalyticsPropertiesResponseOutput) NetworkWatcherFlowAnalyticsConfiguration() TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v TrafficAnalyticsPropertiesResponse) *TrafficAnalyticsConfigurationPropertiesResponse {
		return v.NetworkWatcherFlowAnalyticsConfiguration
	}).(TrafficAnalyticsConfigurationPropertiesResponsePtrOutput)
}

type TrafficAnalyticsPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (TrafficAnalyticsPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrafficAnalyticsPropertiesResponse)(nil)).Elem()
}

func (o TrafficAnalyticsPropertiesResponsePtrOutput) ToTrafficAnalyticsPropertiesResponsePtrOutput() TrafficAnalyticsPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsPropertiesResponsePtrOutput) ToTrafficAnalyticsPropertiesResponsePtrOutputWithContext(ctx context.Context) TrafficAnalyticsPropertiesResponsePtrOutput {
	return o
}

func (o TrafficAnalyticsPropertiesResponsePtrOutput) Elem() TrafficAnalyticsPropertiesResponseOutput {
	return o.ApplyT(func(v *TrafficAnalyticsPropertiesResponse) TrafficAnalyticsPropertiesResponse { return *v }).(TrafficAnalyticsPropertiesResponseOutput)
}

// Parameters that define the configuration of traffic analytics.
func (o TrafficAnalyticsPropertiesResponsePtrOutput) NetworkWatcherFlowAnalyticsConfiguration() TrafficAnalyticsConfigurationPropertiesResponsePtrOutput {
	return o.ApplyT(func(v *TrafficAnalyticsPropertiesResponse) *TrafficAnalyticsConfigurationPropertiesResponse {
		if v == nil {
			return nil
		}
		return v.NetworkWatcherFlowAnalyticsConfiguration
	}).(TrafficAnalyticsConfigurationPropertiesResponsePtrOutput)
}

// An traffic selector policy for a virtual network gateway connection.
type TrafficSelectorPolicy struct {
	// A collection of local address spaces in CIDR format.
	LocalAddressRanges []string `pulumi:"localAddressRanges"`
	// A collection of remote address spaces in CIDR format.
	RemoteAddressRanges []string `pulumi:"remoteAddressRanges"`
}

// TrafficSelectorPolicyInput is an input type that accepts TrafficSelectorPolicyArgs and TrafficSelectorPolicyOutput values.
// You can construct a concrete instance of `TrafficSelectorPolicyInput` via:
//
//          TrafficSelectorPolicyArgs{...}
type TrafficSelectorPolicyInput interface {
	pulumi.Input

	ToTrafficSelectorPolicyOutput() TrafficSelectorPolicyOutput
	ToTrafficSelectorPolicyOutputWithContext(context.Context) TrafficSelectorPolicyOutput
}

// An traffic selector policy for a virtual network gateway connection.
type TrafficSelectorPolicyArgs struct {
	// A collection of local address spaces in CIDR format.
	LocalAddressRanges pulumi.StringArrayInput `pulumi:"localAddressRanges"`
	// A collection of remote address spaces in CIDR format.
	RemoteAddressRanges pulumi.StringArrayInput `pulumi:"remoteAddressRanges"`
}

func (TrafficSelectorPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficSelectorPolicy)(nil)).Elem()
}

func (i TrafficSelectorPolicyArgs) ToTrafficSelectorPolicyOutput() TrafficSelectorPolicyOutput {
	return i.ToTrafficSelectorPolicyOutputWithContext(context.Background())
}

func (i TrafficSelectorPolicyArgs) ToTrafficSelectorPolicyOutputWithContext(ctx context.Context) TrafficSelectorPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficSelectorPolicyOutput)
}

// TrafficSelectorPolicyArrayInput is an input type that accepts TrafficSelectorPolicyArray and TrafficSelectorPolicyArrayOutput values.
// You can construct a concrete instance of `TrafficSelectorPolicyArrayInput` via:
//
//          TrafficSelectorPolicyArray{ TrafficSelectorPolicyArgs{...} }
type TrafficSelectorPolicyArrayInput interface {
	pulumi.Input

	ToTrafficSelectorPolicyArrayOutput() TrafficSelectorPolicyArrayOutput
	ToTrafficSelectorPolicyArrayOutputWithContext(context.Context) TrafficSelectorPolicyArrayOutput
}

type TrafficSelectorPolicyArray []TrafficSelectorPolicyInput

func (TrafficSelectorPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficSelectorPolicy)(nil)).Elem()
}

func (i TrafficSelectorPolicyArray) ToTrafficSelectorPolicyArrayOutput() TrafficSelectorPolicyArrayOutput {
	return i.ToTrafficSelectorPolicyArrayOutputWithContext(context.Background())
}

func (i TrafficSelectorPolicyArray) ToTrafficSelectorPolicyArrayOutputWithContext(ctx context.Context) TrafficSelectorPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficSelectorPolicyArrayOutput)
}

// An traffic selector policy for a virtual network gateway connection.
type TrafficSelectorPolicyOutput struct{ *pulumi.OutputState }

func (TrafficSelectorPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficSelectorPolicy)(nil)).Elem()
}

func (o TrafficSelectorPolicyOutput) ToTrafficSelectorPolicyOutput() TrafficSelectorPolicyOutput {
	return o
}

func (o TrafficSelectorPolicyOutput) ToTrafficSelectorPolicyOutputWithContext(ctx context.Context) TrafficSelectorPolicyOutput {
	return o
}

// A collection of local address spaces in CIDR format.
func (o TrafficSelectorPolicyOutput) LocalAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TrafficSelectorPolicy) []string { return v.LocalAddressRanges }).(pulumi.StringArrayOutput)
}

// A collection of remote address spaces in CIDR format.
func (o TrafficSelectorPolicyOutput) RemoteAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TrafficSelectorPolicy) []string { return v.RemoteAddressRanges }).(pulumi.StringArrayOutput)
}

type TrafficSelectorPolicyArrayOutput struct{ *pulumi.OutputState }

func (TrafficSelectorPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficSelectorPolicy)(nil)).Elem()
}

func (o TrafficSelectorPolicyArrayOutput) ToTrafficSelectorPolicyArrayOutput() TrafficSelectorPolicyArrayOutput {
	return o
}

func (o TrafficSelectorPolicyArrayOutput) ToTrafficSelectorPolicyArrayOutputWithContext(ctx context.Context) TrafficSelectorPolicyArrayOutput {
	return o
}

func (o TrafficSelectorPolicyArrayOutput) Index(i pulumi.IntInput) TrafficSelectorPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficSelectorPolicy {
		return vs[0].([]TrafficSelectorPolicy)[vs[1].(int)]
	}).(TrafficSelectorPolicyOutput)
}

// An traffic selector policy for a virtual network gateway connection.
type TrafficSelectorPolicyResponse struct {
	// A collection of local address spaces in CIDR format.
	LocalAddressRanges []string `pulumi:"localAddressRanges"`
	// A collection of remote address spaces in CIDR format.
	RemoteAddressRanges []string `pulumi:"remoteAddressRanges"`
}

// TrafficSelectorPolicyResponseInput is an input type that accepts TrafficSelectorPolicyResponseArgs and TrafficSelectorPolicyResponseOutput values.
// You can construct a concrete instance of `TrafficSelectorPolicyResponseInput` via:
//
//          TrafficSelectorPolicyResponseArgs{...}
type TrafficSelectorPolicyResponseInput interface {
	pulumi.Input

	ToTrafficSelectorPolicyResponseOutput() TrafficSelectorPolicyResponseOutput
	ToTrafficSelectorPolicyResponseOutputWithContext(context.Context) TrafficSelectorPolicyResponseOutput
}

// An traffic selector policy for a virtual network gateway connection.
type TrafficSelectorPolicyResponseArgs struct {
	// A collection of local address spaces in CIDR format.
	LocalAddressRanges pulumi.StringArrayInput `pulumi:"localAddressRanges"`
	// A collection of remote address spaces in CIDR format.
	RemoteAddressRanges pulumi.StringArrayInput `pulumi:"remoteAddressRanges"`
}

func (TrafficSelectorPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficSelectorPolicyResponse)(nil)).Elem()
}

func (i TrafficSelectorPolicyResponseArgs) ToTrafficSelectorPolicyResponseOutput() TrafficSelectorPolicyResponseOutput {
	return i.ToTrafficSelectorPolicyResponseOutputWithContext(context.Background())
}

func (i TrafficSelectorPolicyResponseArgs) ToTrafficSelectorPolicyResponseOutputWithContext(ctx context.Context) TrafficSelectorPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficSelectorPolicyResponseOutput)
}

// TrafficSelectorPolicyResponseArrayInput is an input type that accepts TrafficSelectorPolicyResponseArray and TrafficSelectorPolicyResponseArrayOutput values.
// You can construct a concrete instance of `TrafficSelectorPolicyResponseArrayInput` via:
//
//          TrafficSelectorPolicyResponseArray{ TrafficSelectorPolicyResponseArgs{...} }
type TrafficSelectorPolicyResponseArrayInput interface {
	pulumi.Input

	ToTrafficSelectorPolicyResponseArrayOutput() TrafficSelectorPolicyResponseArrayOutput
	ToTrafficSelectorPolicyResponseArrayOutputWithContext(context.Context) TrafficSelectorPolicyResponseArrayOutput
}

type TrafficSelectorPolicyResponseArray []TrafficSelectorPolicyResponseInput

func (TrafficSelectorPolicyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficSelectorPolicyResponse)(nil)).Elem()
}

func (i TrafficSelectorPolicyResponseArray) ToTrafficSelectorPolicyResponseArrayOutput() TrafficSelectorPolicyResponseArrayOutput {
	return i.ToTrafficSelectorPolicyResponseArrayOutputWithContext(context.Background())
}

func (i TrafficSelectorPolicyResponseArray) ToTrafficSelectorPolicyResponseArrayOutputWithContext(ctx context.Context) TrafficSelectorPolicyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrafficSelectorPolicyResponseArrayOutput)
}

// An traffic selector policy for a virtual network gateway connection.
type TrafficSelectorPolicyResponseOutput struct{ *pulumi.OutputState }

func (TrafficSelectorPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrafficSelectorPolicyResponse)(nil)).Elem()
}

func (o TrafficSelectorPolicyResponseOutput) ToTrafficSelectorPolicyResponseOutput() TrafficSelectorPolicyResponseOutput {
	return o
}

func (o TrafficSelectorPolicyResponseOutput) ToTrafficSelectorPolicyResponseOutputWithContext(ctx context.Context) TrafficSelectorPolicyResponseOutput {
	return o
}

// A collection of local address spaces in CIDR format.
func (o TrafficSelectorPolicyResponseOutput) LocalAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TrafficSelectorPolicyResponse) []string { return v.LocalAddressRanges }).(pulumi.StringArrayOutput)
}

// A collection of remote address spaces in CIDR format.
func (o TrafficSelectorPolicyResponseOutput) RemoteAddressRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TrafficSelectorPolicyResponse) []string { return v.RemoteAddressRanges }).(pulumi.StringArrayOutput)
}

type TrafficSelectorPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (TrafficSelectorPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrafficSelectorPolicyResponse)(nil)).Elem()
}

func (o TrafficSelectorPolicyResponseArrayOutput) ToTrafficSelectorPolicyResponseArrayOutput() TrafficSelectorPolicyResponseArrayOutput {
	return o
}

func (o TrafficSelectorPolicyResponseArrayOutput) ToTrafficSelectorPolicyResponseArrayOutputWithContext(ctx context.Context) TrafficSelectorPolicyResponseArrayOutput {
	return o
}

func (o TrafficSelectorPolicyResponseArrayOutput) Index(i pulumi.IntInput) TrafficSelectorPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrafficSelectorPolicyResponse {
		return vs[0].([]TrafficSelectorPolicyResponse)[vs[1].(int)]
	}).(TrafficSelectorPolicyResponseOutput)
}

// VirtualNetworkGatewayConnection properties.
type TunnelConnectionHealthResponse struct {
	// Virtual Network Gateway connection status.
	ConnectionStatus string `pulumi:"connectionStatus"`
	// The Egress Bytes Transferred in this connection.
	EgressBytesTransferred int `pulumi:"egressBytesTransferred"`
	// The Ingress Bytes Transferred in this connection.
	IngressBytesTransferred int `pulumi:"ingressBytesTransferred"`
	// The time at which connection was established in Utc format.
	LastConnectionEstablishedUtcTime string `pulumi:"lastConnectionEstablishedUtcTime"`
	// Tunnel name.
	Tunnel string `pulumi:"tunnel"`
}

// TunnelConnectionHealthResponseInput is an input type that accepts TunnelConnectionHealthResponseArgs and TunnelConnectionHealthResponseOutput values.
// You can construct a concrete instance of `TunnelConnectionHealthResponseInput` via:
//
//          TunnelConnectionHealthResponseArgs{...}
type TunnelConnectionHealthResponseInput interface {
	pulumi.Input

	ToTunnelConnectionHealthResponseOutput() TunnelConnectionHealthResponseOutput
	ToTunnelConnectionHealthResponseOutputWithContext(context.Context) TunnelConnectionHealthResponseOutput
}

// VirtualNetworkGatewayConnection properties.
type TunnelConnectionHealthResponseArgs struct {
	// Virtual Network Gateway connection status.
	ConnectionStatus pulumi.StringInput `pulumi:"connectionStatus"`
	// The Egress Bytes Transferred in this connection.
	EgressBytesTransferred pulumi.IntInput `pulumi:"egressBytesTransferred"`
	// The Ingress Bytes Transferred in this connection.
	IngressBytesTransferred pulumi.IntInput `pulumi:"ingressBytesTransferred"`
	// The time at which connection was established in Utc format.
	LastConnectionEstablishedUtcTime pulumi.StringInput `pulumi:"lastConnectionEstablishedUtcTime"`
	// Tunnel name.
	Tunnel pulumi.StringInput `pulumi:"tunnel"`
}

func (TunnelConnectionHealthResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelConnectionHealthResponse)(nil)).Elem()
}

func (i TunnelConnectionHealthResponseArgs) ToTunnelConnectionHealthResponseOutput() TunnelConnectionHealthResponseOutput {
	return i.ToTunnelConnectionHealthResponseOutputWithContext(context.Background())
}

func (i TunnelConnectionHealthResponseArgs) ToTunnelConnectionHealthResponseOutputWithContext(ctx context.Context) TunnelConnectionHealthResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelConnectionHealthResponseOutput)
}

// TunnelConnectionHealthResponseArrayInput is an input type that accepts TunnelConnectionHealthResponseArray and TunnelConnectionHealthResponseArrayOutput values.
// You can construct a concrete instance of `TunnelConnectionHealthResponseArrayInput` via:
//
//          TunnelConnectionHealthResponseArray{ TunnelConnectionHealthResponseArgs{...} }
type TunnelConnectionHealthResponseArrayInput interface {
	pulumi.Input

	ToTunnelConnectionHealthResponseArrayOutput() TunnelConnectionHealthResponseArrayOutput
	ToTunnelConnectionHealthResponseArrayOutputWithContext(context.Context) TunnelConnectionHealthResponseArrayOutput
}

type TunnelConnectionHealthResponseArray []TunnelConnectionHealthResponseInput

func (TunnelConnectionHealthResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TunnelConnectionHealthResponse)(nil)).Elem()
}

func (i TunnelConnectionHealthResponseArray) ToTunnelConnectionHealthResponseArrayOutput() TunnelConnectionHealthResponseArrayOutput {
	return i.ToTunnelConnectionHealthResponseArrayOutputWithContext(context.Background())
}

func (i TunnelConnectionHealthResponseArray) ToTunnelConnectionHealthResponseArrayOutputWithContext(ctx context.Context) TunnelConnectionHealthResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelConnectionHealthResponseArrayOutput)
}

// VirtualNetworkGatewayConnection properties.
type TunnelConnectionHealthResponseOutput struct{ *pulumi.OutputState }

func (TunnelConnectionHealthResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelConnectionHealthResponse)(nil)).Elem()
}

func (o TunnelConnectionHealthResponseOutput) ToTunnelConnectionHealthResponseOutput() TunnelConnectionHealthResponseOutput {
	return o
}

func (o TunnelConnectionHealthResponseOutput) ToTunnelConnectionHealthResponseOutputWithContext(ctx context.Context) TunnelConnectionHealthResponseOutput {
	return o
}

// Virtual Network Gateway connection status.
func (o TunnelConnectionHealthResponseOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) string { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// The Egress Bytes Transferred in this connection.
func (o TunnelConnectionHealthResponseOutput) EgressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) int { return v.EgressBytesTransferred }).(pulumi.IntOutput)
}

// The Ingress Bytes Transferred in this connection.
func (o TunnelConnectionHealthResponseOutput) IngressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) int { return v.IngressBytesTransferred }).(pulumi.IntOutput)
}

// The time at which connection was established in Utc format.
func (o TunnelConnectionHealthResponseOutput) LastConnectionEstablishedUtcTime() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) string { return v.LastConnectionEstablishedUtcTime }).(pulumi.StringOutput)
}

// Tunnel name.
func (o TunnelConnectionHealthResponseOutput) Tunnel() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) string { return v.Tunnel }).(pulumi.StringOutput)
}

type TunnelConnectionHealthResponseArrayOutput struct{ *pulumi.OutputState }

func (TunnelConnectionHealthResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TunnelConnectionHealthResponse)(nil)).Elem()
}

func (o TunnelConnectionHealthResponseArrayOutput) ToTunnelConnectionHealthResponseArrayOutput() TunnelConnectionHealthResponseArrayOutput {
	return o
}

func (o TunnelConnectionHealthResponseArrayOutput) ToTunnelConnectionHealthResponseArrayOutputWithContext(ctx context.Context) TunnelConnectionHealthResponseArrayOutput {
	return o
}

func (o TunnelConnectionHealthResponseArrayOutput) Index(i pulumi.IntInput) TunnelConnectionHealthResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TunnelConnectionHealthResponse {
		return vs[0].([]TunnelConnectionHealthResponse)[vs[1].(int)]
	}).(TunnelConnectionHealthResponseOutput)
}

// A TXT record.
type TxtRecord struct {
	// The text value of this TXT record.
	Value []string `pulumi:"value"`
}

// TxtRecordInput is an input type that accepts TxtRecordArgs and TxtRecordOutput values.
// You can construct a concrete instance of `TxtRecordInput` via:
//
//          TxtRecordArgs{...}
type TxtRecordInput interface {
	pulumi.Input

	ToTxtRecordOutput() TxtRecordOutput
	ToTxtRecordOutputWithContext(context.Context) TxtRecordOutput
}

// A TXT record.
type TxtRecordArgs struct {
	// The text value of this TXT record.
	Value pulumi.StringArrayInput `pulumi:"value"`
}

func (TxtRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TxtRecord)(nil)).Elem()
}

func (i TxtRecordArgs) ToTxtRecordOutput() TxtRecordOutput {
	return i.ToTxtRecordOutputWithContext(context.Background())
}

func (i TxtRecordArgs) ToTxtRecordOutputWithContext(ctx context.Context) TxtRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TxtRecordOutput)
}

// TxtRecordArrayInput is an input type that accepts TxtRecordArray and TxtRecordArrayOutput values.
// You can construct a concrete instance of `TxtRecordArrayInput` via:
//
//          TxtRecordArray{ TxtRecordArgs{...} }
type TxtRecordArrayInput interface {
	pulumi.Input

	ToTxtRecordArrayOutput() TxtRecordArrayOutput
	ToTxtRecordArrayOutputWithContext(context.Context) TxtRecordArrayOutput
}

type TxtRecordArray []TxtRecordInput

func (TxtRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TxtRecord)(nil)).Elem()
}

func (i TxtRecordArray) ToTxtRecordArrayOutput() TxtRecordArrayOutput {
	return i.ToTxtRecordArrayOutputWithContext(context.Background())
}

func (i TxtRecordArray) ToTxtRecordArrayOutputWithContext(ctx context.Context) TxtRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TxtRecordArrayOutput)
}

// A TXT record.
type TxtRecordOutput struct{ *pulumi.OutputState }

func (TxtRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TxtRecord)(nil)).Elem()
}

func (o TxtRecordOutput) ToTxtRecordOutput() TxtRecordOutput {
	return o
}

func (o TxtRecordOutput) ToTxtRecordOutputWithContext(ctx context.Context) TxtRecordOutput {
	return o
}

// The text value of this TXT record.
func (o TxtRecordOutput) Value() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TxtRecord) []string { return v.Value }).(pulumi.StringArrayOutput)
}

type TxtRecordArrayOutput struct{ *pulumi.OutputState }

func (TxtRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TxtRecord)(nil)).Elem()
}

func (o TxtRecordArrayOutput) ToTxtRecordArrayOutput() TxtRecordArrayOutput {
	return o
}

func (o TxtRecordArrayOutput) ToTxtRecordArrayOutputWithContext(ctx context.Context) TxtRecordArrayOutput {
	return o
}

func (o TxtRecordArrayOutput) Index(i pulumi.IntInput) TxtRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TxtRecord {
		return vs[0].([]TxtRecord)[vs[1].(int)]
	}).(TxtRecordOutput)
}

// A TXT record.
type TxtRecordResponse struct {
	// The text value of this TXT record.
	Value []string `pulumi:"value"`
}

// TxtRecordResponseInput is an input type that accepts TxtRecordResponseArgs and TxtRecordResponseOutput values.
// You can construct a concrete instance of `TxtRecordResponseInput` via:
//
//          TxtRecordResponseArgs{...}
type TxtRecordResponseInput interface {
	pulumi.Input

	ToTxtRecordResponseOutput() TxtRecordResponseOutput
	ToTxtRecordResponseOutputWithContext(context.Context) TxtRecordResponseOutput
}

// A TXT record.
type TxtRecordResponseArgs struct {
	// The text value of this TXT record.
	Value pulumi.StringArrayInput `pulumi:"value"`
}

func (TxtRecordResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TxtRecordResponse)(nil)).Elem()
}

func (i TxtRecordResponseArgs) ToTxtRecordResponseOutput() TxtRecordResponseOutput {
	return i.ToTxtRecordResponseOutputWithContext(context.Background())
}

func (i TxtRecordResponseArgs) ToTxtRecordResponseOutputWithContext(ctx context.Context) TxtRecordResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TxtRecordResponseOutput)
}

// TxtRecordResponseArrayInput is an input type that accepts TxtRecordResponseArray and TxtRecordResponseArrayOutput values.
// You can construct a concrete instance of `TxtRecordResponseArrayInput` via:
//
//          TxtRecordResponseArray{ TxtRecordResponseArgs{...} }
type TxtRecordResponseArrayInput interface {
	pulumi.Input

	ToTxtRecordResponseArrayOutput() TxtRecordResponseArrayOutput
	ToTxtRecordResponseArrayOutputWithContext(context.Context) TxtRecordResponseArrayOutput
}

type TxtRecordResponseArray []TxtRecordResponseInput

func (TxtRecordResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TxtRecordResponse)(nil)).Elem()
}

func (i TxtRecordResponseArray) ToTxtRecordResponseArrayOutput() TxtRecordResponseArrayOutput {
	return i.ToTxtRecordResponseArrayOutputWithContext(context.Background())
}

func (i TxtRecordResponseArray) ToTxtRecordResponseArrayOutputWithContext(ctx context.Context) TxtRecordResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TxtRecordResponseArrayOutput)
}

// A TXT record.
type TxtRecordResponseOutput struct{ *pulumi.OutputState }

func (TxtRecordResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TxtRecordResponse)(nil)).Elem()
}

func (o TxtRecordResponseOutput) ToTxtRecordResponseOutput() TxtRecordResponseOutput {
	return o
}

func (o TxtRecordResponseOutput) ToTxtRecordResponseOutputWithContext(ctx context.Context) TxtRecordResponseOutput {
	return o
}

// The text value of this TXT record.
func (o TxtRecordResponseOutput) Value() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TxtRecordResponse) []string { return v.Value }).(pulumi.StringArrayOutput)
}

type TxtRecordResponseArrayOutput struct{ *pulumi.OutputState }

func (TxtRecordResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TxtRecordResponse)(nil)).Elem()
}

func (o TxtRecordResponseArrayOutput) ToTxtRecordResponseArrayOutput() TxtRecordResponseArrayOutput {
	return o
}

func (o TxtRecordResponseArrayOutput) ToTxtRecordResponseArrayOutputWithContext(ctx context.Context) TxtRecordResponseArrayOutput {
	return o
}

func (o TxtRecordResponseArrayOutput) Index(i pulumi.IntInput) TxtRecordResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TxtRecordResponse {
		return vs[0].([]TxtRecordResponse)[vs[1].(int)]
	}).(TxtRecordResponseOutput)
}

// Describes a Virtual Machine.
type VM struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// VMInput is an input type that accepts VMArgs and VMOutput values.
// You can construct a concrete instance of `VMInput` via:
//
//          VMArgs{...}
type VMInput interface {
	pulumi.Input

	ToVMOutput() VMOutput
	ToVMOutputWithContext(context.Context) VMOutput
}

// Describes a Virtual Machine.
type VMArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (VMArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VM)(nil)).Elem()
}

func (i VMArgs) ToVMOutput() VMOutput {
	return i.ToVMOutputWithContext(context.Background())
}

func (i VMArgs) ToVMOutputWithContext(ctx context.Context) VMOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMOutput)
}

// Describes a Virtual Machine.
type VMOutput struct{ *pulumi.OutputState }

func (VMOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VM)(nil)).Elem()
}

func (o VMOutput) ToVMOutput() VMOutput {
	return o
}

func (o VMOutput) ToVMOutputWithContext(ctx context.Context) VMOutput {
	return o
}

// Resource ID.
func (o VMOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VM) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VMOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VM) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o VMOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VM) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Describes a Virtual Machine.
type VMResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VMResponseInput is an input type that accepts VMResponseArgs and VMResponseOutput values.
// You can construct a concrete instance of `VMResponseInput` via:
//
//          VMResponseArgs{...}
type VMResponseInput interface {
	pulumi.Input

	ToVMResponseOutput() VMResponseOutput
	ToVMResponseOutputWithContext(context.Context) VMResponseOutput
}

// Describes a Virtual Machine.
type VMResponseArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VMResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VMResponse)(nil)).Elem()
}

func (i VMResponseArgs) ToVMResponseOutput() VMResponseOutput {
	return i.ToVMResponseOutputWithContext(context.Background())
}

func (i VMResponseArgs) ToVMResponseOutputWithContext(ctx context.Context) VMResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VMResponseOutput)
}

// Describes a Virtual Machine.
type VMResponseOutput struct{ *pulumi.OutputState }

func (VMResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VMResponse)(nil)).Elem()
}

func (o VMResponseOutput) ToVMResponseOutput() VMResponseOutput {
	return o
}

func (o VMResponseOutput) ToVMResponseOutputWithContext(ctx context.Context) VMResponseOutput {
	return o
}

// Resource ID.
func (o VMResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VMResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VMResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VMResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VMResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Resource tags.
func (o VMResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VMResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VMResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VMResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Network Virtual Appliance NIC properties.
type VirtualApplianceNicPropertiesResponse struct {
	// NIC name.
	Name string `pulumi:"name"`
	// Private IP address.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// Public IP address.
	PublicIpAddress string `pulumi:"publicIpAddress"`
}

// VirtualApplianceNicPropertiesResponseInput is an input type that accepts VirtualApplianceNicPropertiesResponseArgs and VirtualApplianceNicPropertiesResponseOutput values.
// You can construct a concrete instance of `VirtualApplianceNicPropertiesResponseInput` via:
//
//          VirtualApplianceNicPropertiesResponseArgs{...}
type VirtualApplianceNicPropertiesResponseInput interface {
	pulumi.Input

	ToVirtualApplianceNicPropertiesResponseOutput() VirtualApplianceNicPropertiesResponseOutput
	ToVirtualApplianceNicPropertiesResponseOutputWithContext(context.Context) VirtualApplianceNicPropertiesResponseOutput
}

// Network Virtual Appliance NIC properties.
type VirtualApplianceNicPropertiesResponseArgs struct {
	// NIC name.
	Name pulumi.StringInput `pulumi:"name"`
	// Private IP address.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// Public IP address.
	PublicIpAddress pulumi.StringInput `pulumi:"publicIpAddress"`
}

func (VirtualApplianceNicPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceNicPropertiesResponse)(nil)).Elem()
}

func (i VirtualApplianceNicPropertiesResponseArgs) ToVirtualApplianceNicPropertiesResponseOutput() VirtualApplianceNicPropertiesResponseOutput {
	return i.ToVirtualApplianceNicPropertiesResponseOutputWithContext(context.Background())
}

func (i VirtualApplianceNicPropertiesResponseArgs) ToVirtualApplianceNicPropertiesResponseOutputWithContext(ctx context.Context) VirtualApplianceNicPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceNicPropertiesResponseOutput)
}

// VirtualApplianceNicPropertiesResponseArrayInput is an input type that accepts VirtualApplianceNicPropertiesResponseArray and VirtualApplianceNicPropertiesResponseArrayOutput values.
// You can construct a concrete instance of `VirtualApplianceNicPropertiesResponseArrayInput` via:
//
//          VirtualApplianceNicPropertiesResponseArray{ VirtualApplianceNicPropertiesResponseArgs{...} }
type VirtualApplianceNicPropertiesResponseArrayInput interface {
	pulumi.Input

	ToVirtualApplianceNicPropertiesResponseArrayOutput() VirtualApplianceNicPropertiesResponseArrayOutput
	ToVirtualApplianceNicPropertiesResponseArrayOutputWithContext(context.Context) VirtualApplianceNicPropertiesResponseArrayOutput
}

type VirtualApplianceNicPropertiesResponseArray []VirtualApplianceNicPropertiesResponseInput

func (VirtualApplianceNicPropertiesResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplianceNicPropertiesResponse)(nil)).Elem()
}

func (i VirtualApplianceNicPropertiesResponseArray) ToVirtualApplianceNicPropertiesResponseArrayOutput() VirtualApplianceNicPropertiesResponseArrayOutput {
	return i.ToVirtualApplianceNicPropertiesResponseArrayOutputWithContext(context.Background())
}

func (i VirtualApplianceNicPropertiesResponseArray) ToVirtualApplianceNicPropertiesResponseArrayOutputWithContext(ctx context.Context) VirtualApplianceNicPropertiesResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceNicPropertiesResponseArrayOutput)
}

// Network Virtual Appliance NIC properties.
type VirtualApplianceNicPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualApplianceNicPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceNicPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceNicPropertiesResponseOutput) ToVirtualApplianceNicPropertiesResponseOutput() VirtualApplianceNicPropertiesResponseOutput {
	return o
}

func (o VirtualApplianceNicPropertiesResponseOutput) ToVirtualApplianceNicPropertiesResponseOutputWithContext(ctx context.Context) VirtualApplianceNicPropertiesResponseOutput {
	return o
}

// NIC name.
func (o VirtualApplianceNicPropertiesResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualApplianceNicPropertiesResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Private IP address.
func (o VirtualApplianceNicPropertiesResponseOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualApplianceNicPropertiesResponse) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// Public IP address.
func (o VirtualApplianceNicPropertiesResponseOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualApplianceNicPropertiesResponse) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

type VirtualApplianceNicPropertiesResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualApplianceNicPropertiesResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualApplianceNicPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceNicPropertiesResponseArrayOutput) ToVirtualApplianceNicPropertiesResponseArrayOutput() VirtualApplianceNicPropertiesResponseArrayOutput {
	return o
}

func (o VirtualApplianceNicPropertiesResponseArrayOutput) ToVirtualApplianceNicPropertiesResponseArrayOutputWithContext(ctx context.Context) VirtualApplianceNicPropertiesResponseArrayOutput {
	return o
}

func (o VirtualApplianceNicPropertiesResponseArrayOutput) Index(i pulumi.IntInput) VirtualApplianceNicPropertiesResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualApplianceNicPropertiesResponse {
		return vs[0].([]VirtualApplianceNicPropertiesResponse)[vs[1].(int)]
	}).(VirtualApplianceNicPropertiesResponseOutput)
}

// Network Virtual Appliance Sku Properties.
type VirtualApplianceSkuProperties struct {
	// Virtual Appliance Scale Unit.
	BundledScaleUnit *string `pulumi:"bundledScaleUnit"`
	// Virtual Appliance Version.
	MarketPlaceVersion *string `pulumi:"marketPlaceVersion"`
	// Virtual Appliance Vendor.
	Vendor *string `pulumi:"vendor"`
}

// VirtualApplianceSkuPropertiesInput is an input type that accepts VirtualApplianceSkuPropertiesArgs and VirtualApplianceSkuPropertiesOutput values.
// You can construct a concrete instance of `VirtualApplianceSkuPropertiesInput` via:
//
//          VirtualApplianceSkuPropertiesArgs{...}
type VirtualApplianceSkuPropertiesInput interface {
	pulumi.Input

	ToVirtualApplianceSkuPropertiesOutput() VirtualApplianceSkuPropertiesOutput
	ToVirtualApplianceSkuPropertiesOutputWithContext(context.Context) VirtualApplianceSkuPropertiesOutput
}

// Network Virtual Appliance Sku Properties.
type VirtualApplianceSkuPropertiesArgs struct {
	// Virtual Appliance Scale Unit.
	BundledScaleUnit pulumi.StringPtrInput `pulumi:"bundledScaleUnit"`
	// Virtual Appliance Version.
	MarketPlaceVersion pulumi.StringPtrInput `pulumi:"marketPlaceVersion"`
	// Virtual Appliance Vendor.
	Vendor pulumi.StringPtrInput `pulumi:"vendor"`
}

func (VirtualApplianceSkuPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceSkuProperties)(nil)).Elem()
}

func (i VirtualApplianceSkuPropertiesArgs) ToVirtualApplianceSkuPropertiesOutput() VirtualApplianceSkuPropertiesOutput {
	return i.ToVirtualApplianceSkuPropertiesOutputWithContext(context.Background())
}

func (i VirtualApplianceSkuPropertiesArgs) ToVirtualApplianceSkuPropertiesOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceSkuPropertiesOutput)
}

func (i VirtualApplianceSkuPropertiesArgs) ToVirtualApplianceSkuPropertiesPtrOutput() VirtualApplianceSkuPropertiesPtrOutput {
	return i.ToVirtualApplianceSkuPropertiesPtrOutputWithContext(context.Background())
}

func (i VirtualApplianceSkuPropertiesArgs) ToVirtualApplianceSkuPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceSkuPropertiesOutput).ToVirtualApplianceSkuPropertiesPtrOutputWithContext(ctx)
}

// VirtualApplianceSkuPropertiesPtrInput is an input type that accepts VirtualApplianceSkuPropertiesArgs, VirtualApplianceSkuPropertiesPtr and VirtualApplianceSkuPropertiesPtrOutput values.
// You can construct a concrete instance of `VirtualApplianceSkuPropertiesPtrInput` via:
//
//          VirtualApplianceSkuPropertiesArgs{...}
//
//  or:
//
//          nil
type VirtualApplianceSkuPropertiesPtrInput interface {
	pulumi.Input

	ToVirtualApplianceSkuPropertiesPtrOutput() VirtualApplianceSkuPropertiesPtrOutput
	ToVirtualApplianceSkuPropertiesPtrOutputWithContext(context.Context) VirtualApplianceSkuPropertiesPtrOutput
}

type virtualApplianceSkuPropertiesPtrType VirtualApplianceSkuPropertiesArgs

func VirtualApplianceSkuPropertiesPtr(v *VirtualApplianceSkuPropertiesArgs) VirtualApplianceSkuPropertiesPtrInput {
	return (*virtualApplianceSkuPropertiesPtrType)(v)
}

func (*virtualApplianceSkuPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualApplianceSkuProperties)(nil)).Elem()
}

func (i *virtualApplianceSkuPropertiesPtrType) ToVirtualApplianceSkuPropertiesPtrOutput() VirtualApplianceSkuPropertiesPtrOutput {
	return i.ToVirtualApplianceSkuPropertiesPtrOutputWithContext(context.Background())
}

func (i *virtualApplianceSkuPropertiesPtrType) ToVirtualApplianceSkuPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceSkuPropertiesPtrOutput)
}

// Network Virtual Appliance Sku Properties.
type VirtualApplianceSkuPropertiesOutput struct{ *pulumi.OutputState }

func (VirtualApplianceSkuPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceSkuProperties)(nil)).Elem()
}

func (o VirtualApplianceSkuPropertiesOutput) ToVirtualApplianceSkuPropertiesOutput() VirtualApplianceSkuPropertiesOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesOutput) ToVirtualApplianceSkuPropertiesOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesOutput) ToVirtualApplianceSkuPropertiesPtrOutput() VirtualApplianceSkuPropertiesPtrOutput {
	return o.ToVirtualApplianceSkuPropertiesPtrOutputWithContext(context.Background())
}

func (o VirtualApplianceSkuPropertiesOutput) ToVirtualApplianceSkuPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesPtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuProperties) *VirtualApplianceSkuProperties {
		return &v
	}).(VirtualApplianceSkuPropertiesPtrOutput)
}

// Virtual Appliance Scale Unit.
func (o VirtualApplianceSkuPropertiesOutput) BundledScaleUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuProperties) *string { return v.BundledScaleUnit }).(pulumi.StringPtrOutput)
}

// Virtual Appliance Version.
func (o VirtualApplianceSkuPropertiesOutput) MarketPlaceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuProperties) *string { return v.MarketPlaceVersion }).(pulumi.StringPtrOutput)
}

// Virtual Appliance Vendor.
func (o VirtualApplianceSkuPropertiesOutput) Vendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuProperties) *string { return v.Vendor }).(pulumi.StringPtrOutput)
}

type VirtualApplianceSkuPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualApplianceSkuPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualApplianceSkuProperties)(nil)).Elem()
}

func (o VirtualApplianceSkuPropertiesPtrOutput) ToVirtualApplianceSkuPropertiesPtrOutput() VirtualApplianceSkuPropertiesPtrOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesPtrOutput) ToVirtualApplianceSkuPropertiesPtrOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesPtrOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesPtrOutput) Elem() VirtualApplianceSkuPropertiesOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuProperties) VirtualApplianceSkuProperties { return *v }).(VirtualApplianceSkuPropertiesOutput)
}

// Virtual Appliance Scale Unit.
func (o VirtualApplianceSkuPropertiesPtrOutput) BundledScaleUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuProperties) *string {
		if v == nil {
			return nil
		}
		return v.BundledScaleUnit
	}).(pulumi.StringPtrOutput)
}

// Virtual Appliance Version.
func (o VirtualApplianceSkuPropertiesPtrOutput) MarketPlaceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuProperties) *string {
		if v == nil {
			return nil
		}
		return v.MarketPlaceVersion
	}).(pulumi.StringPtrOutput)
}

// Virtual Appliance Vendor.
func (o VirtualApplianceSkuPropertiesPtrOutput) Vendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuProperties) *string {
		if v == nil {
			return nil
		}
		return v.Vendor
	}).(pulumi.StringPtrOutput)
}

// Network Virtual Appliance Sku Properties.
type VirtualApplianceSkuPropertiesResponse struct {
	// Virtual Appliance Scale Unit.
	BundledScaleUnit *string `pulumi:"bundledScaleUnit"`
	// Virtual Appliance Version.
	MarketPlaceVersion *string `pulumi:"marketPlaceVersion"`
	// Virtual Appliance Vendor.
	Vendor *string `pulumi:"vendor"`
}

// VirtualApplianceSkuPropertiesResponseInput is an input type that accepts VirtualApplianceSkuPropertiesResponseArgs and VirtualApplianceSkuPropertiesResponseOutput values.
// You can construct a concrete instance of `VirtualApplianceSkuPropertiesResponseInput` via:
//
//          VirtualApplianceSkuPropertiesResponseArgs{...}
type VirtualApplianceSkuPropertiesResponseInput interface {
	pulumi.Input

	ToVirtualApplianceSkuPropertiesResponseOutput() VirtualApplianceSkuPropertiesResponseOutput
	ToVirtualApplianceSkuPropertiesResponseOutputWithContext(context.Context) VirtualApplianceSkuPropertiesResponseOutput
}

// Network Virtual Appliance Sku Properties.
type VirtualApplianceSkuPropertiesResponseArgs struct {
	// Virtual Appliance Scale Unit.
	BundledScaleUnit pulumi.StringPtrInput `pulumi:"bundledScaleUnit"`
	// Virtual Appliance Version.
	MarketPlaceVersion pulumi.StringPtrInput `pulumi:"marketPlaceVersion"`
	// Virtual Appliance Vendor.
	Vendor pulumi.StringPtrInput `pulumi:"vendor"`
}

func (VirtualApplianceSkuPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceSkuPropertiesResponse)(nil)).Elem()
}

func (i VirtualApplianceSkuPropertiesResponseArgs) ToVirtualApplianceSkuPropertiesResponseOutput() VirtualApplianceSkuPropertiesResponseOutput {
	return i.ToVirtualApplianceSkuPropertiesResponseOutputWithContext(context.Background())
}

func (i VirtualApplianceSkuPropertiesResponseArgs) ToVirtualApplianceSkuPropertiesResponseOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceSkuPropertiesResponseOutput)
}

func (i VirtualApplianceSkuPropertiesResponseArgs) ToVirtualApplianceSkuPropertiesResponsePtrOutput() VirtualApplianceSkuPropertiesResponsePtrOutput {
	return i.ToVirtualApplianceSkuPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i VirtualApplianceSkuPropertiesResponseArgs) ToVirtualApplianceSkuPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceSkuPropertiesResponseOutput).ToVirtualApplianceSkuPropertiesResponsePtrOutputWithContext(ctx)
}

// VirtualApplianceSkuPropertiesResponsePtrInput is an input type that accepts VirtualApplianceSkuPropertiesResponseArgs, VirtualApplianceSkuPropertiesResponsePtr and VirtualApplianceSkuPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `VirtualApplianceSkuPropertiesResponsePtrInput` via:
//
//          VirtualApplianceSkuPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type VirtualApplianceSkuPropertiesResponsePtrInput interface {
	pulumi.Input

	ToVirtualApplianceSkuPropertiesResponsePtrOutput() VirtualApplianceSkuPropertiesResponsePtrOutput
	ToVirtualApplianceSkuPropertiesResponsePtrOutputWithContext(context.Context) VirtualApplianceSkuPropertiesResponsePtrOutput
}

type virtualApplianceSkuPropertiesResponsePtrType VirtualApplianceSkuPropertiesResponseArgs

func VirtualApplianceSkuPropertiesResponsePtr(v *VirtualApplianceSkuPropertiesResponseArgs) VirtualApplianceSkuPropertiesResponsePtrInput {
	return (*virtualApplianceSkuPropertiesResponsePtrType)(v)
}

func (*virtualApplianceSkuPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualApplianceSkuPropertiesResponse)(nil)).Elem()
}

func (i *virtualApplianceSkuPropertiesResponsePtrType) ToVirtualApplianceSkuPropertiesResponsePtrOutput() VirtualApplianceSkuPropertiesResponsePtrOutput {
	return i.ToVirtualApplianceSkuPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *virtualApplianceSkuPropertiesResponsePtrType) ToVirtualApplianceSkuPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualApplianceSkuPropertiesResponsePtrOutput)
}

// Network Virtual Appliance Sku Properties.
type VirtualApplianceSkuPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualApplianceSkuPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualApplianceSkuPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceSkuPropertiesResponseOutput) ToVirtualApplianceSkuPropertiesResponseOutput() VirtualApplianceSkuPropertiesResponseOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesResponseOutput) ToVirtualApplianceSkuPropertiesResponseOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesResponseOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesResponseOutput) ToVirtualApplianceSkuPropertiesResponsePtrOutput() VirtualApplianceSkuPropertiesResponsePtrOutput {
	return o.ToVirtualApplianceSkuPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o VirtualApplianceSkuPropertiesResponseOutput) ToVirtualApplianceSkuPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuPropertiesResponse) *VirtualApplianceSkuPropertiesResponse {
		return &v
	}).(VirtualApplianceSkuPropertiesResponsePtrOutput)
}

// Virtual Appliance Scale Unit.
func (o VirtualApplianceSkuPropertiesResponseOutput) BundledScaleUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuPropertiesResponse) *string { return v.BundledScaleUnit }).(pulumi.StringPtrOutput)
}

// Virtual Appliance Version.
func (o VirtualApplianceSkuPropertiesResponseOutput) MarketPlaceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuPropertiesResponse) *string { return v.MarketPlaceVersion }).(pulumi.StringPtrOutput)
}

// Virtual Appliance Vendor.
func (o VirtualApplianceSkuPropertiesResponseOutput) Vendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualApplianceSkuPropertiesResponse) *string { return v.Vendor }).(pulumi.StringPtrOutput)
}

type VirtualApplianceSkuPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualApplianceSkuPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualApplianceSkuPropertiesResponse)(nil)).Elem()
}

func (o VirtualApplianceSkuPropertiesResponsePtrOutput) ToVirtualApplianceSkuPropertiesResponsePtrOutput() VirtualApplianceSkuPropertiesResponsePtrOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesResponsePtrOutput) ToVirtualApplianceSkuPropertiesResponsePtrOutputWithContext(ctx context.Context) VirtualApplianceSkuPropertiesResponsePtrOutput {
	return o
}

func (o VirtualApplianceSkuPropertiesResponsePtrOutput) Elem() VirtualApplianceSkuPropertiesResponseOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuPropertiesResponse) VirtualApplianceSkuPropertiesResponse { return *v }).(VirtualApplianceSkuPropertiesResponseOutput)
}

// Virtual Appliance Scale Unit.
func (o VirtualApplianceSkuPropertiesResponsePtrOutput) BundledScaleUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.BundledScaleUnit
	}).(pulumi.StringPtrOutput)
}

// Virtual Appliance Version.
func (o VirtualApplianceSkuPropertiesResponsePtrOutput) MarketPlaceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.MarketPlaceVersion
	}).(pulumi.StringPtrOutput)
}

// Virtual Appliance Vendor.
func (o VirtualApplianceSkuPropertiesResponsePtrOutput) Vendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualApplianceSkuPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.Vendor
	}).(pulumi.StringPtrOutput)
}

// Virtual Hub identifier.
type VirtualHubId struct {
	// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
	Id *string `pulumi:"id"`
}

// VirtualHubIdInput is an input type that accepts VirtualHubIdArgs and VirtualHubIdOutput values.
// You can construct a concrete instance of `VirtualHubIdInput` via:
//
//          VirtualHubIdArgs{...}
type VirtualHubIdInput interface {
	pulumi.Input

	ToVirtualHubIdOutput() VirtualHubIdOutput
	ToVirtualHubIdOutputWithContext(context.Context) VirtualHubIdOutput
}

// Virtual Hub identifier.
type VirtualHubIdArgs struct {
	// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (VirtualHubIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubId)(nil)).Elem()
}

func (i VirtualHubIdArgs) ToVirtualHubIdOutput() VirtualHubIdOutput {
	return i.ToVirtualHubIdOutputWithContext(context.Background())
}

func (i VirtualHubIdArgs) ToVirtualHubIdOutputWithContext(ctx context.Context) VirtualHubIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubIdOutput)
}

func (i VirtualHubIdArgs) ToVirtualHubIdPtrOutput() VirtualHubIdPtrOutput {
	return i.ToVirtualHubIdPtrOutputWithContext(context.Background())
}

func (i VirtualHubIdArgs) ToVirtualHubIdPtrOutputWithContext(ctx context.Context) VirtualHubIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubIdOutput).ToVirtualHubIdPtrOutputWithContext(ctx)
}

// VirtualHubIdPtrInput is an input type that accepts VirtualHubIdArgs, VirtualHubIdPtr and VirtualHubIdPtrOutput values.
// You can construct a concrete instance of `VirtualHubIdPtrInput` via:
//
//          VirtualHubIdArgs{...}
//
//  or:
//
//          nil
type VirtualHubIdPtrInput interface {
	pulumi.Input

	ToVirtualHubIdPtrOutput() VirtualHubIdPtrOutput
	ToVirtualHubIdPtrOutputWithContext(context.Context) VirtualHubIdPtrOutput
}

type virtualHubIdPtrType VirtualHubIdArgs

func VirtualHubIdPtr(v *VirtualHubIdArgs) VirtualHubIdPtrInput {
	return (*virtualHubIdPtrType)(v)
}

func (*virtualHubIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubId)(nil)).Elem()
}

func (i *virtualHubIdPtrType) ToVirtualHubIdPtrOutput() VirtualHubIdPtrOutput {
	return i.ToVirtualHubIdPtrOutputWithContext(context.Background())
}

func (i *virtualHubIdPtrType) ToVirtualHubIdPtrOutputWithContext(ctx context.Context) VirtualHubIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubIdPtrOutput)
}

// Virtual Hub identifier.
type VirtualHubIdOutput struct{ *pulumi.OutputState }

func (VirtualHubIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubId)(nil)).Elem()
}

func (o VirtualHubIdOutput) ToVirtualHubIdOutput() VirtualHubIdOutput {
	return o
}

func (o VirtualHubIdOutput) ToVirtualHubIdOutputWithContext(ctx context.Context) VirtualHubIdOutput {
	return o
}

func (o VirtualHubIdOutput) ToVirtualHubIdPtrOutput() VirtualHubIdPtrOutput {
	return o.ToVirtualHubIdPtrOutputWithContext(context.Background())
}

func (o VirtualHubIdOutput) ToVirtualHubIdPtrOutputWithContext(ctx context.Context) VirtualHubIdPtrOutput {
	return o.ApplyT(func(v VirtualHubId) *VirtualHubId {
		return &v
	}).(VirtualHubIdPtrOutput)
}

// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
func (o VirtualHubIdOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubId) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type VirtualHubIdPtrOutput struct{ *pulumi.OutputState }

func (VirtualHubIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubId)(nil)).Elem()
}

func (o VirtualHubIdPtrOutput) ToVirtualHubIdPtrOutput() VirtualHubIdPtrOutput {
	return o
}

func (o VirtualHubIdPtrOutput) ToVirtualHubIdPtrOutputWithContext(ctx context.Context) VirtualHubIdPtrOutput {
	return o
}

func (o VirtualHubIdPtrOutput) Elem() VirtualHubIdOutput {
	return o.ApplyT(func(v *VirtualHubId) VirtualHubId { return *v }).(VirtualHubIdOutput)
}

// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
func (o VirtualHubIdPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHubId) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Virtual Hub identifier.
type VirtualHubIdResponse struct {
	// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
	Id *string `pulumi:"id"`
}

// VirtualHubIdResponseInput is an input type that accepts VirtualHubIdResponseArgs and VirtualHubIdResponseOutput values.
// You can construct a concrete instance of `VirtualHubIdResponseInput` via:
//
//          VirtualHubIdResponseArgs{...}
type VirtualHubIdResponseInput interface {
	pulumi.Input

	ToVirtualHubIdResponseOutput() VirtualHubIdResponseOutput
	ToVirtualHubIdResponseOutputWithContext(context.Context) VirtualHubIdResponseOutput
}

// Virtual Hub identifier.
type VirtualHubIdResponseArgs struct {
	// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (VirtualHubIdResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubIdResponse)(nil)).Elem()
}

func (i VirtualHubIdResponseArgs) ToVirtualHubIdResponseOutput() VirtualHubIdResponseOutput {
	return i.ToVirtualHubIdResponseOutputWithContext(context.Background())
}

func (i VirtualHubIdResponseArgs) ToVirtualHubIdResponseOutputWithContext(ctx context.Context) VirtualHubIdResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubIdResponseOutput)
}

func (i VirtualHubIdResponseArgs) ToVirtualHubIdResponsePtrOutput() VirtualHubIdResponsePtrOutput {
	return i.ToVirtualHubIdResponsePtrOutputWithContext(context.Background())
}

func (i VirtualHubIdResponseArgs) ToVirtualHubIdResponsePtrOutputWithContext(ctx context.Context) VirtualHubIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubIdResponseOutput).ToVirtualHubIdResponsePtrOutputWithContext(ctx)
}

// VirtualHubIdResponsePtrInput is an input type that accepts VirtualHubIdResponseArgs, VirtualHubIdResponsePtr and VirtualHubIdResponsePtrOutput values.
// You can construct a concrete instance of `VirtualHubIdResponsePtrInput` via:
//
//          VirtualHubIdResponseArgs{...}
//
//  or:
//
//          nil
type VirtualHubIdResponsePtrInput interface {
	pulumi.Input

	ToVirtualHubIdResponsePtrOutput() VirtualHubIdResponsePtrOutput
	ToVirtualHubIdResponsePtrOutputWithContext(context.Context) VirtualHubIdResponsePtrOutput
}

type virtualHubIdResponsePtrType VirtualHubIdResponseArgs

func VirtualHubIdResponsePtr(v *VirtualHubIdResponseArgs) VirtualHubIdResponsePtrInput {
	return (*virtualHubIdResponsePtrType)(v)
}

func (*virtualHubIdResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubIdResponse)(nil)).Elem()
}

func (i *virtualHubIdResponsePtrType) ToVirtualHubIdResponsePtrOutput() VirtualHubIdResponsePtrOutput {
	return i.ToVirtualHubIdResponsePtrOutputWithContext(context.Background())
}

func (i *virtualHubIdResponsePtrType) ToVirtualHubIdResponsePtrOutputWithContext(ctx context.Context) VirtualHubIdResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubIdResponsePtrOutput)
}

// Virtual Hub identifier.
type VirtualHubIdResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubIdResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubIdResponse)(nil)).Elem()
}

func (o VirtualHubIdResponseOutput) ToVirtualHubIdResponseOutput() VirtualHubIdResponseOutput {
	return o
}

func (o VirtualHubIdResponseOutput) ToVirtualHubIdResponseOutputWithContext(ctx context.Context) VirtualHubIdResponseOutput {
	return o
}

func (o VirtualHubIdResponseOutput) ToVirtualHubIdResponsePtrOutput() VirtualHubIdResponsePtrOutput {
	return o.ToVirtualHubIdResponsePtrOutputWithContext(context.Background())
}

func (o VirtualHubIdResponseOutput) ToVirtualHubIdResponsePtrOutputWithContext(ctx context.Context) VirtualHubIdResponsePtrOutput {
	return o.ApplyT(func(v VirtualHubIdResponse) *VirtualHubIdResponse {
		return &v
	}).(VirtualHubIdResponsePtrOutput)
}

// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
func (o VirtualHubIdResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubIdResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type VirtualHubIdResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualHubIdResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubIdResponse)(nil)).Elem()
}

func (o VirtualHubIdResponsePtrOutput) ToVirtualHubIdResponsePtrOutput() VirtualHubIdResponsePtrOutput {
	return o
}

func (o VirtualHubIdResponsePtrOutput) ToVirtualHubIdResponsePtrOutputWithContext(ctx context.Context) VirtualHubIdResponsePtrOutput {
	return o
}

func (o VirtualHubIdResponsePtrOutput) Elem() VirtualHubIdResponseOutput {
	return o.ApplyT(func(v *VirtualHubIdResponse) VirtualHubIdResponse { return *v }).(VirtualHubIdResponseOutput)
}

// The resource URI for the Virtual Hub where the ExpressRoute gateway is or will be deployed. The Virtual Hub resource and the ExpressRoute gateway resource reside in the same subscription.
func (o VirtualHubIdResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualHubIdResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// VirtualHub route.
type VirtualHubRoute struct {
	// List of all addressPrefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// NextHop ip address.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
}

// VirtualHubRouteInput is an input type that accepts VirtualHubRouteArgs and VirtualHubRouteOutput values.
// You can construct a concrete instance of `VirtualHubRouteInput` via:
//
//          VirtualHubRouteArgs{...}
type VirtualHubRouteInput interface {
	pulumi.Input

	ToVirtualHubRouteOutput() VirtualHubRouteOutput
	ToVirtualHubRouteOutputWithContext(context.Context) VirtualHubRouteOutput
}

// VirtualHub route.
type VirtualHubRouteArgs struct {
	// List of all addressPrefixes.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// NextHop ip address.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
}

func (VirtualHubRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRoute)(nil)).Elem()
}

func (i VirtualHubRouteArgs) ToVirtualHubRouteOutput() VirtualHubRouteOutput {
	return i.ToVirtualHubRouteOutputWithContext(context.Background())
}

func (i VirtualHubRouteArgs) ToVirtualHubRouteOutputWithContext(ctx context.Context) VirtualHubRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteOutput)
}

// VirtualHubRouteArrayInput is an input type that accepts VirtualHubRouteArray and VirtualHubRouteArrayOutput values.
// You can construct a concrete instance of `VirtualHubRouteArrayInput` via:
//
//          VirtualHubRouteArray{ VirtualHubRouteArgs{...} }
type VirtualHubRouteArrayInput interface {
	pulumi.Input

	ToVirtualHubRouteArrayOutput() VirtualHubRouteArrayOutput
	ToVirtualHubRouteArrayOutputWithContext(context.Context) VirtualHubRouteArrayOutput
}

type VirtualHubRouteArray []VirtualHubRouteInput

func (VirtualHubRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRoute)(nil)).Elem()
}

func (i VirtualHubRouteArray) ToVirtualHubRouteArrayOutput() VirtualHubRouteArrayOutput {
	return i.ToVirtualHubRouteArrayOutputWithContext(context.Background())
}

func (i VirtualHubRouteArray) ToVirtualHubRouteArrayOutputWithContext(ctx context.Context) VirtualHubRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteArrayOutput)
}

// VirtualHub route.
type VirtualHubRouteOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRoute)(nil)).Elem()
}

func (o VirtualHubRouteOutput) ToVirtualHubRouteOutput() VirtualHubRouteOutput {
	return o
}

func (o VirtualHubRouteOutput) ToVirtualHubRouteOutputWithContext(ctx context.Context) VirtualHubRouteOutput {
	return o
}

// List of all addressPrefixes.
func (o VirtualHubRouteOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRoute) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// NextHop ip address.
func (o VirtualHubRouteOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRoute) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

type VirtualHubRouteArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRoute)(nil)).Elem()
}

func (o VirtualHubRouteArrayOutput) ToVirtualHubRouteArrayOutput() VirtualHubRouteArrayOutput {
	return o
}

func (o VirtualHubRouteArrayOutput) ToVirtualHubRouteArrayOutputWithContext(ctx context.Context) VirtualHubRouteArrayOutput {
	return o
}

func (o VirtualHubRouteArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRoute {
		return vs[0].([]VirtualHubRoute)[vs[1].(int)]
	}).(VirtualHubRouteOutput)
}

// VirtualHub route.
type VirtualHubRouteResponse struct {
	// List of all addressPrefixes.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
	// NextHop ip address.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
}

// VirtualHubRouteResponseInput is an input type that accepts VirtualHubRouteResponseArgs and VirtualHubRouteResponseOutput values.
// You can construct a concrete instance of `VirtualHubRouteResponseInput` via:
//
//          VirtualHubRouteResponseArgs{...}
type VirtualHubRouteResponseInput interface {
	pulumi.Input

	ToVirtualHubRouteResponseOutput() VirtualHubRouteResponseOutput
	ToVirtualHubRouteResponseOutputWithContext(context.Context) VirtualHubRouteResponseOutput
}

// VirtualHub route.
type VirtualHubRouteResponseArgs struct {
	// List of all addressPrefixes.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
	// NextHop ip address.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
}

func (VirtualHubRouteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteResponse)(nil)).Elem()
}

func (i VirtualHubRouteResponseArgs) ToVirtualHubRouteResponseOutput() VirtualHubRouteResponseOutput {
	return i.ToVirtualHubRouteResponseOutputWithContext(context.Background())
}

func (i VirtualHubRouteResponseArgs) ToVirtualHubRouteResponseOutputWithContext(ctx context.Context) VirtualHubRouteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteResponseOutput)
}

// VirtualHubRouteResponseArrayInput is an input type that accepts VirtualHubRouteResponseArray and VirtualHubRouteResponseArrayOutput values.
// You can construct a concrete instance of `VirtualHubRouteResponseArrayInput` via:
//
//          VirtualHubRouteResponseArray{ VirtualHubRouteResponseArgs{...} }
type VirtualHubRouteResponseArrayInput interface {
	pulumi.Input

	ToVirtualHubRouteResponseArrayOutput() VirtualHubRouteResponseArrayOutput
	ToVirtualHubRouteResponseArrayOutputWithContext(context.Context) VirtualHubRouteResponseArrayOutput
}

type VirtualHubRouteResponseArray []VirtualHubRouteResponseInput

func (VirtualHubRouteResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteResponse)(nil)).Elem()
}

func (i VirtualHubRouteResponseArray) ToVirtualHubRouteResponseArrayOutput() VirtualHubRouteResponseArrayOutput {
	return i.ToVirtualHubRouteResponseArrayOutputWithContext(context.Background())
}

func (i VirtualHubRouteResponseArray) ToVirtualHubRouteResponseArrayOutputWithContext(ctx context.Context) VirtualHubRouteResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteResponseArrayOutput)
}

// VirtualHub route.
type VirtualHubRouteResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteResponse)(nil)).Elem()
}

func (o VirtualHubRouteResponseOutput) ToVirtualHubRouteResponseOutput() VirtualHubRouteResponseOutput {
	return o
}

func (o VirtualHubRouteResponseOutput) ToVirtualHubRouteResponseOutputWithContext(ctx context.Context) VirtualHubRouteResponseOutput {
	return o
}

// List of all addressPrefixes.
func (o VirtualHubRouteResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

// NextHop ip address.
func (o VirtualHubRouteResponseOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteResponse) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

type VirtualHubRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteResponse)(nil)).Elem()
}

func (o VirtualHubRouteResponseArrayOutput) ToVirtualHubRouteResponseArrayOutput() VirtualHubRouteResponseArrayOutput {
	return o
}

func (o VirtualHubRouteResponseArrayOutput) ToVirtualHubRouteResponseArrayOutputWithContext(ctx context.Context) VirtualHubRouteResponseArrayOutput {
	return o
}

func (o VirtualHubRouteResponseArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteResponse {
		return vs[0].([]VirtualHubRouteResponse)[vs[1].(int)]
	}).(VirtualHubRouteResponseOutput)
}

// VirtualHub route table.
type VirtualHubRouteTable struct {
	// List of all routes.
	Routes []VirtualHubRoute `pulumi:"routes"`
}

// VirtualHubRouteTableInput is an input type that accepts VirtualHubRouteTableArgs and VirtualHubRouteTableOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableInput` via:
//
//          VirtualHubRouteTableArgs{...}
type VirtualHubRouteTableInput interface {
	pulumi.Input

	ToVirtualHubRouteTableOutput() VirtualHubRouteTableOutput
	ToVirtualHubRouteTableOutputWithContext(context.Context) VirtualHubRouteTableOutput
}

// VirtualHub route table.
type VirtualHubRouteTableArgs struct {
	// List of all routes.
	Routes VirtualHubRouteArrayInput `pulumi:"routes"`
}

func (VirtualHubRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTable)(nil)).Elem()
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTableOutput() VirtualHubRouteTableOutput {
	return i.ToVirtualHubRouteTableOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTableOutputWithContext(ctx context.Context) VirtualHubRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableOutput)
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return i.ToVirtualHubRouteTablePtrOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableArgs) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableOutput).ToVirtualHubRouteTablePtrOutputWithContext(ctx)
}

// VirtualHubRouteTablePtrInput is an input type that accepts VirtualHubRouteTableArgs, VirtualHubRouteTablePtr and VirtualHubRouteTablePtrOutput values.
// You can construct a concrete instance of `VirtualHubRouteTablePtrInput` via:
//
//          VirtualHubRouteTableArgs{...}
//
//  or:
//
//          nil
type VirtualHubRouteTablePtrInput interface {
	pulumi.Input

	ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput
	ToVirtualHubRouteTablePtrOutputWithContext(context.Context) VirtualHubRouteTablePtrOutput
}

type virtualHubRouteTablePtrType VirtualHubRouteTableArgs

func VirtualHubRouteTablePtr(v *VirtualHubRouteTableArgs) VirtualHubRouteTablePtrInput {
	return (*virtualHubRouteTablePtrType)(v)
}

func (*virtualHubRouteTablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubRouteTable)(nil)).Elem()
}

func (i *virtualHubRouteTablePtrType) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return i.ToVirtualHubRouteTablePtrOutputWithContext(context.Background())
}

func (i *virtualHubRouteTablePtrType) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTablePtrOutput)
}

// VirtualHub route table.
type VirtualHubRouteTableOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTable)(nil)).Elem()
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTableOutput() VirtualHubRouteTableOutput {
	return o
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTableOutputWithContext(ctx context.Context) VirtualHubRouteTableOutput {
	return o
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return o.ToVirtualHubRouteTablePtrOutputWithContext(context.Background())
}

func (o VirtualHubRouteTableOutput) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTable) *VirtualHubRouteTable {
		return &v
	}).(VirtualHubRouteTablePtrOutput)
}

// List of all routes.
func (o VirtualHubRouteTableOutput) Routes() VirtualHubRouteArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTable) []VirtualHubRoute { return v.Routes }).(VirtualHubRouteArrayOutput)
}

type VirtualHubRouteTablePtrOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubRouteTable)(nil)).Elem()
}

func (o VirtualHubRouteTablePtrOutput) ToVirtualHubRouteTablePtrOutput() VirtualHubRouteTablePtrOutput {
	return o
}

func (o VirtualHubRouteTablePtrOutput) ToVirtualHubRouteTablePtrOutputWithContext(ctx context.Context) VirtualHubRouteTablePtrOutput {
	return o
}

func (o VirtualHubRouteTablePtrOutput) Elem() VirtualHubRouteTableOutput {
	return o.ApplyT(func(v *VirtualHubRouteTable) VirtualHubRouteTable { return *v }).(VirtualHubRouteTableOutput)
}

// List of all routes.
func (o VirtualHubRouteTablePtrOutput) Routes() VirtualHubRouteArrayOutput {
	return o.ApplyT(func(v *VirtualHubRouteTable) []VirtualHubRoute {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(VirtualHubRouteArrayOutput)
}

// VirtualHub route table.
type VirtualHubRouteTableResponse struct {
	// List of all routes.
	Routes []VirtualHubRouteResponse `pulumi:"routes"`
}

// VirtualHubRouteTableResponseInput is an input type that accepts VirtualHubRouteTableResponseArgs and VirtualHubRouteTableResponseOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableResponseInput` via:
//
//          VirtualHubRouteTableResponseArgs{...}
type VirtualHubRouteTableResponseInput interface {
	pulumi.Input

	ToVirtualHubRouteTableResponseOutput() VirtualHubRouteTableResponseOutput
	ToVirtualHubRouteTableResponseOutputWithContext(context.Context) VirtualHubRouteTableResponseOutput
}

// VirtualHub route table.
type VirtualHubRouteTableResponseArgs struct {
	// List of all routes.
	Routes VirtualHubRouteResponseArrayInput `pulumi:"routes"`
}

func (VirtualHubRouteTableResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableResponse)(nil)).Elem()
}

func (i VirtualHubRouteTableResponseArgs) ToVirtualHubRouteTableResponseOutput() VirtualHubRouteTableResponseOutput {
	return i.ToVirtualHubRouteTableResponseOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableResponseArgs) ToVirtualHubRouteTableResponseOutputWithContext(ctx context.Context) VirtualHubRouteTableResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableResponseOutput)
}

func (i VirtualHubRouteTableResponseArgs) ToVirtualHubRouteTableResponsePtrOutput() VirtualHubRouteTableResponsePtrOutput {
	return i.ToVirtualHubRouteTableResponsePtrOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableResponseArgs) ToVirtualHubRouteTableResponsePtrOutputWithContext(ctx context.Context) VirtualHubRouteTableResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableResponseOutput).ToVirtualHubRouteTableResponsePtrOutputWithContext(ctx)
}

// VirtualHubRouteTableResponsePtrInput is an input type that accepts VirtualHubRouteTableResponseArgs, VirtualHubRouteTableResponsePtr and VirtualHubRouteTableResponsePtrOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableResponsePtrInput` via:
//
//          VirtualHubRouteTableResponseArgs{...}
//
//  or:
//
//          nil
type VirtualHubRouteTableResponsePtrInput interface {
	pulumi.Input

	ToVirtualHubRouteTableResponsePtrOutput() VirtualHubRouteTableResponsePtrOutput
	ToVirtualHubRouteTableResponsePtrOutputWithContext(context.Context) VirtualHubRouteTableResponsePtrOutput
}

type virtualHubRouteTableResponsePtrType VirtualHubRouteTableResponseArgs

func VirtualHubRouteTableResponsePtr(v *VirtualHubRouteTableResponseArgs) VirtualHubRouteTableResponsePtrInput {
	return (*virtualHubRouteTableResponsePtrType)(v)
}

func (*virtualHubRouteTableResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubRouteTableResponse)(nil)).Elem()
}

func (i *virtualHubRouteTableResponsePtrType) ToVirtualHubRouteTableResponsePtrOutput() VirtualHubRouteTableResponsePtrOutput {
	return i.ToVirtualHubRouteTableResponsePtrOutputWithContext(context.Background())
}

func (i *virtualHubRouteTableResponsePtrType) ToVirtualHubRouteTableResponsePtrOutputWithContext(ctx context.Context) VirtualHubRouteTableResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableResponsePtrOutput)
}

// VirtualHub route table.
type VirtualHubRouteTableResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableResponse)(nil)).Elem()
}

func (o VirtualHubRouteTableResponseOutput) ToVirtualHubRouteTableResponseOutput() VirtualHubRouteTableResponseOutput {
	return o
}

func (o VirtualHubRouteTableResponseOutput) ToVirtualHubRouteTableResponseOutputWithContext(ctx context.Context) VirtualHubRouteTableResponseOutput {
	return o
}

func (o VirtualHubRouteTableResponseOutput) ToVirtualHubRouteTableResponsePtrOutput() VirtualHubRouteTableResponsePtrOutput {
	return o.ToVirtualHubRouteTableResponsePtrOutputWithContext(context.Background())
}

func (o VirtualHubRouteTableResponseOutput) ToVirtualHubRouteTableResponsePtrOutputWithContext(ctx context.Context) VirtualHubRouteTableResponsePtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTableResponse) *VirtualHubRouteTableResponse {
		return &v
	}).(VirtualHubRouteTableResponsePtrOutput)
}

// List of all routes.
func (o VirtualHubRouteTableResponseOutput) Routes() VirtualHubRouteResponseArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableResponse) []VirtualHubRouteResponse { return v.Routes }).(VirtualHubRouteResponseArrayOutput)
}

type VirtualHubRouteTableResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualHubRouteTableResponse)(nil)).Elem()
}

func (o VirtualHubRouteTableResponsePtrOutput) ToVirtualHubRouteTableResponsePtrOutput() VirtualHubRouteTableResponsePtrOutput {
	return o
}

func (o VirtualHubRouteTableResponsePtrOutput) ToVirtualHubRouteTableResponsePtrOutputWithContext(ctx context.Context) VirtualHubRouteTableResponsePtrOutput {
	return o
}

func (o VirtualHubRouteTableResponsePtrOutput) Elem() VirtualHubRouteTableResponseOutput {
	return o.ApplyT(func(v *VirtualHubRouteTableResponse) VirtualHubRouteTableResponse { return *v }).(VirtualHubRouteTableResponseOutput)
}

// List of all routes.
func (o VirtualHubRouteTableResponsePtrOutput) Routes() VirtualHubRouteResponseArrayOutput {
	return o.ApplyT(func(v *VirtualHubRouteTableResponse) []VirtualHubRouteResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(VirtualHubRouteResponseArrayOutput)
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2Type struct {
	// List of all connections attached to this route table v2.
	AttachedConnections []string `pulumi:"attachedConnections"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// List of all routes.
	Routes []VirtualHubRouteV2 `pulumi:"routes"`
}

// VirtualHubRouteTableV2TypeInput is an input type that accepts VirtualHubRouteTableV2TypeArgs and VirtualHubRouteTableV2TypeOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableV2TypeInput` via:
//
//          VirtualHubRouteTableV2TypeArgs{...}
type VirtualHubRouteTableV2TypeInput interface {
	pulumi.Input

	ToVirtualHubRouteTableV2TypeOutput() VirtualHubRouteTableV2TypeOutput
	ToVirtualHubRouteTableV2TypeOutputWithContext(context.Context) VirtualHubRouteTableV2TypeOutput
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2TypeArgs struct {
	// List of all connections attached to this route table v2.
	AttachedConnections pulumi.StringArrayInput `pulumi:"attachedConnections"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of all routes.
	Routes VirtualHubRouteV2ArrayInput `pulumi:"routes"`
}

func (VirtualHubRouteTableV2TypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableV2Type)(nil)).Elem()
}

func (i VirtualHubRouteTableV2TypeArgs) ToVirtualHubRouteTableV2TypeOutput() VirtualHubRouteTableV2TypeOutput {
	return i.ToVirtualHubRouteTableV2TypeOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableV2TypeArgs) ToVirtualHubRouteTableV2TypeOutputWithContext(ctx context.Context) VirtualHubRouteTableV2TypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableV2TypeOutput)
}

// VirtualHubRouteTableV2TypeArrayInput is an input type that accepts VirtualHubRouteTableV2TypeArray and VirtualHubRouteTableV2TypeArrayOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableV2TypeArrayInput` via:
//
//          VirtualHubRouteTableV2TypeArray{ VirtualHubRouteTableV2TypeArgs{...} }
type VirtualHubRouteTableV2TypeArrayInput interface {
	pulumi.Input

	ToVirtualHubRouteTableV2TypeArrayOutput() VirtualHubRouteTableV2TypeArrayOutput
	ToVirtualHubRouteTableV2TypeArrayOutputWithContext(context.Context) VirtualHubRouteTableV2TypeArrayOutput
}

type VirtualHubRouteTableV2TypeArray []VirtualHubRouteTableV2TypeInput

func (VirtualHubRouteTableV2TypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteTableV2Type)(nil)).Elem()
}

func (i VirtualHubRouteTableV2TypeArray) ToVirtualHubRouteTableV2TypeArrayOutput() VirtualHubRouteTableV2TypeArrayOutput {
	return i.ToVirtualHubRouteTableV2TypeArrayOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableV2TypeArray) ToVirtualHubRouteTableV2TypeArrayOutputWithContext(ctx context.Context) VirtualHubRouteTableV2TypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableV2TypeArrayOutput)
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2TypeOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableV2TypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableV2Type)(nil)).Elem()
}

func (o VirtualHubRouteTableV2TypeOutput) ToVirtualHubRouteTableV2TypeOutput() VirtualHubRouteTableV2TypeOutput {
	return o
}

func (o VirtualHubRouteTableV2TypeOutput) ToVirtualHubRouteTableV2TypeOutputWithContext(ctx context.Context) VirtualHubRouteTableV2TypeOutput {
	return o
}

// List of all connections attached to this route table v2.
func (o VirtualHubRouteTableV2TypeOutput) AttachedConnections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Type) []string { return v.AttachedConnections }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o VirtualHubRouteTableV2TypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Type) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualHubRouteTableV2TypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Type) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of all routes.
func (o VirtualHubRouteTableV2TypeOutput) Routes() VirtualHubRouteV2ArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Type) []VirtualHubRouteV2 { return v.Routes }).(VirtualHubRouteV2ArrayOutput)
}

type VirtualHubRouteTableV2TypeArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableV2TypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteTableV2Type)(nil)).Elem()
}

func (o VirtualHubRouteTableV2TypeArrayOutput) ToVirtualHubRouteTableV2TypeArrayOutput() VirtualHubRouteTableV2TypeArrayOutput {
	return o
}

func (o VirtualHubRouteTableV2TypeArrayOutput) ToVirtualHubRouteTableV2TypeArrayOutputWithContext(ctx context.Context) VirtualHubRouteTableV2TypeArrayOutput {
	return o
}

func (o VirtualHubRouteTableV2TypeArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteTableV2TypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteTableV2Type {
		return vs[0].([]VirtualHubRouteTableV2Type)[vs[1].(int)]
	}).(VirtualHubRouteTableV2TypeOutput)
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2Response struct {
	// List of all connections attached to this route table v2.
	AttachedConnections []string `pulumi:"attachedConnections"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the virtual hub route table v2 resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// List of all routes.
	Routes []VirtualHubRouteV2Response `pulumi:"routes"`
}

// VirtualHubRouteTableV2ResponseInput is an input type that accepts VirtualHubRouteTableV2ResponseArgs and VirtualHubRouteTableV2ResponseOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableV2ResponseInput` via:
//
//          VirtualHubRouteTableV2ResponseArgs{...}
type VirtualHubRouteTableV2ResponseInput interface {
	pulumi.Input

	ToVirtualHubRouteTableV2ResponseOutput() VirtualHubRouteTableV2ResponseOutput
	ToVirtualHubRouteTableV2ResponseOutputWithContext(context.Context) VirtualHubRouteTableV2ResponseOutput
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2ResponseArgs struct {
	// List of all connections attached to this route table v2.
	AttachedConnections pulumi.StringArrayInput `pulumi:"attachedConnections"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the virtual hub route table v2 resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// List of all routes.
	Routes VirtualHubRouteV2ResponseArrayInput `pulumi:"routes"`
}

func (VirtualHubRouteTableV2ResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableV2Response)(nil)).Elem()
}

func (i VirtualHubRouteTableV2ResponseArgs) ToVirtualHubRouteTableV2ResponseOutput() VirtualHubRouteTableV2ResponseOutput {
	return i.ToVirtualHubRouteTableV2ResponseOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableV2ResponseArgs) ToVirtualHubRouteTableV2ResponseOutputWithContext(ctx context.Context) VirtualHubRouteTableV2ResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableV2ResponseOutput)
}

// VirtualHubRouteTableV2ResponseArrayInput is an input type that accepts VirtualHubRouteTableV2ResponseArray and VirtualHubRouteTableV2ResponseArrayOutput values.
// You can construct a concrete instance of `VirtualHubRouteTableV2ResponseArrayInput` via:
//
//          VirtualHubRouteTableV2ResponseArray{ VirtualHubRouteTableV2ResponseArgs{...} }
type VirtualHubRouteTableV2ResponseArrayInput interface {
	pulumi.Input

	ToVirtualHubRouteTableV2ResponseArrayOutput() VirtualHubRouteTableV2ResponseArrayOutput
	ToVirtualHubRouteTableV2ResponseArrayOutputWithContext(context.Context) VirtualHubRouteTableV2ResponseArrayOutput
}

type VirtualHubRouteTableV2ResponseArray []VirtualHubRouteTableV2ResponseInput

func (VirtualHubRouteTableV2ResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteTableV2Response)(nil)).Elem()
}

func (i VirtualHubRouteTableV2ResponseArray) ToVirtualHubRouteTableV2ResponseArrayOutput() VirtualHubRouteTableV2ResponseArrayOutput {
	return i.ToVirtualHubRouteTableV2ResponseArrayOutputWithContext(context.Background())
}

func (i VirtualHubRouteTableV2ResponseArray) ToVirtualHubRouteTableV2ResponseArrayOutputWithContext(ctx context.Context) VirtualHubRouteTableV2ResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteTableV2ResponseArrayOutput)
}

// VirtualHubRouteTableV2 Resource.
type VirtualHubRouteTableV2ResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableV2ResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteTableV2Response)(nil)).Elem()
}

func (o VirtualHubRouteTableV2ResponseOutput) ToVirtualHubRouteTableV2ResponseOutput() VirtualHubRouteTableV2ResponseOutput {
	return o
}

func (o VirtualHubRouteTableV2ResponseOutput) ToVirtualHubRouteTableV2ResponseOutputWithContext(ctx context.Context) VirtualHubRouteTableV2ResponseOutput {
	return o
}

// List of all connections attached to this route table v2.
func (o VirtualHubRouteTableV2ResponseOutput) AttachedConnections() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) []string { return v.AttachedConnections }).(pulumi.StringArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualHubRouteTableV2ResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VirtualHubRouteTableV2ResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualHubRouteTableV2ResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the virtual hub route table v2 resource.
func (o VirtualHubRouteTableV2ResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// List of all routes.
func (o VirtualHubRouteTableV2ResponseOutput) Routes() VirtualHubRouteV2ResponseArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteTableV2Response) []VirtualHubRouteV2Response { return v.Routes }).(VirtualHubRouteV2ResponseArrayOutput)
}

type VirtualHubRouteTableV2ResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteTableV2ResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteTableV2Response)(nil)).Elem()
}

func (o VirtualHubRouteTableV2ResponseArrayOutput) ToVirtualHubRouteTableV2ResponseArrayOutput() VirtualHubRouteTableV2ResponseArrayOutput {
	return o
}

func (o VirtualHubRouteTableV2ResponseArrayOutput) ToVirtualHubRouteTableV2ResponseArrayOutputWithContext(ctx context.Context) VirtualHubRouteTableV2ResponseArrayOutput {
	return o
}

func (o VirtualHubRouteTableV2ResponseArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteTableV2ResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteTableV2Response {
		return vs[0].([]VirtualHubRouteTableV2Response)[vs[1].(int)]
	}).(VirtualHubRouteTableV2ResponseOutput)
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2 struct {
	// The type of destinations.
	DestinationType *string `pulumi:"destinationType"`
	// List of all destinations.
	Destinations []string `pulumi:"destinations"`
	// The type of next hops.
	NextHopType *string `pulumi:"nextHopType"`
	// NextHops ip address.
	NextHops []string `pulumi:"nextHops"`
}

// VirtualHubRouteV2Input is an input type that accepts VirtualHubRouteV2Args and VirtualHubRouteV2Output values.
// You can construct a concrete instance of `VirtualHubRouteV2Input` via:
//
//          VirtualHubRouteV2Args{...}
type VirtualHubRouteV2Input interface {
	pulumi.Input

	ToVirtualHubRouteV2Output() VirtualHubRouteV2Output
	ToVirtualHubRouteV2OutputWithContext(context.Context) VirtualHubRouteV2Output
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2Args struct {
	// The type of destinations.
	DestinationType pulumi.StringPtrInput `pulumi:"destinationType"`
	// List of all destinations.
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	// The type of next hops.
	NextHopType pulumi.StringPtrInput `pulumi:"nextHopType"`
	// NextHops ip address.
	NextHops pulumi.StringArrayInput `pulumi:"nextHops"`
}

func (VirtualHubRouteV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteV2)(nil)).Elem()
}

func (i VirtualHubRouteV2Args) ToVirtualHubRouteV2Output() VirtualHubRouteV2Output {
	return i.ToVirtualHubRouteV2OutputWithContext(context.Background())
}

func (i VirtualHubRouteV2Args) ToVirtualHubRouteV2OutputWithContext(ctx context.Context) VirtualHubRouteV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteV2Output)
}

// VirtualHubRouteV2ArrayInput is an input type that accepts VirtualHubRouteV2Array and VirtualHubRouteV2ArrayOutput values.
// You can construct a concrete instance of `VirtualHubRouteV2ArrayInput` via:
//
//          VirtualHubRouteV2Array{ VirtualHubRouteV2Args{...} }
type VirtualHubRouteV2ArrayInput interface {
	pulumi.Input

	ToVirtualHubRouteV2ArrayOutput() VirtualHubRouteV2ArrayOutput
	ToVirtualHubRouteV2ArrayOutputWithContext(context.Context) VirtualHubRouteV2ArrayOutput
}

type VirtualHubRouteV2Array []VirtualHubRouteV2Input

func (VirtualHubRouteV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteV2)(nil)).Elem()
}

func (i VirtualHubRouteV2Array) ToVirtualHubRouteV2ArrayOutput() VirtualHubRouteV2ArrayOutput {
	return i.ToVirtualHubRouteV2ArrayOutputWithContext(context.Background())
}

func (i VirtualHubRouteV2Array) ToVirtualHubRouteV2ArrayOutputWithContext(ctx context.Context) VirtualHubRouteV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteV2ArrayOutput)
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2Output struct{ *pulumi.OutputState }

func (VirtualHubRouteV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteV2)(nil)).Elem()
}

func (o VirtualHubRouteV2Output) ToVirtualHubRouteV2Output() VirtualHubRouteV2Output {
	return o
}

func (o VirtualHubRouteV2Output) ToVirtualHubRouteV2OutputWithContext(ctx context.Context) VirtualHubRouteV2Output {
	return o
}

// The type of destinations.
func (o VirtualHubRouteV2Output) DestinationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteV2) *string { return v.DestinationType }).(pulumi.StringPtrOutput)
}

// List of all destinations.
func (o VirtualHubRouteV2Output) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteV2) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The type of next hops.
func (o VirtualHubRouteV2Output) NextHopType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteV2) *string { return v.NextHopType }).(pulumi.StringPtrOutput)
}

// NextHops ip address.
func (o VirtualHubRouteV2Output) NextHops() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteV2) []string { return v.NextHops }).(pulumi.StringArrayOutput)
}

type VirtualHubRouteV2ArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteV2)(nil)).Elem()
}

func (o VirtualHubRouteV2ArrayOutput) ToVirtualHubRouteV2ArrayOutput() VirtualHubRouteV2ArrayOutput {
	return o
}

func (o VirtualHubRouteV2ArrayOutput) ToVirtualHubRouteV2ArrayOutputWithContext(ctx context.Context) VirtualHubRouteV2ArrayOutput {
	return o
}

func (o VirtualHubRouteV2ArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteV2 {
		return vs[0].([]VirtualHubRouteV2)[vs[1].(int)]
	}).(VirtualHubRouteV2Output)
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2Response struct {
	// The type of destinations.
	DestinationType *string `pulumi:"destinationType"`
	// List of all destinations.
	Destinations []string `pulumi:"destinations"`
	// The type of next hops.
	NextHopType *string `pulumi:"nextHopType"`
	// NextHops ip address.
	NextHops []string `pulumi:"nextHops"`
}

// VirtualHubRouteV2ResponseInput is an input type that accepts VirtualHubRouteV2ResponseArgs and VirtualHubRouteV2ResponseOutput values.
// You can construct a concrete instance of `VirtualHubRouteV2ResponseInput` via:
//
//          VirtualHubRouteV2ResponseArgs{...}
type VirtualHubRouteV2ResponseInput interface {
	pulumi.Input

	ToVirtualHubRouteV2ResponseOutput() VirtualHubRouteV2ResponseOutput
	ToVirtualHubRouteV2ResponseOutputWithContext(context.Context) VirtualHubRouteV2ResponseOutput
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2ResponseArgs struct {
	// The type of destinations.
	DestinationType pulumi.StringPtrInput `pulumi:"destinationType"`
	// List of all destinations.
	Destinations pulumi.StringArrayInput `pulumi:"destinations"`
	// The type of next hops.
	NextHopType pulumi.StringPtrInput `pulumi:"nextHopType"`
	// NextHops ip address.
	NextHops pulumi.StringArrayInput `pulumi:"nextHops"`
}

func (VirtualHubRouteV2ResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteV2Response)(nil)).Elem()
}

func (i VirtualHubRouteV2ResponseArgs) ToVirtualHubRouteV2ResponseOutput() VirtualHubRouteV2ResponseOutput {
	return i.ToVirtualHubRouteV2ResponseOutputWithContext(context.Background())
}

func (i VirtualHubRouteV2ResponseArgs) ToVirtualHubRouteV2ResponseOutputWithContext(ctx context.Context) VirtualHubRouteV2ResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteV2ResponseOutput)
}

// VirtualHubRouteV2ResponseArrayInput is an input type that accepts VirtualHubRouteV2ResponseArray and VirtualHubRouteV2ResponseArrayOutput values.
// You can construct a concrete instance of `VirtualHubRouteV2ResponseArrayInput` via:
//
//          VirtualHubRouteV2ResponseArray{ VirtualHubRouteV2ResponseArgs{...} }
type VirtualHubRouteV2ResponseArrayInput interface {
	pulumi.Input

	ToVirtualHubRouteV2ResponseArrayOutput() VirtualHubRouteV2ResponseArrayOutput
	ToVirtualHubRouteV2ResponseArrayOutputWithContext(context.Context) VirtualHubRouteV2ResponseArrayOutput
}

type VirtualHubRouteV2ResponseArray []VirtualHubRouteV2ResponseInput

func (VirtualHubRouteV2ResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteV2Response)(nil)).Elem()
}

func (i VirtualHubRouteV2ResponseArray) ToVirtualHubRouteV2ResponseArrayOutput() VirtualHubRouteV2ResponseArrayOutput {
	return i.ToVirtualHubRouteV2ResponseArrayOutputWithContext(context.Background())
}

func (i VirtualHubRouteV2ResponseArray) ToVirtualHubRouteV2ResponseArrayOutputWithContext(ctx context.Context) VirtualHubRouteV2ResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualHubRouteV2ResponseArrayOutput)
}

// VirtualHubRouteTableV2 route.
type VirtualHubRouteV2ResponseOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteV2ResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualHubRouteV2Response)(nil)).Elem()
}

func (o VirtualHubRouteV2ResponseOutput) ToVirtualHubRouteV2ResponseOutput() VirtualHubRouteV2ResponseOutput {
	return o
}

func (o VirtualHubRouteV2ResponseOutput) ToVirtualHubRouteV2ResponseOutputWithContext(ctx context.Context) VirtualHubRouteV2ResponseOutput {
	return o
}

// The type of destinations.
func (o VirtualHubRouteV2ResponseOutput) DestinationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteV2Response) *string { return v.DestinationType }).(pulumi.StringPtrOutput)
}

// List of all destinations.
func (o VirtualHubRouteV2ResponseOutput) Destinations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteV2Response) []string { return v.Destinations }).(pulumi.StringArrayOutput)
}

// The type of next hops.
func (o VirtualHubRouteV2ResponseOutput) NextHopType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualHubRouteV2Response) *string { return v.NextHopType }).(pulumi.StringPtrOutput)
}

// NextHops ip address.
func (o VirtualHubRouteV2ResponseOutput) NextHops() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VirtualHubRouteV2Response) []string { return v.NextHops }).(pulumi.StringArrayOutput)
}

type VirtualHubRouteV2ResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualHubRouteV2ResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualHubRouteV2Response)(nil)).Elem()
}

func (o VirtualHubRouteV2ResponseArrayOutput) ToVirtualHubRouteV2ResponseArrayOutput() VirtualHubRouteV2ResponseArrayOutput {
	return o
}

func (o VirtualHubRouteV2ResponseArrayOutput) ToVirtualHubRouteV2ResponseArrayOutputWithContext(ctx context.Context) VirtualHubRouteV2ResponseArrayOutput {
	return o
}

func (o VirtualHubRouteV2ResponseArrayOutput) Index(i pulumi.IntInput) VirtualHubRouteV2ResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualHubRouteV2Response {
		return vs[0].([]VirtualHubRouteV2Response)[vs[1].(int)]
	}).(VirtualHubRouteV2ResponseOutput)
}

// Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
type VirtualNetworkBgpCommunities struct {
	// The BGP community associated with the virtual network.
	VirtualNetworkCommunity string `pulumi:"virtualNetworkCommunity"`
}

// VirtualNetworkBgpCommunitiesInput is an input type that accepts VirtualNetworkBgpCommunitiesArgs and VirtualNetworkBgpCommunitiesOutput values.
// You can construct a concrete instance of `VirtualNetworkBgpCommunitiesInput` via:
//
//          VirtualNetworkBgpCommunitiesArgs{...}
type VirtualNetworkBgpCommunitiesInput interface {
	pulumi.Input

	ToVirtualNetworkBgpCommunitiesOutput() VirtualNetworkBgpCommunitiesOutput
	ToVirtualNetworkBgpCommunitiesOutputWithContext(context.Context) VirtualNetworkBgpCommunitiesOutput
}

// Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
type VirtualNetworkBgpCommunitiesArgs struct {
	// The BGP community associated with the virtual network.
	VirtualNetworkCommunity pulumi.StringInput `pulumi:"virtualNetworkCommunity"`
}

func (VirtualNetworkBgpCommunitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkBgpCommunities)(nil)).Elem()
}

func (i VirtualNetworkBgpCommunitiesArgs) ToVirtualNetworkBgpCommunitiesOutput() VirtualNetworkBgpCommunitiesOutput {
	return i.ToVirtualNetworkBgpCommunitiesOutputWithContext(context.Background())
}

func (i VirtualNetworkBgpCommunitiesArgs) ToVirtualNetworkBgpCommunitiesOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkBgpCommunitiesOutput)
}

func (i VirtualNetworkBgpCommunitiesArgs) ToVirtualNetworkBgpCommunitiesPtrOutput() VirtualNetworkBgpCommunitiesPtrOutput {
	return i.ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkBgpCommunitiesArgs) ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkBgpCommunitiesOutput).ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(ctx)
}

// VirtualNetworkBgpCommunitiesPtrInput is an input type that accepts VirtualNetworkBgpCommunitiesArgs, VirtualNetworkBgpCommunitiesPtr and VirtualNetworkBgpCommunitiesPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkBgpCommunitiesPtrInput` via:
//
//          VirtualNetworkBgpCommunitiesArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkBgpCommunitiesPtrInput interface {
	pulumi.Input

	ToVirtualNetworkBgpCommunitiesPtrOutput() VirtualNetworkBgpCommunitiesPtrOutput
	ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(context.Context) VirtualNetworkBgpCommunitiesPtrOutput
}

type virtualNetworkBgpCommunitiesPtrType VirtualNetworkBgpCommunitiesArgs

func VirtualNetworkBgpCommunitiesPtr(v *VirtualNetworkBgpCommunitiesArgs) VirtualNetworkBgpCommunitiesPtrInput {
	return (*virtualNetworkBgpCommunitiesPtrType)(v)
}

func (*virtualNetworkBgpCommunitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkBgpCommunities)(nil)).Elem()
}

func (i *virtualNetworkBgpCommunitiesPtrType) ToVirtualNetworkBgpCommunitiesPtrOutput() VirtualNetworkBgpCommunitiesPtrOutput {
	return i.ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkBgpCommunitiesPtrType) ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkBgpCommunitiesPtrOutput)
}

// Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
type VirtualNetworkBgpCommunitiesOutput struct{ *pulumi.OutputState }

func (VirtualNetworkBgpCommunitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkBgpCommunities)(nil)).Elem()
}

func (o VirtualNetworkBgpCommunitiesOutput) ToVirtualNetworkBgpCommunitiesOutput() VirtualNetworkBgpCommunitiesOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesOutput) ToVirtualNetworkBgpCommunitiesOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesOutput) ToVirtualNetworkBgpCommunitiesPtrOutput() VirtualNetworkBgpCommunitiesPtrOutput {
	return o.ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkBgpCommunitiesOutput) ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesPtrOutput {
	return o.ApplyT(func(v VirtualNetworkBgpCommunities) *VirtualNetworkBgpCommunities {
		return &v
	}).(VirtualNetworkBgpCommunitiesPtrOutput)
}

// The BGP community associated with the virtual network.
func (o VirtualNetworkBgpCommunitiesOutput) VirtualNetworkCommunity() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkBgpCommunities) string { return v.VirtualNetworkCommunity }).(pulumi.StringOutput)
}

type VirtualNetworkBgpCommunitiesPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkBgpCommunitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkBgpCommunities)(nil)).Elem()
}

func (o VirtualNetworkBgpCommunitiesPtrOutput) ToVirtualNetworkBgpCommunitiesPtrOutput() VirtualNetworkBgpCommunitiesPtrOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesPtrOutput) ToVirtualNetworkBgpCommunitiesPtrOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesPtrOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesPtrOutput) Elem() VirtualNetworkBgpCommunitiesOutput {
	return o.ApplyT(func(v *VirtualNetworkBgpCommunities) VirtualNetworkBgpCommunities { return *v }).(VirtualNetworkBgpCommunitiesOutput)
}

// The BGP community associated with the virtual network.
func (o VirtualNetworkBgpCommunitiesPtrOutput) VirtualNetworkCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkBgpCommunities) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualNetworkCommunity
	}).(pulumi.StringPtrOutput)
}

// Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
type VirtualNetworkBgpCommunitiesResponse struct {
	// The BGP community associated with the region of the virtual network.
	RegionalCommunity string `pulumi:"regionalCommunity"`
	// The BGP community associated with the virtual network.
	VirtualNetworkCommunity string `pulumi:"virtualNetworkCommunity"`
}

// VirtualNetworkBgpCommunitiesResponseInput is an input type that accepts VirtualNetworkBgpCommunitiesResponseArgs and VirtualNetworkBgpCommunitiesResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkBgpCommunitiesResponseInput` via:
//
//          VirtualNetworkBgpCommunitiesResponseArgs{...}
type VirtualNetworkBgpCommunitiesResponseInput interface {
	pulumi.Input

	ToVirtualNetworkBgpCommunitiesResponseOutput() VirtualNetworkBgpCommunitiesResponseOutput
	ToVirtualNetworkBgpCommunitiesResponseOutputWithContext(context.Context) VirtualNetworkBgpCommunitiesResponseOutput
}

// Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
type VirtualNetworkBgpCommunitiesResponseArgs struct {
	// The BGP community associated with the region of the virtual network.
	RegionalCommunity pulumi.StringInput `pulumi:"regionalCommunity"`
	// The BGP community associated with the virtual network.
	VirtualNetworkCommunity pulumi.StringInput `pulumi:"virtualNetworkCommunity"`
}

func (VirtualNetworkBgpCommunitiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkBgpCommunitiesResponse)(nil)).Elem()
}

func (i VirtualNetworkBgpCommunitiesResponseArgs) ToVirtualNetworkBgpCommunitiesResponseOutput() VirtualNetworkBgpCommunitiesResponseOutput {
	return i.ToVirtualNetworkBgpCommunitiesResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkBgpCommunitiesResponseArgs) ToVirtualNetworkBgpCommunitiesResponseOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkBgpCommunitiesResponseOutput)
}

func (i VirtualNetworkBgpCommunitiesResponseArgs) ToVirtualNetworkBgpCommunitiesResponsePtrOutput() VirtualNetworkBgpCommunitiesResponsePtrOutput {
	return i.ToVirtualNetworkBgpCommunitiesResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkBgpCommunitiesResponseArgs) ToVirtualNetworkBgpCommunitiesResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkBgpCommunitiesResponseOutput).ToVirtualNetworkBgpCommunitiesResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkBgpCommunitiesResponsePtrInput is an input type that accepts VirtualNetworkBgpCommunitiesResponseArgs, VirtualNetworkBgpCommunitiesResponsePtr and VirtualNetworkBgpCommunitiesResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkBgpCommunitiesResponsePtrInput` via:
//
//          VirtualNetworkBgpCommunitiesResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkBgpCommunitiesResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkBgpCommunitiesResponsePtrOutput() VirtualNetworkBgpCommunitiesResponsePtrOutput
	ToVirtualNetworkBgpCommunitiesResponsePtrOutputWithContext(context.Context) VirtualNetworkBgpCommunitiesResponsePtrOutput
}

type virtualNetworkBgpCommunitiesResponsePtrType VirtualNetworkBgpCommunitiesResponseArgs

func VirtualNetworkBgpCommunitiesResponsePtr(v *VirtualNetworkBgpCommunitiesResponseArgs) VirtualNetworkBgpCommunitiesResponsePtrInput {
	return (*virtualNetworkBgpCommunitiesResponsePtrType)(v)
}

func (*virtualNetworkBgpCommunitiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkBgpCommunitiesResponse)(nil)).Elem()
}

func (i *virtualNetworkBgpCommunitiesResponsePtrType) ToVirtualNetworkBgpCommunitiesResponsePtrOutput() VirtualNetworkBgpCommunitiesResponsePtrOutput {
	return i.ToVirtualNetworkBgpCommunitiesResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkBgpCommunitiesResponsePtrType) ToVirtualNetworkBgpCommunitiesResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkBgpCommunitiesResponsePtrOutput)
}

// Bgp Communities sent over ExpressRoute with each route corresponding to a prefix in this VNET.
type VirtualNetworkBgpCommunitiesResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkBgpCommunitiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkBgpCommunitiesResponse)(nil)).Elem()
}

func (o VirtualNetworkBgpCommunitiesResponseOutput) ToVirtualNetworkBgpCommunitiesResponseOutput() VirtualNetworkBgpCommunitiesResponseOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesResponseOutput) ToVirtualNetworkBgpCommunitiesResponseOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesResponseOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesResponseOutput) ToVirtualNetworkBgpCommunitiesResponsePtrOutput() VirtualNetworkBgpCommunitiesResponsePtrOutput {
	return o.ToVirtualNetworkBgpCommunitiesResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkBgpCommunitiesResponseOutput) ToVirtualNetworkBgpCommunitiesResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkBgpCommunitiesResponse) *VirtualNetworkBgpCommunitiesResponse {
		return &v
	}).(VirtualNetworkBgpCommunitiesResponsePtrOutput)
}

// The BGP community associated with the region of the virtual network.
func (o VirtualNetworkBgpCommunitiesResponseOutput) RegionalCommunity() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkBgpCommunitiesResponse) string { return v.RegionalCommunity }).(pulumi.StringOutput)
}

// The BGP community associated with the virtual network.
func (o VirtualNetworkBgpCommunitiesResponseOutput) VirtualNetworkCommunity() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkBgpCommunitiesResponse) string { return v.VirtualNetworkCommunity }).(pulumi.StringOutput)
}

type VirtualNetworkBgpCommunitiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkBgpCommunitiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkBgpCommunitiesResponse)(nil)).Elem()
}

func (o VirtualNetworkBgpCommunitiesResponsePtrOutput) ToVirtualNetworkBgpCommunitiesResponsePtrOutput() VirtualNetworkBgpCommunitiesResponsePtrOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesResponsePtrOutput) ToVirtualNetworkBgpCommunitiesResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkBgpCommunitiesResponsePtrOutput {
	return o
}

func (o VirtualNetworkBgpCommunitiesResponsePtrOutput) Elem() VirtualNetworkBgpCommunitiesResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkBgpCommunitiesResponse) VirtualNetworkBgpCommunitiesResponse { return *v }).(VirtualNetworkBgpCommunitiesResponseOutput)
}

// The BGP community associated with the region of the virtual network.
func (o VirtualNetworkBgpCommunitiesResponsePtrOutput) RegionalCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkBgpCommunitiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RegionalCommunity
	}).(pulumi.StringPtrOutput)
}

// The BGP community associated with the virtual network.
func (o VirtualNetworkBgpCommunitiesResponsePtrOutput) VirtualNetworkCommunity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkBgpCommunitiesResponse) *string {
		if v == nil {
			return nil
		}
		return &v.VirtualNetworkCommunity
	}).(pulumi.StringPtrOutput)
}

// A common class for general resource information.
type VirtualNetworkGatewayType struct {
	// ActiveActive flag.
	ActiveActive *bool `pulumi:"activeActive"`
	// Virtual network gateway's BGP speaker settings.
	BgpSettings *BgpSettings `pulumi:"bgpSettings"`
	// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
	CustomRoutes *AddressSpace `pulumi:"customRoutes"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp *bool `pulumi:"enableBgp"`
	// Whether dns forwarding is enabled or not.
	EnableDnsForwarding *bool `pulumi:"enableDnsForwarding"`
	// Whether private IP needs to be enabled on this gateway for connections or not.
	EnablePrivateIpAddress *bool `pulumi:"enablePrivateIpAddress"`
	// The extended location of type local virtual network gateway.
	ExtendedLocation *ExtendedLocation `pulumi:"extendedLocation"`
	// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite *SubResource `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway.
	GatewayType *string `pulumi:"gatewayType"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// IP configurations for virtual network gateway.
	IpConfigurations []VirtualNetworkGatewayIPConfiguration `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku *VirtualNetworkGatewaySku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// MAS FIJI customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
	VirtualNetworkExtendedLocationResourceId *string `pulumi:"virtualNetworkExtendedLocationResourceId"`
	// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration *VpnClientConfiguration `pulumi:"vpnClientConfiguration"`
	// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
	VpnGatewayGeneration *string `pulumi:"vpnGatewayGeneration"`
	// The type of this virtual network gateway.
	VpnType *string `pulumi:"vpnType"`
}

// VirtualNetworkGatewayTypeInput is an input type that accepts VirtualNetworkGatewayTypeArgs and VirtualNetworkGatewayTypeOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayTypeInput` via:
//
//          VirtualNetworkGatewayTypeArgs{...}
type VirtualNetworkGatewayTypeInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayTypeOutput() VirtualNetworkGatewayTypeOutput
	ToVirtualNetworkGatewayTypeOutputWithContext(context.Context) VirtualNetworkGatewayTypeOutput
}

// A common class for general resource information.
type VirtualNetworkGatewayTypeArgs struct {
	// ActiveActive flag.
	ActiveActive pulumi.BoolPtrInput `pulumi:"activeActive"`
	// Virtual network gateway's BGP speaker settings.
	BgpSettings BgpSettingsPtrInput `pulumi:"bgpSettings"`
	// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
	CustomRoutes AddressSpacePtrInput `pulumi:"customRoutes"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// Whether dns forwarding is enabled or not.
	EnableDnsForwarding pulumi.BoolPtrInput `pulumi:"enableDnsForwarding"`
	// Whether private IP needs to be enabled on this gateway for connections or not.
	EnablePrivateIpAddress pulumi.BoolPtrInput `pulumi:"enablePrivateIpAddress"`
	// The extended location of type local virtual network gateway.
	ExtendedLocation ExtendedLocationPtrInput `pulumi:"extendedLocation"`
	// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite SubResourcePtrInput `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway.
	GatewayType pulumi.StringPtrInput `pulumi:"gatewayType"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// IP configurations for virtual network gateway.
	IpConfigurations VirtualNetworkGatewayIPConfigurationArrayInput `pulumi:"ipConfigurations"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku VirtualNetworkGatewaySkuPtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// MAS FIJI customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
	VirtualNetworkExtendedLocationResourceId pulumi.StringPtrInput `pulumi:"virtualNetworkExtendedLocationResourceId"`
	// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration VpnClientConfigurationPtrInput `pulumi:"vpnClientConfiguration"`
	// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
	VpnGatewayGeneration pulumi.StringPtrInput `pulumi:"vpnGatewayGeneration"`
	// The type of this virtual network gateway.
	VpnType pulumi.StringPtrInput `pulumi:"vpnType"`
}

func (VirtualNetworkGatewayTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayType)(nil)).Elem()
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypeOutput() VirtualNetworkGatewayTypeOutput {
	return i.ToVirtualNetworkGatewayTypeOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypeOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayTypeOutput)
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return i.ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayTypeOutput).ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayTypePtrInput is an input type that accepts VirtualNetworkGatewayTypeArgs, VirtualNetworkGatewayTypePtr and VirtualNetworkGatewayTypePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayTypePtrInput` via:
//
//          VirtualNetworkGatewayTypeArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewayTypePtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput
	ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Context) VirtualNetworkGatewayTypePtrOutput
}

type virtualNetworkGatewayTypePtrType VirtualNetworkGatewayTypeArgs

func VirtualNetworkGatewayTypePtr(v *VirtualNetworkGatewayTypeArgs) VirtualNetworkGatewayTypePtrInput {
	return (*virtualNetworkGatewayTypePtrType)(v)
}

func (*virtualNetworkGatewayTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayType)(nil)).Elem()
}

func (i *virtualNetworkGatewayTypePtrType) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return i.ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayTypePtrType) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayTypePtrOutput)
}

// A common class for general resource information.
type VirtualNetworkGatewayTypeOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayType)(nil)).Elem()
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypeOutput() VirtualNetworkGatewayTypeOutput {
	return o
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypeOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypeOutput {
	return o
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return o.ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *VirtualNetworkGatewayType {
		return &v
	}).(VirtualNetworkGatewayTypePtrOutput)
}

// ActiveActive flag.
func (o VirtualNetworkGatewayTypeOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.ActiveActive }).(pulumi.BoolPtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayTypeOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *BgpSettings { return v.BgpSettings }).(BgpSettingsPtrOutput)
}

// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
func (o VirtualNetworkGatewayTypeOutput) CustomRoutes() AddressSpacePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *AddressSpace { return v.CustomRoutes }).(AddressSpacePtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayTypeOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Whether dns forwarding is enabled or not.
func (o VirtualNetworkGatewayTypeOutput) EnableDnsForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.EnableDnsForwarding }).(pulumi.BoolPtrOutput)
}

// Whether private IP needs to be enabled on this gateway for connections or not.
func (o VirtualNetworkGatewayTypeOutput) EnablePrivateIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.EnablePrivateIpAddress }).(pulumi.BoolPtrOutput)
}

// The extended location of type local virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) ExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *ExtendedLocation { return v.ExtendedLocation }).(ExtendedLocationPtrOutput)
}

// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayTypeOutput) GatewayDefaultSite() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *SubResource { return v.GatewayDefaultSite }).(SubResourcePtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.GatewayType }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) []VirtualNetworkGatewayIPConfiguration { return v.IpConfigurations }).(VirtualNetworkGatewayIPConfigurationArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) Sku() VirtualNetworkGatewaySkuPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *VirtualNetworkGatewaySku { return v.Sku }).(VirtualNetworkGatewaySkuPtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// MAS FIJI customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
func (o VirtualNetworkGatewayTypeOutput) VirtualNetworkExtendedLocationResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.VirtualNetworkExtendedLocationResourceId }).(pulumi.StringPtrOutput)
}

// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayTypeOutput) VpnClientConfiguration() VpnClientConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *VpnClientConfiguration { return v.VpnClientConfiguration }).(VpnClientConfigurationPtrOutput)
}

// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
func (o VirtualNetworkGatewayTypeOutput) VpnGatewayGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.VpnGatewayGeneration }).(pulumi.StringPtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.VpnType }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayTypePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayType)(nil)).Elem()
}

func (o VirtualNetworkGatewayTypePtrOutput) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return o
}

func (o VirtualNetworkGatewayTypePtrOutput) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return o
}

func (o VirtualNetworkGatewayTypePtrOutput) Elem() VirtualNetworkGatewayTypeOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) VirtualNetworkGatewayType { return *v }).(VirtualNetworkGatewayTypeOutput)
}

// ActiveActive flag.
func (o VirtualNetworkGatewayTypePtrOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.ActiveActive
	}).(pulumi.BoolPtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayTypePtrOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *BgpSettings {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsPtrOutput)
}

// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
func (o VirtualNetworkGatewayTypePtrOutput) CustomRoutes() AddressSpacePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *AddressSpace {
		if v == nil {
			return nil
		}
		return v.CustomRoutes
	}).(AddressSpacePtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayTypePtrOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgp
	}).(pulumi.BoolPtrOutput)
}

// Whether dns forwarding is enabled or not.
func (o VirtualNetworkGatewayTypePtrOutput) EnableDnsForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDnsForwarding
	}).(pulumi.BoolPtrOutput)
}

// Whether private IP needs to be enabled on this gateway for connections or not.
func (o VirtualNetworkGatewayTypePtrOutput) EnablePrivateIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateIpAddress
	}).(pulumi.BoolPtrOutput)
}

// The extended location of type local virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) ExtendedLocation() ExtendedLocationPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *ExtendedLocation {
		if v == nil {
			return nil
		}
		return v.ExtendedLocation
	}).(ExtendedLocationPtrOutput)
}

// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayTypePtrOutput) GatewayDefaultSite() SubResourcePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *SubResource {
		if v == nil {
			return nil
		}
		return v.GatewayDefaultSite
	}).(SubResourcePtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.GatewayType
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) []VirtualNetworkGatewayIPConfiguration {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) Sku() VirtualNetworkGatewaySkuPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *VirtualNetworkGatewaySku {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(VirtualNetworkGatewaySkuPtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// MAS FIJI customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
func (o VirtualNetworkGatewayTypePtrOutput) VirtualNetworkExtendedLocationResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkExtendedLocationResourceId
	}).(pulumi.StringPtrOutput)
}

// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayTypePtrOutput) VpnClientConfiguration() VpnClientConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *VpnClientConfiguration {
		if v == nil {
			return nil
		}
		return v.VpnClientConfiguration
	}).(VpnClientConfigurationPtrOutput)
}

// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
func (o VirtualNetworkGatewayTypePtrOutput) VpnGatewayGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.VpnGatewayGeneration
	}).(pulumi.StringPtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.VpnType
	}).(pulumi.StringPtrOutput)
}

// IP configuration for virtual network gateway.
type VirtualNetworkGatewayIPConfiguration struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The reference to the public IP resource.
	PublicIPAddress *SubResource `pulumi:"publicIPAddress"`
	// The reference to the subnet resource.
	Subnet *SubResource `pulumi:"subnet"`
}

// VirtualNetworkGatewayIPConfigurationInput is an input type that accepts VirtualNetworkGatewayIPConfigurationArgs and VirtualNetworkGatewayIPConfigurationOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationInput` via:
//
//          VirtualNetworkGatewayIPConfigurationArgs{...}
type VirtualNetworkGatewayIPConfigurationInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationOutput() VirtualNetworkGatewayIPConfigurationOutput
	ToVirtualNetworkGatewayIPConfigurationOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationOutput
}

// IP configuration for virtual network gateway.
type VirtualNetworkGatewayIPConfigurationArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The reference to the public IP resource.
	PublicIPAddress SubResourcePtrInput `pulumi:"publicIPAddress"`
	// The reference to the subnet resource.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (VirtualNetworkGatewayIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationArgs) ToVirtualNetworkGatewayIPConfigurationOutput() VirtualNetworkGatewayIPConfigurationOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationArgs) ToVirtualNetworkGatewayIPConfigurationOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationOutput)
}

// VirtualNetworkGatewayIPConfigurationArrayInput is an input type that accepts VirtualNetworkGatewayIPConfigurationArray and VirtualNetworkGatewayIPConfigurationArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationArrayInput` via:
//
//          VirtualNetworkGatewayIPConfigurationArray{ VirtualNetworkGatewayIPConfigurationArgs{...} }
type VirtualNetworkGatewayIPConfigurationArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationArrayOutput() VirtualNetworkGatewayIPConfigurationArrayOutput
	ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationArrayOutput
}

type VirtualNetworkGatewayIPConfigurationArray []VirtualNetworkGatewayIPConfigurationInput

func (VirtualNetworkGatewayIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationArray) ToVirtualNetworkGatewayIPConfigurationArrayOutput() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationArray) ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationArrayOutput)
}

// IP configuration for virtual network gateway.
type VirtualNetworkGatewayIPConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationOutput) ToVirtualNetworkGatewayIPConfigurationOutput() VirtualNetworkGatewayIPConfigurationOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationOutput) ToVirtualNetworkGatewayIPConfigurationOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationOutput {
	return o
}

// Resource ID.
func (o VirtualNetworkGatewayIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private IP address allocation method.
func (o VirtualNetworkGatewayIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The reference to the public IP resource.
func (o VirtualNetworkGatewayIPConfigurationOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *SubResource { return v.PublicIPAddress }).(SubResourcePtrOutput)
}

// The reference to the subnet resource.
func (o VirtualNetworkGatewayIPConfigurationOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type VirtualNetworkGatewayIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationArrayOutput) ToVirtualNetworkGatewayIPConfigurationArrayOutput() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationArrayOutput) ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayIPConfiguration {
		return vs[0].([]VirtualNetworkGatewayIPConfiguration)[vs[1].(int)]
	}).(VirtualNetworkGatewayIPConfigurationOutput)
}

// IP configuration for virtual network gateway.
type VirtualNetworkGatewayIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Private IP Address for this gateway.
	PrivateIPAddress string `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the virtual network gateway IP configuration resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the public IP resource.
	PublicIPAddress *SubResourceResponse `pulumi:"publicIPAddress"`
	// The reference to the subnet resource.
	Subnet *SubResourceResponse `pulumi:"subnet"`
}

// VirtualNetworkGatewayIPConfigurationResponseInput is an input type that accepts VirtualNetworkGatewayIPConfigurationResponseArgs and VirtualNetworkGatewayIPConfigurationResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationResponseInput` via:
//
//          VirtualNetworkGatewayIPConfigurationResponseArgs{...}
type VirtualNetworkGatewayIPConfigurationResponseInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationResponseOutput() VirtualNetworkGatewayIPConfigurationResponseOutput
	ToVirtualNetworkGatewayIPConfigurationResponseOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationResponseOutput
}

// IP configuration for virtual network gateway.
type VirtualNetworkGatewayIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Private IP Address for this gateway.
	PrivateIPAddress pulumi.StringInput `pulumi:"privateIPAddress"`
	// The private IP address allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the virtual network gateway IP configuration resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The reference to the public IP resource.
	PublicIPAddress SubResourceResponsePtrInput `pulumi:"publicIPAddress"`
	// The reference to the subnet resource.
	Subnet SubResourceResponsePtrInput `pulumi:"subnet"`
}

func (VirtualNetworkGatewayIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationResponseArgs) ToVirtualNetworkGatewayIPConfigurationResponseOutput() VirtualNetworkGatewayIPConfigurationResponseOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationResponseArgs) ToVirtualNetworkGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationResponseOutput)
}

// VirtualNetworkGatewayIPConfigurationResponseArrayInput is an input type that accepts VirtualNetworkGatewayIPConfigurationResponseArray and VirtualNetworkGatewayIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationResponseArrayInput` via:
//
//          VirtualNetworkGatewayIPConfigurationResponseArray{ VirtualNetworkGatewayIPConfigurationResponseArgs{...} }
type VirtualNetworkGatewayIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationResponseArrayOutput() VirtualNetworkGatewayIPConfigurationResponseArrayOutput
	ToVirtualNetworkGatewayIPConfigurationResponseArrayOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationResponseArrayOutput
}

type VirtualNetworkGatewayIPConfigurationResponseArray []VirtualNetworkGatewayIPConfigurationResponseInput

func (VirtualNetworkGatewayIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationResponseArray) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutput() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationResponseArray) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationResponseArrayOutput)
}

// IP configuration for virtual network gateway.
type VirtualNetworkGatewayIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationResponseOutput) ToVirtualNetworkGatewayIPConfigurationResponseOutput() VirtualNetworkGatewayIPConfigurationResponseOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationResponseOutput) ToVirtualNetworkGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Private IP Address for this gateway.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) string { return v.PrivateIPAddress }).(pulumi.StringOutput)
}

// The private IP address allocation method.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the virtual network gateway IP configuration resource.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the public IP resource.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *SubResourceResponse { return v.PublicIPAddress }).(SubResourceResponsePtrOutput)
}

// The reference to the subnet resource.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

type VirtualNetworkGatewayIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationResponseArrayOutput) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutput() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationResponseArrayOutput) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayIPConfigurationResponse {
		return vs[0].([]VirtualNetworkGatewayIPConfigurationResponse)[vs[1].(int)]
	}).(VirtualNetworkGatewayIPConfigurationResponseOutput)
}

// A common class for general resource information.
type VirtualNetworkGatewayResponse struct {
	// ActiveActive flag.
	ActiveActive *bool `pulumi:"activeActive"`
	// Virtual network gateway's BGP speaker settings.
	BgpSettings *BgpSettingsResponse `pulumi:"bgpSettings"`
	// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
	CustomRoutes *AddressSpaceResponse `pulumi:"customRoutes"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp *bool `pulumi:"enableBgp"`
	// Whether dns forwarding is enabled or not.
	EnableDnsForwarding *bool `pulumi:"enableDnsForwarding"`
	// Whether private IP needs to be enabled on this gateway for connections or not.
	EnablePrivateIpAddress *bool `pulumi:"enablePrivateIpAddress"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The extended location of type local virtual network gateway.
	ExtendedLocation *ExtendedLocationResponse `pulumi:"extendedLocation"`
	// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite *SubResourceResponse `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway.
	GatewayType *string `pulumi:"gatewayType"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The IP address allocated by the gateway to which dns requests can be sent.
	InboundDnsForwardingEndpoint string `pulumi:"inboundDnsForwardingEndpoint"`
	// IP configurations for virtual network gateway.
	IpConfigurations []VirtualNetworkGatewayIPConfigurationResponse `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the virtual network gateway resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the virtual network gateway resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku *VirtualNetworkGatewaySkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// MAS FIJI customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
	VirtualNetworkExtendedLocationResourceId *string `pulumi:"virtualNetworkExtendedLocationResourceId"`
	// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration *VpnClientConfigurationResponse `pulumi:"vpnClientConfiguration"`
	// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
	VpnGatewayGeneration *string `pulumi:"vpnGatewayGeneration"`
	// The type of this virtual network gateway.
	VpnType *string `pulumi:"vpnType"`
}

// VirtualNetworkGatewayResponseInput is an input type that accepts VirtualNetworkGatewayResponseArgs and VirtualNetworkGatewayResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayResponseInput` via:
//
//          VirtualNetworkGatewayResponseArgs{...}
type VirtualNetworkGatewayResponseInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayResponseOutput() VirtualNetworkGatewayResponseOutput
	ToVirtualNetworkGatewayResponseOutputWithContext(context.Context) VirtualNetworkGatewayResponseOutput
}

// A common class for general resource information.
type VirtualNetworkGatewayResponseArgs struct {
	// ActiveActive flag.
	ActiveActive pulumi.BoolPtrInput `pulumi:"activeActive"`
	// Virtual network gateway's BGP speaker settings.
	BgpSettings BgpSettingsResponsePtrInput `pulumi:"bgpSettings"`
	// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
	CustomRoutes AddressSpaceResponsePtrInput `pulumi:"customRoutes"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// Whether dns forwarding is enabled or not.
	EnableDnsForwarding pulumi.BoolPtrInput `pulumi:"enableDnsForwarding"`
	// Whether private IP needs to be enabled on this gateway for connections or not.
	EnablePrivateIpAddress pulumi.BoolPtrInput `pulumi:"enablePrivateIpAddress"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The extended location of type local virtual network gateway.
	ExtendedLocation ExtendedLocationResponsePtrInput `pulumi:"extendedLocation"`
	// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite SubResourceResponsePtrInput `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway.
	GatewayType pulumi.StringPtrInput `pulumi:"gatewayType"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The IP address allocated by the gateway to which dns requests can be sent.
	InboundDnsForwardingEndpoint pulumi.StringInput `pulumi:"inboundDnsForwardingEndpoint"`
	// IP configurations for virtual network gateway.
	IpConfigurations VirtualNetworkGatewayIPConfigurationResponseArrayInput `pulumi:"ipConfigurations"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the virtual network gateway resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resource GUID property of the virtual network gateway resource.
	ResourceGuid pulumi.StringInput `pulumi:"resourceGuid"`
	// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku VirtualNetworkGatewaySkuResponsePtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// MAS FIJI customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
	VirtualNetworkExtendedLocationResourceId pulumi.StringPtrInput `pulumi:"virtualNetworkExtendedLocationResourceId"`
	// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration VpnClientConfigurationResponsePtrInput `pulumi:"vpnClientConfiguration"`
	// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
	VpnGatewayGeneration pulumi.StringPtrInput `pulumi:"vpnGatewayGeneration"`
	// The type of this virtual network gateway.
	VpnType pulumi.StringPtrInput `pulumi:"vpnType"`
}

func (VirtualNetworkGatewayResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewayResponseArgs) ToVirtualNetworkGatewayResponseOutput() VirtualNetworkGatewayResponseOutput {
	return i.ToVirtualNetworkGatewayResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayResponseArgs) ToVirtualNetworkGatewayResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayResponseOutput)
}

func (i VirtualNetworkGatewayResponseArgs) ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput {
	return i.ToVirtualNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayResponseArgs) ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayResponseOutput).ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayResponsePtrInput is an input type that accepts VirtualNetworkGatewayResponseArgs, VirtualNetworkGatewayResponsePtr and VirtualNetworkGatewayResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayResponsePtrInput` via:
//
//          VirtualNetworkGatewayResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewayResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput
	ToVirtualNetworkGatewayResponsePtrOutputWithContext(context.Context) VirtualNetworkGatewayResponsePtrOutput
}

type virtualNetworkGatewayResponsePtrType VirtualNetworkGatewayResponseArgs

func VirtualNetworkGatewayResponsePtr(v *VirtualNetworkGatewayResponseArgs) VirtualNetworkGatewayResponsePtrInput {
	return (*virtualNetworkGatewayResponsePtrType)(v)
}

func (*virtualNetworkGatewayResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (i *virtualNetworkGatewayResponsePtrType) ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput {
	return i.ToVirtualNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayResponsePtrType) ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayResponsePtrOutput)
}

// A common class for general resource information.
type VirtualNetworkGatewayResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponseOutput() VirtualNetworkGatewayResponseOutput {
	return o
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponseOutput {
	return o
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput {
	return o.ToVirtualNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *VirtualNetworkGatewayResponse {
		return &v
	}).(VirtualNetworkGatewayResponsePtrOutput)
}

// ActiveActive flag.
func (o VirtualNetworkGatewayResponseOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.ActiveActive }).(pulumi.BoolPtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayResponseOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *BgpSettingsResponse { return v.BgpSettings }).(BgpSettingsResponsePtrOutput)
}

// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
func (o VirtualNetworkGatewayResponseOutput) CustomRoutes() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *AddressSpaceResponse { return v.CustomRoutes }).(AddressSpaceResponsePtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayResponseOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Whether dns forwarding is enabled or not.
func (o VirtualNetworkGatewayResponseOutput) EnableDnsForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.EnableDnsForwarding }).(pulumi.BoolPtrOutput)
}

// Whether private IP needs to be enabled on this gateway for connections or not.
func (o VirtualNetworkGatewayResponseOutput) EnablePrivateIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.EnablePrivateIpAddress }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The extended location of type local virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *ExtendedLocationResponse { return v.ExtendedLocation }).(ExtendedLocationResponsePtrOutput)
}

// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayResponseOutput) GatewayDefaultSite() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *SubResourceResponse { return v.GatewayDefaultSite }).(SubResourceResponsePtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.GatewayType }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IP address allocated by the gateway to which dns requests can be sent.
func (o VirtualNetworkGatewayResponseOutput) InboundDnsForwardingEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.InboundDnsForwardingEndpoint }).(pulumi.StringOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) []VirtualNetworkGatewayIPConfigurationResponse {
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkGatewayResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the virtual network gateway resource.
func (o VirtualNetworkGatewayResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the virtual network gateway resource.
func (o VirtualNetworkGatewayResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) Sku() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *VirtualNetworkGatewaySkuResponse { return v.Sku }).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkGatewayResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.Type }).(pulumi.StringOutput)
}

// MAS FIJI customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
func (o VirtualNetworkGatewayResponseOutput) VirtualNetworkExtendedLocationResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.VirtualNetworkExtendedLocationResourceId }).(pulumi.StringPtrOutput)
}

// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayResponseOutput) VpnClientConfiguration() VpnClientConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *VpnClientConfigurationResponse { return v.VpnClientConfiguration }).(VpnClientConfigurationResponsePtrOutput)
}

// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
func (o VirtualNetworkGatewayResponseOutput) VpnGatewayGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.VpnGatewayGeneration }).(pulumi.StringPtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.VpnType }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayResponsePtrOutput) ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayResponsePtrOutput) ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayResponsePtrOutput) Elem() VirtualNetworkGatewayResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) VirtualNetworkGatewayResponse { return *v }).(VirtualNetworkGatewayResponseOutput)
}

// ActiveActive flag.
func (o VirtualNetworkGatewayResponsePtrOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ActiveActive
	}).(pulumi.BoolPtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayResponsePtrOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *BgpSettingsResponse {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsResponsePtrOutput)
}

// The reference to the address space resource which represents the custom routes address space specified by the customer for virtual network gateway and VpnClient.
func (o VirtualNetworkGatewayResponsePtrOutput) CustomRoutes() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *AddressSpaceResponse {
		if v == nil {
			return nil
		}
		return v.CustomRoutes
	}).(AddressSpaceResponsePtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayResponsePtrOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgp
	}).(pulumi.BoolPtrOutput)
}

// Whether dns forwarding is enabled or not.
func (o VirtualNetworkGatewayResponsePtrOutput) EnableDnsForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDnsForwarding
	}).(pulumi.BoolPtrOutput)
}

// Whether private IP needs to be enabled on this gateway for connections or not.
func (o VirtualNetworkGatewayResponsePtrOutput) EnablePrivateIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePrivateIpAddress
	}).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// The extended location of type local virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) ExtendedLocation() ExtendedLocationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *ExtendedLocationResponse {
		if v == nil {
			return nil
		}
		return v.ExtendedLocation
	}).(ExtendedLocationResponsePtrOutput)
}

// The reference to the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayResponsePtrOutput) GatewayDefaultSite() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.GatewayDefaultSite
	}).(SubResourceResponsePtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.GatewayType
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The IP address allocated by the gateway to which dns requests can be sent.
func (o VirtualNetworkGatewayResponsePtrOutput) InboundDnsForwardingEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.InboundDnsForwardingEndpoint
	}).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) []VirtualNetworkGatewayIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkGatewayResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the virtual network gateway resource.
func (o VirtualNetworkGatewayResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the virtual network gateway resource.
func (o VirtualNetworkGatewayResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The reference to the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) Sku() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *VirtualNetworkGatewaySkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkGatewayResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// MAS FIJI customer vnet resource id. VirtualNetworkGateway of type local gateway is associated with the customer vnet.
func (o VirtualNetworkGatewayResponsePtrOutput) VirtualNetworkExtendedLocationResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.VirtualNetworkExtendedLocationResourceId
	}).(pulumi.StringPtrOutput)
}

// The reference to the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayResponsePtrOutput) VpnClientConfiguration() VpnClientConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *VpnClientConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientConfiguration
	}).(VpnClientConfigurationResponsePtrOutput)
}

// The generation for this VirtualNetworkGateway. Must be None if gatewayType is not VPN.
func (o VirtualNetworkGatewayResponsePtrOutput) VpnGatewayGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.VpnGatewayGeneration
	}).(pulumi.StringPtrOutput)
}

// The type of this virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.VpnType
	}).(pulumi.StringPtrOutput)
}

// VirtualNetworkGatewaySku details.
type VirtualNetworkGatewaySku struct {
	// Gateway SKU name.
	Name *string `pulumi:"name"`
	// Gateway SKU tier.
	Tier *string `pulumi:"tier"`
}

// VirtualNetworkGatewaySkuInput is an input type that accepts VirtualNetworkGatewaySkuArgs and VirtualNetworkGatewaySkuOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuInput` via:
//
//          VirtualNetworkGatewaySkuArgs{...}
type VirtualNetworkGatewaySkuInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuOutput() VirtualNetworkGatewaySkuOutput
	ToVirtualNetworkGatewaySkuOutputWithContext(context.Context) VirtualNetworkGatewaySkuOutput
}

// VirtualNetworkGatewaySku details.
type VirtualNetworkGatewaySkuArgs struct {
	// Gateway SKU name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gateway SKU tier.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (VirtualNetworkGatewaySkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySku)(nil)).Elem()
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuOutput() VirtualNetworkGatewaySkuOutput {
	return i.ToVirtualNetworkGatewaySkuOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuOutput)
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return i.ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuOutput).ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx)
}

// VirtualNetworkGatewaySkuPtrInput is an input type that accepts VirtualNetworkGatewaySkuArgs, VirtualNetworkGatewaySkuPtr and VirtualNetworkGatewaySkuPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuPtrInput` via:
//
//          VirtualNetworkGatewaySkuArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewaySkuPtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput
	ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Context) VirtualNetworkGatewaySkuPtrOutput
}

type virtualNetworkGatewaySkuPtrType VirtualNetworkGatewaySkuArgs

func VirtualNetworkGatewaySkuPtr(v *VirtualNetworkGatewaySkuArgs) VirtualNetworkGatewaySkuPtrInput {
	return (*virtualNetworkGatewaySkuPtrType)(v)
}

func (*virtualNetworkGatewaySkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySku)(nil)).Elem()
}

func (i *virtualNetworkGatewaySkuPtrType) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return i.ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewaySkuPtrType) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuPtrOutput)
}

// VirtualNetworkGatewaySku details.
type VirtualNetworkGatewaySkuOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySku)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuOutput() VirtualNetworkGatewaySkuOutput {
	return o
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuOutput {
	return o
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return o.ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySku) *VirtualNetworkGatewaySku {
		return &v
	}).(VirtualNetworkGatewaySkuPtrOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewaySkuPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySku)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuPtrOutput) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuPtrOutput) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuPtrOutput) Elem() VirtualNetworkGatewaySkuOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) VirtualNetworkGatewaySku { return *v }).(VirtualNetworkGatewaySkuOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// VirtualNetworkGatewaySku details.
type VirtualNetworkGatewaySkuResponse struct {
	// The capacity.
	Capacity int `pulumi:"capacity"`
	// Gateway SKU name.
	Name *string `pulumi:"name"`
	// Gateway SKU tier.
	Tier *string `pulumi:"tier"`
}

// VirtualNetworkGatewaySkuResponseInput is an input type that accepts VirtualNetworkGatewaySkuResponseArgs and VirtualNetworkGatewaySkuResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuResponseInput` via:
//
//          VirtualNetworkGatewaySkuResponseArgs{...}
type VirtualNetworkGatewaySkuResponseInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuResponseOutput() VirtualNetworkGatewaySkuResponseOutput
	ToVirtualNetworkGatewaySkuResponseOutputWithContext(context.Context) VirtualNetworkGatewaySkuResponseOutput
}

// VirtualNetworkGatewaySku details.
type VirtualNetworkGatewaySkuResponseArgs struct {
	// The capacity.
	Capacity pulumi.IntInput `pulumi:"capacity"`
	// Gateway SKU name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gateway SKU tier.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (VirtualNetworkGatewaySkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewaySkuResponseArgs) ToVirtualNetworkGatewaySkuResponseOutput() VirtualNetworkGatewaySkuResponseOutput {
	return i.ToVirtualNetworkGatewaySkuResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuResponseArgs) ToVirtualNetworkGatewaySkuResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuResponseOutput)
}

func (i VirtualNetworkGatewaySkuResponseArgs) ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput {
	return i.ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuResponseArgs) ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuResponseOutput).ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkGatewaySkuResponsePtrInput is an input type that accepts VirtualNetworkGatewaySkuResponseArgs, VirtualNetworkGatewaySkuResponsePtr and VirtualNetworkGatewaySkuResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuResponsePtrInput` via:
//
//          VirtualNetworkGatewaySkuResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewaySkuResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput
	ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(context.Context) VirtualNetworkGatewaySkuResponsePtrOutput
}

type virtualNetworkGatewaySkuResponsePtrType VirtualNetworkGatewaySkuResponseArgs

func VirtualNetworkGatewaySkuResponsePtr(v *VirtualNetworkGatewaySkuResponseArgs) VirtualNetworkGatewaySkuResponsePtrInput {
	return (*virtualNetworkGatewaySkuResponsePtrType)(v)
}

func (*virtualNetworkGatewaySkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (i *virtualNetworkGatewaySkuResponsePtrType) ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput {
	return i.ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewaySkuResponsePtrType) ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// VirtualNetworkGatewaySku details.
type VirtualNetworkGatewaySkuResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponseOutput() VirtualNetworkGatewaySkuResponseOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponseOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) *VirtualNetworkGatewaySkuResponse {
		return &v
	}).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// The capacity.
func (o VirtualNetworkGatewaySkuResponseOutput) Capacity() pulumi.IntOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) int { return v.Capacity }).(pulumi.IntOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewaySkuResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuResponsePtrOutput) ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponsePtrOutput) ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponsePtrOutput) Elem() VirtualNetworkGatewaySkuResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) VirtualNetworkGatewaySkuResponse { return *v }).(VirtualNetworkGatewaySkuResponseOutput)
}

// The capacity.
func (o VirtualNetworkGatewaySkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringType struct {
	// Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
	AllowForwardedTraffic *bool `pulumi:"allowForwardedTraffic"`
	// If gateway links can be used in remote virtual networking to link to this virtual network.
	AllowGatewayTransit *bool `pulumi:"allowGatewayTransit"`
	// Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
	AllowVirtualNetworkAccess *bool `pulumi:"allowVirtualNetworkAccess"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The status of the virtual network peering.
	PeeringState *string `pulumi:"peeringState"`
	// The peering sync status of the virtual network peering.
	PeeringSyncLevel *string `pulumi:"peeringSyncLevel"`
	// The reference to the address space peered with the remote virtual network.
	RemoteAddressSpace *AddressSpace `pulumi:"remoteAddressSpace"`
	// The reference to the remote virtual network's Bgp Communities.
	RemoteBgpCommunities *VirtualNetworkBgpCommunities `pulumi:"remoteBgpCommunities"`
	// The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
	RemoteVirtualNetwork *SubResource `pulumi:"remoteVirtualNetwork"`
	// The reference to the current address space of the remote virtual network.
	RemoteVirtualNetworkAddressSpace *AddressSpace `pulumi:"remoteVirtualNetworkAddressSpace"`
	// Provided when user wants to sync the peering with address space on the remote virtual network after the address space is updated.
	SyncRemoteAddressSpace *bool `pulumi:"syncRemoteAddressSpace"`
	// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
	UseRemoteGateways *bool `pulumi:"useRemoteGateways"`
}

// VirtualNetworkPeeringTypeInput is an input type that accepts VirtualNetworkPeeringTypeArgs and VirtualNetworkPeeringTypeOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringTypeInput` via:
//
//          VirtualNetworkPeeringTypeArgs{...}
type VirtualNetworkPeeringTypeInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringTypeOutput() VirtualNetworkPeeringTypeOutput
	ToVirtualNetworkPeeringTypeOutputWithContext(context.Context) VirtualNetworkPeeringTypeOutput
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringTypeArgs struct {
	// Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
	AllowForwardedTraffic pulumi.BoolPtrInput `pulumi:"allowForwardedTraffic"`
	// If gateway links can be used in remote virtual networking to link to this virtual network.
	AllowGatewayTransit pulumi.BoolPtrInput `pulumi:"allowGatewayTransit"`
	// Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
	AllowVirtualNetworkAccess pulumi.BoolPtrInput `pulumi:"allowVirtualNetworkAccess"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The status of the virtual network peering.
	PeeringState pulumi.StringPtrInput `pulumi:"peeringState"`
	// The peering sync status of the virtual network peering.
	PeeringSyncLevel pulumi.StringPtrInput `pulumi:"peeringSyncLevel"`
	// The reference to the address space peered with the remote virtual network.
	RemoteAddressSpace AddressSpacePtrInput `pulumi:"remoteAddressSpace"`
	// The reference to the remote virtual network's Bgp Communities.
	RemoteBgpCommunities VirtualNetworkBgpCommunitiesPtrInput `pulumi:"remoteBgpCommunities"`
	// The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
	RemoteVirtualNetwork SubResourcePtrInput `pulumi:"remoteVirtualNetwork"`
	// The reference to the current address space of the remote virtual network.
	RemoteVirtualNetworkAddressSpace AddressSpacePtrInput `pulumi:"remoteVirtualNetworkAddressSpace"`
	// Provided when user wants to sync the peering with address space on the remote virtual network after the address space is updated.
	SyncRemoteAddressSpace pulumi.BoolPtrInput `pulumi:"syncRemoteAddressSpace"`
	// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
	UseRemoteGateways pulumi.BoolPtrInput `pulumi:"useRemoteGateways"`
}

func (VirtualNetworkPeeringTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringType)(nil)).Elem()
}

func (i VirtualNetworkPeeringTypeArgs) ToVirtualNetworkPeeringTypeOutput() VirtualNetworkPeeringTypeOutput {
	return i.ToVirtualNetworkPeeringTypeOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringTypeArgs) ToVirtualNetworkPeeringTypeOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringTypeOutput)
}

// VirtualNetworkPeeringTypeArrayInput is an input type that accepts VirtualNetworkPeeringTypeArray and VirtualNetworkPeeringTypeArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringTypeArrayInput` via:
//
//          VirtualNetworkPeeringTypeArray{ VirtualNetworkPeeringTypeArgs{...} }
type VirtualNetworkPeeringTypeArrayInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringTypeArrayOutput() VirtualNetworkPeeringTypeArrayOutput
	ToVirtualNetworkPeeringTypeArrayOutputWithContext(context.Context) VirtualNetworkPeeringTypeArrayOutput
}

type VirtualNetworkPeeringTypeArray []VirtualNetworkPeeringTypeInput

func (VirtualNetworkPeeringTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPeeringType)(nil)).Elem()
}

func (i VirtualNetworkPeeringTypeArray) ToVirtualNetworkPeeringTypeArrayOutput() VirtualNetworkPeeringTypeArrayOutput {
	return i.ToVirtualNetworkPeeringTypeArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringTypeArray) ToVirtualNetworkPeeringTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringTypeArrayOutput)
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringTypeOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringType)(nil)).Elem()
}

func (o VirtualNetworkPeeringTypeOutput) ToVirtualNetworkPeeringTypeOutput() VirtualNetworkPeeringTypeOutput {
	return o
}

func (o VirtualNetworkPeeringTypeOutput) ToVirtualNetworkPeeringTypeOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeOutput {
	return o
}

// Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
func (o VirtualNetworkPeeringTypeOutput) AllowForwardedTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.AllowForwardedTraffic }).(pulumi.BoolPtrOutput)
}

// If gateway links can be used in remote virtual networking to link to this virtual network.
func (o VirtualNetworkPeeringTypeOutput) AllowGatewayTransit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.AllowGatewayTransit }).(pulumi.BoolPtrOutput)
}

// Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
func (o VirtualNetworkPeeringTypeOutput) AllowVirtualNetworkAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.AllowVirtualNetworkAccess }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o VirtualNetworkPeeringTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkPeeringTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The status of the virtual network peering.
func (o VirtualNetworkPeeringTypeOutput) PeeringState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.PeeringState }).(pulumi.StringPtrOutput)
}

// The peering sync status of the virtual network peering.
func (o VirtualNetworkPeeringTypeOutput) PeeringSyncLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.PeeringSyncLevel }).(pulumi.StringPtrOutput)
}

// The reference to the address space peered with the remote virtual network.
func (o VirtualNetworkPeeringTypeOutput) RemoteAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *AddressSpace { return v.RemoteAddressSpace }).(AddressSpacePtrOutput)
}

// The reference to the remote virtual network's Bgp Communities.
func (o VirtualNetworkPeeringTypeOutput) RemoteBgpCommunities() VirtualNetworkBgpCommunitiesPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *VirtualNetworkBgpCommunities { return v.RemoteBgpCommunities }).(VirtualNetworkBgpCommunitiesPtrOutput)
}

// The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
func (o VirtualNetworkPeeringTypeOutput) RemoteVirtualNetwork() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *SubResource { return v.RemoteVirtualNetwork }).(SubResourcePtrOutput)
}

// The reference to the current address space of the remote virtual network.
func (o VirtualNetworkPeeringTypeOutput) RemoteVirtualNetworkAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *AddressSpace { return v.RemoteVirtualNetworkAddressSpace }).(AddressSpacePtrOutput)
}

// Provided when user wants to sync the peering with address space on the remote virtual network after the address space is updated.
func (o VirtualNetworkPeeringTypeOutput) SyncRemoteAddressSpace() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.SyncRemoteAddressSpace }).(pulumi.BoolPtrOutput)
}

// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
func (o VirtualNetworkPeeringTypeOutput) UseRemoteGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.UseRemoteGateways }).(pulumi.BoolPtrOutput)
}

type VirtualNetworkPeeringTypeArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPeeringType)(nil)).Elem()
}

func (o VirtualNetworkPeeringTypeArrayOutput) ToVirtualNetworkPeeringTypeArrayOutput() VirtualNetworkPeeringTypeArrayOutput {
	return o
}

func (o VirtualNetworkPeeringTypeArrayOutput) ToVirtualNetworkPeeringTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeArrayOutput {
	return o
}

func (o VirtualNetworkPeeringTypeArrayOutput) Index(i pulumi.IntInput) VirtualNetworkPeeringTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkPeeringType {
		return vs[0].([]VirtualNetworkPeeringType)[vs[1].(int)]
	}).(VirtualNetworkPeeringTypeOutput)
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringResponse struct {
	// Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
	AllowForwardedTraffic *bool `pulumi:"allowForwardedTraffic"`
	// If gateway links can be used in remote virtual networking to link to this virtual network.
	AllowGatewayTransit *bool `pulumi:"allowGatewayTransit"`
	// Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
	AllowVirtualNetworkAccess *bool `pulumi:"allowVirtualNetworkAccess"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The status of the virtual network peering.
	PeeringState *string `pulumi:"peeringState"`
	// The peering sync status of the virtual network peering.
	PeeringSyncLevel *string `pulumi:"peeringSyncLevel"`
	// The provisioning state of the virtual network peering resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference to the address space peered with the remote virtual network.
	RemoteAddressSpace *AddressSpaceResponse `pulumi:"remoteAddressSpace"`
	// The reference to the remote virtual network's Bgp Communities.
	RemoteBgpCommunities *VirtualNetworkBgpCommunitiesResponse `pulumi:"remoteBgpCommunities"`
	// The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
	RemoteVirtualNetwork *SubResourceResponse `pulumi:"remoteVirtualNetwork"`
	// The reference to the current address space of the remote virtual network.
	RemoteVirtualNetworkAddressSpace *AddressSpaceResponse `pulumi:"remoteVirtualNetworkAddressSpace"`
	// Provided when user wants to sync the peering with address space on the remote virtual network after the address space is updated.
	SyncRemoteAddressSpace *bool `pulumi:"syncRemoteAddressSpace"`
	// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
	UseRemoteGateways *bool `pulumi:"useRemoteGateways"`
}

// VirtualNetworkPeeringResponseInput is an input type that accepts VirtualNetworkPeeringResponseArgs and VirtualNetworkPeeringResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringResponseInput` via:
//
//          VirtualNetworkPeeringResponseArgs{...}
type VirtualNetworkPeeringResponseInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringResponseOutput() VirtualNetworkPeeringResponseOutput
	ToVirtualNetworkPeeringResponseOutputWithContext(context.Context) VirtualNetworkPeeringResponseOutput
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringResponseArgs struct {
	// Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
	AllowForwardedTraffic pulumi.BoolPtrInput `pulumi:"allowForwardedTraffic"`
	// If gateway links can be used in remote virtual networking to link to this virtual network.
	AllowGatewayTransit pulumi.BoolPtrInput `pulumi:"allowGatewayTransit"`
	// Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
	AllowVirtualNetworkAccess pulumi.BoolPtrInput `pulumi:"allowVirtualNetworkAccess"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The status of the virtual network peering.
	PeeringState pulumi.StringPtrInput `pulumi:"peeringState"`
	// The peering sync status of the virtual network peering.
	PeeringSyncLevel pulumi.StringPtrInput `pulumi:"peeringSyncLevel"`
	// The provisioning state of the virtual network peering resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The reference to the address space peered with the remote virtual network.
	RemoteAddressSpace AddressSpaceResponsePtrInput `pulumi:"remoteAddressSpace"`
	// The reference to the remote virtual network's Bgp Communities.
	RemoteBgpCommunities VirtualNetworkBgpCommunitiesResponsePtrInput `pulumi:"remoteBgpCommunities"`
	// The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
	RemoteVirtualNetwork SubResourceResponsePtrInput `pulumi:"remoteVirtualNetwork"`
	// The reference to the current address space of the remote virtual network.
	RemoteVirtualNetworkAddressSpace AddressSpaceResponsePtrInput `pulumi:"remoteVirtualNetworkAddressSpace"`
	// Provided when user wants to sync the peering with address space on the remote virtual network after the address space is updated.
	SyncRemoteAddressSpace pulumi.BoolPtrInput `pulumi:"syncRemoteAddressSpace"`
	// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
	UseRemoteGateways pulumi.BoolPtrInput `pulumi:"useRemoteGateways"`
}

func (VirtualNetworkPeeringResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringResponse)(nil)).Elem()
}

func (i VirtualNetworkPeeringResponseArgs) ToVirtualNetworkPeeringResponseOutput() VirtualNetworkPeeringResponseOutput {
	return i.ToVirtualNetworkPeeringResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringResponseArgs) ToVirtualNetworkPeeringResponseOutputWithContext(ctx context.Context) VirtualNetworkPeeringResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringResponseOutput)
}

// VirtualNetworkPeeringResponseArrayInput is an input type that accepts VirtualNetworkPeeringResponseArray and VirtualNetworkPeeringResponseArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringResponseArrayInput` via:
//
//          VirtualNetworkPeeringResponseArray{ VirtualNetworkPeeringResponseArgs{...} }
type VirtualNetworkPeeringResponseArrayInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringResponseArrayOutput() VirtualNetworkPeeringResponseArrayOutput
	ToVirtualNetworkPeeringResponseArrayOutputWithContext(context.Context) VirtualNetworkPeeringResponseArrayOutput
}

type VirtualNetworkPeeringResponseArray []VirtualNetworkPeeringResponseInput

func (VirtualNetworkPeeringResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPeeringResponse)(nil)).Elem()
}

func (i VirtualNetworkPeeringResponseArray) ToVirtualNetworkPeeringResponseArrayOutput() VirtualNetworkPeeringResponseArrayOutput {
	return i.ToVirtualNetworkPeeringResponseArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringResponseArray) ToVirtualNetworkPeeringResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkPeeringResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringResponseArrayOutput)
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringResponse)(nil)).Elem()
}

func (o VirtualNetworkPeeringResponseOutput) ToVirtualNetworkPeeringResponseOutput() VirtualNetworkPeeringResponseOutput {
	return o
}

func (o VirtualNetworkPeeringResponseOutput) ToVirtualNetworkPeeringResponseOutputWithContext(ctx context.Context) VirtualNetworkPeeringResponseOutput {
	return o
}

// Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
func (o VirtualNetworkPeeringResponseOutput) AllowForwardedTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.AllowForwardedTraffic }).(pulumi.BoolPtrOutput)
}

// If gateway links can be used in remote virtual networking to link to this virtual network.
func (o VirtualNetworkPeeringResponseOutput) AllowGatewayTransit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.AllowGatewayTransit }).(pulumi.BoolPtrOutput)
}

// Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
func (o VirtualNetworkPeeringResponseOutput) AllowVirtualNetworkAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.AllowVirtualNetworkAccess }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkPeeringResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VirtualNetworkPeeringResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkPeeringResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The status of the virtual network peering.
func (o VirtualNetworkPeeringResponseOutput) PeeringState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.PeeringState }).(pulumi.StringPtrOutput)
}

// The peering sync status of the virtual network peering.
func (o VirtualNetworkPeeringResponseOutput) PeeringSyncLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.PeeringSyncLevel }).(pulumi.StringPtrOutput)
}

// The provisioning state of the virtual network peering resource.
func (o VirtualNetworkPeeringResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference to the address space peered with the remote virtual network.
func (o VirtualNetworkPeeringResponseOutput) RemoteAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *AddressSpaceResponse { return v.RemoteAddressSpace }).(AddressSpaceResponsePtrOutput)
}

// The reference to the remote virtual network's Bgp Communities.
func (o VirtualNetworkPeeringResponseOutput) RemoteBgpCommunities() VirtualNetworkBgpCommunitiesResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *VirtualNetworkBgpCommunitiesResponse {
		return v.RemoteBgpCommunities
	}).(VirtualNetworkBgpCommunitiesResponsePtrOutput)
}

// The reference to the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
func (o VirtualNetworkPeeringResponseOutput) RemoteVirtualNetwork() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *SubResourceResponse { return v.RemoteVirtualNetwork }).(SubResourceResponsePtrOutput)
}

// The reference to the current address space of the remote virtual network.
func (o VirtualNetworkPeeringResponseOutput) RemoteVirtualNetworkAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *AddressSpaceResponse { return v.RemoteVirtualNetworkAddressSpace }).(AddressSpaceResponsePtrOutput)
}

// Provided when user wants to sync the peering with address space on the remote virtual network after the address space is updated.
func (o VirtualNetworkPeeringResponseOutput) SyncRemoteAddressSpace() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.SyncRemoteAddressSpace }).(pulumi.BoolPtrOutput)
}

// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
func (o VirtualNetworkPeeringResponseOutput) UseRemoteGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.UseRemoteGateways }).(pulumi.BoolPtrOutput)
}

type VirtualNetworkPeeringResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPeeringResponse)(nil)).Elem()
}

func (o VirtualNetworkPeeringResponseArrayOutput) ToVirtualNetworkPeeringResponseArrayOutput() VirtualNetworkPeeringResponseArrayOutput {
	return o
}

func (o VirtualNetworkPeeringResponseArrayOutput) ToVirtualNetworkPeeringResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkPeeringResponseArrayOutput {
	return o
}

func (o VirtualNetworkPeeringResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkPeeringResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkPeeringResponse {
		return vs[0].([]VirtualNetworkPeeringResponse)[vs[1].(int)]
	}).(VirtualNetworkPeeringResponseOutput)
}

// Virtual Network Tap resource.
type VirtualNetworkTapType struct {
	// The reference to the private IP address on the internal Load Balancer that will receive the tap.
	DestinationLoadBalancerFrontEndIPConfiguration *FrontendIPConfiguration `pulumi:"destinationLoadBalancerFrontEndIPConfiguration"`
	// The reference to the private IP Address of the collector nic that will receive the tap.
	DestinationNetworkInterfaceIPConfiguration *NetworkInterfaceIPConfiguration `pulumi:"destinationNetworkInterfaceIPConfiguration"`
	// The VXLAN destination port that will receive the tapped traffic.
	DestinationPort *int `pulumi:"destinationPort"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// VirtualNetworkTapTypeInput is an input type that accepts VirtualNetworkTapTypeArgs and VirtualNetworkTapTypeOutput values.
// You can construct a concrete instance of `VirtualNetworkTapTypeInput` via:
//
//          VirtualNetworkTapTypeArgs{...}
type VirtualNetworkTapTypeInput interface {
	pulumi.Input

	ToVirtualNetworkTapTypeOutput() VirtualNetworkTapTypeOutput
	ToVirtualNetworkTapTypeOutputWithContext(context.Context) VirtualNetworkTapTypeOutput
}

// Virtual Network Tap resource.
type VirtualNetworkTapTypeArgs struct {
	// The reference to the private IP address on the internal Load Balancer that will receive the tap.
	DestinationLoadBalancerFrontEndIPConfiguration FrontendIPConfigurationPtrInput `pulumi:"destinationLoadBalancerFrontEndIPConfiguration"`
	// The reference to the private IP Address of the collector nic that will receive the tap.
	DestinationNetworkInterfaceIPConfiguration NetworkInterfaceIPConfigurationPtrInput `pulumi:"destinationNetworkInterfaceIPConfiguration"`
	// The VXLAN destination port that will receive the tapped traffic.
	DestinationPort pulumi.IntPtrInput `pulumi:"destinationPort"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (VirtualNetworkTapTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapType)(nil)).Elem()
}

func (i VirtualNetworkTapTypeArgs) ToVirtualNetworkTapTypeOutput() VirtualNetworkTapTypeOutput {
	return i.ToVirtualNetworkTapTypeOutputWithContext(context.Background())
}

func (i VirtualNetworkTapTypeArgs) ToVirtualNetworkTapTypeOutputWithContext(ctx context.Context) VirtualNetworkTapTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapTypeOutput)
}

func (i VirtualNetworkTapTypeArgs) ToVirtualNetworkTapTypePtrOutput() VirtualNetworkTapTypePtrOutput {
	return i.ToVirtualNetworkTapTypePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkTapTypeArgs) ToVirtualNetworkTapTypePtrOutputWithContext(ctx context.Context) VirtualNetworkTapTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapTypeOutput).ToVirtualNetworkTapTypePtrOutputWithContext(ctx)
}

// VirtualNetworkTapTypePtrInput is an input type that accepts VirtualNetworkTapTypeArgs, VirtualNetworkTapTypePtr and VirtualNetworkTapTypePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkTapTypePtrInput` via:
//
//          VirtualNetworkTapTypeArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkTapTypePtrInput interface {
	pulumi.Input

	ToVirtualNetworkTapTypePtrOutput() VirtualNetworkTapTypePtrOutput
	ToVirtualNetworkTapTypePtrOutputWithContext(context.Context) VirtualNetworkTapTypePtrOutput
}

type virtualNetworkTapTypePtrType VirtualNetworkTapTypeArgs

func VirtualNetworkTapTypePtr(v *VirtualNetworkTapTypeArgs) VirtualNetworkTapTypePtrInput {
	return (*virtualNetworkTapTypePtrType)(v)
}

func (*virtualNetworkTapTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapType)(nil)).Elem()
}

func (i *virtualNetworkTapTypePtrType) ToVirtualNetworkTapTypePtrOutput() VirtualNetworkTapTypePtrOutput {
	return i.ToVirtualNetworkTapTypePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkTapTypePtrType) ToVirtualNetworkTapTypePtrOutputWithContext(ctx context.Context) VirtualNetworkTapTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapTypePtrOutput)
}

// VirtualNetworkTapTypeArrayInput is an input type that accepts VirtualNetworkTapTypeArray and VirtualNetworkTapTypeArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkTapTypeArrayInput` via:
//
//          VirtualNetworkTapTypeArray{ VirtualNetworkTapTypeArgs{...} }
type VirtualNetworkTapTypeArrayInput interface {
	pulumi.Input

	ToVirtualNetworkTapTypeArrayOutput() VirtualNetworkTapTypeArrayOutput
	ToVirtualNetworkTapTypeArrayOutputWithContext(context.Context) VirtualNetworkTapTypeArrayOutput
}

type VirtualNetworkTapTypeArray []VirtualNetworkTapTypeInput

func (VirtualNetworkTapTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkTapType)(nil)).Elem()
}

func (i VirtualNetworkTapTypeArray) ToVirtualNetworkTapTypeArrayOutput() VirtualNetworkTapTypeArrayOutput {
	return i.ToVirtualNetworkTapTypeArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkTapTypeArray) ToVirtualNetworkTapTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkTapTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapTypeArrayOutput)
}

// Virtual Network Tap resource.
type VirtualNetworkTapTypeOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapType)(nil)).Elem()
}

func (o VirtualNetworkTapTypeOutput) ToVirtualNetworkTapTypeOutput() VirtualNetworkTapTypeOutput {
	return o
}

func (o VirtualNetworkTapTypeOutput) ToVirtualNetworkTapTypeOutputWithContext(ctx context.Context) VirtualNetworkTapTypeOutput {
	return o
}

func (o VirtualNetworkTapTypeOutput) ToVirtualNetworkTapTypePtrOutput() VirtualNetworkTapTypePtrOutput {
	return o.ToVirtualNetworkTapTypePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkTapTypeOutput) ToVirtualNetworkTapTypePtrOutputWithContext(ctx context.Context) VirtualNetworkTapTypePtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) *VirtualNetworkTapType {
		return &v
	}).(VirtualNetworkTapTypePtrOutput)
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap.
func (o VirtualNetworkTapTypeOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) *FrontendIPConfiguration {
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationPtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap.
func (o VirtualNetworkTapTypeOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) *NetworkInterfaceIPConfiguration {
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationPtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapTypeOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) *int { return v.DestinationPort }).(pulumi.IntPtrOutput)
}

// Resource ID.
func (o VirtualNetworkTapTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o VirtualNetworkTapTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkTapType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type VirtualNetworkTapTypePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapType)(nil)).Elem()
}

func (o VirtualNetworkTapTypePtrOutput) ToVirtualNetworkTapTypePtrOutput() VirtualNetworkTapTypePtrOutput {
	return o
}

func (o VirtualNetworkTapTypePtrOutput) ToVirtualNetworkTapTypePtrOutputWithContext(ctx context.Context) VirtualNetworkTapTypePtrOutput {
	return o
}

func (o VirtualNetworkTapTypePtrOutput) Elem() VirtualNetworkTapTypeOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) VirtualNetworkTapType { return *v }).(VirtualNetworkTapTypeOutput)
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap.
func (o VirtualNetworkTapTypePtrOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) *FrontendIPConfiguration {
		if v == nil {
			return nil
		}
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationPtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap.
func (o VirtualNetworkTapTypePtrOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) *NetworkInterfaceIPConfiguration {
		if v == nil {
			return nil
		}
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationPtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapTypePtrOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) *int {
		if v == nil {
			return nil
		}
		return v.DestinationPort
	}).(pulumi.IntPtrOutput)
}

// Resource ID.
func (o VirtualNetworkTapTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o VirtualNetworkTapTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkTapType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

type VirtualNetworkTapTypeArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkTapType)(nil)).Elem()
}

func (o VirtualNetworkTapTypeArrayOutput) ToVirtualNetworkTapTypeArrayOutput() VirtualNetworkTapTypeArrayOutput {
	return o
}

func (o VirtualNetworkTapTypeArrayOutput) ToVirtualNetworkTapTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkTapTypeArrayOutput {
	return o
}

func (o VirtualNetworkTapTypeArrayOutput) Index(i pulumi.IntInput) VirtualNetworkTapTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkTapType {
		return vs[0].([]VirtualNetworkTapType)[vs[1].(int)]
	}).(VirtualNetworkTapTypeOutput)
}

// Virtual Network Tap resource.
type VirtualNetworkTapResponse struct {
	// The reference to the private IP address on the internal Load Balancer that will receive the tap.
	DestinationLoadBalancerFrontEndIPConfiguration *FrontendIPConfigurationResponse `pulumi:"destinationLoadBalancerFrontEndIPConfiguration"`
	// The reference to the private IP Address of the collector nic that will receive the tap.
	DestinationNetworkInterfaceIPConfiguration *NetworkInterfaceIPConfigurationResponse `pulumi:"destinationNetworkInterfaceIPConfiguration"`
	// The VXLAN destination port that will receive the tapped traffic.
	DestinationPort *int `pulumi:"destinationPort"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
	NetworkInterfaceTapConfigurations []NetworkInterfaceTapConfigurationResponse `pulumi:"networkInterfaceTapConfigurations"`
	// The provisioning state of the virtual network tap resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the virtual network tap resource.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VirtualNetworkTapResponseInput is an input type that accepts VirtualNetworkTapResponseArgs and VirtualNetworkTapResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkTapResponseInput` via:
//
//          VirtualNetworkTapResponseArgs{...}
type VirtualNetworkTapResponseInput interface {
	pulumi.Input

	ToVirtualNetworkTapResponseOutput() VirtualNetworkTapResponseOutput
	ToVirtualNetworkTapResponseOutputWithContext(context.Context) VirtualNetworkTapResponseOutput
}

// Virtual Network Tap resource.
type VirtualNetworkTapResponseArgs struct {
	// The reference to the private IP address on the internal Load Balancer that will receive the tap.
	DestinationLoadBalancerFrontEndIPConfiguration FrontendIPConfigurationResponsePtrInput `pulumi:"destinationLoadBalancerFrontEndIPConfiguration"`
	// The reference to the private IP Address of the collector nic that will receive the tap.
	DestinationNetworkInterfaceIPConfiguration NetworkInterfaceIPConfigurationResponsePtrInput `pulumi:"destinationNetworkInterfaceIPConfiguration"`
	// The VXLAN destination port that will receive the tapped traffic.
	DestinationPort pulumi.IntPtrInput `pulumi:"destinationPort"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
	NetworkInterfaceTapConfigurations NetworkInterfaceTapConfigurationResponseArrayInput `pulumi:"networkInterfaceTapConfigurations"`
	// The provisioning state of the virtual network tap resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resource GUID property of the virtual network tap resource.
	ResourceGuid pulumi.StringInput `pulumi:"resourceGuid"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VirtualNetworkTapResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapResponse)(nil)).Elem()
}

func (i VirtualNetworkTapResponseArgs) ToVirtualNetworkTapResponseOutput() VirtualNetworkTapResponseOutput {
	return i.ToVirtualNetworkTapResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkTapResponseArgs) ToVirtualNetworkTapResponseOutputWithContext(ctx context.Context) VirtualNetworkTapResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapResponseOutput)
}

func (i VirtualNetworkTapResponseArgs) ToVirtualNetworkTapResponsePtrOutput() VirtualNetworkTapResponsePtrOutput {
	return i.ToVirtualNetworkTapResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkTapResponseArgs) ToVirtualNetworkTapResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkTapResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapResponseOutput).ToVirtualNetworkTapResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkTapResponsePtrInput is an input type that accepts VirtualNetworkTapResponseArgs, VirtualNetworkTapResponsePtr and VirtualNetworkTapResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkTapResponsePtrInput` via:
//
//          VirtualNetworkTapResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkTapResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkTapResponsePtrOutput() VirtualNetworkTapResponsePtrOutput
	ToVirtualNetworkTapResponsePtrOutputWithContext(context.Context) VirtualNetworkTapResponsePtrOutput
}

type virtualNetworkTapResponsePtrType VirtualNetworkTapResponseArgs

func VirtualNetworkTapResponsePtr(v *VirtualNetworkTapResponseArgs) VirtualNetworkTapResponsePtrInput {
	return (*virtualNetworkTapResponsePtrType)(v)
}

func (*virtualNetworkTapResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapResponse)(nil)).Elem()
}

func (i *virtualNetworkTapResponsePtrType) ToVirtualNetworkTapResponsePtrOutput() VirtualNetworkTapResponsePtrOutput {
	return i.ToVirtualNetworkTapResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkTapResponsePtrType) ToVirtualNetworkTapResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkTapResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapResponsePtrOutput)
}

// VirtualNetworkTapResponseArrayInput is an input type that accepts VirtualNetworkTapResponseArray and VirtualNetworkTapResponseArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkTapResponseArrayInput` via:
//
//          VirtualNetworkTapResponseArray{ VirtualNetworkTapResponseArgs{...} }
type VirtualNetworkTapResponseArrayInput interface {
	pulumi.Input

	ToVirtualNetworkTapResponseArrayOutput() VirtualNetworkTapResponseArrayOutput
	ToVirtualNetworkTapResponseArrayOutputWithContext(context.Context) VirtualNetworkTapResponseArrayOutput
}

type VirtualNetworkTapResponseArray []VirtualNetworkTapResponseInput

func (VirtualNetworkTapResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkTapResponse)(nil)).Elem()
}

func (i VirtualNetworkTapResponseArray) ToVirtualNetworkTapResponseArrayOutput() VirtualNetworkTapResponseArrayOutput {
	return i.ToVirtualNetworkTapResponseArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkTapResponseArray) ToVirtualNetworkTapResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkTapResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkTapResponseArrayOutput)
}

// Virtual Network Tap resource.
type VirtualNetworkTapResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkTapResponse)(nil)).Elem()
}

func (o VirtualNetworkTapResponseOutput) ToVirtualNetworkTapResponseOutput() VirtualNetworkTapResponseOutput {
	return o
}

func (o VirtualNetworkTapResponseOutput) ToVirtualNetworkTapResponseOutputWithContext(ctx context.Context) VirtualNetworkTapResponseOutput {
	return o
}

func (o VirtualNetworkTapResponseOutput) ToVirtualNetworkTapResponsePtrOutput() VirtualNetworkTapResponsePtrOutput {
	return o.ToVirtualNetworkTapResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkTapResponseOutput) ToVirtualNetworkTapResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkTapResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *VirtualNetworkTapResponse {
		return &v
	}).(VirtualNetworkTapResponsePtrOutput)
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap.
func (o VirtualNetworkTapResponseOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *FrontendIPConfigurationResponse {
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationResponsePtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap.
func (o VirtualNetworkTapResponseOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *NetworkInterfaceIPConfigurationResponse {
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapResponseOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *int { return v.DestinationPort }).(pulumi.IntPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkTapResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VirtualNetworkTapResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkTapResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
func (o VirtualNetworkTapResponseOutput) NetworkInterfaceTapConfigurations() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) []NetworkInterfaceTapConfigurationResponse {
		return v.NetworkInterfaceTapConfigurations
	}).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// The provisioning state of the virtual network tap resource.
func (o VirtualNetworkTapResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the virtual network tap resource.
func (o VirtualNetworkTapResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Resource tags.
func (o VirtualNetworkTapResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkTapResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkTapResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VirtualNetworkTapResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkTapResponse)(nil)).Elem()
}

func (o VirtualNetworkTapResponsePtrOutput) ToVirtualNetworkTapResponsePtrOutput() VirtualNetworkTapResponsePtrOutput {
	return o
}

func (o VirtualNetworkTapResponsePtrOutput) ToVirtualNetworkTapResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkTapResponsePtrOutput {
	return o
}

func (o VirtualNetworkTapResponsePtrOutput) Elem() VirtualNetworkTapResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) VirtualNetworkTapResponse { return *v }).(VirtualNetworkTapResponseOutput)
}

// The reference to the private IP address on the internal Load Balancer that will receive the tap.
func (o VirtualNetworkTapResponsePtrOutput) DestinationLoadBalancerFrontEndIPConfiguration() FrontendIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *FrontendIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.DestinationLoadBalancerFrontEndIPConfiguration
	}).(FrontendIPConfigurationResponsePtrOutput)
}

// The reference to the private IP Address of the collector nic that will receive the tap.
func (o VirtualNetworkTapResponsePtrOutput) DestinationNetworkInterfaceIPConfiguration() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *NetworkInterfaceIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.DestinationNetworkInterfaceIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// The VXLAN destination port that will receive the tapped traffic.
func (o VirtualNetworkTapResponsePtrOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *int {
		if v == nil {
			return nil
		}
		return v.DestinationPort
	}).(pulumi.IntPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkTapResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkTapResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o VirtualNetworkTapResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkTapResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Specifies the list of resource IDs for the network interface IP configuration that needs to be tapped.
func (o VirtualNetworkTapResponsePtrOutput) NetworkInterfaceTapConfigurations() NetworkInterfaceTapConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) []NetworkInterfaceTapConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaceTapConfigurations
	}).(NetworkInterfaceTapConfigurationResponseArrayOutput)
}

// The provisioning state of the virtual network tap resource.
func (o VirtualNetworkTapResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the virtual network tap resource.
func (o VirtualNetworkTapResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o VirtualNetworkTapResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkTapResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkTapResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type VirtualNetworkTapResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkTapResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkTapResponse)(nil)).Elem()
}

func (o VirtualNetworkTapResponseArrayOutput) ToVirtualNetworkTapResponseArrayOutput() VirtualNetworkTapResponseArrayOutput {
	return o
}

func (o VirtualNetworkTapResponseArrayOutput) ToVirtualNetworkTapResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkTapResponseArrayOutput {
	return o
}

func (o VirtualNetworkTapResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkTapResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkTapResponse {
		return vs[0].([]VirtualNetworkTapResponse)[vs[1].(int)]
	}).(VirtualNetworkTapResponseOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
type VnetRoute struct {
	// List of all Static Routes.
	StaticRoutes []StaticRoute `pulumi:"staticRoutes"`
}

// VnetRouteInput is an input type that accepts VnetRouteArgs and VnetRouteOutput values.
// You can construct a concrete instance of `VnetRouteInput` via:
//
//          VnetRouteArgs{...}
type VnetRouteInput interface {
	pulumi.Input

	ToVnetRouteOutput() VnetRouteOutput
	ToVnetRouteOutputWithContext(context.Context) VnetRouteOutput
}

// List of routes that control routing from VirtualHub into a virtual network connection.
type VnetRouteArgs struct {
	// List of all Static Routes.
	StaticRoutes StaticRouteArrayInput `pulumi:"staticRoutes"`
}

func (VnetRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRoute)(nil)).Elem()
}

func (i VnetRouteArgs) ToVnetRouteOutput() VnetRouteOutput {
	return i.ToVnetRouteOutputWithContext(context.Background())
}

func (i VnetRouteArgs) ToVnetRouteOutputWithContext(ctx context.Context) VnetRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteOutput)
}

func (i VnetRouteArgs) ToVnetRoutePtrOutput() VnetRoutePtrOutput {
	return i.ToVnetRoutePtrOutputWithContext(context.Background())
}

func (i VnetRouteArgs) ToVnetRoutePtrOutputWithContext(ctx context.Context) VnetRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteOutput).ToVnetRoutePtrOutputWithContext(ctx)
}

// VnetRoutePtrInput is an input type that accepts VnetRouteArgs, VnetRoutePtr and VnetRoutePtrOutput values.
// You can construct a concrete instance of `VnetRoutePtrInput` via:
//
//          VnetRouteArgs{...}
//
//  or:
//
//          nil
type VnetRoutePtrInput interface {
	pulumi.Input

	ToVnetRoutePtrOutput() VnetRoutePtrOutput
	ToVnetRoutePtrOutputWithContext(context.Context) VnetRoutePtrOutput
}

type vnetRoutePtrType VnetRouteArgs

func VnetRoutePtr(v *VnetRouteArgs) VnetRoutePtrInput {
	return (*vnetRoutePtrType)(v)
}

func (*vnetRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetRoute)(nil)).Elem()
}

func (i *vnetRoutePtrType) ToVnetRoutePtrOutput() VnetRoutePtrOutput {
	return i.ToVnetRoutePtrOutputWithContext(context.Background())
}

func (i *vnetRoutePtrType) ToVnetRoutePtrOutputWithContext(ctx context.Context) VnetRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRoutePtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
type VnetRouteOutput struct{ *pulumi.OutputState }

func (VnetRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRoute)(nil)).Elem()
}

func (o VnetRouteOutput) ToVnetRouteOutput() VnetRouteOutput {
	return o
}

func (o VnetRouteOutput) ToVnetRouteOutputWithContext(ctx context.Context) VnetRouteOutput {
	return o
}

func (o VnetRouteOutput) ToVnetRoutePtrOutput() VnetRoutePtrOutput {
	return o.ToVnetRoutePtrOutputWithContext(context.Background())
}

func (o VnetRouteOutput) ToVnetRoutePtrOutputWithContext(ctx context.Context) VnetRoutePtrOutput {
	return o.ApplyT(func(v VnetRoute) *VnetRoute {
		return &v
	}).(VnetRoutePtrOutput)
}

// List of all Static Routes.
func (o VnetRouteOutput) StaticRoutes() StaticRouteArrayOutput {
	return o.ApplyT(func(v VnetRoute) []StaticRoute { return v.StaticRoutes }).(StaticRouteArrayOutput)
}

type VnetRoutePtrOutput struct{ *pulumi.OutputState }

func (VnetRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetRoute)(nil)).Elem()
}

func (o VnetRoutePtrOutput) ToVnetRoutePtrOutput() VnetRoutePtrOutput {
	return o
}

func (o VnetRoutePtrOutput) ToVnetRoutePtrOutputWithContext(ctx context.Context) VnetRoutePtrOutput {
	return o
}

func (o VnetRoutePtrOutput) Elem() VnetRouteOutput {
	return o.ApplyT(func(v *VnetRoute) VnetRoute { return *v }).(VnetRouteOutput)
}

// List of all Static Routes.
func (o VnetRoutePtrOutput) StaticRoutes() StaticRouteArrayOutput {
	return o.ApplyT(func(v *VnetRoute) []StaticRoute {
		if v == nil {
			return nil
		}
		return v.StaticRoutes
	}).(StaticRouteArrayOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
type VnetRouteResponse struct {
	// List of all Static Routes.
	StaticRoutes []StaticRouteResponse `pulumi:"staticRoutes"`
}

// VnetRouteResponseInput is an input type that accepts VnetRouteResponseArgs and VnetRouteResponseOutput values.
// You can construct a concrete instance of `VnetRouteResponseInput` via:
//
//          VnetRouteResponseArgs{...}
type VnetRouteResponseInput interface {
	pulumi.Input

	ToVnetRouteResponseOutput() VnetRouteResponseOutput
	ToVnetRouteResponseOutputWithContext(context.Context) VnetRouteResponseOutput
}

// List of routes that control routing from VirtualHub into a virtual network connection.
type VnetRouteResponseArgs struct {
	// List of all Static Routes.
	StaticRoutes StaticRouteResponseArrayInput `pulumi:"staticRoutes"`
}

func (VnetRouteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteResponse)(nil)).Elem()
}

func (i VnetRouteResponseArgs) ToVnetRouteResponseOutput() VnetRouteResponseOutput {
	return i.ToVnetRouteResponseOutputWithContext(context.Background())
}

func (i VnetRouteResponseArgs) ToVnetRouteResponseOutputWithContext(ctx context.Context) VnetRouteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponseOutput)
}

func (i VnetRouteResponseArgs) ToVnetRouteResponsePtrOutput() VnetRouteResponsePtrOutput {
	return i.ToVnetRouteResponsePtrOutputWithContext(context.Background())
}

func (i VnetRouteResponseArgs) ToVnetRouteResponsePtrOutputWithContext(ctx context.Context) VnetRouteResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponseOutput).ToVnetRouteResponsePtrOutputWithContext(ctx)
}

// VnetRouteResponsePtrInput is an input type that accepts VnetRouteResponseArgs, VnetRouteResponsePtr and VnetRouteResponsePtrOutput values.
// You can construct a concrete instance of `VnetRouteResponsePtrInput` via:
//
//          VnetRouteResponseArgs{...}
//
//  or:
//
//          nil
type VnetRouteResponsePtrInput interface {
	pulumi.Input

	ToVnetRouteResponsePtrOutput() VnetRouteResponsePtrOutput
	ToVnetRouteResponsePtrOutputWithContext(context.Context) VnetRouteResponsePtrOutput
}

type vnetRouteResponsePtrType VnetRouteResponseArgs

func VnetRouteResponsePtr(v *VnetRouteResponseArgs) VnetRouteResponsePtrInput {
	return (*vnetRouteResponsePtrType)(v)
}

func (*vnetRouteResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetRouteResponse)(nil)).Elem()
}

func (i *vnetRouteResponsePtrType) ToVnetRouteResponsePtrOutput() VnetRouteResponsePtrOutput {
	return i.ToVnetRouteResponsePtrOutputWithContext(context.Background())
}

func (i *vnetRouteResponsePtrType) ToVnetRouteResponsePtrOutputWithContext(ctx context.Context) VnetRouteResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VnetRouteResponsePtrOutput)
}

// List of routes that control routing from VirtualHub into a virtual network connection.
type VnetRouteResponseOutput struct{ *pulumi.OutputState }

func (VnetRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VnetRouteResponse)(nil)).Elem()
}

func (o VnetRouteResponseOutput) ToVnetRouteResponseOutput() VnetRouteResponseOutput {
	return o
}

func (o VnetRouteResponseOutput) ToVnetRouteResponseOutputWithContext(ctx context.Context) VnetRouteResponseOutput {
	return o
}

func (o VnetRouteResponseOutput) ToVnetRouteResponsePtrOutput() VnetRouteResponsePtrOutput {
	return o.ToVnetRouteResponsePtrOutputWithContext(context.Background())
}

func (o VnetRouteResponseOutput) ToVnetRouteResponsePtrOutputWithContext(ctx context.Context) VnetRouteResponsePtrOutput {
	return o.ApplyT(func(v VnetRouteResponse) *VnetRouteResponse {
		return &v
	}).(VnetRouteResponsePtrOutput)
}

// List of all Static Routes.
func (o VnetRouteResponseOutput) StaticRoutes() StaticRouteResponseArrayOutput {
	return o.ApplyT(func(v VnetRouteResponse) []StaticRouteResponse { return v.StaticRoutes }).(StaticRouteResponseArrayOutput)
}

type VnetRouteResponsePtrOutput struct{ *pulumi.OutputState }

func (VnetRouteResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VnetRouteResponse)(nil)).Elem()
}

func (o VnetRouteResponsePtrOutput) ToVnetRouteResponsePtrOutput() VnetRouteResponsePtrOutput {
	return o
}

func (o VnetRouteResponsePtrOutput) ToVnetRouteResponsePtrOutputWithContext(ctx context.Context) VnetRouteResponsePtrOutput {
	return o
}

func (o VnetRouteResponsePtrOutput) Elem() VnetRouteResponseOutput {
	return o.ApplyT(func(v *VnetRouteResponse) VnetRouteResponse { return *v }).(VnetRouteResponseOutput)
}

// List of all Static Routes.
func (o VnetRouteResponsePtrOutput) StaticRoutes() StaticRouteResponseArrayOutput {
	return o.ApplyT(func(v *VnetRouteResponse) []StaticRouteResponse {
		if v == nil {
			return nil
		}
		return v.StaticRoutes
	}).(StaticRouteResponseArrayOutput)
}

// VpnClientConfiguration for P2S client.
type VpnClientConfiguration struct {
	// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadAudience *string `pulumi:"aadAudience"`
	// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadIssuer *string `pulumi:"aadIssuer"`
	// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadTenant *string `pulumi:"aadTenant"`
	// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerAddress *string `pulumi:"radiusServerAddress"`
	// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
	// The radiusServers property for multiple radius server configuration.
	RadiusServers []RadiusServer `pulumi:"radiusServers"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpace `pulumi:"vpnClientAddressPool"`
	// VpnClientIpsecPolicies for virtual network gateway P2S client.
	VpnClientIpsecPolicies []IpsecPolicy `pulumi:"vpnClientIpsecPolicies"`
	// VpnClientProtocols for Virtual network gateway.
	VpnClientProtocols []string `pulumi:"vpnClientProtocols"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates []VpnClientRevokedCertificate `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for virtual network gateway.
	VpnClientRootCertificates []VpnClientRootCertificate `pulumi:"vpnClientRootCertificates"`
}

// VpnClientConfigurationInput is an input type that accepts VpnClientConfigurationArgs and VpnClientConfigurationOutput values.
// You can construct a concrete instance of `VpnClientConfigurationInput` via:
//
//          VpnClientConfigurationArgs{...}
type VpnClientConfigurationInput interface {
	pulumi.Input

	ToVpnClientConfigurationOutput() VpnClientConfigurationOutput
	ToVpnClientConfigurationOutputWithContext(context.Context) VpnClientConfigurationOutput
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationArgs struct {
	// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadAudience pulumi.StringPtrInput `pulumi:"aadAudience"`
	// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadIssuer pulumi.StringPtrInput `pulumi:"aadIssuer"`
	// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadTenant pulumi.StringPtrInput `pulumi:"aadTenant"`
	// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerAddress pulumi.StringPtrInput `pulumi:"radiusServerAddress"`
	// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerSecret pulumi.StringPtrInput `pulumi:"radiusServerSecret"`
	// The radiusServers property for multiple radius server configuration.
	RadiusServers RadiusServerArrayInput `pulumi:"radiusServers"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpacePtrInput `pulumi:"vpnClientAddressPool"`
	// VpnClientIpsecPolicies for virtual network gateway P2S client.
	VpnClientIpsecPolicies IpsecPolicyArrayInput `pulumi:"vpnClientIpsecPolicies"`
	// VpnClientProtocols for Virtual network gateway.
	VpnClientProtocols pulumi.StringArrayInput `pulumi:"vpnClientProtocols"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates VpnClientRevokedCertificateArrayInput `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for virtual network gateway.
	VpnClientRootCertificates VpnClientRootCertificateArrayInput `pulumi:"vpnClientRootCertificates"`
}

func (VpnClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfiguration)(nil)).Elem()
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationOutput() VpnClientConfigurationOutput {
	return i.ToVpnClientConfigurationOutputWithContext(context.Background())
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationOutputWithContext(ctx context.Context) VpnClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationOutput)
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return i.ToVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationOutput).ToVpnClientConfigurationPtrOutputWithContext(ctx)
}

// VpnClientConfigurationPtrInput is an input type that accepts VpnClientConfigurationArgs, VpnClientConfigurationPtr and VpnClientConfigurationPtrOutput values.
// You can construct a concrete instance of `VpnClientConfigurationPtrInput` via:
//
//          VpnClientConfigurationArgs{...}
//
//  or:
//
//          nil
type VpnClientConfigurationPtrInput interface {
	pulumi.Input

	ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput
	ToVpnClientConfigurationPtrOutputWithContext(context.Context) VpnClientConfigurationPtrOutput
}

type vpnClientConfigurationPtrType VpnClientConfigurationArgs

func VpnClientConfigurationPtr(v *VpnClientConfigurationArgs) VpnClientConfigurationPtrInput {
	return (*vpnClientConfigurationPtrType)(v)
}

func (*vpnClientConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfiguration)(nil)).Elem()
}

func (i *vpnClientConfigurationPtrType) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return i.ToVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (i *vpnClientConfigurationPtrType) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationPtrOutput)
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfiguration)(nil)).Elem()
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationOutput() VpnClientConfigurationOutput {
	return o
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationOutputWithContext(ctx context.Context) VpnClientConfigurationOutput {
	return o
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return o.ToVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *VpnClientConfiguration {
		return &v
	}).(VpnClientConfigurationPtrOutput)
}

// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *string { return v.AadAudience }).(pulumi.StringPtrOutput)
}

// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *string { return v.AadIssuer }).(pulumi.StringPtrOutput)
}

// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *string { return v.AadTenant }).(pulumi.StringPtrOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *string { return v.RadiusServerAddress }).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *string { return v.RadiusServerSecret }).(pulumi.StringPtrOutput)
}

// The radiusServers property for multiple radius server configuration.
func (o VpnClientConfigurationOutput) RadiusServers() RadiusServerArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []RadiusServer { return v.RadiusServers }).(RadiusServerArrayOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationOutput) VpnClientAddressPool() AddressSpacePtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *AddressSpace { return v.VpnClientAddressPool }).(AddressSpacePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationOutput) VpnClientIpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []IpsecPolicy { return v.VpnClientIpsecPolicies }).(IpsecPolicyArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []string { return v.VpnClientProtocols }).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []VpnClientRevokedCertificate { return v.VpnClientRevokedCertificates }).(VpnClientRevokedCertificateArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationOutput) VpnClientRootCertificates() VpnClientRootCertificateArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []VpnClientRootCertificate { return v.VpnClientRootCertificates }).(VpnClientRootCertificateArrayOutput)
}

type VpnClientConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfiguration)(nil)).Elem()
}

func (o VpnClientConfigurationPtrOutput) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return o
}

func (o VpnClientConfigurationPtrOutput) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return o
}

func (o VpnClientConfigurationPtrOutput) Elem() VpnClientConfigurationOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) VpnClientConfiguration { return *v }).(VpnClientConfigurationOutput)
}

// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationPtrOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AadAudience
	}).(pulumi.StringPtrOutput)
}

// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationPtrOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AadIssuer
	}).(pulumi.StringPtrOutput)
}

// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationPtrOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AadTenant
	}).(pulumi.StringPtrOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationPtrOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerAddress
	}).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationPtrOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerSecret
	}).(pulumi.StringPtrOutput)
}

// The radiusServers property for multiple radius server configuration.
func (o VpnClientConfigurationPtrOutput) RadiusServers() RadiusServerArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []RadiusServer {
		if v == nil {
			return nil
		}
		return v.RadiusServers
	}).(RadiusServerArrayOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationPtrOutput) VpnClientAddressPool() AddressSpacePtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *AddressSpace {
		if v == nil {
			return nil
		}
		return v.VpnClientAddressPool
	}).(AddressSpacePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationPtrOutput) VpnClientIpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []IpsecPolicy {
		if v == nil {
			return nil
		}
		return v.VpnClientIpsecPolicies
	}).(IpsecPolicyArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationPtrOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.VpnClientProtocols
	}).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationPtrOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []VpnClientRevokedCertificate {
		if v == nil {
			return nil
		}
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationPtrOutput) VpnClientRootCertificates() VpnClientRootCertificateArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []VpnClientRootCertificate {
		if v == nil {
			return nil
		}
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateArrayOutput)
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationResponse struct {
	// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadAudience *string `pulumi:"aadAudience"`
	// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadIssuer *string `pulumi:"aadIssuer"`
	// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadTenant *string `pulumi:"aadTenant"`
	// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerAddress *string `pulumi:"radiusServerAddress"`
	// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
	// The radiusServers property for multiple radius server configuration.
	RadiusServers []RadiusServerResponse `pulumi:"radiusServers"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpaceResponse `pulumi:"vpnClientAddressPool"`
	// VpnClientIpsecPolicies for virtual network gateway P2S client.
	VpnClientIpsecPolicies []IpsecPolicyResponse `pulumi:"vpnClientIpsecPolicies"`
	// VpnClientProtocols for Virtual network gateway.
	VpnClientProtocols []string `pulumi:"vpnClientProtocols"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates []VpnClientRevokedCertificateResponse `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for virtual network gateway.
	VpnClientRootCertificates []VpnClientRootCertificateResponse `pulumi:"vpnClientRootCertificates"`
}

// VpnClientConfigurationResponseInput is an input type that accepts VpnClientConfigurationResponseArgs and VpnClientConfigurationResponseOutput values.
// You can construct a concrete instance of `VpnClientConfigurationResponseInput` via:
//
//          VpnClientConfigurationResponseArgs{...}
type VpnClientConfigurationResponseInput interface {
	pulumi.Input

	ToVpnClientConfigurationResponseOutput() VpnClientConfigurationResponseOutput
	ToVpnClientConfigurationResponseOutputWithContext(context.Context) VpnClientConfigurationResponseOutput
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationResponseArgs struct {
	// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadAudience pulumi.StringPtrInput `pulumi:"aadAudience"`
	// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadIssuer pulumi.StringPtrInput `pulumi:"aadIssuer"`
	// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
	AadTenant pulumi.StringPtrInput `pulumi:"aadTenant"`
	// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerAddress pulumi.StringPtrInput `pulumi:"radiusServerAddress"`
	// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerSecret pulumi.StringPtrInput `pulumi:"radiusServerSecret"`
	// The radiusServers property for multiple radius server configuration.
	RadiusServers RadiusServerResponseArrayInput `pulumi:"radiusServers"`
	// The reference to the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpaceResponsePtrInput `pulumi:"vpnClientAddressPool"`
	// VpnClientIpsecPolicies for virtual network gateway P2S client.
	VpnClientIpsecPolicies IpsecPolicyResponseArrayInput `pulumi:"vpnClientIpsecPolicies"`
	// VpnClientProtocols for Virtual network gateway.
	VpnClientProtocols pulumi.StringArrayInput `pulumi:"vpnClientProtocols"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates VpnClientRevokedCertificateResponseArrayInput `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for virtual network gateway.
	VpnClientRootCertificates VpnClientRootCertificateResponseArrayInput `pulumi:"vpnClientRootCertificates"`
}

func (VpnClientConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfigurationResponse)(nil)).Elem()
}

func (i VpnClientConfigurationResponseArgs) ToVpnClientConfigurationResponseOutput() VpnClientConfigurationResponseOutput {
	return i.ToVpnClientConfigurationResponseOutputWithContext(context.Background())
}

func (i VpnClientConfigurationResponseArgs) ToVpnClientConfigurationResponseOutputWithContext(ctx context.Context) VpnClientConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationResponseOutput)
}

func (i VpnClientConfigurationResponseArgs) ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput {
	return i.ToVpnClientConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i VpnClientConfigurationResponseArgs) ToVpnClientConfigurationResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationResponseOutput).ToVpnClientConfigurationResponsePtrOutputWithContext(ctx)
}

// VpnClientConfigurationResponsePtrInput is an input type that accepts VpnClientConfigurationResponseArgs, VpnClientConfigurationResponsePtr and VpnClientConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `VpnClientConfigurationResponsePtrInput` via:
//
//          VpnClientConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type VpnClientConfigurationResponsePtrInput interface {
	pulumi.Input

	ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput
	ToVpnClientConfigurationResponsePtrOutputWithContext(context.Context) VpnClientConfigurationResponsePtrOutput
}

type vpnClientConfigurationResponsePtrType VpnClientConfigurationResponseArgs

func VpnClientConfigurationResponsePtr(v *VpnClientConfigurationResponseArgs) VpnClientConfigurationResponsePtrInput {
	return (*vpnClientConfigurationResponsePtrType)(v)
}

func (*vpnClientConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfigurationResponse)(nil)).Elem()
}

func (i *vpnClientConfigurationResponsePtrType) ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput {
	return i.ToVpnClientConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *vpnClientConfigurationResponsePtrType) ToVpnClientConfigurationResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationResponsePtrOutput)
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfigurationResponse)(nil)).Elem()
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponseOutput() VpnClientConfigurationResponseOutput {
	return o
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponseOutputWithContext(ctx context.Context) VpnClientConfigurationResponseOutput {
	return o
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput {
	return o.ToVpnClientConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *VpnClientConfigurationResponse {
		return &v
	}).(VpnClientConfigurationResponsePtrOutput)
}

// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationResponseOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *string { return v.AadAudience }).(pulumi.StringPtrOutput)
}

// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationResponseOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *string { return v.AadIssuer }).(pulumi.StringPtrOutput)
}

// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationResponseOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *string { return v.AadTenant }).(pulumi.StringPtrOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponseOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *string { return v.RadiusServerAddress }).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponseOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *string { return v.RadiusServerSecret }).(pulumi.StringPtrOutput)
}

// The radiusServers property for multiple radius server configuration.
func (o VpnClientConfigurationResponseOutput) RadiusServers() RadiusServerResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []RadiusServerResponse { return v.RadiusServers }).(RadiusServerResponseArrayOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationResponseOutput) VpnClientAddressPool() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *AddressSpaceResponse { return v.VpnClientAddressPool }).(AddressSpaceResponsePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationResponseOutput) VpnClientIpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []IpsecPolicyResponse { return v.VpnClientIpsecPolicies }).(IpsecPolicyResponseArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationResponseOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []string { return v.VpnClientProtocols }).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationResponseOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []VpnClientRevokedCertificateResponse {
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateResponseArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationResponseOutput) VpnClientRootCertificates() VpnClientRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []VpnClientRootCertificateResponse {
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateResponseArrayOutput)
}

type VpnClientConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfigurationResponse)(nil)).Elem()
}

func (o VpnClientConfigurationResponsePtrOutput) ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput {
	return o
}

func (o VpnClientConfigurationResponsePtrOutput) ToVpnClientConfigurationResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationResponsePtrOutput {
	return o
}

func (o VpnClientConfigurationResponsePtrOutput) Elem() VpnClientConfigurationResponseOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) VpnClientConfigurationResponse { return *v }).(VpnClientConfigurationResponseOutput)
}

// The AADAudience property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationResponsePtrOutput) AadAudience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadAudience
	}).(pulumi.StringPtrOutput)
}

// The AADIssuer property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationResponsePtrOutput) AadIssuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadIssuer
	}).(pulumi.StringPtrOutput)
}

// The AADTenant property of the VirtualNetworkGateway resource for vpn client connection used for AAD authentication.
func (o VpnClientConfigurationResponsePtrOutput) AadTenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.AadTenant
	}).(pulumi.StringPtrOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponsePtrOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerAddress
	}).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponsePtrOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerSecret
	}).(pulumi.StringPtrOutput)
}

// The radiusServers property for multiple radius server configuration.
func (o VpnClientConfigurationResponsePtrOutput) RadiusServers() RadiusServerResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []RadiusServerResponse {
		if v == nil {
			return nil
		}
		return v.RadiusServers
	}).(RadiusServerResponseArrayOutput)
}

// The reference to the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientAddressPool() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *AddressSpaceResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientAddressPool
	}).(AddressSpaceResponsePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientIpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []IpsecPolicyResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientIpsecPolicies
	}).(IpsecPolicyResponseArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.VpnClientProtocols
	}).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []VpnClientRevokedCertificateResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateResponseArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientRootCertificates() VpnClientRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []VpnClientRootCertificateResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateResponseArrayOutput)
}

// VPN client connection health detail.
type VpnClientConnectionHealthDetailResponse struct {
	// The egress bytes per second.
	EgressBytesTransferred int `pulumi:"egressBytesTransferred"`
	// The egress packets per second.
	EgressPacketsTransferred int `pulumi:"egressPacketsTransferred"`
	// The ingress bytes per second.
	IngressBytesTransferred int `pulumi:"ingressBytesTransferred"`
	// The ingress packets per second.
	IngressPacketsTransferred int `pulumi:"ingressPacketsTransferred"`
	// The max band width.
	MaxBandwidth int `pulumi:"maxBandwidth"`
	// The max packets transferred per second.
	MaxPacketsPerSecond int `pulumi:"maxPacketsPerSecond"`
	// The assigned private Ip of a connected vpn client.
	PrivateIpAddress string `pulumi:"privateIpAddress"`
	// The public Ip of a connected vpn client.
	PublicIpAddress string `pulumi:"publicIpAddress"`
	// The duration time of a connected vpn client.
	VpnConnectionDuration int `pulumi:"vpnConnectionDuration"`
	// The vpn client Id.
	VpnConnectionId string `pulumi:"vpnConnectionId"`
	// The start time of a connected vpn client.
	VpnConnectionTime string `pulumi:"vpnConnectionTime"`
	// The user name of a connected vpn client.
	VpnUserName string `pulumi:"vpnUserName"`
}

// VpnClientConnectionHealthDetailResponseInput is an input type that accepts VpnClientConnectionHealthDetailResponseArgs and VpnClientConnectionHealthDetailResponseOutput values.
// You can construct a concrete instance of `VpnClientConnectionHealthDetailResponseInput` via:
//
//          VpnClientConnectionHealthDetailResponseArgs{...}
type VpnClientConnectionHealthDetailResponseInput interface {
	pulumi.Input

	ToVpnClientConnectionHealthDetailResponseOutput() VpnClientConnectionHealthDetailResponseOutput
	ToVpnClientConnectionHealthDetailResponseOutputWithContext(context.Context) VpnClientConnectionHealthDetailResponseOutput
}

// VPN client connection health detail.
type VpnClientConnectionHealthDetailResponseArgs struct {
	// The egress bytes per second.
	EgressBytesTransferred pulumi.IntInput `pulumi:"egressBytesTransferred"`
	// The egress packets per second.
	EgressPacketsTransferred pulumi.IntInput `pulumi:"egressPacketsTransferred"`
	// The ingress bytes per second.
	IngressBytesTransferred pulumi.IntInput `pulumi:"ingressBytesTransferred"`
	// The ingress packets per second.
	IngressPacketsTransferred pulumi.IntInput `pulumi:"ingressPacketsTransferred"`
	// The max band width.
	MaxBandwidth pulumi.IntInput `pulumi:"maxBandwidth"`
	// The max packets transferred per second.
	MaxPacketsPerSecond pulumi.IntInput `pulumi:"maxPacketsPerSecond"`
	// The assigned private Ip of a connected vpn client.
	PrivateIpAddress pulumi.StringInput `pulumi:"privateIpAddress"`
	// The public Ip of a connected vpn client.
	PublicIpAddress pulumi.StringInput `pulumi:"publicIpAddress"`
	// The duration time of a connected vpn client.
	VpnConnectionDuration pulumi.IntInput `pulumi:"vpnConnectionDuration"`
	// The vpn client Id.
	VpnConnectionId pulumi.StringInput `pulumi:"vpnConnectionId"`
	// The start time of a connected vpn client.
	VpnConnectionTime pulumi.StringInput `pulumi:"vpnConnectionTime"`
	// The user name of a connected vpn client.
	VpnUserName pulumi.StringInput `pulumi:"vpnUserName"`
}

func (VpnClientConnectionHealthDetailResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConnectionHealthDetailResponse)(nil)).Elem()
}

func (i VpnClientConnectionHealthDetailResponseArgs) ToVpnClientConnectionHealthDetailResponseOutput() VpnClientConnectionHealthDetailResponseOutput {
	return i.ToVpnClientConnectionHealthDetailResponseOutputWithContext(context.Background())
}

func (i VpnClientConnectionHealthDetailResponseArgs) ToVpnClientConnectionHealthDetailResponseOutputWithContext(ctx context.Context) VpnClientConnectionHealthDetailResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConnectionHealthDetailResponseOutput)
}

// VpnClientConnectionHealthDetailResponseArrayInput is an input type that accepts VpnClientConnectionHealthDetailResponseArray and VpnClientConnectionHealthDetailResponseArrayOutput values.
// You can construct a concrete instance of `VpnClientConnectionHealthDetailResponseArrayInput` via:
//
//          VpnClientConnectionHealthDetailResponseArray{ VpnClientConnectionHealthDetailResponseArgs{...} }
type VpnClientConnectionHealthDetailResponseArrayInput interface {
	pulumi.Input

	ToVpnClientConnectionHealthDetailResponseArrayOutput() VpnClientConnectionHealthDetailResponseArrayOutput
	ToVpnClientConnectionHealthDetailResponseArrayOutputWithContext(context.Context) VpnClientConnectionHealthDetailResponseArrayOutput
}

type VpnClientConnectionHealthDetailResponseArray []VpnClientConnectionHealthDetailResponseInput

func (VpnClientConnectionHealthDetailResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientConnectionHealthDetailResponse)(nil)).Elem()
}

func (i VpnClientConnectionHealthDetailResponseArray) ToVpnClientConnectionHealthDetailResponseArrayOutput() VpnClientConnectionHealthDetailResponseArrayOutput {
	return i.ToVpnClientConnectionHealthDetailResponseArrayOutputWithContext(context.Background())
}

func (i VpnClientConnectionHealthDetailResponseArray) ToVpnClientConnectionHealthDetailResponseArrayOutputWithContext(ctx context.Context) VpnClientConnectionHealthDetailResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConnectionHealthDetailResponseArrayOutput)
}

// VPN client connection health detail.
type VpnClientConnectionHealthDetailResponseOutput struct{ *pulumi.OutputState }

func (VpnClientConnectionHealthDetailResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConnectionHealthDetailResponse)(nil)).Elem()
}

func (o VpnClientConnectionHealthDetailResponseOutput) ToVpnClientConnectionHealthDetailResponseOutput() VpnClientConnectionHealthDetailResponseOutput {
	return o
}

func (o VpnClientConnectionHealthDetailResponseOutput) ToVpnClientConnectionHealthDetailResponseOutputWithContext(ctx context.Context) VpnClientConnectionHealthDetailResponseOutput {
	return o
}

// The egress bytes per second.
func (o VpnClientConnectionHealthDetailResponseOutput) EgressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) int { return v.EgressBytesTransferred }).(pulumi.IntOutput)
}

// The egress packets per second.
func (o VpnClientConnectionHealthDetailResponseOutput) EgressPacketsTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) int { return v.EgressPacketsTransferred }).(pulumi.IntOutput)
}

// The ingress bytes per second.
func (o VpnClientConnectionHealthDetailResponseOutput) IngressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) int { return v.IngressBytesTransferred }).(pulumi.IntOutput)
}

// The ingress packets per second.
func (o VpnClientConnectionHealthDetailResponseOutput) IngressPacketsTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) int { return v.IngressPacketsTransferred }).(pulumi.IntOutput)
}

// The max band width.
func (o VpnClientConnectionHealthDetailResponseOutput) MaxBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) int { return v.MaxBandwidth }).(pulumi.IntOutput)
}

// The max packets transferred per second.
func (o VpnClientConnectionHealthDetailResponseOutput) MaxPacketsPerSecond() pulumi.IntOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) int { return v.MaxPacketsPerSecond }).(pulumi.IntOutput)
}

// The assigned private Ip of a connected vpn client.
func (o VpnClientConnectionHealthDetailResponseOutput) PrivateIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) string { return v.PrivateIpAddress }).(pulumi.StringOutput)
}

// The public Ip of a connected vpn client.
func (o VpnClientConnectionHealthDetailResponseOutput) PublicIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) string { return v.PublicIpAddress }).(pulumi.StringOutput)
}

// The duration time of a connected vpn client.
func (o VpnClientConnectionHealthDetailResponseOutput) VpnConnectionDuration() pulumi.IntOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) int { return v.VpnConnectionDuration }).(pulumi.IntOutput)
}

// The vpn client Id.
func (o VpnClientConnectionHealthDetailResponseOutput) VpnConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) string { return v.VpnConnectionId }).(pulumi.StringOutput)
}

// The start time of a connected vpn client.
func (o VpnClientConnectionHealthDetailResponseOutput) VpnConnectionTime() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) string { return v.VpnConnectionTime }).(pulumi.StringOutput)
}

// The user name of a connected vpn client.
func (o VpnClientConnectionHealthDetailResponseOutput) VpnUserName() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthDetailResponse) string { return v.VpnUserName }).(pulumi.StringOutput)
}

type VpnClientConnectionHealthDetailResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnClientConnectionHealthDetailResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientConnectionHealthDetailResponse)(nil)).Elem()
}

func (o VpnClientConnectionHealthDetailResponseArrayOutput) ToVpnClientConnectionHealthDetailResponseArrayOutput() VpnClientConnectionHealthDetailResponseArrayOutput {
	return o
}

func (o VpnClientConnectionHealthDetailResponseArrayOutput) ToVpnClientConnectionHealthDetailResponseArrayOutputWithContext(ctx context.Context) VpnClientConnectionHealthDetailResponseArrayOutput {
	return o
}

func (o VpnClientConnectionHealthDetailResponseArrayOutput) Index(i pulumi.IntInput) VpnClientConnectionHealthDetailResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientConnectionHealthDetailResponse {
		return vs[0].([]VpnClientConnectionHealthDetailResponse)[vs[1].(int)]
	}).(VpnClientConnectionHealthDetailResponseOutput)
}

// VpnClientConnectionHealth properties.
type VpnClientConnectionHealthResponse struct {
	// List of allocated ip addresses to the connected p2s vpn clients.
	AllocatedIpAddresses []string `pulumi:"allocatedIpAddresses"`
	// Total of the Egress Bytes Transferred in this connection.
	TotalEgressBytesTransferred int `pulumi:"totalEgressBytesTransferred"`
	// Total of the Ingress Bytes Transferred in this P2S Vpn connection.
	TotalIngressBytesTransferred int `pulumi:"totalIngressBytesTransferred"`
	// The total of p2s vpn clients connected at this time to this P2SVpnGateway.
	VpnClientConnectionsCount *int `pulumi:"vpnClientConnectionsCount"`
}

// VpnClientConnectionHealthResponseInput is an input type that accepts VpnClientConnectionHealthResponseArgs and VpnClientConnectionHealthResponseOutput values.
// You can construct a concrete instance of `VpnClientConnectionHealthResponseInput` via:
//
//          VpnClientConnectionHealthResponseArgs{...}
type VpnClientConnectionHealthResponseInput interface {
	pulumi.Input

	ToVpnClientConnectionHealthResponseOutput() VpnClientConnectionHealthResponseOutput
	ToVpnClientConnectionHealthResponseOutputWithContext(context.Context) VpnClientConnectionHealthResponseOutput
}

// VpnClientConnectionHealth properties.
type VpnClientConnectionHealthResponseArgs struct {
	// List of allocated ip addresses to the connected p2s vpn clients.
	AllocatedIpAddresses pulumi.StringArrayInput `pulumi:"allocatedIpAddresses"`
	// Total of the Egress Bytes Transferred in this connection.
	TotalEgressBytesTransferred pulumi.IntInput `pulumi:"totalEgressBytesTransferred"`
	// Total of the Ingress Bytes Transferred in this P2S Vpn connection.
	TotalIngressBytesTransferred pulumi.IntInput `pulumi:"totalIngressBytesTransferred"`
	// The total of p2s vpn clients connected at this time to this P2SVpnGateway.
	VpnClientConnectionsCount pulumi.IntPtrInput `pulumi:"vpnClientConnectionsCount"`
}

func (VpnClientConnectionHealthResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConnectionHealthResponse)(nil)).Elem()
}

func (i VpnClientConnectionHealthResponseArgs) ToVpnClientConnectionHealthResponseOutput() VpnClientConnectionHealthResponseOutput {
	return i.ToVpnClientConnectionHealthResponseOutputWithContext(context.Background())
}

func (i VpnClientConnectionHealthResponseArgs) ToVpnClientConnectionHealthResponseOutputWithContext(ctx context.Context) VpnClientConnectionHealthResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConnectionHealthResponseOutput)
}

func (i VpnClientConnectionHealthResponseArgs) ToVpnClientConnectionHealthResponsePtrOutput() VpnClientConnectionHealthResponsePtrOutput {
	return i.ToVpnClientConnectionHealthResponsePtrOutputWithContext(context.Background())
}

func (i VpnClientConnectionHealthResponseArgs) ToVpnClientConnectionHealthResponsePtrOutputWithContext(ctx context.Context) VpnClientConnectionHealthResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConnectionHealthResponseOutput).ToVpnClientConnectionHealthResponsePtrOutputWithContext(ctx)
}

// VpnClientConnectionHealthResponsePtrInput is an input type that accepts VpnClientConnectionHealthResponseArgs, VpnClientConnectionHealthResponsePtr and VpnClientConnectionHealthResponsePtrOutput values.
// You can construct a concrete instance of `VpnClientConnectionHealthResponsePtrInput` via:
//
//          VpnClientConnectionHealthResponseArgs{...}
//
//  or:
//
//          nil
type VpnClientConnectionHealthResponsePtrInput interface {
	pulumi.Input

	ToVpnClientConnectionHealthResponsePtrOutput() VpnClientConnectionHealthResponsePtrOutput
	ToVpnClientConnectionHealthResponsePtrOutputWithContext(context.Context) VpnClientConnectionHealthResponsePtrOutput
}

type vpnClientConnectionHealthResponsePtrType VpnClientConnectionHealthResponseArgs

func VpnClientConnectionHealthResponsePtr(v *VpnClientConnectionHealthResponseArgs) VpnClientConnectionHealthResponsePtrInput {
	return (*vpnClientConnectionHealthResponsePtrType)(v)
}

func (*vpnClientConnectionHealthResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConnectionHealthResponse)(nil)).Elem()
}

func (i *vpnClientConnectionHealthResponsePtrType) ToVpnClientConnectionHealthResponsePtrOutput() VpnClientConnectionHealthResponsePtrOutput {
	return i.ToVpnClientConnectionHealthResponsePtrOutputWithContext(context.Background())
}

func (i *vpnClientConnectionHealthResponsePtrType) ToVpnClientConnectionHealthResponsePtrOutputWithContext(ctx context.Context) VpnClientConnectionHealthResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConnectionHealthResponsePtrOutput)
}

// VpnClientConnectionHealth properties.
type VpnClientConnectionHealthResponseOutput struct{ *pulumi.OutputState }

func (VpnClientConnectionHealthResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConnectionHealthResponse)(nil)).Elem()
}

func (o VpnClientConnectionHealthResponseOutput) ToVpnClientConnectionHealthResponseOutput() VpnClientConnectionHealthResponseOutput {
	return o
}

func (o VpnClientConnectionHealthResponseOutput) ToVpnClientConnectionHealthResponseOutputWithContext(ctx context.Context) VpnClientConnectionHealthResponseOutput {
	return o
}

func (o VpnClientConnectionHealthResponseOutput) ToVpnClientConnectionHealthResponsePtrOutput() VpnClientConnectionHealthResponsePtrOutput {
	return o.ToVpnClientConnectionHealthResponsePtrOutputWithContext(context.Background())
}

func (o VpnClientConnectionHealthResponseOutput) ToVpnClientConnectionHealthResponsePtrOutputWithContext(ctx context.Context) VpnClientConnectionHealthResponsePtrOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthResponse) *VpnClientConnectionHealthResponse {
		return &v
	}).(VpnClientConnectionHealthResponsePtrOutput)
}

// List of allocated ip addresses to the connected p2s vpn clients.
func (o VpnClientConnectionHealthResponseOutput) AllocatedIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthResponse) []string { return v.AllocatedIpAddresses }).(pulumi.StringArrayOutput)
}

// Total of the Egress Bytes Transferred in this connection.
func (o VpnClientConnectionHealthResponseOutput) TotalEgressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthResponse) int { return v.TotalEgressBytesTransferred }).(pulumi.IntOutput)
}

// Total of the Ingress Bytes Transferred in this P2S Vpn connection.
func (o VpnClientConnectionHealthResponseOutput) TotalIngressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthResponse) int { return v.TotalIngressBytesTransferred }).(pulumi.IntOutput)
}

// The total of p2s vpn clients connected at this time to this P2SVpnGateway.
func (o VpnClientConnectionHealthResponseOutput) VpnClientConnectionsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnClientConnectionHealthResponse) *int { return v.VpnClientConnectionsCount }).(pulumi.IntPtrOutput)
}

type VpnClientConnectionHealthResponsePtrOutput struct{ *pulumi.OutputState }

func (VpnClientConnectionHealthResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConnectionHealthResponse)(nil)).Elem()
}

func (o VpnClientConnectionHealthResponsePtrOutput) ToVpnClientConnectionHealthResponsePtrOutput() VpnClientConnectionHealthResponsePtrOutput {
	return o
}

func (o VpnClientConnectionHealthResponsePtrOutput) ToVpnClientConnectionHealthResponsePtrOutputWithContext(ctx context.Context) VpnClientConnectionHealthResponsePtrOutput {
	return o
}

func (o VpnClientConnectionHealthResponsePtrOutput) Elem() VpnClientConnectionHealthResponseOutput {
	return o.ApplyT(func(v *VpnClientConnectionHealthResponse) VpnClientConnectionHealthResponse { return *v }).(VpnClientConnectionHealthResponseOutput)
}

// List of allocated ip addresses to the connected p2s vpn clients.
func (o VpnClientConnectionHealthResponsePtrOutput) AllocatedIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnClientConnectionHealthResponse) []string {
		if v == nil {
			return nil
		}
		return v.AllocatedIpAddresses
	}).(pulumi.StringArrayOutput)
}

// Total of the Egress Bytes Transferred in this connection.
func (o VpnClientConnectionHealthResponsePtrOutput) TotalEgressBytesTransferred() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnClientConnectionHealthResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TotalEgressBytesTransferred
	}).(pulumi.IntPtrOutput)
}

// Total of the Ingress Bytes Transferred in this P2S Vpn connection.
func (o VpnClientConnectionHealthResponsePtrOutput) TotalIngressBytesTransferred() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnClientConnectionHealthResponse) *int {
		if v == nil {
			return nil
		}
		return &v.TotalIngressBytesTransferred
	}).(pulumi.IntPtrOutput)
}

// The total of p2s vpn clients connected at this time to this P2SVpnGateway.
func (o VpnClientConnectionHealthResponsePtrOutput) VpnClientConnectionsCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnClientConnectionHealthResponse) *int {
		if v == nil {
			return nil
		}
		return v.VpnClientConnectionsCount
	}).(pulumi.IntPtrOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificate struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VpnClientRevokedCertificateInput is an input type that accepts VpnClientRevokedCertificateArgs and VpnClientRevokedCertificateOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateInput` via:
//
//          VpnClientRevokedCertificateArgs{...}
type VpnClientRevokedCertificateInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateOutput() VpnClientRevokedCertificateOutput
	ToVpnClientRevokedCertificateOutputWithContext(context.Context) VpnClientRevokedCertificateOutput
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (VpnClientRevokedCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificate)(nil)).Elem()
}

func (i VpnClientRevokedCertificateArgs) ToVpnClientRevokedCertificateOutput() VpnClientRevokedCertificateOutput {
	return i.ToVpnClientRevokedCertificateOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateArgs) ToVpnClientRevokedCertificateOutputWithContext(ctx context.Context) VpnClientRevokedCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateOutput)
}

// VpnClientRevokedCertificateArrayInput is an input type that accepts VpnClientRevokedCertificateArray and VpnClientRevokedCertificateArrayOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateArrayInput` via:
//
//          VpnClientRevokedCertificateArray{ VpnClientRevokedCertificateArgs{...} }
type VpnClientRevokedCertificateArrayInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateArrayOutput() VpnClientRevokedCertificateArrayOutput
	ToVpnClientRevokedCertificateArrayOutputWithContext(context.Context) VpnClientRevokedCertificateArrayOutput
}

type VpnClientRevokedCertificateArray []VpnClientRevokedCertificateInput

func (VpnClientRevokedCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificate)(nil)).Elem()
}

func (i VpnClientRevokedCertificateArray) ToVpnClientRevokedCertificateArrayOutput() VpnClientRevokedCertificateArrayOutput {
	return i.ToVpnClientRevokedCertificateArrayOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateArray) ToVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateArrayOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificate)(nil)).Elem()
}

func (o VpnClientRevokedCertificateOutput) ToVpnClientRevokedCertificateOutput() VpnClientRevokedCertificateOutput {
	return o
}

func (o VpnClientRevokedCertificateOutput) ToVpnClientRevokedCertificateOutputWithContext(ctx context.Context) VpnClientRevokedCertificateOutput {
	return o
}

// Resource ID.
func (o VpnClientRevokedCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRevokedCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnClientRevokedCertificateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnClientRevokedCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificate)(nil)).Elem()
}

func (o VpnClientRevokedCertificateArrayOutput) ToVpnClientRevokedCertificateArrayOutput() VpnClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateArrayOutput) ToVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateArrayOutput) Index(i pulumi.IntInput) VpnClientRevokedCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRevokedCertificate {
		return vs[0].([]VpnClientRevokedCertificate)[vs[1].(int)]
	}).(VpnClientRevokedCertificateOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN client revoked certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VpnClientRevokedCertificateResponseInput is an input type that accepts VpnClientRevokedCertificateResponseArgs and VpnClientRevokedCertificateResponseOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateResponseInput` via:
//
//          VpnClientRevokedCertificateResponseArgs{...}
type VpnClientRevokedCertificateResponseInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateResponseOutput() VpnClientRevokedCertificateResponseOutput
	ToVpnClientRevokedCertificateResponseOutputWithContext(context.Context) VpnClientRevokedCertificateResponseOutput
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the VPN client revoked certificate resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (VpnClientRevokedCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (i VpnClientRevokedCertificateResponseArgs) ToVpnClientRevokedCertificateResponseOutput() VpnClientRevokedCertificateResponseOutput {
	return i.ToVpnClientRevokedCertificateResponseOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateResponseArgs) ToVpnClientRevokedCertificateResponseOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateResponseOutput)
}

// VpnClientRevokedCertificateResponseArrayInput is an input type that accepts VpnClientRevokedCertificateResponseArray and VpnClientRevokedCertificateResponseArrayOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateResponseArrayInput` via:
//
//          VpnClientRevokedCertificateResponseArray{ VpnClientRevokedCertificateResponseArgs{...} }
type VpnClientRevokedCertificateResponseArrayInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateResponseArrayOutput() VpnClientRevokedCertificateResponseArrayOutput
	ToVpnClientRevokedCertificateResponseArrayOutputWithContext(context.Context) VpnClientRevokedCertificateResponseArrayOutput
}

type VpnClientRevokedCertificateResponseArray []VpnClientRevokedCertificateResponseInput

func (VpnClientRevokedCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (i VpnClientRevokedCertificateResponseArray) ToVpnClientRevokedCertificateResponseArrayOutput() VpnClientRevokedCertificateResponseArrayOutput {
	return i.ToVpnClientRevokedCertificateResponseArrayOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateResponseArray) ToVpnClientRevokedCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateResponseArrayOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o VpnClientRevokedCertificateResponseOutput) ToVpnClientRevokedCertificateResponseOutput() VpnClientRevokedCertificateResponseOutput {
	return o
}

func (o VpnClientRevokedCertificateResponseOutput) ToVpnClientRevokedCertificateResponseOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRevokedCertificateResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VpnClientRevokedCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRevokedCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN client revoked certificate resource.
func (o VpnClientRevokedCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnClientRevokedCertificateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnClientRevokedCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o VpnClientRevokedCertificateResponseArrayOutput) ToVpnClientRevokedCertificateResponseArrayOutput() VpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateResponseArrayOutput) ToVpnClientRevokedCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnClientRevokedCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRevokedCertificateResponse {
		return vs[0].([]VpnClientRevokedCertificateResponse)[vs[1].(int)]
	}).(VpnClientRevokedCertificateResponseOutput)
}

// VPN client root certificate of virtual network gateway.
type VpnClientRootCertificate struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// VpnClientRootCertificateInput is an input type that accepts VpnClientRootCertificateArgs and VpnClientRootCertificateOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateInput` via:
//
//          VpnClientRootCertificateArgs{...}
type VpnClientRootCertificateInput interface {
	pulumi.Input

	ToVpnClientRootCertificateOutput() VpnClientRootCertificateOutput
	ToVpnClientRootCertificateOutputWithContext(context.Context) VpnClientRootCertificateOutput
}

// VPN client root certificate of virtual network gateway.
type VpnClientRootCertificateArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The certificate public data.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (VpnClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificate)(nil)).Elem()
}

func (i VpnClientRootCertificateArgs) ToVpnClientRootCertificateOutput() VpnClientRootCertificateOutput {
	return i.ToVpnClientRootCertificateOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateArgs) ToVpnClientRootCertificateOutputWithContext(ctx context.Context) VpnClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateOutput)
}

// VpnClientRootCertificateArrayInput is an input type that accepts VpnClientRootCertificateArray and VpnClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateArrayInput` via:
//
//          VpnClientRootCertificateArray{ VpnClientRootCertificateArgs{...} }
type VpnClientRootCertificateArrayInput interface {
	pulumi.Input

	ToVpnClientRootCertificateArrayOutput() VpnClientRootCertificateArrayOutput
	ToVpnClientRootCertificateArrayOutputWithContext(context.Context) VpnClientRootCertificateArrayOutput
}

type VpnClientRootCertificateArray []VpnClientRootCertificateInput

func (VpnClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificate)(nil)).Elem()
}

func (i VpnClientRootCertificateArray) ToVpnClientRootCertificateArrayOutput() VpnClientRootCertificateArrayOutput {
	return i.ToVpnClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateArray) ToVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateArrayOutput)
}

// VPN client root certificate of virtual network gateway.
type VpnClientRootCertificateOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificate)(nil)).Elem()
}

func (o VpnClientRootCertificateOutput) ToVpnClientRootCertificateOutput() VpnClientRootCertificateOutput {
	return o
}

func (o VpnClientRootCertificateOutput) ToVpnClientRootCertificateOutputWithContext(ctx context.Context) VpnClientRootCertificateOutput {
	return o
}

// Resource ID.
func (o VpnClientRootCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o VpnClientRootCertificateOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type VpnClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificate)(nil)).Elem()
}

func (o VpnClientRootCertificateArrayOutput) ToVpnClientRootCertificateArrayOutput() VpnClientRootCertificateArrayOutput {
	return o
}

func (o VpnClientRootCertificateArrayOutput) ToVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateArrayOutput {
	return o
}

func (o VpnClientRootCertificateArrayOutput) Index(i pulumi.IntInput) VpnClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRootCertificate {
		return vs[0].([]VpnClientRootCertificate)[vs[1].(int)]
	}).(VpnClientRootCertificateOutput)
}

// VPN client root certificate of virtual network gateway.
type VpnClientRootCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN client root certificate resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// VpnClientRootCertificateResponseInput is an input type that accepts VpnClientRootCertificateResponseArgs and VpnClientRootCertificateResponseOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateResponseInput` via:
//
//          VpnClientRootCertificateResponseArgs{...}
type VpnClientRootCertificateResponseInput interface {
	pulumi.Input

	ToVpnClientRootCertificateResponseOutput() VpnClientRootCertificateResponseOutput
	ToVpnClientRootCertificateResponseOutputWithContext(context.Context) VpnClientRootCertificateResponseOutput
}

// VPN client root certificate of virtual network gateway.
type VpnClientRootCertificateResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the VPN client root certificate resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The certificate public data.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (VpnClientRootCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificateResponse)(nil)).Elem()
}

func (i VpnClientRootCertificateResponseArgs) ToVpnClientRootCertificateResponseOutput() VpnClientRootCertificateResponseOutput {
	return i.ToVpnClientRootCertificateResponseOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateResponseArgs) ToVpnClientRootCertificateResponseOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateResponseOutput)
}

// VpnClientRootCertificateResponseArrayInput is an input type that accepts VpnClientRootCertificateResponseArray and VpnClientRootCertificateResponseArrayOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateResponseArrayInput` via:
//
//          VpnClientRootCertificateResponseArray{ VpnClientRootCertificateResponseArgs{...} }
type VpnClientRootCertificateResponseArrayInput interface {
	pulumi.Input

	ToVpnClientRootCertificateResponseArrayOutput() VpnClientRootCertificateResponseArrayOutput
	ToVpnClientRootCertificateResponseArrayOutputWithContext(context.Context) VpnClientRootCertificateResponseArrayOutput
}

type VpnClientRootCertificateResponseArray []VpnClientRootCertificateResponseInput

func (VpnClientRootCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificateResponse)(nil)).Elem()
}

func (i VpnClientRootCertificateResponseArray) ToVpnClientRootCertificateResponseArrayOutput() VpnClientRootCertificateResponseArrayOutput {
	return i.ToVpnClientRootCertificateResponseArrayOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateResponseArray) ToVpnClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateResponseArrayOutput)
}

// VPN client root certificate of virtual network gateway.
type VpnClientRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnClientRootCertificateResponseOutput) ToVpnClientRootCertificateResponseOutput() VpnClientRootCertificateResponseOutput {
	return o
}

func (o VpnClientRootCertificateResponseOutput) ToVpnClientRootCertificateResponseOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRootCertificateResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VpnClientRootCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN client root certificate resource.
func (o VpnClientRootCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The certificate public data.
func (o VpnClientRootCertificateResponseOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type VpnClientRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnClientRootCertificateResponseArrayOutput) ToVpnClientRootCertificateResponseArrayOutput() VpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRootCertificateResponseArrayOutput) ToVpnClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnClientRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRootCertificateResponse {
		return vs[0].([]VpnClientRootCertificateResponse)[vs[1].(int)]
	}).(VpnClientRootCertificateResponseOutput)
}

// VpnConnection Resource.
type VpnConnectionType struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth *int `pulumi:"connectionBandwidth"`
	// DPD timeout in seconds for vpn connection.
	DpdTimeoutSeconds *int `pulumi:"dpdTimeoutSeconds"`
	// EnableBgp flag.
	EnableBgp *bool `pulumi:"enableBgp"`
	// Enable internet security.
	EnableInternetSecurity *bool `pulumi:"enableInternetSecurity"`
	// EnableBgp flag.
	EnableRateLimiting *bool `pulumi:"enableRateLimiting"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies []IpsecPolicy `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Id of the connected vpn site.
	RemoteVpnSite *SubResource `pulumi:"remoteVpnSite"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration *RoutingConfiguration `pulumi:"routingConfiguration"`
	// Routing weight for vpn connection.
	RoutingWeight *int `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey *string `pulumi:"sharedKey"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress *bool `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors *bool `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType *string `pulumi:"vpnConnectionProtocolType"`
	// List of all vpn site link connections to the gateway.
	VpnLinkConnections []VpnSiteLinkConnection `pulumi:"vpnLinkConnections"`
}

// VpnConnectionTypeInput is an input type that accepts VpnConnectionTypeArgs and VpnConnectionTypeOutput values.
// You can construct a concrete instance of `VpnConnectionTypeInput` via:
//
//          VpnConnectionTypeArgs{...}
type VpnConnectionTypeInput interface {
	pulumi.Input

	ToVpnConnectionTypeOutput() VpnConnectionTypeOutput
	ToVpnConnectionTypeOutputWithContext(context.Context) VpnConnectionTypeOutput
}

// VpnConnection Resource.
type VpnConnectionTypeArgs struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth pulumi.IntPtrInput `pulumi:"connectionBandwidth"`
	// DPD timeout in seconds for vpn connection.
	DpdTimeoutSeconds pulumi.IntPtrInput `pulumi:"dpdTimeoutSeconds"`
	// EnableBgp flag.
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// Enable internet security.
	EnableInternetSecurity pulumi.BoolPtrInput `pulumi:"enableInternetSecurity"`
	// EnableBgp flag.
	EnableRateLimiting pulumi.BoolPtrInput `pulumi:"enableRateLimiting"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies IpsecPolicyArrayInput `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Id of the connected vpn site.
	RemoteVpnSite SubResourcePtrInput `pulumi:"remoteVpnSite"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration RoutingConfigurationPtrInput `pulumi:"routingConfiguration"`
	// Routing weight for vpn connection.
	RoutingWeight pulumi.IntPtrInput `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress pulumi.BoolPtrInput `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors pulumi.BoolPtrInput `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType pulumi.StringPtrInput `pulumi:"vpnConnectionProtocolType"`
	// List of all vpn site link connections to the gateway.
	VpnLinkConnections VpnSiteLinkConnectionArrayInput `pulumi:"vpnLinkConnections"`
}

func (VpnConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionType)(nil)).Elem()
}

func (i VpnConnectionTypeArgs) ToVpnConnectionTypeOutput() VpnConnectionTypeOutput {
	return i.ToVpnConnectionTypeOutputWithContext(context.Background())
}

func (i VpnConnectionTypeArgs) ToVpnConnectionTypeOutputWithContext(ctx context.Context) VpnConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionTypeOutput)
}

// VpnConnectionTypeArrayInput is an input type that accepts VpnConnectionTypeArray and VpnConnectionTypeArrayOutput values.
// You can construct a concrete instance of `VpnConnectionTypeArrayInput` via:
//
//          VpnConnectionTypeArray{ VpnConnectionTypeArgs{...} }
type VpnConnectionTypeArrayInput interface {
	pulumi.Input

	ToVpnConnectionTypeArrayOutput() VpnConnectionTypeArrayOutput
	ToVpnConnectionTypeArrayOutputWithContext(context.Context) VpnConnectionTypeArrayOutput
}

type VpnConnectionTypeArray []VpnConnectionTypeInput

func (VpnConnectionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionType)(nil)).Elem()
}

func (i VpnConnectionTypeArray) ToVpnConnectionTypeArrayOutput() VpnConnectionTypeArrayOutput {
	return i.ToVpnConnectionTypeArrayOutputWithContext(context.Background())
}

func (i VpnConnectionTypeArray) ToVpnConnectionTypeArrayOutputWithContext(ctx context.Context) VpnConnectionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionTypeArrayOutput)
}

// VpnConnection Resource.
type VpnConnectionTypeOutput struct{ *pulumi.OutputState }

func (VpnConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionType)(nil)).Elem()
}

func (o VpnConnectionTypeOutput) ToVpnConnectionTypeOutput() VpnConnectionTypeOutput {
	return o
}

func (o VpnConnectionTypeOutput) ToVpnConnectionTypeOutputWithContext(ctx context.Context) VpnConnectionTypeOutput {
	return o
}

// Expected bandwidth in MBPS.
func (o VpnConnectionTypeOutput) ConnectionBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *int { return v.ConnectionBandwidth }).(pulumi.IntPtrOutput)
}

// DPD timeout in seconds for vpn connection.
func (o VpnConnectionTypeOutput) DpdTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *int { return v.DpdTimeoutSeconds }).(pulumi.IntPtrOutput)
}

// EnableBgp flag.
func (o VpnConnectionTypeOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Enable internet security.
func (o VpnConnectionTypeOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *bool { return v.EnableInternetSecurity }).(pulumi.BoolPtrOutput)
}

// EnableBgp flag.
func (o VpnConnectionTypeOutput) EnableRateLimiting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *bool { return v.EnableRateLimiting }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o VpnConnectionTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VpnConnectionTypeOutput) IpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v VpnConnectionType) []IpsecPolicy { return v.IpsecPolicies }).(IpsecPolicyArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnConnectionTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Id of the connected vpn site.
func (o VpnConnectionTypeOutput) RemoteVpnSite() SubResourcePtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *SubResource { return v.RemoteVpnSite }).(SubResourcePtrOutput)
}

// The Routing Configuration indicating the associated and propagated route tables on this connection.
func (o VpnConnectionTypeOutput) RoutingConfiguration() RoutingConfigurationPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *RoutingConfiguration { return v.RoutingConfiguration }).(RoutingConfigurationPtrOutput)
}

// Routing weight for vpn connection.
func (o VpnConnectionTypeOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

// SharedKey for the vpn connection.
func (o VpnConnectionTypeOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// Use local azure ip to initiate connection.
func (o VpnConnectionTypeOutput) UseLocalAzureIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *bool { return v.UseLocalAzureIpAddress }).(pulumi.BoolPtrOutput)
}

// Enable policy-based traffic selectors.
func (o VpnConnectionTypeOutput) UsePolicyBasedTrafficSelectors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *bool { return v.UsePolicyBasedTrafficSelectors }).(pulumi.BoolPtrOutput)
}

// Connection protocol used for this connection.
func (o VpnConnectionTypeOutput) VpnConnectionProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *string { return v.VpnConnectionProtocolType }).(pulumi.StringPtrOutput)
}

// List of all vpn site link connections to the gateway.
func (o VpnConnectionTypeOutput) VpnLinkConnections() VpnSiteLinkConnectionArrayOutput {
	return o.ApplyT(func(v VpnConnectionType) []VpnSiteLinkConnection { return v.VpnLinkConnections }).(VpnSiteLinkConnectionArrayOutput)
}

type VpnConnectionTypeArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionType)(nil)).Elem()
}

func (o VpnConnectionTypeArrayOutput) ToVpnConnectionTypeArrayOutput() VpnConnectionTypeArrayOutput {
	return o
}

func (o VpnConnectionTypeArrayOutput) ToVpnConnectionTypeArrayOutputWithContext(ctx context.Context) VpnConnectionTypeArrayOutput {
	return o
}

func (o VpnConnectionTypeArrayOutput) Index(i pulumi.IntInput) VpnConnectionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionType {
		return vs[0].([]VpnConnectionType)[vs[1].(int)]
	}).(VpnConnectionTypeOutput)
}

// VpnConnection Resource.
type VpnConnectionResponse struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth *int `pulumi:"connectionBandwidth"`
	// The connection status.
	ConnectionStatus string `pulumi:"connectionStatus"`
	// DPD timeout in seconds for vpn connection.
	DpdTimeoutSeconds *int `pulumi:"dpdTimeoutSeconds"`
	// Egress bytes transferred.
	EgressBytesTransferred int `pulumi:"egressBytesTransferred"`
	// EnableBgp flag.
	EnableBgp *bool `pulumi:"enableBgp"`
	// Enable internet security.
	EnableInternetSecurity *bool `pulumi:"enableInternetSecurity"`
	// EnableBgp flag.
	EnableRateLimiting *bool `pulumi:"enableRateLimiting"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Ingress bytes transferred.
	IngressBytesTransferred int `pulumi:"ingressBytesTransferred"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies []IpsecPolicyResponse `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Id of the connected vpn site.
	RemoteVpnSite *SubResourceResponse `pulumi:"remoteVpnSite"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration *RoutingConfigurationResponse `pulumi:"routingConfiguration"`
	// Routing weight for vpn connection.
	RoutingWeight *int `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey *string `pulumi:"sharedKey"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress *bool `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors *bool `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType *string `pulumi:"vpnConnectionProtocolType"`
	// List of all vpn site link connections to the gateway.
	VpnLinkConnections []VpnSiteLinkConnectionResponse `pulumi:"vpnLinkConnections"`
}

// VpnConnectionResponseInput is an input type that accepts VpnConnectionResponseArgs and VpnConnectionResponseOutput values.
// You can construct a concrete instance of `VpnConnectionResponseInput` via:
//
//          VpnConnectionResponseArgs{...}
type VpnConnectionResponseInput interface {
	pulumi.Input

	ToVpnConnectionResponseOutput() VpnConnectionResponseOutput
	ToVpnConnectionResponseOutputWithContext(context.Context) VpnConnectionResponseOutput
}

// VpnConnection Resource.
type VpnConnectionResponseArgs struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth pulumi.IntPtrInput `pulumi:"connectionBandwidth"`
	// The connection status.
	ConnectionStatus pulumi.StringInput `pulumi:"connectionStatus"`
	// DPD timeout in seconds for vpn connection.
	DpdTimeoutSeconds pulumi.IntPtrInput `pulumi:"dpdTimeoutSeconds"`
	// Egress bytes transferred.
	EgressBytesTransferred pulumi.IntInput `pulumi:"egressBytesTransferred"`
	// EnableBgp flag.
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// Enable internet security.
	EnableInternetSecurity pulumi.BoolPtrInput `pulumi:"enableInternetSecurity"`
	// EnableBgp flag.
	EnableRateLimiting pulumi.BoolPtrInput `pulumi:"enableRateLimiting"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Ingress bytes transferred.
	IngressBytesTransferred pulumi.IntInput `pulumi:"ingressBytesTransferred"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies IpsecPolicyResponseArrayInput `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the VPN connection resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Id of the connected vpn site.
	RemoteVpnSite SubResourceResponsePtrInput `pulumi:"remoteVpnSite"`
	// The Routing Configuration indicating the associated and propagated route tables on this connection.
	RoutingConfiguration RoutingConfigurationResponsePtrInput `pulumi:"routingConfiguration"`
	// Routing weight for vpn connection.
	RoutingWeight pulumi.IntPtrInput `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress pulumi.BoolPtrInput `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors pulumi.BoolPtrInput `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType pulumi.StringPtrInput `pulumi:"vpnConnectionProtocolType"`
	// List of all vpn site link connections to the gateway.
	VpnLinkConnections VpnSiteLinkConnectionResponseArrayInput `pulumi:"vpnLinkConnections"`
}

func (VpnConnectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionResponse)(nil)).Elem()
}

func (i VpnConnectionResponseArgs) ToVpnConnectionResponseOutput() VpnConnectionResponseOutput {
	return i.ToVpnConnectionResponseOutputWithContext(context.Background())
}

func (i VpnConnectionResponseArgs) ToVpnConnectionResponseOutputWithContext(ctx context.Context) VpnConnectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionResponseOutput)
}

// VpnConnectionResponseArrayInput is an input type that accepts VpnConnectionResponseArray and VpnConnectionResponseArrayOutput values.
// You can construct a concrete instance of `VpnConnectionResponseArrayInput` via:
//
//          VpnConnectionResponseArray{ VpnConnectionResponseArgs{...} }
type VpnConnectionResponseArrayInput interface {
	pulumi.Input

	ToVpnConnectionResponseArrayOutput() VpnConnectionResponseArrayOutput
	ToVpnConnectionResponseArrayOutputWithContext(context.Context) VpnConnectionResponseArrayOutput
}

type VpnConnectionResponseArray []VpnConnectionResponseInput

func (VpnConnectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionResponse)(nil)).Elem()
}

func (i VpnConnectionResponseArray) ToVpnConnectionResponseArrayOutput() VpnConnectionResponseArrayOutput {
	return i.ToVpnConnectionResponseArrayOutputWithContext(context.Background())
}

func (i VpnConnectionResponseArray) ToVpnConnectionResponseArrayOutputWithContext(ctx context.Context) VpnConnectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionResponseArrayOutput)
}

// VpnConnection Resource.
type VpnConnectionResponseOutput struct{ *pulumi.OutputState }

func (VpnConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionResponse)(nil)).Elem()
}

func (o VpnConnectionResponseOutput) ToVpnConnectionResponseOutput() VpnConnectionResponseOutput {
	return o
}

func (o VpnConnectionResponseOutput) ToVpnConnectionResponseOutputWithContext(ctx context.Context) VpnConnectionResponseOutput {
	return o
}

// Expected bandwidth in MBPS.
func (o VpnConnectionResponseOutput) ConnectionBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *int { return v.ConnectionBandwidth }).(pulumi.IntPtrOutput)
}

// The connection status.
func (o VpnConnectionResponseOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionResponse) string { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// DPD timeout in seconds for vpn connection.
func (o VpnConnectionResponseOutput) DpdTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *int { return v.DpdTimeoutSeconds }).(pulumi.IntPtrOutput)
}

// Egress bytes transferred.
func (o VpnConnectionResponseOutput) EgressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v VpnConnectionResponse) int { return v.EgressBytesTransferred }).(pulumi.IntOutput)
}

// EnableBgp flag.
func (o VpnConnectionResponseOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Enable internet security.
func (o VpnConnectionResponseOutput) EnableInternetSecurity() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *bool { return v.EnableInternetSecurity }).(pulumi.BoolPtrOutput)
}

// EnableBgp flag.
func (o VpnConnectionResponseOutput) EnableRateLimiting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *bool { return v.EnableRateLimiting }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VpnConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Ingress bytes transferred.
func (o VpnConnectionResponseOutput) IngressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v VpnConnectionResponse) int { return v.IngressBytesTransferred }).(pulumi.IntOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VpnConnectionResponseOutput) IpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v VpnConnectionResponse) []IpsecPolicyResponse { return v.IpsecPolicies }).(IpsecPolicyResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN connection resource.
func (o VpnConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Id of the connected vpn site.
func (o VpnConnectionResponseOutput) RemoteVpnSite() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *SubResourceResponse { return v.RemoteVpnSite }).(SubResourceResponsePtrOutput)
}

// The Routing Configuration indicating the associated and propagated route tables on this connection.
func (o VpnConnectionResponseOutput) RoutingConfiguration() RoutingConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *RoutingConfigurationResponse { return v.RoutingConfiguration }).(RoutingConfigurationResponsePtrOutput)
}

// Routing weight for vpn connection.
func (o VpnConnectionResponseOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

// SharedKey for the vpn connection.
func (o VpnConnectionResponseOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// Use local azure ip to initiate connection.
func (o VpnConnectionResponseOutput) UseLocalAzureIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *bool { return v.UseLocalAzureIpAddress }).(pulumi.BoolPtrOutput)
}

// Enable policy-based traffic selectors.
func (o VpnConnectionResponseOutput) UsePolicyBasedTrafficSelectors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *bool { return v.UsePolicyBasedTrafficSelectors }).(pulumi.BoolPtrOutput)
}

// Connection protocol used for this connection.
func (o VpnConnectionResponseOutput) VpnConnectionProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *string { return v.VpnConnectionProtocolType }).(pulumi.StringPtrOutput)
}

// List of all vpn site link connections to the gateway.
func (o VpnConnectionResponseOutput) VpnLinkConnections() VpnSiteLinkConnectionResponseArrayOutput {
	return o.ApplyT(func(v VpnConnectionResponse) []VpnSiteLinkConnectionResponse { return v.VpnLinkConnections }).(VpnSiteLinkConnectionResponseArrayOutput)
}

type VpnConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionResponse)(nil)).Elem()
}

func (o VpnConnectionResponseArrayOutput) ToVpnConnectionResponseArrayOutput() VpnConnectionResponseArrayOutput {
	return o
}

func (o VpnConnectionResponseArrayOutput) ToVpnConnectionResponseArrayOutputWithContext(ctx context.Context) VpnConnectionResponseArrayOutput {
	return o
}

func (o VpnConnectionResponseArrayOutput) Index(i pulumi.IntInput) VpnConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionResponse {
		return vs[0].([]VpnConnectionResponse)[vs[1].(int)]
	}).(VpnConnectionResponseOutput)
}

// IP Configuration of a VPN Gateway Resource.
type VpnGatewayIpConfigurationResponse struct {
	// The identifier of the IP configuration for a VPN Gateway.
	Id *string `pulumi:"id"`
	// The private IP address of this IP configuration.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
	// The public IP address of this IP configuration.
	PublicIpAddress *string `pulumi:"publicIpAddress"`
}

// VpnGatewayIpConfigurationResponseInput is an input type that accepts VpnGatewayIpConfigurationResponseArgs and VpnGatewayIpConfigurationResponseOutput values.
// You can construct a concrete instance of `VpnGatewayIpConfigurationResponseInput` via:
//
//          VpnGatewayIpConfigurationResponseArgs{...}
type VpnGatewayIpConfigurationResponseInput interface {
	pulumi.Input

	ToVpnGatewayIpConfigurationResponseOutput() VpnGatewayIpConfigurationResponseOutput
	ToVpnGatewayIpConfigurationResponseOutputWithContext(context.Context) VpnGatewayIpConfigurationResponseOutput
}

// IP Configuration of a VPN Gateway Resource.
type VpnGatewayIpConfigurationResponseArgs struct {
	// The identifier of the IP configuration for a VPN Gateway.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The private IP address of this IP configuration.
	PrivateIpAddress pulumi.StringPtrInput `pulumi:"privateIpAddress"`
	// The public IP address of this IP configuration.
	PublicIpAddress pulumi.StringPtrInput `pulumi:"publicIpAddress"`
}

func (VpnGatewayIpConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayIpConfigurationResponse)(nil)).Elem()
}

func (i VpnGatewayIpConfigurationResponseArgs) ToVpnGatewayIpConfigurationResponseOutput() VpnGatewayIpConfigurationResponseOutput {
	return i.ToVpnGatewayIpConfigurationResponseOutputWithContext(context.Background())
}

func (i VpnGatewayIpConfigurationResponseArgs) ToVpnGatewayIpConfigurationResponseOutputWithContext(ctx context.Context) VpnGatewayIpConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayIpConfigurationResponseOutput)
}

// VpnGatewayIpConfigurationResponseArrayInput is an input type that accepts VpnGatewayIpConfigurationResponseArray and VpnGatewayIpConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `VpnGatewayIpConfigurationResponseArrayInput` via:
//
//          VpnGatewayIpConfigurationResponseArray{ VpnGatewayIpConfigurationResponseArgs{...} }
type VpnGatewayIpConfigurationResponseArrayInput interface {
	pulumi.Input

	ToVpnGatewayIpConfigurationResponseArrayOutput() VpnGatewayIpConfigurationResponseArrayOutput
	ToVpnGatewayIpConfigurationResponseArrayOutputWithContext(context.Context) VpnGatewayIpConfigurationResponseArrayOutput
}

type VpnGatewayIpConfigurationResponseArray []VpnGatewayIpConfigurationResponseInput

func (VpnGatewayIpConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayIpConfigurationResponse)(nil)).Elem()
}

func (i VpnGatewayIpConfigurationResponseArray) ToVpnGatewayIpConfigurationResponseArrayOutput() VpnGatewayIpConfigurationResponseArrayOutput {
	return i.ToVpnGatewayIpConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i VpnGatewayIpConfigurationResponseArray) ToVpnGatewayIpConfigurationResponseArrayOutputWithContext(ctx context.Context) VpnGatewayIpConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayIpConfigurationResponseArrayOutput)
}

// IP Configuration of a VPN Gateway Resource.
type VpnGatewayIpConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VpnGatewayIpConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnGatewayIpConfigurationResponse)(nil)).Elem()
}

func (o VpnGatewayIpConfigurationResponseOutput) ToVpnGatewayIpConfigurationResponseOutput() VpnGatewayIpConfigurationResponseOutput {
	return o
}

func (o VpnGatewayIpConfigurationResponseOutput) ToVpnGatewayIpConfigurationResponseOutputWithContext(ctx context.Context) VpnGatewayIpConfigurationResponseOutput {
	return o
}

// The identifier of the IP configuration for a VPN Gateway.
func (o VpnGatewayIpConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayIpConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The private IP address of this IP configuration.
func (o VpnGatewayIpConfigurationResponseOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayIpConfigurationResponse) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

// The public IP address of this IP configuration.
func (o VpnGatewayIpConfigurationResponseOutput) PublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnGatewayIpConfigurationResponse) *string { return v.PublicIpAddress }).(pulumi.StringPtrOutput)
}

type VpnGatewayIpConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnGatewayIpConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnGatewayIpConfigurationResponse)(nil)).Elem()
}

func (o VpnGatewayIpConfigurationResponseArrayOutput) ToVpnGatewayIpConfigurationResponseArrayOutput() VpnGatewayIpConfigurationResponseArrayOutput {
	return o
}

func (o VpnGatewayIpConfigurationResponseArrayOutput) ToVpnGatewayIpConfigurationResponseArrayOutputWithContext(ctx context.Context) VpnGatewayIpConfigurationResponseArrayOutput {
	return o
}

func (o VpnGatewayIpConfigurationResponseArrayOutput) Index(i pulumi.IntInput) VpnGatewayIpConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnGatewayIpConfigurationResponse {
		return vs[0].([]VpnGatewayIpConfigurationResponse)[vs[1].(int)]
	}).(VpnGatewayIpConfigurationResponseOutput)
}

// BGP settings details for a link.
type VpnLinkBgpSettings struct {
	// The BGP speaker's ASN.
	Asn *int `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress *string `pulumi:"bgpPeeringAddress"`
}

// VpnLinkBgpSettingsInput is an input type that accepts VpnLinkBgpSettingsArgs and VpnLinkBgpSettingsOutput values.
// You can construct a concrete instance of `VpnLinkBgpSettingsInput` via:
//
//          VpnLinkBgpSettingsArgs{...}
type VpnLinkBgpSettingsInput interface {
	pulumi.Input

	ToVpnLinkBgpSettingsOutput() VpnLinkBgpSettingsOutput
	ToVpnLinkBgpSettingsOutputWithContext(context.Context) VpnLinkBgpSettingsOutput
}

// BGP settings details for a link.
type VpnLinkBgpSettingsArgs struct {
	// The BGP speaker's ASN.
	Asn pulumi.IntPtrInput `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress pulumi.StringPtrInput `pulumi:"bgpPeeringAddress"`
}

func (VpnLinkBgpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkBgpSettings)(nil)).Elem()
}

func (i VpnLinkBgpSettingsArgs) ToVpnLinkBgpSettingsOutput() VpnLinkBgpSettingsOutput {
	return i.ToVpnLinkBgpSettingsOutputWithContext(context.Background())
}

func (i VpnLinkBgpSettingsArgs) ToVpnLinkBgpSettingsOutputWithContext(ctx context.Context) VpnLinkBgpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkBgpSettingsOutput)
}

func (i VpnLinkBgpSettingsArgs) ToVpnLinkBgpSettingsPtrOutput() VpnLinkBgpSettingsPtrOutput {
	return i.ToVpnLinkBgpSettingsPtrOutputWithContext(context.Background())
}

func (i VpnLinkBgpSettingsArgs) ToVpnLinkBgpSettingsPtrOutputWithContext(ctx context.Context) VpnLinkBgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkBgpSettingsOutput).ToVpnLinkBgpSettingsPtrOutputWithContext(ctx)
}

// VpnLinkBgpSettingsPtrInput is an input type that accepts VpnLinkBgpSettingsArgs, VpnLinkBgpSettingsPtr and VpnLinkBgpSettingsPtrOutput values.
// You can construct a concrete instance of `VpnLinkBgpSettingsPtrInput` via:
//
//          VpnLinkBgpSettingsArgs{...}
//
//  or:
//
//          nil
type VpnLinkBgpSettingsPtrInput interface {
	pulumi.Input

	ToVpnLinkBgpSettingsPtrOutput() VpnLinkBgpSettingsPtrOutput
	ToVpnLinkBgpSettingsPtrOutputWithContext(context.Context) VpnLinkBgpSettingsPtrOutput
}

type vpnLinkBgpSettingsPtrType VpnLinkBgpSettingsArgs

func VpnLinkBgpSettingsPtr(v *VpnLinkBgpSettingsArgs) VpnLinkBgpSettingsPtrInput {
	return (*vpnLinkBgpSettingsPtrType)(v)
}

func (*vpnLinkBgpSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkBgpSettings)(nil)).Elem()
}

func (i *vpnLinkBgpSettingsPtrType) ToVpnLinkBgpSettingsPtrOutput() VpnLinkBgpSettingsPtrOutput {
	return i.ToVpnLinkBgpSettingsPtrOutputWithContext(context.Background())
}

func (i *vpnLinkBgpSettingsPtrType) ToVpnLinkBgpSettingsPtrOutputWithContext(ctx context.Context) VpnLinkBgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkBgpSettingsPtrOutput)
}

// BGP settings details for a link.
type VpnLinkBgpSettingsOutput struct{ *pulumi.OutputState }

func (VpnLinkBgpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkBgpSettings)(nil)).Elem()
}

func (o VpnLinkBgpSettingsOutput) ToVpnLinkBgpSettingsOutput() VpnLinkBgpSettingsOutput {
	return o
}

func (o VpnLinkBgpSettingsOutput) ToVpnLinkBgpSettingsOutputWithContext(ctx context.Context) VpnLinkBgpSettingsOutput {
	return o
}

func (o VpnLinkBgpSettingsOutput) ToVpnLinkBgpSettingsPtrOutput() VpnLinkBgpSettingsPtrOutput {
	return o.ToVpnLinkBgpSettingsPtrOutputWithContext(context.Background())
}

func (o VpnLinkBgpSettingsOutput) ToVpnLinkBgpSettingsPtrOutputWithContext(ctx context.Context) VpnLinkBgpSettingsPtrOutput {
	return o.ApplyT(func(v VpnLinkBgpSettings) *VpnLinkBgpSettings {
		return &v
	}).(VpnLinkBgpSettingsPtrOutput)
}

// The BGP speaker's ASN.
func (o VpnLinkBgpSettingsOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnLinkBgpSettings) *int { return v.Asn }).(pulumi.IntPtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o VpnLinkBgpSettingsOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnLinkBgpSettings) *string { return v.BgpPeeringAddress }).(pulumi.StringPtrOutput)
}

type VpnLinkBgpSettingsPtrOutput struct{ *pulumi.OutputState }

func (VpnLinkBgpSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkBgpSettings)(nil)).Elem()
}

func (o VpnLinkBgpSettingsPtrOutput) ToVpnLinkBgpSettingsPtrOutput() VpnLinkBgpSettingsPtrOutput {
	return o
}

func (o VpnLinkBgpSettingsPtrOutput) ToVpnLinkBgpSettingsPtrOutputWithContext(ctx context.Context) VpnLinkBgpSettingsPtrOutput {
	return o
}

func (o VpnLinkBgpSettingsPtrOutput) Elem() VpnLinkBgpSettingsOutput {
	return o.ApplyT(func(v *VpnLinkBgpSettings) VpnLinkBgpSettings { return *v }).(VpnLinkBgpSettingsOutput)
}

// The BGP speaker's ASN.
func (o VpnLinkBgpSettingsPtrOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnLinkBgpSettings) *int {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.IntPtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o VpnLinkBgpSettingsPtrOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnLinkBgpSettings) *string {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddress
	}).(pulumi.StringPtrOutput)
}

// BGP settings details for a link.
type VpnLinkBgpSettingsResponse struct {
	// The BGP speaker's ASN.
	Asn *int `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress *string `pulumi:"bgpPeeringAddress"`
}

// VpnLinkBgpSettingsResponseInput is an input type that accepts VpnLinkBgpSettingsResponseArgs and VpnLinkBgpSettingsResponseOutput values.
// You can construct a concrete instance of `VpnLinkBgpSettingsResponseInput` via:
//
//          VpnLinkBgpSettingsResponseArgs{...}
type VpnLinkBgpSettingsResponseInput interface {
	pulumi.Input

	ToVpnLinkBgpSettingsResponseOutput() VpnLinkBgpSettingsResponseOutput
	ToVpnLinkBgpSettingsResponseOutputWithContext(context.Context) VpnLinkBgpSettingsResponseOutput
}

// BGP settings details for a link.
type VpnLinkBgpSettingsResponseArgs struct {
	// The BGP speaker's ASN.
	Asn pulumi.IntPtrInput `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress pulumi.StringPtrInput `pulumi:"bgpPeeringAddress"`
}

func (VpnLinkBgpSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkBgpSettingsResponse)(nil)).Elem()
}

func (i VpnLinkBgpSettingsResponseArgs) ToVpnLinkBgpSettingsResponseOutput() VpnLinkBgpSettingsResponseOutput {
	return i.ToVpnLinkBgpSettingsResponseOutputWithContext(context.Background())
}

func (i VpnLinkBgpSettingsResponseArgs) ToVpnLinkBgpSettingsResponseOutputWithContext(ctx context.Context) VpnLinkBgpSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkBgpSettingsResponseOutput)
}

func (i VpnLinkBgpSettingsResponseArgs) ToVpnLinkBgpSettingsResponsePtrOutput() VpnLinkBgpSettingsResponsePtrOutput {
	return i.ToVpnLinkBgpSettingsResponsePtrOutputWithContext(context.Background())
}

func (i VpnLinkBgpSettingsResponseArgs) ToVpnLinkBgpSettingsResponsePtrOutputWithContext(ctx context.Context) VpnLinkBgpSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkBgpSettingsResponseOutput).ToVpnLinkBgpSettingsResponsePtrOutputWithContext(ctx)
}

// VpnLinkBgpSettingsResponsePtrInput is an input type that accepts VpnLinkBgpSettingsResponseArgs, VpnLinkBgpSettingsResponsePtr and VpnLinkBgpSettingsResponsePtrOutput values.
// You can construct a concrete instance of `VpnLinkBgpSettingsResponsePtrInput` via:
//
//          VpnLinkBgpSettingsResponseArgs{...}
//
//  or:
//
//          nil
type VpnLinkBgpSettingsResponsePtrInput interface {
	pulumi.Input

	ToVpnLinkBgpSettingsResponsePtrOutput() VpnLinkBgpSettingsResponsePtrOutput
	ToVpnLinkBgpSettingsResponsePtrOutputWithContext(context.Context) VpnLinkBgpSettingsResponsePtrOutput
}

type vpnLinkBgpSettingsResponsePtrType VpnLinkBgpSettingsResponseArgs

func VpnLinkBgpSettingsResponsePtr(v *VpnLinkBgpSettingsResponseArgs) VpnLinkBgpSettingsResponsePtrInput {
	return (*vpnLinkBgpSettingsResponsePtrType)(v)
}

func (*vpnLinkBgpSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkBgpSettingsResponse)(nil)).Elem()
}

func (i *vpnLinkBgpSettingsResponsePtrType) ToVpnLinkBgpSettingsResponsePtrOutput() VpnLinkBgpSettingsResponsePtrOutput {
	return i.ToVpnLinkBgpSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *vpnLinkBgpSettingsResponsePtrType) ToVpnLinkBgpSettingsResponsePtrOutputWithContext(ctx context.Context) VpnLinkBgpSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkBgpSettingsResponsePtrOutput)
}

// BGP settings details for a link.
type VpnLinkBgpSettingsResponseOutput struct{ *pulumi.OutputState }

func (VpnLinkBgpSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkBgpSettingsResponse)(nil)).Elem()
}

func (o VpnLinkBgpSettingsResponseOutput) ToVpnLinkBgpSettingsResponseOutput() VpnLinkBgpSettingsResponseOutput {
	return o
}

func (o VpnLinkBgpSettingsResponseOutput) ToVpnLinkBgpSettingsResponseOutputWithContext(ctx context.Context) VpnLinkBgpSettingsResponseOutput {
	return o
}

func (o VpnLinkBgpSettingsResponseOutput) ToVpnLinkBgpSettingsResponsePtrOutput() VpnLinkBgpSettingsResponsePtrOutput {
	return o.ToVpnLinkBgpSettingsResponsePtrOutputWithContext(context.Background())
}

func (o VpnLinkBgpSettingsResponseOutput) ToVpnLinkBgpSettingsResponsePtrOutputWithContext(ctx context.Context) VpnLinkBgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v VpnLinkBgpSettingsResponse) *VpnLinkBgpSettingsResponse {
		return &v
	}).(VpnLinkBgpSettingsResponsePtrOutput)
}

// The BGP speaker's ASN.
func (o VpnLinkBgpSettingsResponseOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnLinkBgpSettingsResponse) *int { return v.Asn }).(pulumi.IntPtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o VpnLinkBgpSettingsResponseOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnLinkBgpSettingsResponse) *string { return v.BgpPeeringAddress }).(pulumi.StringPtrOutput)
}

type VpnLinkBgpSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (VpnLinkBgpSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkBgpSettingsResponse)(nil)).Elem()
}

func (o VpnLinkBgpSettingsResponsePtrOutput) ToVpnLinkBgpSettingsResponsePtrOutput() VpnLinkBgpSettingsResponsePtrOutput {
	return o
}

func (o VpnLinkBgpSettingsResponsePtrOutput) ToVpnLinkBgpSettingsResponsePtrOutputWithContext(ctx context.Context) VpnLinkBgpSettingsResponsePtrOutput {
	return o
}

func (o VpnLinkBgpSettingsResponsePtrOutput) Elem() VpnLinkBgpSettingsResponseOutput {
	return o.ApplyT(func(v *VpnLinkBgpSettingsResponse) VpnLinkBgpSettingsResponse { return *v }).(VpnLinkBgpSettingsResponseOutput)
}

// The BGP speaker's ASN.
func (o VpnLinkBgpSettingsResponsePtrOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnLinkBgpSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.IntPtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o VpnLinkBgpSettingsResponsePtrOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnLinkBgpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddress
	}).(pulumi.StringPtrOutput)
}

// List of properties of a link provider.
type VpnLinkProviderProperties struct {
	// Name of the link provider.
	LinkProviderName *string `pulumi:"linkProviderName"`
	// Link speed.
	LinkSpeedInMbps *int `pulumi:"linkSpeedInMbps"`
}

// VpnLinkProviderPropertiesInput is an input type that accepts VpnLinkProviderPropertiesArgs and VpnLinkProviderPropertiesOutput values.
// You can construct a concrete instance of `VpnLinkProviderPropertiesInput` via:
//
//          VpnLinkProviderPropertiesArgs{...}
type VpnLinkProviderPropertiesInput interface {
	pulumi.Input

	ToVpnLinkProviderPropertiesOutput() VpnLinkProviderPropertiesOutput
	ToVpnLinkProviderPropertiesOutputWithContext(context.Context) VpnLinkProviderPropertiesOutput
}

// List of properties of a link provider.
type VpnLinkProviderPropertiesArgs struct {
	// Name of the link provider.
	LinkProviderName pulumi.StringPtrInput `pulumi:"linkProviderName"`
	// Link speed.
	LinkSpeedInMbps pulumi.IntPtrInput `pulumi:"linkSpeedInMbps"`
}

func (VpnLinkProviderPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkProviderProperties)(nil)).Elem()
}

func (i VpnLinkProviderPropertiesArgs) ToVpnLinkProviderPropertiesOutput() VpnLinkProviderPropertiesOutput {
	return i.ToVpnLinkProviderPropertiesOutputWithContext(context.Background())
}

func (i VpnLinkProviderPropertiesArgs) ToVpnLinkProviderPropertiesOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkProviderPropertiesOutput)
}

func (i VpnLinkProviderPropertiesArgs) ToVpnLinkProviderPropertiesPtrOutput() VpnLinkProviderPropertiesPtrOutput {
	return i.ToVpnLinkProviderPropertiesPtrOutputWithContext(context.Background())
}

func (i VpnLinkProviderPropertiesArgs) ToVpnLinkProviderPropertiesPtrOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkProviderPropertiesOutput).ToVpnLinkProviderPropertiesPtrOutputWithContext(ctx)
}

// VpnLinkProviderPropertiesPtrInput is an input type that accepts VpnLinkProviderPropertiesArgs, VpnLinkProviderPropertiesPtr and VpnLinkProviderPropertiesPtrOutput values.
// You can construct a concrete instance of `VpnLinkProviderPropertiesPtrInput` via:
//
//          VpnLinkProviderPropertiesArgs{...}
//
//  or:
//
//          nil
type VpnLinkProviderPropertiesPtrInput interface {
	pulumi.Input

	ToVpnLinkProviderPropertiesPtrOutput() VpnLinkProviderPropertiesPtrOutput
	ToVpnLinkProviderPropertiesPtrOutputWithContext(context.Context) VpnLinkProviderPropertiesPtrOutput
}

type vpnLinkProviderPropertiesPtrType VpnLinkProviderPropertiesArgs

func VpnLinkProviderPropertiesPtr(v *VpnLinkProviderPropertiesArgs) VpnLinkProviderPropertiesPtrInput {
	return (*vpnLinkProviderPropertiesPtrType)(v)
}

func (*vpnLinkProviderPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkProviderProperties)(nil)).Elem()
}

func (i *vpnLinkProviderPropertiesPtrType) ToVpnLinkProviderPropertiesPtrOutput() VpnLinkProviderPropertiesPtrOutput {
	return i.ToVpnLinkProviderPropertiesPtrOutputWithContext(context.Background())
}

func (i *vpnLinkProviderPropertiesPtrType) ToVpnLinkProviderPropertiesPtrOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkProviderPropertiesPtrOutput)
}

// List of properties of a link provider.
type VpnLinkProviderPropertiesOutput struct{ *pulumi.OutputState }

func (VpnLinkProviderPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkProviderProperties)(nil)).Elem()
}

func (o VpnLinkProviderPropertiesOutput) ToVpnLinkProviderPropertiesOutput() VpnLinkProviderPropertiesOutput {
	return o
}

func (o VpnLinkProviderPropertiesOutput) ToVpnLinkProviderPropertiesOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesOutput {
	return o
}

func (o VpnLinkProviderPropertiesOutput) ToVpnLinkProviderPropertiesPtrOutput() VpnLinkProviderPropertiesPtrOutput {
	return o.ToVpnLinkProviderPropertiesPtrOutputWithContext(context.Background())
}

func (o VpnLinkProviderPropertiesOutput) ToVpnLinkProviderPropertiesPtrOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesPtrOutput {
	return o.ApplyT(func(v VpnLinkProviderProperties) *VpnLinkProviderProperties {
		return &v
	}).(VpnLinkProviderPropertiesPtrOutput)
}

// Name of the link provider.
func (o VpnLinkProviderPropertiesOutput) LinkProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnLinkProviderProperties) *string { return v.LinkProviderName }).(pulumi.StringPtrOutput)
}

// Link speed.
func (o VpnLinkProviderPropertiesOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnLinkProviderProperties) *int { return v.LinkSpeedInMbps }).(pulumi.IntPtrOutput)
}

type VpnLinkProviderPropertiesPtrOutput struct{ *pulumi.OutputState }

func (VpnLinkProviderPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkProviderProperties)(nil)).Elem()
}

func (o VpnLinkProviderPropertiesPtrOutput) ToVpnLinkProviderPropertiesPtrOutput() VpnLinkProviderPropertiesPtrOutput {
	return o
}

func (o VpnLinkProviderPropertiesPtrOutput) ToVpnLinkProviderPropertiesPtrOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesPtrOutput {
	return o
}

func (o VpnLinkProviderPropertiesPtrOutput) Elem() VpnLinkProviderPropertiesOutput {
	return o.ApplyT(func(v *VpnLinkProviderProperties) VpnLinkProviderProperties { return *v }).(VpnLinkProviderPropertiesOutput)
}

// Name of the link provider.
func (o VpnLinkProviderPropertiesPtrOutput) LinkProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnLinkProviderProperties) *string {
		if v == nil {
			return nil
		}
		return v.LinkProviderName
	}).(pulumi.StringPtrOutput)
}

// Link speed.
func (o VpnLinkProviderPropertiesPtrOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnLinkProviderProperties) *int {
		if v == nil {
			return nil
		}
		return v.LinkSpeedInMbps
	}).(pulumi.IntPtrOutput)
}

// List of properties of a link provider.
type VpnLinkProviderPropertiesResponse struct {
	// Name of the link provider.
	LinkProviderName *string `pulumi:"linkProviderName"`
	// Link speed.
	LinkSpeedInMbps *int `pulumi:"linkSpeedInMbps"`
}

// VpnLinkProviderPropertiesResponseInput is an input type that accepts VpnLinkProviderPropertiesResponseArgs and VpnLinkProviderPropertiesResponseOutput values.
// You can construct a concrete instance of `VpnLinkProviderPropertiesResponseInput` via:
//
//          VpnLinkProviderPropertiesResponseArgs{...}
type VpnLinkProviderPropertiesResponseInput interface {
	pulumi.Input

	ToVpnLinkProviderPropertiesResponseOutput() VpnLinkProviderPropertiesResponseOutput
	ToVpnLinkProviderPropertiesResponseOutputWithContext(context.Context) VpnLinkProviderPropertiesResponseOutput
}

// List of properties of a link provider.
type VpnLinkProviderPropertiesResponseArgs struct {
	// Name of the link provider.
	LinkProviderName pulumi.StringPtrInput `pulumi:"linkProviderName"`
	// Link speed.
	LinkSpeedInMbps pulumi.IntPtrInput `pulumi:"linkSpeedInMbps"`
}

func (VpnLinkProviderPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkProviderPropertiesResponse)(nil)).Elem()
}

func (i VpnLinkProviderPropertiesResponseArgs) ToVpnLinkProviderPropertiesResponseOutput() VpnLinkProviderPropertiesResponseOutput {
	return i.ToVpnLinkProviderPropertiesResponseOutputWithContext(context.Background())
}

func (i VpnLinkProviderPropertiesResponseArgs) ToVpnLinkProviderPropertiesResponseOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkProviderPropertiesResponseOutput)
}

func (i VpnLinkProviderPropertiesResponseArgs) ToVpnLinkProviderPropertiesResponsePtrOutput() VpnLinkProviderPropertiesResponsePtrOutput {
	return i.ToVpnLinkProviderPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i VpnLinkProviderPropertiesResponseArgs) ToVpnLinkProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkProviderPropertiesResponseOutput).ToVpnLinkProviderPropertiesResponsePtrOutputWithContext(ctx)
}

// VpnLinkProviderPropertiesResponsePtrInput is an input type that accepts VpnLinkProviderPropertiesResponseArgs, VpnLinkProviderPropertiesResponsePtr and VpnLinkProviderPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `VpnLinkProviderPropertiesResponsePtrInput` via:
//
//          VpnLinkProviderPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type VpnLinkProviderPropertiesResponsePtrInput interface {
	pulumi.Input

	ToVpnLinkProviderPropertiesResponsePtrOutput() VpnLinkProviderPropertiesResponsePtrOutput
	ToVpnLinkProviderPropertiesResponsePtrOutputWithContext(context.Context) VpnLinkProviderPropertiesResponsePtrOutput
}

type vpnLinkProviderPropertiesResponsePtrType VpnLinkProviderPropertiesResponseArgs

func VpnLinkProviderPropertiesResponsePtr(v *VpnLinkProviderPropertiesResponseArgs) VpnLinkProviderPropertiesResponsePtrInput {
	return (*vpnLinkProviderPropertiesResponsePtrType)(v)
}

func (*vpnLinkProviderPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkProviderPropertiesResponse)(nil)).Elem()
}

func (i *vpnLinkProviderPropertiesResponsePtrType) ToVpnLinkProviderPropertiesResponsePtrOutput() VpnLinkProviderPropertiesResponsePtrOutput {
	return i.ToVpnLinkProviderPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *vpnLinkProviderPropertiesResponsePtrType) ToVpnLinkProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnLinkProviderPropertiesResponsePtrOutput)
}

// List of properties of a link provider.
type VpnLinkProviderPropertiesResponseOutput struct{ *pulumi.OutputState }

func (VpnLinkProviderPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnLinkProviderPropertiesResponse)(nil)).Elem()
}

func (o VpnLinkProviderPropertiesResponseOutput) ToVpnLinkProviderPropertiesResponseOutput() VpnLinkProviderPropertiesResponseOutput {
	return o
}

func (o VpnLinkProviderPropertiesResponseOutput) ToVpnLinkProviderPropertiesResponseOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesResponseOutput {
	return o
}

func (o VpnLinkProviderPropertiesResponseOutput) ToVpnLinkProviderPropertiesResponsePtrOutput() VpnLinkProviderPropertiesResponsePtrOutput {
	return o.ToVpnLinkProviderPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o VpnLinkProviderPropertiesResponseOutput) ToVpnLinkProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VpnLinkProviderPropertiesResponse) *VpnLinkProviderPropertiesResponse {
		return &v
	}).(VpnLinkProviderPropertiesResponsePtrOutput)
}

// Name of the link provider.
func (o VpnLinkProviderPropertiesResponseOutput) LinkProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnLinkProviderPropertiesResponse) *string { return v.LinkProviderName }).(pulumi.StringPtrOutput)
}

// Link speed.
func (o VpnLinkProviderPropertiesResponseOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnLinkProviderPropertiesResponse) *int { return v.LinkSpeedInMbps }).(pulumi.IntPtrOutput)
}

type VpnLinkProviderPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (VpnLinkProviderPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnLinkProviderPropertiesResponse)(nil)).Elem()
}

func (o VpnLinkProviderPropertiesResponsePtrOutput) ToVpnLinkProviderPropertiesResponsePtrOutput() VpnLinkProviderPropertiesResponsePtrOutput {
	return o
}

func (o VpnLinkProviderPropertiesResponsePtrOutput) ToVpnLinkProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) VpnLinkProviderPropertiesResponsePtrOutput {
	return o
}

func (o VpnLinkProviderPropertiesResponsePtrOutput) Elem() VpnLinkProviderPropertiesResponseOutput {
	return o.ApplyT(func(v *VpnLinkProviderPropertiesResponse) VpnLinkProviderPropertiesResponse { return *v }).(VpnLinkProviderPropertiesResponseOutput)
}

// Name of the link provider.
func (o VpnLinkProviderPropertiesResponsePtrOutput) LinkProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnLinkProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.LinkProviderName
	}).(pulumi.StringPtrOutput)
}

// Link speed.
func (o VpnLinkProviderPropertiesResponsePtrOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnLinkProviderPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.LinkSpeedInMbps
	}).(pulumi.IntPtrOutput)
}

// Properties of the Radius client root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusClientRootCertificate struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The Radius client root certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VpnServerConfigRadiusClientRootCertificateInput is an input type that accepts VpnServerConfigRadiusClientRootCertificateArgs and VpnServerConfigRadiusClientRootCertificateOutput values.
// You can construct a concrete instance of `VpnServerConfigRadiusClientRootCertificateInput` via:
//
//          VpnServerConfigRadiusClientRootCertificateArgs{...}
type VpnServerConfigRadiusClientRootCertificateInput interface {
	pulumi.Input

	ToVpnServerConfigRadiusClientRootCertificateOutput() VpnServerConfigRadiusClientRootCertificateOutput
	ToVpnServerConfigRadiusClientRootCertificateOutputWithContext(context.Context) VpnServerConfigRadiusClientRootCertificateOutput
}

// Properties of the Radius client root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusClientRootCertificateArgs struct {
	// The certificate name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Radius client root certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (VpnServerConfigRadiusClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigRadiusClientRootCertificateArgs) ToVpnServerConfigRadiusClientRootCertificateOutput() VpnServerConfigRadiusClientRootCertificateOutput {
	return i.ToVpnServerConfigRadiusClientRootCertificateOutputWithContext(context.Background())
}

func (i VpnServerConfigRadiusClientRootCertificateArgs) ToVpnServerConfigRadiusClientRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigRadiusClientRootCertificateOutput)
}

// VpnServerConfigRadiusClientRootCertificateArrayInput is an input type that accepts VpnServerConfigRadiusClientRootCertificateArray and VpnServerConfigRadiusClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigRadiusClientRootCertificateArrayInput` via:
//
//          VpnServerConfigRadiusClientRootCertificateArray{ VpnServerConfigRadiusClientRootCertificateArgs{...} }
type VpnServerConfigRadiusClientRootCertificateArrayInput interface {
	pulumi.Input

	ToVpnServerConfigRadiusClientRootCertificateArrayOutput() VpnServerConfigRadiusClientRootCertificateArrayOutput
	ToVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(context.Context) VpnServerConfigRadiusClientRootCertificateArrayOutput
}

type VpnServerConfigRadiusClientRootCertificateArray []VpnServerConfigRadiusClientRootCertificateInput

func (VpnServerConfigRadiusClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigRadiusClientRootCertificateArray) ToVpnServerConfigRadiusClientRootCertificateArrayOutput() VpnServerConfigRadiusClientRootCertificateArrayOutput {
	return i.ToVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigRadiusClientRootCertificateArray) ToVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigRadiusClientRootCertificateArrayOutput)
}

// Properties of the Radius client root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusClientRootCertificateOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigRadiusClientRootCertificateOutput) ToVpnServerConfigRadiusClientRootCertificateOutput() VpnServerConfigRadiusClientRootCertificateOutput {
	return o
}

func (o VpnServerConfigRadiusClientRootCertificateOutput) ToVpnServerConfigRadiusClientRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigRadiusClientRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusClientRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Radius client root certificate thumbprint.
func (o VpnServerConfigRadiusClientRootCertificateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusClientRootCertificate) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnServerConfigRadiusClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusClientRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigRadiusClientRootCertificateArrayOutput) ToVpnServerConfigRadiusClientRootCertificateArrayOutput() VpnServerConfigRadiusClientRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigRadiusClientRootCertificateArrayOutput) ToVpnServerConfigRadiusClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigRadiusClientRootCertificateArrayOutput) Index(i pulumi.IntInput) VpnServerConfigRadiusClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigRadiusClientRootCertificate {
		return vs[0].([]VpnServerConfigRadiusClientRootCertificate)[vs[1].(int)]
	}).(VpnServerConfigRadiusClientRootCertificateOutput)
}

// Properties of the Radius client root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusClientRootCertificateResponse struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The Radius client root certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VpnServerConfigRadiusClientRootCertificateResponseInput is an input type that accepts VpnServerConfigRadiusClientRootCertificateResponseArgs and VpnServerConfigRadiusClientRootCertificateResponseOutput values.
// You can construct a concrete instance of `VpnServerConfigRadiusClientRootCertificateResponseInput` via:
//
//          VpnServerConfigRadiusClientRootCertificateResponseArgs{...}
type VpnServerConfigRadiusClientRootCertificateResponseInput interface {
	pulumi.Input

	ToVpnServerConfigRadiusClientRootCertificateResponseOutput() VpnServerConfigRadiusClientRootCertificateResponseOutput
	ToVpnServerConfigRadiusClientRootCertificateResponseOutputWithContext(context.Context) VpnServerConfigRadiusClientRootCertificateResponseOutput
}

// Properties of the Radius client root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusClientRootCertificateResponseArgs struct {
	// The certificate name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Radius client root certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (VpnServerConfigRadiusClientRootCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusClientRootCertificateResponse)(nil)).Elem()
}

func (i VpnServerConfigRadiusClientRootCertificateResponseArgs) ToVpnServerConfigRadiusClientRootCertificateResponseOutput() VpnServerConfigRadiusClientRootCertificateResponseOutput {
	return i.ToVpnServerConfigRadiusClientRootCertificateResponseOutputWithContext(context.Background())
}

func (i VpnServerConfigRadiusClientRootCertificateResponseArgs) ToVpnServerConfigRadiusClientRootCertificateResponseOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigRadiusClientRootCertificateResponseOutput)
}

// VpnServerConfigRadiusClientRootCertificateResponseArrayInput is an input type that accepts VpnServerConfigRadiusClientRootCertificateResponseArray and VpnServerConfigRadiusClientRootCertificateResponseArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigRadiusClientRootCertificateResponseArrayInput` via:
//
//          VpnServerConfigRadiusClientRootCertificateResponseArray{ VpnServerConfigRadiusClientRootCertificateResponseArgs{...} }
type VpnServerConfigRadiusClientRootCertificateResponseArrayInput interface {
	pulumi.Input

	ToVpnServerConfigRadiusClientRootCertificateResponseArrayOutput() VpnServerConfigRadiusClientRootCertificateResponseArrayOutput
	ToVpnServerConfigRadiusClientRootCertificateResponseArrayOutputWithContext(context.Context) VpnServerConfigRadiusClientRootCertificateResponseArrayOutput
}

type VpnServerConfigRadiusClientRootCertificateResponseArray []VpnServerConfigRadiusClientRootCertificateResponseInput

func (VpnServerConfigRadiusClientRootCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusClientRootCertificateResponse)(nil)).Elem()
}

func (i VpnServerConfigRadiusClientRootCertificateResponseArray) ToVpnServerConfigRadiusClientRootCertificateResponseArrayOutput() VpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return i.ToVpnServerConfigRadiusClientRootCertificateResponseArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigRadiusClientRootCertificateResponseArray) ToVpnServerConfigRadiusClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigRadiusClientRootCertificateResponseArrayOutput)
}

// Properties of the Radius client root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusClientRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusClientRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigRadiusClientRootCertificateResponseOutput) ToVpnServerConfigRadiusClientRootCertificateResponseOutput() VpnServerConfigRadiusClientRootCertificateResponseOutput {
	return o
}

func (o VpnServerConfigRadiusClientRootCertificateResponseOutput) ToVpnServerConfigRadiusClientRootCertificateResponseOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateResponseOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigRadiusClientRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusClientRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Radius client root certificate thumbprint.
func (o VpnServerConfigRadiusClientRootCertificateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusClientRootCertificateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnServerConfigRadiusClientRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusClientRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigRadiusClientRootCertificateResponseArrayOutput) ToVpnServerConfigRadiusClientRootCertificateResponseArrayOutput() VpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigRadiusClientRootCertificateResponseArrayOutput) ToVpnServerConfigRadiusClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigRadiusClientRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnServerConfigRadiusClientRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigRadiusClientRootCertificateResponse {
		return vs[0].([]VpnServerConfigRadiusClientRootCertificateResponse)[vs[1].(int)]
	}).(VpnServerConfigRadiusClientRootCertificateResponseOutput)
}

// Properties of Radius Server root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusServerRootCertificate struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData *string `pulumi:"publicCertData"`
}

// VpnServerConfigRadiusServerRootCertificateInput is an input type that accepts VpnServerConfigRadiusServerRootCertificateArgs and VpnServerConfigRadiusServerRootCertificateOutput values.
// You can construct a concrete instance of `VpnServerConfigRadiusServerRootCertificateInput` via:
//
//          VpnServerConfigRadiusServerRootCertificateArgs{...}
type VpnServerConfigRadiusServerRootCertificateInput interface {
	pulumi.Input

	ToVpnServerConfigRadiusServerRootCertificateOutput() VpnServerConfigRadiusServerRootCertificateOutput
	ToVpnServerConfigRadiusServerRootCertificateOutputWithContext(context.Context) VpnServerConfigRadiusServerRootCertificateOutput
}

// Properties of Radius Server root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusServerRootCertificateArgs struct {
	// The certificate name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The certificate public data.
	PublicCertData pulumi.StringPtrInput `pulumi:"publicCertData"`
}

func (VpnServerConfigRadiusServerRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigRadiusServerRootCertificateArgs) ToVpnServerConfigRadiusServerRootCertificateOutput() VpnServerConfigRadiusServerRootCertificateOutput {
	return i.ToVpnServerConfigRadiusServerRootCertificateOutputWithContext(context.Background())
}

func (i VpnServerConfigRadiusServerRootCertificateArgs) ToVpnServerConfigRadiusServerRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigRadiusServerRootCertificateOutput)
}

// VpnServerConfigRadiusServerRootCertificateArrayInput is an input type that accepts VpnServerConfigRadiusServerRootCertificateArray and VpnServerConfigRadiusServerRootCertificateArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigRadiusServerRootCertificateArrayInput` via:
//
//          VpnServerConfigRadiusServerRootCertificateArray{ VpnServerConfigRadiusServerRootCertificateArgs{...} }
type VpnServerConfigRadiusServerRootCertificateArrayInput interface {
	pulumi.Input

	ToVpnServerConfigRadiusServerRootCertificateArrayOutput() VpnServerConfigRadiusServerRootCertificateArrayOutput
	ToVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(context.Context) VpnServerConfigRadiusServerRootCertificateArrayOutput
}

type VpnServerConfigRadiusServerRootCertificateArray []VpnServerConfigRadiusServerRootCertificateInput

func (VpnServerConfigRadiusServerRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigRadiusServerRootCertificateArray) ToVpnServerConfigRadiusServerRootCertificateArrayOutput() VpnServerConfigRadiusServerRootCertificateArrayOutput {
	return i.ToVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigRadiusServerRootCertificateArray) ToVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigRadiusServerRootCertificateArrayOutput)
}

// Properties of Radius Server root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusServerRootCertificateOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusServerRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigRadiusServerRootCertificateOutput) ToVpnServerConfigRadiusServerRootCertificateOutput() VpnServerConfigRadiusServerRootCertificateOutput {
	return o
}

func (o VpnServerConfigRadiusServerRootCertificateOutput) ToVpnServerConfigRadiusServerRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigRadiusServerRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusServerRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o VpnServerConfigRadiusServerRootCertificateOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusServerRootCertificate) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type VpnServerConfigRadiusServerRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusServerRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusServerRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigRadiusServerRootCertificateArrayOutput) ToVpnServerConfigRadiusServerRootCertificateArrayOutput() VpnServerConfigRadiusServerRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigRadiusServerRootCertificateArrayOutput) ToVpnServerConfigRadiusServerRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigRadiusServerRootCertificateArrayOutput) Index(i pulumi.IntInput) VpnServerConfigRadiusServerRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigRadiusServerRootCertificate {
		return vs[0].([]VpnServerConfigRadiusServerRootCertificate)[vs[1].(int)]
	}).(VpnServerConfigRadiusServerRootCertificateOutput)
}

// Properties of Radius Server root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusServerRootCertificateResponse struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData *string `pulumi:"publicCertData"`
}

// VpnServerConfigRadiusServerRootCertificateResponseInput is an input type that accepts VpnServerConfigRadiusServerRootCertificateResponseArgs and VpnServerConfigRadiusServerRootCertificateResponseOutput values.
// You can construct a concrete instance of `VpnServerConfigRadiusServerRootCertificateResponseInput` via:
//
//          VpnServerConfigRadiusServerRootCertificateResponseArgs{...}
type VpnServerConfigRadiusServerRootCertificateResponseInput interface {
	pulumi.Input

	ToVpnServerConfigRadiusServerRootCertificateResponseOutput() VpnServerConfigRadiusServerRootCertificateResponseOutput
	ToVpnServerConfigRadiusServerRootCertificateResponseOutputWithContext(context.Context) VpnServerConfigRadiusServerRootCertificateResponseOutput
}

// Properties of Radius Server root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusServerRootCertificateResponseArgs struct {
	// The certificate name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The certificate public data.
	PublicCertData pulumi.StringPtrInput `pulumi:"publicCertData"`
}

func (VpnServerConfigRadiusServerRootCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusServerRootCertificateResponse)(nil)).Elem()
}

func (i VpnServerConfigRadiusServerRootCertificateResponseArgs) ToVpnServerConfigRadiusServerRootCertificateResponseOutput() VpnServerConfigRadiusServerRootCertificateResponseOutput {
	return i.ToVpnServerConfigRadiusServerRootCertificateResponseOutputWithContext(context.Background())
}

func (i VpnServerConfigRadiusServerRootCertificateResponseArgs) ToVpnServerConfigRadiusServerRootCertificateResponseOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigRadiusServerRootCertificateResponseOutput)
}

// VpnServerConfigRadiusServerRootCertificateResponseArrayInput is an input type that accepts VpnServerConfigRadiusServerRootCertificateResponseArray and VpnServerConfigRadiusServerRootCertificateResponseArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigRadiusServerRootCertificateResponseArrayInput` via:
//
//          VpnServerConfigRadiusServerRootCertificateResponseArray{ VpnServerConfigRadiusServerRootCertificateResponseArgs{...} }
type VpnServerConfigRadiusServerRootCertificateResponseArrayInput interface {
	pulumi.Input

	ToVpnServerConfigRadiusServerRootCertificateResponseArrayOutput() VpnServerConfigRadiusServerRootCertificateResponseArrayOutput
	ToVpnServerConfigRadiusServerRootCertificateResponseArrayOutputWithContext(context.Context) VpnServerConfigRadiusServerRootCertificateResponseArrayOutput
}

type VpnServerConfigRadiusServerRootCertificateResponseArray []VpnServerConfigRadiusServerRootCertificateResponseInput

func (VpnServerConfigRadiusServerRootCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusServerRootCertificateResponse)(nil)).Elem()
}

func (i VpnServerConfigRadiusServerRootCertificateResponseArray) ToVpnServerConfigRadiusServerRootCertificateResponseArrayOutput() VpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return i.ToVpnServerConfigRadiusServerRootCertificateResponseArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigRadiusServerRootCertificateResponseArray) ToVpnServerConfigRadiusServerRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigRadiusServerRootCertificateResponseArrayOutput)
}

// Properties of Radius Server root certificate of VpnServerConfiguration.
type VpnServerConfigRadiusServerRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusServerRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigRadiusServerRootCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigRadiusServerRootCertificateResponseOutput) ToVpnServerConfigRadiusServerRootCertificateResponseOutput() VpnServerConfigRadiusServerRootCertificateResponseOutput {
	return o
}

func (o VpnServerConfigRadiusServerRootCertificateResponseOutput) ToVpnServerConfigRadiusServerRootCertificateResponseOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateResponseOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigRadiusServerRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusServerRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o VpnServerConfigRadiusServerRootCertificateResponseOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigRadiusServerRootCertificateResponse) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type VpnServerConfigRadiusServerRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigRadiusServerRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigRadiusServerRootCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigRadiusServerRootCertificateResponseArrayOutput) ToVpnServerConfigRadiusServerRootCertificateResponseArrayOutput() VpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigRadiusServerRootCertificateResponseArrayOutput) ToVpnServerConfigRadiusServerRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigRadiusServerRootCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigRadiusServerRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnServerConfigRadiusServerRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigRadiusServerRootCertificateResponse {
		return vs[0].([]VpnServerConfigRadiusServerRootCertificateResponse)[vs[1].(int)]
	}).(VpnServerConfigRadiusServerRootCertificateResponseOutput)
}

// Properties of the revoked VPN client certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRevokedCertificate struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VpnServerConfigVpnClientRevokedCertificateInput is an input type that accepts VpnServerConfigVpnClientRevokedCertificateArgs and VpnServerConfigVpnClientRevokedCertificateOutput values.
// You can construct a concrete instance of `VpnServerConfigVpnClientRevokedCertificateInput` via:
//
//          VpnServerConfigVpnClientRevokedCertificateArgs{...}
type VpnServerConfigVpnClientRevokedCertificateInput interface {
	pulumi.Input

	ToVpnServerConfigVpnClientRevokedCertificateOutput() VpnServerConfigVpnClientRevokedCertificateOutput
	ToVpnServerConfigVpnClientRevokedCertificateOutputWithContext(context.Context) VpnServerConfigVpnClientRevokedCertificateOutput
}

// Properties of the revoked VPN client certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRevokedCertificateArgs struct {
	// The certificate name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (VpnServerConfigVpnClientRevokedCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (i VpnServerConfigVpnClientRevokedCertificateArgs) ToVpnServerConfigVpnClientRevokedCertificateOutput() VpnServerConfigVpnClientRevokedCertificateOutput {
	return i.ToVpnServerConfigVpnClientRevokedCertificateOutputWithContext(context.Background())
}

func (i VpnServerConfigVpnClientRevokedCertificateArgs) ToVpnServerConfigVpnClientRevokedCertificateOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigVpnClientRevokedCertificateOutput)
}

// VpnServerConfigVpnClientRevokedCertificateArrayInput is an input type that accepts VpnServerConfigVpnClientRevokedCertificateArray and VpnServerConfigVpnClientRevokedCertificateArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigVpnClientRevokedCertificateArrayInput` via:
//
//          VpnServerConfigVpnClientRevokedCertificateArray{ VpnServerConfigVpnClientRevokedCertificateArgs{...} }
type VpnServerConfigVpnClientRevokedCertificateArrayInput interface {
	pulumi.Input

	ToVpnServerConfigVpnClientRevokedCertificateArrayOutput() VpnServerConfigVpnClientRevokedCertificateArrayOutput
	ToVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(context.Context) VpnServerConfigVpnClientRevokedCertificateArrayOutput
}

type VpnServerConfigVpnClientRevokedCertificateArray []VpnServerConfigVpnClientRevokedCertificateInput

func (VpnServerConfigVpnClientRevokedCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (i VpnServerConfigVpnClientRevokedCertificateArray) ToVpnServerConfigVpnClientRevokedCertificateArrayOutput() VpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return i.ToVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigVpnClientRevokedCertificateArray) ToVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigVpnClientRevokedCertificateArrayOutput)
}

// Properties of the revoked VPN client certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRevokedCertificateOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRevokedCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRevokedCertificateOutput) ToVpnServerConfigVpnClientRevokedCertificateOutput() VpnServerConfigVpnClientRevokedCertificateOutput {
	return o
}

func (o VpnServerConfigVpnClientRevokedCertificateOutput) ToVpnServerConfigVpnClientRevokedCertificateOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigVpnClientRevokedCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRevokedCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnServerConfigVpnClientRevokedCertificateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRevokedCertificate) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnServerConfigVpnClientRevokedCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRevokedCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRevokedCertificate)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRevokedCertificateArrayOutput) ToVpnServerConfigVpnClientRevokedCertificateArrayOutput() VpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRevokedCertificateArrayOutput) ToVpnServerConfigVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRevokedCertificateArrayOutput) Index(i pulumi.IntInput) VpnServerConfigVpnClientRevokedCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigVpnClientRevokedCertificate {
		return vs[0].([]VpnServerConfigVpnClientRevokedCertificate)[vs[1].(int)]
	}).(VpnServerConfigVpnClientRevokedCertificateOutput)
}

// Properties of the revoked VPN client certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRevokedCertificateResponse struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VpnServerConfigVpnClientRevokedCertificateResponseInput is an input type that accepts VpnServerConfigVpnClientRevokedCertificateResponseArgs and VpnServerConfigVpnClientRevokedCertificateResponseOutput values.
// You can construct a concrete instance of `VpnServerConfigVpnClientRevokedCertificateResponseInput` via:
//
//          VpnServerConfigVpnClientRevokedCertificateResponseArgs{...}
type VpnServerConfigVpnClientRevokedCertificateResponseInput interface {
	pulumi.Input

	ToVpnServerConfigVpnClientRevokedCertificateResponseOutput() VpnServerConfigVpnClientRevokedCertificateResponseOutput
	ToVpnServerConfigVpnClientRevokedCertificateResponseOutputWithContext(context.Context) VpnServerConfigVpnClientRevokedCertificateResponseOutput
}

// Properties of the revoked VPN client certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRevokedCertificateResponseArgs struct {
	// The certificate name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (VpnServerConfigVpnClientRevokedCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (i VpnServerConfigVpnClientRevokedCertificateResponseArgs) ToVpnServerConfigVpnClientRevokedCertificateResponseOutput() VpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return i.ToVpnServerConfigVpnClientRevokedCertificateResponseOutputWithContext(context.Background())
}

func (i VpnServerConfigVpnClientRevokedCertificateResponseArgs) ToVpnServerConfigVpnClientRevokedCertificateResponseOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigVpnClientRevokedCertificateResponseOutput)
}

// VpnServerConfigVpnClientRevokedCertificateResponseArrayInput is an input type that accepts VpnServerConfigVpnClientRevokedCertificateResponseArray and VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigVpnClientRevokedCertificateResponseArrayInput` via:
//
//          VpnServerConfigVpnClientRevokedCertificateResponseArray{ VpnServerConfigVpnClientRevokedCertificateResponseArgs{...} }
type VpnServerConfigVpnClientRevokedCertificateResponseArrayInput interface {
	pulumi.Input

	ToVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput() VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput
	ToVpnServerConfigVpnClientRevokedCertificateResponseArrayOutputWithContext(context.Context) VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput
}

type VpnServerConfigVpnClientRevokedCertificateResponseArray []VpnServerConfigVpnClientRevokedCertificateResponseInput

func (VpnServerConfigVpnClientRevokedCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (i VpnServerConfigVpnClientRevokedCertificateResponseArray) ToVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput() VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return i.ToVpnServerConfigVpnClientRevokedCertificateResponseArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigVpnClientRevokedCertificateResponseArray) ToVpnServerConfigVpnClientRevokedCertificateResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput)
}

// Properties of the revoked VPN client certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRevokedCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRevokedCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRevokedCertificateResponseOutput) ToVpnServerConfigVpnClientRevokedCertificateResponseOutput() VpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return o
}

func (o VpnServerConfigVpnClientRevokedCertificateResponseOutput) ToVpnServerConfigVpnClientRevokedCertificateResponseOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigVpnClientRevokedCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRevokedCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnServerConfigVpnClientRevokedCertificateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRevokedCertificateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) ToVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput() VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) ToVpnServerConfigVpnClientRevokedCertificateResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnServerConfigVpnClientRevokedCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigVpnClientRevokedCertificateResponse {
		return vs[0].([]VpnServerConfigVpnClientRevokedCertificateResponse)[vs[1].(int)]
	}).(VpnServerConfigVpnClientRevokedCertificateResponseOutput)
}

// Properties of VPN client root certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRootCertificate struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData *string `pulumi:"publicCertData"`
}

// VpnServerConfigVpnClientRootCertificateInput is an input type that accepts VpnServerConfigVpnClientRootCertificateArgs and VpnServerConfigVpnClientRootCertificateOutput values.
// You can construct a concrete instance of `VpnServerConfigVpnClientRootCertificateInput` via:
//
//          VpnServerConfigVpnClientRootCertificateArgs{...}
type VpnServerConfigVpnClientRootCertificateInput interface {
	pulumi.Input

	ToVpnServerConfigVpnClientRootCertificateOutput() VpnServerConfigVpnClientRootCertificateOutput
	ToVpnServerConfigVpnClientRootCertificateOutputWithContext(context.Context) VpnServerConfigVpnClientRootCertificateOutput
}

// Properties of VPN client root certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRootCertificateArgs struct {
	// The certificate name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The certificate public data.
	PublicCertData pulumi.StringPtrInput `pulumi:"publicCertData"`
}

func (VpnServerConfigVpnClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigVpnClientRootCertificateArgs) ToVpnServerConfigVpnClientRootCertificateOutput() VpnServerConfigVpnClientRootCertificateOutput {
	return i.ToVpnServerConfigVpnClientRootCertificateOutputWithContext(context.Background())
}

func (i VpnServerConfigVpnClientRootCertificateArgs) ToVpnServerConfigVpnClientRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigVpnClientRootCertificateOutput)
}

// VpnServerConfigVpnClientRootCertificateArrayInput is an input type that accepts VpnServerConfigVpnClientRootCertificateArray and VpnServerConfigVpnClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigVpnClientRootCertificateArrayInput` via:
//
//          VpnServerConfigVpnClientRootCertificateArray{ VpnServerConfigVpnClientRootCertificateArgs{...} }
type VpnServerConfigVpnClientRootCertificateArrayInput interface {
	pulumi.Input

	ToVpnServerConfigVpnClientRootCertificateArrayOutput() VpnServerConfigVpnClientRootCertificateArrayOutput
	ToVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(context.Context) VpnServerConfigVpnClientRootCertificateArrayOutput
}

type VpnServerConfigVpnClientRootCertificateArray []VpnServerConfigVpnClientRootCertificateInput

func (VpnServerConfigVpnClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (i VpnServerConfigVpnClientRootCertificateArray) ToVpnServerConfigVpnClientRootCertificateArrayOutput() VpnServerConfigVpnClientRootCertificateArrayOutput {
	return i.ToVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigVpnClientRootCertificateArray) ToVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigVpnClientRootCertificateArrayOutput)
}

// Properties of VPN client root certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRootCertificateOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRootCertificateOutput) ToVpnServerConfigVpnClientRootCertificateOutput() VpnServerConfigVpnClientRootCertificateOutput {
	return o
}

func (o VpnServerConfigVpnClientRootCertificateOutput) ToVpnServerConfigVpnClientRootCertificateOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigVpnClientRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o VpnServerConfigVpnClientRootCertificateOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRootCertificate) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type VpnServerConfigVpnClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRootCertificate)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRootCertificateArrayOutput) ToVpnServerConfigVpnClientRootCertificateArrayOutput() VpnServerConfigVpnClientRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRootCertificateArrayOutput) ToVpnServerConfigVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRootCertificateArrayOutput) Index(i pulumi.IntInput) VpnServerConfigVpnClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigVpnClientRootCertificate {
		return vs[0].([]VpnServerConfigVpnClientRootCertificate)[vs[1].(int)]
	}).(VpnServerConfigVpnClientRootCertificateOutput)
}

// Properties of VPN client root certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRootCertificateResponse struct {
	// The certificate name.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData *string `pulumi:"publicCertData"`
}

// VpnServerConfigVpnClientRootCertificateResponseInput is an input type that accepts VpnServerConfigVpnClientRootCertificateResponseArgs and VpnServerConfigVpnClientRootCertificateResponseOutput values.
// You can construct a concrete instance of `VpnServerConfigVpnClientRootCertificateResponseInput` via:
//
//          VpnServerConfigVpnClientRootCertificateResponseArgs{...}
type VpnServerConfigVpnClientRootCertificateResponseInput interface {
	pulumi.Input

	ToVpnServerConfigVpnClientRootCertificateResponseOutput() VpnServerConfigVpnClientRootCertificateResponseOutput
	ToVpnServerConfigVpnClientRootCertificateResponseOutputWithContext(context.Context) VpnServerConfigVpnClientRootCertificateResponseOutput
}

// Properties of VPN client root certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRootCertificateResponseArgs struct {
	// The certificate name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The certificate public data.
	PublicCertData pulumi.StringPtrInput `pulumi:"publicCertData"`
}

func (VpnServerConfigVpnClientRootCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRootCertificateResponse)(nil)).Elem()
}

func (i VpnServerConfigVpnClientRootCertificateResponseArgs) ToVpnServerConfigVpnClientRootCertificateResponseOutput() VpnServerConfigVpnClientRootCertificateResponseOutput {
	return i.ToVpnServerConfigVpnClientRootCertificateResponseOutputWithContext(context.Background())
}

func (i VpnServerConfigVpnClientRootCertificateResponseArgs) ToVpnServerConfigVpnClientRootCertificateResponseOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigVpnClientRootCertificateResponseOutput)
}

// VpnServerConfigVpnClientRootCertificateResponseArrayInput is an input type that accepts VpnServerConfigVpnClientRootCertificateResponseArray and VpnServerConfigVpnClientRootCertificateResponseArrayOutput values.
// You can construct a concrete instance of `VpnServerConfigVpnClientRootCertificateResponseArrayInput` via:
//
//          VpnServerConfigVpnClientRootCertificateResponseArray{ VpnServerConfigVpnClientRootCertificateResponseArgs{...} }
type VpnServerConfigVpnClientRootCertificateResponseArrayInput interface {
	pulumi.Input

	ToVpnServerConfigVpnClientRootCertificateResponseArrayOutput() VpnServerConfigVpnClientRootCertificateResponseArrayOutput
	ToVpnServerConfigVpnClientRootCertificateResponseArrayOutputWithContext(context.Context) VpnServerConfigVpnClientRootCertificateResponseArrayOutput
}

type VpnServerConfigVpnClientRootCertificateResponseArray []VpnServerConfigVpnClientRootCertificateResponseInput

func (VpnServerConfigVpnClientRootCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRootCertificateResponse)(nil)).Elem()
}

func (i VpnServerConfigVpnClientRootCertificateResponseArray) ToVpnServerConfigVpnClientRootCertificateResponseArrayOutput() VpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return i.ToVpnServerConfigVpnClientRootCertificateResponseArrayOutputWithContext(context.Background())
}

func (i VpnServerConfigVpnClientRootCertificateResponseArray) ToVpnServerConfigVpnClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnServerConfigVpnClientRootCertificateResponseArrayOutput)
}

// Properties of VPN client root certificate of VpnServerConfiguration.
type VpnServerConfigVpnClientRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnServerConfigVpnClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRootCertificateResponseOutput) ToVpnServerConfigVpnClientRootCertificateResponseOutput() VpnServerConfigVpnClientRootCertificateResponseOutput {
	return o
}

func (o VpnServerConfigVpnClientRootCertificateResponseOutput) ToVpnServerConfigVpnClientRootCertificateResponseOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateResponseOutput {
	return o
}

// The certificate name.
func (o VpnServerConfigVpnClientRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o VpnServerConfigVpnClientRootCertificateResponseOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnServerConfigVpnClientRootCertificateResponse) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type VpnServerConfigVpnClientRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnServerConfigVpnClientRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnServerConfigVpnClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnServerConfigVpnClientRootCertificateResponseArrayOutput) ToVpnServerConfigVpnClientRootCertificateResponseArrayOutput() VpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRootCertificateResponseArrayOutput) ToVpnServerConfigVpnClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnServerConfigVpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnServerConfigVpnClientRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnServerConfigVpnClientRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnServerConfigVpnClientRootCertificateResponse {
		return vs[0].([]VpnServerConfigVpnClientRootCertificateResponse)[vs[1].(int)]
	}).(VpnServerConfigVpnClientRootCertificateResponseOutput)
}

// VpnSiteLink Resource.
type VpnSiteLink struct {
	// The set of bgp properties.
	BgpProperties *VpnLinkBgpSettings `pulumi:"bgpProperties"`
	// FQDN of vpn-site-link.
	Fqdn *string `pulumi:"fqdn"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The ip-address for the vpn-site-link.
	IpAddress *string `pulumi:"ipAddress"`
	// The link provider properties.
	LinkProperties *VpnLinkProviderProperties `pulumi:"linkProperties"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
}

// VpnSiteLinkInput is an input type that accepts VpnSiteLinkArgs and VpnSiteLinkOutput values.
// You can construct a concrete instance of `VpnSiteLinkInput` via:
//
//          VpnSiteLinkArgs{...}
type VpnSiteLinkInput interface {
	pulumi.Input

	ToVpnSiteLinkOutput() VpnSiteLinkOutput
	ToVpnSiteLinkOutputWithContext(context.Context) VpnSiteLinkOutput
}

// VpnSiteLink Resource.
type VpnSiteLinkArgs struct {
	// The set of bgp properties.
	BgpProperties VpnLinkBgpSettingsPtrInput `pulumi:"bgpProperties"`
	// FQDN of vpn-site-link.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The ip-address for the vpn-site-link.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The link provider properties.
	LinkProperties VpnLinkProviderPropertiesPtrInput `pulumi:"linkProperties"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (VpnSiteLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLink)(nil)).Elem()
}

func (i VpnSiteLinkArgs) ToVpnSiteLinkOutput() VpnSiteLinkOutput {
	return i.ToVpnSiteLinkOutputWithContext(context.Background())
}

func (i VpnSiteLinkArgs) ToVpnSiteLinkOutputWithContext(ctx context.Context) VpnSiteLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkOutput)
}

// VpnSiteLinkArrayInput is an input type that accepts VpnSiteLinkArray and VpnSiteLinkArrayOutput values.
// You can construct a concrete instance of `VpnSiteLinkArrayInput` via:
//
//          VpnSiteLinkArray{ VpnSiteLinkArgs{...} }
type VpnSiteLinkArrayInput interface {
	pulumi.Input

	ToVpnSiteLinkArrayOutput() VpnSiteLinkArrayOutput
	ToVpnSiteLinkArrayOutputWithContext(context.Context) VpnSiteLinkArrayOutput
}

type VpnSiteLinkArray []VpnSiteLinkInput

func (VpnSiteLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLink)(nil)).Elem()
}

func (i VpnSiteLinkArray) ToVpnSiteLinkArrayOutput() VpnSiteLinkArrayOutput {
	return i.ToVpnSiteLinkArrayOutputWithContext(context.Background())
}

func (i VpnSiteLinkArray) ToVpnSiteLinkArrayOutputWithContext(ctx context.Context) VpnSiteLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkArrayOutput)
}

// VpnSiteLink Resource.
type VpnSiteLinkOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLink)(nil)).Elem()
}

func (o VpnSiteLinkOutput) ToVpnSiteLinkOutput() VpnSiteLinkOutput {
	return o
}

func (o VpnSiteLinkOutput) ToVpnSiteLinkOutputWithContext(ctx context.Context) VpnSiteLinkOutput {
	return o
}

// The set of bgp properties.
func (o VpnSiteLinkOutput) BgpProperties() VpnLinkBgpSettingsPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *VpnLinkBgpSettings { return v.BgpProperties }).(VpnLinkBgpSettingsPtrOutput)
}

// FQDN of vpn-site-link.
func (o VpnSiteLinkOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VpnSiteLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ip-address for the vpn-site-link.
func (o VpnSiteLinkOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The link provider properties.
func (o VpnSiteLinkOutput) LinkProperties() VpnLinkProviderPropertiesPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *VpnLinkProviderProperties { return v.LinkProperties }).(VpnLinkProviderPropertiesPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnSiteLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type VpnSiteLinkArrayOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLink)(nil)).Elem()
}

func (o VpnSiteLinkArrayOutput) ToVpnSiteLinkArrayOutput() VpnSiteLinkArrayOutput {
	return o
}

func (o VpnSiteLinkArrayOutput) ToVpnSiteLinkArrayOutputWithContext(ctx context.Context) VpnSiteLinkArrayOutput {
	return o
}

func (o VpnSiteLinkArrayOutput) Index(i pulumi.IntInput) VpnSiteLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnSiteLink {
		return vs[0].([]VpnSiteLink)[vs[1].(int)]
	}).(VpnSiteLinkOutput)
}

// VpnSiteLinkConnection Resource.
type VpnSiteLinkConnection struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth *int `pulumi:"connectionBandwidth"`
	// EnableBgp flag.
	EnableBgp *bool `pulumi:"enableBgp"`
	// EnableBgp flag.
	EnableRateLimiting *bool `pulumi:"enableRateLimiting"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies []IpsecPolicy `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Routing weight for vpn connection.
	RoutingWeight *int `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey *string `pulumi:"sharedKey"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress *bool `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors *bool `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType *string `pulumi:"vpnConnectionProtocolType"`
	// Id of the connected vpn site link.
	VpnSiteLink *SubResource `pulumi:"vpnSiteLink"`
}

// VpnSiteLinkConnectionInput is an input type that accepts VpnSiteLinkConnectionArgs and VpnSiteLinkConnectionOutput values.
// You can construct a concrete instance of `VpnSiteLinkConnectionInput` via:
//
//          VpnSiteLinkConnectionArgs{...}
type VpnSiteLinkConnectionInput interface {
	pulumi.Input

	ToVpnSiteLinkConnectionOutput() VpnSiteLinkConnectionOutput
	ToVpnSiteLinkConnectionOutputWithContext(context.Context) VpnSiteLinkConnectionOutput
}

// VpnSiteLinkConnection Resource.
type VpnSiteLinkConnectionArgs struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth pulumi.IntPtrInput `pulumi:"connectionBandwidth"`
	// EnableBgp flag.
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// EnableBgp flag.
	EnableRateLimiting pulumi.BoolPtrInput `pulumi:"enableRateLimiting"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies IpsecPolicyArrayInput `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Routing weight for vpn connection.
	RoutingWeight pulumi.IntPtrInput `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress pulumi.BoolPtrInput `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors pulumi.BoolPtrInput `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType pulumi.StringPtrInput `pulumi:"vpnConnectionProtocolType"`
	// Id of the connected vpn site link.
	VpnSiteLink SubResourcePtrInput `pulumi:"vpnSiteLink"`
}

func (VpnSiteLinkConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLinkConnection)(nil)).Elem()
}

func (i VpnSiteLinkConnectionArgs) ToVpnSiteLinkConnectionOutput() VpnSiteLinkConnectionOutput {
	return i.ToVpnSiteLinkConnectionOutputWithContext(context.Background())
}

func (i VpnSiteLinkConnectionArgs) ToVpnSiteLinkConnectionOutputWithContext(ctx context.Context) VpnSiteLinkConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkConnectionOutput)
}

// VpnSiteLinkConnectionArrayInput is an input type that accepts VpnSiteLinkConnectionArray and VpnSiteLinkConnectionArrayOutput values.
// You can construct a concrete instance of `VpnSiteLinkConnectionArrayInput` via:
//
//          VpnSiteLinkConnectionArray{ VpnSiteLinkConnectionArgs{...} }
type VpnSiteLinkConnectionArrayInput interface {
	pulumi.Input

	ToVpnSiteLinkConnectionArrayOutput() VpnSiteLinkConnectionArrayOutput
	ToVpnSiteLinkConnectionArrayOutputWithContext(context.Context) VpnSiteLinkConnectionArrayOutput
}

type VpnSiteLinkConnectionArray []VpnSiteLinkConnectionInput

func (VpnSiteLinkConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLinkConnection)(nil)).Elem()
}

func (i VpnSiteLinkConnectionArray) ToVpnSiteLinkConnectionArrayOutput() VpnSiteLinkConnectionArrayOutput {
	return i.ToVpnSiteLinkConnectionArrayOutputWithContext(context.Background())
}

func (i VpnSiteLinkConnectionArray) ToVpnSiteLinkConnectionArrayOutputWithContext(ctx context.Context) VpnSiteLinkConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkConnectionArrayOutput)
}

// VpnSiteLinkConnection Resource.
type VpnSiteLinkConnectionOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLinkConnection)(nil)).Elem()
}

func (o VpnSiteLinkConnectionOutput) ToVpnSiteLinkConnectionOutput() VpnSiteLinkConnectionOutput {
	return o
}

func (o VpnSiteLinkConnectionOutput) ToVpnSiteLinkConnectionOutputWithContext(ctx context.Context) VpnSiteLinkConnectionOutput {
	return o
}

// Expected bandwidth in MBPS.
func (o VpnSiteLinkConnectionOutput) ConnectionBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *int { return v.ConnectionBandwidth }).(pulumi.IntPtrOutput)
}

// EnableBgp flag.
func (o VpnSiteLinkConnectionOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// EnableBgp flag.
func (o VpnSiteLinkConnectionOutput) EnableRateLimiting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *bool { return v.EnableRateLimiting }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o VpnSiteLinkConnectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VpnSiteLinkConnectionOutput) IpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) []IpsecPolicy { return v.IpsecPolicies }).(IpsecPolicyArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnSiteLinkConnectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Routing weight for vpn connection.
func (o VpnSiteLinkConnectionOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

// SharedKey for the vpn connection.
func (o VpnSiteLinkConnectionOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// Use local azure ip to initiate connection.
func (o VpnSiteLinkConnectionOutput) UseLocalAzureIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *bool { return v.UseLocalAzureIpAddress }).(pulumi.BoolPtrOutput)
}

// Enable policy-based traffic selectors.
func (o VpnSiteLinkConnectionOutput) UsePolicyBasedTrafficSelectors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *bool { return v.UsePolicyBasedTrafficSelectors }).(pulumi.BoolPtrOutput)
}

// Connection protocol used for this connection.
func (o VpnSiteLinkConnectionOutput) VpnConnectionProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *string { return v.VpnConnectionProtocolType }).(pulumi.StringPtrOutput)
}

// Id of the connected vpn site link.
func (o VpnSiteLinkConnectionOutput) VpnSiteLink() SubResourcePtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnection) *SubResource { return v.VpnSiteLink }).(SubResourcePtrOutput)
}

type VpnSiteLinkConnectionArrayOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLinkConnection)(nil)).Elem()
}

func (o VpnSiteLinkConnectionArrayOutput) ToVpnSiteLinkConnectionArrayOutput() VpnSiteLinkConnectionArrayOutput {
	return o
}

func (o VpnSiteLinkConnectionArrayOutput) ToVpnSiteLinkConnectionArrayOutputWithContext(ctx context.Context) VpnSiteLinkConnectionArrayOutput {
	return o
}

func (o VpnSiteLinkConnectionArrayOutput) Index(i pulumi.IntInput) VpnSiteLinkConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnSiteLinkConnection {
		return vs[0].([]VpnSiteLinkConnection)[vs[1].(int)]
	}).(VpnSiteLinkConnectionOutput)
}

// VpnSiteLinkConnection Resource.
type VpnSiteLinkConnectionResponse struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth *int `pulumi:"connectionBandwidth"`
	// The connection status.
	ConnectionStatus string `pulumi:"connectionStatus"`
	// Egress bytes transferred.
	EgressBytesTransferred int `pulumi:"egressBytesTransferred"`
	// EnableBgp flag.
	EnableBgp *bool `pulumi:"enableBgp"`
	// EnableBgp flag.
	EnableRateLimiting *bool `pulumi:"enableRateLimiting"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Ingress bytes transferred.
	IngressBytesTransferred int `pulumi:"ingressBytesTransferred"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies []IpsecPolicyResponse `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN site link connection resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Routing weight for vpn connection.
	RoutingWeight *int `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey *string `pulumi:"sharedKey"`
	// Resource type.
	Type string `pulumi:"type"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress *bool `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors *bool `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType *string `pulumi:"vpnConnectionProtocolType"`
	// Id of the connected vpn site link.
	VpnSiteLink *SubResourceResponse `pulumi:"vpnSiteLink"`
}

// VpnSiteLinkConnectionResponseInput is an input type that accepts VpnSiteLinkConnectionResponseArgs and VpnSiteLinkConnectionResponseOutput values.
// You can construct a concrete instance of `VpnSiteLinkConnectionResponseInput` via:
//
//          VpnSiteLinkConnectionResponseArgs{...}
type VpnSiteLinkConnectionResponseInput interface {
	pulumi.Input

	ToVpnSiteLinkConnectionResponseOutput() VpnSiteLinkConnectionResponseOutput
	ToVpnSiteLinkConnectionResponseOutputWithContext(context.Context) VpnSiteLinkConnectionResponseOutput
}

// VpnSiteLinkConnection Resource.
type VpnSiteLinkConnectionResponseArgs struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth pulumi.IntPtrInput `pulumi:"connectionBandwidth"`
	// The connection status.
	ConnectionStatus pulumi.StringInput `pulumi:"connectionStatus"`
	// Egress bytes transferred.
	EgressBytesTransferred pulumi.IntInput `pulumi:"egressBytesTransferred"`
	// EnableBgp flag.
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// EnableBgp flag.
	EnableRateLimiting pulumi.BoolPtrInput `pulumi:"enableRateLimiting"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Ingress bytes transferred.
	IngressBytesTransferred pulumi.IntInput `pulumi:"ingressBytesTransferred"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies IpsecPolicyResponseArrayInput `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the VPN site link connection resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Routing weight for vpn connection.
	RoutingWeight pulumi.IntPtrInput `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// Use local azure ip to initiate connection.
	UseLocalAzureIpAddress pulumi.BoolPtrInput `pulumi:"useLocalAzureIpAddress"`
	// Enable policy-based traffic selectors.
	UsePolicyBasedTrafficSelectors pulumi.BoolPtrInput `pulumi:"usePolicyBasedTrafficSelectors"`
	// Connection protocol used for this connection.
	VpnConnectionProtocolType pulumi.StringPtrInput `pulumi:"vpnConnectionProtocolType"`
	// Id of the connected vpn site link.
	VpnSiteLink SubResourceResponsePtrInput `pulumi:"vpnSiteLink"`
}

func (VpnSiteLinkConnectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLinkConnectionResponse)(nil)).Elem()
}

func (i VpnSiteLinkConnectionResponseArgs) ToVpnSiteLinkConnectionResponseOutput() VpnSiteLinkConnectionResponseOutput {
	return i.ToVpnSiteLinkConnectionResponseOutputWithContext(context.Background())
}

func (i VpnSiteLinkConnectionResponseArgs) ToVpnSiteLinkConnectionResponseOutputWithContext(ctx context.Context) VpnSiteLinkConnectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkConnectionResponseOutput)
}

// VpnSiteLinkConnectionResponseArrayInput is an input type that accepts VpnSiteLinkConnectionResponseArray and VpnSiteLinkConnectionResponseArrayOutput values.
// You can construct a concrete instance of `VpnSiteLinkConnectionResponseArrayInput` via:
//
//          VpnSiteLinkConnectionResponseArray{ VpnSiteLinkConnectionResponseArgs{...} }
type VpnSiteLinkConnectionResponseArrayInput interface {
	pulumi.Input

	ToVpnSiteLinkConnectionResponseArrayOutput() VpnSiteLinkConnectionResponseArrayOutput
	ToVpnSiteLinkConnectionResponseArrayOutputWithContext(context.Context) VpnSiteLinkConnectionResponseArrayOutput
}

type VpnSiteLinkConnectionResponseArray []VpnSiteLinkConnectionResponseInput

func (VpnSiteLinkConnectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLinkConnectionResponse)(nil)).Elem()
}

func (i VpnSiteLinkConnectionResponseArray) ToVpnSiteLinkConnectionResponseArrayOutput() VpnSiteLinkConnectionResponseArrayOutput {
	return i.ToVpnSiteLinkConnectionResponseArrayOutputWithContext(context.Background())
}

func (i VpnSiteLinkConnectionResponseArray) ToVpnSiteLinkConnectionResponseArrayOutputWithContext(ctx context.Context) VpnSiteLinkConnectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkConnectionResponseArrayOutput)
}

// VpnSiteLinkConnection Resource.
type VpnSiteLinkConnectionResponseOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLinkConnectionResponse)(nil)).Elem()
}

func (o VpnSiteLinkConnectionResponseOutput) ToVpnSiteLinkConnectionResponseOutput() VpnSiteLinkConnectionResponseOutput {
	return o
}

func (o VpnSiteLinkConnectionResponseOutput) ToVpnSiteLinkConnectionResponseOutputWithContext(ctx context.Context) VpnSiteLinkConnectionResponseOutput {
	return o
}

// Expected bandwidth in MBPS.
func (o VpnSiteLinkConnectionResponseOutput) ConnectionBandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *int { return v.ConnectionBandwidth }).(pulumi.IntPtrOutput)
}

// The connection status.
func (o VpnSiteLinkConnectionResponseOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) string { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// Egress bytes transferred.
func (o VpnSiteLinkConnectionResponseOutput) EgressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) int { return v.EgressBytesTransferred }).(pulumi.IntOutput)
}

// EnableBgp flag.
func (o VpnSiteLinkConnectionResponseOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// EnableBgp flag.
func (o VpnSiteLinkConnectionResponseOutput) EnableRateLimiting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *bool { return v.EnableRateLimiting }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnSiteLinkConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VpnSiteLinkConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Ingress bytes transferred.
func (o VpnSiteLinkConnectionResponseOutput) IngressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) int { return v.IngressBytesTransferred }).(pulumi.IntOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VpnSiteLinkConnectionResponseOutput) IpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) []IpsecPolicyResponse { return v.IpsecPolicies }).(IpsecPolicyResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnSiteLinkConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN site link connection resource.
func (o VpnSiteLinkConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Routing weight for vpn connection.
func (o VpnSiteLinkConnectionResponseOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

// SharedKey for the vpn connection.
func (o VpnSiteLinkConnectionResponseOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// Resource type.
func (o VpnSiteLinkConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

// Use local azure ip to initiate connection.
func (o VpnSiteLinkConnectionResponseOutput) UseLocalAzureIpAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *bool { return v.UseLocalAzureIpAddress }).(pulumi.BoolPtrOutput)
}

// Enable policy-based traffic selectors.
func (o VpnSiteLinkConnectionResponseOutput) UsePolicyBasedTrafficSelectors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *bool { return v.UsePolicyBasedTrafficSelectors }).(pulumi.BoolPtrOutput)
}

// Connection protocol used for this connection.
func (o VpnSiteLinkConnectionResponseOutput) VpnConnectionProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *string { return v.VpnConnectionProtocolType }).(pulumi.StringPtrOutput)
}

// Id of the connected vpn site link.
func (o VpnSiteLinkConnectionResponseOutput) VpnSiteLink() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VpnSiteLinkConnectionResponse) *SubResourceResponse { return v.VpnSiteLink }).(SubResourceResponsePtrOutput)
}

type VpnSiteLinkConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLinkConnectionResponse)(nil)).Elem()
}

func (o VpnSiteLinkConnectionResponseArrayOutput) ToVpnSiteLinkConnectionResponseArrayOutput() VpnSiteLinkConnectionResponseArrayOutput {
	return o
}

func (o VpnSiteLinkConnectionResponseArrayOutput) ToVpnSiteLinkConnectionResponseArrayOutputWithContext(ctx context.Context) VpnSiteLinkConnectionResponseArrayOutput {
	return o
}

func (o VpnSiteLinkConnectionResponseArrayOutput) Index(i pulumi.IntInput) VpnSiteLinkConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnSiteLinkConnectionResponse {
		return vs[0].([]VpnSiteLinkConnectionResponse)[vs[1].(int)]
	}).(VpnSiteLinkConnectionResponseOutput)
}

// VpnSiteLink Resource.
type VpnSiteLinkResponse struct {
	// The set of bgp properties.
	BgpProperties *VpnLinkBgpSettingsResponse `pulumi:"bgpProperties"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// FQDN of vpn-site-link.
	Fqdn *string `pulumi:"fqdn"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The ip-address for the vpn-site-link.
	IpAddress *string `pulumi:"ipAddress"`
	// The link provider properties.
	LinkProperties *VpnLinkProviderPropertiesResponse `pulumi:"linkProperties"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN site link resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Resource type.
	Type string `pulumi:"type"`
}

// VpnSiteLinkResponseInput is an input type that accepts VpnSiteLinkResponseArgs and VpnSiteLinkResponseOutput values.
// You can construct a concrete instance of `VpnSiteLinkResponseInput` via:
//
//          VpnSiteLinkResponseArgs{...}
type VpnSiteLinkResponseInput interface {
	pulumi.Input

	ToVpnSiteLinkResponseOutput() VpnSiteLinkResponseOutput
	ToVpnSiteLinkResponseOutputWithContext(context.Context) VpnSiteLinkResponseOutput
}

// VpnSiteLink Resource.
type VpnSiteLinkResponseArgs struct {
	// The set of bgp properties.
	BgpProperties VpnLinkBgpSettingsResponsePtrInput `pulumi:"bgpProperties"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// FQDN of vpn-site-link.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The ip-address for the vpn-site-link.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The link provider properties.
	LinkProperties VpnLinkProviderPropertiesResponsePtrInput `pulumi:"linkProperties"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the VPN site link resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (VpnSiteLinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLinkResponse)(nil)).Elem()
}

func (i VpnSiteLinkResponseArgs) ToVpnSiteLinkResponseOutput() VpnSiteLinkResponseOutput {
	return i.ToVpnSiteLinkResponseOutputWithContext(context.Background())
}

func (i VpnSiteLinkResponseArgs) ToVpnSiteLinkResponseOutputWithContext(ctx context.Context) VpnSiteLinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkResponseOutput)
}

// VpnSiteLinkResponseArrayInput is an input type that accepts VpnSiteLinkResponseArray and VpnSiteLinkResponseArrayOutput values.
// You can construct a concrete instance of `VpnSiteLinkResponseArrayInput` via:
//
//          VpnSiteLinkResponseArray{ VpnSiteLinkResponseArgs{...} }
type VpnSiteLinkResponseArrayInput interface {
	pulumi.Input

	ToVpnSiteLinkResponseArrayOutput() VpnSiteLinkResponseArrayOutput
	ToVpnSiteLinkResponseArrayOutputWithContext(context.Context) VpnSiteLinkResponseArrayOutput
}

type VpnSiteLinkResponseArray []VpnSiteLinkResponseInput

func (VpnSiteLinkResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLinkResponse)(nil)).Elem()
}

func (i VpnSiteLinkResponseArray) ToVpnSiteLinkResponseArrayOutput() VpnSiteLinkResponseArrayOutput {
	return i.ToVpnSiteLinkResponseArrayOutputWithContext(context.Background())
}

func (i VpnSiteLinkResponseArray) ToVpnSiteLinkResponseArrayOutputWithContext(ctx context.Context) VpnSiteLinkResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnSiteLinkResponseArrayOutput)
}

// VpnSiteLink Resource.
type VpnSiteLinkResponseOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnSiteLinkResponse)(nil)).Elem()
}

func (o VpnSiteLinkResponseOutput) ToVpnSiteLinkResponseOutput() VpnSiteLinkResponseOutput {
	return o
}

func (o VpnSiteLinkResponseOutput) ToVpnSiteLinkResponseOutputWithContext(ctx context.Context) VpnSiteLinkResponseOutput {
	return o
}

// The set of bgp properties.
func (o VpnSiteLinkResponseOutput) BgpProperties() VpnLinkBgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) *VpnLinkBgpSettingsResponse { return v.BgpProperties }).(VpnLinkBgpSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnSiteLinkResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// FQDN of vpn-site-link.
func (o VpnSiteLinkResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VpnSiteLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ip-address for the vpn-site-link.
func (o VpnSiteLinkResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The link provider properties.
func (o VpnSiteLinkResponseOutput) LinkProperties() VpnLinkProviderPropertiesResponsePtrOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) *VpnLinkProviderPropertiesResponse { return v.LinkProperties }).(VpnLinkProviderPropertiesResponsePtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnSiteLinkResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN site link resource.
func (o VpnSiteLinkResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Resource type.
func (o VpnSiteLinkResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VpnSiteLinkResponse) string { return v.Type }).(pulumi.StringOutput)
}

type VpnSiteLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnSiteLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnSiteLinkResponse)(nil)).Elem()
}

func (o VpnSiteLinkResponseArrayOutput) ToVpnSiteLinkResponseArrayOutput() VpnSiteLinkResponseArrayOutput {
	return o
}

func (o VpnSiteLinkResponseArrayOutput) ToVpnSiteLinkResponseArrayOutputWithContext(ctx context.Context) VpnSiteLinkResponseArrayOutput {
	return o
}

func (o VpnSiteLinkResponseArrayOutput) Index(i pulumi.IntInput) VpnSiteLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnSiteLinkResponse {
		return vs[0].([]VpnSiteLinkResponse)[vs[1].(int)]
	}).(VpnSiteLinkResponseOutput)
}

// Defines contents of a web application rule.
type WebApplicationFirewallCustomRule struct {
	// Type of Actions.
	Action string `pulumi:"action"`
	// List of match conditions.
	MatchConditions []MatchCondition `pulumi:"matchConditions"`
	// The name of the resource that is unique within a policy. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
	Priority int `pulumi:"priority"`
	// The rule type.
	RuleType string `pulumi:"ruleType"`
}

// WebApplicationFirewallCustomRuleInput is an input type that accepts WebApplicationFirewallCustomRuleArgs and WebApplicationFirewallCustomRuleOutput values.
// You can construct a concrete instance of `WebApplicationFirewallCustomRuleInput` via:
//
//          WebApplicationFirewallCustomRuleArgs{...}
type WebApplicationFirewallCustomRuleInput interface {
	pulumi.Input

	ToWebApplicationFirewallCustomRuleOutput() WebApplicationFirewallCustomRuleOutput
	ToWebApplicationFirewallCustomRuleOutputWithContext(context.Context) WebApplicationFirewallCustomRuleOutput
}

// Defines contents of a web application rule.
type WebApplicationFirewallCustomRuleArgs struct {
	// Type of Actions.
	Action pulumi.StringInput `pulumi:"action"`
	// List of match conditions.
	MatchConditions MatchConditionArrayInput `pulumi:"matchConditions"`
	// The name of the resource that is unique within a policy. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The rule type.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (WebApplicationFirewallCustomRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationFirewallCustomRule)(nil)).Elem()
}

func (i WebApplicationFirewallCustomRuleArgs) ToWebApplicationFirewallCustomRuleOutput() WebApplicationFirewallCustomRuleOutput {
	return i.ToWebApplicationFirewallCustomRuleOutputWithContext(context.Background())
}

func (i WebApplicationFirewallCustomRuleArgs) ToWebApplicationFirewallCustomRuleOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationFirewallCustomRuleOutput)
}

// WebApplicationFirewallCustomRuleArrayInput is an input type that accepts WebApplicationFirewallCustomRuleArray and WebApplicationFirewallCustomRuleArrayOutput values.
// You can construct a concrete instance of `WebApplicationFirewallCustomRuleArrayInput` via:
//
//          WebApplicationFirewallCustomRuleArray{ WebApplicationFirewallCustomRuleArgs{...} }
type WebApplicationFirewallCustomRuleArrayInput interface {
	pulumi.Input

	ToWebApplicationFirewallCustomRuleArrayOutput() WebApplicationFirewallCustomRuleArrayOutput
	ToWebApplicationFirewallCustomRuleArrayOutputWithContext(context.Context) WebApplicationFirewallCustomRuleArrayOutput
}

type WebApplicationFirewallCustomRuleArray []WebApplicationFirewallCustomRuleInput

func (WebApplicationFirewallCustomRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationFirewallCustomRule)(nil)).Elem()
}

func (i WebApplicationFirewallCustomRuleArray) ToWebApplicationFirewallCustomRuleArrayOutput() WebApplicationFirewallCustomRuleArrayOutput {
	return i.ToWebApplicationFirewallCustomRuleArrayOutputWithContext(context.Background())
}

func (i WebApplicationFirewallCustomRuleArray) ToWebApplicationFirewallCustomRuleArrayOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationFirewallCustomRuleArrayOutput)
}

// Defines contents of a web application rule.
type WebApplicationFirewallCustomRuleOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallCustomRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationFirewallCustomRule)(nil)).Elem()
}

func (o WebApplicationFirewallCustomRuleOutput) ToWebApplicationFirewallCustomRuleOutput() WebApplicationFirewallCustomRuleOutput {
	return o
}

func (o WebApplicationFirewallCustomRuleOutput) ToWebApplicationFirewallCustomRuleOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleOutput {
	return o
}

// Type of Actions.
func (o WebApplicationFirewallCustomRuleOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) string { return v.Action }).(pulumi.StringOutput)
}

// List of match conditions.
func (o WebApplicationFirewallCustomRuleOutput) MatchConditions() MatchConditionArrayOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) []MatchCondition { return v.MatchConditions }).(MatchConditionArrayOutput)
}

// The name of the resource that is unique within a policy. This name can be used to access the resource.
func (o WebApplicationFirewallCustomRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
func (o WebApplicationFirewallCustomRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) int { return v.Priority }).(pulumi.IntOutput)
}

// The rule type.
func (o WebApplicationFirewallCustomRuleOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRule) string { return v.RuleType }).(pulumi.StringOutput)
}

type WebApplicationFirewallCustomRuleArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallCustomRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationFirewallCustomRule)(nil)).Elem()
}

func (o WebApplicationFirewallCustomRuleArrayOutput) ToWebApplicationFirewallCustomRuleArrayOutput() WebApplicationFirewallCustomRuleArrayOutput {
	return o
}

func (o WebApplicationFirewallCustomRuleArrayOutput) ToWebApplicationFirewallCustomRuleArrayOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleArrayOutput {
	return o
}

func (o WebApplicationFirewallCustomRuleArrayOutput) Index(i pulumi.IntInput) WebApplicationFirewallCustomRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationFirewallCustomRule {
		return vs[0].([]WebApplicationFirewallCustomRule)[vs[1].(int)]
	}).(WebApplicationFirewallCustomRuleOutput)
}

// Defines contents of a web application rule.
type WebApplicationFirewallCustomRuleResponse struct {
	// Type of Actions.
	Action string `pulumi:"action"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// List of match conditions.
	MatchConditions []MatchConditionResponse `pulumi:"matchConditions"`
	// The name of the resource that is unique within a policy. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
	Priority int `pulumi:"priority"`
	// The rule type.
	RuleType string `pulumi:"ruleType"`
}

// WebApplicationFirewallCustomRuleResponseInput is an input type that accepts WebApplicationFirewallCustomRuleResponseArgs and WebApplicationFirewallCustomRuleResponseOutput values.
// You can construct a concrete instance of `WebApplicationFirewallCustomRuleResponseInput` via:
//
//          WebApplicationFirewallCustomRuleResponseArgs{...}
type WebApplicationFirewallCustomRuleResponseInput interface {
	pulumi.Input

	ToWebApplicationFirewallCustomRuleResponseOutput() WebApplicationFirewallCustomRuleResponseOutput
	ToWebApplicationFirewallCustomRuleResponseOutputWithContext(context.Context) WebApplicationFirewallCustomRuleResponseOutput
}

// Defines contents of a web application rule.
type WebApplicationFirewallCustomRuleResponseArgs struct {
	// Type of Actions.
	Action pulumi.StringInput `pulumi:"action"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// List of match conditions.
	MatchConditions MatchConditionResponseArrayInput `pulumi:"matchConditions"`
	// The name of the resource that is unique within a policy. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
	Priority pulumi.IntInput `pulumi:"priority"`
	// The rule type.
	RuleType pulumi.StringInput `pulumi:"ruleType"`
}

func (WebApplicationFirewallCustomRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationFirewallCustomRuleResponse)(nil)).Elem()
}

func (i WebApplicationFirewallCustomRuleResponseArgs) ToWebApplicationFirewallCustomRuleResponseOutput() WebApplicationFirewallCustomRuleResponseOutput {
	return i.ToWebApplicationFirewallCustomRuleResponseOutputWithContext(context.Background())
}

func (i WebApplicationFirewallCustomRuleResponseArgs) ToWebApplicationFirewallCustomRuleResponseOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationFirewallCustomRuleResponseOutput)
}

// WebApplicationFirewallCustomRuleResponseArrayInput is an input type that accepts WebApplicationFirewallCustomRuleResponseArray and WebApplicationFirewallCustomRuleResponseArrayOutput values.
// You can construct a concrete instance of `WebApplicationFirewallCustomRuleResponseArrayInput` via:
//
//          WebApplicationFirewallCustomRuleResponseArray{ WebApplicationFirewallCustomRuleResponseArgs{...} }
type WebApplicationFirewallCustomRuleResponseArrayInput interface {
	pulumi.Input

	ToWebApplicationFirewallCustomRuleResponseArrayOutput() WebApplicationFirewallCustomRuleResponseArrayOutput
	ToWebApplicationFirewallCustomRuleResponseArrayOutputWithContext(context.Context) WebApplicationFirewallCustomRuleResponseArrayOutput
}

type WebApplicationFirewallCustomRuleResponseArray []WebApplicationFirewallCustomRuleResponseInput

func (WebApplicationFirewallCustomRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationFirewallCustomRuleResponse)(nil)).Elem()
}

func (i WebApplicationFirewallCustomRuleResponseArray) ToWebApplicationFirewallCustomRuleResponseArrayOutput() WebApplicationFirewallCustomRuleResponseArrayOutput {
	return i.ToWebApplicationFirewallCustomRuleResponseArrayOutputWithContext(context.Background())
}

func (i WebApplicationFirewallCustomRuleResponseArray) ToWebApplicationFirewallCustomRuleResponseArrayOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationFirewallCustomRuleResponseArrayOutput)
}

// Defines contents of a web application rule.
type WebApplicationFirewallCustomRuleResponseOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallCustomRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationFirewallCustomRuleResponse)(nil)).Elem()
}

func (o WebApplicationFirewallCustomRuleResponseOutput) ToWebApplicationFirewallCustomRuleResponseOutput() WebApplicationFirewallCustomRuleResponseOutput {
	return o
}

func (o WebApplicationFirewallCustomRuleResponseOutput) ToWebApplicationFirewallCustomRuleResponseOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleResponseOutput {
	return o
}

// Type of Actions.
func (o WebApplicationFirewallCustomRuleResponseOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) string { return v.Action }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o WebApplicationFirewallCustomRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// List of match conditions.
func (o WebApplicationFirewallCustomRuleResponseOutput) MatchConditions() MatchConditionResponseArrayOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) []MatchConditionResponse { return v.MatchConditions }).(MatchConditionResponseArrayOutput)
}

// The name of the resource that is unique within a policy. This name can be used to access the resource.
func (o WebApplicationFirewallCustomRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
func (o WebApplicationFirewallCustomRuleResponseOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) int { return v.Priority }).(pulumi.IntOutput)
}

// The rule type.
func (o WebApplicationFirewallCustomRuleResponseOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationFirewallCustomRuleResponse) string { return v.RuleType }).(pulumi.StringOutput)
}

type WebApplicationFirewallCustomRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationFirewallCustomRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationFirewallCustomRuleResponse)(nil)).Elem()
}

func (o WebApplicationFirewallCustomRuleResponseArrayOutput) ToWebApplicationFirewallCustomRuleResponseArrayOutput() WebApplicationFirewallCustomRuleResponseArrayOutput {
	return o
}

func (o WebApplicationFirewallCustomRuleResponseArrayOutput) ToWebApplicationFirewallCustomRuleResponseArrayOutputWithContext(ctx context.Context) WebApplicationFirewallCustomRuleResponseArrayOutput {
	return o
}

func (o WebApplicationFirewallCustomRuleResponseArrayOutput) Index(i pulumi.IntInput) WebApplicationFirewallCustomRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationFirewallCustomRuleResponse {
		return vs[0].([]WebApplicationFirewallCustomRuleResponse)[vs[1].(int)]
	}).(WebApplicationFirewallCustomRuleResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(ARecordOutput{})
	pulumi.RegisterOutputType(ARecordArrayOutput{})
	pulumi.RegisterOutputType(ARecordResponseOutput{})
	pulumi.RegisterOutputType(ARecordResponseArrayOutput{})
	pulumi.RegisterOutputType(AaaaRecordOutput{})
	pulumi.RegisterOutputType(AaaaRecordArrayOutput{})
	pulumi.RegisterOutputType(AaaaRecordResponseOutput{})
	pulumi.RegisterOutputType(AaaaRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(AadAuthenticationParametersOutput{})
	pulumi.RegisterOutputType(AadAuthenticationParametersPtrOutput{})
	pulumi.RegisterOutputType(AadAuthenticationParametersResponseOutput{})
	pulumi.RegisterOutputType(AadAuthenticationParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceOutput{})
	pulumi.RegisterOutputType(AddressSpacePtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceResponseOutput{})
	pulumi.RegisterOutputType(AddressSpaceResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificateOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificateArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificateResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHealthHttpSettingsResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHealthServerResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHealthServerResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayClientAuthConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayClientAuthConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayClientAuthConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayClientAuthConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayConnectionDrainingOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayConnectionDrainingPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayConnectionDrainingResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayConnectionDrainingResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayCustomErrorOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayCustomErrorArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayCustomErrorResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayCustomErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallDisabledRuleGroupOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallDisabledRuleGroupArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallDisabledRuleGroupResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallExclusionOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallExclusionArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallExclusionResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallExclusionResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHeaderConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHeaderConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHeaderConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHeaderConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkIpConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkIpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPrivateLinkIpConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeHealthResponseMatchOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeHealthResponseMatchPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeHealthResponseMatchResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleActionSetOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleActionSetPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleActionSetResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleActionSetResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleConditionOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleConditionResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleConditionResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRewriteRuleSetResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslPolicyOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslPolicyPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslPolicyResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslProfileOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslProfileArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslProfileResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedClientCertificateOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedClientCertificateArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedClientCertificateResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedClientCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedRootCertificateOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayTrustedRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWebApplicationFirewallConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationRuleOutput{})
	pulumi.RegisterOutputType(ApplicationRuleConditionOutput{})
	pulumi.RegisterOutputType(ApplicationRuleConditionResponseOutput{})
	pulumi.RegisterOutputType(ApplicationRuleResponseOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupTypeOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupTypeArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupResponseOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleProtocolOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleProtocolArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleProtocolResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleProtocolResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallIpGroupsResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallIpGroupsResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRCActionOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRCActionPtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRCActionResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRCActionResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleCollectionOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleCollectionResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleCollectionResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallNatRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallPublicIPAddressOutput{})
	pulumi.RegisterOutputType(AzureFirewallPublicIPAddressArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallPublicIPAddressResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallPublicIPAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallRCActionOutput{})
	pulumi.RegisterOutputType(AzureFirewallRCActionPtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallRCActionResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallRCActionResponsePtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallSkuOutput{})
	pulumi.RegisterOutputType(AzureFirewallSkuPtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallSkuResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendOutput{})
	pulumi.RegisterOutputType(BackendArrayOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolArrayOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolResponseOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(BackendPoolOutput{})
	pulumi.RegisterOutputType(BackendPoolArrayOutput{})
	pulumi.RegisterOutputType(BackendPoolResponseOutput{})
	pulumi.RegisterOutputType(BackendPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(BackendPoolsSettingsOutput{})
	pulumi.RegisterOutputType(BackendPoolsSettingsPtrOutput{})
	pulumi.RegisterOutputType(BackendPoolsSettingsResponseOutput{})
	pulumi.RegisterOutputType(BackendPoolsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendResponseOutput{})
	pulumi.RegisterOutputType(BackendResponseArrayOutput{})
	pulumi.RegisterOutputType(BastionActiveSessionResponseOutput{})
	pulumi.RegisterOutputType(BastionActiveSessionResponseArrayOutput{})
	pulumi.RegisterOutputType(BastionHostIPConfigurationOutput{})
	pulumi.RegisterOutputType(BastionHostIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(BastionHostIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(BastionHostIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(BastionShareableLinkOutput{})
	pulumi.RegisterOutputType(BastionShareableLinkArrayOutput{})
	pulumi.RegisterOutputType(BastionShareableLinkResponseOutput{})
	pulumi.RegisterOutputType(BastionShareableLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(BgpPeerStatusResponseOutput{})
	pulumi.RegisterOutputType(BgpPeerStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(BgpSettingsOutput{})
	pulumi.RegisterOutputType(BgpSettingsPtrOutput{})
	pulumi.RegisterOutputType(BgpSettingsResponseOutput{})
	pulumi.RegisterOutputType(BgpSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(BreakOutCategoryPoliciesOutput{})
	pulumi.RegisterOutputType(BreakOutCategoryPoliciesPtrOutput{})
	pulumi.RegisterOutputType(BreakOutCategoryPoliciesResponseOutput{})
	pulumi.RegisterOutputType(BreakOutCategoryPoliciesResponsePtrOutput{})
	pulumi.RegisterOutputType(CacheConfigurationOutput{})
	pulumi.RegisterOutputType(CacheConfigurationPtrOutput{})
	pulumi.RegisterOutputType(CacheConfigurationResponseOutput{})
	pulumi.RegisterOutputType(CacheConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(CnameRecordOutput{})
	pulumi.RegisterOutputType(CnameRecordPtrOutput{})
	pulumi.RegisterOutputType(CnameRecordResponseOutput{})
	pulumi.RegisterOutputType(CnameRecordResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorDestinationOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorDestinationPtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorDestinationResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorDestinationResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointFilterOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointFilterPtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointFilterItemOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointFilterItemArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointFilterItemResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointFilterItemResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointFilterResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointFilterResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointScopeOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointScopePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointScopeItemOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointScopeItemArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointScopeItemResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointScopeItemResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointScopeResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorEndpointScopeResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorHttpConfigurationOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorHttpConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorHttpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorHttpConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorIcmpConfigurationOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorIcmpConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorIcmpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorIcmpConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorOutputOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorOutputArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorOutputResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorOutputResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSourceOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSourcePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSourceResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSourceResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSuccessThresholdOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSuccessThresholdPtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSuccessThresholdResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSuccessThresholdResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTcpConfigurationOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTcpConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTcpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTcpConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTestConfigurationOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTestConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTestConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTestConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTestGroupOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTestGroupArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTestGroupResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorTestGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorWorkspaceSettingsOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorWorkspaceSettingsPtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorWorkspaceSettingsResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorWorkspaceSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceConfigurationOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceIpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceIpConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceResponseOutput{})
	pulumi.RegisterOutputType(ContainerNetworkInterfaceResponseArrayOutput{})
	pulumi.RegisterOutputType(ContainerResponseOutput{})
	pulumi.RegisterOutputType(ContainerResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomDnsConfigPropertiesFormatOutput{})
	pulumi.RegisterOutputType(CustomDnsConfigPropertiesFormatArrayOutput{})
	pulumi.RegisterOutputType(CustomDnsConfigPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(CustomDnsConfigPropertiesFormatResponseArrayOutput{})
	pulumi.RegisterOutputType(CustomHttpsConfigurationResponseOutput{})
	pulumi.RegisterOutputType(CustomRuleOutput{})
	pulumi.RegisterOutputType(CustomRuleArrayOutput{})
	pulumi.RegisterOutputType(CustomRuleListOutput{})
	pulumi.RegisterOutputType(CustomRuleListPtrOutput{})
	pulumi.RegisterOutputType(CustomRuleListResponseOutput{})
	pulumi.RegisterOutputType(CustomRuleListResponsePtrOutput{})
	pulumi.RegisterOutputType(CustomRuleResponseOutput{})
	pulumi.RegisterOutputType(CustomRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(DdosSettingsOutput{})
	pulumi.RegisterOutputType(DdosSettingsPtrOutput{})
	pulumi.RegisterOutputType(DdosSettingsResponseOutput{})
	pulumi.RegisterOutputType(DdosSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DelegationOutput{})
	pulumi.RegisterOutputType(DelegationArrayOutput{})
	pulumi.RegisterOutputType(DelegationResponseOutput{})
	pulumi.RegisterOutputType(DelegationResponseArrayOutput{})
	pulumi.RegisterOutputType(DevicePropertiesOutput{})
	pulumi.RegisterOutputType(DevicePropertiesPtrOutput{})
	pulumi.RegisterOutputType(DevicePropertiesResponseOutput{})
	pulumi.RegisterOutputType(DevicePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DhcpOptionsOutput{})
	pulumi.RegisterOutputType(DhcpOptionsPtrOutput{})
	pulumi.RegisterOutputType(DhcpOptionsResponseOutput{})
	pulumi.RegisterOutputType(DhcpOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(DnsConfigOutput{})
	pulumi.RegisterOutputType(DnsConfigPtrOutput{})
	pulumi.RegisterOutputType(DnsConfigResponseOutput{})
	pulumi.RegisterOutputType(DnsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(DnsResourceReferenceResponseOutput{})
	pulumi.RegisterOutputType(DnsResourceReferenceResponseArrayOutput{})
	pulumi.RegisterOutputType(DnsSettingsOutput{})
	pulumi.RegisterOutputType(DnsSettingsPtrOutput{})
	pulumi.RegisterOutputType(DnsSettingsResponseOutput{})
	pulumi.RegisterOutputType(DnsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(EndpointTypeOutput{})
	pulumi.RegisterOutputType(EndpointTypePtrOutput{})
	pulumi.RegisterOutputType(EndpointTypeArrayOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesCustomHeadersOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesCustomHeadersArrayOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesResponseCustomHeadersOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesResponseCustomHeadersArrayOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesResponseSubnetsOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesResponseSubnetsArrayOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesSubnetsOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesSubnetsArrayOutput{})
	pulumi.RegisterOutputType(EndpointResponseOutput{})
	pulumi.RegisterOutputType(EndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(EndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(EndpointServiceOutput{})
	pulumi.RegisterOutputType(EndpointServicePtrOutput{})
	pulumi.RegisterOutputType(EndpointServiceResponseOutput{})
	pulumi.RegisterOutputType(EndpointServiceResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationTypeOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationTypeArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionTypeOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionTypeArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringTypeOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringTypeArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringIdOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringIdPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringIdResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringIdResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionIdResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionIdResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesAutoScaleConfigurationOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesAutoScaleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesBoundsOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesBoundsPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesResponseAutoScaleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesResponseBoundsOutput{})
	pulumi.RegisterOutputType(ExpressRouteGatewayPropertiesResponseBoundsPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkMacSecConfigOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkMacSecConfigPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkMacSecConfigResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkMacSecConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(ExtendedLocationOutput{})
	pulumi.RegisterOutputType(ExtendedLocationPtrOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponseOutput{})
	pulumi.RegisterOutputType(ExtendedLocationResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyCertificateAuthorityOutput{})
	pulumi.RegisterOutputType(FirewallPolicyCertificateAuthorityPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyCertificateAuthorityResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyCertificateAuthorityResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleActionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleActionPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleActionResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleActionResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleCollectionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleCollectionActionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleCollectionActionPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleCollectionActionResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleCollectionActionResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleCollectionResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyFilterRuleResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionBypassTrafficSpecificationsResponseArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionConfigurationOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionConfigurationResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionSignatureSpecificationOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionSignatureSpecificationArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionSignatureSpecificationResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyIntrusionDetectionSignatureSpecificationResponseArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleActionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleActionPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleActionResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleActionResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleCollectionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleCollectionActionOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleCollectionActionPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleCollectionActionResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleCollectionActionResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleCollectionResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyNatRuleResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleApplicationProtocolOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleApplicationProtocolArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleApplicationProtocolResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleApplicationProtocolResponseArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleConditionApplicationProtocolOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleConditionApplicationProtocolArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleConditionApplicationProtocolResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyRuleConditionApplicationProtocolResponseArrayOutput{})
	pulumi.RegisterOutputType(FirewallPolicySkuOutput{})
	pulumi.RegisterOutputType(FirewallPolicySkuPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicySkuResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicySkuResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyThreatIntelWhitelistOutput{})
	pulumi.RegisterOutputType(FirewallPolicyThreatIntelWhitelistPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyThreatIntelWhitelistResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyThreatIntelWhitelistResponsePtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyTransportSecurityOutput{})
	pulumi.RegisterOutputType(FirewallPolicyTransportSecurityPtrOutput{})
	pulumi.RegisterOutputType(FirewallPolicyTransportSecurityResponseOutput{})
	pulumi.RegisterOutputType(FirewallPolicyTransportSecurityResponsePtrOutput{})
	pulumi.RegisterOutputType(FlowLogFormatParametersOutput{})
	pulumi.RegisterOutputType(FlowLogFormatParametersPtrOutput{})
	pulumi.RegisterOutputType(FlowLogFormatParametersResponseOutput{})
	pulumi.RegisterOutputType(FlowLogFormatParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(FlowLogResponseOutput{})
	pulumi.RegisterOutputType(FlowLogResponseArrayOutput{})
	pulumi.RegisterOutputType(ForwardingConfigurationOutput{})
	pulumi.RegisterOutputType(ForwardingConfigurationResponseOutput{})
	pulumi.RegisterOutputType(FrontendEndpointOutput{})
	pulumi.RegisterOutputType(FrontendEndpointArrayOutput{})
	pulumi.RegisterOutputType(FrontendEndpointLinkResponseOutput{})
	pulumi.RegisterOutputType(FrontendEndpointLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(FrontendEndpointResponseOutput{})
	pulumi.RegisterOutputType(FrontendEndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput{})
	pulumi.RegisterOutputType(FrontendEndpointUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput{})
	pulumi.RegisterOutputType(FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkOutput{})
	pulumi.RegisterOutputType(FrontendEndpointUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(GatewayRouteResponseOutput{})
	pulumi.RegisterOutputType(GatewayRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(HTTPHeaderOutput{})
	pulumi.RegisterOutputType(HTTPHeaderArrayOutput{})
	pulumi.RegisterOutputType(HTTPHeaderResponseOutput{})
	pulumi.RegisterOutputType(HTTPHeaderResponseArrayOutput{})
	pulumi.RegisterOutputType(HeaderActionOutput{})
	pulumi.RegisterOutputType(HeaderActionArrayOutput{})
	pulumi.RegisterOutputType(HeaderActionResponseOutput{})
	pulumi.RegisterOutputType(HeaderActionResponseArrayOutput{})
	pulumi.RegisterOutputType(HealthProbeSettingsModelOutput{})
	pulumi.RegisterOutputType(HealthProbeSettingsModelArrayOutput{})
	pulumi.RegisterOutputType(HealthProbeSettingsModelResponseOutput{})
	pulumi.RegisterOutputType(HealthProbeSettingsModelResponseArrayOutput{})
	pulumi.RegisterOutputType(HubIPAddressesOutput{})
	pulumi.RegisterOutputType(HubIPAddressesPtrOutput{})
	pulumi.RegisterOutputType(HubIPAddressesResponseOutput{})
	pulumi.RegisterOutputType(HubIPAddressesResponsePtrOutput{})
	pulumi.RegisterOutputType(HubPublicIPAddressesOutput{})
	pulumi.RegisterOutputType(HubPublicIPAddressesPtrOutput{})
	pulumi.RegisterOutputType(HubPublicIPAddressesResponseOutput{})
	pulumi.RegisterOutputType(HubPublicIPAddressesResponsePtrOutput{})
	pulumi.RegisterOutputType(HubRouteOutput{})
	pulumi.RegisterOutputType(HubRouteArrayOutput{})
	pulumi.RegisterOutputType(HubRouteResponseOutput{})
	pulumi.RegisterOutputType(HubRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationBgpPeeringAddressOutput{})
	pulumi.RegisterOutputType(IPConfigurationBgpPeeringAddressArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationBgpPeeringAddressResponseOutput{})
	pulumi.RegisterOutputType(IPConfigurationBgpPeeringAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfileOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfileArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfileResponseOutput{})
	pulumi.RegisterOutputType(IPConfigurationProfileResponseArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(InboundNatPoolOutput{})
	pulumi.RegisterOutputType(InboundNatPoolArrayOutput{})
	pulumi.RegisterOutputType(InboundNatPoolResponseOutput{})
	pulumi.RegisterOutputType(InboundNatPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(InboundNatRuleTypeOutput{})
	pulumi.RegisterOutputType(InboundNatRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(InboundNatRuleResponseOutput{})
	pulumi.RegisterOutputType(InboundNatRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(InterfaceEndpointResponseOutput{})
	pulumi.RegisterOutputType(IpTagOutput{})
	pulumi.RegisterOutputType(IpTagArrayOutput{})
	pulumi.RegisterOutputType(IpTagResponseOutput{})
	pulumi.RegisterOutputType(IpTagResponseArrayOutput{})
	pulumi.RegisterOutputType(IpsecPolicyOutput{})
	pulumi.RegisterOutputType(IpsecPolicyArrayOutput{})
	pulumi.RegisterOutputType(IpsecPolicyResponseOutput{})
	pulumi.RegisterOutputType(IpsecPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(Ipv6CircuitConnectionConfigOutput{})
	pulumi.RegisterOutputType(Ipv6CircuitConnectionConfigPtrOutput{})
	pulumi.RegisterOutputType(Ipv6CircuitConnectionConfigResponseOutput{})
	pulumi.RegisterOutputType(Ipv6CircuitConnectionConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(Ipv6ExpressRouteCircuitPeeringConfigOutput{})
	pulumi.RegisterOutputType(Ipv6ExpressRouteCircuitPeeringConfigPtrOutput{})
	pulumi.RegisterOutputType(Ipv6ExpressRouteCircuitPeeringConfigResponseOutput{})
	pulumi.RegisterOutputType(Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(KeyVaultCertificateSourceParametersResponseVaultOutput{})
	pulumi.RegisterOutputType(KeyVaultCertificateSourceParametersResponseVaultPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerBackendAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerSkuOutput{})
	pulumi.RegisterOutputType(LoadBalancerSkuPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerSkuResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancingSettingsModelOutput{})
	pulumi.RegisterOutputType(LoadBalancingSettingsModelArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancingSettingsModelResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancingSettingsModelResponseArrayOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayTypeOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayTypePtrOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayResponseOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedRuleExclusionOutput{})
	pulumi.RegisterOutputType(ManagedRuleExclusionResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleGroupOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleOverrideResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetArrayOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListPtrOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetListResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetResponseOutput{})
	pulumi.RegisterOutputType(ManagedRuleSetResponseArrayOutput{})
	pulumi.RegisterOutputType(ManagedRulesDefinitionOutput{})
	pulumi.RegisterOutputType(ManagedRulesDefinitionPtrOutput{})
	pulumi.RegisterOutputType(ManagedRulesDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ManagedRulesDefinitionResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityPtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponsePtrOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseUserAssignedIdentitiesOutput{})
	pulumi.RegisterOutputType(ManagedServiceIdentityResponseUserAssignedIdentitiesMapOutput{})
	pulumi.RegisterOutputType(MatchConditionOutput{})
	pulumi.RegisterOutputType(MatchConditionArrayOutput{})
	pulumi.RegisterOutputType(MatchConditionResponseOutput{})
	pulumi.RegisterOutputType(MatchConditionResponseArrayOutput{})
	pulumi.RegisterOutputType(MatchVariableOutput{})
	pulumi.RegisterOutputType(MatchVariableArrayOutput{})
	pulumi.RegisterOutputType(MatchVariableResponseOutput{})
	pulumi.RegisterOutputType(MatchVariableResponseArrayOutput{})
	pulumi.RegisterOutputType(MonitorConfigOutput{})
	pulumi.RegisterOutputType(MonitorConfigPtrOutput{})
	pulumi.RegisterOutputType(MonitorConfigCustomHeadersOutput{})
	pulumi.RegisterOutputType(MonitorConfigCustomHeadersArrayOutput{})
	pulumi.RegisterOutputType(MonitorConfigExpectedStatusCodeRangesOutput{})
	pulumi.RegisterOutputType(MonitorConfigExpectedStatusCodeRangesArrayOutput{})
	pulumi.RegisterOutputType(MonitorConfigResponseOutput{})
	pulumi.RegisterOutputType(MonitorConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(MonitorConfigResponseCustomHeadersOutput{})
	pulumi.RegisterOutputType(MonitorConfigResponseCustomHeadersArrayOutput{})
	pulumi.RegisterOutputType(MonitorConfigResponseExpectedStatusCodeRangesOutput{})
	pulumi.RegisterOutputType(MonitorConfigResponseExpectedStatusCodeRangesArrayOutput{})
	pulumi.RegisterOutputType(MxRecordOutput{})
	pulumi.RegisterOutputType(MxRecordArrayOutput{})
	pulumi.RegisterOutputType(MxRecordResponseOutput{})
	pulumi.RegisterOutputType(MxRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(NatGatewaySkuOutput{})
	pulumi.RegisterOutputType(NatGatewaySkuPtrOutput{})
	pulumi.RegisterOutputType(NatGatewaySkuResponseOutput{})
	pulumi.RegisterOutputType(NatGatewaySkuResponsePtrOutput{})
	pulumi.RegisterOutputType(NatRuleOutput{})
	pulumi.RegisterOutputType(NatRuleConditionOutput{})
	pulumi.RegisterOutputType(NatRuleConditionResponseOutput{})
	pulumi.RegisterOutputType(NatRuleResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsPtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationPtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationPrivateLinkConnectionPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTapConfigurationResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTapConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkRuleOutput{})
	pulumi.RegisterOutputType(NetworkRuleConditionOutput{})
	pulumi.RegisterOutputType(NetworkRuleConditionResponseOutput{})
	pulumi.RegisterOutputType(NetworkRuleResponseOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupTypeOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupTypePtrOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupResponseOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupResponsePtrOutput{})
	pulumi.RegisterOutputType(O365BreakOutCategoryPoliciesOutput{})
	pulumi.RegisterOutputType(O365BreakOutCategoryPoliciesPtrOutput{})
	pulumi.RegisterOutputType(O365BreakOutCategoryPoliciesResponseOutput{})
	pulumi.RegisterOutputType(O365BreakOutCategoryPoliciesResponsePtrOutput{})
	pulumi.RegisterOutputType(O365PolicyPropertiesOutput{})
	pulumi.RegisterOutputType(O365PolicyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(O365PolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(O365PolicyPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(Office365PolicyPropertiesOutput{})
	pulumi.RegisterOutputType(Office365PolicyPropertiesPtrOutput{})
	pulumi.RegisterOutputType(Office365PolicyPropertiesResponseOutput{})
	pulumi.RegisterOutputType(Office365PolicyPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(OutboundRuleOutput{})
	pulumi.RegisterOutputType(OutboundRuleArrayOutput{})
	pulumi.RegisterOutputType(OutboundRuleResponseOutput{})
	pulumi.RegisterOutputType(OutboundRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(OwaspCrsExclusionEntryOutput{})
	pulumi.RegisterOutputType(OwaspCrsExclusionEntryArrayOutput{})
	pulumi.RegisterOutputType(OwaspCrsExclusionEntryResponseOutput{})
	pulumi.RegisterOutputType(OwaspCrsExclusionEntryResponseArrayOutput{})
	pulumi.RegisterOutputType(P2SConnectionConfigurationOutput{})
	pulumi.RegisterOutputType(P2SConnectionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(P2SConnectionConfigurationResponseOutput{})
	pulumi.RegisterOutputType(P2SConnectionConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnGatewayResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnGatewayResponseArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusClientRootCertificateOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusClientRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusClientRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusServerRootCertificateOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusServerRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusServerRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigRadiusServerRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRevokedCertificateOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRevokedCertificateArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRevokedCertificateResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRevokedCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRootCertificateOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(P2SVpnServerConfigVpnClientRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterArrayOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterResponseOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterResponseArrayOutput{})
	pulumi.RegisterOutputType(PacketCaptureStorageLocationOutput{})
	pulumi.RegisterOutputType(PacketCaptureStorageLocationPtrOutput{})
	pulumi.RegisterOutputType(PacketCaptureStorageLocationResponseOutput{})
	pulumi.RegisterOutputType(PacketCaptureStorageLocationResponsePtrOutput{})
	pulumi.RegisterOutputType(PeerExpressRouteCircuitConnectionResponseOutput{})
	pulumi.RegisterOutputType(PeerExpressRouteCircuitConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PolicySettingsOutput{})
	pulumi.RegisterOutputType(PolicySettingsPtrOutput{})
	pulumi.RegisterOutputType(PolicySettingsResponseOutput{})
	pulumi.RegisterOutputType(PolicySettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateDnsZoneConfigOutput{})
	pulumi.RegisterOutputType(PrivateDnsZoneConfigArrayOutput{})
	pulumi.RegisterOutputType(PrivateDnsZoneConfigResponseOutput{})
	pulumi.RegisterOutputType(PrivateDnsZoneConfigResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateEndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStatePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceConnectionStateResponsePtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceIpConfigurationOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceIpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceIpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(PrivateLinkServiceIpConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesAutoApprovalOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesAutoApprovalPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesResponseAutoApprovalOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesResponseAutoApprovalPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesResponseVisibilityOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesResponseVisibilityPtrOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesVisibilityOutput{})
	pulumi.RegisterOutputType(PrivateLinkServicePropertiesVisibilityPtrOutput{})
	pulumi.RegisterOutputType(ProbeOutput{})
	pulumi.RegisterOutputType(ProbeArrayOutput{})
	pulumi.RegisterOutputType(ProbeResponseOutput{})
	pulumi.RegisterOutputType(ProbeResponseArrayOutput{})
	pulumi.RegisterOutputType(PropagatedRouteTableOutput{})
	pulumi.RegisterOutputType(PropagatedRouteTablePtrOutput{})
	pulumi.RegisterOutputType(PropagatedRouteTableResponseOutput{})
	pulumi.RegisterOutputType(PropagatedRouteTableResponsePtrOutput{})
	pulumi.RegisterOutputType(ProtocolCustomSettingsFormatOutput{})
	pulumi.RegisterOutputType(ProtocolCustomSettingsFormatArrayOutput{})
	pulumi.RegisterOutputType(ProtocolCustomSettingsFormatResponseOutput{})
	pulumi.RegisterOutputType(ProtocolCustomSettingsFormatResponseArrayOutput{})
	pulumi.RegisterOutputType(PtrRecordOutput{})
	pulumi.RegisterOutputType(PtrRecordArrayOutput{})
	pulumi.RegisterOutputType(PtrRecordResponseOutput{})
	pulumi.RegisterOutputType(PtrRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(PublicIPAddressTypeOutput{})
	pulumi.RegisterOutputType(PublicIPAddressTypePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsPtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuPtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPPrefixSkuOutput{})
	pulumi.RegisterOutputType(PublicIPPrefixSkuPtrOutput{})
	pulumi.RegisterOutputType(PublicIPPrefixSkuResponseOutput{})
	pulumi.RegisterOutputType(PublicIPPrefixSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(QosIpRangeOutput{})
	pulumi.RegisterOutputType(QosIpRangeArrayOutput{})
	pulumi.RegisterOutputType(QosIpRangeResponseOutput{})
	pulumi.RegisterOutputType(QosIpRangeResponseArrayOutput{})
	pulumi.RegisterOutputType(QosPortRangeOutput{})
	pulumi.RegisterOutputType(QosPortRangeArrayOutput{})
	pulumi.RegisterOutputType(QosPortRangeResponseOutput{})
	pulumi.RegisterOutputType(QosPortRangeResponseArrayOutput{})
	pulumi.RegisterOutputType(RadiusServerOutput{})
	pulumi.RegisterOutputType(RadiusServerArrayOutput{})
	pulumi.RegisterOutputType(RadiusServerResponseOutput{})
	pulumi.RegisterOutputType(RadiusServerResponseArrayOutput{})
	pulumi.RegisterOutputType(RecordSetResponseOutput{})
	pulumi.RegisterOutputType(RecordSetResponseArrayOutput{})
	pulumi.RegisterOutputType(RedirectConfigurationOutput{})
	pulumi.RegisterOutputType(RedirectConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ReferencedPublicIpAddressResponseOutput{})
	pulumi.RegisterOutputType(ReferencedPublicIpAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkResponseOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(RetentionPolicyParametersOutput{})
	pulumi.RegisterOutputType(RetentionPolicyParametersPtrOutput{})
	pulumi.RegisterOutputType(RetentionPolicyParametersResponseOutput{})
	pulumi.RegisterOutputType(RetentionPolicyParametersResponsePtrOutput{})
	pulumi.RegisterOutputType(RouteTypeOutput{})
	pulumi.RegisterOutputType(RouteTypeArrayOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleTypeOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleResponseOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteResponseOutput{})
	pulumi.RegisterOutputType(RouteResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteTableTypeOutput{})
	pulumi.RegisterOutputType(RouteTableTypePtrOutput{})
	pulumi.RegisterOutputType(RouteTableResponseOutput{})
	pulumi.RegisterOutputType(RouteTableResponsePtrOutput{})
	pulumi.RegisterOutputType(RoutingConfigurationOutput{})
	pulumi.RegisterOutputType(RoutingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RoutingConfigurationResponseOutput{})
	pulumi.RegisterOutputType(RoutingConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(RoutingRuleOutput{})
	pulumi.RegisterOutputType(RoutingRuleArrayOutput{})
	pulumi.RegisterOutputType(RoutingRuleLinkResponseOutput{})
	pulumi.RegisterOutputType(RoutingRuleLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutingRuleResponseOutput{})
	pulumi.RegisterOutputType(RoutingRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkOutput{})
	pulumi.RegisterOutputType(RoutingRuleUpdateParametersResponseWebApplicationFirewallPolicyLinkPtrOutput{})
	pulumi.RegisterOutputType(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkOutput{})
	pulumi.RegisterOutputType(RoutingRuleUpdateParametersWebApplicationFirewallPolicyLinkPtrOutput{})
	pulumi.RegisterOutputType(RulesEngineActionOutput{})
	pulumi.RegisterOutputType(RulesEngineActionResponseOutput{})
	pulumi.RegisterOutputType(RulesEngineMatchConditionOutput{})
	pulumi.RegisterOutputType(RulesEngineMatchConditionArrayOutput{})
	pulumi.RegisterOutputType(RulesEngineMatchConditionResponseOutput{})
	pulumi.RegisterOutputType(RulesEngineMatchConditionResponseArrayOutput{})
	pulumi.RegisterOutputType(RulesEngineResponseOutput{})
	pulumi.RegisterOutputType(RulesEngineResponseArrayOutput{})
	pulumi.RegisterOutputType(RulesEngineRuleOutput{})
	pulumi.RegisterOutputType(RulesEngineRuleArrayOutput{})
	pulumi.RegisterOutputType(RulesEngineRuleResponseOutput{})
	pulumi.RegisterOutputType(RulesEngineRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(SecurityRuleTypeOutput{})
	pulumi.RegisterOutputType(SecurityRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(SecurityRuleResponseOutput{})
	pulumi.RegisterOutputType(SecurityRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkResponseOutput{})
	pulumi.RegisterOutputType(ServiceAssociationLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyTypeOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionTypeOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyDefinitionResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatResponseArrayOutput{})
	pulumi.RegisterOutputType(SoaRecordOutput{})
	pulumi.RegisterOutputType(SoaRecordPtrOutput{})
	pulumi.RegisterOutputType(SoaRecordResponseOutput{})
	pulumi.RegisterOutputType(SoaRecordResponsePtrOutput{})
	pulumi.RegisterOutputType(SrvRecordOutput{})
	pulumi.RegisterOutputType(SrvRecordArrayOutput{})
	pulumi.RegisterOutputType(SrvRecordResponseOutput{})
	pulumi.RegisterOutputType(SrvRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(StaticRouteOutput{})
	pulumi.RegisterOutputType(StaticRouteArrayOutput{})
	pulumi.RegisterOutputType(StaticRouteResponseOutput{})
	pulumi.RegisterOutputType(StaticRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(SubResourceOutput{})
	pulumi.RegisterOutputType(SubResourcePtrOutput{})
	pulumi.RegisterOutputType(SubResourceArrayOutput{})
	pulumi.RegisterOutputType(SubResourceResponseOutput{})
	pulumi.RegisterOutputType(SubResourceResponsePtrOutput{})
	pulumi.RegisterOutputType(SubResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(SubnetTypeOutput{})
	pulumi.RegisterOutputType(SubnetTypePtrOutput{})
	pulumi.RegisterOutputType(SubnetTypeArrayOutput{})
	pulumi.RegisterOutputType(SubnetResponseOutput{})
	pulumi.RegisterOutputType(SubnetResponsePtrOutput{})
	pulumi.RegisterOutputType(SubnetResponseArrayOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsConfigurationPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsConfigurationPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsPropertiesOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsPropertiesResponseOutput{})
	pulumi.RegisterOutputType(TrafficAnalyticsPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(TrafficSelectorPolicyOutput{})
	pulumi.RegisterOutputType(TrafficSelectorPolicyArrayOutput{})
	pulumi.RegisterOutputType(TrafficSelectorPolicyResponseOutput{})
	pulumi.RegisterOutputType(TrafficSelectorPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(TunnelConnectionHealthResponseOutput{})
	pulumi.RegisterOutputType(TunnelConnectionHealthResponseArrayOutput{})
	pulumi.RegisterOutputType(TxtRecordOutput{})
	pulumi.RegisterOutputType(TxtRecordArrayOutput{})
	pulumi.RegisterOutputType(TxtRecordResponseOutput{})
	pulumi.RegisterOutputType(TxtRecordResponseArrayOutput{})
	pulumi.RegisterOutputType(VMOutput{})
	pulumi.RegisterOutputType(VMResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplianceNicPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplianceNicPropertiesResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualApplianceSkuPropertiesOutput{})
	pulumi.RegisterOutputType(VirtualApplianceSkuPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualApplianceSkuPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualApplianceSkuPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualHubIdOutput{})
	pulumi.RegisterOutputType(VirtualHubIdPtrOutput{})
	pulumi.RegisterOutputType(VirtualHubIdResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubIdResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTablePtrOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableV2TypeOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableV2TypeArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableV2ResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteTableV2ResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteV2Output{})
	pulumi.RegisterOutputType(VirtualHubRouteV2ArrayOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteV2ResponseOutput{})
	pulumi.RegisterOutputType(VirtualHubRouteV2ResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkBgpCommunitiesOutput{})
	pulumi.RegisterOutputType(VirtualNetworkBgpCommunitiesPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkBgpCommunitiesResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkBgpCommunitiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayTypeOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayTypePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringTypeOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringTypeArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapTypeOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapTypePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapTypeArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkTapResponseArrayOutput{})
	pulumi.RegisterOutputType(VnetRouteOutput{})
	pulumi.RegisterOutputType(VnetRoutePtrOutput{})
	pulumi.RegisterOutputType(VnetRouteResponseOutput{})
	pulumi.RegisterOutputType(VnetRouteResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnClientConnectionHealthDetailResponseOutput{})
	pulumi.RegisterOutputType(VpnClientConnectionHealthDetailResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnClientConnectionHealthResponseOutput{})
	pulumi.RegisterOutputType(VpnClientConnectionHealthResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionTypeOutput{})
	pulumi.RegisterOutputType(VpnConnectionTypeArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionResponseOutput{})
	pulumi.RegisterOutputType(VpnConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnGatewayIpConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VpnGatewayIpConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnLinkBgpSettingsOutput{})
	pulumi.RegisterOutputType(VpnLinkBgpSettingsPtrOutput{})
	pulumi.RegisterOutputType(VpnLinkBgpSettingsResponseOutput{})
	pulumi.RegisterOutputType(VpnLinkBgpSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnLinkProviderPropertiesOutput{})
	pulumi.RegisterOutputType(VpnLinkProviderPropertiesPtrOutput{})
	pulumi.RegisterOutputType(VpnLinkProviderPropertiesResponseOutput{})
	pulumi.RegisterOutputType(VpnLinkProviderPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusClientRootCertificateOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusClientRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusClientRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusServerRootCertificateOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusServerRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusServerRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnServerConfigRadiusServerRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRevokedCertificateOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRevokedCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRevokedCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRevokedCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRootCertificateOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnServerConfigVpnClientRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkArrayOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkConnectionOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkConnectionArrayOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkConnectionResponseOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkResponseOutput{})
	pulumi.RegisterOutputType(VpnSiteLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallCustomRuleOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallCustomRuleArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallCustomRuleResponseOutput{})
	pulumi.RegisterOutputType(WebApplicationFirewallCustomRuleResponseArrayOutput{})
}
