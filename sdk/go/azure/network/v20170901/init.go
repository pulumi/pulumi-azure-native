// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20170901

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-azure-native/sdk/go/azure"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "azure-native:network/v20170901:ApplicationGateway":
		r = &ApplicationGateway{}
	case "azure-native:network/v20170901:ApplicationSecurityGroup":
		r = &ApplicationSecurityGroup{}
	case "azure-native:network/v20170901:ExpressRouteCircuit":
		r = &ExpressRouteCircuit{}
	case "azure-native:network/v20170901:ExpressRouteCircuitAuthorization":
		r = &ExpressRouteCircuitAuthorization{}
	case "azure-native:network/v20170901:ExpressRouteCircuitPeering":
		r = &ExpressRouteCircuitPeering{}
	case "azure-native:network/v20170901:InboundNatRule":
		r = &InboundNatRule{}
	case "azure-native:network/v20170901:LoadBalancer":
		r = &LoadBalancer{}
	case "azure-native:network/v20170901:LocalNetworkGateway":
		r = &LocalNetworkGateway{}
	case "azure-native:network/v20170901:NetworkInterface":
		r = &NetworkInterface{}
	case "azure-native:network/v20170901:NetworkSecurityGroup":
		r = &NetworkSecurityGroup{}
	case "azure-native:network/v20170901:NetworkWatcher":
		r = &NetworkWatcher{}
	case "azure-native:network/v20170901:PacketCapture":
		r = &PacketCapture{}
	case "azure-native:network/v20170901:PublicIPAddress":
		r = &PublicIPAddress{}
	case "azure-native:network/v20170901:RecordSet":
		r = &RecordSet{}
	case "azure-native:network/v20170901:Route":
		r = &Route{}
	case "azure-native:network/v20170901:RouteFilter":
		r = &RouteFilter{}
	case "azure-native:network/v20170901:RouteFilterRule":
		r = &RouteFilterRule{}
	case "azure-native:network/v20170901:RouteTable":
		r = &RouteTable{}
	case "azure-native:network/v20170901:SecurityRule":
		r = &SecurityRule{}
	case "azure-native:network/v20170901:Subnet":
		r = &Subnet{}
	case "azure-native:network/v20170901:VirtualNetwork":
		r = &VirtualNetwork{}
	case "azure-native:network/v20170901:VirtualNetworkGateway":
		r = &VirtualNetworkGateway{}
	case "azure-native:network/v20170901:VirtualNetworkGatewayConnection":
		r = &VirtualNetworkGatewayConnection{}
	case "azure-native:network/v20170901:VirtualNetworkPeering":
		r = &VirtualNetworkPeering{}
	case "azure-native:network/v20170901:Zone":
		r = &Zone{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := azure.PkgVersion()
	if err != nil {
		fmt.Printf("failed to determine package version. defaulting to v1: %v\n", err)
	}
	pulumi.RegisterResourceModule(
		"azure-native",
		"network/v20170901",
		&module{version},
	)
}
