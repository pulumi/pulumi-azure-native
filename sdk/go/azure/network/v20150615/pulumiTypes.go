// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20150615

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpace struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
}

// AddressSpaceInput is an input type that accepts AddressSpaceArgs and AddressSpaceOutput values.
// You can construct a concrete instance of `AddressSpaceInput` via:
//
//          AddressSpaceArgs{...}
type AddressSpaceInput interface {
	pulumi.Input

	ToAddressSpaceOutput() AddressSpaceOutput
	ToAddressSpaceOutputWithContext(context.Context) AddressSpaceOutput
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceArgs struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
}

func (AddressSpaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpace)(nil)).Elem()
}

func (i AddressSpaceArgs) ToAddressSpaceOutput() AddressSpaceOutput {
	return i.ToAddressSpaceOutputWithContext(context.Background())
}

func (i AddressSpaceArgs) ToAddressSpaceOutputWithContext(ctx context.Context) AddressSpaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceOutput)
}

func (i AddressSpaceArgs) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return i.ToAddressSpacePtrOutputWithContext(context.Background())
}

func (i AddressSpaceArgs) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceOutput).ToAddressSpacePtrOutputWithContext(ctx)
}

// AddressSpacePtrInput is an input type that accepts AddressSpaceArgs, AddressSpacePtr and AddressSpacePtrOutput values.
// You can construct a concrete instance of `AddressSpacePtrInput` via:
//
//          AddressSpaceArgs{...}
//
//  or:
//
//          nil
type AddressSpacePtrInput interface {
	pulumi.Input

	ToAddressSpacePtrOutput() AddressSpacePtrOutput
	ToAddressSpacePtrOutputWithContext(context.Context) AddressSpacePtrOutput
}

type addressSpacePtrType AddressSpaceArgs

func AddressSpacePtr(v *AddressSpaceArgs) AddressSpacePtrInput {
	return (*addressSpacePtrType)(v)
}

func (*addressSpacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpace)(nil)).Elem()
}

func (i *addressSpacePtrType) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return i.ToAddressSpacePtrOutputWithContext(context.Background())
}

func (i *addressSpacePtrType) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpacePtrOutput)
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceOutput struct{ *pulumi.OutputState }

func (AddressSpaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpace)(nil)).Elem()
}

func (o AddressSpaceOutput) ToAddressSpaceOutput() AddressSpaceOutput {
	return o
}

func (o AddressSpaceOutput) ToAddressSpaceOutputWithContext(ctx context.Context) AddressSpaceOutput {
	return o
}

func (o AddressSpaceOutput) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return o.ToAddressSpacePtrOutputWithContext(context.Background())
}

func (o AddressSpaceOutput) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return o.ApplyT(func(v AddressSpace) *AddressSpace {
		return &v
	}).(AddressSpacePtrOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpaceOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AddressSpace) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

type AddressSpacePtrOutput struct{ *pulumi.OutputState }

func (AddressSpacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpace)(nil)).Elem()
}

func (o AddressSpacePtrOutput) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return o
}

func (o AddressSpacePtrOutput) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return o
}

func (o AddressSpacePtrOutput) Elem() AddressSpaceOutput {
	return o.ApplyT(func(v *AddressSpace) AddressSpace { return *v }).(AddressSpaceOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpacePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AddressSpace) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceInvokeResponse struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
}

// AddressSpaceInvokeResponseInput is an input type that accepts AddressSpaceInvokeResponseArgs and AddressSpaceInvokeResponseOutput values.
// You can construct a concrete instance of `AddressSpaceInvokeResponseInput` via:
//
//          AddressSpaceInvokeResponseArgs{...}
type AddressSpaceInvokeResponseInput interface {
	pulumi.Input

	ToAddressSpaceInvokeResponseOutput() AddressSpaceInvokeResponseOutput
	ToAddressSpaceInvokeResponseOutputWithContext(context.Context) AddressSpaceInvokeResponseOutput
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceInvokeResponseArgs struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
}

func (AddressSpaceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceInvokeResponse)(nil)).Elem()
}

func (i AddressSpaceInvokeResponseArgs) ToAddressSpaceInvokeResponseOutput() AddressSpaceInvokeResponseOutput {
	return i.ToAddressSpaceInvokeResponseOutputWithContext(context.Background())
}

func (i AddressSpaceInvokeResponseArgs) ToAddressSpaceInvokeResponseOutputWithContext(ctx context.Context) AddressSpaceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceInvokeResponseOutput)
}

func (i AddressSpaceInvokeResponseArgs) ToAddressSpaceInvokeResponsePtrOutput() AddressSpaceInvokeResponsePtrOutput {
	return i.ToAddressSpaceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i AddressSpaceInvokeResponseArgs) ToAddressSpaceInvokeResponsePtrOutputWithContext(ctx context.Context) AddressSpaceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceInvokeResponseOutput).ToAddressSpaceInvokeResponsePtrOutputWithContext(ctx)
}

// AddressSpaceInvokeResponsePtrInput is an input type that accepts AddressSpaceInvokeResponseArgs, AddressSpaceInvokeResponsePtr and AddressSpaceInvokeResponsePtrOutput values.
// You can construct a concrete instance of `AddressSpaceInvokeResponsePtrInput` via:
//
//          AddressSpaceInvokeResponseArgs{...}
//
//  or:
//
//          nil
type AddressSpaceInvokeResponsePtrInput interface {
	pulumi.Input

	ToAddressSpaceInvokeResponsePtrOutput() AddressSpaceInvokeResponsePtrOutput
	ToAddressSpaceInvokeResponsePtrOutputWithContext(context.Context) AddressSpaceInvokeResponsePtrOutput
}

type addressSpaceInvokeResponsePtrType AddressSpaceInvokeResponseArgs

func AddressSpaceInvokeResponsePtr(v *AddressSpaceInvokeResponseArgs) AddressSpaceInvokeResponsePtrInput {
	return (*addressSpaceInvokeResponsePtrType)(v)
}

func (*addressSpaceInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceInvokeResponse)(nil)).Elem()
}

func (i *addressSpaceInvokeResponsePtrType) ToAddressSpaceInvokeResponsePtrOutput() AddressSpaceInvokeResponsePtrOutput {
	return i.ToAddressSpaceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *addressSpaceInvokeResponsePtrType) ToAddressSpaceInvokeResponsePtrOutputWithContext(ctx context.Context) AddressSpaceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceInvokeResponsePtrOutput)
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceInvokeResponseOutput struct{ *pulumi.OutputState }

func (AddressSpaceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceInvokeResponse)(nil)).Elem()
}

func (o AddressSpaceInvokeResponseOutput) ToAddressSpaceInvokeResponseOutput() AddressSpaceInvokeResponseOutput {
	return o
}

func (o AddressSpaceInvokeResponseOutput) ToAddressSpaceInvokeResponseOutputWithContext(ctx context.Context) AddressSpaceInvokeResponseOutput {
	return o
}

func (o AddressSpaceInvokeResponseOutput) ToAddressSpaceInvokeResponsePtrOutput() AddressSpaceInvokeResponsePtrOutput {
	return o.ToAddressSpaceInvokeResponsePtrOutputWithContext(context.Background())
}

func (o AddressSpaceInvokeResponseOutput) ToAddressSpaceInvokeResponsePtrOutputWithContext(ctx context.Context) AddressSpaceInvokeResponsePtrOutput {
	return o.ApplyT(func(v AddressSpaceInvokeResponse) *AddressSpaceInvokeResponse {
		return &v
	}).(AddressSpaceInvokeResponsePtrOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpaceInvokeResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AddressSpaceInvokeResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

type AddressSpaceInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceInvokeResponse)(nil)).Elem()
}

func (o AddressSpaceInvokeResponsePtrOutput) ToAddressSpaceInvokeResponsePtrOutput() AddressSpaceInvokeResponsePtrOutput {
	return o
}

func (o AddressSpaceInvokeResponsePtrOutput) ToAddressSpaceInvokeResponsePtrOutputWithContext(ctx context.Context) AddressSpaceInvokeResponsePtrOutput {
	return o
}

func (o AddressSpaceInvokeResponsePtrOutput) Elem() AddressSpaceInvokeResponseOutput {
	return o.ApplyT(func(v *AddressSpaceInvokeResponse) AddressSpaceInvokeResponse { return *v }).(AddressSpaceInvokeResponseOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpaceInvokeResponsePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AddressSpaceInvokeResponse) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceResponse struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
}

// AddressSpaceResponseInput is an input type that accepts AddressSpaceResponseArgs and AddressSpaceResponseOutput values.
// You can construct a concrete instance of `AddressSpaceResponseInput` via:
//
//          AddressSpaceResponseArgs{...}
type AddressSpaceResponseInput interface {
	pulumi.Input

	ToAddressSpaceResponseOutput() AddressSpaceResponseOutput
	ToAddressSpaceResponseOutputWithContext(context.Context) AddressSpaceResponseOutput
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceResponseArgs struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
}

func (AddressSpaceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceResponse)(nil)).Elem()
}

func (i AddressSpaceResponseArgs) ToAddressSpaceResponseOutput() AddressSpaceResponseOutput {
	return i.ToAddressSpaceResponseOutputWithContext(context.Background())
}

func (i AddressSpaceResponseArgs) ToAddressSpaceResponseOutputWithContext(ctx context.Context) AddressSpaceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceResponseOutput)
}

func (i AddressSpaceResponseArgs) ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput {
	return i.ToAddressSpaceResponsePtrOutputWithContext(context.Background())
}

func (i AddressSpaceResponseArgs) ToAddressSpaceResponsePtrOutputWithContext(ctx context.Context) AddressSpaceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceResponseOutput).ToAddressSpaceResponsePtrOutputWithContext(ctx)
}

// AddressSpaceResponsePtrInput is an input type that accepts AddressSpaceResponseArgs, AddressSpaceResponsePtr and AddressSpaceResponsePtrOutput values.
// You can construct a concrete instance of `AddressSpaceResponsePtrInput` via:
//
//          AddressSpaceResponseArgs{...}
//
//  or:
//
//          nil
type AddressSpaceResponsePtrInput interface {
	pulumi.Input

	ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput
	ToAddressSpaceResponsePtrOutputWithContext(context.Context) AddressSpaceResponsePtrOutput
}

type addressSpaceResponsePtrType AddressSpaceResponseArgs

func AddressSpaceResponsePtr(v *AddressSpaceResponseArgs) AddressSpaceResponsePtrInput {
	return (*addressSpaceResponsePtrType)(v)
}

func (*addressSpaceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceResponse)(nil)).Elem()
}

func (i *addressSpaceResponsePtrType) ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput {
	return i.ToAddressSpaceResponsePtrOutputWithContext(context.Background())
}

func (i *addressSpaceResponsePtrType) ToAddressSpaceResponsePtrOutputWithContext(ctx context.Context) AddressSpaceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceResponsePtrOutput)
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceResponseOutput struct{ *pulumi.OutputState }

func (AddressSpaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceResponse)(nil)).Elem()
}

func (o AddressSpaceResponseOutput) ToAddressSpaceResponseOutput() AddressSpaceResponseOutput {
	return o
}

func (o AddressSpaceResponseOutput) ToAddressSpaceResponseOutputWithContext(ctx context.Context) AddressSpaceResponseOutput {
	return o
}

func (o AddressSpaceResponseOutput) ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput {
	return o.ToAddressSpaceResponsePtrOutputWithContext(context.Background())
}

func (o AddressSpaceResponseOutput) ToAddressSpaceResponsePtrOutputWithContext(ctx context.Context) AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v AddressSpaceResponse) *AddressSpaceResponse {
		return &v
	}).(AddressSpaceResponsePtrOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpaceResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AddressSpaceResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

type AddressSpaceResponsePtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceResponse)(nil)).Elem()
}

func (o AddressSpaceResponsePtrOutput) ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput {
	return o
}

func (o AddressSpaceResponsePtrOutput) ToAddressSpaceResponsePtrOutputWithContext(ctx context.Context) AddressSpaceResponsePtrOutput {
	return o
}

func (o AddressSpaceResponsePtrOutput) Elem() AddressSpaceResponseOutput {
	return o.ApplyT(func(v *AddressSpaceResponse) AddressSpaceResponse { return *v }).(AddressSpaceResponseOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpaceResponsePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AddressSpaceResponse) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddress struct {
	// Fully qualified domain name (FQDN).
	Fqdn *string `pulumi:"fqdn"`
	// IP address
	IpAddress *string `pulumi:"ipAddress"`
}

// ApplicationGatewayBackendAddressInput is an input type that accepts ApplicationGatewayBackendAddressArgs and ApplicationGatewayBackendAddressOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressInput` via:
//
//          ApplicationGatewayBackendAddressArgs{...}
type ApplicationGatewayBackendAddressInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressOutput() ApplicationGatewayBackendAddressOutput
	ToApplicationGatewayBackendAddressOutputWithContext(context.Context) ApplicationGatewayBackendAddressOutput
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressArgs struct {
	// Fully qualified domain name (FQDN).
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// IP address
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (ApplicationGatewayBackendAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressArgs) ToApplicationGatewayBackendAddressOutput() ApplicationGatewayBackendAddressOutput {
	return i.ToApplicationGatewayBackendAddressOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressArgs) ToApplicationGatewayBackendAddressOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressOutput)
}

// ApplicationGatewayBackendAddressArrayInput is an input type that accepts ApplicationGatewayBackendAddressArray and ApplicationGatewayBackendAddressArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressArrayInput` via:
//
//          ApplicationGatewayBackendAddressArray{ ApplicationGatewayBackendAddressArgs{...} }
type ApplicationGatewayBackendAddressArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressArrayOutput() ApplicationGatewayBackendAddressArrayOutput
	ToApplicationGatewayBackendAddressArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressArrayOutput
}

type ApplicationGatewayBackendAddressArray []ApplicationGatewayBackendAddressInput

func (ApplicationGatewayBackendAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressArray) ToApplicationGatewayBackendAddressArrayOutput() ApplicationGatewayBackendAddressArrayOutput {
	return i.ToApplicationGatewayBackendAddressArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressArray) ToApplicationGatewayBackendAddressArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressArrayOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressOutput) ToApplicationGatewayBackendAddressOutput() ApplicationGatewayBackendAddressOutput {
	return o
}

func (o ApplicationGatewayBackendAddressOutput) ToApplicationGatewayBackendAddressOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressOutput {
	return o
}

// Fully qualified domain name (FQDN).
func (o ApplicationGatewayBackendAddressOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddress) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// IP address
func (o ApplicationGatewayBackendAddressOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddress) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressArrayOutput) ToApplicationGatewayBackendAddressArrayOutput() ApplicationGatewayBackendAddressArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressArrayOutput) ToApplicationGatewayBackendAddressArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddress {
		return vs[0].([]ApplicationGatewayBackendAddress)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressInvokeResponse struct {
	// Fully qualified domain name (FQDN).
	Fqdn *string `pulumi:"fqdn"`
	// IP address
	IpAddress *string `pulumi:"ipAddress"`
}

// ApplicationGatewayBackendAddressInvokeResponseInput is an input type that accepts ApplicationGatewayBackendAddressInvokeResponseArgs and ApplicationGatewayBackendAddressInvokeResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressInvokeResponseInput` via:
//
//          ApplicationGatewayBackendAddressInvokeResponseArgs{...}
type ApplicationGatewayBackendAddressInvokeResponseInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressInvokeResponseOutput() ApplicationGatewayBackendAddressInvokeResponseOutput
	ToApplicationGatewayBackendAddressInvokeResponseOutputWithContext(context.Context) ApplicationGatewayBackendAddressInvokeResponseOutput
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressInvokeResponseArgs struct {
	// Fully qualified domain name (FQDN).
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// IP address
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (ApplicationGatewayBackendAddressInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressInvokeResponseArgs) ToApplicationGatewayBackendAddressInvokeResponseOutput() ApplicationGatewayBackendAddressInvokeResponseOutput {
	return i.ToApplicationGatewayBackendAddressInvokeResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressInvokeResponseArgs) ToApplicationGatewayBackendAddressInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressInvokeResponseOutput)
}

// ApplicationGatewayBackendAddressInvokeResponseArrayInput is an input type that accepts ApplicationGatewayBackendAddressInvokeResponseArray and ApplicationGatewayBackendAddressInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressInvokeResponseArrayInput` via:
//
//          ApplicationGatewayBackendAddressInvokeResponseArray{ ApplicationGatewayBackendAddressInvokeResponseArgs{...} }
type ApplicationGatewayBackendAddressInvokeResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressInvokeResponseArrayOutput() ApplicationGatewayBackendAddressInvokeResponseArrayOutput
	ToApplicationGatewayBackendAddressInvokeResponseArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressInvokeResponseArrayOutput
}

type ApplicationGatewayBackendAddressInvokeResponseArray []ApplicationGatewayBackendAddressInvokeResponseInput

func (ApplicationGatewayBackendAddressInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressInvokeResponseArray) ToApplicationGatewayBackendAddressInvokeResponseArrayOutput() ApplicationGatewayBackendAddressInvokeResponseArrayOutput {
	return i.ToApplicationGatewayBackendAddressInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressInvokeResponseArray) ToApplicationGatewayBackendAddressInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressInvokeResponseArrayOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressInvokeResponseOutput) ToApplicationGatewayBackendAddressInvokeResponseOutput() ApplicationGatewayBackendAddressInvokeResponseOutput {
	return o
}

func (o ApplicationGatewayBackendAddressInvokeResponseOutput) ToApplicationGatewayBackendAddressInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressInvokeResponseOutput {
	return o
}

// Fully qualified domain name (FQDN).
func (o ApplicationGatewayBackendAddressInvokeResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressInvokeResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// IP address
func (o ApplicationGatewayBackendAddressInvokeResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressInvokeResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressInvokeResponseArrayOutput) ToApplicationGatewayBackendAddressInvokeResponseArrayOutput() ApplicationGatewayBackendAddressInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressInvokeResponseArrayOutput) ToApplicationGatewayBackendAddressInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressInvokeResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressInvokeResponse {
		return vs[0].([]ApplicationGatewayBackendAddressInvokeResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressInvokeResponseOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPool struct {
	// Backend addresses
	BackendAddresses []ApplicationGatewayBackendAddress `pulumi:"backendAddresses"`
	// Collection of references to IPs defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfiguration `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayBackendAddressPoolInput is an input type that accepts ApplicationGatewayBackendAddressPoolArgs and ApplicationGatewayBackendAddressPoolOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolInput` via:
//
//          ApplicationGatewayBackendAddressPoolArgs{...}
type ApplicationGatewayBackendAddressPoolInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolOutput() ApplicationGatewayBackendAddressPoolOutput
	ToApplicationGatewayBackendAddressPoolOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolOutput
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolArgs struct {
	// Backend addresses
	BackendAddresses ApplicationGatewayBackendAddressArrayInput `pulumi:"backendAddresses"`
	// Collection of references to IPs defined in network interfaces.
	BackendIPConfigurations NetworkInterfaceIPConfigurationArrayInput `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayBackendAddressPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolArgs) ToApplicationGatewayBackendAddressPoolOutput() ApplicationGatewayBackendAddressPoolOutput {
	return i.ToApplicationGatewayBackendAddressPoolOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolArgs) ToApplicationGatewayBackendAddressPoolOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolOutput)
}

// ApplicationGatewayBackendAddressPoolArrayInput is an input type that accepts ApplicationGatewayBackendAddressPoolArray and ApplicationGatewayBackendAddressPoolArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolArrayInput` via:
//
//          ApplicationGatewayBackendAddressPoolArray{ ApplicationGatewayBackendAddressPoolArgs{...} }
type ApplicationGatewayBackendAddressPoolArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolArrayOutput() ApplicationGatewayBackendAddressPoolArrayOutput
	ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolArrayOutput
}

type ApplicationGatewayBackendAddressPoolArray []ApplicationGatewayBackendAddressPoolInput

func (ApplicationGatewayBackendAddressPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolArray) ToApplicationGatewayBackendAddressPoolArrayOutput() ApplicationGatewayBackendAddressPoolArrayOutput {
	return i.ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolArray) ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolArrayOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolOutput) ToApplicationGatewayBackendAddressPoolOutput() ApplicationGatewayBackendAddressPoolOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolOutput) ToApplicationGatewayBackendAddressPoolOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolOutput {
	return o
}

// Backend addresses
func (o ApplicationGatewayBackendAddressPoolOutput) BackendAddresses() ApplicationGatewayBackendAddressArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) []ApplicationGatewayBackendAddress {
		return v.BackendAddresses
	}).(ApplicationGatewayBackendAddressArrayOutput)
}

// Collection of references to IPs defined in network interfaces.
func (o ApplicationGatewayBackendAddressPoolOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) []NetworkInterfaceIPConfiguration {
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendAddressPoolOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayBackendAddressPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayBackendAddressPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayBackendAddressPoolOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressPoolArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolArrayOutput) ToApplicationGatewayBackendAddressPoolArrayOutput() ApplicationGatewayBackendAddressPoolArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolArrayOutput) ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressPool {
		return vs[0].([]ApplicationGatewayBackendAddressPool)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressPoolOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolInvokeResponse struct {
	// Backend addresses
	BackendAddresses []ApplicationGatewayBackendAddressInvokeResponse `pulumi:"backendAddresses"`
	// Collection of references to IPs defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfigurationInvokeResponse `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayBackendAddressPoolInvokeResponseInput is an input type that accepts ApplicationGatewayBackendAddressPoolInvokeResponseArgs and ApplicationGatewayBackendAddressPoolInvokeResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolInvokeResponseInput` via:
//
//          ApplicationGatewayBackendAddressPoolInvokeResponseArgs{...}
type ApplicationGatewayBackendAddressPoolInvokeResponseInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolInvokeResponseOutput() ApplicationGatewayBackendAddressPoolInvokeResponseOutput
	ToApplicationGatewayBackendAddressPoolInvokeResponseOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolInvokeResponseOutput
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolInvokeResponseArgs struct {
	// Backend addresses
	BackendAddresses ApplicationGatewayBackendAddressInvokeResponseArrayInput `pulumi:"backendAddresses"`
	// Collection of references to IPs defined in network interfaces.
	BackendIPConfigurations NetworkInterfaceIPConfigurationInvokeResponseArrayInput `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayBackendAddressPoolInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPoolInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolInvokeResponseArgs) ToApplicationGatewayBackendAddressPoolInvokeResponseOutput() ApplicationGatewayBackendAddressPoolInvokeResponseOutput {
	return i.ToApplicationGatewayBackendAddressPoolInvokeResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolInvokeResponseArgs) ToApplicationGatewayBackendAddressPoolInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolInvokeResponseOutput)
}

// ApplicationGatewayBackendAddressPoolInvokeResponseArrayInput is an input type that accepts ApplicationGatewayBackendAddressPoolInvokeResponseArray and ApplicationGatewayBackendAddressPoolInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolInvokeResponseArrayInput` via:
//
//          ApplicationGatewayBackendAddressPoolInvokeResponseArray{ ApplicationGatewayBackendAddressPoolInvokeResponseArgs{...} }
type ApplicationGatewayBackendAddressPoolInvokeResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolInvokeResponseArrayOutput() ApplicationGatewayBackendAddressPoolInvokeResponseArrayOutput
	ToApplicationGatewayBackendAddressPoolInvokeResponseArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolInvokeResponseArrayOutput
}

type ApplicationGatewayBackendAddressPoolInvokeResponseArray []ApplicationGatewayBackendAddressPoolInvokeResponseInput

func (ApplicationGatewayBackendAddressPoolInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPoolInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolInvokeResponseArray) ToApplicationGatewayBackendAddressPoolInvokeResponseArrayOutput() ApplicationGatewayBackendAddressPoolInvokeResponseArrayOutput {
	return i.ToApplicationGatewayBackendAddressPoolInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolInvokeResponseArray) ToApplicationGatewayBackendAddressPoolInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolInvokeResponseArrayOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPoolInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolInvokeResponseOutput) ToApplicationGatewayBackendAddressPoolInvokeResponseOutput() ApplicationGatewayBackendAddressPoolInvokeResponseOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolInvokeResponseOutput) ToApplicationGatewayBackendAddressPoolInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolInvokeResponseOutput {
	return o
}

// Backend addresses
func (o ApplicationGatewayBackendAddressPoolInvokeResponseOutput) BackendAddresses() ApplicationGatewayBackendAddressInvokeResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolInvokeResponse) []ApplicationGatewayBackendAddressInvokeResponse {
		return v.BackendAddresses
	}).(ApplicationGatewayBackendAddressInvokeResponseArrayOutput)
}

// Collection of references to IPs defined in network interfaces.
func (o ApplicationGatewayBackendAddressPoolInvokeResponseOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationInvokeResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolInvokeResponse) []NetworkInterfaceIPConfigurationInvokeResponse {
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationInvokeResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendAddressPoolInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayBackendAddressPoolInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayBackendAddressPoolInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayBackendAddressPoolInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressPoolInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPoolInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolInvokeResponseArrayOutput) ToApplicationGatewayBackendAddressPoolInvokeResponseArrayOutput() ApplicationGatewayBackendAddressPoolInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolInvokeResponseArrayOutput) ToApplicationGatewayBackendAddressPoolInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolInvokeResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressPoolInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressPoolInvokeResponse {
		return vs[0].([]ApplicationGatewayBackendAddressPoolInvokeResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressPoolInvokeResponseOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolResponse struct {
	// Backend addresses
	BackendAddresses []ApplicationGatewayBackendAddressResponse `pulumi:"backendAddresses"`
	// Collection of references to IPs defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayBackendAddressPoolResponseInput is an input type that accepts ApplicationGatewayBackendAddressPoolResponseArgs and ApplicationGatewayBackendAddressPoolResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolResponseInput` via:
//
//          ApplicationGatewayBackendAddressPoolResponseArgs{...}
type ApplicationGatewayBackendAddressPoolResponseInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolResponseOutput() ApplicationGatewayBackendAddressPoolResponseOutput
	ToApplicationGatewayBackendAddressPoolResponseOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolResponseOutput
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolResponseArgs struct {
	// Backend addresses
	BackendAddresses ApplicationGatewayBackendAddressResponseArrayInput `pulumi:"backendAddresses"`
	// Collection of references to IPs defined in network interfaces.
	BackendIPConfigurations NetworkInterfaceIPConfigurationResponseArrayInput `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayBackendAddressPoolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolResponseArgs) ToApplicationGatewayBackendAddressPoolResponseOutput() ApplicationGatewayBackendAddressPoolResponseOutput {
	return i.ToApplicationGatewayBackendAddressPoolResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolResponseArgs) ToApplicationGatewayBackendAddressPoolResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolResponseOutput)
}

// ApplicationGatewayBackendAddressPoolResponseArrayInput is an input type that accepts ApplicationGatewayBackendAddressPoolResponseArray and ApplicationGatewayBackendAddressPoolResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolResponseArrayInput` via:
//
//          ApplicationGatewayBackendAddressPoolResponseArray{ ApplicationGatewayBackendAddressPoolResponseArgs{...} }
type ApplicationGatewayBackendAddressPoolResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolResponseArrayOutput() ApplicationGatewayBackendAddressPoolResponseArrayOutput
	ToApplicationGatewayBackendAddressPoolResponseArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolResponseArrayOutput
}

type ApplicationGatewayBackendAddressPoolResponseArray []ApplicationGatewayBackendAddressPoolResponseInput

func (ApplicationGatewayBackendAddressPoolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolResponseArray) ToApplicationGatewayBackendAddressPoolResponseArrayOutput() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return i.ToApplicationGatewayBackendAddressPoolResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolResponseArray) ToApplicationGatewayBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolResponseOutput) ToApplicationGatewayBackendAddressPoolResponseOutput() ApplicationGatewayBackendAddressPoolResponseOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseOutput) ToApplicationGatewayBackendAddressPoolResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseOutput {
	return o
}

// Backend addresses
func (o ApplicationGatewayBackendAddressPoolResponseOutput) BackendAddresses() ApplicationGatewayBackendAddressResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) []ApplicationGatewayBackendAddressResponse {
		return v.BackendAddresses
	}).(ApplicationGatewayBackendAddressResponseArrayOutput)
}

// Collection of references to IPs defined in network interfaces.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) []NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) ToApplicationGatewayBackendAddressPoolResponseArrayOutput() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) ToApplicationGatewayBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressPoolResponse {
		return vs[0].([]ApplicationGatewayBackendAddressPoolResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressPoolResponseOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressResponse struct {
	// Fully qualified domain name (FQDN).
	Fqdn *string `pulumi:"fqdn"`
	// IP address
	IpAddress *string `pulumi:"ipAddress"`
}

// ApplicationGatewayBackendAddressResponseInput is an input type that accepts ApplicationGatewayBackendAddressResponseArgs and ApplicationGatewayBackendAddressResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressResponseInput` via:
//
//          ApplicationGatewayBackendAddressResponseArgs{...}
type ApplicationGatewayBackendAddressResponseInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressResponseOutput() ApplicationGatewayBackendAddressResponseOutput
	ToApplicationGatewayBackendAddressResponseOutputWithContext(context.Context) ApplicationGatewayBackendAddressResponseOutput
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressResponseArgs struct {
	// Fully qualified domain name (FQDN).
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// IP address
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (ApplicationGatewayBackendAddressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressResponseArgs) ToApplicationGatewayBackendAddressResponseOutput() ApplicationGatewayBackendAddressResponseOutput {
	return i.ToApplicationGatewayBackendAddressResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressResponseArgs) ToApplicationGatewayBackendAddressResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressResponseOutput)
}

// ApplicationGatewayBackendAddressResponseArrayInput is an input type that accepts ApplicationGatewayBackendAddressResponseArray and ApplicationGatewayBackendAddressResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressResponseArrayInput` via:
//
//          ApplicationGatewayBackendAddressResponseArray{ ApplicationGatewayBackendAddressResponseArgs{...} }
type ApplicationGatewayBackendAddressResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressResponseArrayOutput() ApplicationGatewayBackendAddressResponseArrayOutput
	ToApplicationGatewayBackendAddressResponseArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressResponseArrayOutput
}

type ApplicationGatewayBackendAddressResponseArray []ApplicationGatewayBackendAddressResponseInput

func (ApplicationGatewayBackendAddressResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressResponseArray) ToApplicationGatewayBackendAddressResponseArrayOutput() ApplicationGatewayBackendAddressResponseArrayOutput {
	return i.ToApplicationGatewayBackendAddressResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressResponseArray) ToApplicationGatewayBackendAddressResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressResponseArrayOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressResponseOutput) ToApplicationGatewayBackendAddressResponseOutput() ApplicationGatewayBackendAddressResponseOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseOutput) ToApplicationGatewayBackendAddressResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseOutput {
	return o
}

// Fully qualified domain name (FQDN).
func (o ApplicationGatewayBackendAddressResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// IP address
func (o ApplicationGatewayBackendAddressResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) ToApplicationGatewayBackendAddressResponseArrayOutput() ApplicationGatewayBackendAddressResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) ToApplicationGatewayBackendAddressResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressResponse {
		return vs[0].([]ApplicationGatewayBackendAddressResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressResponseOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettings struct {
	// Cookie based affinity. Possible values are: 'Enabled' and 'Disabled'.
	CookieBasedAffinity *string `pulumi:"cookieBasedAffinity"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Port
	Port *int `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe *SubResource `pulumi:"probe"`
	// Protocol. Possible values are: 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Gets or sets Provisioning state of the backend http settings resource Updating/Deleting/Failed
	ProvisioningState *string `pulumi:"provisioningState"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout *int `pulumi:"requestTimeout"`
}

// ApplicationGatewayBackendHttpSettingsInput is an input type that accepts ApplicationGatewayBackendHttpSettingsArgs and ApplicationGatewayBackendHttpSettingsOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsInput` via:
//
//          ApplicationGatewayBackendHttpSettingsArgs{...}
type ApplicationGatewayBackendHttpSettingsInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsOutput() ApplicationGatewayBackendHttpSettingsOutput
	ToApplicationGatewayBackendHttpSettingsOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsOutput
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsArgs struct {
	// Cookie based affinity. Possible values are: 'Enabled' and 'Disabled'.
	CookieBasedAffinity pulumi.StringPtrInput `pulumi:"cookieBasedAffinity"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Port
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe SubResourcePtrInput `pulumi:"probe"`
	// Protocol. Possible values are: 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Gets or sets Provisioning state of the backend http settings resource Updating/Deleting/Failed
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout pulumi.IntPtrInput `pulumi:"requestTimeout"`
}

func (ApplicationGatewayBackendHttpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsArgs) ToApplicationGatewayBackendHttpSettingsOutput() ApplicationGatewayBackendHttpSettingsOutput {
	return i.ToApplicationGatewayBackendHttpSettingsOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsArgs) ToApplicationGatewayBackendHttpSettingsOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsOutput)
}

// ApplicationGatewayBackendHttpSettingsArrayInput is an input type that accepts ApplicationGatewayBackendHttpSettingsArray and ApplicationGatewayBackendHttpSettingsArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsArrayInput` via:
//
//          ApplicationGatewayBackendHttpSettingsArray{ ApplicationGatewayBackendHttpSettingsArgs{...} }
type ApplicationGatewayBackendHttpSettingsArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsArrayOutput() ApplicationGatewayBackendHttpSettingsArrayOutput
	ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsArrayOutput
}

type ApplicationGatewayBackendHttpSettingsArray []ApplicationGatewayBackendHttpSettingsInput

func (ApplicationGatewayBackendHttpSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsArray) ToApplicationGatewayBackendHttpSettingsArrayOutput() ApplicationGatewayBackendHttpSettingsArrayOutput {
	return i.ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsArray) ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsArrayOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsOutput) ToApplicationGatewayBackendHttpSettingsOutput() ApplicationGatewayBackendHttpSettingsOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsOutput) ToApplicationGatewayBackendHttpSettingsOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsOutput {
	return o
}

// Cookie based affinity. Possible values are: 'Enabled' and 'Disabled'.
func (o ApplicationGatewayBackendHttpSettingsOutput) CookieBasedAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.CookieBasedAffinity }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendHttpSettingsOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayBackendHttpSettingsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayBackendHttpSettingsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Port
func (o ApplicationGatewayBackendHttpSettingsOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Probe resource of an application gateway.
func (o ApplicationGatewayBackendHttpSettingsOutput) Probe() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *SubResource { return v.Probe }).(SubResourcePtrOutput)
}

// Protocol. Possible values are: 'Http' and 'Https'.
func (o ApplicationGatewayBackendHttpSettingsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Gets or sets Provisioning state of the backend http settings resource Updating/Deleting/Failed
func (o ApplicationGatewayBackendHttpSettingsOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayBackendHttpSettingsOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *int { return v.RequestTimeout }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayBackendHttpSettingsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsArrayOutput) ToApplicationGatewayBackendHttpSettingsArrayOutput() ApplicationGatewayBackendHttpSettingsArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsArrayOutput) ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendHttpSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendHttpSettings {
		return vs[0].([]ApplicationGatewayBackendHttpSettings)[vs[1].(int)]
	}).(ApplicationGatewayBackendHttpSettingsOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsInvokeResponse struct {
	// Cookie based affinity. Possible values are: 'Enabled' and 'Disabled'.
	CookieBasedAffinity *string `pulumi:"cookieBasedAffinity"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Port
	Port *int `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe *SubResourceInvokeResponse `pulumi:"probe"`
	// Protocol. Possible values are: 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Gets or sets Provisioning state of the backend http settings resource Updating/Deleting/Failed
	ProvisioningState *string `pulumi:"provisioningState"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout *int `pulumi:"requestTimeout"`
}

// ApplicationGatewayBackendHttpSettingsInvokeResponseInput is an input type that accepts ApplicationGatewayBackendHttpSettingsInvokeResponseArgs and ApplicationGatewayBackendHttpSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsInvokeResponseInput` via:
//
//          ApplicationGatewayBackendHttpSettingsInvokeResponseArgs{...}
type ApplicationGatewayBackendHttpSettingsInvokeResponseInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsInvokeResponseOutput() ApplicationGatewayBackendHttpSettingsInvokeResponseOutput
	ToApplicationGatewayBackendHttpSettingsInvokeResponseOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsInvokeResponseOutput
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsInvokeResponseArgs struct {
	// Cookie based affinity. Possible values are: 'Enabled' and 'Disabled'.
	CookieBasedAffinity pulumi.StringPtrInput `pulumi:"cookieBasedAffinity"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Port
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe SubResourceInvokeResponsePtrInput `pulumi:"probe"`
	// Protocol. Possible values are: 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Gets or sets Provisioning state of the backend http settings resource Updating/Deleting/Failed
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout pulumi.IntPtrInput `pulumi:"requestTimeout"`
}

func (ApplicationGatewayBackendHttpSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettingsInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsInvokeResponseArgs) ToApplicationGatewayBackendHttpSettingsInvokeResponseOutput() ApplicationGatewayBackendHttpSettingsInvokeResponseOutput {
	return i.ToApplicationGatewayBackendHttpSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsInvokeResponseArgs) ToApplicationGatewayBackendHttpSettingsInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsInvokeResponseOutput)
}

// ApplicationGatewayBackendHttpSettingsInvokeResponseArrayInput is an input type that accepts ApplicationGatewayBackendHttpSettingsInvokeResponseArray and ApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsInvokeResponseArrayInput` via:
//
//          ApplicationGatewayBackendHttpSettingsInvokeResponseArray{ ApplicationGatewayBackendHttpSettingsInvokeResponseArgs{...} }
type ApplicationGatewayBackendHttpSettingsInvokeResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutput() ApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutput
	ToApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutput
}

type ApplicationGatewayBackendHttpSettingsInvokeResponseArray []ApplicationGatewayBackendHttpSettingsInvokeResponseInput

func (ApplicationGatewayBackendHttpSettingsInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettingsInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsInvokeResponseArray) ToApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutput() ApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutput {
	return i.ToApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsInvokeResponseArray) ToApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettingsInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsInvokeResponseOutput) ToApplicationGatewayBackendHttpSettingsInvokeResponseOutput() ApplicationGatewayBackendHttpSettingsInvokeResponseOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsInvokeResponseOutput) ToApplicationGatewayBackendHttpSettingsInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsInvokeResponseOutput {
	return o
}

// Cookie based affinity. Possible values are: 'Enabled' and 'Disabled'.
func (o ApplicationGatewayBackendHttpSettingsInvokeResponseOutput) CookieBasedAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsInvokeResponse) *string { return v.CookieBasedAffinity }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendHttpSettingsInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayBackendHttpSettingsInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayBackendHttpSettingsInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Port
func (o ApplicationGatewayBackendHttpSettingsInvokeResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsInvokeResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Probe resource of an application gateway.
func (o ApplicationGatewayBackendHttpSettingsInvokeResponseOutput) Probe() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsInvokeResponse) *SubResourceInvokeResponse { return v.Probe }).(SubResourceInvokeResponsePtrOutput)
}

// Protocol. Possible values are: 'Http' and 'Https'.
func (o ApplicationGatewayBackendHttpSettingsInvokeResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsInvokeResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Gets or sets Provisioning state of the backend http settings resource Updating/Deleting/Failed
func (o ApplicationGatewayBackendHttpSettingsInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayBackendHttpSettingsInvokeResponseOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsInvokeResponse) *int { return v.RequestTimeout }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettingsInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutput) ToApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutput() ApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutput) ToApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendHttpSettingsInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendHttpSettingsInvokeResponse {
		return vs[0].([]ApplicationGatewayBackendHttpSettingsInvokeResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendHttpSettingsInvokeResponseOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsResponse struct {
	// Cookie based affinity. Possible values are: 'Enabled' and 'Disabled'.
	CookieBasedAffinity *string `pulumi:"cookieBasedAffinity"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Port
	Port *int `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe *SubResourceResponse `pulumi:"probe"`
	// Protocol. Possible values are: 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Gets or sets Provisioning state of the backend http settings resource Updating/Deleting/Failed
	ProvisioningState *string `pulumi:"provisioningState"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout *int `pulumi:"requestTimeout"`
}

// ApplicationGatewayBackendHttpSettingsResponseInput is an input type that accepts ApplicationGatewayBackendHttpSettingsResponseArgs and ApplicationGatewayBackendHttpSettingsResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsResponseInput` via:
//
//          ApplicationGatewayBackendHttpSettingsResponseArgs{...}
type ApplicationGatewayBackendHttpSettingsResponseInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsResponseOutput() ApplicationGatewayBackendHttpSettingsResponseOutput
	ToApplicationGatewayBackendHttpSettingsResponseOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsResponseOutput
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsResponseArgs struct {
	// Cookie based affinity. Possible values are: 'Enabled' and 'Disabled'.
	CookieBasedAffinity pulumi.StringPtrInput `pulumi:"cookieBasedAffinity"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Port
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe SubResourceResponsePtrInput `pulumi:"probe"`
	// Protocol. Possible values are: 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Gets or sets Provisioning state of the backend http settings resource Updating/Deleting/Failed
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout pulumi.IntPtrInput `pulumi:"requestTimeout"`
}

func (ApplicationGatewayBackendHttpSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsResponseArgs) ToApplicationGatewayBackendHttpSettingsResponseOutput() ApplicationGatewayBackendHttpSettingsResponseOutput {
	return i.ToApplicationGatewayBackendHttpSettingsResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsResponseArgs) ToApplicationGatewayBackendHttpSettingsResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsResponseOutput)
}

// ApplicationGatewayBackendHttpSettingsResponseArrayInput is an input type that accepts ApplicationGatewayBackendHttpSettingsResponseArray and ApplicationGatewayBackendHttpSettingsResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsResponseArrayInput` via:
//
//          ApplicationGatewayBackendHttpSettingsResponseArray{ ApplicationGatewayBackendHttpSettingsResponseArgs{...} }
type ApplicationGatewayBackendHttpSettingsResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsResponseArrayOutput() ApplicationGatewayBackendHttpSettingsResponseArrayOutput
	ToApplicationGatewayBackendHttpSettingsResponseArrayOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsResponseArrayOutput
}

type ApplicationGatewayBackendHttpSettingsResponseArray []ApplicationGatewayBackendHttpSettingsResponseInput

func (ApplicationGatewayBackendHttpSettingsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsResponseArray) ToApplicationGatewayBackendHttpSettingsResponseArrayOutput() ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return i.ToApplicationGatewayBackendHttpSettingsResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsResponseArray) ToApplicationGatewayBackendHttpSettingsResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsResponseArrayOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ToApplicationGatewayBackendHttpSettingsResponseOutput() ApplicationGatewayBackendHttpSettingsResponseOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ToApplicationGatewayBackendHttpSettingsResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponseOutput {
	return o
}

// Cookie based affinity. Possible values are: 'Enabled' and 'Disabled'.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) CookieBasedAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.CookieBasedAffinity }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Port
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Probe resource of an application gateway.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Probe() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *SubResourceResponse { return v.Probe }).(SubResourceResponsePtrOutput)
}

// Protocol. Possible values are: 'Http' and 'Https'.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Gets or sets Provisioning state of the backend http settings resource Updating/Deleting/Failed
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *int { return v.RequestTimeout }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayBackendHttpSettingsResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsResponseArrayOutput) ToApplicationGatewayBackendHttpSettingsResponseArrayOutput() ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponseArrayOutput) ToApplicationGatewayBackendHttpSettingsResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendHttpSettingsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendHttpSettingsResponse {
		return vs[0].([]ApplicationGatewayBackendHttpSettingsResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendHttpSettingsResponseOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// PrivateIP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reference of the PublicIP resource.
	PublicIPAddress *SubResource `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet *SubResource `pulumi:"subnet"`
}

// ApplicationGatewayFrontendIPConfigurationInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationArgs and ApplicationGatewayFrontendIPConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationArgs{...}
type ApplicationGatewayFrontendIPConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationOutput() ApplicationGatewayFrontendIPConfigurationOutput
	ToApplicationGatewayFrontendIPConfigurationOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationOutput
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// PrivateIP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Reference of the PublicIP resource.
	PublicIPAddress SubResourcePtrInput `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (ApplicationGatewayFrontendIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationArgs) ToApplicationGatewayFrontendIPConfigurationOutput() ApplicationGatewayFrontendIPConfigurationOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationArgs) ToApplicationGatewayFrontendIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationOutput)
}

// ApplicationGatewayFrontendIPConfigurationArrayInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationArray and ApplicationGatewayFrontendIPConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationArrayInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationArray{ ApplicationGatewayFrontendIPConfigurationArgs{...} }
type ApplicationGatewayFrontendIPConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationArrayOutput() ApplicationGatewayFrontendIPConfigurationArrayOutput
	ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationArrayOutput
}

type ApplicationGatewayFrontendIPConfigurationArray []ApplicationGatewayFrontendIPConfigurationInput

func (ApplicationGatewayFrontendIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationArray) ToApplicationGatewayFrontendIPConfigurationArrayOutput() ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationArray) ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationArrayOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationOutput) ToApplicationGatewayFrontendIPConfigurationOutput() ApplicationGatewayFrontendIPConfigurationOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationOutput) ToApplicationGatewayFrontendIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// PrivateIPAddress of the network interface IP Configuration.
func (o ApplicationGatewayFrontendIPConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// PrivateIP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o ApplicationGatewayFrontendIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayFrontendIPConfigurationOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Reference of the PublicIP resource.
func (o ApplicationGatewayFrontendIPConfigurationOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *SubResource { return v.PublicIPAddress }).(SubResourcePtrOutput)
}

// Reference of the subnet resource.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type ApplicationGatewayFrontendIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationArrayOutput) ToApplicationGatewayFrontendIPConfigurationArrayOutput() ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationArrayOutput) ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendIPConfiguration {
		return vs[0].([]ApplicationGatewayFrontendIPConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayFrontendIPConfigurationOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationInvokeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// PrivateIP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reference of the PublicIP resource.
	PublicIPAddress *SubResourceInvokeResponse `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet *SubResourceInvokeResponse `pulumi:"subnet"`
}

// ApplicationGatewayFrontendIPConfigurationInvokeResponseInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationInvokeResponseArgs and ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationInvokeResponseInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationInvokeResponseArgs{...}
type ApplicationGatewayFrontendIPConfigurationInvokeResponseInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationInvokeResponseOutput() ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput
	ToApplicationGatewayFrontendIPConfigurationInvokeResponseOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationInvokeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// PrivateIP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Reference of the PublicIP resource.
	PublicIPAddress SubResourceInvokeResponsePtrInput `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet SubResourceInvokeResponsePtrInput `pulumi:"subnet"`
}

func (ApplicationGatewayFrontendIPConfigurationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfigurationInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationInvokeResponseArgs) ToApplicationGatewayFrontendIPConfigurationInvokeResponseOutput() ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationInvokeResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationInvokeResponseArgs) ToApplicationGatewayFrontendIPConfigurationInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput)
}

// ApplicationGatewayFrontendIPConfigurationInvokeResponseArrayInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationInvokeResponseArray and ApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationInvokeResponseArrayInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationInvokeResponseArray{ ApplicationGatewayFrontendIPConfigurationInvokeResponseArgs{...} }
type ApplicationGatewayFrontendIPConfigurationInvokeResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutput() ApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutput
	ToApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutput
}

type ApplicationGatewayFrontendIPConfigurationInvokeResponseArray []ApplicationGatewayFrontendIPConfigurationInvokeResponseInput

func (ApplicationGatewayFrontendIPConfigurationInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfigurationInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationInvokeResponseArray) ToApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutput() ApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationInvokeResponseArray) ToApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfigurationInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput) ToApplicationGatewayFrontendIPConfigurationInvokeResponseOutput() ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput) ToApplicationGatewayFrontendIPConfigurationInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// PrivateIPAddress of the network interface IP Configuration.
func (o ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationInvokeResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// PrivateIP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationInvokeResponse) *string {
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Reference of the PublicIP resource.
func (o ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput) PublicIPAddress() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationInvokeResponse) *SubResourceInvokeResponse {
		return v.PublicIPAddress
	}).(SubResourceInvokeResponsePtrOutput)
}

// Reference of the subnet resource.
func (o ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput) Subnet() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationInvokeResponse) *SubResourceInvokeResponse {
		return v.Subnet
	}).(SubResourceInvokeResponsePtrOutput)
}

type ApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfigurationInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutput) ToApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutput() ApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutput) ToApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendIPConfigurationInvokeResponse {
		return vs[0].([]ApplicationGatewayFrontendIPConfigurationInvokeResponse)[vs[1].(int)]
	}).(ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// PrivateIP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reference of the PublicIP resource.
	PublicIPAddress *SubResourceResponse `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet *SubResourceResponse `pulumi:"subnet"`
}

// ApplicationGatewayFrontendIPConfigurationResponseInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationResponseArgs and ApplicationGatewayFrontendIPConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationResponseInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationResponseArgs{...}
type ApplicationGatewayFrontendIPConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationResponseOutput() ApplicationGatewayFrontendIPConfigurationResponseOutput
	ToApplicationGatewayFrontendIPConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationResponseOutput
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// PrivateIP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Reference of the PublicIP resource.
	PublicIPAddress SubResourceResponsePtrInput `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet SubResourceResponsePtrInput `pulumi:"subnet"`
}

func (ApplicationGatewayFrontendIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationResponseArgs) ToApplicationGatewayFrontendIPConfigurationResponseOutput() ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationResponseArgs) ToApplicationGatewayFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationResponseOutput)
}

// ApplicationGatewayFrontendIPConfigurationResponseArrayInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationResponseArray and ApplicationGatewayFrontendIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationResponseArrayInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationResponseArray{ ApplicationGatewayFrontendIPConfigurationResponseArgs{...} }
type ApplicationGatewayFrontendIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationResponseArrayOutput() ApplicationGatewayFrontendIPConfigurationResponseArrayOutput
	ToApplicationGatewayFrontendIPConfigurationResponseArrayOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationResponseArrayOutput
}

type ApplicationGatewayFrontendIPConfigurationResponseArray []ApplicationGatewayFrontendIPConfigurationResponseInput

func (ApplicationGatewayFrontendIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationResponseArray) ToApplicationGatewayFrontendIPConfigurationResponseArrayOutput() ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationResponseArray) ToApplicationGatewayFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationResponseArrayOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) ToApplicationGatewayFrontendIPConfigurationResponseOutput() ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) ToApplicationGatewayFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// PrivateIPAddress of the network interface IP Configuration.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// PrivateIP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Reference of the PublicIP resource.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *SubResourceResponse {
		return v.PublicIPAddress
	}).(SubResourceResponsePtrOutput)
}

// Reference of the subnet resource.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

type ApplicationGatewayFrontendIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) ToApplicationGatewayFrontendIPConfigurationResponseArrayOutput() ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) ToApplicationGatewayFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendIPConfigurationResponse {
		return vs[0].([]ApplicationGatewayFrontendIPConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayFrontendIPConfigurationResponseOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPort struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Frontend port
	Port *int `pulumi:"port"`
	// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayFrontendPortInput is an input type that accepts ApplicationGatewayFrontendPortArgs and ApplicationGatewayFrontendPortOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortInput` via:
//
//          ApplicationGatewayFrontendPortArgs{...}
type ApplicationGatewayFrontendPortInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortOutput() ApplicationGatewayFrontendPortOutput
	ToApplicationGatewayFrontendPortOutputWithContext(context.Context) ApplicationGatewayFrontendPortOutput
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Frontend port
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayFrontendPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortArgs) ToApplicationGatewayFrontendPortOutput() ApplicationGatewayFrontendPortOutput {
	return i.ToApplicationGatewayFrontendPortOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortArgs) ToApplicationGatewayFrontendPortOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortOutput)
}

// ApplicationGatewayFrontendPortArrayInput is an input type that accepts ApplicationGatewayFrontendPortArray and ApplicationGatewayFrontendPortArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortArrayInput` via:
//
//          ApplicationGatewayFrontendPortArray{ ApplicationGatewayFrontendPortArgs{...} }
type ApplicationGatewayFrontendPortArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortArrayOutput() ApplicationGatewayFrontendPortArrayOutput
	ToApplicationGatewayFrontendPortArrayOutputWithContext(context.Context) ApplicationGatewayFrontendPortArrayOutput
}

type ApplicationGatewayFrontendPortArray []ApplicationGatewayFrontendPortInput

func (ApplicationGatewayFrontendPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortArray) ToApplicationGatewayFrontendPortArrayOutput() ApplicationGatewayFrontendPortArrayOutput {
	return i.ToApplicationGatewayFrontendPortArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortArray) ToApplicationGatewayFrontendPortArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortArrayOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortOutput) ToApplicationGatewayFrontendPortOutput() ApplicationGatewayFrontendPortOutput {
	return o
}

func (o ApplicationGatewayFrontendPortOutput) ToApplicationGatewayFrontendPortOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayFrontendPortOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayFrontendPortOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayFrontendPortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Frontend port
func (o ApplicationGatewayFrontendPortOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayFrontendPortOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayFrontendPortArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortArrayOutput) ToApplicationGatewayFrontendPortArrayOutput() ApplicationGatewayFrontendPortArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortArrayOutput) ToApplicationGatewayFrontendPortArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendPort {
		return vs[0].([]ApplicationGatewayFrontendPort)[vs[1].(int)]
	}).(ApplicationGatewayFrontendPortOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortInvokeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Frontend port
	Port *int `pulumi:"port"`
	// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayFrontendPortInvokeResponseInput is an input type that accepts ApplicationGatewayFrontendPortInvokeResponseArgs and ApplicationGatewayFrontendPortInvokeResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortInvokeResponseInput` via:
//
//          ApplicationGatewayFrontendPortInvokeResponseArgs{...}
type ApplicationGatewayFrontendPortInvokeResponseInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortInvokeResponseOutput() ApplicationGatewayFrontendPortInvokeResponseOutput
	ToApplicationGatewayFrontendPortInvokeResponseOutputWithContext(context.Context) ApplicationGatewayFrontendPortInvokeResponseOutput
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortInvokeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Frontend port
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayFrontendPortInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPortInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortInvokeResponseArgs) ToApplicationGatewayFrontendPortInvokeResponseOutput() ApplicationGatewayFrontendPortInvokeResponseOutput {
	return i.ToApplicationGatewayFrontendPortInvokeResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortInvokeResponseArgs) ToApplicationGatewayFrontendPortInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortInvokeResponseOutput)
}

// ApplicationGatewayFrontendPortInvokeResponseArrayInput is an input type that accepts ApplicationGatewayFrontendPortInvokeResponseArray and ApplicationGatewayFrontendPortInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortInvokeResponseArrayInput` via:
//
//          ApplicationGatewayFrontendPortInvokeResponseArray{ ApplicationGatewayFrontendPortInvokeResponseArgs{...} }
type ApplicationGatewayFrontendPortInvokeResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortInvokeResponseArrayOutput() ApplicationGatewayFrontendPortInvokeResponseArrayOutput
	ToApplicationGatewayFrontendPortInvokeResponseArrayOutputWithContext(context.Context) ApplicationGatewayFrontendPortInvokeResponseArrayOutput
}

type ApplicationGatewayFrontendPortInvokeResponseArray []ApplicationGatewayFrontendPortInvokeResponseInput

func (ApplicationGatewayFrontendPortInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPortInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortInvokeResponseArray) ToApplicationGatewayFrontendPortInvokeResponseArrayOutput() ApplicationGatewayFrontendPortInvokeResponseArrayOutput {
	return i.ToApplicationGatewayFrontendPortInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortInvokeResponseArray) ToApplicationGatewayFrontendPortInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortInvokeResponseArrayOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPortInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortInvokeResponseOutput) ToApplicationGatewayFrontendPortInvokeResponseOutput() ApplicationGatewayFrontendPortInvokeResponseOutput {
	return o
}

func (o ApplicationGatewayFrontendPortInvokeResponseOutput) ToApplicationGatewayFrontendPortInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortInvokeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayFrontendPortInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayFrontendPortInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayFrontendPortInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Frontend port
func (o ApplicationGatewayFrontendPortInvokeResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortInvokeResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayFrontendPortInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayFrontendPortInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPortInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortInvokeResponseArrayOutput) ToApplicationGatewayFrontendPortInvokeResponseArrayOutput() ApplicationGatewayFrontendPortInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortInvokeResponseArrayOutput) ToApplicationGatewayFrontendPortInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortInvokeResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendPortInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendPortInvokeResponse {
		return vs[0].([]ApplicationGatewayFrontendPortInvokeResponse)[vs[1].(int)]
	}).(ApplicationGatewayFrontendPortInvokeResponseOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Frontend port
	Port *int `pulumi:"port"`
	// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayFrontendPortResponseInput is an input type that accepts ApplicationGatewayFrontendPortResponseArgs and ApplicationGatewayFrontendPortResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortResponseInput` via:
//
//          ApplicationGatewayFrontendPortResponseArgs{...}
type ApplicationGatewayFrontendPortResponseInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortResponseOutput() ApplicationGatewayFrontendPortResponseOutput
	ToApplicationGatewayFrontendPortResponseOutputWithContext(context.Context) ApplicationGatewayFrontendPortResponseOutput
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Frontend port
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayFrontendPortResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPortResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortResponseArgs) ToApplicationGatewayFrontendPortResponseOutput() ApplicationGatewayFrontendPortResponseOutput {
	return i.ToApplicationGatewayFrontendPortResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortResponseArgs) ToApplicationGatewayFrontendPortResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortResponseOutput)
}

// ApplicationGatewayFrontendPortResponseArrayInput is an input type that accepts ApplicationGatewayFrontendPortResponseArray and ApplicationGatewayFrontendPortResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortResponseArrayInput` via:
//
//          ApplicationGatewayFrontendPortResponseArray{ ApplicationGatewayFrontendPortResponseArgs{...} }
type ApplicationGatewayFrontendPortResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortResponseArrayOutput() ApplicationGatewayFrontendPortResponseArrayOutput
	ToApplicationGatewayFrontendPortResponseArrayOutputWithContext(context.Context) ApplicationGatewayFrontendPortResponseArrayOutput
}

type ApplicationGatewayFrontendPortResponseArray []ApplicationGatewayFrontendPortResponseInput

func (ApplicationGatewayFrontendPortResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPortResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortResponseArray) ToApplicationGatewayFrontendPortResponseArrayOutput() ApplicationGatewayFrontendPortResponseArrayOutput {
	return i.ToApplicationGatewayFrontendPortResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortResponseArray) ToApplicationGatewayFrontendPortResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortResponseArrayOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPortResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortResponseOutput) ToApplicationGatewayFrontendPortResponseOutput() ApplicationGatewayFrontendPortResponseOutput {
	return o
}

func (o ApplicationGatewayFrontendPortResponseOutput) ToApplicationGatewayFrontendPortResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayFrontendPortResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayFrontendPortResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayFrontendPortResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Frontend port
func (o ApplicationGatewayFrontendPortResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayFrontendPortResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayFrontendPortResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPortResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortResponseArrayOutput) ToApplicationGatewayFrontendPortResponseArrayOutput() ApplicationGatewayFrontendPortResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortResponseArrayOutput) ToApplicationGatewayFrontendPortResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendPortResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendPortResponse {
		return vs[0].([]ApplicationGatewayFrontendPortResponse)[vs[1].(int)]
	}).(ApplicationGatewayFrontendPortResponseOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListener struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort *SubResource `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName *string `pulumi:"hostName"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Protocol. Possible values are: 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication *bool `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate *SubResource `pulumi:"sslCertificate"`
}

// ApplicationGatewayHttpListenerInput is an input type that accepts ApplicationGatewayHttpListenerArgs and ApplicationGatewayHttpListenerOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerInput` via:
//
//          ApplicationGatewayHttpListenerArgs{...}
type ApplicationGatewayHttpListenerInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerOutput() ApplicationGatewayHttpListenerOutput
	ToApplicationGatewayHttpListenerOutputWithContext(context.Context) ApplicationGatewayHttpListenerOutput
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort SubResourcePtrInput `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Protocol. Possible values are: 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication pulumi.BoolPtrInput `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate SubResourcePtrInput `pulumi:"sslCertificate"`
}

func (ApplicationGatewayHttpListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListener)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerArgs) ToApplicationGatewayHttpListenerOutput() ApplicationGatewayHttpListenerOutput {
	return i.ToApplicationGatewayHttpListenerOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerArgs) ToApplicationGatewayHttpListenerOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerOutput)
}

// ApplicationGatewayHttpListenerArrayInput is an input type that accepts ApplicationGatewayHttpListenerArray and ApplicationGatewayHttpListenerArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerArrayInput` via:
//
//          ApplicationGatewayHttpListenerArray{ ApplicationGatewayHttpListenerArgs{...} }
type ApplicationGatewayHttpListenerArrayInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerArrayOutput() ApplicationGatewayHttpListenerArrayOutput
	ToApplicationGatewayHttpListenerArrayOutputWithContext(context.Context) ApplicationGatewayHttpListenerArrayOutput
}

type ApplicationGatewayHttpListenerArray []ApplicationGatewayHttpListenerInput

func (ApplicationGatewayHttpListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListener)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerArray) ToApplicationGatewayHttpListenerArrayOutput() ApplicationGatewayHttpListenerArrayOutput {
	return i.ToApplicationGatewayHttpListenerArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerArray) ToApplicationGatewayHttpListenerArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerArrayOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListener)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerOutput) ToApplicationGatewayHttpListenerOutput() ApplicationGatewayHttpListenerOutput {
	return o
}

func (o ApplicationGatewayHttpListenerOutput) ToApplicationGatewayHttpListenerOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayHttpListenerOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Frontend IP configuration resource of an application gateway.
func (o ApplicationGatewayHttpListenerOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// Frontend port resource of an application gateway.
func (o ApplicationGatewayHttpListenerOutput) FrontendPort() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *SubResource { return v.FrontendPort }).(SubResourcePtrOutput)
}

// Host name of HTTP listener.
func (o ApplicationGatewayHttpListenerOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayHttpListenerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayHttpListenerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol. Possible values are: 'Http' and 'Https'.
func (o ApplicationGatewayHttpListenerOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayHttpListenerOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Applicable only if protocol is https. Enables SNI for multi-hosting.
func (o ApplicationGatewayHttpListenerOutput) RequireServerNameIndication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *bool { return v.RequireServerNameIndication }).(pulumi.BoolPtrOutput)
}

// SSL certificate resource of an application gateway.
func (o ApplicationGatewayHttpListenerOutput) SslCertificate() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *SubResource { return v.SslCertificate }).(SubResourcePtrOutput)
}

type ApplicationGatewayHttpListenerArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListener)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerArrayOutput) ToApplicationGatewayHttpListenerArrayOutput() ApplicationGatewayHttpListenerArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerArrayOutput) ToApplicationGatewayHttpListenerArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayHttpListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayHttpListener {
		return vs[0].([]ApplicationGatewayHttpListener)[vs[1].(int)]
	}).(ApplicationGatewayHttpListenerOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerInvokeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration *SubResourceInvokeResponse `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort *SubResourceInvokeResponse `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName *string `pulumi:"hostName"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Protocol. Possible values are: 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication *bool `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate *SubResourceInvokeResponse `pulumi:"sslCertificate"`
}

// ApplicationGatewayHttpListenerInvokeResponseInput is an input type that accepts ApplicationGatewayHttpListenerInvokeResponseArgs and ApplicationGatewayHttpListenerInvokeResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerInvokeResponseInput` via:
//
//          ApplicationGatewayHttpListenerInvokeResponseArgs{...}
type ApplicationGatewayHttpListenerInvokeResponseInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerInvokeResponseOutput() ApplicationGatewayHttpListenerInvokeResponseOutput
	ToApplicationGatewayHttpListenerInvokeResponseOutputWithContext(context.Context) ApplicationGatewayHttpListenerInvokeResponseOutput
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerInvokeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration SubResourceInvokeResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort SubResourceInvokeResponsePtrInput `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Protocol. Possible values are: 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication pulumi.BoolPtrInput `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate SubResourceInvokeResponsePtrInput `pulumi:"sslCertificate"`
}

func (ApplicationGatewayHttpListenerInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListenerInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerInvokeResponseArgs) ToApplicationGatewayHttpListenerInvokeResponseOutput() ApplicationGatewayHttpListenerInvokeResponseOutput {
	return i.ToApplicationGatewayHttpListenerInvokeResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerInvokeResponseArgs) ToApplicationGatewayHttpListenerInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerInvokeResponseOutput)
}

// ApplicationGatewayHttpListenerInvokeResponseArrayInput is an input type that accepts ApplicationGatewayHttpListenerInvokeResponseArray and ApplicationGatewayHttpListenerInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerInvokeResponseArrayInput` via:
//
//          ApplicationGatewayHttpListenerInvokeResponseArray{ ApplicationGatewayHttpListenerInvokeResponseArgs{...} }
type ApplicationGatewayHttpListenerInvokeResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerInvokeResponseArrayOutput() ApplicationGatewayHttpListenerInvokeResponseArrayOutput
	ToApplicationGatewayHttpListenerInvokeResponseArrayOutputWithContext(context.Context) ApplicationGatewayHttpListenerInvokeResponseArrayOutput
}

type ApplicationGatewayHttpListenerInvokeResponseArray []ApplicationGatewayHttpListenerInvokeResponseInput

func (ApplicationGatewayHttpListenerInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListenerInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerInvokeResponseArray) ToApplicationGatewayHttpListenerInvokeResponseArrayOutput() ApplicationGatewayHttpListenerInvokeResponseArrayOutput {
	return i.ToApplicationGatewayHttpListenerInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerInvokeResponseArray) ToApplicationGatewayHttpListenerInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerInvokeResponseArrayOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListenerInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerInvokeResponseOutput) ToApplicationGatewayHttpListenerInvokeResponseOutput() ApplicationGatewayHttpListenerInvokeResponseOutput {
	return o
}

func (o ApplicationGatewayHttpListenerInvokeResponseOutput) ToApplicationGatewayHttpListenerInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerInvokeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayHttpListenerInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Frontend IP configuration resource of an application gateway.
func (o ApplicationGatewayHttpListenerInvokeResponseOutput) FrontendIPConfiguration() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerInvokeResponse) *SubResourceInvokeResponse {
		return v.FrontendIPConfiguration
	}).(SubResourceInvokeResponsePtrOutput)
}

// Frontend port resource of an application gateway.
func (o ApplicationGatewayHttpListenerInvokeResponseOutput) FrontendPort() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerInvokeResponse) *SubResourceInvokeResponse { return v.FrontendPort }).(SubResourceInvokeResponsePtrOutput)
}

// Host name of HTTP listener.
func (o ApplicationGatewayHttpListenerInvokeResponseOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerInvokeResponse) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayHttpListenerInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayHttpListenerInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol. Possible values are: 'Http' and 'Https'.
func (o ApplicationGatewayHttpListenerInvokeResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerInvokeResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayHttpListenerInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Applicable only if protocol is https. Enables SNI for multi-hosting.
func (o ApplicationGatewayHttpListenerInvokeResponseOutput) RequireServerNameIndication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerInvokeResponse) *bool { return v.RequireServerNameIndication }).(pulumi.BoolPtrOutput)
}

// SSL certificate resource of an application gateway.
func (o ApplicationGatewayHttpListenerInvokeResponseOutput) SslCertificate() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerInvokeResponse) *SubResourceInvokeResponse {
		return v.SslCertificate
	}).(SubResourceInvokeResponsePtrOutput)
}

type ApplicationGatewayHttpListenerInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListenerInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerInvokeResponseArrayOutput) ToApplicationGatewayHttpListenerInvokeResponseArrayOutput() ApplicationGatewayHttpListenerInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerInvokeResponseArrayOutput) ToApplicationGatewayHttpListenerInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerInvokeResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayHttpListenerInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayHttpListenerInvokeResponse {
		return vs[0].([]ApplicationGatewayHttpListenerInvokeResponse)[vs[1].(int)]
	}).(ApplicationGatewayHttpListenerInvokeResponseOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort *SubResourceResponse `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName *string `pulumi:"hostName"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Protocol. Possible values are: 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication *bool `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate *SubResourceResponse `pulumi:"sslCertificate"`
}

// ApplicationGatewayHttpListenerResponseInput is an input type that accepts ApplicationGatewayHttpListenerResponseArgs and ApplicationGatewayHttpListenerResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerResponseInput` via:
//
//          ApplicationGatewayHttpListenerResponseArgs{...}
type ApplicationGatewayHttpListenerResponseInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerResponseOutput() ApplicationGatewayHttpListenerResponseOutput
	ToApplicationGatewayHttpListenerResponseOutputWithContext(context.Context) ApplicationGatewayHttpListenerResponseOutput
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration SubResourceResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort SubResourceResponsePtrInput `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Protocol. Possible values are: 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication pulumi.BoolPtrInput `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate SubResourceResponsePtrInput `pulumi:"sslCertificate"`
}

func (ApplicationGatewayHttpListenerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListenerResponse)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerResponseArgs) ToApplicationGatewayHttpListenerResponseOutput() ApplicationGatewayHttpListenerResponseOutput {
	return i.ToApplicationGatewayHttpListenerResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerResponseArgs) ToApplicationGatewayHttpListenerResponseOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerResponseOutput)
}

// ApplicationGatewayHttpListenerResponseArrayInput is an input type that accepts ApplicationGatewayHttpListenerResponseArray and ApplicationGatewayHttpListenerResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerResponseArrayInput` via:
//
//          ApplicationGatewayHttpListenerResponseArray{ ApplicationGatewayHttpListenerResponseArgs{...} }
type ApplicationGatewayHttpListenerResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerResponseArrayOutput() ApplicationGatewayHttpListenerResponseArrayOutput
	ToApplicationGatewayHttpListenerResponseArrayOutputWithContext(context.Context) ApplicationGatewayHttpListenerResponseArrayOutput
}

type ApplicationGatewayHttpListenerResponseArray []ApplicationGatewayHttpListenerResponseInput

func (ApplicationGatewayHttpListenerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListenerResponse)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerResponseArray) ToApplicationGatewayHttpListenerResponseArrayOutput() ApplicationGatewayHttpListenerResponseArrayOutput {
	return i.ToApplicationGatewayHttpListenerResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerResponseArray) ToApplicationGatewayHttpListenerResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerResponseArrayOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListenerResponse)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerResponseOutput) ToApplicationGatewayHttpListenerResponseOutput() ApplicationGatewayHttpListenerResponseOutput {
	return o
}

func (o ApplicationGatewayHttpListenerResponseOutput) ToApplicationGatewayHttpListenerResponseOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayHttpListenerResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Frontend IP configuration resource of an application gateway.
func (o ApplicationGatewayHttpListenerResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// Frontend port resource of an application gateway.
func (o ApplicationGatewayHttpListenerResponseOutput) FrontendPort() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *SubResourceResponse { return v.FrontendPort }).(SubResourceResponsePtrOutput)
}

// Host name of HTTP listener.
func (o ApplicationGatewayHttpListenerResponseOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayHttpListenerResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayHttpListenerResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol. Possible values are: 'Http' and 'Https'.
func (o ApplicationGatewayHttpListenerResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayHttpListenerResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Applicable only if protocol is https. Enables SNI for multi-hosting.
func (o ApplicationGatewayHttpListenerResponseOutput) RequireServerNameIndication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *bool { return v.RequireServerNameIndication }).(pulumi.BoolPtrOutput)
}

// SSL certificate resource of an application gateway.
func (o ApplicationGatewayHttpListenerResponseOutput) SslCertificate() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *SubResourceResponse { return v.SslCertificate }).(SubResourceResponsePtrOutput)
}

type ApplicationGatewayHttpListenerResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListenerResponse)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerResponseArrayOutput) ToApplicationGatewayHttpListenerResponseArrayOutput() ApplicationGatewayHttpListenerResponseArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerResponseArrayOutput) ToApplicationGatewayHttpListenerResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerResponseArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayHttpListenerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayHttpListenerResponse {
		return vs[0].([]ApplicationGatewayHttpListenerResponse)[vs[1].(int)]
	}).(ApplicationGatewayHttpListenerResponseOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reference of the subnet resource. A subnet from where application gateway gets its private address.
	Subnet *SubResource `pulumi:"subnet"`
}

// ApplicationGatewayIPConfigurationInput is an input type that accepts ApplicationGatewayIPConfigurationArgs and ApplicationGatewayIPConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationInput` via:
//
//          ApplicationGatewayIPConfigurationArgs{...}
type ApplicationGatewayIPConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationOutput() ApplicationGatewayIPConfigurationOutput
	ToApplicationGatewayIPConfigurationOutputWithContext(context.Context) ApplicationGatewayIPConfigurationOutput
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Reference of the subnet resource. A subnet from where application gateway gets its private address.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (ApplicationGatewayIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationArgs) ToApplicationGatewayIPConfigurationOutput() ApplicationGatewayIPConfigurationOutput {
	return i.ToApplicationGatewayIPConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationArgs) ToApplicationGatewayIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationOutput)
}

// ApplicationGatewayIPConfigurationArrayInput is an input type that accepts ApplicationGatewayIPConfigurationArray and ApplicationGatewayIPConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationArrayInput` via:
//
//          ApplicationGatewayIPConfigurationArray{ ApplicationGatewayIPConfigurationArgs{...} }
type ApplicationGatewayIPConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationArrayOutput() ApplicationGatewayIPConfigurationArrayOutput
	ToApplicationGatewayIPConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayIPConfigurationArrayOutput
}

type ApplicationGatewayIPConfigurationArray []ApplicationGatewayIPConfigurationInput

func (ApplicationGatewayIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationArray) ToApplicationGatewayIPConfigurationArrayOutput() ApplicationGatewayIPConfigurationArrayOutput {
	return i.ToApplicationGatewayIPConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationArray) ToApplicationGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationArrayOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationOutput) ToApplicationGatewayIPConfigurationOutput() ApplicationGatewayIPConfigurationOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationOutput) ToApplicationGatewayIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayIPConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayIPConfigurationOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Reference of the subnet resource. A subnet from where application gateway gets its private address.
func (o ApplicationGatewayIPConfigurationOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type ApplicationGatewayIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationArrayOutput) ToApplicationGatewayIPConfigurationArrayOutput() ApplicationGatewayIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationArrayOutput) ToApplicationGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayIPConfiguration {
		return vs[0].([]ApplicationGatewayIPConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayIPConfigurationOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationInvokeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reference of the subnet resource. A subnet from where application gateway gets its private address.
	Subnet *SubResourceInvokeResponse `pulumi:"subnet"`
}

// ApplicationGatewayIPConfigurationInvokeResponseInput is an input type that accepts ApplicationGatewayIPConfigurationInvokeResponseArgs and ApplicationGatewayIPConfigurationInvokeResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationInvokeResponseInput` via:
//
//          ApplicationGatewayIPConfigurationInvokeResponseArgs{...}
type ApplicationGatewayIPConfigurationInvokeResponseInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationInvokeResponseOutput() ApplicationGatewayIPConfigurationInvokeResponseOutput
	ToApplicationGatewayIPConfigurationInvokeResponseOutputWithContext(context.Context) ApplicationGatewayIPConfigurationInvokeResponseOutput
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationInvokeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Reference of the subnet resource. A subnet from where application gateway gets its private address.
	Subnet SubResourceInvokeResponsePtrInput `pulumi:"subnet"`
}

func (ApplicationGatewayIPConfigurationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfigurationInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationInvokeResponseArgs) ToApplicationGatewayIPConfigurationInvokeResponseOutput() ApplicationGatewayIPConfigurationInvokeResponseOutput {
	return i.ToApplicationGatewayIPConfigurationInvokeResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationInvokeResponseArgs) ToApplicationGatewayIPConfigurationInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationInvokeResponseOutput)
}

// ApplicationGatewayIPConfigurationInvokeResponseArrayInput is an input type that accepts ApplicationGatewayIPConfigurationInvokeResponseArray and ApplicationGatewayIPConfigurationInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationInvokeResponseArrayInput` via:
//
//          ApplicationGatewayIPConfigurationInvokeResponseArray{ ApplicationGatewayIPConfigurationInvokeResponseArgs{...} }
type ApplicationGatewayIPConfigurationInvokeResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationInvokeResponseArrayOutput() ApplicationGatewayIPConfigurationInvokeResponseArrayOutput
	ToApplicationGatewayIPConfigurationInvokeResponseArrayOutputWithContext(context.Context) ApplicationGatewayIPConfigurationInvokeResponseArrayOutput
}

type ApplicationGatewayIPConfigurationInvokeResponseArray []ApplicationGatewayIPConfigurationInvokeResponseInput

func (ApplicationGatewayIPConfigurationInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfigurationInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationInvokeResponseArray) ToApplicationGatewayIPConfigurationInvokeResponseArrayOutput() ApplicationGatewayIPConfigurationInvokeResponseArrayOutput {
	return i.ToApplicationGatewayIPConfigurationInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationInvokeResponseArray) ToApplicationGatewayIPConfigurationInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationInvokeResponseArrayOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfigurationInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationInvokeResponseOutput) ToApplicationGatewayIPConfigurationInvokeResponseOutput() ApplicationGatewayIPConfigurationInvokeResponseOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationInvokeResponseOutput) ToApplicationGatewayIPConfigurationInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationInvokeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayIPConfigurationInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayIPConfigurationInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayIPConfigurationInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayIPConfigurationInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Reference of the subnet resource. A subnet from where application gateway gets its private address.
func (o ApplicationGatewayIPConfigurationInvokeResponseOutput) Subnet() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationInvokeResponse) *SubResourceInvokeResponse { return v.Subnet }).(SubResourceInvokeResponsePtrOutput)
}

type ApplicationGatewayIPConfigurationInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfigurationInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationInvokeResponseArrayOutput) ToApplicationGatewayIPConfigurationInvokeResponseArrayOutput() ApplicationGatewayIPConfigurationInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationInvokeResponseArrayOutput) ToApplicationGatewayIPConfigurationInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationInvokeResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayIPConfigurationInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayIPConfigurationInvokeResponse {
		return vs[0].([]ApplicationGatewayIPConfigurationInvokeResponse)[vs[1].(int)]
	}).(ApplicationGatewayIPConfigurationInvokeResponseOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reference of the subnet resource. A subnet from where application gateway gets its private address.
	Subnet *SubResourceResponse `pulumi:"subnet"`
}

// ApplicationGatewayIPConfigurationResponseInput is an input type that accepts ApplicationGatewayIPConfigurationResponseArgs and ApplicationGatewayIPConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationResponseInput` via:
//
//          ApplicationGatewayIPConfigurationResponseArgs{...}
type ApplicationGatewayIPConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationResponseOutput() ApplicationGatewayIPConfigurationResponseOutput
	ToApplicationGatewayIPConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayIPConfigurationResponseOutput
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Reference of the subnet resource. A subnet from where application gateway gets its private address.
	Subnet SubResourceResponsePtrInput `pulumi:"subnet"`
}

func (ApplicationGatewayIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationResponseArgs) ToApplicationGatewayIPConfigurationResponseOutput() ApplicationGatewayIPConfigurationResponseOutput {
	return i.ToApplicationGatewayIPConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationResponseArgs) ToApplicationGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationResponseOutput)
}

// ApplicationGatewayIPConfigurationResponseArrayInput is an input type that accepts ApplicationGatewayIPConfigurationResponseArray and ApplicationGatewayIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationResponseArrayInput` via:
//
//          ApplicationGatewayIPConfigurationResponseArray{ ApplicationGatewayIPConfigurationResponseArgs{...} }
type ApplicationGatewayIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationResponseArrayOutput() ApplicationGatewayIPConfigurationResponseArrayOutput
	ToApplicationGatewayIPConfigurationResponseArrayOutputWithContext(context.Context) ApplicationGatewayIPConfigurationResponseArrayOutput
}

type ApplicationGatewayIPConfigurationResponseArray []ApplicationGatewayIPConfigurationResponseInput

func (ApplicationGatewayIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationResponseArray) ToApplicationGatewayIPConfigurationResponseArrayOutput() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return i.ToApplicationGatewayIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationResponseArray) ToApplicationGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationResponseArrayOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationResponseOutput) ToApplicationGatewayIPConfigurationResponseOutput() ApplicationGatewayIPConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationResponseOutput) ToApplicationGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayIPConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayIPConfigurationResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Reference of the subnet resource. A subnet from where application gateway gets its private address.
func (o ApplicationGatewayIPConfigurationResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

type ApplicationGatewayIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationResponseArrayOutput) ToApplicationGatewayIPConfigurationResponseArrayOutput() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationResponseArrayOutput) ToApplicationGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayIPConfigurationResponse {
		return vs[0].([]ApplicationGatewayIPConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayIPConfigurationResponseOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRule struct {
	// Backend address pool resource of URL path map.
	BackendAddressPool *SubResource `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map.
	BackendHttpSettings *SubResource `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Path rules of URL path map.
	Paths []string `pulumi:"paths"`
	// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayPathRuleInput is an input type that accepts ApplicationGatewayPathRuleArgs and ApplicationGatewayPathRuleOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleInput` via:
//
//          ApplicationGatewayPathRuleArgs{...}
type ApplicationGatewayPathRuleInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleOutput() ApplicationGatewayPathRuleOutput
	ToApplicationGatewayPathRuleOutputWithContext(context.Context) ApplicationGatewayPathRuleOutput
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleArgs struct {
	// Backend address pool resource of URL path map.
	BackendAddressPool SubResourcePtrInput `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map.
	BackendHttpSettings SubResourcePtrInput `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rules of URL path map.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayPathRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRule)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleArgs) ToApplicationGatewayPathRuleOutput() ApplicationGatewayPathRuleOutput {
	return i.ToApplicationGatewayPathRuleOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleArgs) ToApplicationGatewayPathRuleOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleOutput)
}

// ApplicationGatewayPathRuleArrayInput is an input type that accepts ApplicationGatewayPathRuleArray and ApplicationGatewayPathRuleArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleArrayInput` via:
//
//          ApplicationGatewayPathRuleArray{ ApplicationGatewayPathRuleArgs{...} }
type ApplicationGatewayPathRuleArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleArrayOutput() ApplicationGatewayPathRuleArrayOutput
	ToApplicationGatewayPathRuleArrayOutputWithContext(context.Context) ApplicationGatewayPathRuleArrayOutput
}

type ApplicationGatewayPathRuleArray []ApplicationGatewayPathRuleInput

func (ApplicationGatewayPathRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRule)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleArray) ToApplicationGatewayPathRuleArrayOutput() ApplicationGatewayPathRuleArrayOutput {
	return i.ToApplicationGatewayPathRuleArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleArray) ToApplicationGatewayPathRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleArrayOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRule)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleOutput) ToApplicationGatewayPathRuleOutput() ApplicationGatewayPathRuleOutput {
	return o
}

func (o ApplicationGatewayPathRuleOutput) ToApplicationGatewayPathRuleOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleOutput {
	return o
}

// Backend address pool resource of URL path map.
func (o ApplicationGatewayPathRuleOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *SubResource { return v.BackendAddressPool }).(SubResourcePtrOutput)
}

// Backend http settings resource of URL path map.
func (o ApplicationGatewayPathRuleOutput) BackendHttpSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *SubResource { return v.BackendHttpSettings }).(SubResourcePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayPathRuleOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayPathRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayPathRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rules of URL path map.
func (o ApplicationGatewayPathRuleOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayPathRuleOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayPathRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRule)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleArrayOutput) ToApplicationGatewayPathRuleArrayOutput() ApplicationGatewayPathRuleArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleArrayOutput) ToApplicationGatewayPathRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPathRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPathRule {
		return vs[0].([]ApplicationGatewayPathRule)[vs[1].(int)]
	}).(ApplicationGatewayPathRuleOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleInvokeResponse struct {
	// Backend address pool resource of URL path map.
	BackendAddressPool *SubResourceInvokeResponse `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map.
	BackendHttpSettings *SubResourceInvokeResponse `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Path rules of URL path map.
	Paths []string `pulumi:"paths"`
	// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayPathRuleInvokeResponseInput is an input type that accepts ApplicationGatewayPathRuleInvokeResponseArgs and ApplicationGatewayPathRuleInvokeResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleInvokeResponseInput` via:
//
//          ApplicationGatewayPathRuleInvokeResponseArgs{...}
type ApplicationGatewayPathRuleInvokeResponseInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleInvokeResponseOutput() ApplicationGatewayPathRuleInvokeResponseOutput
	ToApplicationGatewayPathRuleInvokeResponseOutputWithContext(context.Context) ApplicationGatewayPathRuleInvokeResponseOutput
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleInvokeResponseArgs struct {
	// Backend address pool resource of URL path map.
	BackendAddressPool SubResourceInvokeResponsePtrInput `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map.
	BackendHttpSettings SubResourceInvokeResponsePtrInput `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rules of URL path map.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayPathRuleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRuleInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleInvokeResponseArgs) ToApplicationGatewayPathRuleInvokeResponseOutput() ApplicationGatewayPathRuleInvokeResponseOutput {
	return i.ToApplicationGatewayPathRuleInvokeResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleInvokeResponseArgs) ToApplicationGatewayPathRuleInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleInvokeResponseOutput)
}

// ApplicationGatewayPathRuleInvokeResponseArrayInput is an input type that accepts ApplicationGatewayPathRuleInvokeResponseArray and ApplicationGatewayPathRuleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleInvokeResponseArrayInput` via:
//
//          ApplicationGatewayPathRuleInvokeResponseArray{ ApplicationGatewayPathRuleInvokeResponseArgs{...} }
type ApplicationGatewayPathRuleInvokeResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleInvokeResponseArrayOutput() ApplicationGatewayPathRuleInvokeResponseArrayOutput
	ToApplicationGatewayPathRuleInvokeResponseArrayOutputWithContext(context.Context) ApplicationGatewayPathRuleInvokeResponseArrayOutput
}

type ApplicationGatewayPathRuleInvokeResponseArray []ApplicationGatewayPathRuleInvokeResponseInput

func (ApplicationGatewayPathRuleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRuleInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleInvokeResponseArray) ToApplicationGatewayPathRuleInvokeResponseArrayOutput() ApplicationGatewayPathRuleInvokeResponseArrayOutput {
	return i.ToApplicationGatewayPathRuleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleInvokeResponseArray) ToApplicationGatewayPathRuleInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleInvokeResponseArrayOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRuleInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleInvokeResponseOutput) ToApplicationGatewayPathRuleInvokeResponseOutput() ApplicationGatewayPathRuleInvokeResponseOutput {
	return o
}

func (o ApplicationGatewayPathRuleInvokeResponseOutput) ToApplicationGatewayPathRuleInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleInvokeResponseOutput {
	return o
}

// Backend address pool resource of URL path map.
func (o ApplicationGatewayPathRuleInvokeResponseOutput) BackendAddressPool() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleInvokeResponse) *SubResourceInvokeResponse {
		return v.BackendAddressPool
	}).(SubResourceInvokeResponsePtrOutput)
}

// Backend http settings resource of URL path map.
func (o ApplicationGatewayPathRuleInvokeResponseOutput) BackendHttpSettings() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleInvokeResponse) *SubResourceInvokeResponse {
		return v.BackendHttpSettings
	}).(SubResourceInvokeResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayPathRuleInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayPathRuleInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayPathRuleInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rules of URL path map.
func (o ApplicationGatewayPathRuleInvokeResponseOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleInvokeResponse) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayPathRuleInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayPathRuleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRuleInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleInvokeResponseArrayOutput) ToApplicationGatewayPathRuleInvokeResponseArrayOutput() ApplicationGatewayPathRuleInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleInvokeResponseArrayOutput) ToApplicationGatewayPathRuleInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleInvokeResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPathRuleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPathRuleInvokeResponse {
		return vs[0].([]ApplicationGatewayPathRuleInvokeResponse)[vs[1].(int)]
	}).(ApplicationGatewayPathRuleInvokeResponseOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleResponse struct {
	// Backend address pool resource of URL path map.
	BackendAddressPool *SubResourceResponse `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map.
	BackendHttpSettings *SubResourceResponse `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Path rules of URL path map.
	Paths []string `pulumi:"paths"`
	// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayPathRuleResponseInput is an input type that accepts ApplicationGatewayPathRuleResponseArgs and ApplicationGatewayPathRuleResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleResponseInput` via:
//
//          ApplicationGatewayPathRuleResponseArgs{...}
type ApplicationGatewayPathRuleResponseInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleResponseOutput() ApplicationGatewayPathRuleResponseOutput
	ToApplicationGatewayPathRuleResponseOutputWithContext(context.Context) ApplicationGatewayPathRuleResponseOutput
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleResponseArgs struct {
	// Backend address pool resource of URL path map.
	BackendAddressPool SubResourceResponsePtrInput `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map.
	BackendHttpSettings SubResourceResponsePtrInput `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rules of URL path map.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayPathRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleResponseArgs) ToApplicationGatewayPathRuleResponseOutput() ApplicationGatewayPathRuleResponseOutput {
	return i.ToApplicationGatewayPathRuleResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleResponseArgs) ToApplicationGatewayPathRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleResponseOutput)
}

// ApplicationGatewayPathRuleResponseArrayInput is an input type that accepts ApplicationGatewayPathRuleResponseArray and ApplicationGatewayPathRuleResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleResponseArrayInput` via:
//
//          ApplicationGatewayPathRuleResponseArray{ ApplicationGatewayPathRuleResponseArgs{...} }
type ApplicationGatewayPathRuleResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleResponseArrayOutput() ApplicationGatewayPathRuleResponseArrayOutput
	ToApplicationGatewayPathRuleResponseArrayOutputWithContext(context.Context) ApplicationGatewayPathRuleResponseArrayOutput
}

type ApplicationGatewayPathRuleResponseArray []ApplicationGatewayPathRuleResponseInput

func (ApplicationGatewayPathRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleResponseArray) ToApplicationGatewayPathRuleResponseArrayOutput() ApplicationGatewayPathRuleResponseArrayOutput {
	return i.ToApplicationGatewayPathRuleResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleResponseArray) ToApplicationGatewayPathRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleResponseArrayOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleResponseOutput) ToApplicationGatewayPathRuleResponseOutput() ApplicationGatewayPathRuleResponseOutput {
	return o
}

func (o ApplicationGatewayPathRuleResponseOutput) ToApplicationGatewayPathRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleResponseOutput {
	return o
}

// Backend address pool resource of URL path map.
func (o ApplicationGatewayPathRuleResponseOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponsePtrOutput)
}

// Backend http settings resource of URL path map.
func (o ApplicationGatewayPathRuleResponseOutput) BackendHttpSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *SubResourceResponse { return v.BackendHttpSettings }).(SubResourceResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayPathRuleResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayPathRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayPathRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rules of URL path map.
func (o ApplicationGatewayPathRuleResponseOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayPathRuleResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayPathRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleResponseArrayOutput) ToApplicationGatewayPathRuleResponseArrayOutput() ApplicationGatewayPathRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleResponseArrayOutput) ToApplicationGatewayPathRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPathRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPathRuleResponse {
		return vs[0].([]ApplicationGatewayPathRuleResponse)[vs[1].(int)]
	}).(ApplicationGatewayPathRuleResponseOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbe struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Host name to send the probe to.
	Host *string `pulumi:"host"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval *int `pulumi:"interval"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
	Path *string `pulumi:"path"`
	// Protocol. Possible values are: 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout *int `pulumi:"timeout"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// ApplicationGatewayProbeInput is an input type that accepts ApplicationGatewayProbeArgs and ApplicationGatewayProbeOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeInput` via:
//
//          ApplicationGatewayProbeArgs{...}
type ApplicationGatewayProbeInput interface {
	pulumi.Input

	ToApplicationGatewayProbeOutput() ApplicationGatewayProbeOutput
	ToApplicationGatewayProbeOutputWithContext(context.Context) ApplicationGatewayProbeOutput
}

// Probe of the application gateway.
type ApplicationGatewayProbeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Host name to send the probe to.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Protocol. Possible values are: 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (ApplicationGatewayProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbe)(nil)).Elem()
}

func (i ApplicationGatewayProbeArgs) ToApplicationGatewayProbeOutput() ApplicationGatewayProbeOutput {
	return i.ToApplicationGatewayProbeOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeArgs) ToApplicationGatewayProbeOutputWithContext(ctx context.Context) ApplicationGatewayProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeOutput)
}

// ApplicationGatewayProbeArrayInput is an input type that accepts ApplicationGatewayProbeArray and ApplicationGatewayProbeArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeArrayInput` via:
//
//          ApplicationGatewayProbeArray{ ApplicationGatewayProbeArgs{...} }
type ApplicationGatewayProbeArrayInput interface {
	pulumi.Input

	ToApplicationGatewayProbeArrayOutput() ApplicationGatewayProbeArrayOutput
	ToApplicationGatewayProbeArrayOutputWithContext(context.Context) ApplicationGatewayProbeArrayOutput
}

type ApplicationGatewayProbeArray []ApplicationGatewayProbeInput

func (ApplicationGatewayProbeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbe)(nil)).Elem()
}

func (i ApplicationGatewayProbeArray) ToApplicationGatewayProbeArrayOutput() ApplicationGatewayProbeArrayOutput {
	return i.ToApplicationGatewayProbeArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeArray) ToApplicationGatewayProbeArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeArrayOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbeOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbe)(nil)).Elem()
}

func (o ApplicationGatewayProbeOutput) ToApplicationGatewayProbeOutput() ApplicationGatewayProbeOutput {
	return o
}

func (o ApplicationGatewayProbeOutput) ToApplicationGatewayProbeOutputWithContext(ctx context.Context) ApplicationGatewayProbeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayProbeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Host name to send the probe to.
func (o ApplicationGatewayProbeOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayProbeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbeOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayProbeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
func (o ApplicationGatewayProbeOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Protocol. Possible values are: 'Http' and 'Https'.
func (o ApplicationGatewayProbeOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayProbeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbeOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
func (o ApplicationGatewayProbeOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayProbeArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbe)(nil)).Elem()
}

func (o ApplicationGatewayProbeArrayOutput) ToApplicationGatewayProbeArrayOutput() ApplicationGatewayProbeArrayOutput {
	return o
}

func (o ApplicationGatewayProbeArrayOutput) ToApplicationGatewayProbeArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeArrayOutput {
	return o
}

func (o ApplicationGatewayProbeArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayProbeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayProbe {
		return vs[0].([]ApplicationGatewayProbe)[vs[1].(int)]
	}).(ApplicationGatewayProbeOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbeInvokeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Host name to send the probe to.
	Host *string `pulumi:"host"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval *int `pulumi:"interval"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
	Path *string `pulumi:"path"`
	// Protocol. Possible values are: 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout *int `pulumi:"timeout"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// ApplicationGatewayProbeInvokeResponseInput is an input type that accepts ApplicationGatewayProbeInvokeResponseArgs and ApplicationGatewayProbeInvokeResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeInvokeResponseInput` via:
//
//          ApplicationGatewayProbeInvokeResponseArgs{...}
type ApplicationGatewayProbeInvokeResponseInput interface {
	pulumi.Input

	ToApplicationGatewayProbeInvokeResponseOutput() ApplicationGatewayProbeInvokeResponseOutput
	ToApplicationGatewayProbeInvokeResponseOutputWithContext(context.Context) ApplicationGatewayProbeInvokeResponseOutput
}

// Probe of the application gateway.
type ApplicationGatewayProbeInvokeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Host name to send the probe to.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Protocol. Possible values are: 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (ApplicationGatewayProbeInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayProbeInvokeResponseArgs) ToApplicationGatewayProbeInvokeResponseOutput() ApplicationGatewayProbeInvokeResponseOutput {
	return i.ToApplicationGatewayProbeInvokeResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeInvokeResponseArgs) ToApplicationGatewayProbeInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbeInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeInvokeResponseOutput)
}

// ApplicationGatewayProbeInvokeResponseArrayInput is an input type that accepts ApplicationGatewayProbeInvokeResponseArray and ApplicationGatewayProbeInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeInvokeResponseArrayInput` via:
//
//          ApplicationGatewayProbeInvokeResponseArray{ ApplicationGatewayProbeInvokeResponseArgs{...} }
type ApplicationGatewayProbeInvokeResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayProbeInvokeResponseArrayOutput() ApplicationGatewayProbeInvokeResponseArrayOutput
	ToApplicationGatewayProbeInvokeResponseArrayOutputWithContext(context.Context) ApplicationGatewayProbeInvokeResponseArrayOutput
}

type ApplicationGatewayProbeInvokeResponseArray []ApplicationGatewayProbeInvokeResponseInput

func (ApplicationGatewayProbeInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbeInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayProbeInvokeResponseArray) ToApplicationGatewayProbeInvokeResponseArrayOutput() ApplicationGatewayProbeInvokeResponseArrayOutput {
	return i.ToApplicationGatewayProbeInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeInvokeResponseArray) ToApplicationGatewayProbeInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeInvokeResponseArrayOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbeInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeInvokeResponseOutput) ToApplicationGatewayProbeInvokeResponseOutput() ApplicationGatewayProbeInvokeResponseOutput {
	return o
}

func (o ApplicationGatewayProbeInvokeResponseOutput) ToApplicationGatewayProbeInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbeInvokeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayProbeInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Host name to send the probe to.
func (o ApplicationGatewayProbeInvokeResponseOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeInvokeResponse) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayProbeInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbeInvokeResponseOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeInvokeResponse) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayProbeInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
func (o ApplicationGatewayProbeInvokeResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeInvokeResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Protocol. Possible values are: 'Http' and 'Https'.
func (o ApplicationGatewayProbeInvokeResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeInvokeResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayProbeInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbeInvokeResponseOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeInvokeResponse) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
func (o ApplicationGatewayProbeInvokeResponseOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeInvokeResponse) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayProbeInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbeInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeInvokeResponseArrayOutput) ToApplicationGatewayProbeInvokeResponseArrayOutput() ApplicationGatewayProbeInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayProbeInvokeResponseArrayOutput) ToApplicationGatewayProbeInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayProbeInvokeResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayProbeInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayProbeInvokeResponse {
		return vs[0].([]ApplicationGatewayProbeInvokeResponse)[vs[1].(int)]
	}).(ApplicationGatewayProbeInvokeResponseOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Host name to send the probe to.
	Host *string `pulumi:"host"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval *int `pulumi:"interval"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
	Path *string `pulumi:"path"`
	// Protocol. Possible values are: 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout *int `pulumi:"timeout"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// ApplicationGatewayProbeResponseInput is an input type that accepts ApplicationGatewayProbeResponseArgs and ApplicationGatewayProbeResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeResponseInput` via:
//
//          ApplicationGatewayProbeResponseArgs{...}
type ApplicationGatewayProbeResponseInput interface {
	pulumi.Input

	ToApplicationGatewayProbeResponseOutput() ApplicationGatewayProbeResponseOutput
	ToApplicationGatewayProbeResponseOutputWithContext(context.Context) ApplicationGatewayProbeResponseOutput
}

// Probe of the application gateway.
type ApplicationGatewayProbeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Host name to send the probe to.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Protocol. Possible values are: 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (ApplicationGatewayProbeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeResponse)(nil)).Elem()
}

func (i ApplicationGatewayProbeResponseArgs) ToApplicationGatewayProbeResponseOutput() ApplicationGatewayProbeResponseOutput {
	return i.ToApplicationGatewayProbeResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeResponseArgs) ToApplicationGatewayProbeResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeResponseOutput)
}

// ApplicationGatewayProbeResponseArrayInput is an input type that accepts ApplicationGatewayProbeResponseArray and ApplicationGatewayProbeResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeResponseArrayInput` via:
//
//          ApplicationGatewayProbeResponseArray{ ApplicationGatewayProbeResponseArgs{...} }
type ApplicationGatewayProbeResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayProbeResponseArrayOutput() ApplicationGatewayProbeResponseArrayOutput
	ToApplicationGatewayProbeResponseArrayOutputWithContext(context.Context) ApplicationGatewayProbeResponseArrayOutput
}

type ApplicationGatewayProbeResponseArray []ApplicationGatewayProbeResponseInput

func (ApplicationGatewayProbeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbeResponse)(nil)).Elem()
}

func (i ApplicationGatewayProbeResponseArray) ToApplicationGatewayProbeResponseArrayOutput() ApplicationGatewayProbeResponseArrayOutput {
	return i.ToApplicationGatewayProbeResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeResponseArray) ToApplicationGatewayProbeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeResponseArrayOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbeResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeResponseOutput) ToApplicationGatewayProbeResponseOutput() ApplicationGatewayProbeResponseOutput {
	return o
}

func (o ApplicationGatewayProbeResponseOutput) ToApplicationGatewayProbeResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayProbeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Host name to send the probe to.
func (o ApplicationGatewayProbeResponseOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayProbeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbeResponseOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayProbeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
func (o ApplicationGatewayProbeResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Protocol. Possible values are: 'Http' and 'Https'.
func (o ApplicationGatewayProbeResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayProbeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbeResponseOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
func (o ApplicationGatewayProbeResponseOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayProbeResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbeResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeResponseArrayOutput) ToApplicationGatewayProbeResponseArrayOutput() ApplicationGatewayProbeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayProbeResponseArrayOutput) ToApplicationGatewayProbeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayProbeResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayProbeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayProbeResponse {
		return vs[0].([]ApplicationGatewayProbeResponse)[vs[1].(int)]
	}).(ApplicationGatewayProbeResponseOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRule struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool *SubResource `pulumi:"backendAddressPool"`
	// Frontend port resource of the application gateway.
	BackendHttpSettings *SubResource `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Http listener resource of the application gateway.
	HttpListener *SubResource `pulumi:"httpListener"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Rule type. Possible values are: 'Basic' and 'PathBasedRouting'.
	RuleType *string `pulumi:"ruleType"`
	// URL path map resource of the application gateway.
	UrlPathMap *SubResource `pulumi:"urlPathMap"`
}

// ApplicationGatewayRequestRoutingRuleInput is an input type that accepts ApplicationGatewayRequestRoutingRuleArgs and ApplicationGatewayRequestRoutingRuleOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleInput` via:
//
//          ApplicationGatewayRequestRoutingRuleArgs{...}
type ApplicationGatewayRequestRoutingRuleInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleOutput() ApplicationGatewayRequestRoutingRuleOutput
	ToApplicationGatewayRequestRoutingRuleOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleOutput
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleArgs struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool SubResourcePtrInput `pulumi:"backendAddressPool"`
	// Frontend port resource of the application gateway.
	BackendHttpSettings SubResourcePtrInput `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Http listener resource of the application gateway.
	HttpListener SubResourcePtrInput `pulumi:"httpListener"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Rule type. Possible values are: 'Basic' and 'PathBasedRouting'.
	RuleType pulumi.StringPtrInput `pulumi:"ruleType"`
	// URL path map resource of the application gateway.
	UrlPathMap SubResourcePtrInput `pulumi:"urlPathMap"`
}

func (ApplicationGatewayRequestRoutingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleArgs) ToApplicationGatewayRequestRoutingRuleOutput() ApplicationGatewayRequestRoutingRuleOutput {
	return i.ToApplicationGatewayRequestRoutingRuleOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleArgs) ToApplicationGatewayRequestRoutingRuleOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleOutput)
}

// ApplicationGatewayRequestRoutingRuleArrayInput is an input type that accepts ApplicationGatewayRequestRoutingRuleArray and ApplicationGatewayRequestRoutingRuleArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleArrayInput` via:
//
//          ApplicationGatewayRequestRoutingRuleArray{ ApplicationGatewayRequestRoutingRuleArgs{...} }
type ApplicationGatewayRequestRoutingRuleArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleArrayOutput() ApplicationGatewayRequestRoutingRuleArrayOutput
	ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleArrayOutput
}

type ApplicationGatewayRequestRoutingRuleArray []ApplicationGatewayRequestRoutingRuleInput

func (ApplicationGatewayRequestRoutingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleArray) ToApplicationGatewayRequestRoutingRuleArrayOutput() ApplicationGatewayRequestRoutingRuleArrayOutput {
	return i.ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleArray) ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleArrayOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleOutput) ToApplicationGatewayRequestRoutingRuleOutput() ApplicationGatewayRequestRoutingRuleOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleOutput) ToApplicationGatewayRequestRoutingRuleOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleOutput {
	return o
}

// Backend address pool resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.BackendAddressPool }).(SubResourcePtrOutput)
}

// Frontend port resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) BackendHttpSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.BackendHttpSettings }).(SubResourcePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayRequestRoutingRuleOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Http listener resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) HttpListener() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.HttpListener }).(SubResourcePtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayRequestRoutingRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayRequestRoutingRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayRequestRoutingRuleOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Rule type. Possible values are: 'Basic' and 'PathBasedRouting'.
func (o ApplicationGatewayRequestRoutingRuleOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.RuleType }).(pulumi.StringPtrOutput)
}

// URL path map resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) UrlPathMap() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.UrlPathMap }).(SubResourcePtrOutput)
}

type ApplicationGatewayRequestRoutingRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleArrayOutput) ToApplicationGatewayRequestRoutingRuleArrayOutput() ApplicationGatewayRequestRoutingRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleArrayOutput) ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRequestRoutingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRequestRoutingRule {
		return vs[0].([]ApplicationGatewayRequestRoutingRule)[vs[1].(int)]
	}).(ApplicationGatewayRequestRoutingRuleOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleInvokeResponse struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool *SubResourceInvokeResponse `pulumi:"backendAddressPool"`
	// Frontend port resource of the application gateway.
	BackendHttpSettings *SubResourceInvokeResponse `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Http listener resource of the application gateway.
	HttpListener *SubResourceInvokeResponse `pulumi:"httpListener"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Rule type. Possible values are: 'Basic' and 'PathBasedRouting'.
	RuleType *string `pulumi:"ruleType"`
	// URL path map resource of the application gateway.
	UrlPathMap *SubResourceInvokeResponse `pulumi:"urlPathMap"`
}

// ApplicationGatewayRequestRoutingRuleInvokeResponseInput is an input type that accepts ApplicationGatewayRequestRoutingRuleInvokeResponseArgs and ApplicationGatewayRequestRoutingRuleInvokeResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleInvokeResponseInput` via:
//
//          ApplicationGatewayRequestRoutingRuleInvokeResponseArgs{...}
type ApplicationGatewayRequestRoutingRuleInvokeResponseInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleInvokeResponseOutput() ApplicationGatewayRequestRoutingRuleInvokeResponseOutput
	ToApplicationGatewayRequestRoutingRuleInvokeResponseOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleInvokeResponseOutput
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleInvokeResponseArgs struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool SubResourceInvokeResponsePtrInput `pulumi:"backendAddressPool"`
	// Frontend port resource of the application gateway.
	BackendHttpSettings SubResourceInvokeResponsePtrInput `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Http listener resource of the application gateway.
	HttpListener SubResourceInvokeResponsePtrInput `pulumi:"httpListener"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Rule type. Possible values are: 'Basic' and 'PathBasedRouting'.
	RuleType pulumi.StringPtrInput `pulumi:"ruleType"`
	// URL path map resource of the application gateway.
	UrlPathMap SubResourceInvokeResponsePtrInput `pulumi:"urlPathMap"`
}

func (ApplicationGatewayRequestRoutingRuleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRuleInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleInvokeResponseArgs) ToApplicationGatewayRequestRoutingRuleInvokeResponseOutput() ApplicationGatewayRequestRoutingRuleInvokeResponseOutput {
	return i.ToApplicationGatewayRequestRoutingRuleInvokeResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleInvokeResponseArgs) ToApplicationGatewayRequestRoutingRuleInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleInvokeResponseOutput)
}

// ApplicationGatewayRequestRoutingRuleInvokeResponseArrayInput is an input type that accepts ApplicationGatewayRequestRoutingRuleInvokeResponseArray and ApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleInvokeResponseArrayInput` via:
//
//          ApplicationGatewayRequestRoutingRuleInvokeResponseArray{ ApplicationGatewayRequestRoutingRuleInvokeResponseArgs{...} }
type ApplicationGatewayRequestRoutingRuleInvokeResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutput() ApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutput
	ToApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutput
}

type ApplicationGatewayRequestRoutingRuleInvokeResponseArray []ApplicationGatewayRequestRoutingRuleInvokeResponseInput

func (ApplicationGatewayRequestRoutingRuleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRuleInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleInvokeResponseArray) ToApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutput() ApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutput {
	return i.ToApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleInvokeResponseArray) ToApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRuleInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleInvokeResponseOutput) ToApplicationGatewayRequestRoutingRuleInvokeResponseOutput() ApplicationGatewayRequestRoutingRuleInvokeResponseOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleInvokeResponseOutput) ToApplicationGatewayRequestRoutingRuleInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleInvokeResponseOutput {
	return o
}

// Backend address pool resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleInvokeResponseOutput) BackendAddressPool() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleInvokeResponse) *SubResourceInvokeResponse {
		return v.BackendAddressPool
	}).(SubResourceInvokeResponsePtrOutput)
}

// Frontend port resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleInvokeResponseOutput) BackendHttpSettings() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleInvokeResponse) *SubResourceInvokeResponse {
		return v.BackendHttpSettings
	}).(SubResourceInvokeResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayRequestRoutingRuleInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Http listener resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleInvokeResponseOutput) HttpListener() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleInvokeResponse) *SubResourceInvokeResponse {
		return v.HttpListener
	}).(SubResourceInvokeResponsePtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayRequestRoutingRuleInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayRequestRoutingRuleInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayRequestRoutingRuleInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Rule type. Possible values are: 'Basic' and 'PathBasedRouting'.
func (o ApplicationGatewayRequestRoutingRuleInvokeResponseOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleInvokeResponse) *string { return v.RuleType }).(pulumi.StringPtrOutput)
}

// URL path map resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleInvokeResponseOutput) UrlPathMap() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleInvokeResponse) *SubResourceInvokeResponse {
		return v.UrlPathMap
	}).(SubResourceInvokeResponsePtrOutput)
}

type ApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRuleInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutput) ToApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutput() ApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutput) ToApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRequestRoutingRuleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRequestRoutingRuleInvokeResponse {
		return vs[0].([]ApplicationGatewayRequestRoutingRuleInvokeResponse)[vs[1].(int)]
	}).(ApplicationGatewayRequestRoutingRuleInvokeResponseOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleResponse struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool *SubResourceResponse `pulumi:"backendAddressPool"`
	// Frontend port resource of the application gateway.
	BackendHttpSettings *SubResourceResponse `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Http listener resource of the application gateway.
	HttpListener *SubResourceResponse `pulumi:"httpListener"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Rule type. Possible values are: 'Basic' and 'PathBasedRouting'.
	RuleType *string `pulumi:"ruleType"`
	// URL path map resource of the application gateway.
	UrlPathMap *SubResourceResponse `pulumi:"urlPathMap"`
}

// ApplicationGatewayRequestRoutingRuleResponseInput is an input type that accepts ApplicationGatewayRequestRoutingRuleResponseArgs and ApplicationGatewayRequestRoutingRuleResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleResponseInput` via:
//
//          ApplicationGatewayRequestRoutingRuleResponseArgs{...}
type ApplicationGatewayRequestRoutingRuleResponseInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleResponseOutput() ApplicationGatewayRequestRoutingRuleResponseOutput
	ToApplicationGatewayRequestRoutingRuleResponseOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleResponseOutput
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleResponseArgs struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool SubResourceResponsePtrInput `pulumi:"backendAddressPool"`
	// Frontend port resource of the application gateway.
	BackendHttpSettings SubResourceResponsePtrInput `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Http listener resource of the application gateway.
	HttpListener SubResourceResponsePtrInput `pulumi:"httpListener"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Rule type. Possible values are: 'Basic' and 'PathBasedRouting'.
	RuleType pulumi.StringPtrInput `pulumi:"ruleType"`
	// URL path map resource of the application gateway.
	UrlPathMap SubResourceResponsePtrInput `pulumi:"urlPathMap"`
}

func (ApplicationGatewayRequestRoutingRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleResponseArgs) ToApplicationGatewayRequestRoutingRuleResponseOutput() ApplicationGatewayRequestRoutingRuleResponseOutput {
	return i.ToApplicationGatewayRequestRoutingRuleResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleResponseArgs) ToApplicationGatewayRequestRoutingRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleResponseOutput)
}

// ApplicationGatewayRequestRoutingRuleResponseArrayInput is an input type that accepts ApplicationGatewayRequestRoutingRuleResponseArray and ApplicationGatewayRequestRoutingRuleResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleResponseArrayInput` via:
//
//          ApplicationGatewayRequestRoutingRuleResponseArray{ ApplicationGatewayRequestRoutingRuleResponseArgs{...} }
type ApplicationGatewayRequestRoutingRuleResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleResponseArrayOutput() ApplicationGatewayRequestRoutingRuleResponseArrayOutput
	ToApplicationGatewayRequestRoutingRuleResponseArrayOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleResponseArrayOutput
}

type ApplicationGatewayRequestRoutingRuleResponseArray []ApplicationGatewayRequestRoutingRuleResponseInput

func (ApplicationGatewayRequestRoutingRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleResponseArray) ToApplicationGatewayRequestRoutingRuleResponseArrayOutput() ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return i.ToApplicationGatewayRequestRoutingRuleResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleResponseArray) ToApplicationGatewayRequestRoutingRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleResponseArrayOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleResponseOutput) ToApplicationGatewayRequestRoutingRuleResponseOutput() ApplicationGatewayRequestRoutingRuleResponseOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleResponseOutput) ToApplicationGatewayRequestRoutingRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleResponseOutput {
	return o
}

// Backend address pool resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponsePtrOutput)
}

// Frontend port resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) BackendHttpSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse {
		return v.BackendHttpSettings
	}).(SubResourceResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Http listener resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) HttpListener() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse { return v.HttpListener }).(SubResourceResponsePtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Rule type. Possible values are: 'Basic' and 'PathBasedRouting'.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.RuleType }).(pulumi.StringPtrOutput)
}

// URL path map resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) UrlPathMap() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse { return v.UrlPathMap }).(SubResourceResponsePtrOutput)
}

type ApplicationGatewayRequestRoutingRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleResponseArrayOutput) ToApplicationGatewayRequestRoutingRuleResponseArrayOutput() ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleResponseArrayOutput) ToApplicationGatewayRequestRoutingRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRequestRoutingRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRequestRoutingRuleResponse {
		return vs[0].([]ApplicationGatewayRequestRoutingRuleResponse)[vs[1].(int)]
	}).(ApplicationGatewayRequestRoutingRuleResponseOutput)
}

// SKU of application gateway
type ApplicationGatewaySku struct {
	// Capacity (instance count) of an application gateway.
	Capacity *int `pulumi:"capacity"`
	// Name of an application gateway SKU. Possible values are: 'Standard_Small', 'Standard_Medium', 'Standard_Large', 'WAF_Medium', and 'WAF_Large'.
	Name *string `pulumi:"name"`
	// Tier of an application gateway.
	Tier *string `pulumi:"tier"`
}

// ApplicationGatewaySkuInput is an input type that accepts ApplicationGatewaySkuArgs and ApplicationGatewaySkuOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuInput` via:
//
//          ApplicationGatewaySkuArgs{...}
type ApplicationGatewaySkuInput interface {
	pulumi.Input

	ToApplicationGatewaySkuOutput() ApplicationGatewaySkuOutput
	ToApplicationGatewaySkuOutputWithContext(context.Context) ApplicationGatewaySkuOutput
}

// SKU of application gateway
type ApplicationGatewaySkuArgs struct {
	// Capacity (instance count) of an application gateway.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Name of an application gateway SKU. Possible values are: 'Standard_Small', 'Standard_Medium', 'Standard_Large', 'WAF_Medium', and 'WAF_Large'.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of an application gateway.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ApplicationGatewaySkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySku)(nil)).Elem()
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuOutput() ApplicationGatewaySkuOutput {
	return i.ToApplicationGatewaySkuOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuOutputWithContext(ctx context.Context) ApplicationGatewaySkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuOutput)
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return i.ToApplicationGatewaySkuPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuOutput).ToApplicationGatewaySkuPtrOutputWithContext(ctx)
}

// ApplicationGatewaySkuPtrInput is an input type that accepts ApplicationGatewaySkuArgs, ApplicationGatewaySkuPtr and ApplicationGatewaySkuPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuPtrInput` via:
//
//          ApplicationGatewaySkuArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewaySkuPtrInput interface {
	pulumi.Input

	ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput
	ToApplicationGatewaySkuPtrOutputWithContext(context.Context) ApplicationGatewaySkuPtrOutput
}

type applicationGatewaySkuPtrType ApplicationGatewaySkuArgs

func ApplicationGatewaySkuPtr(v *ApplicationGatewaySkuArgs) ApplicationGatewaySkuPtrInput {
	return (*applicationGatewaySkuPtrType)(v)
}

func (*applicationGatewaySkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySku)(nil)).Elem()
}

func (i *applicationGatewaySkuPtrType) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return i.ToApplicationGatewaySkuPtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySkuPtrType) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuPtrOutput)
}

// SKU of application gateway
type ApplicationGatewaySkuOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySku)(nil)).Elem()
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuOutput() ApplicationGatewaySkuOutput {
	return o
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuOutputWithContext(ctx context.Context) ApplicationGatewaySkuOutput {
	return o
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return o.ToApplicationGatewaySkuPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *ApplicationGatewaySku {
		return &v
	}).(ApplicationGatewaySkuPtrOutput)
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU. Possible values are: 'Standard_Small', 'Standard_Medium', 'Standard_Large', 'WAF_Medium', and 'WAF_Large'.
func (o ApplicationGatewaySkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySkuPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySku)(nil)).Elem()
}

func (o ApplicationGatewaySkuPtrOutput) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return o
}

func (o ApplicationGatewaySkuPtrOutput) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return o
}

func (o ApplicationGatewaySkuPtrOutput) Elem() ApplicationGatewaySkuOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) ApplicationGatewaySku { return *v }).(ApplicationGatewaySkuOutput)
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU. Possible values are: 'Standard_Small', 'Standard_Medium', 'Standard_Large', 'WAF_Medium', and 'WAF_Large'.
func (o ApplicationGatewaySkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU of application gateway
type ApplicationGatewaySkuInvokeResponse struct {
	// Capacity (instance count) of an application gateway.
	Capacity *int `pulumi:"capacity"`
	// Name of an application gateway SKU. Possible values are: 'Standard_Small', 'Standard_Medium', 'Standard_Large', 'WAF_Medium', and 'WAF_Large'.
	Name *string `pulumi:"name"`
	// Tier of an application gateway.
	Tier *string `pulumi:"tier"`
}

// ApplicationGatewaySkuInvokeResponseInput is an input type that accepts ApplicationGatewaySkuInvokeResponseArgs and ApplicationGatewaySkuInvokeResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuInvokeResponseInput` via:
//
//          ApplicationGatewaySkuInvokeResponseArgs{...}
type ApplicationGatewaySkuInvokeResponseInput interface {
	pulumi.Input

	ToApplicationGatewaySkuInvokeResponseOutput() ApplicationGatewaySkuInvokeResponseOutput
	ToApplicationGatewaySkuInvokeResponseOutputWithContext(context.Context) ApplicationGatewaySkuInvokeResponseOutput
}

// SKU of application gateway
type ApplicationGatewaySkuInvokeResponseArgs struct {
	// Capacity (instance count) of an application gateway.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Name of an application gateway SKU. Possible values are: 'Standard_Small', 'Standard_Medium', 'Standard_Large', 'WAF_Medium', and 'WAF_Large'.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of an application gateway.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ApplicationGatewaySkuInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySkuInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewaySkuInvokeResponseArgs) ToApplicationGatewaySkuInvokeResponseOutput() ApplicationGatewaySkuInvokeResponseOutput {
	return i.ToApplicationGatewaySkuInvokeResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuInvokeResponseArgs) ToApplicationGatewaySkuInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewaySkuInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuInvokeResponseOutput)
}

// SKU of application gateway
type ApplicationGatewaySkuInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySkuInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewaySkuInvokeResponseOutput) ToApplicationGatewaySkuInvokeResponseOutput() ApplicationGatewaySkuInvokeResponseOutput {
	return o
}

func (o ApplicationGatewaySkuInvokeResponseOutput) ToApplicationGatewaySkuInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewaySkuInvokeResponseOutput {
	return o
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuInvokeResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuInvokeResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU. Possible values are: 'Standard_Small', 'Standard_Medium', 'Standard_Large', 'WAF_Medium', and 'WAF_Large'.
func (o ApplicationGatewaySkuInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuInvokeResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuInvokeResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

// SKU of application gateway
type ApplicationGatewaySkuResponse struct {
	// Capacity (instance count) of an application gateway.
	Capacity *int `pulumi:"capacity"`
	// Name of an application gateway SKU. Possible values are: 'Standard_Small', 'Standard_Medium', 'Standard_Large', 'WAF_Medium', and 'WAF_Large'.
	Name *string `pulumi:"name"`
	// Tier of an application gateway.
	Tier *string `pulumi:"tier"`
}

// ApplicationGatewaySkuResponseInput is an input type that accepts ApplicationGatewaySkuResponseArgs and ApplicationGatewaySkuResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuResponseInput` via:
//
//          ApplicationGatewaySkuResponseArgs{...}
type ApplicationGatewaySkuResponseInput interface {
	pulumi.Input

	ToApplicationGatewaySkuResponseOutput() ApplicationGatewaySkuResponseOutput
	ToApplicationGatewaySkuResponseOutputWithContext(context.Context) ApplicationGatewaySkuResponseOutput
}

// SKU of application gateway
type ApplicationGatewaySkuResponseArgs struct {
	// Capacity (instance count) of an application gateway.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Name of an application gateway SKU. Possible values are: 'Standard_Small', 'Standard_Medium', 'Standard_Large', 'WAF_Medium', and 'WAF_Large'.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of an application gateway.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ApplicationGatewaySkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySkuResponse)(nil)).Elem()
}

func (i ApplicationGatewaySkuResponseArgs) ToApplicationGatewaySkuResponseOutput() ApplicationGatewaySkuResponseOutput {
	return i.ToApplicationGatewaySkuResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuResponseArgs) ToApplicationGatewaySkuResponseOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuResponseOutput)
}

func (i ApplicationGatewaySkuResponseArgs) ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput {
	return i.ToApplicationGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuResponseArgs) ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuResponseOutput).ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewaySkuResponsePtrInput is an input type that accepts ApplicationGatewaySkuResponseArgs, ApplicationGatewaySkuResponsePtr and ApplicationGatewaySkuResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuResponsePtrInput` via:
//
//          ApplicationGatewaySkuResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewaySkuResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput
	ToApplicationGatewaySkuResponsePtrOutputWithContext(context.Context) ApplicationGatewaySkuResponsePtrOutput
}

type applicationGatewaySkuResponsePtrType ApplicationGatewaySkuResponseArgs

func ApplicationGatewaySkuResponsePtr(v *ApplicationGatewaySkuResponseArgs) ApplicationGatewaySkuResponsePtrInput {
	return (*applicationGatewaySkuResponsePtrType)(v)
}

func (*applicationGatewaySkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySkuResponse)(nil)).Elem()
}

func (i *applicationGatewaySkuResponsePtrType) ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput {
	return i.ToApplicationGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySkuResponsePtrType) ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuResponsePtrOutput)
}

// SKU of application gateway
type ApplicationGatewaySkuResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySkuResponse)(nil)).Elem()
}

func (o ApplicationGatewaySkuResponseOutput) ToApplicationGatewaySkuResponseOutput() ApplicationGatewaySkuResponseOutput {
	return o
}

func (o ApplicationGatewaySkuResponseOutput) ToApplicationGatewaySkuResponseOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponseOutput {
	return o
}

func (o ApplicationGatewaySkuResponseOutput) ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput {
	return o.ToApplicationGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySkuResponseOutput) ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuResponse) *ApplicationGatewaySkuResponse {
		return &v
	}).(ApplicationGatewaySkuResponsePtrOutput)
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU. Possible values are: 'Standard_Small', 'Standard_Medium', 'Standard_Large', 'WAF_Medium', and 'WAF_Large'.
func (o ApplicationGatewaySkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySkuResponse)(nil)).Elem()
}

func (o ApplicationGatewaySkuResponsePtrOutput) ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySkuResponsePtrOutput) ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySkuResponsePtrOutput) Elem() ApplicationGatewaySkuResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) ApplicationGatewaySkuResponse { return *v }).(ApplicationGatewaySkuResponseOutput)
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU. Possible values are: 'Standard_Small', 'Standard_Medium', 'Standard_Large', 'WAF_Medium', and 'WAF_Large'.
func (o ApplicationGatewaySkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificate struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data *string `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password *string `pulumi:"password"`
	// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
	PublicCertData *string `pulumi:"publicCertData"`
}

// ApplicationGatewaySslCertificateInput is an input type that accepts ApplicationGatewaySslCertificateArgs and ApplicationGatewaySslCertificateOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateInput` via:
//
//          ApplicationGatewaySslCertificateArgs{...}
type ApplicationGatewaySslCertificateInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateOutput() ApplicationGatewaySslCertificateOutput
	ToApplicationGatewaySslCertificateOutputWithContext(context.Context) ApplicationGatewaySslCertificateOutput
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateArgs struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
	PublicCertData pulumi.StringPtrInput `pulumi:"publicCertData"`
}

func (ApplicationGatewaySslCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateArgs) ToApplicationGatewaySslCertificateOutput() ApplicationGatewaySslCertificateOutput {
	return i.ToApplicationGatewaySslCertificateOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateArgs) ToApplicationGatewaySslCertificateOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateOutput)
}

// ApplicationGatewaySslCertificateArrayInput is an input type that accepts ApplicationGatewaySslCertificateArray and ApplicationGatewaySslCertificateArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateArrayInput` via:
//
//          ApplicationGatewaySslCertificateArray{ ApplicationGatewaySslCertificateArgs{...} }
type ApplicationGatewaySslCertificateArrayInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateArrayOutput() ApplicationGatewaySslCertificateArrayOutput
	ToApplicationGatewaySslCertificateArrayOutputWithContext(context.Context) ApplicationGatewaySslCertificateArrayOutput
}

type ApplicationGatewaySslCertificateArray []ApplicationGatewaySslCertificateInput

func (ApplicationGatewaySslCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateArray) ToApplicationGatewaySslCertificateArrayOutput() ApplicationGatewaySslCertificateArrayOutput {
	return i.ToApplicationGatewaySslCertificateArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateArray) ToApplicationGatewaySslCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateArrayOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateOutput) ToApplicationGatewaySslCertificateOutput() ApplicationGatewaySslCertificateOutput {
	return o
}

func (o ApplicationGatewaySslCertificateOutput) ToApplicationGatewaySslCertificateOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateOutput {
	return o
}

// Base-64 encoded pfx certificate. Only applicable in PUT Request.
func (o ApplicationGatewaySslCertificateOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewaySslCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewaySslCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewaySslCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Password for the pfx file specified in data. Only applicable in PUT request.
func (o ApplicationGatewaySslCertificateOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewaySslCertificateOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
func (o ApplicationGatewaySslCertificateOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslCertificateArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateArrayOutput) ToApplicationGatewaySslCertificateArrayOutput() ApplicationGatewaySslCertificateArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateArrayOutput) ToApplicationGatewaySslCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateArrayOutput) Index(i pulumi.IntInput) ApplicationGatewaySslCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewaySslCertificate {
		return vs[0].([]ApplicationGatewaySslCertificate)[vs[1].(int)]
	}).(ApplicationGatewaySslCertificateOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateInvokeResponse struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data *string `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password *string `pulumi:"password"`
	// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
	PublicCertData *string `pulumi:"publicCertData"`
}

// ApplicationGatewaySslCertificateInvokeResponseInput is an input type that accepts ApplicationGatewaySslCertificateInvokeResponseArgs and ApplicationGatewaySslCertificateInvokeResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateInvokeResponseInput` via:
//
//          ApplicationGatewaySslCertificateInvokeResponseArgs{...}
type ApplicationGatewaySslCertificateInvokeResponseInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateInvokeResponseOutput() ApplicationGatewaySslCertificateInvokeResponseOutput
	ToApplicationGatewaySslCertificateInvokeResponseOutputWithContext(context.Context) ApplicationGatewaySslCertificateInvokeResponseOutput
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateInvokeResponseArgs struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
	PublicCertData pulumi.StringPtrInput `pulumi:"publicCertData"`
}

func (ApplicationGatewaySslCertificateInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificateInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateInvokeResponseArgs) ToApplicationGatewaySslCertificateInvokeResponseOutput() ApplicationGatewaySslCertificateInvokeResponseOutput {
	return i.ToApplicationGatewaySslCertificateInvokeResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateInvokeResponseArgs) ToApplicationGatewaySslCertificateInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateInvokeResponseOutput)
}

// ApplicationGatewaySslCertificateInvokeResponseArrayInput is an input type that accepts ApplicationGatewaySslCertificateInvokeResponseArray and ApplicationGatewaySslCertificateInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateInvokeResponseArrayInput` via:
//
//          ApplicationGatewaySslCertificateInvokeResponseArray{ ApplicationGatewaySslCertificateInvokeResponseArgs{...} }
type ApplicationGatewaySslCertificateInvokeResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateInvokeResponseArrayOutput() ApplicationGatewaySslCertificateInvokeResponseArrayOutput
	ToApplicationGatewaySslCertificateInvokeResponseArrayOutputWithContext(context.Context) ApplicationGatewaySslCertificateInvokeResponseArrayOutput
}

type ApplicationGatewaySslCertificateInvokeResponseArray []ApplicationGatewaySslCertificateInvokeResponseInput

func (ApplicationGatewaySslCertificateInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificateInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateInvokeResponseArray) ToApplicationGatewaySslCertificateInvokeResponseArrayOutput() ApplicationGatewaySslCertificateInvokeResponseArrayOutput {
	return i.ToApplicationGatewaySslCertificateInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateInvokeResponseArray) ToApplicationGatewaySslCertificateInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateInvokeResponseArrayOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificateInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateInvokeResponseOutput) ToApplicationGatewaySslCertificateInvokeResponseOutput() ApplicationGatewaySslCertificateInvokeResponseOutput {
	return o
}

func (o ApplicationGatewaySslCertificateInvokeResponseOutput) ToApplicationGatewaySslCertificateInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateInvokeResponseOutput {
	return o
}

// Base-64 encoded pfx certificate. Only applicable in PUT Request.
func (o ApplicationGatewaySslCertificateInvokeResponseOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateInvokeResponse) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewaySslCertificateInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewaySslCertificateInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewaySslCertificateInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Password for the pfx file specified in data. Only applicable in PUT request.
func (o ApplicationGatewaySslCertificateInvokeResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateInvokeResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewaySslCertificateInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
func (o ApplicationGatewaySslCertificateInvokeResponseOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateInvokeResponse) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslCertificateInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificateInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateInvokeResponseArrayOutput) ToApplicationGatewaySslCertificateInvokeResponseArrayOutput() ApplicationGatewaySslCertificateInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateInvokeResponseArrayOutput) ToApplicationGatewaySslCertificateInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateInvokeResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewaySslCertificateInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewaySslCertificateInvokeResponse {
		return vs[0].([]ApplicationGatewaySslCertificateInvokeResponse)[vs[1].(int)]
	}).(ApplicationGatewaySslCertificateInvokeResponseOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateResponse struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data *string `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password *string `pulumi:"password"`
	// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
	PublicCertData *string `pulumi:"publicCertData"`
}

// ApplicationGatewaySslCertificateResponseInput is an input type that accepts ApplicationGatewaySslCertificateResponseArgs and ApplicationGatewaySslCertificateResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateResponseInput` via:
//
//          ApplicationGatewaySslCertificateResponseArgs{...}
type ApplicationGatewaySslCertificateResponseInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateResponseOutput() ApplicationGatewaySslCertificateResponseOutput
	ToApplicationGatewaySslCertificateResponseOutputWithContext(context.Context) ApplicationGatewaySslCertificateResponseOutput
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateResponseArgs struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
	PublicCertData pulumi.StringPtrInput `pulumi:"publicCertData"`
}

func (ApplicationGatewaySslCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateResponseArgs) ToApplicationGatewaySslCertificateResponseOutput() ApplicationGatewaySslCertificateResponseOutput {
	return i.ToApplicationGatewaySslCertificateResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateResponseArgs) ToApplicationGatewaySslCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateResponseOutput)
}

// ApplicationGatewaySslCertificateResponseArrayInput is an input type that accepts ApplicationGatewaySslCertificateResponseArray and ApplicationGatewaySslCertificateResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateResponseArrayInput` via:
//
//          ApplicationGatewaySslCertificateResponseArray{ ApplicationGatewaySslCertificateResponseArgs{...} }
type ApplicationGatewaySslCertificateResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateResponseArrayOutput() ApplicationGatewaySslCertificateResponseArrayOutput
	ToApplicationGatewaySslCertificateResponseArrayOutputWithContext(context.Context) ApplicationGatewaySslCertificateResponseArrayOutput
}

type ApplicationGatewaySslCertificateResponseArray []ApplicationGatewaySslCertificateResponseInput

func (ApplicationGatewaySslCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateResponseArray) ToApplicationGatewaySslCertificateResponseArrayOutput() ApplicationGatewaySslCertificateResponseArrayOutput {
	return i.ToApplicationGatewaySslCertificateResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateResponseArray) ToApplicationGatewaySslCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateResponseArrayOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateResponseOutput) ToApplicationGatewaySslCertificateResponseOutput() ApplicationGatewaySslCertificateResponseOutput {
	return o
}

func (o ApplicationGatewaySslCertificateResponseOutput) ToApplicationGatewaySslCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateResponseOutput {
	return o
}

// Base-64 encoded pfx certificate. Only applicable in PUT Request.
func (o ApplicationGatewaySslCertificateResponseOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewaySslCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewaySslCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewaySslCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Password for the pfx file specified in data. Only applicable in PUT request.
func (o ApplicationGatewaySslCertificateResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewaySslCertificateResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
func (o ApplicationGatewaySslCertificateResponseOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateResponseArrayOutput) ToApplicationGatewaySslCertificateResponseArrayOutput() ApplicationGatewaySslCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateResponseArrayOutput) ToApplicationGatewaySslCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewaySslCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewaySslCertificateResponse {
		return vs[0].([]ApplicationGatewaySslCertificateResponse)[vs[1].(int)]
	}).(ApplicationGatewaySslCertificateResponseOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMap struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool *SubResource `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings *SubResource `pulumi:"defaultBackendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Path rule of URL path map resource.
	PathRules []ApplicationGatewayPathRule `pulumi:"pathRules"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayUrlPathMapInput is an input type that accepts ApplicationGatewayUrlPathMap and ApplicationGatewayUrlPathMapOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapInput` via:
//
//          ApplicationGatewayUrlPathMap{ "key": ApplicationGatewayUrlPathArgs{...} }
type ApplicationGatewayUrlPathMapInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapOutput() ApplicationGatewayUrlPathMapOutput
	ToApplicationGatewayUrlPathMapOutputWithContext(context.Context) ApplicationGatewayUrlPathMapOutput
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapArgs struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool SubResourcePtrInput `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings SubResourcePtrInput `pulumi:"defaultBackendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rule of URL path map resource.
	PathRules ApplicationGatewayPathRuleArrayInput `pulumi:"pathRules"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayUrlPathMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapArgs) ToApplicationGatewayUrlPathMapOutput() ApplicationGatewayUrlPathMapOutput {
	return i.ToApplicationGatewayUrlPathMapOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapArgs) ToApplicationGatewayUrlPathMapOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapOutput)
}

// ApplicationGatewayUrlPathMapArrayInput is an input type that accepts ApplicationGatewayUrlPathMapArray and ApplicationGatewayUrlPathMapArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapArrayInput` via:
//
//          ApplicationGatewayUrlPathMapArray{ ApplicationGatewayUrlPathMapArgs{...} }
type ApplicationGatewayUrlPathMapArrayInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapArrayOutput() ApplicationGatewayUrlPathMapArrayOutput
	ToApplicationGatewayUrlPathMapArrayOutputWithContext(context.Context) ApplicationGatewayUrlPathMapArrayOutput
}

type ApplicationGatewayUrlPathMapArray []ApplicationGatewayUrlPathMapInput

func (ApplicationGatewayUrlPathMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapArray) ToApplicationGatewayUrlPathMapArrayOutput() ApplicationGatewayUrlPathMapArrayOutput {
	return i.ToApplicationGatewayUrlPathMapArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapArray) ToApplicationGatewayUrlPathMapArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapArrayOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapOutput) ToApplicationGatewayUrlPathMapOutput() ApplicationGatewayUrlPathMapOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapOutput) ToApplicationGatewayUrlPathMapOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapOutput {
	return o
}

// Default backend address pool resource of URL path map.
func (o ApplicationGatewayUrlPathMapOutput) DefaultBackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *SubResource { return v.DefaultBackendAddressPool }).(SubResourcePtrOutput)
}

// Default backend http settings resource of URL path map.
func (o ApplicationGatewayUrlPathMapOutput) DefaultBackendHttpSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *SubResource { return v.DefaultBackendHttpSettings }).(SubResourcePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayUrlPathMapOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayUrlPathMapOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayUrlPathMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rule of URL path map resource.
func (o ApplicationGatewayUrlPathMapOutput) PathRules() ApplicationGatewayPathRuleArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) []ApplicationGatewayPathRule { return v.PathRules }).(ApplicationGatewayPathRuleArrayOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayUrlPathMapOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayUrlPathMapArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapArrayOutput) ToApplicationGatewayUrlPathMapArrayOutput() ApplicationGatewayUrlPathMapArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapArrayOutput) ToApplicationGatewayUrlPathMapArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayUrlPathMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayUrlPathMap {
		return vs[0].([]ApplicationGatewayUrlPathMap)[vs[1].(int)]
	}).(ApplicationGatewayUrlPathMapOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapInvokeResponse struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool *SubResourceInvokeResponse `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings *SubResourceInvokeResponse `pulumi:"defaultBackendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Path rule of URL path map resource.
	PathRules []ApplicationGatewayPathRuleInvokeResponse `pulumi:"pathRules"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayUrlPathMapInvokeResponseInput is an input type that accepts ApplicationGatewayUrlPathMapInvokeResponseArgs and ApplicationGatewayUrlPathMapInvokeResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapInvokeResponseInput` via:
//
//          ApplicationGatewayUrlPathMapInvokeResponseArgs{...}
type ApplicationGatewayUrlPathMapInvokeResponseInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapInvokeResponseOutput() ApplicationGatewayUrlPathMapInvokeResponseOutput
	ToApplicationGatewayUrlPathMapInvokeResponseOutputWithContext(context.Context) ApplicationGatewayUrlPathMapInvokeResponseOutput
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapInvokeResponseArgs struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool SubResourceInvokeResponsePtrInput `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings SubResourceInvokeResponsePtrInput `pulumi:"defaultBackendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rule of URL path map resource.
	PathRules ApplicationGatewayPathRuleInvokeResponseArrayInput `pulumi:"pathRules"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayUrlPathMapInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMapInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapInvokeResponseArgs) ToApplicationGatewayUrlPathMapInvokeResponseOutput() ApplicationGatewayUrlPathMapInvokeResponseOutput {
	return i.ToApplicationGatewayUrlPathMapInvokeResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapInvokeResponseArgs) ToApplicationGatewayUrlPathMapInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapInvokeResponseOutput)
}

// ApplicationGatewayUrlPathMapInvokeResponseArrayInput is an input type that accepts ApplicationGatewayUrlPathMapInvokeResponseArray and ApplicationGatewayUrlPathMapInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapInvokeResponseArrayInput` via:
//
//          ApplicationGatewayUrlPathMapInvokeResponseArray{ ApplicationGatewayUrlPathMapInvokeResponseArgs{...} }
type ApplicationGatewayUrlPathMapInvokeResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapInvokeResponseArrayOutput() ApplicationGatewayUrlPathMapInvokeResponseArrayOutput
	ToApplicationGatewayUrlPathMapInvokeResponseArrayOutputWithContext(context.Context) ApplicationGatewayUrlPathMapInvokeResponseArrayOutput
}

type ApplicationGatewayUrlPathMapInvokeResponseArray []ApplicationGatewayUrlPathMapInvokeResponseInput

func (ApplicationGatewayUrlPathMapInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMapInvokeResponse)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapInvokeResponseArray) ToApplicationGatewayUrlPathMapInvokeResponseArrayOutput() ApplicationGatewayUrlPathMapInvokeResponseArrayOutput {
	return i.ToApplicationGatewayUrlPathMapInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapInvokeResponseArray) ToApplicationGatewayUrlPathMapInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapInvokeResponseArrayOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapInvokeResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMapInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapInvokeResponseOutput) ToApplicationGatewayUrlPathMapInvokeResponseOutput() ApplicationGatewayUrlPathMapInvokeResponseOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapInvokeResponseOutput) ToApplicationGatewayUrlPathMapInvokeResponseOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapInvokeResponseOutput {
	return o
}

// Default backend address pool resource of URL path map.
func (o ApplicationGatewayUrlPathMapInvokeResponseOutput) DefaultBackendAddressPool() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapInvokeResponse) *SubResourceInvokeResponse {
		return v.DefaultBackendAddressPool
	}).(SubResourceInvokeResponsePtrOutput)
}

// Default backend http settings resource of URL path map.
func (o ApplicationGatewayUrlPathMapInvokeResponseOutput) DefaultBackendHttpSettings() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapInvokeResponse) *SubResourceInvokeResponse {
		return v.DefaultBackendHttpSettings
	}).(SubResourceInvokeResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayUrlPathMapInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayUrlPathMapInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayUrlPathMapInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rule of URL path map resource.
func (o ApplicationGatewayUrlPathMapInvokeResponseOutput) PathRules() ApplicationGatewayPathRuleInvokeResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapInvokeResponse) []ApplicationGatewayPathRuleInvokeResponse {
		return v.PathRules
	}).(ApplicationGatewayPathRuleInvokeResponseArrayOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayUrlPathMapInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayUrlPathMapInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMapInvokeResponse)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapInvokeResponseArrayOutput) ToApplicationGatewayUrlPathMapInvokeResponseArrayOutput() ApplicationGatewayUrlPathMapInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapInvokeResponseArrayOutput) ToApplicationGatewayUrlPathMapInvokeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapInvokeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapInvokeResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayUrlPathMapInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayUrlPathMapInvokeResponse {
		return vs[0].([]ApplicationGatewayUrlPathMapInvokeResponse)[vs[1].(int)]
	}).(ApplicationGatewayUrlPathMapInvokeResponseOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapResponse struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool *SubResourceResponse `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings *SubResourceResponse `pulumi:"defaultBackendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Path rule of URL path map resource.
	PathRules []ApplicationGatewayPathRuleResponse `pulumi:"pathRules"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ApplicationGatewayUrlPathMapResponseInput is an input type that accepts ApplicationGatewayUrlPathMapResponseArgs and ApplicationGatewayUrlPathMapResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapResponseInput` via:
//
//          ApplicationGatewayUrlPathMapResponseArgs{...}
type ApplicationGatewayUrlPathMapResponseInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapResponseOutput() ApplicationGatewayUrlPathMapResponseOutput
	ToApplicationGatewayUrlPathMapResponseOutputWithContext(context.Context) ApplicationGatewayUrlPathMapResponseOutput
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapResponseArgs struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool SubResourceResponsePtrInput `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings SubResourceResponsePtrInput `pulumi:"defaultBackendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rule of URL path map resource.
	PathRules ApplicationGatewayPathRuleResponseArrayInput `pulumi:"pathRules"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ApplicationGatewayUrlPathMapResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMapResponse)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapResponseArgs) ToApplicationGatewayUrlPathMapResponseOutput() ApplicationGatewayUrlPathMapResponseOutput {
	return i.ToApplicationGatewayUrlPathMapResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapResponseArgs) ToApplicationGatewayUrlPathMapResponseOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapResponseOutput)
}

// ApplicationGatewayUrlPathMapResponseArrayInput is an input type that accepts ApplicationGatewayUrlPathMapResponseArray and ApplicationGatewayUrlPathMapResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapResponseArrayInput` via:
//
//          ApplicationGatewayUrlPathMapResponseArray{ ApplicationGatewayUrlPathMapResponseArgs{...} }
type ApplicationGatewayUrlPathMapResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapResponseArrayOutput() ApplicationGatewayUrlPathMapResponseArrayOutput
	ToApplicationGatewayUrlPathMapResponseArrayOutputWithContext(context.Context) ApplicationGatewayUrlPathMapResponseArrayOutput
}

type ApplicationGatewayUrlPathMapResponseArray []ApplicationGatewayUrlPathMapResponseInput

func (ApplicationGatewayUrlPathMapResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMapResponse)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapResponseArray) ToApplicationGatewayUrlPathMapResponseArrayOutput() ApplicationGatewayUrlPathMapResponseArrayOutput {
	return i.ToApplicationGatewayUrlPathMapResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapResponseArray) ToApplicationGatewayUrlPathMapResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapResponseArrayOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMapResponse)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapResponseOutput) ToApplicationGatewayUrlPathMapResponseOutput() ApplicationGatewayUrlPathMapResponseOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapResponseOutput) ToApplicationGatewayUrlPathMapResponseOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapResponseOutput {
	return o
}

// Default backend address pool resource of URL path map.
func (o ApplicationGatewayUrlPathMapResponseOutput) DefaultBackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *SubResourceResponse { return v.DefaultBackendAddressPool }).(SubResourceResponsePtrOutput)
}

// Default backend http settings resource of URL path map.
func (o ApplicationGatewayUrlPathMapResponseOutput) DefaultBackendHttpSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *SubResourceResponse { return v.DefaultBackendHttpSettings }).(SubResourceResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayUrlPathMapResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ApplicationGatewayUrlPathMapResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ApplicationGatewayUrlPathMapResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rule of URL path map resource.
func (o ApplicationGatewayUrlPathMapResponseOutput) PathRules() ApplicationGatewayPathRuleResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) []ApplicationGatewayPathRuleResponse { return v.PathRules }).(ApplicationGatewayPathRuleResponseArrayOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayUrlPathMapResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayUrlPathMapResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMapResponse)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapResponseArrayOutput) ToApplicationGatewayUrlPathMapResponseArrayOutput() ApplicationGatewayUrlPathMapResponseArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapResponseArrayOutput) ToApplicationGatewayUrlPathMapResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapResponseArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayUrlPathMapResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayUrlPathMapResponse {
		return vs[0].([]ApplicationGatewayUrlPathMapResponse)[vs[1].(int)]
	}).(ApplicationGatewayUrlPathMapResponseOutput)
}

// Pool of backend IP addresses.
type BackendAddressPool struct {
	// Gets collection of references to IP addresses defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfiguration `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets outbound rules that use this backend address pool.
	OutboundNatRule *SubResource `pulumi:"outboundNatRule"`
	// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// BackendAddressPoolInput is an input type that accepts BackendAddressPoolArgs and BackendAddressPoolOutput values.
// You can construct a concrete instance of `BackendAddressPoolInput` via:
//
//          BackendAddressPoolArgs{...}
type BackendAddressPoolInput interface {
	pulumi.Input

	ToBackendAddressPoolOutput() BackendAddressPoolOutput
	ToBackendAddressPoolOutputWithContext(context.Context) BackendAddressPoolOutput
}

// Pool of backend IP addresses.
type BackendAddressPoolArgs struct {
	// Gets collection of references to IP addresses defined in network interfaces.
	BackendIPConfigurations NetworkInterfaceIPConfigurationArrayInput `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets outbound rules that use this backend address pool.
	OutboundNatRule SubResourcePtrInput `pulumi:"outboundNatRule"`
	// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (BackendAddressPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPool)(nil)).Elem()
}

func (i BackendAddressPoolArgs) ToBackendAddressPoolOutput() BackendAddressPoolOutput {
	return i.ToBackendAddressPoolOutputWithContext(context.Background())
}

func (i BackendAddressPoolArgs) ToBackendAddressPoolOutputWithContext(ctx context.Context) BackendAddressPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolOutput)
}

// BackendAddressPoolArrayInput is an input type that accepts BackendAddressPoolArray and BackendAddressPoolArrayOutput values.
// You can construct a concrete instance of `BackendAddressPoolArrayInput` via:
//
//          BackendAddressPoolArray{ BackendAddressPoolArgs{...} }
type BackendAddressPoolArrayInput interface {
	pulumi.Input

	ToBackendAddressPoolArrayOutput() BackendAddressPoolArrayOutput
	ToBackendAddressPoolArrayOutputWithContext(context.Context) BackendAddressPoolArrayOutput
}

type BackendAddressPoolArray []BackendAddressPoolInput

func (BackendAddressPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPool)(nil)).Elem()
}

func (i BackendAddressPoolArray) ToBackendAddressPoolArrayOutput() BackendAddressPoolArrayOutput {
	return i.ToBackendAddressPoolArrayOutputWithContext(context.Background())
}

func (i BackendAddressPoolArray) ToBackendAddressPoolArrayOutputWithContext(ctx context.Context) BackendAddressPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolArrayOutput)
}

// Pool of backend IP addresses.
type BackendAddressPoolOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPool)(nil)).Elem()
}

func (o BackendAddressPoolOutput) ToBackendAddressPoolOutput() BackendAddressPoolOutput {
	return o
}

func (o BackendAddressPoolOutput) ToBackendAddressPoolOutputWithContext(ctx context.Context) BackendAddressPoolOutput {
	return o
}

// Gets collection of references to IP addresses defined in network interfaces.
func (o BackendAddressPoolOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationArrayOutput {
	return o.ApplyT(func(v BackendAddressPool) []NetworkInterfaceIPConfiguration { return v.BackendIPConfigurations }).(NetworkInterfaceIPConfigurationArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o BackendAddressPoolOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o BackendAddressPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o BackendAddressPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets outbound rules that use this backend address pool.
func (o BackendAddressPoolOutput) OutboundNatRule() SubResourcePtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *SubResource { return v.OutboundNatRule }).(SubResourcePtrOutput)
}

// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o BackendAddressPoolOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type BackendAddressPoolArrayOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPool)(nil)).Elem()
}

func (o BackendAddressPoolArrayOutput) ToBackendAddressPoolArrayOutput() BackendAddressPoolArrayOutput {
	return o
}

func (o BackendAddressPoolArrayOutput) ToBackendAddressPoolArrayOutputWithContext(ctx context.Context) BackendAddressPoolArrayOutput {
	return o
}

func (o BackendAddressPoolArrayOutput) Index(i pulumi.IntInput) BackendAddressPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendAddressPool {
		return vs[0].([]BackendAddressPool)[vs[1].(int)]
	}).(BackendAddressPoolOutput)
}

// Pool of backend IP addresses.
type BackendAddressPoolInvokeResponse struct {
	// Gets collection of references to IP addresses defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfigurationInvokeResponse `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Gets load balancing rules that use this backend address pool.
	LoadBalancingRules []SubResourceInvokeResponse `pulumi:"loadBalancingRules"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets outbound rules that use this backend address pool.
	OutboundNatRule *SubResourceInvokeResponse `pulumi:"outboundNatRule"`
	// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// BackendAddressPoolInvokeResponseInput is an input type that accepts BackendAddressPoolInvokeResponseArgs and BackendAddressPoolInvokeResponseOutput values.
// You can construct a concrete instance of `BackendAddressPoolInvokeResponseInput` via:
//
//          BackendAddressPoolInvokeResponseArgs{...}
type BackendAddressPoolInvokeResponseInput interface {
	pulumi.Input

	ToBackendAddressPoolInvokeResponseOutput() BackendAddressPoolInvokeResponseOutput
	ToBackendAddressPoolInvokeResponseOutputWithContext(context.Context) BackendAddressPoolInvokeResponseOutput
}

// Pool of backend IP addresses.
type BackendAddressPoolInvokeResponseArgs struct {
	// Gets collection of references to IP addresses defined in network interfaces.
	BackendIPConfigurations NetworkInterfaceIPConfigurationInvokeResponseArrayInput `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets load balancing rules that use this backend address pool.
	LoadBalancingRules SubResourceInvokeResponseArrayInput `pulumi:"loadBalancingRules"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets outbound rules that use this backend address pool.
	OutboundNatRule SubResourceInvokeResponsePtrInput `pulumi:"outboundNatRule"`
	// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (BackendAddressPoolInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPoolInvokeResponse)(nil)).Elem()
}

func (i BackendAddressPoolInvokeResponseArgs) ToBackendAddressPoolInvokeResponseOutput() BackendAddressPoolInvokeResponseOutput {
	return i.ToBackendAddressPoolInvokeResponseOutputWithContext(context.Background())
}

func (i BackendAddressPoolInvokeResponseArgs) ToBackendAddressPoolInvokeResponseOutputWithContext(ctx context.Context) BackendAddressPoolInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolInvokeResponseOutput)
}

// BackendAddressPoolInvokeResponseArrayInput is an input type that accepts BackendAddressPoolInvokeResponseArray and BackendAddressPoolInvokeResponseArrayOutput values.
// You can construct a concrete instance of `BackendAddressPoolInvokeResponseArrayInput` via:
//
//          BackendAddressPoolInvokeResponseArray{ BackendAddressPoolInvokeResponseArgs{...} }
type BackendAddressPoolInvokeResponseArrayInput interface {
	pulumi.Input

	ToBackendAddressPoolInvokeResponseArrayOutput() BackendAddressPoolInvokeResponseArrayOutput
	ToBackendAddressPoolInvokeResponseArrayOutputWithContext(context.Context) BackendAddressPoolInvokeResponseArrayOutput
}

type BackendAddressPoolInvokeResponseArray []BackendAddressPoolInvokeResponseInput

func (BackendAddressPoolInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPoolInvokeResponse)(nil)).Elem()
}

func (i BackendAddressPoolInvokeResponseArray) ToBackendAddressPoolInvokeResponseArrayOutput() BackendAddressPoolInvokeResponseArrayOutput {
	return i.ToBackendAddressPoolInvokeResponseArrayOutputWithContext(context.Background())
}

func (i BackendAddressPoolInvokeResponseArray) ToBackendAddressPoolInvokeResponseArrayOutputWithContext(ctx context.Context) BackendAddressPoolInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolInvokeResponseArrayOutput)
}

// Pool of backend IP addresses.
type BackendAddressPoolInvokeResponseOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPoolInvokeResponse)(nil)).Elem()
}

func (o BackendAddressPoolInvokeResponseOutput) ToBackendAddressPoolInvokeResponseOutput() BackendAddressPoolInvokeResponseOutput {
	return o
}

func (o BackendAddressPoolInvokeResponseOutput) ToBackendAddressPoolInvokeResponseOutputWithContext(ctx context.Context) BackendAddressPoolInvokeResponseOutput {
	return o
}

// Gets collection of references to IP addresses defined in network interfaces.
func (o BackendAddressPoolInvokeResponseOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationInvokeResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolInvokeResponse) []NetworkInterfaceIPConfigurationInvokeResponse {
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationInvokeResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o BackendAddressPoolInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o BackendAddressPoolInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets load balancing rules that use this backend address pool.
func (o BackendAddressPoolInvokeResponseOutput) LoadBalancingRules() SubResourceInvokeResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolInvokeResponse) []SubResourceInvokeResponse { return v.LoadBalancingRules }).(SubResourceInvokeResponseArrayOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o BackendAddressPoolInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets outbound rules that use this backend address pool.
func (o BackendAddressPoolInvokeResponseOutput) OutboundNatRule() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v BackendAddressPoolInvokeResponse) *SubResourceInvokeResponse { return v.OutboundNatRule }).(SubResourceInvokeResponsePtrOutput)
}

// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o BackendAddressPoolInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type BackendAddressPoolInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPoolInvokeResponse)(nil)).Elem()
}

func (o BackendAddressPoolInvokeResponseArrayOutput) ToBackendAddressPoolInvokeResponseArrayOutput() BackendAddressPoolInvokeResponseArrayOutput {
	return o
}

func (o BackendAddressPoolInvokeResponseArrayOutput) ToBackendAddressPoolInvokeResponseArrayOutputWithContext(ctx context.Context) BackendAddressPoolInvokeResponseArrayOutput {
	return o
}

func (o BackendAddressPoolInvokeResponseArrayOutput) Index(i pulumi.IntInput) BackendAddressPoolInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendAddressPoolInvokeResponse {
		return vs[0].([]BackendAddressPoolInvokeResponse)[vs[1].(int)]
	}).(BackendAddressPoolInvokeResponseOutput)
}

// Pool of backend IP addresses.
type BackendAddressPoolResponse struct {
	// Gets collection of references to IP addresses defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Gets load balancing rules that use this backend address pool.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets outbound rules that use this backend address pool.
	OutboundNatRule *SubResourceResponse `pulumi:"outboundNatRule"`
	// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// BackendAddressPoolResponseInput is an input type that accepts BackendAddressPoolResponseArgs and BackendAddressPoolResponseOutput values.
// You can construct a concrete instance of `BackendAddressPoolResponseInput` via:
//
//          BackendAddressPoolResponseArgs{...}
type BackendAddressPoolResponseInput interface {
	pulumi.Input

	ToBackendAddressPoolResponseOutput() BackendAddressPoolResponseOutput
	ToBackendAddressPoolResponseOutputWithContext(context.Context) BackendAddressPoolResponseOutput
}

// Pool of backend IP addresses.
type BackendAddressPoolResponseArgs struct {
	// Gets collection of references to IP addresses defined in network interfaces.
	BackendIPConfigurations NetworkInterfaceIPConfigurationResponseArrayInput `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets load balancing rules that use this backend address pool.
	LoadBalancingRules SubResourceResponseArrayInput `pulumi:"loadBalancingRules"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets outbound rules that use this backend address pool.
	OutboundNatRule SubResourceResponsePtrInput `pulumi:"outboundNatRule"`
	// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (BackendAddressPoolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPoolResponse)(nil)).Elem()
}

func (i BackendAddressPoolResponseArgs) ToBackendAddressPoolResponseOutput() BackendAddressPoolResponseOutput {
	return i.ToBackendAddressPoolResponseOutputWithContext(context.Background())
}

func (i BackendAddressPoolResponseArgs) ToBackendAddressPoolResponseOutputWithContext(ctx context.Context) BackendAddressPoolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolResponseOutput)
}

// BackendAddressPoolResponseArrayInput is an input type that accepts BackendAddressPoolResponseArray and BackendAddressPoolResponseArrayOutput values.
// You can construct a concrete instance of `BackendAddressPoolResponseArrayInput` via:
//
//          BackendAddressPoolResponseArray{ BackendAddressPoolResponseArgs{...} }
type BackendAddressPoolResponseArrayInput interface {
	pulumi.Input

	ToBackendAddressPoolResponseArrayOutput() BackendAddressPoolResponseArrayOutput
	ToBackendAddressPoolResponseArrayOutputWithContext(context.Context) BackendAddressPoolResponseArrayOutput
}

type BackendAddressPoolResponseArray []BackendAddressPoolResponseInput

func (BackendAddressPoolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPoolResponse)(nil)).Elem()
}

func (i BackendAddressPoolResponseArray) ToBackendAddressPoolResponseArrayOutput() BackendAddressPoolResponseArrayOutput {
	return i.ToBackendAddressPoolResponseArrayOutputWithContext(context.Background())
}

func (i BackendAddressPoolResponseArray) ToBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) BackendAddressPoolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolResponseArrayOutput)
}

// Pool of backend IP addresses.
type BackendAddressPoolResponseOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPoolResponse)(nil)).Elem()
}

func (o BackendAddressPoolResponseOutput) ToBackendAddressPoolResponseOutput() BackendAddressPoolResponseOutput {
	return o
}

func (o BackendAddressPoolResponseOutput) ToBackendAddressPoolResponseOutputWithContext(ctx context.Context) BackendAddressPoolResponseOutput {
	return o
}

// Gets collection of references to IP addresses defined in network interfaces.
func (o BackendAddressPoolResponseOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o BackendAddressPoolResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o BackendAddressPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets load balancing rules that use this backend address pool.
func (o BackendAddressPoolResponseOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []SubResourceResponse { return v.LoadBalancingRules }).(SubResourceResponseArrayOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o BackendAddressPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets outbound rules that use this backend address pool.
func (o BackendAddressPoolResponseOutput) OutboundNatRule() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *SubResourceResponse { return v.OutboundNatRule }).(SubResourceResponsePtrOutput)
}

// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o BackendAddressPoolResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type BackendAddressPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPoolResponse)(nil)).Elem()
}

func (o BackendAddressPoolResponseArrayOutput) ToBackendAddressPoolResponseArrayOutput() BackendAddressPoolResponseArrayOutput {
	return o
}

func (o BackendAddressPoolResponseArrayOutput) ToBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) BackendAddressPoolResponseArrayOutput {
	return o
}

func (o BackendAddressPoolResponseArrayOutput) Index(i pulumi.IntInput) BackendAddressPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendAddressPoolResponse {
		return vs[0].([]BackendAddressPoolResponse)[vs[1].(int)]
	}).(BackendAddressPoolResponseOutput)
}

type BgpSettings struct {
	// Gets or sets this BGP speaker's ASN
	Asn *float64 `pulumi:"asn"`
	// Gets or sets the BGP peering address and BGP identifier of this BGP speaker
	BgpPeeringAddress *string `pulumi:"bgpPeeringAddress"`
	// Gets or sets the weight added to routes learned from this BGP speaker
	PeerWeight *int `pulumi:"peerWeight"`
}

// BgpSettingsInput is an input type that accepts BgpSettingsArgs and BgpSettingsOutput values.
// You can construct a concrete instance of `BgpSettingsInput` via:
//
//          BgpSettingsArgs{...}
type BgpSettingsInput interface {
	pulumi.Input

	ToBgpSettingsOutput() BgpSettingsOutput
	ToBgpSettingsOutputWithContext(context.Context) BgpSettingsOutput
}

type BgpSettingsArgs struct {
	// Gets or sets this BGP speaker's ASN
	Asn pulumi.Float64PtrInput `pulumi:"asn"`
	// Gets or sets the BGP peering address and BGP identifier of this BGP speaker
	BgpPeeringAddress pulumi.StringPtrInput `pulumi:"bgpPeeringAddress"`
	// Gets or sets the weight added to routes learned from this BGP speaker
	PeerWeight pulumi.IntPtrInput `pulumi:"peerWeight"`
}

func (BgpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettings)(nil)).Elem()
}

func (i BgpSettingsArgs) ToBgpSettingsOutput() BgpSettingsOutput {
	return i.ToBgpSettingsOutputWithContext(context.Background())
}

func (i BgpSettingsArgs) ToBgpSettingsOutputWithContext(ctx context.Context) BgpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsOutput)
}

func (i BgpSettingsArgs) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return i.ToBgpSettingsPtrOutputWithContext(context.Background())
}

func (i BgpSettingsArgs) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsOutput).ToBgpSettingsPtrOutputWithContext(ctx)
}

// BgpSettingsPtrInput is an input type that accepts BgpSettingsArgs, BgpSettingsPtr and BgpSettingsPtrOutput values.
// You can construct a concrete instance of `BgpSettingsPtrInput` via:
//
//          BgpSettingsArgs{...}
//
//  or:
//
//          nil
type BgpSettingsPtrInput interface {
	pulumi.Input

	ToBgpSettingsPtrOutput() BgpSettingsPtrOutput
	ToBgpSettingsPtrOutputWithContext(context.Context) BgpSettingsPtrOutput
}

type bgpSettingsPtrType BgpSettingsArgs

func BgpSettingsPtr(v *BgpSettingsArgs) BgpSettingsPtrInput {
	return (*bgpSettingsPtrType)(v)
}

func (*bgpSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettings)(nil)).Elem()
}

func (i *bgpSettingsPtrType) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return i.ToBgpSettingsPtrOutputWithContext(context.Background())
}

func (i *bgpSettingsPtrType) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsPtrOutput)
}

type BgpSettingsOutput struct{ *pulumi.OutputState }

func (BgpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettings)(nil)).Elem()
}

func (o BgpSettingsOutput) ToBgpSettingsOutput() BgpSettingsOutput {
	return o
}

func (o BgpSettingsOutput) ToBgpSettingsOutputWithContext(ctx context.Context) BgpSettingsOutput {
	return o
}

func (o BgpSettingsOutput) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return o.ToBgpSettingsPtrOutputWithContext(context.Background())
}

func (o BgpSettingsOutput) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return o.ApplyT(func(v BgpSettings) *BgpSettings {
		return &v
	}).(BgpSettingsPtrOutput)
}

// Gets or sets this BGP speaker's ASN
func (o BgpSettingsOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BgpSettings) *float64 { return v.Asn }).(pulumi.Float64PtrOutput)
}

// Gets or sets the BGP peering address and BGP identifier of this BGP speaker
func (o BgpSettingsOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpSettings) *string { return v.BgpPeeringAddress }).(pulumi.StringPtrOutput)
}

// Gets or sets the weight added to routes learned from this BGP speaker
func (o BgpSettingsOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpSettings) *int { return v.PeerWeight }).(pulumi.IntPtrOutput)
}

type BgpSettingsPtrOutput struct{ *pulumi.OutputState }

func (BgpSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettings)(nil)).Elem()
}

func (o BgpSettingsPtrOutput) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return o
}

func (o BgpSettingsPtrOutput) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return o
}

func (o BgpSettingsPtrOutput) Elem() BgpSettingsOutput {
	return o.ApplyT(func(v *BgpSettings) BgpSettings { return *v }).(BgpSettingsOutput)
}

// Gets or sets this BGP speaker's ASN
func (o BgpSettingsPtrOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BgpSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.Float64PtrOutput)
}

// Gets or sets the BGP peering address and BGP identifier of this BGP speaker
func (o BgpSettingsPtrOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpSettings) *string {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddress
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the weight added to routes learned from this BGP speaker
func (o BgpSettingsPtrOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpSettings) *int {
		if v == nil {
			return nil
		}
		return v.PeerWeight
	}).(pulumi.IntPtrOutput)
}

type BgpSettingsInvokeResponse struct {
	// Gets or sets this BGP speaker's ASN
	Asn *float64 `pulumi:"asn"`
	// Gets or sets the BGP peering address and BGP identifier of this BGP speaker
	BgpPeeringAddress *string `pulumi:"bgpPeeringAddress"`
	// Gets or sets the weight added to routes learned from this BGP speaker
	PeerWeight *int `pulumi:"peerWeight"`
}

// BgpSettingsInvokeResponseInput is an input type that accepts BgpSettingsInvokeResponseArgs and BgpSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `BgpSettingsInvokeResponseInput` via:
//
//          BgpSettingsInvokeResponseArgs{...}
type BgpSettingsInvokeResponseInput interface {
	pulumi.Input

	ToBgpSettingsInvokeResponseOutput() BgpSettingsInvokeResponseOutput
	ToBgpSettingsInvokeResponseOutputWithContext(context.Context) BgpSettingsInvokeResponseOutput
}

type BgpSettingsInvokeResponseArgs struct {
	// Gets or sets this BGP speaker's ASN
	Asn pulumi.Float64PtrInput `pulumi:"asn"`
	// Gets or sets the BGP peering address and BGP identifier of this BGP speaker
	BgpPeeringAddress pulumi.StringPtrInput `pulumi:"bgpPeeringAddress"`
	// Gets or sets the weight added to routes learned from this BGP speaker
	PeerWeight pulumi.IntPtrInput `pulumi:"peerWeight"`
}

func (BgpSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettingsInvokeResponse)(nil)).Elem()
}

func (i BgpSettingsInvokeResponseArgs) ToBgpSettingsInvokeResponseOutput() BgpSettingsInvokeResponseOutput {
	return i.ToBgpSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i BgpSettingsInvokeResponseArgs) ToBgpSettingsInvokeResponseOutputWithContext(ctx context.Context) BgpSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsInvokeResponseOutput)
}

func (i BgpSettingsInvokeResponseArgs) ToBgpSettingsInvokeResponsePtrOutput() BgpSettingsInvokeResponsePtrOutput {
	return i.ToBgpSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i BgpSettingsInvokeResponseArgs) ToBgpSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) BgpSettingsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsInvokeResponseOutput).ToBgpSettingsInvokeResponsePtrOutputWithContext(ctx)
}

// BgpSettingsInvokeResponsePtrInput is an input type that accepts BgpSettingsInvokeResponseArgs, BgpSettingsInvokeResponsePtr and BgpSettingsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `BgpSettingsInvokeResponsePtrInput` via:
//
//          BgpSettingsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type BgpSettingsInvokeResponsePtrInput interface {
	pulumi.Input

	ToBgpSettingsInvokeResponsePtrOutput() BgpSettingsInvokeResponsePtrOutput
	ToBgpSettingsInvokeResponsePtrOutputWithContext(context.Context) BgpSettingsInvokeResponsePtrOutput
}

type bgpSettingsInvokeResponsePtrType BgpSettingsInvokeResponseArgs

func BgpSettingsInvokeResponsePtr(v *BgpSettingsInvokeResponseArgs) BgpSettingsInvokeResponsePtrInput {
	return (*bgpSettingsInvokeResponsePtrType)(v)
}

func (*bgpSettingsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettingsInvokeResponse)(nil)).Elem()
}

func (i *bgpSettingsInvokeResponsePtrType) ToBgpSettingsInvokeResponsePtrOutput() BgpSettingsInvokeResponsePtrOutput {
	return i.ToBgpSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *bgpSettingsInvokeResponsePtrType) ToBgpSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) BgpSettingsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsInvokeResponsePtrOutput)
}

type BgpSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (BgpSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettingsInvokeResponse)(nil)).Elem()
}

func (o BgpSettingsInvokeResponseOutput) ToBgpSettingsInvokeResponseOutput() BgpSettingsInvokeResponseOutput {
	return o
}

func (o BgpSettingsInvokeResponseOutput) ToBgpSettingsInvokeResponseOutputWithContext(ctx context.Context) BgpSettingsInvokeResponseOutput {
	return o
}

func (o BgpSettingsInvokeResponseOutput) ToBgpSettingsInvokeResponsePtrOutput() BgpSettingsInvokeResponsePtrOutput {
	return o.ToBgpSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o BgpSettingsInvokeResponseOutput) ToBgpSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) BgpSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v BgpSettingsInvokeResponse) *BgpSettingsInvokeResponse {
		return &v
	}).(BgpSettingsInvokeResponsePtrOutput)
}

// Gets or sets this BGP speaker's ASN
func (o BgpSettingsInvokeResponseOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BgpSettingsInvokeResponse) *float64 { return v.Asn }).(pulumi.Float64PtrOutput)
}

// Gets or sets the BGP peering address and BGP identifier of this BGP speaker
func (o BgpSettingsInvokeResponseOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpSettingsInvokeResponse) *string { return v.BgpPeeringAddress }).(pulumi.StringPtrOutput)
}

// Gets or sets the weight added to routes learned from this BGP speaker
func (o BgpSettingsInvokeResponseOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpSettingsInvokeResponse) *int { return v.PeerWeight }).(pulumi.IntPtrOutput)
}

type BgpSettingsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (BgpSettingsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettingsInvokeResponse)(nil)).Elem()
}

func (o BgpSettingsInvokeResponsePtrOutput) ToBgpSettingsInvokeResponsePtrOutput() BgpSettingsInvokeResponsePtrOutput {
	return o
}

func (o BgpSettingsInvokeResponsePtrOutput) ToBgpSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) BgpSettingsInvokeResponsePtrOutput {
	return o
}

func (o BgpSettingsInvokeResponsePtrOutput) Elem() BgpSettingsInvokeResponseOutput {
	return o.ApplyT(func(v *BgpSettingsInvokeResponse) BgpSettingsInvokeResponse { return *v }).(BgpSettingsInvokeResponseOutput)
}

// Gets or sets this BGP speaker's ASN
func (o BgpSettingsInvokeResponsePtrOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BgpSettingsInvokeResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.Float64PtrOutput)
}

// Gets or sets the BGP peering address and BGP identifier of this BGP speaker
func (o BgpSettingsInvokeResponsePtrOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpSettingsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddress
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the weight added to routes learned from this BGP speaker
func (o BgpSettingsInvokeResponsePtrOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpSettingsInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.PeerWeight
	}).(pulumi.IntPtrOutput)
}

type BgpSettingsResponse struct {
	// Gets or sets this BGP speaker's ASN
	Asn *float64 `pulumi:"asn"`
	// Gets or sets the BGP peering address and BGP identifier of this BGP speaker
	BgpPeeringAddress *string `pulumi:"bgpPeeringAddress"`
	// Gets or sets the weight added to routes learned from this BGP speaker
	PeerWeight *int `pulumi:"peerWeight"`
}

// BgpSettingsResponseInput is an input type that accepts BgpSettingsResponseArgs and BgpSettingsResponseOutput values.
// You can construct a concrete instance of `BgpSettingsResponseInput` via:
//
//          BgpSettingsResponseArgs{...}
type BgpSettingsResponseInput interface {
	pulumi.Input

	ToBgpSettingsResponseOutput() BgpSettingsResponseOutput
	ToBgpSettingsResponseOutputWithContext(context.Context) BgpSettingsResponseOutput
}

type BgpSettingsResponseArgs struct {
	// Gets or sets this BGP speaker's ASN
	Asn pulumi.Float64PtrInput `pulumi:"asn"`
	// Gets or sets the BGP peering address and BGP identifier of this BGP speaker
	BgpPeeringAddress pulumi.StringPtrInput `pulumi:"bgpPeeringAddress"`
	// Gets or sets the weight added to routes learned from this BGP speaker
	PeerWeight pulumi.IntPtrInput `pulumi:"peerWeight"`
}

func (BgpSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettingsResponse)(nil)).Elem()
}

func (i BgpSettingsResponseArgs) ToBgpSettingsResponseOutput() BgpSettingsResponseOutput {
	return i.ToBgpSettingsResponseOutputWithContext(context.Background())
}

func (i BgpSettingsResponseArgs) ToBgpSettingsResponseOutputWithContext(ctx context.Context) BgpSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsResponseOutput)
}

func (i BgpSettingsResponseArgs) ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput {
	return i.ToBgpSettingsResponsePtrOutputWithContext(context.Background())
}

func (i BgpSettingsResponseArgs) ToBgpSettingsResponsePtrOutputWithContext(ctx context.Context) BgpSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsResponseOutput).ToBgpSettingsResponsePtrOutputWithContext(ctx)
}

// BgpSettingsResponsePtrInput is an input type that accepts BgpSettingsResponseArgs, BgpSettingsResponsePtr and BgpSettingsResponsePtrOutput values.
// You can construct a concrete instance of `BgpSettingsResponsePtrInput` via:
//
//          BgpSettingsResponseArgs{...}
//
//  or:
//
//          nil
type BgpSettingsResponsePtrInput interface {
	pulumi.Input

	ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput
	ToBgpSettingsResponsePtrOutputWithContext(context.Context) BgpSettingsResponsePtrOutput
}

type bgpSettingsResponsePtrType BgpSettingsResponseArgs

func BgpSettingsResponsePtr(v *BgpSettingsResponseArgs) BgpSettingsResponsePtrInput {
	return (*bgpSettingsResponsePtrType)(v)
}

func (*bgpSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettingsResponse)(nil)).Elem()
}

func (i *bgpSettingsResponsePtrType) ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput {
	return i.ToBgpSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *bgpSettingsResponsePtrType) ToBgpSettingsResponsePtrOutputWithContext(ctx context.Context) BgpSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsResponsePtrOutput)
}

type BgpSettingsResponseOutput struct{ *pulumi.OutputState }

func (BgpSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettingsResponse)(nil)).Elem()
}

func (o BgpSettingsResponseOutput) ToBgpSettingsResponseOutput() BgpSettingsResponseOutput {
	return o
}

func (o BgpSettingsResponseOutput) ToBgpSettingsResponseOutputWithContext(ctx context.Context) BgpSettingsResponseOutput {
	return o
}

func (o BgpSettingsResponseOutput) ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput {
	return o.ToBgpSettingsResponsePtrOutputWithContext(context.Background())
}

func (o BgpSettingsResponseOutput) ToBgpSettingsResponsePtrOutputWithContext(ctx context.Context) BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v BgpSettingsResponse) *BgpSettingsResponse {
		return &v
	}).(BgpSettingsResponsePtrOutput)
}

// Gets or sets this BGP speaker's ASN
func (o BgpSettingsResponseOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BgpSettingsResponse) *float64 { return v.Asn }).(pulumi.Float64PtrOutput)
}

// Gets or sets the BGP peering address and BGP identifier of this BGP speaker
func (o BgpSettingsResponseOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpSettingsResponse) *string { return v.BgpPeeringAddress }).(pulumi.StringPtrOutput)
}

// Gets or sets the weight added to routes learned from this BGP speaker
func (o BgpSettingsResponseOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpSettingsResponse) *int { return v.PeerWeight }).(pulumi.IntPtrOutput)
}

type BgpSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (BgpSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettingsResponse)(nil)).Elem()
}

func (o BgpSettingsResponsePtrOutput) ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput {
	return o
}

func (o BgpSettingsResponsePtrOutput) ToBgpSettingsResponsePtrOutputWithContext(ctx context.Context) BgpSettingsResponsePtrOutput {
	return o
}

func (o BgpSettingsResponsePtrOutput) Elem() BgpSettingsResponseOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) BgpSettingsResponse { return *v }).(BgpSettingsResponseOutput)
}

// Gets or sets this BGP speaker's ASN
func (o BgpSettingsResponsePtrOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) *float64 {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.Float64PtrOutput)
}

// Gets or sets the BGP peering address and BGP identifier of this BGP speaker
func (o BgpSettingsResponsePtrOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddress
	}).(pulumi.StringPtrOutput)
}

// Gets or sets the weight added to routes learned from this BGP speaker
func (o BgpSettingsResponsePtrOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.PeerWeight
	}).(pulumi.IntPtrOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptions struct {
	// The list of DNS servers IP addresses.
	DnsServers []string `pulumi:"dnsServers"`
}

// DhcpOptionsInput is an input type that accepts DhcpOptionsArgs and DhcpOptionsOutput values.
// You can construct a concrete instance of `DhcpOptionsInput` via:
//
//          DhcpOptionsArgs{...}
type DhcpOptionsInput interface {
	pulumi.Input

	ToDhcpOptionsOutput() DhcpOptionsOutput
	ToDhcpOptionsOutputWithContext(context.Context) DhcpOptionsOutput
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsArgs struct {
	// The list of DNS servers IP addresses.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
}

func (DhcpOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptions)(nil)).Elem()
}

func (i DhcpOptionsArgs) ToDhcpOptionsOutput() DhcpOptionsOutput {
	return i.ToDhcpOptionsOutputWithContext(context.Background())
}

func (i DhcpOptionsArgs) ToDhcpOptionsOutputWithContext(ctx context.Context) DhcpOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsOutput)
}

func (i DhcpOptionsArgs) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return i.ToDhcpOptionsPtrOutputWithContext(context.Background())
}

func (i DhcpOptionsArgs) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsOutput).ToDhcpOptionsPtrOutputWithContext(ctx)
}

// DhcpOptionsPtrInput is an input type that accepts DhcpOptionsArgs, DhcpOptionsPtr and DhcpOptionsPtrOutput values.
// You can construct a concrete instance of `DhcpOptionsPtrInput` via:
//
//          DhcpOptionsArgs{...}
//
//  or:
//
//          nil
type DhcpOptionsPtrInput interface {
	pulumi.Input

	ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput
	ToDhcpOptionsPtrOutputWithContext(context.Context) DhcpOptionsPtrOutput
}

type dhcpOptionsPtrType DhcpOptionsArgs

func DhcpOptionsPtr(v *DhcpOptionsArgs) DhcpOptionsPtrInput {
	return (*dhcpOptionsPtrType)(v)
}

func (*dhcpOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOptions)(nil)).Elem()
}

func (i *dhcpOptionsPtrType) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return i.ToDhcpOptionsPtrOutputWithContext(context.Background())
}

func (i *dhcpOptionsPtrType) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsPtrOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsOutput struct{ *pulumi.OutputState }

func (DhcpOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptions)(nil)).Elem()
}

func (o DhcpOptionsOutput) ToDhcpOptionsOutput() DhcpOptionsOutput {
	return o
}

func (o DhcpOptionsOutput) ToDhcpOptionsOutputWithContext(ctx context.Context) DhcpOptionsOutput {
	return o
}

func (o DhcpOptionsOutput) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return o.ToDhcpOptionsPtrOutputWithContext(context.Background())
}

func (o DhcpOptionsOutput) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return o.ApplyT(func(v DhcpOptions) *DhcpOptions {
		return &v
	}).(DhcpOptionsPtrOutput)
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DhcpOptions) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

type DhcpOptionsPtrOutput struct{ *pulumi.OutputState }

func (DhcpOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOptions)(nil)).Elem()
}

func (o DhcpOptionsPtrOutput) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return o
}

func (o DhcpOptionsPtrOutput) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return o
}

func (o DhcpOptionsPtrOutput) Elem() DhcpOptionsOutput {
	return o.ApplyT(func(v *DhcpOptions) DhcpOptions { return *v }).(DhcpOptionsOutput)
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DhcpOptions) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsInvokeResponse struct {
	// The list of DNS servers IP addresses.
	DnsServers []string `pulumi:"dnsServers"`
}

// DhcpOptionsInvokeResponseInput is an input type that accepts DhcpOptionsInvokeResponseArgs and DhcpOptionsInvokeResponseOutput values.
// You can construct a concrete instance of `DhcpOptionsInvokeResponseInput` via:
//
//          DhcpOptionsInvokeResponseArgs{...}
type DhcpOptionsInvokeResponseInput interface {
	pulumi.Input

	ToDhcpOptionsInvokeResponseOutput() DhcpOptionsInvokeResponseOutput
	ToDhcpOptionsInvokeResponseOutputWithContext(context.Context) DhcpOptionsInvokeResponseOutput
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsInvokeResponseArgs struct {
	// The list of DNS servers IP addresses.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
}

func (DhcpOptionsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptionsInvokeResponse)(nil)).Elem()
}

func (i DhcpOptionsInvokeResponseArgs) ToDhcpOptionsInvokeResponseOutput() DhcpOptionsInvokeResponseOutput {
	return i.ToDhcpOptionsInvokeResponseOutputWithContext(context.Background())
}

func (i DhcpOptionsInvokeResponseArgs) ToDhcpOptionsInvokeResponseOutputWithContext(ctx context.Context) DhcpOptionsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsInvokeResponseOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsInvokeResponseOutput struct{ *pulumi.OutputState }

func (DhcpOptionsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptionsInvokeResponse)(nil)).Elem()
}

func (o DhcpOptionsInvokeResponseOutput) ToDhcpOptionsInvokeResponseOutput() DhcpOptionsInvokeResponseOutput {
	return o
}

func (o DhcpOptionsInvokeResponseOutput) ToDhcpOptionsInvokeResponseOutputWithContext(ctx context.Context) DhcpOptionsInvokeResponseOutput {
	return o
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsInvokeResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DhcpOptionsInvokeResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsResponse struct {
	// The list of DNS servers IP addresses.
	DnsServers []string `pulumi:"dnsServers"`
}

// DhcpOptionsResponseInput is an input type that accepts DhcpOptionsResponseArgs and DhcpOptionsResponseOutput values.
// You can construct a concrete instance of `DhcpOptionsResponseInput` via:
//
//          DhcpOptionsResponseArgs{...}
type DhcpOptionsResponseInput interface {
	pulumi.Input

	ToDhcpOptionsResponseOutput() DhcpOptionsResponseOutput
	ToDhcpOptionsResponseOutputWithContext(context.Context) DhcpOptionsResponseOutput
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsResponseArgs struct {
	// The list of DNS servers IP addresses.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
}

func (DhcpOptionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptionsResponse)(nil)).Elem()
}

func (i DhcpOptionsResponseArgs) ToDhcpOptionsResponseOutput() DhcpOptionsResponseOutput {
	return i.ToDhcpOptionsResponseOutputWithContext(context.Background())
}

func (i DhcpOptionsResponseArgs) ToDhcpOptionsResponseOutputWithContext(ctx context.Context) DhcpOptionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsResponseOutput)
}

func (i DhcpOptionsResponseArgs) ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput {
	return i.ToDhcpOptionsResponsePtrOutputWithContext(context.Background())
}

func (i DhcpOptionsResponseArgs) ToDhcpOptionsResponsePtrOutputWithContext(ctx context.Context) DhcpOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsResponseOutput).ToDhcpOptionsResponsePtrOutputWithContext(ctx)
}

// DhcpOptionsResponsePtrInput is an input type that accepts DhcpOptionsResponseArgs, DhcpOptionsResponsePtr and DhcpOptionsResponsePtrOutput values.
// You can construct a concrete instance of `DhcpOptionsResponsePtrInput` via:
//
//          DhcpOptionsResponseArgs{...}
//
//  or:
//
//          nil
type DhcpOptionsResponsePtrInput interface {
	pulumi.Input

	ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput
	ToDhcpOptionsResponsePtrOutputWithContext(context.Context) DhcpOptionsResponsePtrOutput
}

type dhcpOptionsResponsePtrType DhcpOptionsResponseArgs

func DhcpOptionsResponsePtr(v *DhcpOptionsResponseArgs) DhcpOptionsResponsePtrInput {
	return (*dhcpOptionsResponsePtrType)(v)
}

func (*dhcpOptionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOptionsResponse)(nil)).Elem()
}

func (i *dhcpOptionsResponsePtrType) ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput {
	return i.ToDhcpOptionsResponsePtrOutputWithContext(context.Background())
}

func (i *dhcpOptionsResponsePtrType) ToDhcpOptionsResponsePtrOutputWithContext(ctx context.Context) DhcpOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsResponsePtrOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsResponseOutput struct{ *pulumi.OutputState }

func (DhcpOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptionsResponse)(nil)).Elem()
}

func (o DhcpOptionsResponseOutput) ToDhcpOptionsResponseOutput() DhcpOptionsResponseOutput {
	return o
}

func (o DhcpOptionsResponseOutput) ToDhcpOptionsResponseOutputWithContext(ctx context.Context) DhcpOptionsResponseOutput {
	return o
}

func (o DhcpOptionsResponseOutput) ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput {
	return o.ToDhcpOptionsResponsePtrOutputWithContext(context.Background())
}

func (o DhcpOptionsResponseOutput) ToDhcpOptionsResponsePtrOutputWithContext(ctx context.Context) DhcpOptionsResponsePtrOutput {
	return o.ApplyT(func(v DhcpOptionsResponse) *DhcpOptionsResponse {
		return &v
	}).(DhcpOptionsResponsePtrOutput)
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DhcpOptionsResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

type DhcpOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (DhcpOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOptionsResponse)(nil)).Elem()
}

func (o DhcpOptionsResponsePtrOutput) ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput {
	return o
}

func (o DhcpOptionsResponsePtrOutput) ToDhcpOptionsResponsePtrOutputWithContext(ctx context.Context) DhcpOptionsResponsePtrOutput {
	return o
}

func (o DhcpOptionsResponsePtrOutput) Elem() DhcpOptionsResponseOutput {
	return o.ApplyT(func(v *DhcpOptionsResponse) DhcpOptionsResponse { return *v }).(DhcpOptionsResponseOutput)
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsResponsePtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DhcpOptionsResponse) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationType struct {
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
	AuthorizationUseStatus *string `pulumi:"authorizationUseStatus"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ExpressRouteCircuitAuthorizationTypeInput is an input type that accepts ExpressRouteCircuitAuthorizationTypeArgs and ExpressRouteCircuitAuthorizationTypeOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationTypeInput` via:
//
//          ExpressRouteCircuitAuthorizationTypeArgs{...}
type ExpressRouteCircuitAuthorizationTypeInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationTypeOutput() ExpressRouteCircuitAuthorizationTypeOutput
	ToExpressRouteCircuitAuthorizationTypeOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationTypeOutput
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationTypeArgs struct {
	// The authorization key.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
	AuthorizationUseStatus pulumi.StringPtrInput `pulumi:"authorizationUseStatus"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ExpressRouteCircuitAuthorizationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationTypeArgs) ToExpressRouteCircuitAuthorizationTypeOutput() ExpressRouteCircuitAuthorizationTypeOutput {
	return i.ToExpressRouteCircuitAuthorizationTypeOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationTypeArgs) ToExpressRouteCircuitAuthorizationTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationTypeOutput)
}

// ExpressRouteCircuitAuthorizationTypeArrayInput is an input type that accepts ExpressRouteCircuitAuthorizationTypeArray and ExpressRouteCircuitAuthorizationTypeArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationTypeArrayInput` via:
//
//          ExpressRouteCircuitAuthorizationTypeArray{ ExpressRouteCircuitAuthorizationTypeArgs{...} }
type ExpressRouteCircuitAuthorizationTypeArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationTypeArrayOutput() ExpressRouteCircuitAuthorizationTypeArrayOutput
	ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationTypeArrayOutput
}

type ExpressRouteCircuitAuthorizationTypeArray []ExpressRouteCircuitAuthorizationTypeInput

func (ExpressRouteCircuitAuthorizationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationTypeArray) ToExpressRouteCircuitAuthorizationTypeArrayOutput() ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return i.ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationTypeArray) ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationTypeArrayOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationTypeOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationTypeOutput) ToExpressRouteCircuitAuthorizationTypeOutput() ExpressRouteCircuitAuthorizationTypeOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationTypeOutput) ToExpressRouteCircuitAuthorizationTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeOutput {
	return o
}

// The authorization key.
func (o ExpressRouteCircuitAuthorizationTypeOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
func (o ExpressRouteCircuitAuthorizationTypeOutput) AuthorizationUseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.AuthorizationUseStatus }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitAuthorizationTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ExpressRouteCircuitAuthorizationTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitAuthorizationTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitAuthorizationTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitAuthorizationTypeArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationTypeArrayOutput) ToExpressRouteCircuitAuthorizationTypeArrayOutput() ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationTypeArrayOutput) ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationTypeArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitAuthorizationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitAuthorizationType {
		return vs[0].([]ExpressRouteCircuitAuthorizationType)[vs[1].(int)]
	}).(ExpressRouteCircuitAuthorizationTypeOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationInvokeResponse struct {
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
	AuthorizationUseStatus *string `pulumi:"authorizationUseStatus"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ExpressRouteCircuitAuthorizationInvokeResponseInput is an input type that accepts ExpressRouteCircuitAuthorizationInvokeResponseArgs and ExpressRouteCircuitAuthorizationInvokeResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationInvokeResponseInput` via:
//
//          ExpressRouteCircuitAuthorizationInvokeResponseArgs{...}
type ExpressRouteCircuitAuthorizationInvokeResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationInvokeResponseOutput() ExpressRouteCircuitAuthorizationInvokeResponseOutput
	ToExpressRouteCircuitAuthorizationInvokeResponseOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationInvokeResponseOutput
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationInvokeResponseArgs struct {
	// The authorization key.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
	AuthorizationUseStatus pulumi.StringPtrInput `pulumi:"authorizationUseStatus"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ExpressRouteCircuitAuthorizationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationInvokeResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationInvokeResponseArgs) ToExpressRouteCircuitAuthorizationInvokeResponseOutput() ExpressRouteCircuitAuthorizationInvokeResponseOutput {
	return i.ToExpressRouteCircuitAuthorizationInvokeResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationInvokeResponseArgs) ToExpressRouteCircuitAuthorizationInvokeResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationInvokeResponseOutput)
}

// ExpressRouteCircuitAuthorizationInvokeResponseArrayInput is an input type that accepts ExpressRouteCircuitAuthorizationInvokeResponseArray and ExpressRouteCircuitAuthorizationInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationInvokeResponseArrayInput` via:
//
//          ExpressRouteCircuitAuthorizationInvokeResponseArray{ ExpressRouteCircuitAuthorizationInvokeResponseArgs{...} }
type ExpressRouteCircuitAuthorizationInvokeResponseArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationInvokeResponseArrayOutput() ExpressRouteCircuitAuthorizationInvokeResponseArrayOutput
	ToExpressRouteCircuitAuthorizationInvokeResponseArrayOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationInvokeResponseArrayOutput
}

type ExpressRouteCircuitAuthorizationInvokeResponseArray []ExpressRouteCircuitAuthorizationInvokeResponseInput

func (ExpressRouteCircuitAuthorizationInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationInvokeResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationInvokeResponseArray) ToExpressRouteCircuitAuthorizationInvokeResponseArrayOutput() ExpressRouteCircuitAuthorizationInvokeResponseArrayOutput {
	return i.ToExpressRouteCircuitAuthorizationInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationInvokeResponseArray) ToExpressRouteCircuitAuthorizationInvokeResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationInvokeResponseArrayOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationInvokeResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationInvokeResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationInvokeResponseOutput) ToExpressRouteCircuitAuthorizationInvokeResponseOutput() ExpressRouteCircuitAuthorizationInvokeResponseOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationInvokeResponseOutput) ToExpressRouteCircuitAuthorizationInvokeResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationInvokeResponseOutput {
	return o
}

// The authorization key.
func (o ExpressRouteCircuitAuthorizationInvokeResponseOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationInvokeResponse) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
func (o ExpressRouteCircuitAuthorizationInvokeResponseOutput) AuthorizationUseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationInvokeResponse) *string { return v.AuthorizationUseStatus }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitAuthorizationInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ExpressRouteCircuitAuthorizationInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitAuthorizationInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitAuthorizationInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitAuthorizationInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationInvokeResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationInvokeResponseArrayOutput) ToExpressRouteCircuitAuthorizationInvokeResponseArrayOutput() ExpressRouteCircuitAuthorizationInvokeResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationInvokeResponseArrayOutput) ToExpressRouteCircuitAuthorizationInvokeResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationInvokeResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationInvokeResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitAuthorizationInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitAuthorizationInvokeResponse {
		return vs[0].([]ExpressRouteCircuitAuthorizationInvokeResponse)[vs[1].(int)]
	}).(ExpressRouteCircuitAuthorizationInvokeResponseOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationResponse struct {
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
	AuthorizationUseStatus *string `pulumi:"authorizationUseStatus"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ExpressRouteCircuitAuthorizationResponseInput is an input type that accepts ExpressRouteCircuitAuthorizationResponseArgs and ExpressRouteCircuitAuthorizationResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationResponseInput` via:
//
//          ExpressRouteCircuitAuthorizationResponseArgs{...}
type ExpressRouteCircuitAuthorizationResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationResponseOutput() ExpressRouteCircuitAuthorizationResponseOutput
	ToExpressRouteCircuitAuthorizationResponseOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationResponseOutput
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationResponseArgs struct {
	// The authorization key.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
	AuthorizationUseStatus pulumi.StringPtrInput `pulumi:"authorizationUseStatus"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ExpressRouteCircuitAuthorizationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationResponseArgs) ToExpressRouteCircuitAuthorizationResponseOutput() ExpressRouteCircuitAuthorizationResponseOutput {
	return i.ToExpressRouteCircuitAuthorizationResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationResponseArgs) ToExpressRouteCircuitAuthorizationResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationResponseOutput)
}

// ExpressRouteCircuitAuthorizationResponseArrayInput is an input type that accepts ExpressRouteCircuitAuthorizationResponseArray and ExpressRouteCircuitAuthorizationResponseArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationResponseArrayInput` via:
//
//          ExpressRouteCircuitAuthorizationResponseArray{ ExpressRouteCircuitAuthorizationResponseArgs{...} }
type ExpressRouteCircuitAuthorizationResponseArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationResponseArrayOutput() ExpressRouteCircuitAuthorizationResponseArrayOutput
	ToExpressRouteCircuitAuthorizationResponseArrayOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationResponseArrayOutput
}

type ExpressRouteCircuitAuthorizationResponseArray []ExpressRouteCircuitAuthorizationResponseInput

func (ExpressRouteCircuitAuthorizationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationResponseArray) ToExpressRouteCircuitAuthorizationResponseArrayOutput() ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return i.ToExpressRouteCircuitAuthorizationResponseArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationResponseArray) ToExpressRouteCircuitAuthorizationResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationResponseArrayOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationResponseOutput) ToExpressRouteCircuitAuthorizationResponseOutput() ExpressRouteCircuitAuthorizationResponseOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationResponseOutput) ToExpressRouteCircuitAuthorizationResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationResponseOutput {
	return o
}

// The authorization key.
func (o ExpressRouteCircuitAuthorizationResponseOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
func (o ExpressRouteCircuitAuthorizationResponseOutput) AuthorizationUseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.AuthorizationUseStatus }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitAuthorizationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ExpressRouteCircuitAuthorizationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitAuthorizationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitAuthorizationResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitAuthorizationResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationResponseArrayOutput) ToExpressRouteCircuitAuthorizationResponseArrayOutput() ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationResponseArrayOutput) ToExpressRouteCircuitAuthorizationResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitAuthorizationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitAuthorizationResponse {
		return vs[0].([]ExpressRouteCircuitAuthorizationResponse)[vs[1].(int)]
	}).(ExpressRouteCircuitAuthorizationResponseOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringType struct {
	// The Azure ASN.
	AzureASN *int `pulumi:"azureASN"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfig `pulumi:"microsoftPeeringConfig"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The peer ASN.
	PeerASN *int `pulumi:"peerASN"`
	// The PeeringType. Possible values are: 'AzurePublicPeering', 'AzurePrivatePeering', and 'MicrosoftPeering'.
	PeeringType *string `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort *string `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The secondary port.
	SecondaryAzurePort *string `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey *string `pulumi:"sharedKey"`
	// The state of peering. Possible values are: 'Disabled' and 'Enabled'
	State *string `pulumi:"state"`
	// Gets peering stats.
	Stats *ExpressRouteCircuitStats `pulumi:"stats"`
	// The VLAN ID.
	VlanId *int `pulumi:"vlanId"`
}

// ExpressRouteCircuitPeeringTypeInput is an input type that accepts ExpressRouteCircuitPeeringTypeArgs and ExpressRouteCircuitPeeringTypeOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringTypeInput` via:
//
//          ExpressRouteCircuitPeeringTypeArgs{...}
type ExpressRouteCircuitPeeringTypeInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringTypeOutput() ExpressRouteCircuitPeeringTypeOutput
	ToExpressRouteCircuitPeeringTypeOutputWithContext(context.Context) ExpressRouteCircuitPeeringTypeOutput
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringTypeArgs struct {
	// The Azure ASN.
	AzureASN pulumi.IntPtrInput `pulumi:"azureASN"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig ExpressRouteCircuitPeeringConfigPtrInput `pulumi:"microsoftPeeringConfig"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The peer ASN.
	PeerASN pulumi.IntPtrInput `pulumi:"peerASN"`
	// The PeeringType. Possible values are: 'AzurePublicPeering', 'AzurePrivatePeering', and 'MicrosoftPeering'.
	PeeringType pulumi.StringPtrInput `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort pulumi.StringPtrInput `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"primaryPeerAddressPrefix"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The secondary port.
	SecondaryAzurePort pulumi.StringPtrInput `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// The state of peering. Possible values are: 'Disabled' and 'Enabled'
	State pulumi.StringPtrInput `pulumi:"state"`
	// Gets peering stats.
	Stats ExpressRouteCircuitStatsPtrInput `pulumi:"stats"`
	// The VLAN ID.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (ExpressRouteCircuitPeeringTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringTypeArgs) ToExpressRouteCircuitPeeringTypeOutput() ExpressRouteCircuitPeeringTypeOutput {
	return i.ToExpressRouteCircuitPeeringTypeOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringTypeArgs) ToExpressRouteCircuitPeeringTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringTypeOutput)
}

// ExpressRouteCircuitPeeringTypeArrayInput is an input type that accepts ExpressRouteCircuitPeeringTypeArray and ExpressRouteCircuitPeeringTypeArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringTypeArrayInput` via:
//
//          ExpressRouteCircuitPeeringTypeArray{ ExpressRouteCircuitPeeringTypeArgs{...} }
type ExpressRouteCircuitPeeringTypeArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringTypeArrayOutput() ExpressRouteCircuitPeeringTypeArrayOutput
	ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(context.Context) ExpressRouteCircuitPeeringTypeArrayOutput
}

type ExpressRouteCircuitPeeringTypeArray []ExpressRouteCircuitPeeringTypeInput

func (ExpressRouteCircuitPeeringTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringTypeArray) ToExpressRouteCircuitPeeringTypeArrayOutput() ExpressRouteCircuitPeeringTypeArrayOutput {
	return i.ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringTypeArray) ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringTypeArrayOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringTypeOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringTypeOutput) ToExpressRouteCircuitPeeringTypeOutput() ExpressRouteCircuitPeeringTypeOutput {
	return o
}

func (o ExpressRouteCircuitPeeringTypeOutput) ToExpressRouteCircuitPeeringTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeOutput {
	return o
}

// The Azure ASN.
func (o ExpressRouteCircuitPeeringTypeOutput) AzureASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *int { return v.AzureASN }).(pulumi.IntPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitPeeringTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ExpressRouteCircuitPeeringTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Microsoft peering configuration.
func (o ExpressRouteCircuitPeeringTypeOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *ExpressRouteCircuitPeeringConfig {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitPeeringTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The peer ASN.
func (o ExpressRouteCircuitPeeringTypeOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *int { return v.PeerASN }).(pulumi.IntPtrOutput)
}

// The PeeringType. Possible values are: 'AzurePublicPeering', 'AzurePrivatePeering', and 'MicrosoftPeering'.
func (o ExpressRouteCircuitPeeringTypeOutput) PeeringType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.PeeringType }).(pulumi.StringPtrOutput)
}

// The primary port.
func (o ExpressRouteCircuitPeeringTypeOutput) PrimaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.PrimaryAzurePort }).(pulumi.StringPtrOutput)
}

// The primary address prefix.
func (o ExpressRouteCircuitPeeringTypeOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitPeeringTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The secondary port.
func (o ExpressRouteCircuitPeeringTypeOutput) SecondaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.SecondaryAzurePort }).(pulumi.StringPtrOutput)
}

// The secondary address prefix.
func (o ExpressRouteCircuitPeeringTypeOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The shared key.
func (o ExpressRouteCircuitPeeringTypeOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// The state of peering. Possible values are: 'Disabled' and 'Enabled'
func (o ExpressRouteCircuitPeeringTypeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Gets peering stats.
func (o ExpressRouteCircuitPeeringTypeOutput) Stats() ExpressRouteCircuitStatsPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *ExpressRouteCircuitStats { return v.Stats }).(ExpressRouteCircuitStatsPtrOutput)
}

// The VLAN ID.
func (o ExpressRouteCircuitPeeringTypeOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitPeeringTypeArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringTypeArrayOutput) ToExpressRouteCircuitPeeringTypeArrayOutput() ExpressRouteCircuitPeeringTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringTypeArrayOutput) ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringTypeArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitPeeringTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitPeeringType {
		return vs[0].([]ExpressRouteCircuitPeeringType)[vs[1].(int)]
	}).(ExpressRouteCircuitPeeringTypeOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfig struct {
	// The reference of AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes []string `pulumi:"advertisedPublicPrefixes"`
	// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
	AdvertisedPublicPrefixesState *string `pulumi:"advertisedPublicPrefixesState"`
	// The CustomerASN of the peering.
	CustomerASN *int `pulumi:"customerASN"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName *string `pulumi:"routingRegistryName"`
}

// ExpressRouteCircuitPeeringConfigInput is an input type that accepts ExpressRouteCircuitPeeringConfigArgs and ExpressRouteCircuitPeeringConfigOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigInput` via:
//
//          ExpressRouteCircuitPeeringConfigArgs{...}
type ExpressRouteCircuitPeeringConfigInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigOutput() ExpressRouteCircuitPeeringConfigOutput
	ToExpressRouteCircuitPeeringConfigOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigOutput
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigArgs struct {
	// The reference of AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes pulumi.StringArrayInput `pulumi:"advertisedPublicPrefixes"`
	// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
	AdvertisedPublicPrefixesState pulumi.StringPtrInput `pulumi:"advertisedPublicPrefixesState"`
	// The CustomerASN of the peering.
	CustomerASN pulumi.IntPtrInput `pulumi:"customerASN"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName pulumi.StringPtrInput `pulumi:"routingRegistryName"`
}

func (ExpressRouteCircuitPeeringConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigOutput() ExpressRouteCircuitPeeringConfigOutput {
	return i.ToExpressRouteCircuitPeeringConfigOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigOutput)
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigOutput).ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPeeringConfigPtrInput is an input type that accepts ExpressRouteCircuitPeeringConfigArgs, ExpressRouteCircuitPeeringConfigPtr and ExpressRouteCircuitPeeringConfigPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigPtrInput` via:
//
//          ExpressRouteCircuitPeeringConfigArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitPeeringConfigPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput
	ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigPtrOutput
}

type expressRouteCircuitPeeringConfigPtrType ExpressRouteCircuitPeeringConfigArgs

func ExpressRouteCircuitPeeringConfigPtr(v *ExpressRouteCircuitPeeringConfigArgs) ExpressRouteCircuitPeeringConfigPtrInput {
	return (*expressRouteCircuitPeeringConfigPtrType)(v)
}

func (*expressRouteCircuitPeeringConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (i *expressRouteCircuitPeeringConfigPtrType) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPeeringConfigPtrType) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigOutput() ExpressRouteCircuitPeeringConfigOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *ExpressRouteCircuitPeeringConfig {
		return &v
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The reference of AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) []string { return v.AdvertisedPublicPrefixes }).(pulumi.StringArrayOutput)
}

// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
func (o ExpressRouteCircuitPeeringConfigOutput) AdvertisedPublicPrefixesState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *string { return v.AdvertisedPublicPrefixesState }).(pulumi.StringPtrOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *int { return v.CustomerASN }).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *string { return v.RoutingRegistryName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringConfigPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigPtrOutput) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigPtrOutput) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigPtrOutput) Elem() ExpressRouteCircuitPeeringConfigOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) ExpressRouteCircuitPeeringConfig { return *v }).(ExpressRouteCircuitPeeringConfigOutput)
}

// The reference of AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixes
	}).(pulumi.StringArrayOutput)
}

// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) AdvertisedPublicPrefixesState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixesState
	}).(pulumi.StringPtrOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) *int {
		if v == nil {
			return nil
		}
		return v.CustomerASN
	}).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.RoutingRegistryName
	}).(pulumi.StringPtrOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigInvokeResponse struct {
	// The reference of AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes []string `pulumi:"advertisedPublicPrefixes"`
	// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
	AdvertisedPublicPrefixesState *string `pulumi:"advertisedPublicPrefixesState"`
	// The CustomerASN of the peering.
	CustomerASN *int `pulumi:"customerASN"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName *string `pulumi:"routingRegistryName"`
}

// ExpressRouteCircuitPeeringConfigInvokeResponseInput is an input type that accepts ExpressRouteCircuitPeeringConfigInvokeResponseArgs and ExpressRouteCircuitPeeringConfigInvokeResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigInvokeResponseInput` via:
//
//          ExpressRouteCircuitPeeringConfigInvokeResponseArgs{...}
type ExpressRouteCircuitPeeringConfigInvokeResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigInvokeResponseOutput() ExpressRouteCircuitPeeringConfigInvokeResponseOutput
	ToExpressRouteCircuitPeeringConfigInvokeResponseOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigInvokeResponseOutput
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigInvokeResponseArgs struct {
	// The reference of AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes pulumi.StringArrayInput `pulumi:"advertisedPublicPrefixes"`
	// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
	AdvertisedPublicPrefixesState pulumi.StringPtrInput `pulumi:"advertisedPublicPrefixesState"`
	// The CustomerASN of the peering.
	CustomerASN pulumi.IntPtrInput `pulumi:"customerASN"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName pulumi.StringPtrInput `pulumi:"routingRegistryName"`
}

func (ExpressRouteCircuitPeeringConfigInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfigInvokeResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringConfigInvokeResponseArgs) ToExpressRouteCircuitPeeringConfigInvokeResponseOutput() ExpressRouteCircuitPeeringConfigInvokeResponseOutput {
	return i.ToExpressRouteCircuitPeeringConfigInvokeResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigInvokeResponseArgs) ToExpressRouteCircuitPeeringConfigInvokeResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigInvokeResponseOutput)
}

func (i ExpressRouteCircuitPeeringConfigInvokeResponseArgs) ToExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput() ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigInvokeResponseArgs) ToExpressRouteCircuitPeeringConfigInvokeResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigInvokeResponseOutput).ToExpressRouteCircuitPeeringConfigInvokeResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPeeringConfigInvokeResponsePtrInput is an input type that accepts ExpressRouteCircuitPeeringConfigInvokeResponseArgs, ExpressRouteCircuitPeeringConfigInvokeResponsePtr and ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigInvokeResponsePtrInput` via:
//
//          ExpressRouteCircuitPeeringConfigInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitPeeringConfigInvokeResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput() ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput
	ToExpressRouteCircuitPeeringConfigInvokeResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput
}

type expressRouteCircuitPeeringConfigInvokeResponsePtrType ExpressRouteCircuitPeeringConfigInvokeResponseArgs

func ExpressRouteCircuitPeeringConfigInvokeResponsePtr(v *ExpressRouteCircuitPeeringConfigInvokeResponseArgs) ExpressRouteCircuitPeeringConfigInvokeResponsePtrInput {
	return (*expressRouteCircuitPeeringConfigInvokeResponsePtrType)(v)
}

func (*expressRouteCircuitPeeringConfigInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfigInvokeResponse)(nil)).Elem()
}

func (i *expressRouteCircuitPeeringConfigInvokeResponsePtrType) ToExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput() ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPeeringConfigInvokeResponsePtrType) ToExpressRouteCircuitPeeringConfigInvokeResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigInvokeResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfigInvokeResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigInvokeResponseOutput) ToExpressRouteCircuitPeeringConfigInvokeResponseOutput() ExpressRouteCircuitPeeringConfigInvokeResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigInvokeResponseOutput) ToExpressRouteCircuitPeeringConfigInvokeResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigInvokeResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigInvokeResponseOutput) ToExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput() ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput {
	return o.ToExpressRouteCircuitPeeringConfigInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringConfigInvokeResponseOutput) ToExpressRouteCircuitPeeringConfigInvokeResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigInvokeResponse) *ExpressRouteCircuitPeeringConfigInvokeResponse {
		return &v
	}).(ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput)
}

// The reference of AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigInvokeResponseOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigInvokeResponse) []string { return v.AdvertisedPublicPrefixes }).(pulumi.StringArrayOutput)
}

// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
func (o ExpressRouteCircuitPeeringConfigInvokeResponseOutput) AdvertisedPublicPrefixesState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigInvokeResponse) *string { return v.AdvertisedPublicPrefixesState }).(pulumi.StringPtrOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigInvokeResponseOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigInvokeResponse) *int { return v.CustomerASN }).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigInvokeResponseOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigInvokeResponse) *string { return v.RoutingRegistryName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfigInvokeResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput) ToExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput() ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput) ToExpressRouteCircuitPeeringConfigInvokeResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput) Elem() ExpressRouteCircuitPeeringConfigInvokeResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigInvokeResponse) ExpressRouteCircuitPeeringConfigInvokeResponse {
		return *v
	}).(ExpressRouteCircuitPeeringConfigInvokeResponseOutput)
}

// The reference of AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigInvokeResponse) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixes
	}).(pulumi.StringArrayOutput)
}

// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
func (o ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput) AdvertisedPublicPrefixesState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixesState
	}).(pulumi.StringPtrOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.CustomerASN
	}).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.RoutingRegistryName
	}).(pulumi.StringPtrOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigResponse struct {
	// The reference of AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes []string `pulumi:"advertisedPublicPrefixes"`
	// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
	AdvertisedPublicPrefixesState *string `pulumi:"advertisedPublicPrefixesState"`
	// The CustomerASN of the peering.
	CustomerASN *int `pulumi:"customerASN"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName *string `pulumi:"routingRegistryName"`
}

// ExpressRouteCircuitPeeringConfigResponseInput is an input type that accepts ExpressRouteCircuitPeeringConfigResponseArgs and ExpressRouteCircuitPeeringConfigResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigResponseInput` via:
//
//          ExpressRouteCircuitPeeringConfigResponseArgs{...}
type ExpressRouteCircuitPeeringConfigResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigResponseOutput() ExpressRouteCircuitPeeringConfigResponseOutput
	ToExpressRouteCircuitPeeringConfigResponseOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigResponseOutput
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigResponseArgs struct {
	// The reference of AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes pulumi.StringArrayInput `pulumi:"advertisedPublicPrefixes"`
	// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
	AdvertisedPublicPrefixesState pulumi.StringPtrInput `pulumi:"advertisedPublicPrefixesState"`
	// The CustomerASN of the peering.
	CustomerASN pulumi.IntPtrInput `pulumi:"customerASN"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName pulumi.StringPtrInput `pulumi:"routingRegistryName"`
}

func (ExpressRouteCircuitPeeringConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringConfigResponseArgs) ToExpressRouteCircuitPeeringConfigResponseOutput() ExpressRouteCircuitPeeringConfigResponseOutput {
	return i.ToExpressRouteCircuitPeeringConfigResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigResponseArgs) ToExpressRouteCircuitPeeringConfigResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigResponseOutput)
}

func (i ExpressRouteCircuitPeeringConfigResponseArgs) ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigResponseArgs) ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigResponseOutput).ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPeeringConfigResponsePtrInput is an input type that accepts ExpressRouteCircuitPeeringConfigResponseArgs, ExpressRouteCircuitPeeringConfigResponsePtr and ExpressRouteCircuitPeeringConfigResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigResponsePtrInput` via:
//
//          ExpressRouteCircuitPeeringConfigResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitPeeringConfigResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput
	ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput
}

type expressRouteCircuitPeeringConfigResponsePtrType ExpressRouteCircuitPeeringConfigResponseArgs

func ExpressRouteCircuitPeeringConfigResponsePtr(v *ExpressRouteCircuitPeeringConfigResponseArgs) ExpressRouteCircuitPeeringConfigResponsePtrInput {
	return (*expressRouteCircuitPeeringConfigResponsePtrType)(v)
}

func (*expressRouteCircuitPeeringConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (i *expressRouteCircuitPeeringConfigResponsePtrType) ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPeeringConfigResponsePtrType) ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigResponseOutput) ToExpressRouteCircuitPeeringConfigResponseOutput() ExpressRouteCircuitPeeringConfigResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigResponseOutput) ToExpressRouteCircuitPeeringConfigResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigResponseOutput) ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringConfigResponseOutput) ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *ExpressRouteCircuitPeeringConfigResponse {
		return &v
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The reference of AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) []string { return v.AdvertisedPublicPrefixes }).(pulumi.StringArrayOutput)
}

// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) AdvertisedPublicPrefixesState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *string { return v.AdvertisedPublicPrefixesState }).(pulumi.StringPtrOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *int { return v.CustomerASN }).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *string { return v.RoutingRegistryName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) Elem() ExpressRouteCircuitPeeringConfigResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) ExpressRouteCircuitPeeringConfigResponse { return *v }).(ExpressRouteCircuitPeeringConfigResponseOutput)
}

// The reference of AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixes
	}).(pulumi.StringArrayOutput)
}

// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) AdvertisedPublicPrefixesState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixesState
	}).(pulumi.StringPtrOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.CustomerASN
	}).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.RoutingRegistryName
	}).(pulumi.StringPtrOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringInvokeResponse struct {
	// The Azure ASN.
	AzureASN *int `pulumi:"azureASN"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfigInvokeResponse `pulumi:"microsoftPeeringConfig"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The peer ASN.
	PeerASN *int `pulumi:"peerASN"`
	// The PeeringType. Possible values are: 'AzurePublicPeering', 'AzurePrivatePeering', and 'MicrosoftPeering'.
	PeeringType *string `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort *string `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The secondary port.
	SecondaryAzurePort *string `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey *string `pulumi:"sharedKey"`
	// The state of peering. Possible values are: 'Disabled' and 'Enabled'
	State *string `pulumi:"state"`
	// Gets peering stats.
	Stats *ExpressRouteCircuitStatsInvokeResponse `pulumi:"stats"`
	// The VLAN ID.
	VlanId *int `pulumi:"vlanId"`
}

// ExpressRouteCircuitPeeringInvokeResponseInput is an input type that accepts ExpressRouteCircuitPeeringInvokeResponseArgs and ExpressRouteCircuitPeeringInvokeResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringInvokeResponseInput` via:
//
//          ExpressRouteCircuitPeeringInvokeResponseArgs{...}
type ExpressRouteCircuitPeeringInvokeResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringInvokeResponseOutput() ExpressRouteCircuitPeeringInvokeResponseOutput
	ToExpressRouteCircuitPeeringInvokeResponseOutputWithContext(context.Context) ExpressRouteCircuitPeeringInvokeResponseOutput
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringInvokeResponseArgs struct {
	// The Azure ASN.
	AzureASN pulumi.IntPtrInput `pulumi:"azureASN"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig ExpressRouteCircuitPeeringConfigInvokeResponsePtrInput `pulumi:"microsoftPeeringConfig"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The peer ASN.
	PeerASN pulumi.IntPtrInput `pulumi:"peerASN"`
	// The PeeringType. Possible values are: 'AzurePublicPeering', 'AzurePrivatePeering', and 'MicrosoftPeering'.
	PeeringType pulumi.StringPtrInput `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort pulumi.StringPtrInput `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"primaryPeerAddressPrefix"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The secondary port.
	SecondaryAzurePort pulumi.StringPtrInput `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// The state of peering. Possible values are: 'Disabled' and 'Enabled'
	State pulumi.StringPtrInput `pulumi:"state"`
	// Gets peering stats.
	Stats ExpressRouteCircuitStatsInvokeResponsePtrInput `pulumi:"stats"`
	// The VLAN ID.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (ExpressRouteCircuitPeeringInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringInvokeResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringInvokeResponseArgs) ToExpressRouteCircuitPeeringInvokeResponseOutput() ExpressRouteCircuitPeeringInvokeResponseOutput {
	return i.ToExpressRouteCircuitPeeringInvokeResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringInvokeResponseArgs) ToExpressRouteCircuitPeeringInvokeResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringInvokeResponseOutput)
}

// ExpressRouteCircuitPeeringInvokeResponseArrayInput is an input type that accepts ExpressRouteCircuitPeeringInvokeResponseArray and ExpressRouteCircuitPeeringInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringInvokeResponseArrayInput` via:
//
//          ExpressRouteCircuitPeeringInvokeResponseArray{ ExpressRouteCircuitPeeringInvokeResponseArgs{...} }
type ExpressRouteCircuitPeeringInvokeResponseArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringInvokeResponseArrayOutput() ExpressRouteCircuitPeeringInvokeResponseArrayOutput
	ToExpressRouteCircuitPeeringInvokeResponseArrayOutputWithContext(context.Context) ExpressRouteCircuitPeeringInvokeResponseArrayOutput
}

type ExpressRouteCircuitPeeringInvokeResponseArray []ExpressRouteCircuitPeeringInvokeResponseInput

func (ExpressRouteCircuitPeeringInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringInvokeResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringInvokeResponseArray) ToExpressRouteCircuitPeeringInvokeResponseArrayOutput() ExpressRouteCircuitPeeringInvokeResponseArrayOutput {
	return i.ToExpressRouteCircuitPeeringInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringInvokeResponseArray) ToExpressRouteCircuitPeeringInvokeResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringInvokeResponseArrayOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringInvokeResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringInvokeResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringInvokeResponseOutput) ToExpressRouteCircuitPeeringInvokeResponseOutput() ExpressRouteCircuitPeeringInvokeResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringInvokeResponseOutput) ToExpressRouteCircuitPeeringInvokeResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringInvokeResponseOutput {
	return o
}

// The Azure ASN.
func (o ExpressRouteCircuitPeeringInvokeResponseOutput) AzureASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringInvokeResponse) *int { return v.AzureASN }).(pulumi.IntPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitPeeringInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ExpressRouteCircuitPeeringInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Microsoft peering configuration.
func (o ExpressRouteCircuitPeeringInvokeResponseOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringInvokeResponse) *ExpressRouteCircuitPeeringConfigInvokeResponse {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitPeeringInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The peer ASN.
func (o ExpressRouteCircuitPeeringInvokeResponseOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringInvokeResponse) *int { return v.PeerASN }).(pulumi.IntPtrOutput)
}

// The PeeringType. Possible values are: 'AzurePublicPeering', 'AzurePrivatePeering', and 'MicrosoftPeering'.
func (o ExpressRouteCircuitPeeringInvokeResponseOutput) PeeringType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringInvokeResponse) *string { return v.PeeringType }).(pulumi.StringPtrOutput)
}

// The primary port.
func (o ExpressRouteCircuitPeeringInvokeResponseOutput) PrimaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringInvokeResponse) *string { return v.PrimaryAzurePort }).(pulumi.StringPtrOutput)
}

// The primary address prefix.
func (o ExpressRouteCircuitPeeringInvokeResponseOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringInvokeResponse) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitPeeringInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The secondary port.
func (o ExpressRouteCircuitPeeringInvokeResponseOutput) SecondaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringInvokeResponse) *string { return v.SecondaryAzurePort }).(pulumi.StringPtrOutput)
}

// The secondary address prefix.
func (o ExpressRouteCircuitPeeringInvokeResponseOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringInvokeResponse) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The shared key.
func (o ExpressRouteCircuitPeeringInvokeResponseOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringInvokeResponse) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// The state of peering. Possible values are: 'Disabled' and 'Enabled'
func (o ExpressRouteCircuitPeeringInvokeResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringInvokeResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Gets peering stats.
func (o ExpressRouteCircuitPeeringInvokeResponseOutput) Stats() ExpressRouteCircuitStatsInvokeResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringInvokeResponse) *ExpressRouteCircuitStatsInvokeResponse {
		return v.Stats
	}).(ExpressRouteCircuitStatsInvokeResponsePtrOutput)
}

// The VLAN ID.
func (o ExpressRouteCircuitPeeringInvokeResponseOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringInvokeResponse) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitPeeringInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringInvokeResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringInvokeResponseArrayOutput) ToExpressRouteCircuitPeeringInvokeResponseArrayOutput() ExpressRouteCircuitPeeringInvokeResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringInvokeResponseArrayOutput) ToExpressRouteCircuitPeeringInvokeResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringInvokeResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringInvokeResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitPeeringInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitPeeringInvokeResponse {
		return vs[0].([]ExpressRouteCircuitPeeringInvokeResponse)[vs[1].(int)]
	}).(ExpressRouteCircuitPeeringInvokeResponseOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringResponse struct {
	// The Azure ASN.
	AzureASN *int `pulumi:"azureASN"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfigResponse `pulumi:"microsoftPeeringConfig"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The peer ASN.
	PeerASN *int `pulumi:"peerASN"`
	// The PeeringType. Possible values are: 'AzurePublicPeering', 'AzurePrivatePeering', and 'MicrosoftPeering'.
	PeeringType *string `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort *string `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The secondary port.
	SecondaryAzurePort *string `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey *string `pulumi:"sharedKey"`
	// The state of peering. Possible values are: 'Disabled' and 'Enabled'
	State *string `pulumi:"state"`
	// Gets peering stats.
	Stats *ExpressRouteCircuitStatsResponse `pulumi:"stats"`
	// The VLAN ID.
	VlanId *int `pulumi:"vlanId"`
}

// ExpressRouteCircuitPeeringResponseInput is an input type that accepts ExpressRouteCircuitPeeringResponseArgs and ExpressRouteCircuitPeeringResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringResponseInput` via:
//
//          ExpressRouteCircuitPeeringResponseArgs{...}
type ExpressRouteCircuitPeeringResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringResponseOutput() ExpressRouteCircuitPeeringResponseOutput
	ToExpressRouteCircuitPeeringResponseOutputWithContext(context.Context) ExpressRouteCircuitPeeringResponseOutput
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringResponseArgs struct {
	// The Azure ASN.
	AzureASN pulumi.IntPtrInput `pulumi:"azureASN"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig ExpressRouteCircuitPeeringConfigResponsePtrInput `pulumi:"microsoftPeeringConfig"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The peer ASN.
	PeerASN pulumi.IntPtrInput `pulumi:"peerASN"`
	// The PeeringType. Possible values are: 'AzurePublicPeering', 'AzurePrivatePeering', and 'MicrosoftPeering'.
	PeeringType pulumi.StringPtrInput `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort pulumi.StringPtrInput `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"primaryPeerAddressPrefix"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The secondary port.
	SecondaryAzurePort pulumi.StringPtrInput `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// The state of peering. Possible values are: 'Disabled' and 'Enabled'
	State pulumi.StringPtrInput `pulumi:"state"`
	// Gets peering stats.
	Stats ExpressRouteCircuitStatsResponsePtrInput `pulumi:"stats"`
	// The VLAN ID.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (ExpressRouteCircuitPeeringResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringResponseArgs) ToExpressRouteCircuitPeeringResponseOutput() ExpressRouteCircuitPeeringResponseOutput {
	return i.ToExpressRouteCircuitPeeringResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringResponseArgs) ToExpressRouteCircuitPeeringResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringResponseOutput)
}

// ExpressRouteCircuitPeeringResponseArrayInput is an input type that accepts ExpressRouteCircuitPeeringResponseArray and ExpressRouteCircuitPeeringResponseArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringResponseArrayInput` via:
//
//          ExpressRouteCircuitPeeringResponseArray{ ExpressRouteCircuitPeeringResponseArgs{...} }
type ExpressRouteCircuitPeeringResponseArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringResponseArrayOutput() ExpressRouteCircuitPeeringResponseArrayOutput
	ToExpressRouteCircuitPeeringResponseArrayOutputWithContext(context.Context) ExpressRouteCircuitPeeringResponseArrayOutput
}

type ExpressRouteCircuitPeeringResponseArray []ExpressRouteCircuitPeeringResponseInput

func (ExpressRouteCircuitPeeringResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringResponseArray) ToExpressRouteCircuitPeeringResponseArrayOutput() ExpressRouteCircuitPeeringResponseArrayOutput {
	return i.ToExpressRouteCircuitPeeringResponseArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringResponseArray) ToExpressRouteCircuitPeeringResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringResponseArrayOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringResponseOutput) ToExpressRouteCircuitPeeringResponseOutput() ExpressRouteCircuitPeeringResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringResponseOutput) ToExpressRouteCircuitPeeringResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringResponseOutput {
	return o
}

// The Azure ASN.
func (o ExpressRouteCircuitPeeringResponseOutput) AzureASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *int { return v.AzureASN }).(pulumi.IntPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitPeeringResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ExpressRouteCircuitPeeringResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The Microsoft peering configuration.
func (o ExpressRouteCircuitPeeringResponseOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *ExpressRouteCircuitPeeringConfigResponse {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitPeeringResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The peer ASN.
func (o ExpressRouteCircuitPeeringResponseOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *int { return v.PeerASN }).(pulumi.IntPtrOutput)
}

// The PeeringType. Possible values are: 'AzurePublicPeering', 'AzurePrivatePeering', and 'MicrosoftPeering'.
func (o ExpressRouteCircuitPeeringResponseOutput) PeeringType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.PeeringType }).(pulumi.StringPtrOutput)
}

// The primary port.
func (o ExpressRouteCircuitPeeringResponseOutput) PrimaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.PrimaryAzurePort }).(pulumi.StringPtrOutput)
}

// The primary address prefix.
func (o ExpressRouteCircuitPeeringResponseOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitPeeringResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The secondary port.
func (o ExpressRouteCircuitPeeringResponseOutput) SecondaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.SecondaryAzurePort }).(pulumi.StringPtrOutput)
}

// The secondary address prefix.
func (o ExpressRouteCircuitPeeringResponseOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The shared key.
func (o ExpressRouteCircuitPeeringResponseOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// The state of peering. Possible values are: 'Disabled' and 'Enabled'
func (o ExpressRouteCircuitPeeringResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Gets peering stats.
func (o ExpressRouteCircuitPeeringResponseOutput) Stats() ExpressRouteCircuitStatsResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *ExpressRouteCircuitStatsResponse { return v.Stats }).(ExpressRouteCircuitStatsResponsePtrOutput)
}

// The VLAN ID.
func (o ExpressRouteCircuitPeeringResponseOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitPeeringResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringResponseArrayOutput) ToExpressRouteCircuitPeeringResponseArrayOutput() ExpressRouteCircuitPeeringResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringResponseArrayOutput) ToExpressRouteCircuitPeeringResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitPeeringResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitPeeringResponse {
		return vs[0].([]ExpressRouteCircuitPeeringResponse)[vs[1].(int)]
	}).(ExpressRouteCircuitPeeringResponseOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderProperties struct {
	// The BandwidthInMbps.
	BandwidthInMbps *int `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation *string `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName *string `pulumi:"serviceProviderName"`
}

// ExpressRouteCircuitServiceProviderPropertiesInput is an input type that accepts ExpressRouteCircuitServiceProviderPropertiesArgs and ExpressRouteCircuitServiceProviderPropertiesOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitServiceProviderPropertiesInput` via:
//
//          ExpressRouteCircuitServiceProviderPropertiesArgs{...}
type ExpressRouteCircuitServiceProviderPropertiesInput interface {
	pulumi.Input

	ToExpressRouteCircuitServiceProviderPropertiesOutput() ExpressRouteCircuitServiceProviderPropertiesOutput
	ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(context.Context) ExpressRouteCircuitServiceProviderPropertiesOutput
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesArgs struct {
	// The BandwidthInMbps.
	BandwidthInMbps pulumi.IntPtrInput `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation pulumi.StringPtrInput `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName pulumi.StringPtrInput `pulumi:"serviceProviderName"`
}

func (ExpressRouteCircuitServiceProviderPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesOutput() ExpressRouteCircuitServiceProviderPropertiesOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesOutput)
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesOutput).ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitServiceProviderPropertiesPtrInput is an input type that accepts ExpressRouteCircuitServiceProviderPropertiesArgs, ExpressRouteCircuitServiceProviderPropertiesPtr and ExpressRouteCircuitServiceProviderPropertiesPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitServiceProviderPropertiesPtrInput` via:
//
//          ExpressRouteCircuitServiceProviderPropertiesArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitServiceProviderPropertiesPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput
	ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput
}

type expressRouteCircuitServiceProviderPropertiesPtrType ExpressRouteCircuitServiceProviderPropertiesArgs

func ExpressRouteCircuitServiceProviderPropertiesPtr(v *ExpressRouteCircuitServiceProviderPropertiesArgs) ExpressRouteCircuitServiceProviderPropertiesPtrInput {
	return (*expressRouteCircuitServiceProviderPropertiesPtrType)(v)
}

func (*expressRouteCircuitServiceProviderPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (i *expressRouteCircuitServiceProviderPropertiesPtrType) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitServiceProviderPropertiesPtrType) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesPtrOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesOutput() ExpressRouteCircuitServiceProviderPropertiesOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o.ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderProperties) *ExpressRouteCircuitServiceProviderProperties {
		return &v
	}).(ExpressRouteCircuitServiceProviderPropertiesPtrOutput)
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderProperties) *int { return v.BandwidthInMbps }).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderProperties) *string { return v.PeeringLocation }).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderProperties) *string { return v.ServiceProviderName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitServiceProviderPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) Elem() ExpressRouteCircuitServiceProviderPropertiesOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) ExpressRouteCircuitServiceProviderProperties {
		return *v
	}).(ExpressRouteCircuitServiceProviderPropertiesOutput)
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthInMbps
	}).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) *string {
		if v == nil {
			return nil
		}
		return v.PeeringLocation
	}).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderName
	}).(pulumi.StringPtrOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesInvokeResponse struct {
	// The BandwidthInMbps.
	BandwidthInMbps *int `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation *string `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName *string `pulumi:"serviceProviderName"`
}

// ExpressRouteCircuitServiceProviderPropertiesInvokeResponseInput is an input type that accepts ExpressRouteCircuitServiceProviderPropertiesInvokeResponseArgs and ExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitServiceProviderPropertiesInvokeResponseInput` via:
//
//          ExpressRouteCircuitServiceProviderPropertiesInvokeResponseArgs{...}
type ExpressRouteCircuitServiceProviderPropertiesInvokeResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutput() ExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutput
	ToExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutputWithContext(context.Context) ExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutput
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesInvokeResponseArgs struct {
	// The BandwidthInMbps.
	BandwidthInMbps pulumi.IntPtrInput `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation pulumi.StringPtrInput `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName pulumi.StringPtrInput `pulumi:"serviceProviderName"`
}

func (ExpressRouteCircuitServiceProviderPropertiesInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderPropertiesInvokeResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitServiceProviderPropertiesInvokeResponseArgs) ToExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutput() ExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitServiceProviderPropertiesInvokeResponseArgs) ToExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderPropertiesInvokeResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutput() ExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutput {
	return o
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesInvokeResponse) *int { return v.BandwidthInMbps }).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesInvokeResponse) *string { return v.PeeringLocation }).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesInvokeResponse) *string {
		return v.ServiceProviderName
	}).(pulumi.StringPtrOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesResponse struct {
	// The BandwidthInMbps.
	BandwidthInMbps *int `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation *string `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName *string `pulumi:"serviceProviderName"`
}

// ExpressRouteCircuitServiceProviderPropertiesResponseInput is an input type that accepts ExpressRouteCircuitServiceProviderPropertiesResponseArgs and ExpressRouteCircuitServiceProviderPropertiesResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitServiceProviderPropertiesResponseInput` via:
//
//          ExpressRouteCircuitServiceProviderPropertiesResponseArgs{...}
type ExpressRouteCircuitServiceProviderPropertiesResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitServiceProviderPropertiesResponseOutput() ExpressRouteCircuitServiceProviderPropertiesResponseOutput
	ToExpressRouteCircuitServiceProviderPropertiesResponseOutputWithContext(context.Context) ExpressRouteCircuitServiceProviderPropertiesResponseOutput
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesResponseArgs struct {
	// The BandwidthInMbps.
	BandwidthInMbps pulumi.IntPtrInput `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation pulumi.StringPtrInput `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName pulumi.StringPtrInput `pulumi:"serviceProviderName"`
}

func (ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderPropertiesResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ToExpressRouteCircuitServiceProviderPropertiesResponseOutput() ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ToExpressRouteCircuitServiceProviderPropertiesResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesResponseOutput)
}

func (i ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesResponseOutput).ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitServiceProviderPropertiesResponsePtrInput is an input type that accepts ExpressRouteCircuitServiceProviderPropertiesResponseArgs, ExpressRouteCircuitServiceProviderPropertiesResponsePtr and ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitServiceProviderPropertiesResponsePtrInput` via:
//
//          ExpressRouteCircuitServiceProviderPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitServiceProviderPropertiesResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput
	ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput
}

type expressRouteCircuitServiceProviderPropertiesResponsePtrType ExpressRouteCircuitServiceProviderPropertiesResponseArgs

func ExpressRouteCircuitServiceProviderPropertiesResponsePtr(v *ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ExpressRouteCircuitServiceProviderPropertiesResponsePtrInput {
	return (*expressRouteCircuitServiceProviderPropertiesResponsePtrType)(v)
}

func (*expressRouteCircuitServiceProviderPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitServiceProviderPropertiesResponse)(nil)).Elem()
}

func (i *expressRouteCircuitServiceProviderPropertiesResponsePtrType) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitServiceProviderPropertiesResponsePtrType) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderPropertiesResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesResponseOutput() ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o.ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesResponse) *ExpressRouteCircuitServiceProviderPropertiesResponse {
		return &v
	}).(ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput)
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesResponse) *int { return v.BandwidthInMbps }).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesResponse) *string { return v.PeeringLocation }).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesResponse) *string { return v.ServiceProviderName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitServiceProviderPropertiesResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) Elem() ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) ExpressRouteCircuitServiceProviderPropertiesResponse {
		return *v
	}).(ExpressRouteCircuitServiceProviderPropertiesResponseOutput)
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthInMbps
	}).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PeeringLocation
	}).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderName
	}).(pulumi.StringPtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSku struct {
	// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
	Family *string `pulumi:"family"`
	// The name of the SKU.
	Name *string `pulumi:"name"`
	// The tier of the SKU. Possible values are 'Standard' and 'Premium'.
	Tier *string `pulumi:"tier"`
}

// ExpressRouteCircuitSkuInput is an input type that accepts ExpressRouteCircuitSkuArgs and ExpressRouteCircuitSkuOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuInput` via:
//
//          ExpressRouteCircuitSkuArgs{...}
type ExpressRouteCircuitSkuInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuOutput() ExpressRouteCircuitSkuOutput
	ToExpressRouteCircuitSkuOutputWithContext(context.Context) ExpressRouteCircuitSkuOutput
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuArgs struct {
	// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The tier of the SKU. Possible values are 'Standard' and 'Premium'.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ExpressRouteCircuitSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSku)(nil)).Elem()
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuOutput() ExpressRouteCircuitSkuOutput {
	return i.ToExpressRouteCircuitSkuOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuOutput)
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return i.ToExpressRouteCircuitSkuPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuOutput).ToExpressRouteCircuitSkuPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitSkuPtrInput is an input type that accepts ExpressRouteCircuitSkuArgs, ExpressRouteCircuitSkuPtr and ExpressRouteCircuitSkuPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuPtrInput` via:
//
//          ExpressRouteCircuitSkuArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitSkuPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput
	ToExpressRouteCircuitSkuPtrOutputWithContext(context.Context) ExpressRouteCircuitSkuPtrOutput
}

type expressRouteCircuitSkuPtrType ExpressRouteCircuitSkuArgs

func ExpressRouteCircuitSkuPtr(v *ExpressRouteCircuitSkuArgs) ExpressRouteCircuitSkuPtrInput {
	return (*expressRouteCircuitSkuPtrType)(v)
}

func (*expressRouteCircuitSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSku)(nil)).Elem()
}

func (i *expressRouteCircuitSkuPtrType) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return i.ToExpressRouteCircuitSkuPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitSkuPtrType) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuPtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSku)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuOutput() ExpressRouteCircuitSkuOutput {
	return o
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuOutput {
	return o
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return o.ToExpressRouteCircuitSkuPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) *ExpressRouteCircuitSku {
		return &v
	}).(ExpressRouteCircuitSkuPtrOutput)
}

// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
func (o ExpressRouteCircuitSkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The tier of the SKU. Possible values are 'Standard' and 'Premium'.
func (o ExpressRouteCircuitSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitSkuPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSku)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuPtrOutput) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuPtrOutput) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuPtrOutput) Elem() ExpressRouteCircuitSkuOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) ExpressRouteCircuitSku { return *v }).(ExpressRouteCircuitSkuOutput)
}

// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
func (o ExpressRouteCircuitSkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of the SKU. Possible values are 'Standard' and 'Premium'.
func (o ExpressRouteCircuitSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuInvokeResponse struct {
	// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
	Family *string `pulumi:"family"`
	// The name of the SKU.
	Name *string `pulumi:"name"`
	// The tier of the SKU. Possible values are 'Standard' and 'Premium'.
	Tier *string `pulumi:"tier"`
}

// ExpressRouteCircuitSkuInvokeResponseInput is an input type that accepts ExpressRouteCircuitSkuInvokeResponseArgs and ExpressRouteCircuitSkuInvokeResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuInvokeResponseInput` via:
//
//          ExpressRouteCircuitSkuInvokeResponseArgs{...}
type ExpressRouteCircuitSkuInvokeResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuInvokeResponseOutput() ExpressRouteCircuitSkuInvokeResponseOutput
	ToExpressRouteCircuitSkuInvokeResponseOutputWithContext(context.Context) ExpressRouteCircuitSkuInvokeResponseOutput
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuInvokeResponseArgs struct {
	// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The tier of the SKU. Possible values are 'Standard' and 'Premium'.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ExpressRouteCircuitSkuInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSkuInvokeResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitSkuInvokeResponseArgs) ToExpressRouteCircuitSkuInvokeResponseOutput() ExpressRouteCircuitSkuInvokeResponseOutput {
	return i.ToExpressRouteCircuitSkuInvokeResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuInvokeResponseArgs) ToExpressRouteCircuitSkuInvokeResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuInvokeResponseOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuInvokeResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSkuInvokeResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuInvokeResponseOutput) ToExpressRouteCircuitSkuInvokeResponseOutput() ExpressRouteCircuitSkuInvokeResponseOutput {
	return o
}

func (o ExpressRouteCircuitSkuInvokeResponseOutput) ToExpressRouteCircuitSkuInvokeResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuInvokeResponseOutput {
	return o
}

// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
func (o ExpressRouteCircuitSkuInvokeResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuInvokeResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The tier of the SKU. Possible values are 'Standard' and 'Premium'.
func (o ExpressRouteCircuitSkuInvokeResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuInvokeResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuResponse struct {
	// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
	Family *string `pulumi:"family"`
	// The name of the SKU.
	Name *string `pulumi:"name"`
	// The tier of the SKU. Possible values are 'Standard' and 'Premium'.
	Tier *string `pulumi:"tier"`
}

// ExpressRouteCircuitSkuResponseInput is an input type that accepts ExpressRouteCircuitSkuResponseArgs and ExpressRouteCircuitSkuResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuResponseInput` via:
//
//          ExpressRouteCircuitSkuResponseArgs{...}
type ExpressRouteCircuitSkuResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuResponseOutput() ExpressRouteCircuitSkuResponseOutput
	ToExpressRouteCircuitSkuResponseOutputWithContext(context.Context) ExpressRouteCircuitSkuResponseOutput
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuResponseArgs struct {
	// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The tier of the SKU. Possible values are 'Standard' and 'Premium'.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ExpressRouteCircuitSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSkuResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitSkuResponseArgs) ToExpressRouteCircuitSkuResponseOutput() ExpressRouteCircuitSkuResponseOutput {
	return i.ToExpressRouteCircuitSkuResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuResponseArgs) ToExpressRouteCircuitSkuResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuResponseOutput)
}

func (i ExpressRouteCircuitSkuResponseArgs) ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput {
	return i.ToExpressRouteCircuitSkuResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuResponseArgs) ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuResponseOutput).ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitSkuResponsePtrInput is an input type that accepts ExpressRouteCircuitSkuResponseArgs, ExpressRouteCircuitSkuResponsePtr and ExpressRouteCircuitSkuResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuResponsePtrInput` via:
//
//          ExpressRouteCircuitSkuResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitSkuResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput
	ToExpressRouteCircuitSkuResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitSkuResponsePtrOutput
}

type expressRouteCircuitSkuResponsePtrType ExpressRouteCircuitSkuResponseArgs

func ExpressRouteCircuitSkuResponsePtr(v *ExpressRouteCircuitSkuResponseArgs) ExpressRouteCircuitSkuResponsePtrInput {
	return (*expressRouteCircuitSkuResponsePtrType)(v)
}

func (*expressRouteCircuitSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSkuResponse)(nil)).Elem()
}

func (i *expressRouteCircuitSkuResponsePtrType) ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput {
	return i.ToExpressRouteCircuitSkuResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitSkuResponsePtrType) ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuResponsePtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSkuResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuResponseOutput) ToExpressRouteCircuitSkuResponseOutput() ExpressRouteCircuitSkuResponseOutput {
	return o
}

func (o ExpressRouteCircuitSkuResponseOutput) ToExpressRouteCircuitSkuResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponseOutput {
	return o
}

func (o ExpressRouteCircuitSkuResponseOutput) ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput {
	return o.ToExpressRouteCircuitSkuResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitSkuResponseOutput) ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuResponse) *ExpressRouteCircuitSkuResponse {
		return &v
	}).(ExpressRouteCircuitSkuResponsePtrOutput)
}

// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
func (o ExpressRouteCircuitSkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The tier of the SKU. Possible values are 'Standard' and 'Premium'.
func (o ExpressRouteCircuitSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSkuResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuResponsePtrOutput) ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuResponsePtrOutput) ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuResponsePtrOutput) Elem() ExpressRouteCircuitSkuResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) ExpressRouteCircuitSkuResponse { return *v }).(ExpressRouteCircuitSkuResponseOutput)
}

// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
func (o ExpressRouteCircuitSkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of the SKU. Possible values are 'Standard' and 'Premium'.
func (o ExpressRouteCircuitSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStats struct {
	// Gets BytesIn of the peering.
	BytesIn *int `pulumi:"bytesIn"`
	// Gets BytesOut of the peering.
	BytesOut *int `pulumi:"bytesOut"`
}

// ExpressRouteCircuitStatsInput is an input type that accepts ExpressRouteCircuitStatsArgs and ExpressRouteCircuitStatsOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsInput` via:
//
//          ExpressRouteCircuitStatsArgs{...}
type ExpressRouteCircuitStatsInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsOutput() ExpressRouteCircuitStatsOutput
	ToExpressRouteCircuitStatsOutputWithContext(context.Context) ExpressRouteCircuitStatsOutput
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsArgs struct {
	// Gets BytesIn of the peering.
	BytesIn pulumi.IntPtrInput `pulumi:"bytesIn"`
	// Gets BytesOut of the peering.
	BytesOut pulumi.IntPtrInput `pulumi:"bytesOut"`
}

func (ExpressRouteCircuitStatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStats)(nil)).Elem()
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsOutput() ExpressRouteCircuitStatsOutput {
	return i.ToExpressRouteCircuitStatsOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsOutput)
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return i.ToExpressRouteCircuitStatsPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsOutput).ToExpressRouteCircuitStatsPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitStatsPtrInput is an input type that accepts ExpressRouteCircuitStatsArgs, ExpressRouteCircuitStatsPtr and ExpressRouteCircuitStatsPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsPtrInput` via:
//
//          ExpressRouteCircuitStatsArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitStatsPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput
	ToExpressRouteCircuitStatsPtrOutputWithContext(context.Context) ExpressRouteCircuitStatsPtrOutput
}

type expressRouteCircuitStatsPtrType ExpressRouteCircuitStatsArgs

func ExpressRouteCircuitStatsPtr(v *ExpressRouteCircuitStatsArgs) ExpressRouteCircuitStatsPtrInput {
	return (*expressRouteCircuitStatsPtrType)(v)
}

func (*expressRouteCircuitStatsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStats)(nil)).Elem()
}

func (i *expressRouteCircuitStatsPtrType) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return i.ToExpressRouteCircuitStatsPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitStatsPtrType) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsPtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStats)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsOutput() ExpressRouteCircuitStatsOutput {
	return o
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsOutput {
	return o
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return o.ToExpressRouteCircuitStatsPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *ExpressRouteCircuitStats {
		return &v
	}).(ExpressRouteCircuitStatsPtrOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsOutput) BytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *int { return v.BytesIn }).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsOutput) BytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *int { return v.BytesOut }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitStatsPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStats)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsPtrOutput) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsPtrOutput) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsPtrOutput) Elem() ExpressRouteCircuitStatsOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) ExpressRouteCircuitStats { return *v }).(ExpressRouteCircuitStatsOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsPtrOutput) BytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) *int {
		if v == nil {
			return nil
		}
		return v.BytesIn
	}).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsPtrOutput) BytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) *int {
		if v == nil {
			return nil
		}
		return v.BytesOut
	}).(pulumi.IntPtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsInvokeResponse struct {
	// Gets BytesIn of the peering.
	BytesIn *int `pulumi:"bytesIn"`
	// Gets BytesOut of the peering.
	BytesOut *int `pulumi:"bytesOut"`
}

// ExpressRouteCircuitStatsInvokeResponseInput is an input type that accepts ExpressRouteCircuitStatsInvokeResponseArgs and ExpressRouteCircuitStatsInvokeResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsInvokeResponseInput` via:
//
//          ExpressRouteCircuitStatsInvokeResponseArgs{...}
type ExpressRouteCircuitStatsInvokeResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsInvokeResponseOutput() ExpressRouteCircuitStatsInvokeResponseOutput
	ToExpressRouteCircuitStatsInvokeResponseOutputWithContext(context.Context) ExpressRouteCircuitStatsInvokeResponseOutput
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsInvokeResponseArgs struct {
	// Gets BytesIn of the peering.
	BytesIn pulumi.IntPtrInput `pulumi:"bytesIn"`
	// Gets BytesOut of the peering.
	BytesOut pulumi.IntPtrInput `pulumi:"bytesOut"`
}

func (ExpressRouteCircuitStatsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStatsInvokeResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitStatsInvokeResponseArgs) ToExpressRouteCircuitStatsInvokeResponseOutput() ExpressRouteCircuitStatsInvokeResponseOutput {
	return i.ToExpressRouteCircuitStatsInvokeResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsInvokeResponseArgs) ToExpressRouteCircuitStatsInvokeResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsInvokeResponseOutput)
}

func (i ExpressRouteCircuitStatsInvokeResponseArgs) ToExpressRouteCircuitStatsInvokeResponsePtrOutput() ExpressRouteCircuitStatsInvokeResponsePtrOutput {
	return i.ToExpressRouteCircuitStatsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsInvokeResponseArgs) ToExpressRouteCircuitStatsInvokeResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsInvokeResponseOutput).ToExpressRouteCircuitStatsInvokeResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitStatsInvokeResponsePtrInput is an input type that accepts ExpressRouteCircuitStatsInvokeResponseArgs, ExpressRouteCircuitStatsInvokeResponsePtr and ExpressRouteCircuitStatsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsInvokeResponsePtrInput` via:
//
//          ExpressRouteCircuitStatsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitStatsInvokeResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsInvokeResponsePtrOutput() ExpressRouteCircuitStatsInvokeResponsePtrOutput
	ToExpressRouteCircuitStatsInvokeResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitStatsInvokeResponsePtrOutput
}

type expressRouteCircuitStatsInvokeResponsePtrType ExpressRouteCircuitStatsInvokeResponseArgs

func ExpressRouteCircuitStatsInvokeResponsePtr(v *ExpressRouteCircuitStatsInvokeResponseArgs) ExpressRouteCircuitStatsInvokeResponsePtrInput {
	return (*expressRouteCircuitStatsInvokeResponsePtrType)(v)
}

func (*expressRouteCircuitStatsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStatsInvokeResponse)(nil)).Elem()
}

func (i *expressRouteCircuitStatsInvokeResponsePtrType) ToExpressRouteCircuitStatsInvokeResponsePtrOutput() ExpressRouteCircuitStatsInvokeResponsePtrOutput {
	return i.ToExpressRouteCircuitStatsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitStatsInvokeResponsePtrType) ToExpressRouteCircuitStatsInvokeResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsInvokeResponsePtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsInvokeResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStatsInvokeResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsInvokeResponseOutput) ToExpressRouteCircuitStatsInvokeResponseOutput() ExpressRouteCircuitStatsInvokeResponseOutput {
	return o
}

func (o ExpressRouteCircuitStatsInvokeResponseOutput) ToExpressRouteCircuitStatsInvokeResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsInvokeResponseOutput {
	return o
}

func (o ExpressRouteCircuitStatsInvokeResponseOutput) ToExpressRouteCircuitStatsInvokeResponsePtrOutput() ExpressRouteCircuitStatsInvokeResponsePtrOutput {
	return o.ToExpressRouteCircuitStatsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitStatsInvokeResponseOutput) ToExpressRouteCircuitStatsInvokeResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsInvokeResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsInvokeResponse) *ExpressRouteCircuitStatsInvokeResponse {
		return &v
	}).(ExpressRouteCircuitStatsInvokeResponsePtrOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsInvokeResponseOutput) BytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsInvokeResponse) *int { return v.BytesIn }).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsInvokeResponseOutput) BytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsInvokeResponse) *int { return v.BytesOut }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitStatsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStatsInvokeResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsInvokeResponsePtrOutput) ToExpressRouteCircuitStatsInvokeResponsePtrOutput() ExpressRouteCircuitStatsInvokeResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsInvokeResponsePtrOutput) ToExpressRouteCircuitStatsInvokeResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsInvokeResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsInvokeResponsePtrOutput) Elem() ExpressRouteCircuitStatsInvokeResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsInvokeResponse) ExpressRouteCircuitStatsInvokeResponse { return *v }).(ExpressRouteCircuitStatsInvokeResponseOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsInvokeResponsePtrOutput) BytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.BytesIn
	}).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsInvokeResponsePtrOutput) BytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.BytesOut
	}).(pulumi.IntPtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsResponse struct {
	// Gets BytesIn of the peering.
	BytesIn *int `pulumi:"bytesIn"`
	// Gets BytesOut of the peering.
	BytesOut *int `pulumi:"bytesOut"`
}

// ExpressRouteCircuitStatsResponseInput is an input type that accepts ExpressRouteCircuitStatsResponseArgs and ExpressRouteCircuitStatsResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsResponseInput` via:
//
//          ExpressRouteCircuitStatsResponseArgs{...}
type ExpressRouteCircuitStatsResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsResponseOutput() ExpressRouteCircuitStatsResponseOutput
	ToExpressRouteCircuitStatsResponseOutputWithContext(context.Context) ExpressRouteCircuitStatsResponseOutput
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsResponseArgs struct {
	// Gets BytesIn of the peering.
	BytesIn pulumi.IntPtrInput `pulumi:"bytesIn"`
	// Gets BytesOut of the peering.
	BytesOut pulumi.IntPtrInput `pulumi:"bytesOut"`
}

func (ExpressRouteCircuitStatsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStatsResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitStatsResponseArgs) ToExpressRouteCircuitStatsResponseOutput() ExpressRouteCircuitStatsResponseOutput {
	return i.ToExpressRouteCircuitStatsResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsResponseArgs) ToExpressRouteCircuitStatsResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsResponseOutput)
}

func (i ExpressRouteCircuitStatsResponseArgs) ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput {
	return i.ToExpressRouteCircuitStatsResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsResponseArgs) ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsResponseOutput).ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitStatsResponsePtrInput is an input type that accepts ExpressRouteCircuitStatsResponseArgs, ExpressRouteCircuitStatsResponsePtr and ExpressRouteCircuitStatsResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsResponsePtrInput` via:
//
//          ExpressRouteCircuitStatsResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitStatsResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput
	ToExpressRouteCircuitStatsResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitStatsResponsePtrOutput
}

type expressRouteCircuitStatsResponsePtrType ExpressRouteCircuitStatsResponseArgs

func ExpressRouteCircuitStatsResponsePtr(v *ExpressRouteCircuitStatsResponseArgs) ExpressRouteCircuitStatsResponsePtrInput {
	return (*expressRouteCircuitStatsResponsePtrType)(v)
}

func (*expressRouteCircuitStatsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStatsResponse)(nil)).Elem()
}

func (i *expressRouteCircuitStatsResponsePtrType) ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput {
	return i.ToExpressRouteCircuitStatsResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitStatsResponsePtrType) ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsResponsePtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStatsResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsResponseOutput) ToExpressRouteCircuitStatsResponseOutput() ExpressRouteCircuitStatsResponseOutput {
	return o
}

func (o ExpressRouteCircuitStatsResponseOutput) ToExpressRouteCircuitStatsResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponseOutput {
	return o
}

func (o ExpressRouteCircuitStatsResponseOutput) ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput {
	return o.ToExpressRouteCircuitStatsResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitStatsResponseOutput) ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *ExpressRouteCircuitStatsResponse {
		return &v
	}).(ExpressRouteCircuitStatsResponsePtrOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsResponseOutput) BytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *int { return v.BytesIn }).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsResponseOutput) BytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *int { return v.BytesOut }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitStatsResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStatsResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsResponsePtrOutput) ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsResponsePtrOutput) ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsResponsePtrOutput) Elem() ExpressRouteCircuitStatsResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) ExpressRouteCircuitStatsResponse { return *v }).(ExpressRouteCircuitStatsResponseOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsResponsePtrOutput) BytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) *int {
		if v == nil {
			return nil
		}
		return v.BytesIn
	}).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsResponsePtrOutput) BytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) *int {
		if v == nil {
			return nil
		}
		return v.BytesOut
	}).(pulumi.IntPtrOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Read only. Inbound pools URIs that use this frontend IP.
	InboundNatPools []SubResource `pulumi:"inboundNatPools"`
	// Read only. Inbound rules URIs that use this frontend IP.
	InboundNatRules []SubResource `pulumi:"inboundNatRules"`
	// Gets load balancing rules URIs that use this frontend IP.
	LoadBalancingRules []SubResource `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Read only. Outbound rules URIs that use this frontend IP.
	OutboundNatRules []SubResource `pulumi:"outboundNatRules"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the Public IP resource.
	PublicIPAddress *PublicIPAddressType `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet *SubnetType `pulumi:"subnet"`
}

// FrontendIPConfigurationInput is an input type that accepts FrontendIPConfigurationArgs and FrontendIPConfigurationOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationInput` via:
//
//          FrontendIPConfigurationArgs{...}
type FrontendIPConfigurationInput interface {
	pulumi.Input

	ToFrontendIPConfigurationOutput() FrontendIPConfigurationOutput
	ToFrontendIPConfigurationOutputWithContext(context.Context) FrontendIPConfigurationOutput
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Read only. Inbound pools URIs that use this frontend IP.
	InboundNatPools SubResourceArrayInput `pulumi:"inboundNatPools"`
	// Read only. Inbound rules URIs that use this frontend IP.
	InboundNatRules SubResourceArrayInput `pulumi:"inboundNatRules"`
	// Gets load balancing rules URIs that use this frontend IP.
	LoadBalancingRules SubResourceArrayInput `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Read only. Outbound rules URIs that use this frontend IP.
	OutboundNatRules SubResourceArrayInput `pulumi:"outboundNatRules"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the Public IP resource.
	PublicIPAddress PublicIPAddressTypePtrInput `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet SubnetTypePtrInput `pulumi:"subnet"`
}

func (FrontendIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfiguration)(nil)).Elem()
}

func (i FrontendIPConfigurationArgs) ToFrontendIPConfigurationOutput() FrontendIPConfigurationOutput {
	return i.ToFrontendIPConfigurationOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationArgs) ToFrontendIPConfigurationOutputWithContext(ctx context.Context) FrontendIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationOutput)
}

// FrontendIPConfigurationArrayInput is an input type that accepts FrontendIPConfigurationArray and FrontendIPConfigurationArrayOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationArrayInput` via:
//
//          FrontendIPConfigurationArray{ FrontendIPConfigurationArgs{...} }
type FrontendIPConfigurationArrayInput interface {
	pulumi.Input

	ToFrontendIPConfigurationArrayOutput() FrontendIPConfigurationArrayOutput
	ToFrontendIPConfigurationArrayOutputWithContext(context.Context) FrontendIPConfigurationArrayOutput
}

type FrontendIPConfigurationArray []FrontendIPConfigurationInput

func (FrontendIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfiguration)(nil)).Elem()
}

func (i FrontendIPConfigurationArray) ToFrontendIPConfigurationArrayOutput() FrontendIPConfigurationArrayOutput {
	return i.ToFrontendIPConfigurationArrayOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationArray) ToFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationArrayOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfiguration)(nil)).Elem()
}

func (o FrontendIPConfigurationOutput) ToFrontendIPConfigurationOutput() FrontendIPConfigurationOutput {
	return o
}

func (o FrontendIPConfigurationOutput) ToFrontendIPConfigurationOutputWithContext(ctx context.Context) FrontendIPConfigurationOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o FrontendIPConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o FrontendIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Read only. Inbound pools URIs that use this frontend IP.
func (o FrontendIPConfigurationOutput) InboundNatPools() SubResourceArrayOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) []SubResource { return v.InboundNatPools }).(SubResourceArrayOutput)
}

// Read only. Inbound rules URIs that use this frontend IP.
func (o FrontendIPConfigurationOutput) InboundNatRules() SubResourceArrayOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) []SubResource { return v.InboundNatRules }).(SubResourceArrayOutput)
}

// Gets load balancing rules URIs that use this frontend IP.
func (o FrontendIPConfigurationOutput) LoadBalancingRules() SubResourceArrayOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) []SubResource { return v.LoadBalancingRules }).(SubResourceArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o FrontendIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Read only. Outbound rules URIs that use this frontend IP.
func (o FrontendIPConfigurationOutput) OutboundNatRules() SubResourceArrayOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) []SubResource { return v.OutboundNatRules }).(SubResourceArrayOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o FrontendIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o FrontendIPConfigurationOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the Public IP resource.
func (o FrontendIPConfigurationOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *PublicIPAddressType { return v.PublicIPAddress }).(PublicIPAddressTypePtrOutput)
}

// The reference of the subnet resource.
func (o FrontendIPConfigurationOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *SubnetType { return v.Subnet }).(SubnetTypePtrOutput)
}

type FrontendIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfiguration)(nil)).Elem()
}

func (o FrontendIPConfigurationArrayOutput) ToFrontendIPConfigurationArrayOutput() FrontendIPConfigurationArrayOutput {
	return o
}

func (o FrontendIPConfigurationArrayOutput) ToFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationArrayOutput {
	return o
}

func (o FrontendIPConfigurationArrayOutput) Index(i pulumi.IntInput) FrontendIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontendIPConfiguration {
		return vs[0].([]FrontendIPConfiguration)[vs[1].(int)]
	}).(FrontendIPConfigurationOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationInvokeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Read only. Inbound pools URIs that use this frontend IP.
	InboundNatPools []SubResourceInvokeResponse `pulumi:"inboundNatPools"`
	// Read only. Inbound rules URIs that use this frontend IP.
	InboundNatRules []SubResourceInvokeResponse `pulumi:"inboundNatRules"`
	// Gets load balancing rules URIs that use this frontend IP.
	LoadBalancingRules []SubResourceInvokeResponse `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Read only. Outbound rules URIs that use this frontend IP.
	OutboundNatRules []SubResourceInvokeResponse `pulumi:"outboundNatRules"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the Public IP resource.
	PublicIPAddress *PublicIPAddressInvokeResponse `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet *SubnetInvokeResponse `pulumi:"subnet"`
}

// FrontendIPConfigurationInvokeResponseInput is an input type that accepts FrontendIPConfigurationInvokeResponseArgs and FrontendIPConfigurationInvokeResponseOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationInvokeResponseInput` via:
//
//          FrontendIPConfigurationInvokeResponseArgs{...}
type FrontendIPConfigurationInvokeResponseInput interface {
	pulumi.Input

	ToFrontendIPConfigurationInvokeResponseOutput() FrontendIPConfigurationInvokeResponseOutput
	ToFrontendIPConfigurationInvokeResponseOutputWithContext(context.Context) FrontendIPConfigurationInvokeResponseOutput
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationInvokeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Read only. Inbound pools URIs that use this frontend IP.
	InboundNatPools SubResourceInvokeResponseArrayInput `pulumi:"inboundNatPools"`
	// Read only. Inbound rules URIs that use this frontend IP.
	InboundNatRules SubResourceInvokeResponseArrayInput `pulumi:"inboundNatRules"`
	// Gets load balancing rules URIs that use this frontend IP.
	LoadBalancingRules SubResourceInvokeResponseArrayInput `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Read only. Outbound rules URIs that use this frontend IP.
	OutboundNatRules SubResourceInvokeResponseArrayInput `pulumi:"outboundNatRules"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the Public IP resource.
	PublicIPAddress PublicIPAddressInvokeResponsePtrInput `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet SubnetInvokeResponsePtrInput `pulumi:"subnet"`
}

func (FrontendIPConfigurationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfigurationInvokeResponse)(nil)).Elem()
}

func (i FrontendIPConfigurationInvokeResponseArgs) ToFrontendIPConfigurationInvokeResponseOutput() FrontendIPConfigurationInvokeResponseOutput {
	return i.ToFrontendIPConfigurationInvokeResponseOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationInvokeResponseArgs) ToFrontendIPConfigurationInvokeResponseOutputWithContext(ctx context.Context) FrontendIPConfigurationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationInvokeResponseOutput)
}

// FrontendIPConfigurationInvokeResponseArrayInput is an input type that accepts FrontendIPConfigurationInvokeResponseArray and FrontendIPConfigurationInvokeResponseArrayOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationInvokeResponseArrayInput` via:
//
//          FrontendIPConfigurationInvokeResponseArray{ FrontendIPConfigurationInvokeResponseArgs{...} }
type FrontendIPConfigurationInvokeResponseArrayInput interface {
	pulumi.Input

	ToFrontendIPConfigurationInvokeResponseArrayOutput() FrontendIPConfigurationInvokeResponseArrayOutput
	ToFrontendIPConfigurationInvokeResponseArrayOutputWithContext(context.Context) FrontendIPConfigurationInvokeResponseArrayOutput
}

type FrontendIPConfigurationInvokeResponseArray []FrontendIPConfigurationInvokeResponseInput

func (FrontendIPConfigurationInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfigurationInvokeResponse)(nil)).Elem()
}

func (i FrontendIPConfigurationInvokeResponseArray) ToFrontendIPConfigurationInvokeResponseArrayOutput() FrontendIPConfigurationInvokeResponseArrayOutput {
	return i.ToFrontendIPConfigurationInvokeResponseArrayOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationInvokeResponseArray) ToFrontendIPConfigurationInvokeResponseArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationInvokeResponseArrayOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationInvokeResponseOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfigurationInvokeResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationInvokeResponseOutput) ToFrontendIPConfigurationInvokeResponseOutput() FrontendIPConfigurationInvokeResponseOutput {
	return o
}

func (o FrontendIPConfigurationInvokeResponseOutput) ToFrontendIPConfigurationInvokeResponseOutputWithContext(ctx context.Context) FrontendIPConfigurationInvokeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o FrontendIPConfigurationInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o FrontendIPConfigurationInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Read only. Inbound pools URIs that use this frontend IP.
func (o FrontendIPConfigurationInvokeResponseOutput) InboundNatPools() SubResourceInvokeResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationInvokeResponse) []SubResourceInvokeResponse { return v.InboundNatPools }).(SubResourceInvokeResponseArrayOutput)
}

// Read only. Inbound rules URIs that use this frontend IP.
func (o FrontendIPConfigurationInvokeResponseOutput) InboundNatRules() SubResourceInvokeResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationInvokeResponse) []SubResourceInvokeResponse { return v.InboundNatRules }).(SubResourceInvokeResponseArrayOutput)
}

// Gets load balancing rules URIs that use this frontend IP.
func (o FrontendIPConfigurationInvokeResponseOutput) LoadBalancingRules() SubResourceInvokeResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationInvokeResponse) []SubResourceInvokeResponse { return v.LoadBalancingRules }).(SubResourceInvokeResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o FrontendIPConfigurationInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Read only. Outbound rules URIs that use this frontend IP.
func (o FrontendIPConfigurationInvokeResponseOutput) OutboundNatRules() SubResourceInvokeResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationInvokeResponse) []SubResourceInvokeResponse { return v.OutboundNatRules }).(SubResourceInvokeResponseArrayOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationInvokeResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationInvokeResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o FrontendIPConfigurationInvokeResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationInvokeResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o FrontendIPConfigurationInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the Public IP resource.
func (o FrontendIPConfigurationInvokeResponseOutput) PublicIPAddress() PublicIPAddressInvokeResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationInvokeResponse) *PublicIPAddressInvokeResponse { return v.PublicIPAddress }).(PublicIPAddressInvokeResponsePtrOutput)
}

// The reference of the subnet resource.
func (o FrontendIPConfigurationInvokeResponseOutput) Subnet() SubnetInvokeResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationInvokeResponse) *SubnetInvokeResponse { return v.Subnet }).(SubnetInvokeResponsePtrOutput)
}

type FrontendIPConfigurationInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfigurationInvokeResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationInvokeResponseArrayOutput) ToFrontendIPConfigurationInvokeResponseArrayOutput() FrontendIPConfigurationInvokeResponseArrayOutput {
	return o
}

func (o FrontendIPConfigurationInvokeResponseArrayOutput) ToFrontendIPConfigurationInvokeResponseArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationInvokeResponseArrayOutput {
	return o
}

func (o FrontendIPConfigurationInvokeResponseArrayOutput) Index(i pulumi.IntInput) FrontendIPConfigurationInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontendIPConfigurationInvokeResponse {
		return vs[0].([]FrontendIPConfigurationInvokeResponse)[vs[1].(int)]
	}).(FrontendIPConfigurationInvokeResponseOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Read only. Inbound pools URIs that use this frontend IP.
	InboundNatPools []SubResourceResponse `pulumi:"inboundNatPools"`
	// Read only. Inbound rules URIs that use this frontend IP.
	InboundNatRules []SubResourceResponse `pulumi:"inboundNatRules"`
	// Gets load balancing rules URIs that use this frontend IP.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Read only. Outbound rules URIs that use this frontend IP.
	OutboundNatRules []SubResourceResponse `pulumi:"outboundNatRules"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the Public IP resource.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet *SubnetResponse `pulumi:"subnet"`
}

// FrontendIPConfigurationResponseInput is an input type that accepts FrontendIPConfigurationResponseArgs and FrontendIPConfigurationResponseOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationResponseInput` via:
//
//          FrontendIPConfigurationResponseArgs{...}
type FrontendIPConfigurationResponseInput interface {
	pulumi.Input

	ToFrontendIPConfigurationResponseOutput() FrontendIPConfigurationResponseOutput
	ToFrontendIPConfigurationResponseOutputWithContext(context.Context) FrontendIPConfigurationResponseOutput
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Read only. Inbound pools URIs that use this frontend IP.
	InboundNatPools SubResourceResponseArrayInput `pulumi:"inboundNatPools"`
	// Read only. Inbound rules URIs that use this frontend IP.
	InboundNatRules SubResourceResponseArrayInput `pulumi:"inboundNatRules"`
	// Gets load balancing rules URIs that use this frontend IP.
	LoadBalancingRules SubResourceResponseArrayInput `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Read only. Outbound rules URIs that use this frontend IP.
	OutboundNatRules SubResourceResponseArrayInput `pulumi:"outboundNatRules"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the Public IP resource.
	PublicIPAddress PublicIPAddressResponsePtrInput `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet SubnetResponsePtrInput `pulumi:"subnet"`
}

func (FrontendIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfigurationResponse)(nil)).Elem()
}

func (i FrontendIPConfigurationResponseArgs) ToFrontendIPConfigurationResponseOutput() FrontendIPConfigurationResponseOutput {
	return i.ToFrontendIPConfigurationResponseOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationResponseArgs) ToFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationResponseOutput)
}

// FrontendIPConfigurationResponseArrayInput is an input type that accepts FrontendIPConfigurationResponseArray and FrontendIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationResponseArrayInput` via:
//
//          FrontendIPConfigurationResponseArray{ FrontendIPConfigurationResponseArgs{...} }
type FrontendIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToFrontendIPConfigurationResponseArrayOutput() FrontendIPConfigurationResponseArrayOutput
	ToFrontendIPConfigurationResponseArrayOutputWithContext(context.Context) FrontendIPConfigurationResponseArrayOutput
}

type FrontendIPConfigurationResponseArray []FrontendIPConfigurationResponseInput

func (FrontendIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfigurationResponse)(nil)).Elem()
}

func (i FrontendIPConfigurationResponseArray) ToFrontendIPConfigurationResponseArrayOutput() FrontendIPConfigurationResponseArrayOutput {
	return i.ToFrontendIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationResponseArray) ToFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationResponseArrayOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfigurationResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationResponseOutput) ToFrontendIPConfigurationResponseOutput() FrontendIPConfigurationResponseOutput {
	return o
}

func (o FrontendIPConfigurationResponseOutput) ToFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o FrontendIPConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o FrontendIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Read only. Inbound pools URIs that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) InboundNatPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.InboundNatPools }).(SubResourceResponseArrayOutput)
}

// Read only. Inbound rules URIs that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) InboundNatRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.InboundNatRules }).(SubResourceResponseArrayOutput)
}

// Gets load balancing rules URIs that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.LoadBalancingRules }).(SubResourceResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o FrontendIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Read only. Outbound rules URIs that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) OutboundNatRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.OutboundNatRules }).(SubResourceResponseArrayOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o FrontendIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o FrontendIPConfigurationResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the Public IP resource.
func (o FrontendIPConfigurationResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *PublicIPAddressResponse { return v.PublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// The reference of the subnet resource.
func (o FrontendIPConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

type FrontendIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfigurationResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationResponseArrayOutput) ToFrontendIPConfigurationResponseArrayOutput() FrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o FrontendIPConfigurationResponseArrayOutput) ToFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o FrontendIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) FrontendIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontendIPConfigurationResponse {
		return vs[0].([]FrontendIPConfigurationResponse)[vs[1].(int)]
	}).(FrontendIPConfigurationResponseOutput)
}

// IPConfiguration
type IPConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress *PublicIPAddressType `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet *SubnetType `pulumi:"subnet"`
}

// IPConfigurationInput is an input type that accepts IPConfigurationArgs and IPConfigurationOutput values.
// You can construct a concrete instance of `IPConfigurationInput` via:
//
//          IPConfigurationArgs{...}
type IPConfigurationInput interface {
	pulumi.Input

	ToIPConfigurationOutput() IPConfigurationOutput
	ToIPConfigurationOutputWithContext(context.Context) IPConfigurationOutput
}

// IPConfiguration
type IPConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress PublicIPAddressTypePtrInput `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet SubnetTypePtrInput `pulumi:"subnet"`
}

func (IPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfiguration)(nil)).Elem()
}

func (i IPConfigurationArgs) ToIPConfigurationOutput() IPConfigurationOutput {
	return i.ToIPConfigurationOutputWithContext(context.Background())
}

func (i IPConfigurationArgs) ToIPConfigurationOutputWithContext(ctx context.Context) IPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationOutput)
}

func (i IPConfigurationArgs) ToIPConfigurationPtrOutput() IPConfigurationPtrOutput {
	return i.ToIPConfigurationPtrOutputWithContext(context.Background())
}

func (i IPConfigurationArgs) ToIPConfigurationPtrOutputWithContext(ctx context.Context) IPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationOutput).ToIPConfigurationPtrOutputWithContext(ctx)
}

// IPConfigurationPtrInput is an input type that accepts IPConfigurationArgs, IPConfigurationPtr and IPConfigurationPtrOutput values.
// You can construct a concrete instance of `IPConfigurationPtrInput` via:
//
//          IPConfigurationArgs{...}
//
//  or:
//
//          nil
type IPConfigurationPtrInput interface {
	pulumi.Input

	ToIPConfigurationPtrOutput() IPConfigurationPtrOutput
	ToIPConfigurationPtrOutputWithContext(context.Context) IPConfigurationPtrOutput
}

type ipconfigurationPtrType IPConfigurationArgs

func IPConfigurationPtr(v *IPConfigurationArgs) IPConfigurationPtrInput {
	return (*ipconfigurationPtrType)(v)
}

func (*ipconfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfiguration)(nil)).Elem()
}

func (i *ipconfigurationPtrType) ToIPConfigurationPtrOutput() IPConfigurationPtrOutput {
	return i.ToIPConfigurationPtrOutputWithContext(context.Background())
}

func (i *ipconfigurationPtrType) ToIPConfigurationPtrOutputWithContext(ctx context.Context) IPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationPtrOutput)
}

// IPConfigurationArrayInput is an input type that accepts IPConfigurationArray and IPConfigurationArrayOutput values.
// You can construct a concrete instance of `IPConfigurationArrayInput` via:
//
//          IPConfigurationArray{ IPConfigurationArgs{...} }
type IPConfigurationArrayInput interface {
	pulumi.Input

	ToIPConfigurationArrayOutput() IPConfigurationArrayOutput
	ToIPConfigurationArrayOutputWithContext(context.Context) IPConfigurationArrayOutput
}

type IPConfigurationArray []IPConfigurationInput

func (IPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfiguration)(nil)).Elem()
}

func (i IPConfigurationArray) ToIPConfigurationArrayOutput() IPConfigurationArrayOutput {
	return i.ToIPConfigurationArrayOutputWithContext(context.Background())
}

func (i IPConfigurationArray) ToIPConfigurationArrayOutputWithContext(ctx context.Context) IPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationArrayOutput)
}

// IPConfiguration
type IPConfigurationOutput struct{ *pulumi.OutputState }

func (IPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfiguration)(nil)).Elem()
}

func (o IPConfigurationOutput) ToIPConfigurationOutput() IPConfigurationOutput {
	return o
}

func (o IPConfigurationOutput) ToIPConfigurationOutputWithContext(ctx context.Context) IPConfigurationOutput {
	return o
}

func (o IPConfigurationOutput) ToIPConfigurationPtrOutput() IPConfigurationPtrOutput {
	return o.ToIPConfigurationPtrOutputWithContext(context.Background())
}

func (o IPConfigurationOutput) ToIPConfigurationPtrOutputWithContext(ctx context.Context) IPConfigurationPtrOutput {
	return o.ApplyT(func(v IPConfiguration) *IPConfiguration {
		return &v
	}).(IPConfigurationPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o IPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
func (o IPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o IPConfigurationOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfiguration) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the public IP resource.
func (o IPConfigurationOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v IPConfiguration) *PublicIPAddressType { return v.PublicIPAddress }).(PublicIPAddressTypePtrOutput)
}

// The reference of the subnet resource.
func (o IPConfigurationOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v IPConfiguration) *SubnetType { return v.Subnet }).(SubnetTypePtrOutput)
}

type IPConfigurationPtrOutput struct{ *pulumi.OutputState }

func (IPConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfiguration)(nil)).Elem()
}

func (o IPConfigurationPtrOutput) ToIPConfigurationPtrOutput() IPConfigurationPtrOutput {
	return o
}

func (o IPConfigurationPtrOutput) ToIPConfigurationPtrOutputWithContext(ctx context.Context) IPConfigurationPtrOutput {
	return o
}

func (o IPConfigurationPtrOutput) Elem() IPConfigurationOutput {
	return o.ApplyT(func(v *IPConfiguration) IPConfiguration { return *v }).(IPConfigurationOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o IPConfigurationPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationPtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
func (o IPConfigurationPtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o IPConfigurationPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference of the public IP resource.
func (o IPConfigurationPtrOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v *IPConfiguration) *PublicIPAddressType {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressTypePtrOutput)
}

// The reference of the subnet resource.
func (o IPConfigurationPtrOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v *IPConfiguration) *SubnetType {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetTypePtrOutput)
}

type IPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfiguration)(nil)).Elem()
}

func (o IPConfigurationArrayOutput) ToIPConfigurationArrayOutput() IPConfigurationArrayOutput {
	return o
}

func (o IPConfigurationArrayOutput) ToIPConfigurationArrayOutputWithContext(ctx context.Context) IPConfigurationArrayOutput {
	return o
}

func (o IPConfigurationArrayOutput) Index(i pulumi.IntInput) IPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfiguration {
		return vs[0].([]IPConfiguration)[vs[1].(int)]
	}).(IPConfigurationOutput)
}

// IPConfiguration
type IPConfigurationInvokeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress *PublicIPAddressInvokeResponse `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet *SubnetInvokeResponse `pulumi:"subnet"`
}

// IPConfigurationInvokeResponseInput is an input type that accepts IPConfigurationInvokeResponseArgs and IPConfigurationInvokeResponseOutput values.
// You can construct a concrete instance of `IPConfigurationInvokeResponseInput` via:
//
//          IPConfigurationInvokeResponseArgs{...}
type IPConfigurationInvokeResponseInput interface {
	pulumi.Input

	ToIPConfigurationInvokeResponseOutput() IPConfigurationInvokeResponseOutput
	ToIPConfigurationInvokeResponseOutputWithContext(context.Context) IPConfigurationInvokeResponseOutput
}

// IPConfiguration
type IPConfigurationInvokeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress PublicIPAddressInvokeResponsePtrInput `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet SubnetInvokeResponsePtrInput `pulumi:"subnet"`
}

func (IPConfigurationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationInvokeResponse)(nil)).Elem()
}

func (i IPConfigurationInvokeResponseArgs) ToIPConfigurationInvokeResponseOutput() IPConfigurationInvokeResponseOutput {
	return i.ToIPConfigurationInvokeResponseOutputWithContext(context.Background())
}

func (i IPConfigurationInvokeResponseArgs) ToIPConfigurationInvokeResponseOutputWithContext(ctx context.Context) IPConfigurationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationInvokeResponseOutput)
}

func (i IPConfigurationInvokeResponseArgs) ToIPConfigurationInvokeResponsePtrOutput() IPConfigurationInvokeResponsePtrOutput {
	return i.ToIPConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i IPConfigurationInvokeResponseArgs) ToIPConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) IPConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationInvokeResponseOutput).ToIPConfigurationInvokeResponsePtrOutputWithContext(ctx)
}

// IPConfigurationInvokeResponsePtrInput is an input type that accepts IPConfigurationInvokeResponseArgs, IPConfigurationInvokeResponsePtr and IPConfigurationInvokeResponsePtrOutput values.
// You can construct a concrete instance of `IPConfigurationInvokeResponsePtrInput` via:
//
//          IPConfigurationInvokeResponseArgs{...}
//
//  or:
//
//          nil
type IPConfigurationInvokeResponsePtrInput interface {
	pulumi.Input

	ToIPConfigurationInvokeResponsePtrOutput() IPConfigurationInvokeResponsePtrOutput
	ToIPConfigurationInvokeResponsePtrOutputWithContext(context.Context) IPConfigurationInvokeResponsePtrOutput
}

type ipconfigurationInvokeResponsePtrType IPConfigurationInvokeResponseArgs

func IPConfigurationInvokeResponsePtr(v *IPConfigurationInvokeResponseArgs) IPConfigurationInvokeResponsePtrInput {
	return (*ipconfigurationInvokeResponsePtrType)(v)
}

func (*ipconfigurationInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationInvokeResponse)(nil)).Elem()
}

func (i *ipconfigurationInvokeResponsePtrType) ToIPConfigurationInvokeResponsePtrOutput() IPConfigurationInvokeResponsePtrOutput {
	return i.ToIPConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *ipconfigurationInvokeResponsePtrType) ToIPConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) IPConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationInvokeResponsePtrOutput)
}

// IPConfigurationInvokeResponseArrayInput is an input type that accepts IPConfigurationInvokeResponseArray and IPConfigurationInvokeResponseArrayOutput values.
// You can construct a concrete instance of `IPConfigurationInvokeResponseArrayInput` via:
//
//          IPConfigurationInvokeResponseArray{ IPConfigurationInvokeResponseArgs{...} }
type IPConfigurationInvokeResponseArrayInput interface {
	pulumi.Input

	ToIPConfigurationInvokeResponseArrayOutput() IPConfigurationInvokeResponseArrayOutput
	ToIPConfigurationInvokeResponseArrayOutputWithContext(context.Context) IPConfigurationInvokeResponseArrayOutput
}

type IPConfigurationInvokeResponseArray []IPConfigurationInvokeResponseInput

func (IPConfigurationInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationInvokeResponse)(nil)).Elem()
}

func (i IPConfigurationInvokeResponseArray) ToIPConfigurationInvokeResponseArrayOutput() IPConfigurationInvokeResponseArrayOutput {
	return i.ToIPConfigurationInvokeResponseArrayOutputWithContext(context.Background())
}

func (i IPConfigurationInvokeResponseArray) ToIPConfigurationInvokeResponseArrayOutputWithContext(ctx context.Context) IPConfigurationInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationInvokeResponseArrayOutput)
}

// IPConfiguration
type IPConfigurationInvokeResponseOutput struct{ *pulumi.OutputState }

func (IPConfigurationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationInvokeResponse)(nil)).Elem()
}

func (o IPConfigurationInvokeResponseOutput) ToIPConfigurationInvokeResponseOutput() IPConfigurationInvokeResponseOutput {
	return o
}

func (o IPConfigurationInvokeResponseOutput) ToIPConfigurationInvokeResponseOutputWithContext(ctx context.Context) IPConfigurationInvokeResponseOutput {
	return o
}

func (o IPConfigurationInvokeResponseOutput) ToIPConfigurationInvokeResponsePtrOutput() IPConfigurationInvokeResponsePtrOutput {
	return o.ToIPConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (o IPConfigurationInvokeResponseOutput) ToIPConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) IPConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationInvokeResponse) *IPConfigurationInvokeResponse {
		return &v
	}).(IPConfigurationInvokeResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o IPConfigurationInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationInvokeResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationInvokeResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
func (o IPConfigurationInvokeResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationInvokeResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o IPConfigurationInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the public IP resource.
func (o IPConfigurationInvokeResponseOutput) PublicIPAddress() PublicIPAddressInvokeResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationInvokeResponse) *PublicIPAddressInvokeResponse { return v.PublicIPAddress }).(PublicIPAddressInvokeResponsePtrOutput)
}

// The reference of the subnet resource.
func (o IPConfigurationInvokeResponseOutput) Subnet() SubnetInvokeResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationInvokeResponse) *SubnetInvokeResponse { return v.Subnet }).(SubnetInvokeResponsePtrOutput)
}

type IPConfigurationInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (IPConfigurationInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationInvokeResponse)(nil)).Elem()
}

func (o IPConfigurationInvokeResponsePtrOutput) ToIPConfigurationInvokeResponsePtrOutput() IPConfigurationInvokeResponsePtrOutput {
	return o
}

func (o IPConfigurationInvokeResponsePtrOutput) ToIPConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) IPConfigurationInvokeResponsePtrOutput {
	return o
}

func (o IPConfigurationInvokeResponsePtrOutput) Elem() IPConfigurationInvokeResponseOutput {
	return o.ApplyT(func(v *IPConfigurationInvokeResponse) IPConfigurationInvokeResponse { return *v }).(IPConfigurationInvokeResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationInvokeResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o IPConfigurationInvokeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationInvokeResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationInvokeResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
func (o IPConfigurationInvokeResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o IPConfigurationInvokeResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference of the public IP resource.
func (o IPConfigurationInvokeResponsePtrOutput) PublicIPAddress() PublicIPAddressInvokeResponsePtrOutput {
	return o.ApplyT(func(v *IPConfigurationInvokeResponse) *PublicIPAddressInvokeResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressInvokeResponsePtrOutput)
}

// The reference of the subnet resource.
func (o IPConfigurationInvokeResponsePtrOutput) Subnet() SubnetInvokeResponsePtrOutput {
	return o.ApplyT(func(v *IPConfigurationInvokeResponse) *SubnetInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetInvokeResponsePtrOutput)
}

type IPConfigurationInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationInvokeResponse)(nil)).Elem()
}

func (o IPConfigurationInvokeResponseArrayOutput) ToIPConfigurationInvokeResponseArrayOutput() IPConfigurationInvokeResponseArrayOutput {
	return o
}

func (o IPConfigurationInvokeResponseArrayOutput) ToIPConfigurationInvokeResponseArrayOutputWithContext(ctx context.Context) IPConfigurationInvokeResponseArrayOutput {
	return o
}

func (o IPConfigurationInvokeResponseArrayOutput) Index(i pulumi.IntInput) IPConfigurationInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationInvokeResponse {
		return vs[0].([]IPConfigurationInvokeResponse)[vs[1].(int)]
	}).(IPConfigurationInvokeResponseOutput)
}

// IPConfiguration
type IPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet *SubnetResponse `pulumi:"subnet"`
}

// IPConfigurationResponseInput is an input type that accepts IPConfigurationResponseArgs and IPConfigurationResponseOutput values.
// You can construct a concrete instance of `IPConfigurationResponseInput` via:
//
//          IPConfigurationResponseArgs{...}
type IPConfigurationResponseInput interface {
	pulumi.Input

	ToIPConfigurationResponseOutput() IPConfigurationResponseOutput
	ToIPConfigurationResponseOutputWithContext(context.Context) IPConfigurationResponseOutput
}

// IPConfiguration
type IPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress PublicIPAddressResponsePtrInput `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet SubnetResponsePtrInput `pulumi:"subnet"`
}

func (IPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationResponse)(nil)).Elem()
}

func (i IPConfigurationResponseArgs) ToIPConfigurationResponseOutput() IPConfigurationResponseOutput {
	return i.ToIPConfigurationResponseOutputWithContext(context.Background())
}

func (i IPConfigurationResponseArgs) ToIPConfigurationResponseOutputWithContext(ctx context.Context) IPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationResponseOutput)
}

func (i IPConfigurationResponseArgs) ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput {
	return i.ToIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i IPConfigurationResponseArgs) ToIPConfigurationResponsePtrOutputWithContext(ctx context.Context) IPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationResponseOutput).ToIPConfigurationResponsePtrOutputWithContext(ctx)
}

// IPConfigurationResponsePtrInput is an input type that accepts IPConfigurationResponseArgs, IPConfigurationResponsePtr and IPConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `IPConfigurationResponsePtrInput` via:
//
//          IPConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type IPConfigurationResponsePtrInput interface {
	pulumi.Input

	ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput
	ToIPConfigurationResponsePtrOutputWithContext(context.Context) IPConfigurationResponsePtrOutput
}

type ipconfigurationResponsePtrType IPConfigurationResponseArgs

func IPConfigurationResponsePtr(v *IPConfigurationResponseArgs) IPConfigurationResponsePtrInput {
	return (*ipconfigurationResponsePtrType)(v)
}

func (*ipconfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationResponse)(nil)).Elem()
}

func (i *ipconfigurationResponsePtrType) ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput {
	return i.ToIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *ipconfigurationResponsePtrType) ToIPConfigurationResponsePtrOutputWithContext(ctx context.Context) IPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationResponsePtrOutput)
}

// IPConfigurationResponseArrayInput is an input type that accepts IPConfigurationResponseArray and IPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `IPConfigurationResponseArrayInput` via:
//
//          IPConfigurationResponseArray{ IPConfigurationResponseArgs{...} }
type IPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToIPConfigurationResponseArrayOutput() IPConfigurationResponseArrayOutput
	ToIPConfigurationResponseArrayOutputWithContext(context.Context) IPConfigurationResponseArrayOutput
}

type IPConfigurationResponseArray []IPConfigurationResponseInput

func (IPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationResponse)(nil)).Elem()
}

func (i IPConfigurationResponseArray) ToIPConfigurationResponseArrayOutput() IPConfigurationResponseArrayOutput {
	return i.ToIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i IPConfigurationResponseArray) ToIPConfigurationResponseArrayOutputWithContext(ctx context.Context) IPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationResponseArrayOutput)
}

// IPConfiguration
type IPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponseOutput() IPConfigurationResponseOutput {
	return o
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponseOutputWithContext(ctx context.Context) IPConfigurationResponseOutput {
	return o
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput {
	return o.ToIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponsePtrOutputWithContext(ctx context.Context) IPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *IPConfigurationResponse {
		return &v
	}).(IPConfigurationResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o IPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
func (o IPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o IPConfigurationResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the public IP resource.
func (o IPConfigurationResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *PublicIPAddressResponse { return v.PublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// The reference of the subnet resource.
func (o IPConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

type IPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponsePtrOutput) ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput {
	return o
}

func (o IPConfigurationResponsePtrOutput) ToIPConfigurationResponsePtrOutputWithContext(ctx context.Context) IPConfigurationResponsePtrOutput {
	return o
}

func (o IPConfigurationResponsePtrOutput) Elem() IPConfigurationResponseOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) IPConfigurationResponse { return *v }).(IPConfigurationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o IPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
func (o IPConfigurationResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o IPConfigurationResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference of the public IP resource.
func (o IPConfigurationResponsePtrOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// The reference of the subnet resource.
func (o IPConfigurationResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

type IPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponseArrayOutput) ToIPConfigurationResponseArrayOutput() IPConfigurationResponseArrayOutput {
	return o
}

func (o IPConfigurationResponseArrayOutput) ToIPConfigurationResponseArrayOutputWithContext(ctx context.Context) IPConfigurationResponseArrayOutput {
	return o
}

func (o IPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) IPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationResponse {
		return vs[0].([]IPConfigurationResponse)[vs[1].(int)]
	}).(IPConfigurationResponseOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPool struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort int `pulumi:"backendPort"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd int `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart int `pulumi:"frontendPortRangeStart"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'.
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// InboundNatPoolInput is an input type that accepts InboundNatPoolArgs and InboundNatPoolOutput values.
// You can construct a concrete instance of `InboundNatPoolInput` via:
//
//          InboundNatPoolArgs{...}
type InboundNatPoolInput interface {
	pulumi.Input

	ToInboundNatPoolOutput() InboundNatPoolOutput
	ToInboundNatPoolOutputWithContext(context.Context) InboundNatPoolOutput
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolArgs struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort pulumi.IntInput `pulumi:"backendPort"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd pulumi.IntInput `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart pulumi.IntInput `pulumi:"frontendPortRangeStart"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (InboundNatPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPool)(nil)).Elem()
}

func (i InboundNatPoolArgs) ToInboundNatPoolOutput() InboundNatPoolOutput {
	return i.ToInboundNatPoolOutputWithContext(context.Background())
}

func (i InboundNatPoolArgs) ToInboundNatPoolOutputWithContext(ctx context.Context) InboundNatPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolOutput)
}

// InboundNatPoolArrayInput is an input type that accepts InboundNatPoolArray and InboundNatPoolArrayOutput values.
// You can construct a concrete instance of `InboundNatPoolArrayInput` via:
//
//          InboundNatPoolArray{ InboundNatPoolArgs{...} }
type InboundNatPoolArrayInput interface {
	pulumi.Input

	ToInboundNatPoolArrayOutput() InboundNatPoolArrayOutput
	ToInboundNatPoolArrayOutputWithContext(context.Context) InboundNatPoolArrayOutput
}

type InboundNatPoolArray []InboundNatPoolInput

func (InboundNatPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPool)(nil)).Elem()
}

func (i InboundNatPoolArray) ToInboundNatPoolArrayOutput() InboundNatPoolArrayOutput {
	return i.ToInboundNatPoolArrayOutputWithContext(context.Background())
}

func (i InboundNatPoolArray) ToInboundNatPoolArrayOutputWithContext(ctx context.Context) InboundNatPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolArrayOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolOutput struct{ *pulumi.OutputState }

func (InboundNatPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPool)(nil)).Elem()
}

func (o InboundNatPoolOutput) ToInboundNatPoolOutput() InboundNatPoolOutput {
	return o
}

func (o InboundNatPoolOutput) ToInboundNatPoolOutputWithContext(ctx context.Context) InboundNatPoolOutput {
	return o
}

// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
func (o InboundNatPoolOutput) BackendPort() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPool) int { return v.BackendPort }).(pulumi.IntOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatPoolOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatPoolOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v InboundNatPool) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
func (o InboundNatPoolOutput) FrontendPortRangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPool) int { return v.FrontendPortRangeEnd }).(pulumi.IntOutput)
}

// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
func (o InboundNatPoolOutput) FrontendPortRangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPool) int { return v.FrontendPortRangeStart }).(pulumi.IntOutput)
}

// Resource Identifier.
func (o InboundNatPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o InboundNatPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'.
func (o InboundNatPoolOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatPool) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InboundNatPoolOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type InboundNatPoolArrayOutput struct{ *pulumi.OutputState }

func (InboundNatPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPool)(nil)).Elem()
}

func (o InboundNatPoolArrayOutput) ToInboundNatPoolArrayOutput() InboundNatPoolArrayOutput {
	return o
}

func (o InboundNatPoolArrayOutput) ToInboundNatPoolArrayOutputWithContext(ctx context.Context) InboundNatPoolArrayOutput {
	return o
}

func (o InboundNatPoolArrayOutput) Index(i pulumi.IntInput) InboundNatPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatPool {
		return vs[0].([]InboundNatPool)[vs[1].(int)]
	}).(InboundNatPoolOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolInvokeResponse struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort int `pulumi:"backendPort"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceInvokeResponse `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd int `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart int `pulumi:"frontendPortRangeStart"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'.
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// InboundNatPoolInvokeResponseInput is an input type that accepts InboundNatPoolInvokeResponseArgs and InboundNatPoolInvokeResponseOutput values.
// You can construct a concrete instance of `InboundNatPoolInvokeResponseInput` via:
//
//          InboundNatPoolInvokeResponseArgs{...}
type InboundNatPoolInvokeResponseInput interface {
	pulumi.Input

	ToInboundNatPoolInvokeResponseOutput() InboundNatPoolInvokeResponseOutput
	ToInboundNatPoolInvokeResponseOutputWithContext(context.Context) InboundNatPoolInvokeResponseOutput
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolInvokeResponseArgs struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort pulumi.IntInput `pulumi:"backendPort"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourceInvokeResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd pulumi.IntInput `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart pulumi.IntInput `pulumi:"frontendPortRangeStart"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (InboundNatPoolInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPoolInvokeResponse)(nil)).Elem()
}

func (i InboundNatPoolInvokeResponseArgs) ToInboundNatPoolInvokeResponseOutput() InboundNatPoolInvokeResponseOutput {
	return i.ToInboundNatPoolInvokeResponseOutputWithContext(context.Background())
}

func (i InboundNatPoolInvokeResponseArgs) ToInboundNatPoolInvokeResponseOutputWithContext(ctx context.Context) InboundNatPoolInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolInvokeResponseOutput)
}

// InboundNatPoolInvokeResponseArrayInput is an input type that accepts InboundNatPoolInvokeResponseArray and InboundNatPoolInvokeResponseArrayOutput values.
// You can construct a concrete instance of `InboundNatPoolInvokeResponseArrayInput` via:
//
//          InboundNatPoolInvokeResponseArray{ InboundNatPoolInvokeResponseArgs{...} }
type InboundNatPoolInvokeResponseArrayInput interface {
	pulumi.Input

	ToInboundNatPoolInvokeResponseArrayOutput() InboundNatPoolInvokeResponseArrayOutput
	ToInboundNatPoolInvokeResponseArrayOutputWithContext(context.Context) InboundNatPoolInvokeResponseArrayOutput
}

type InboundNatPoolInvokeResponseArray []InboundNatPoolInvokeResponseInput

func (InboundNatPoolInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPoolInvokeResponse)(nil)).Elem()
}

func (i InboundNatPoolInvokeResponseArray) ToInboundNatPoolInvokeResponseArrayOutput() InboundNatPoolInvokeResponseArrayOutput {
	return i.ToInboundNatPoolInvokeResponseArrayOutputWithContext(context.Background())
}

func (i InboundNatPoolInvokeResponseArray) ToInboundNatPoolInvokeResponseArrayOutputWithContext(ctx context.Context) InboundNatPoolInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolInvokeResponseArrayOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolInvokeResponseOutput struct{ *pulumi.OutputState }

func (InboundNatPoolInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPoolInvokeResponse)(nil)).Elem()
}

func (o InboundNatPoolInvokeResponseOutput) ToInboundNatPoolInvokeResponseOutput() InboundNatPoolInvokeResponseOutput {
	return o
}

func (o InboundNatPoolInvokeResponseOutput) ToInboundNatPoolInvokeResponseOutputWithContext(ctx context.Context) InboundNatPoolInvokeResponseOutput {
	return o
}

// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
func (o InboundNatPoolInvokeResponseOutput) BackendPort() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolInvokeResponse) int { return v.BackendPort }).(pulumi.IntOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatPoolInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatPoolInvokeResponseOutput) FrontendIPConfiguration() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v InboundNatPoolInvokeResponse) *SubResourceInvokeResponse { return v.FrontendIPConfiguration }).(SubResourceInvokeResponsePtrOutput)
}

// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
func (o InboundNatPoolInvokeResponseOutput) FrontendPortRangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolInvokeResponse) int { return v.FrontendPortRangeEnd }).(pulumi.IntOutput)
}

// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
func (o InboundNatPoolInvokeResponseOutput) FrontendPortRangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolInvokeResponse) int { return v.FrontendPortRangeStart }).(pulumi.IntOutput)
}

// Resource Identifier.
func (o InboundNatPoolInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o InboundNatPoolInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'.
func (o InboundNatPoolInvokeResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatPoolInvokeResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InboundNatPoolInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type InboundNatPoolInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (InboundNatPoolInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPoolInvokeResponse)(nil)).Elem()
}

func (o InboundNatPoolInvokeResponseArrayOutput) ToInboundNatPoolInvokeResponseArrayOutput() InboundNatPoolInvokeResponseArrayOutput {
	return o
}

func (o InboundNatPoolInvokeResponseArrayOutput) ToInboundNatPoolInvokeResponseArrayOutputWithContext(ctx context.Context) InboundNatPoolInvokeResponseArrayOutput {
	return o
}

func (o InboundNatPoolInvokeResponseArrayOutput) Index(i pulumi.IntInput) InboundNatPoolInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatPoolInvokeResponse {
		return vs[0].([]InboundNatPoolInvokeResponse)[vs[1].(int)]
	}).(InboundNatPoolInvokeResponseOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolResponse struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort int `pulumi:"backendPort"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd int `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart int `pulumi:"frontendPortRangeStart"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'.
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// InboundNatPoolResponseInput is an input type that accepts InboundNatPoolResponseArgs and InboundNatPoolResponseOutput values.
// You can construct a concrete instance of `InboundNatPoolResponseInput` via:
//
//          InboundNatPoolResponseArgs{...}
type InboundNatPoolResponseInput interface {
	pulumi.Input

	ToInboundNatPoolResponseOutput() InboundNatPoolResponseOutput
	ToInboundNatPoolResponseOutputWithContext(context.Context) InboundNatPoolResponseOutput
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolResponseArgs struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort pulumi.IntInput `pulumi:"backendPort"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourceResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd pulumi.IntInput `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart pulumi.IntInput `pulumi:"frontendPortRangeStart"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (InboundNatPoolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPoolResponse)(nil)).Elem()
}

func (i InboundNatPoolResponseArgs) ToInboundNatPoolResponseOutput() InboundNatPoolResponseOutput {
	return i.ToInboundNatPoolResponseOutputWithContext(context.Background())
}

func (i InboundNatPoolResponseArgs) ToInboundNatPoolResponseOutputWithContext(ctx context.Context) InboundNatPoolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolResponseOutput)
}

// InboundNatPoolResponseArrayInput is an input type that accepts InboundNatPoolResponseArray and InboundNatPoolResponseArrayOutput values.
// You can construct a concrete instance of `InboundNatPoolResponseArrayInput` via:
//
//          InboundNatPoolResponseArray{ InboundNatPoolResponseArgs{...} }
type InboundNatPoolResponseArrayInput interface {
	pulumi.Input

	ToInboundNatPoolResponseArrayOutput() InboundNatPoolResponseArrayOutput
	ToInboundNatPoolResponseArrayOutputWithContext(context.Context) InboundNatPoolResponseArrayOutput
}

type InboundNatPoolResponseArray []InboundNatPoolResponseInput

func (InboundNatPoolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPoolResponse)(nil)).Elem()
}

func (i InboundNatPoolResponseArray) ToInboundNatPoolResponseArrayOutput() InboundNatPoolResponseArrayOutput {
	return i.ToInboundNatPoolResponseArrayOutputWithContext(context.Background())
}

func (i InboundNatPoolResponseArray) ToInboundNatPoolResponseArrayOutputWithContext(ctx context.Context) InboundNatPoolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolResponseArrayOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolResponseOutput struct{ *pulumi.OutputState }

func (InboundNatPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPoolResponse)(nil)).Elem()
}

func (o InboundNatPoolResponseOutput) ToInboundNatPoolResponseOutput() InboundNatPoolResponseOutput {
	return o
}

func (o InboundNatPoolResponseOutput) ToInboundNatPoolResponseOutputWithContext(ctx context.Context) InboundNatPoolResponseOutput {
	return o
}

// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
func (o InboundNatPoolResponseOutput) BackendPort() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) int { return v.BackendPort }).(pulumi.IntOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatPoolResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatPoolResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
func (o InboundNatPoolResponseOutput) FrontendPortRangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) int { return v.FrontendPortRangeEnd }).(pulumi.IntOutput)
}

// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
func (o InboundNatPoolResponseOutput) FrontendPortRangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) int { return v.FrontendPortRangeStart }).(pulumi.IntOutput)
}

// Resource Identifier.
func (o InboundNatPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o InboundNatPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'.
func (o InboundNatPoolResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InboundNatPoolResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type InboundNatPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (InboundNatPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPoolResponse)(nil)).Elem()
}

func (o InboundNatPoolResponseArrayOutput) ToInboundNatPoolResponseArrayOutput() InboundNatPoolResponseArrayOutput {
	return o
}

func (o InboundNatPoolResponseArrayOutput) ToInboundNatPoolResponseArrayOutputWithContext(ctx context.Context) InboundNatPoolResponseArrayOutput {
	return o
}

func (o InboundNatPoolResponseArrayOutput) Index(i pulumi.IntInput) InboundNatPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatPoolResponse {
		return vs[0].([]InboundNatPoolResponse)[vs[1].(int)]
	}).(InboundNatPoolResponseOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRule struct {
	// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backed IP.
	BackendIPConfiguration *NetworkInterfaceIPConfiguration `pulumi:"backendIPConfiguration"`
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort *int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort *int `pulumi:"frontendPort"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'
	Protocol *string `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// InboundNatRuleInput is an input type that accepts InboundNatRuleArgs and InboundNatRuleOutput values.
// You can construct a concrete instance of `InboundNatRuleInput` via:
//
//          InboundNatRuleArgs{...}
type InboundNatRuleInput interface {
	pulumi.Input

	ToInboundNatRuleOutput() InboundNatRuleOutput
	ToInboundNatRuleOutputWithContext(context.Context) InboundNatRuleOutput
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleArgs struct {
	// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backed IP.
	BackendIPConfiguration NetworkInterfaceIPConfigurationPtrInput `pulumi:"backendIPConfiguration"`
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort pulumi.IntPtrInput `pulumi:"frontendPort"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (InboundNatRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRule)(nil)).Elem()
}

func (i InboundNatRuleArgs) ToInboundNatRuleOutput() InboundNatRuleOutput {
	return i.ToInboundNatRuleOutputWithContext(context.Background())
}

func (i InboundNatRuleArgs) ToInboundNatRuleOutputWithContext(ctx context.Context) InboundNatRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleOutput)
}

// InboundNatRuleArrayInput is an input type that accepts InboundNatRuleArray and InboundNatRuleArrayOutput values.
// You can construct a concrete instance of `InboundNatRuleArrayInput` via:
//
//          InboundNatRuleArray{ InboundNatRuleArgs{...} }
type InboundNatRuleArrayInput interface {
	pulumi.Input

	ToInboundNatRuleArrayOutput() InboundNatRuleArrayOutput
	ToInboundNatRuleArrayOutputWithContext(context.Context) InboundNatRuleArrayOutput
}

type InboundNatRuleArray []InboundNatRuleInput

func (InboundNatRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRule)(nil)).Elem()
}

func (i InboundNatRuleArray) ToInboundNatRuleArrayOutput() InboundNatRuleArrayOutput {
	return i.ToInboundNatRuleArrayOutputWithContext(context.Background())
}

func (i InboundNatRuleArray) ToInboundNatRuleArrayOutputWithContext(ctx context.Context) InboundNatRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleArrayOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleOutput struct{ *pulumi.OutputState }

func (InboundNatRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRule)(nil)).Elem()
}

func (o InboundNatRuleOutput) ToInboundNatRuleOutput() InboundNatRuleOutput {
	return o
}

func (o InboundNatRuleOutput) ToInboundNatRuleOutputWithContext(ctx context.Context) InboundNatRuleOutput {
	return o
}

// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backed IP.
func (o InboundNatRuleOutput) BackendIPConfiguration() NetworkInterfaceIPConfigurationPtrOutput {
	return o.ApplyT(func(v InboundNatRule) *NetworkInterfaceIPConfiguration { return v.BackendIPConfiguration }).(NetworkInterfaceIPConfigurationPtrOutput)
}

// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
func (o InboundNatRuleOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRule) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatRuleOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRule) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatRuleOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRule) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatRuleOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v InboundNatRule) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
func (o InboundNatRuleOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRule) *int { return v.FrontendPort }).(pulumi.IntPtrOutput)
}

// Resource Identifier.
func (o InboundNatRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatRuleOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRule) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o InboundNatRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'
func (o InboundNatRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InboundNatRuleOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRule) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type InboundNatRuleArrayOutput struct{ *pulumi.OutputState }

func (InboundNatRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRule)(nil)).Elem()
}

func (o InboundNatRuleArrayOutput) ToInboundNatRuleArrayOutput() InboundNatRuleArrayOutput {
	return o
}

func (o InboundNatRuleArrayOutput) ToInboundNatRuleArrayOutputWithContext(ctx context.Context) InboundNatRuleArrayOutput {
	return o
}

func (o InboundNatRuleArrayOutput) Index(i pulumi.IntInput) InboundNatRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatRule {
		return vs[0].([]InboundNatRule)[vs[1].(int)]
	}).(InboundNatRuleOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleInvokeResponse struct {
	// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backed IP.
	BackendIPConfiguration *NetworkInterfaceIPConfigurationInvokeResponse `pulumi:"backendIPConfiguration"`
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort *int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceInvokeResponse `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort *int `pulumi:"frontendPort"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'
	Protocol *string `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// InboundNatRuleInvokeResponseInput is an input type that accepts InboundNatRuleInvokeResponseArgs and InboundNatRuleInvokeResponseOutput values.
// You can construct a concrete instance of `InboundNatRuleInvokeResponseInput` via:
//
//          InboundNatRuleInvokeResponseArgs{...}
type InboundNatRuleInvokeResponseInput interface {
	pulumi.Input

	ToInboundNatRuleInvokeResponseOutput() InboundNatRuleInvokeResponseOutput
	ToInboundNatRuleInvokeResponseOutputWithContext(context.Context) InboundNatRuleInvokeResponseOutput
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleInvokeResponseArgs struct {
	// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backed IP.
	BackendIPConfiguration NetworkInterfaceIPConfigurationInvokeResponsePtrInput `pulumi:"backendIPConfiguration"`
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourceInvokeResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort pulumi.IntPtrInput `pulumi:"frontendPort"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (InboundNatRuleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleInvokeResponse)(nil)).Elem()
}

func (i InboundNatRuleInvokeResponseArgs) ToInboundNatRuleInvokeResponseOutput() InboundNatRuleInvokeResponseOutput {
	return i.ToInboundNatRuleInvokeResponseOutputWithContext(context.Background())
}

func (i InboundNatRuleInvokeResponseArgs) ToInboundNatRuleInvokeResponseOutputWithContext(ctx context.Context) InboundNatRuleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleInvokeResponseOutput)
}

// InboundNatRuleInvokeResponseArrayInput is an input type that accepts InboundNatRuleInvokeResponseArray and InboundNatRuleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `InboundNatRuleInvokeResponseArrayInput` via:
//
//          InboundNatRuleInvokeResponseArray{ InboundNatRuleInvokeResponseArgs{...} }
type InboundNatRuleInvokeResponseArrayInput interface {
	pulumi.Input

	ToInboundNatRuleInvokeResponseArrayOutput() InboundNatRuleInvokeResponseArrayOutput
	ToInboundNatRuleInvokeResponseArrayOutputWithContext(context.Context) InboundNatRuleInvokeResponseArrayOutput
}

type InboundNatRuleInvokeResponseArray []InboundNatRuleInvokeResponseInput

func (InboundNatRuleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleInvokeResponse)(nil)).Elem()
}

func (i InboundNatRuleInvokeResponseArray) ToInboundNatRuleInvokeResponseArrayOutput() InboundNatRuleInvokeResponseArrayOutput {
	return i.ToInboundNatRuleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i InboundNatRuleInvokeResponseArray) ToInboundNatRuleInvokeResponseArrayOutputWithContext(ctx context.Context) InboundNatRuleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleInvokeResponseArrayOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleInvokeResponseOutput struct{ *pulumi.OutputState }

func (InboundNatRuleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleInvokeResponse)(nil)).Elem()
}

func (o InboundNatRuleInvokeResponseOutput) ToInboundNatRuleInvokeResponseOutput() InboundNatRuleInvokeResponseOutput {
	return o
}

func (o InboundNatRuleInvokeResponseOutput) ToInboundNatRuleInvokeResponseOutputWithContext(ctx context.Context) InboundNatRuleInvokeResponseOutput {
	return o
}

// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backed IP.
func (o InboundNatRuleInvokeResponseOutput) BackendIPConfiguration() NetworkInterfaceIPConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v InboundNatRuleInvokeResponse) *NetworkInterfaceIPConfigurationInvokeResponse {
		return v.BackendIPConfiguration
	}).(NetworkInterfaceIPConfigurationInvokeResponsePtrOutput)
}

// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
func (o InboundNatRuleInvokeResponseOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleInvokeResponse) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatRuleInvokeResponseOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRuleInvokeResponse) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatRuleInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatRuleInvokeResponseOutput) FrontendIPConfiguration() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v InboundNatRuleInvokeResponse) *SubResourceInvokeResponse { return v.FrontendIPConfiguration }).(SubResourceInvokeResponsePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
func (o InboundNatRuleInvokeResponseOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleInvokeResponse) *int { return v.FrontendPort }).(pulumi.IntPtrOutput)
}

// Resource Identifier.
func (o InboundNatRuleInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatRuleInvokeResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleInvokeResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o InboundNatRuleInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'
func (o InboundNatRuleInvokeResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleInvokeResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InboundNatRuleInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type InboundNatRuleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (InboundNatRuleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleInvokeResponse)(nil)).Elem()
}

func (o InboundNatRuleInvokeResponseArrayOutput) ToInboundNatRuleInvokeResponseArrayOutput() InboundNatRuleInvokeResponseArrayOutput {
	return o
}

func (o InboundNatRuleInvokeResponseArrayOutput) ToInboundNatRuleInvokeResponseArrayOutputWithContext(ctx context.Context) InboundNatRuleInvokeResponseArrayOutput {
	return o
}

func (o InboundNatRuleInvokeResponseArrayOutput) Index(i pulumi.IntInput) InboundNatRuleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatRuleInvokeResponse {
		return vs[0].([]InboundNatRuleInvokeResponse)[vs[1].(int)]
	}).(InboundNatRuleInvokeResponseOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleResponse struct {
	// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backed IP.
	BackendIPConfiguration *NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfiguration"`
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort *int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort *int `pulumi:"frontendPort"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'
	Protocol *string `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// InboundNatRuleResponseInput is an input type that accepts InboundNatRuleResponseArgs and InboundNatRuleResponseOutput values.
// You can construct a concrete instance of `InboundNatRuleResponseInput` via:
//
//          InboundNatRuleResponseArgs{...}
type InboundNatRuleResponseInput interface {
	pulumi.Input

	ToInboundNatRuleResponseOutput() InboundNatRuleResponseOutput
	ToInboundNatRuleResponseOutputWithContext(context.Context) InboundNatRuleResponseOutput
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleResponseArgs struct {
	// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backed IP.
	BackendIPConfiguration NetworkInterfaceIPConfigurationResponsePtrInput `pulumi:"backendIPConfiguration"`
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourceResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort pulumi.IntPtrInput `pulumi:"frontendPort"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (InboundNatRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleResponse)(nil)).Elem()
}

func (i InboundNatRuleResponseArgs) ToInboundNatRuleResponseOutput() InboundNatRuleResponseOutput {
	return i.ToInboundNatRuleResponseOutputWithContext(context.Background())
}

func (i InboundNatRuleResponseArgs) ToInboundNatRuleResponseOutputWithContext(ctx context.Context) InboundNatRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleResponseOutput)
}

// InboundNatRuleResponseArrayInput is an input type that accepts InboundNatRuleResponseArray and InboundNatRuleResponseArrayOutput values.
// You can construct a concrete instance of `InboundNatRuleResponseArrayInput` via:
//
//          InboundNatRuleResponseArray{ InboundNatRuleResponseArgs{...} }
type InboundNatRuleResponseArrayInput interface {
	pulumi.Input

	ToInboundNatRuleResponseArrayOutput() InboundNatRuleResponseArrayOutput
	ToInboundNatRuleResponseArrayOutputWithContext(context.Context) InboundNatRuleResponseArrayOutput
}

type InboundNatRuleResponseArray []InboundNatRuleResponseInput

func (InboundNatRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleResponse)(nil)).Elem()
}

func (i InboundNatRuleResponseArray) ToInboundNatRuleResponseArrayOutput() InboundNatRuleResponseArrayOutput {
	return i.ToInboundNatRuleResponseArrayOutputWithContext(context.Background())
}

func (i InboundNatRuleResponseArray) ToInboundNatRuleResponseArrayOutputWithContext(ctx context.Context) InboundNatRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleResponseArrayOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleResponseOutput struct{ *pulumi.OutputState }

func (InboundNatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleResponse)(nil)).Elem()
}

func (o InboundNatRuleResponseOutput) ToInboundNatRuleResponseOutput() InboundNatRuleResponseOutput {
	return o
}

func (o InboundNatRuleResponseOutput) ToInboundNatRuleResponseOutputWithContext(ctx context.Context) InboundNatRuleResponseOutput {
	return o
}

// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backed IP.
func (o InboundNatRuleResponseOutput) BackendIPConfiguration() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
func (o InboundNatRuleResponseOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatRuleResponseOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatRuleResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatRuleResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
func (o InboundNatRuleResponseOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.FrontendPort }).(pulumi.IntPtrOutput)
}

// Resource Identifier.
func (o InboundNatRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatRuleResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o InboundNatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The transport protocol for the endpoint. Possible values are: 'Udp' or 'Tcp'
func (o InboundNatRuleResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InboundNatRuleResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type InboundNatRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (InboundNatRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleResponse)(nil)).Elem()
}

func (o InboundNatRuleResponseArrayOutput) ToInboundNatRuleResponseArrayOutput() InboundNatRuleResponseArrayOutput {
	return o
}

func (o InboundNatRuleResponseArrayOutput) ToInboundNatRuleResponseArrayOutputWithContext(ctx context.Context) InboundNatRuleResponseArrayOutput {
	return o
}

func (o InboundNatRuleResponseArrayOutput) Index(i pulumi.IntInput) InboundNatRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatRuleResponse {
		return vs[0].([]InboundNatRuleResponse)[vs[1].(int)]
	}).(InboundNatRuleResponseOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRule struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool *SubResource `pulumi:"backendAddressPool"`
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort *int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.
	FrontendPort int `pulumi:"frontendPort"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
	LoadDistribution *string `pulumi:"loadDistribution"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference of the load balancer probe used by the load balancing rule.
	Probe *SubResource `pulumi:"probe"`
	// The transport protocol for the external endpoint. Possible values are 'Udp' or 'Tcp'
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// LoadBalancingRuleInput is an input type that accepts LoadBalancingRuleArgs and LoadBalancingRuleOutput values.
// You can construct a concrete instance of `LoadBalancingRuleInput` via:
//
//          LoadBalancingRuleArgs{...}
type LoadBalancingRuleInput interface {
	pulumi.Input

	ToLoadBalancingRuleOutput() LoadBalancingRuleOutput
	ToLoadBalancingRuleOutputWithContext(context.Context) LoadBalancingRuleOutput
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleArgs struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourcePtrInput `pulumi:"backendAddressPool"`
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.
	FrontendPort pulumi.IntInput `pulumi:"frontendPort"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
	LoadDistribution pulumi.StringPtrInput `pulumi:"loadDistribution"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference of the load balancer probe used by the load balancing rule.
	Probe SubResourcePtrInput `pulumi:"probe"`
	// The transport protocol for the external endpoint. Possible values are 'Udp' or 'Tcp'
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (LoadBalancingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRule)(nil)).Elem()
}

func (i LoadBalancingRuleArgs) ToLoadBalancingRuleOutput() LoadBalancingRuleOutput {
	return i.ToLoadBalancingRuleOutputWithContext(context.Background())
}

func (i LoadBalancingRuleArgs) ToLoadBalancingRuleOutputWithContext(ctx context.Context) LoadBalancingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleOutput)
}

// LoadBalancingRuleArrayInput is an input type that accepts LoadBalancingRuleArray and LoadBalancingRuleArrayOutput values.
// You can construct a concrete instance of `LoadBalancingRuleArrayInput` via:
//
//          LoadBalancingRuleArray{ LoadBalancingRuleArgs{...} }
type LoadBalancingRuleArrayInput interface {
	pulumi.Input

	ToLoadBalancingRuleArrayOutput() LoadBalancingRuleArrayOutput
	ToLoadBalancingRuleArrayOutputWithContext(context.Context) LoadBalancingRuleArrayOutput
}

type LoadBalancingRuleArray []LoadBalancingRuleInput

func (LoadBalancingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRule)(nil)).Elem()
}

func (i LoadBalancingRuleArray) ToLoadBalancingRuleArrayOutput() LoadBalancingRuleArrayOutput {
	return i.ToLoadBalancingRuleArrayOutputWithContext(context.Background())
}

func (i LoadBalancingRuleArray) ToLoadBalancingRuleArrayOutputWithContext(ctx context.Context) LoadBalancingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleArrayOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRule)(nil)).Elem()
}

func (o LoadBalancingRuleOutput) ToLoadBalancingRuleOutput() LoadBalancingRuleOutput {
	return o
}

func (o LoadBalancingRuleOutput) ToLoadBalancingRuleOutputWithContext(ctx context.Context) LoadBalancingRuleOutput {
	return o
}

// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
func (o LoadBalancingRuleOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *SubResource { return v.BackendAddressPool }).(SubResourcePtrOutput)
}

// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
func (o LoadBalancingRuleOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o LoadBalancingRuleOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LoadBalancingRuleOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// A reference to frontend IP addresses.
func (o LoadBalancingRuleOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.
func (o LoadBalancingRuleOutput) FrontendPort() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancingRule) int { return v.FrontendPort }).(pulumi.IntOutput)
}

// Resource Identifier.
func (o LoadBalancingRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRuleOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
func (o LoadBalancingRuleOutput) LoadDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *string { return v.LoadDistribution }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o LoadBalancingRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference of the load balancer probe used by the load balancing rule.
func (o LoadBalancingRuleOutput) Probe() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *SubResource { return v.Probe }).(SubResourcePtrOutput)
}

// The transport protocol for the external endpoint. Possible values are 'Udp' or 'Tcp'
func (o LoadBalancingRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o LoadBalancingRuleOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type LoadBalancingRuleArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRule)(nil)).Elem()
}

func (o LoadBalancingRuleArrayOutput) ToLoadBalancingRuleArrayOutput() LoadBalancingRuleArrayOutput {
	return o
}

func (o LoadBalancingRuleArrayOutput) ToLoadBalancingRuleArrayOutputWithContext(ctx context.Context) LoadBalancingRuleArrayOutput {
	return o
}

func (o LoadBalancingRuleArrayOutput) Index(i pulumi.IntInput) LoadBalancingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancingRule {
		return vs[0].([]LoadBalancingRule)[vs[1].(int)]
	}).(LoadBalancingRuleOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleInvokeResponse struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool *SubResourceInvokeResponse `pulumi:"backendAddressPool"`
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort *int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceInvokeResponse `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.
	FrontendPort int `pulumi:"frontendPort"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
	LoadDistribution *string `pulumi:"loadDistribution"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference of the load balancer probe used by the load balancing rule.
	Probe *SubResourceInvokeResponse `pulumi:"probe"`
	// The transport protocol for the external endpoint. Possible values are 'Udp' or 'Tcp'
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// LoadBalancingRuleInvokeResponseInput is an input type that accepts LoadBalancingRuleInvokeResponseArgs and LoadBalancingRuleInvokeResponseOutput values.
// You can construct a concrete instance of `LoadBalancingRuleInvokeResponseInput` via:
//
//          LoadBalancingRuleInvokeResponseArgs{...}
type LoadBalancingRuleInvokeResponseInput interface {
	pulumi.Input

	ToLoadBalancingRuleInvokeResponseOutput() LoadBalancingRuleInvokeResponseOutput
	ToLoadBalancingRuleInvokeResponseOutputWithContext(context.Context) LoadBalancingRuleInvokeResponseOutput
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleInvokeResponseArgs struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceInvokeResponsePtrInput `pulumi:"backendAddressPool"`
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourceInvokeResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.
	FrontendPort pulumi.IntInput `pulumi:"frontendPort"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
	LoadDistribution pulumi.StringPtrInput `pulumi:"loadDistribution"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference of the load balancer probe used by the load balancing rule.
	Probe SubResourceInvokeResponsePtrInput `pulumi:"probe"`
	// The transport protocol for the external endpoint. Possible values are 'Udp' or 'Tcp'
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (LoadBalancingRuleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRuleInvokeResponse)(nil)).Elem()
}

func (i LoadBalancingRuleInvokeResponseArgs) ToLoadBalancingRuleInvokeResponseOutput() LoadBalancingRuleInvokeResponseOutput {
	return i.ToLoadBalancingRuleInvokeResponseOutputWithContext(context.Background())
}

func (i LoadBalancingRuleInvokeResponseArgs) ToLoadBalancingRuleInvokeResponseOutputWithContext(ctx context.Context) LoadBalancingRuleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleInvokeResponseOutput)
}

// LoadBalancingRuleInvokeResponseArrayInput is an input type that accepts LoadBalancingRuleInvokeResponseArray and LoadBalancingRuleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `LoadBalancingRuleInvokeResponseArrayInput` via:
//
//          LoadBalancingRuleInvokeResponseArray{ LoadBalancingRuleInvokeResponseArgs{...} }
type LoadBalancingRuleInvokeResponseArrayInput interface {
	pulumi.Input

	ToLoadBalancingRuleInvokeResponseArrayOutput() LoadBalancingRuleInvokeResponseArrayOutput
	ToLoadBalancingRuleInvokeResponseArrayOutputWithContext(context.Context) LoadBalancingRuleInvokeResponseArrayOutput
}

type LoadBalancingRuleInvokeResponseArray []LoadBalancingRuleInvokeResponseInput

func (LoadBalancingRuleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRuleInvokeResponse)(nil)).Elem()
}

func (i LoadBalancingRuleInvokeResponseArray) ToLoadBalancingRuleInvokeResponseArrayOutput() LoadBalancingRuleInvokeResponseArrayOutput {
	return i.ToLoadBalancingRuleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i LoadBalancingRuleInvokeResponseArray) ToLoadBalancingRuleInvokeResponseArrayOutputWithContext(ctx context.Context) LoadBalancingRuleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleInvokeResponseArrayOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleInvokeResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRuleInvokeResponse)(nil)).Elem()
}

func (o LoadBalancingRuleInvokeResponseOutput) ToLoadBalancingRuleInvokeResponseOutput() LoadBalancingRuleInvokeResponseOutput {
	return o
}

func (o LoadBalancingRuleInvokeResponseOutput) ToLoadBalancingRuleInvokeResponseOutputWithContext(ctx context.Context) LoadBalancingRuleInvokeResponseOutput {
	return o
}

// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
func (o LoadBalancingRuleInvokeResponseOutput) BackendAddressPool() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleInvokeResponse) *SubResourceInvokeResponse { return v.BackendAddressPool }).(SubResourceInvokeResponsePtrOutput)
}

// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
func (o LoadBalancingRuleInvokeResponseOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleInvokeResponse) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o LoadBalancingRuleInvokeResponseOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleInvokeResponse) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LoadBalancingRuleInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// A reference to frontend IP addresses.
func (o LoadBalancingRuleInvokeResponseOutput) FrontendIPConfiguration() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleInvokeResponse) *SubResourceInvokeResponse { return v.FrontendIPConfiguration }).(SubResourceInvokeResponsePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.
func (o LoadBalancingRuleInvokeResponseOutput) FrontendPort() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancingRuleInvokeResponse) int { return v.FrontendPort }).(pulumi.IntOutput)
}

// Resource Identifier.
func (o LoadBalancingRuleInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRuleInvokeResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleInvokeResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
func (o LoadBalancingRuleInvokeResponseOutput) LoadDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleInvokeResponse) *string { return v.LoadDistribution }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o LoadBalancingRuleInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference of the load balancer probe used by the load balancing rule.
func (o LoadBalancingRuleInvokeResponseOutput) Probe() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleInvokeResponse) *SubResourceInvokeResponse { return v.Probe }).(SubResourceInvokeResponsePtrOutput)
}

// The transport protocol for the external endpoint. Possible values are 'Udp' or 'Tcp'
func (o LoadBalancingRuleInvokeResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingRuleInvokeResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o LoadBalancingRuleInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type LoadBalancingRuleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRuleInvokeResponse)(nil)).Elem()
}

func (o LoadBalancingRuleInvokeResponseArrayOutput) ToLoadBalancingRuleInvokeResponseArrayOutput() LoadBalancingRuleInvokeResponseArrayOutput {
	return o
}

func (o LoadBalancingRuleInvokeResponseArrayOutput) ToLoadBalancingRuleInvokeResponseArrayOutputWithContext(ctx context.Context) LoadBalancingRuleInvokeResponseArrayOutput {
	return o
}

func (o LoadBalancingRuleInvokeResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancingRuleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancingRuleInvokeResponse {
		return vs[0].([]LoadBalancingRuleInvokeResponse)[vs[1].(int)]
	}).(LoadBalancingRuleInvokeResponseOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleResponse struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool *SubResourceResponse `pulumi:"backendAddressPool"`
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort *int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.
	FrontendPort int `pulumi:"frontendPort"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
	LoadDistribution *string `pulumi:"loadDistribution"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference of the load balancer probe used by the load balancing rule.
	Probe *SubResourceResponse `pulumi:"probe"`
	// The transport protocol for the external endpoint. Possible values are 'Udp' or 'Tcp'
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// LoadBalancingRuleResponseInput is an input type that accepts LoadBalancingRuleResponseArgs and LoadBalancingRuleResponseOutput values.
// You can construct a concrete instance of `LoadBalancingRuleResponseInput` via:
//
//          LoadBalancingRuleResponseArgs{...}
type LoadBalancingRuleResponseInput interface {
	pulumi.Input

	ToLoadBalancingRuleResponseOutput() LoadBalancingRuleResponseOutput
	ToLoadBalancingRuleResponseOutputWithContext(context.Context) LoadBalancingRuleResponseOutput
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleResponseArgs struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceResponsePtrInput `pulumi:"backendAddressPool"`
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourceResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.
	FrontendPort pulumi.IntInput `pulumi:"frontendPort"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
	LoadDistribution pulumi.StringPtrInput `pulumi:"loadDistribution"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference of the load balancer probe used by the load balancing rule.
	Probe SubResourceResponsePtrInput `pulumi:"probe"`
	// The transport protocol for the external endpoint. Possible values are 'Udp' or 'Tcp'
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (LoadBalancingRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRuleResponse)(nil)).Elem()
}

func (i LoadBalancingRuleResponseArgs) ToLoadBalancingRuleResponseOutput() LoadBalancingRuleResponseOutput {
	return i.ToLoadBalancingRuleResponseOutputWithContext(context.Background())
}

func (i LoadBalancingRuleResponseArgs) ToLoadBalancingRuleResponseOutputWithContext(ctx context.Context) LoadBalancingRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleResponseOutput)
}

// LoadBalancingRuleResponseArrayInput is an input type that accepts LoadBalancingRuleResponseArray and LoadBalancingRuleResponseArrayOutput values.
// You can construct a concrete instance of `LoadBalancingRuleResponseArrayInput` via:
//
//          LoadBalancingRuleResponseArray{ LoadBalancingRuleResponseArgs{...} }
type LoadBalancingRuleResponseArrayInput interface {
	pulumi.Input

	ToLoadBalancingRuleResponseArrayOutput() LoadBalancingRuleResponseArrayOutput
	ToLoadBalancingRuleResponseArrayOutputWithContext(context.Context) LoadBalancingRuleResponseArrayOutput
}

type LoadBalancingRuleResponseArray []LoadBalancingRuleResponseInput

func (LoadBalancingRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRuleResponse)(nil)).Elem()
}

func (i LoadBalancingRuleResponseArray) ToLoadBalancingRuleResponseArrayOutput() LoadBalancingRuleResponseArrayOutput {
	return i.ToLoadBalancingRuleResponseArrayOutputWithContext(context.Background())
}

func (i LoadBalancingRuleResponseArray) ToLoadBalancingRuleResponseArrayOutputWithContext(ctx context.Context) LoadBalancingRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleResponseArrayOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRuleResponse)(nil)).Elem()
}

func (o LoadBalancingRuleResponseOutput) ToLoadBalancingRuleResponseOutput() LoadBalancingRuleResponseOutput {
	return o
}

func (o LoadBalancingRuleResponseOutput) ToLoadBalancingRuleResponseOutputWithContext(ctx context.Context) LoadBalancingRuleResponseOutput {
	return o
}

// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
func (o LoadBalancingRuleResponseOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponsePtrOutput)
}

// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
func (o LoadBalancingRuleResponseOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o LoadBalancingRuleResponseOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LoadBalancingRuleResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// A reference to frontend IP addresses.
func (o LoadBalancingRuleResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.
func (o LoadBalancingRuleResponseOutput) FrontendPort() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) int { return v.FrontendPort }).(pulumi.IntOutput)
}

// Resource Identifier.
func (o LoadBalancingRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRuleResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
func (o LoadBalancingRuleResponseOutput) LoadDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *string { return v.LoadDistribution }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o LoadBalancingRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference of the load balancer probe used by the load balancing rule.
func (o LoadBalancingRuleResponseOutput) Probe() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *SubResourceResponse { return v.Probe }).(SubResourceResponsePtrOutput)
}

// The transport protocol for the external endpoint. Possible values are 'Udp' or 'Tcp'
func (o LoadBalancingRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o LoadBalancingRuleResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type LoadBalancingRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRuleResponse)(nil)).Elem()
}

func (o LoadBalancingRuleResponseArrayOutput) ToLoadBalancingRuleResponseArrayOutput() LoadBalancingRuleResponseArrayOutput {
	return o
}

func (o LoadBalancingRuleResponseArrayOutput) ToLoadBalancingRuleResponseArrayOutputWithContext(ctx context.Context) LoadBalancingRuleResponseArrayOutput {
	return o
}

func (o LoadBalancingRuleResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancingRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancingRuleResponse {
		return vs[0].([]LoadBalancingRuleResponse)[vs[1].(int)]
	}).(LoadBalancingRuleResponseOutput)
}

// A common class for general resource information
type LocalNetworkGatewayType struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings *BgpSettings `pulumi:"bgpSettings"`
	// Gets a unique read-only string that changes whenever the resource is updated
	Etag *string `pulumi:"etag"`
	// IP address of local network gateway.
	GatewayIpAddress *string `pulumi:"gatewayIpAddress"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Local network site address space.
	LocalNetworkAddressSpace *AddressSpace `pulumi:"localNetworkAddressSpace"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Gets or sets Provisioning state of the LocalNetworkGateway resource Updating/Deleting/Failed
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the LocalNetworkGateway resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// LocalNetworkGatewayTypeInput is an input type that accepts LocalNetworkGatewayTypeArgs and LocalNetworkGatewayTypeOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayTypeInput` via:
//
//          LocalNetworkGatewayTypeArgs{...}
type LocalNetworkGatewayTypeInput interface {
	pulumi.Input

	ToLocalNetworkGatewayTypeOutput() LocalNetworkGatewayTypeOutput
	ToLocalNetworkGatewayTypeOutputWithContext(context.Context) LocalNetworkGatewayTypeOutput
}

// A common class for general resource information
type LocalNetworkGatewayTypeArgs struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings BgpSettingsPtrInput `pulumi:"bgpSettings"`
	// Gets a unique read-only string that changes whenever the resource is updated
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// IP address of local network gateway.
	GatewayIpAddress pulumi.StringPtrInput `pulumi:"gatewayIpAddress"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Local network site address space.
	LocalNetworkAddressSpace AddressSpacePtrInput `pulumi:"localNetworkAddressSpace"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Gets or sets Provisioning state of the LocalNetworkGateway resource Updating/Deleting/Failed
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the LocalNetworkGateway resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LocalNetworkGatewayTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayType)(nil)).Elem()
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypeOutput() LocalNetworkGatewayTypeOutput {
	return i.ToLocalNetworkGatewayTypeOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypeOutputWithContext(ctx context.Context) LocalNetworkGatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayTypeOutput)
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return i.ToLocalNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayTypeOutput).ToLocalNetworkGatewayTypePtrOutputWithContext(ctx)
}

// LocalNetworkGatewayTypePtrInput is an input type that accepts LocalNetworkGatewayTypeArgs, LocalNetworkGatewayTypePtr and LocalNetworkGatewayTypePtrOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayTypePtrInput` via:
//
//          LocalNetworkGatewayTypeArgs{...}
//
//  or:
//
//          nil
type LocalNetworkGatewayTypePtrInput interface {
	pulumi.Input

	ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput
	ToLocalNetworkGatewayTypePtrOutputWithContext(context.Context) LocalNetworkGatewayTypePtrOutput
}

type localNetworkGatewayTypePtrType LocalNetworkGatewayTypeArgs

func LocalNetworkGatewayTypePtr(v *LocalNetworkGatewayTypeArgs) LocalNetworkGatewayTypePtrInput {
	return (*localNetworkGatewayTypePtrType)(v)
}

func (*localNetworkGatewayTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayType)(nil)).Elem()
}

func (i *localNetworkGatewayTypePtrType) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return i.ToLocalNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i *localNetworkGatewayTypePtrType) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayTypePtrOutput)
}

// A common class for general resource information
type LocalNetworkGatewayTypeOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayType)(nil)).Elem()
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypeOutput() LocalNetworkGatewayTypeOutput {
	return o
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypeOutputWithContext(ctx context.Context) LocalNetworkGatewayTypeOutput {
	return o
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return o.ToLocalNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *LocalNetworkGatewayType {
		return &v
	}).(LocalNetworkGatewayTypePtrOutput)
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayTypeOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *BgpSettings { return v.BgpSettings }).(BgpSettingsPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated
func (o LocalNetworkGatewayTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayTypeOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.GatewayIpAddress }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o LocalNetworkGatewayTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayTypeOutput) LocalNetworkAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *AddressSpace { return v.LocalNetworkAddressSpace }).(AddressSpacePtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Gets or sets Provisioning state of the LocalNetworkGateway resource Updating/Deleting/Failed
func (o LocalNetworkGatewayTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the LocalNetworkGateway resource.
func (o LocalNetworkGatewayTypeOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o LocalNetworkGatewayTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type LocalNetworkGatewayTypePtrOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayType)(nil)).Elem()
}

func (o LocalNetworkGatewayTypePtrOutput) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return o
}

func (o LocalNetworkGatewayTypePtrOutput) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return o
}

func (o LocalNetworkGatewayTypePtrOutput) Elem() LocalNetworkGatewayTypeOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) LocalNetworkGatewayType { return *v }).(LocalNetworkGatewayTypeOutput)
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayTypePtrOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *BgpSettings {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated
func (o LocalNetworkGatewayTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayTypePtrOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.GatewayIpAddress
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o LocalNetworkGatewayTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayTypePtrOutput) LocalNetworkAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *AddressSpace {
		if v == nil {
			return nil
		}
		return v.LocalNetworkAddressSpace
	}).(AddressSpacePtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Gets or sets Provisioning state of the LocalNetworkGateway resource Updating/Deleting/Failed
func (o LocalNetworkGatewayTypePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the LocalNetworkGateway resource.
func (o LocalNetworkGatewayTypePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o LocalNetworkGatewayTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// A common class for general resource information
type LocalNetworkGatewayInvokeResponse struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings *BgpSettingsInvokeResponse `pulumi:"bgpSettings"`
	// Gets a unique read-only string that changes whenever the resource is updated
	Etag *string `pulumi:"etag"`
	// IP address of local network gateway.
	GatewayIpAddress *string `pulumi:"gatewayIpAddress"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Local network site address space.
	LocalNetworkAddressSpace *AddressSpaceInvokeResponse `pulumi:"localNetworkAddressSpace"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Gets or sets Provisioning state of the LocalNetworkGateway resource Updating/Deleting/Failed
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the LocalNetworkGateway resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// LocalNetworkGatewayInvokeResponseInput is an input type that accepts LocalNetworkGatewayInvokeResponseArgs and LocalNetworkGatewayInvokeResponseOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayInvokeResponseInput` via:
//
//          LocalNetworkGatewayInvokeResponseArgs{...}
type LocalNetworkGatewayInvokeResponseInput interface {
	pulumi.Input

	ToLocalNetworkGatewayInvokeResponseOutput() LocalNetworkGatewayInvokeResponseOutput
	ToLocalNetworkGatewayInvokeResponseOutputWithContext(context.Context) LocalNetworkGatewayInvokeResponseOutput
}

// A common class for general resource information
type LocalNetworkGatewayInvokeResponseArgs struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings BgpSettingsInvokeResponsePtrInput `pulumi:"bgpSettings"`
	// Gets a unique read-only string that changes whenever the resource is updated
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// IP address of local network gateway.
	GatewayIpAddress pulumi.StringPtrInput `pulumi:"gatewayIpAddress"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Local network site address space.
	LocalNetworkAddressSpace AddressSpaceInvokeResponsePtrInput `pulumi:"localNetworkAddressSpace"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Gets or sets Provisioning state of the LocalNetworkGateway resource Updating/Deleting/Failed
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the LocalNetworkGateway resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LocalNetworkGatewayInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayInvokeResponse)(nil)).Elem()
}

func (i LocalNetworkGatewayInvokeResponseArgs) ToLocalNetworkGatewayInvokeResponseOutput() LocalNetworkGatewayInvokeResponseOutput {
	return i.ToLocalNetworkGatewayInvokeResponseOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayInvokeResponseArgs) ToLocalNetworkGatewayInvokeResponseOutputWithContext(ctx context.Context) LocalNetworkGatewayInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayInvokeResponseOutput)
}

// A common class for general resource information
type LocalNetworkGatewayInvokeResponseOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayInvokeResponse)(nil)).Elem()
}

func (o LocalNetworkGatewayInvokeResponseOutput) ToLocalNetworkGatewayInvokeResponseOutput() LocalNetworkGatewayInvokeResponseOutput {
	return o
}

func (o LocalNetworkGatewayInvokeResponseOutput) ToLocalNetworkGatewayInvokeResponseOutputWithContext(ctx context.Context) LocalNetworkGatewayInvokeResponseOutput {
	return o
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayInvokeResponseOutput) BgpSettings() BgpSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayInvokeResponse) *BgpSettingsInvokeResponse { return v.BgpSettings }).(BgpSettingsInvokeResponsePtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated
func (o LocalNetworkGatewayInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayInvokeResponseOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayInvokeResponse) *string { return v.GatewayIpAddress }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o LocalNetworkGatewayInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayInvokeResponseOutput) LocalNetworkAddressSpace() AddressSpaceInvokeResponsePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayInvokeResponse) *AddressSpaceInvokeResponse {
		return v.LocalNetworkAddressSpace
	}).(AddressSpaceInvokeResponsePtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayInvokeResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayInvokeResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LocalNetworkGatewayInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Gets or sets Provisioning state of the LocalNetworkGateway resource Updating/Deleting/Failed
func (o LocalNetworkGatewayInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the LocalNetworkGateway resource.
func (o LocalNetworkGatewayInvokeResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayInvokeResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o LocalNetworkGatewayInvokeResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LocalNetworkGatewayInvokeResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o LocalNetworkGatewayInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A common class for general resource information
type LocalNetworkGatewayResponse struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings *BgpSettingsResponse `pulumi:"bgpSettings"`
	// Gets a unique read-only string that changes whenever the resource is updated
	Etag *string `pulumi:"etag"`
	// IP address of local network gateway.
	GatewayIpAddress *string `pulumi:"gatewayIpAddress"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Local network site address space.
	LocalNetworkAddressSpace *AddressSpaceResponse `pulumi:"localNetworkAddressSpace"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// Gets or sets Provisioning state of the LocalNetworkGateway resource Updating/Deleting/Failed
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the LocalNetworkGateway resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// LocalNetworkGatewayResponseInput is an input type that accepts LocalNetworkGatewayResponseArgs and LocalNetworkGatewayResponseOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayResponseInput` via:
//
//          LocalNetworkGatewayResponseArgs{...}
type LocalNetworkGatewayResponseInput interface {
	pulumi.Input

	ToLocalNetworkGatewayResponseOutput() LocalNetworkGatewayResponseOutput
	ToLocalNetworkGatewayResponseOutputWithContext(context.Context) LocalNetworkGatewayResponseOutput
}

// A common class for general resource information
type LocalNetworkGatewayResponseArgs struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings BgpSettingsResponsePtrInput `pulumi:"bgpSettings"`
	// Gets a unique read-only string that changes whenever the resource is updated
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// IP address of local network gateway.
	GatewayIpAddress pulumi.StringPtrInput `pulumi:"gatewayIpAddress"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Local network site address space.
	LocalNetworkAddressSpace AddressSpaceResponsePtrInput `pulumi:"localNetworkAddressSpace"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// Gets or sets Provisioning state of the LocalNetworkGateway resource Updating/Deleting/Failed
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the LocalNetworkGateway resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LocalNetworkGatewayResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayResponse)(nil)).Elem()
}

func (i LocalNetworkGatewayResponseArgs) ToLocalNetworkGatewayResponseOutput() LocalNetworkGatewayResponseOutput {
	return i.ToLocalNetworkGatewayResponseOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayResponseArgs) ToLocalNetworkGatewayResponseOutputWithContext(ctx context.Context) LocalNetworkGatewayResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayResponseOutput)
}

func (i LocalNetworkGatewayResponseArgs) ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput {
	return i.ToLocalNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayResponseArgs) ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayResponseOutput).ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx)
}

// LocalNetworkGatewayResponsePtrInput is an input type that accepts LocalNetworkGatewayResponseArgs, LocalNetworkGatewayResponsePtr and LocalNetworkGatewayResponsePtrOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayResponsePtrInput` via:
//
//          LocalNetworkGatewayResponseArgs{...}
//
//  or:
//
//          nil
type LocalNetworkGatewayResponsePtrInput interface {
	pulumi.Input

	ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput
	ToLocalNetworkGatewayResponsePtrOutputWithContext(context.Context) LocalNetworkGatewayResponsePtrOutput
}

type localNetworkGatewayResponsePtrType LocalNetworkGatewayResponseArgs

func LocalNetworkGatewayResponsePtr(v *LocalNetworkGatewayResponseArgs) LocalNetworkGatewayResponsePtrInput {
	return (*localNetworkGatewayResponsePtrType)(v)
}

func (*localNetworkGatewayResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayResponse)(nil)).Elem()
}

func (i *localNetworkGatewayResponsePtrType) ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput {
	return i.ToLocalNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (i *localNetworkGatewayResponsePtrType) ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayResponsePtrOutput)
}

// A common class for general resource information
type LocalNetworkGatewayResponseOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayResponse)(nil)).Elem()
}

func (o LocalNetworkGatewayResponseOutput) ToLocalNetworkGatewayResponseOutput() LocalNetworkGatewayResponseOutput {
	return o
}

func (o LocalNetworkGatewayResponseOutput) ToLocalNetworkGatewayResponseOutputWithContext(ctx context.Context) LocalNetworkGatewayResponseOutput {
	return o
}

func (o LocalNetworkGatewayResponseOutput) ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput {
	return o.ToLocalNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (o LocalNetworkGatewayResponseOutput) ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayResponsePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *LocalNetworkGatewayResponse {
		return &v
	}).(LocalNetworkGatewayResponsePtrOutput)
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayResponseOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *BgpSettingsResponse { return v.BgpSettings }).(BgpSettingsResponsePtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated
func (o LocalNetworkGatewayResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayResponseOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.GatewayIpAddress }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o LocalNetworkGatewayResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayResponseOutput) LocalNetworkAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *AddressSpaceResponse { return v.LocalNetworkAddressSpace }).(AddressSpaceResponsePtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LocalNetworkGatewayResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) string { return v.Name }).(pulumi.StringOutput)
}

// Gets or sets Provisioning state of the LocalNetworkGateway resource Updating/Deleting/Failed
func (o LocalNetworkGatewayResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the LocalNetworkGateway resource.
func (o LocalNetworkGatewayResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o LocalNetworkGatewayResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o LocalNetworkGatewayResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) string { return v.Type }).(pulumi.StringOutput)
}

type LocalNetworkGatewayResponsePtrOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayResponse)(nil)).Elem()
}

func (o LocalNetworkGatewayResponsePtrOutput) ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput {
	return o
}

func (o LocalNetworkGatewayResponsePtrOutput) ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayResponsePtrOutput {
	return o
}

func (o LocalNetworkGatewayResponsePtrOutput) Elem() LocalNetworkGatewayResponseOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) LocalNetworkGatewayResponse { return *v }).(LocalNetworkGatewayResponseOutput)
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayResponsePtrOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *BgpSettingsResponse {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsResponsePtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated
func (o LocalNetworkGatewayResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayResponsePtrOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.GatewayIpAddress
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o LocalNetworkGatewayResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayResponsePtrOutput) LocalNetworkAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *AddressSpaceResponse {
		if v == nil {
			return nil
		}
		return v.LocalNetworkAddressSpace
	}).(AddressSpaceResponsePtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LocalNetworkGatewayResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets or sets Provisioning state of the LocalNetworkGateway resource Updating/Deleting/Failed
func (o LocalNetworkGatewayResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the LocalNetworkGateway resource.
func (o LocalNetworkGatewayResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o LocalNetworkGatewayResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o LocalNetworkGatewayResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// A network interface in a resource group.
type NetworkInterfaceType struct {
	// The DNS settings in network interface.
	DnsSettings *NetworkInterfaceDnsSettings `pulumi:"dnsSettings"`
	// Indicates whether IP forwarding is enabled on this network interface.
	EnableIPForwarding *bool `pulumi:"enableIPForwarding"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// A list of IPConfigurations of the network interface.
	IpConfigurations []NetworkInterfaceIPConfiguration `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The MAC address of the network interface.
	MacAddress *string `pulumi:"macAddress"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupType `pulumi:"networkSecurityGroup"`
	// Gets whether this is a primary network interface on a virtual machine.
	Primary *bool `pulumi:"primary"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the network interface resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The reference of a virtual machine.
	VirtualMachine *SubResource `pulumi:"virtualMachine"`
}

// NetworkInterfaceTypeInput is an input type that accepts NetworkInterfaceTypeArgs and NetworkInterfaceTypeOutput values.
// You can construct a concrete instance of `NetworkInterfaceTypeInput` via:
//
//          NetworkInterfaceTypeArgs{...}
type NetworkInterfaceTypeInput interface {
	pulumi.Input

	ToNetworkInterfaceTypeOutput() NetworkInterfaceTypeOutput
	ToNetworkInterfaceTypeOutputWithContext(context.Context) NetworkInterfaceTypeOutput
}

// A network interface in a resource group.
type NetworkInterfaceTypeArgs struct {
	// The DNS settings in network interface.
	DnsSettings NetworkInterfaceDnsSettingsPtrInput `pulumi:"dnsSettings"`
	// Indicates whether IP forwarding is enabled on this network interface.
	EnableIPForwarding pulumi.BoolPtrInput `pulumi:"enableIPForwarding"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A list of IPConfigurations of the network interface.
	IpConfigurations NetworkInterfaceIPConfigurationArrayInput `pulumi:"ipConfigurations"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The MAC address of the network interface.
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup NetworkSecurityGroupTypePtrInput `pulumi:"networkSecurityGroup"`
	// Gets whether this is a primary network interface on a virtual machine.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the network interface resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The reference of a virtual machine.
	VirtualMachine SubResourcePtrInput `pulumi:"virtualMachine"`
}

func (NetworkInterfaceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceType)(nil)).Elem()
}

func (i NetworkInterfaceTypeArgs) ToNetworkInterfaceTypeOutput() NetworkInterfaceTypeOutput {
	return i.ToNetworkInterfaceTypeOutputWithContext(context.Background())
}

func (i NetworkInterfaceTypeArgs) ToNetworkInterfaceTypeOutputWithContext(ctx context.Context) NetworkInterfaceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTypeOutput)
}

// NetworkInterfaceTypeArrayInput is an input type that accepts NetworkInterfaceTypeArray and NetworkInterfaceTypeArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceTypeArrayInput` via:
//
//          NetworkInterfaceTypeArray{ NetworkInterfaceTypeArgs{...} }
type NetworkInterfaceTypeArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceTypeArrayOutput() NetworkInterfaceTypeArrayOutput
	ToNetworkInterfaceTypeArrayOutputWithContext(context.Context) NetworkInterfaceTypeArrayOutput
}

type NetworkInterfaceTypeArray []NetworkInterfaceTypeInput

func (NetworkInterfaceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceType)(nil)).Elem()
}

func (i NetworkInterfaceTypeArray) ToNetworkInterfaceTypeArrayOutput() NetworkInterfaceTypeArrayOutput {
	return i.ToNetworkInterfaceTypeArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceTypeArray) ToNetworkInterfaceTypeArrayOutputWithContext(ctx context.Context) NetworkInterfaceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceTypeArrayOutput)
}

// A network interface in a resource group.
type NetworkInterfaceTypeOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceType)(nil)).Elem()
}

func (o NetworkInterfaceTypeOutput) ToNetworkInterfaceTypeOutput() NetworkInterfaceTypeOutput {
	return o
}

func (o NetworkInterfaceTypeOutput) ToNetworkInterfaceTypeOutputWithContext(ctx context.Context) NetworkInterfaceTypeOutput {
	return o
}

// The DNS settings in network interface.
func (o NetworkInterfaceTypeOutput) DnsSettings() NetworkInterfaceDnsSettingsPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceType) *NetworkInterfaceDnsSettings { return v.DnsSettings }).(NetworkInterfaceDnsSettingsPtrOutput)
}

// Indicates whether IP forwarding is enabled on this network interface.
func (o NetworkInterfaceTypeOutput) EnableIPForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceType) *bool { return v.EnableIPForwarding }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o NetworkInterfaceTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A list of IPConfigurations of the network interface.
func (o NetworkInterfaceTypeOutput) IpConfigurations() NetworkInterfaceIPConfigurationArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceType) []NetworkInterfaceIPConfiguration { return v.IpConfigurations }).(NetworkInterfaceIPConfigurationArrayOutput)
}

// Resource location.
func (o NetworkInterfaceTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The MAC address of the network interface.
func (o NetworkInterfaceTypeOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceType) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o NetworkInterfaceTypeOutput) NetworkSecurityGroup() NetworkSecurityGroupTypePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceType) *NetworkSecurityGroupType { return v.NetworkSecurityGroup }).(NetworkSecurityGroupTypePtrOutput)
}

// Gets whether this is a primary network interface on a virtual machine.
func (o NetworkInterfaceTypeOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceType) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkInterfaceTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network interface resource.
func (o NetworkInterfaceTypeOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceType) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o NetworkInterfaceTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkInterfaceType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The reference of a virtual machine.
func (o NetworkInterfaceTypeOutput) VirtualMachine() SubResourcePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceType) *SubResource { return v.VirtualMachine }).(SubResourcePtrOutput)
}

type NetworkInterfaceTypeArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceType)(nil)).Elem()
}

func (o NetworkInterfaceTypeArrayOutput) ToNetworkInterfaceTypeArrayOutput() NetworkInterfaceTypeArrayOutput {
	return o
}

func (o NetworkInterfaceTypeArrayOutput) ToNetworkInterfaceTypeArrayOutputWithContext(ctx context.Context) NetworkInterfaceTypeArrayOutput {
	return o
}

func (o NetworkInterfaceTypeArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceType {
		return vs[0].([]NetworkInterfaceType)[vs[1].(int)]
	}).(NetworkInterfaceTypeOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettings struct {
	// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
	AppliedDnsServers []string `pulumi:"appliedDnsServers"`
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers []string `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel *string `pulumi:"internalDnsNameLabel"`
	// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn *string `pulumi:"internalFqdn"`
}

// NetworkInterfaceDnsSettingsInput is an input type that accepts NetworkInterfaceDnsSettingsArgs and NetworkInterfaceDnsSettingsOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsInput` via:
//
//          NetworkInterfaceDnsSettingsArgs{...}
type NetworkInterfaceDnsSettingsInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsOutput() NetworkInterfaceDnsSettingsOutput
	ToNetworkInterfaceDnsSettingsOutputWithContext(context.Context) NetworkInterfaceDnsSettingsOutput
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsArgs struct {
	// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
	AppliedDnsServers pulumi.StringArrayInput `pulumi:"appliedDnsServers"`
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel pulumi.StringPtrInput `pulumi:"internalDnsNameLabel"`
	// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn pulumi.StringPtrInput `pulumi:"internalFqdn"`
}

func (NetworkInterfaceDnsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsOutput() NetworkInterfaceDnsSettingsOutput {
	return i.ToNetworkInterfaceDnsSettingsOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsOutput)
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return i.ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsOutput).ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx)
}

// NetworkInterfaceDnsSettingsPtrInput is an input type that accepts NetworkInterfaceDnsSettingsArgs, NetworkInterfaceDnsSettingsPtr and NetworkInterfaceDnsSettingsPtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsPtrInput` via:
//
//          NetworkInterfaceDnsSettingsArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceDnsSettingsPtrInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput
	ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Context) NetworkInterfaceDnsSettingsPtrOutput
}

type networkInterfaceDnsSettingsPtrType NetworkInterfaceDnsSettingsArgs

func NetworkInterfaceDnsSettingsPtr(v *NetworkInterfaceDnsSettingsArgs) NetworkInterfaceDnsSettingsPtrInput {
	return (*networkInterfaceDnsSettingsPtrType)(v)
}

func (*networkInterfaceDnsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (i *networkInterfaceDnsSettingsPtrType) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return i.ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Background())
}

func (i *networkInterfaceDnsSettingsPtrType) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsPtrOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsOutput() NetworkInterfaceDnsSettingsOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return o.ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) *NetworkInterfaceDnsSettings {
		return &v
	}).(NetworkInterfaceDnsSettingsPtrOutput)
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) []string { return v.AppliedDnsServers }).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) *string { return v.InternalDnsNameLabel }).(pulumi.StringPtrOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsOutput) InternalFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) *string { return v.InternalFqdn }).(pulumi.StringPtrOutput)
}

type NetworkInterfaceDnsSettingsPtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsPtrOutput) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsPtrOutput) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsPtrOutput) Elem() NetworkInterfaceDnsSettingsOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) NetworkInterfaceDnsSettings { return *v }).(NetworkInterfaceDnsSettingsOutput)
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsPtrOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) []string {
		if v == nil {
			return nil
		}
		return v.AppliedDnsServers
	}).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsPtrOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.InternalDnsNameLabel
	}).(pulumi.StringPtrOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsPtrOutput) InternalFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.InternalFqdn
	}).(pulumi.StringPtrOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsInvokeResponse struct {
	// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
	AppliedDnsServers []string `pulumi:"appliedDnsServers"`
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers []string `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel *string `pulumi:"internalDnsNameLabel"`
	// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn *string `pulumi:"internalFqdn"`
}

// NetworkInterfaceDnsSettingsInvokeResponseInput is an input type that accepts NetworkInterfaceDnsSettingsInvokeResponseArgs and NetworkInterfaceDnsSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsInvokeResponseInput` via:
//
//          NetworkInterfaceDnsSettingsInvokeResponseArgs{...}
type NetworkInterfaceDnsSettingsInvokeResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsInvokeResponseOutput() NetworkInterfaceDnsSettingsInvokeResponseOutput
	ToNetworkInterfaceDnsSettingsInvokeResponseOutputWithContext(context.Context) NetworkInterfaceDnsSettingsInvokeResponseOutput
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsInvokeResponseArgs struct {
	// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
	AppliedDnsServers pulumi.StringArrayInput `pulumi:"appliedDnsServers"`
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel pulumi.StringPtrInput `pulumi:"internalDnsNameLabel"`
	// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn pulumi.StringPtrInput `pulumi:"internalFqdn"`
}

func (NetworkInterfaceDnsSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettingsInvokeResponse)(nil)).Elem()
}

func (i NetworkInterfaceDnsSettingsInvokeResponseArgs) ToNetworkInterfaceDnsSettingsInvokeResponseOutput() NetworkInterfaceDnsSettingsInvokeResponseOutput {
	return i.ToNetworkInterfaceDnsSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsInvokeResponseArgs) ToNetworkInterfaceDnsSettingsInvokeResponseOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsInvokeResponseOutput)
}

func (i NetworkInterfaceDnsSettingsInvokeResponseArgs) ToNetworkInterfaceDnsSettingsInvokeResponsePtrOutput() NetworkInterfaceDnsSettingsInvokeResponsePtrOutput {
	return i.ToNetworkInterfaceDnsSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsInvokeResponseArgs) ToNetworkInterfaceDnsSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsInvokeResponseOutput).ToNetworkInterfaceDnsSettingsInvokeResponsePtrOutputWithContext(ctx)
}

// NetworkInterfaceDnsSettingsInvokeResponsePtrInput is an input type that accepts NetworkInterfaceDnsSettingsInvokeResponseArgs, NetworkInterfaceDnsSettingsInvokeResponsePtr and NetworkInterfaceDnsSettingsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsInvokeResponsePtrInput` via:
//
//          NetworkInterfaceDnsSettingsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceDnsSettingsInvokeResponsePtrInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsInvokeResponsePtrOutput() NetworkInterfaceDnsSettingsInvokeResponsePtrOutput
	ToNetworkInterfaceDnsSettingsInvokeResponsePtrOutputWithContext(context.Context) NetworkInterfaceDnsSettingsInvokeResponsePtrOutput
}

type networkInterfaceDnsSettingsInvokeResponsePtrType NetworkInterfaceDnsSettingsInvokeResponseArgs

func NetworkInterfaceDnsSettingsInvokeResponsePtr(v *NetworkInterfaceDnsSettingsInvokeResponseArgs) NetworkInterfaceDnsSettingsInvokeResponsePtrInput {
	return (*networkInterfaceDnsSettingsInvokeResponsePtrType)(v)
}

func (*networkInterfaceDnsSettingsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettingsInvokeResponse)(nil)).Elem()
}

func (i *networkInterfaceDnsSettingsInvokeResponsePtrType) ToNetworkInterfaceDnsSettingsInvokeResponsePtrOutput() NetworkInterfaceDnsSettingsInvokeResponsePtrOutput {
	return i.ToNetworkInterfaceDnsSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *networkInterfaceDnsSettingsInvokeResponsePtrType) ToNetworkInterfaceDnsSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsInvokeResponsePtrOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettingsInvokeResponse)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsInvokeResponseOutput) ToNetworkInterfaceDnsSettingsInvokeResponseOutput() NetworkInterfaceDnsSettingsInvokeResponseOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsInvokeResponseOutput) ToNetworkInterfaceDnsSettingsInvokeResponseOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsInvokeResponseOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsInvokeResponseOutput) ToNetworkInterfaceDnsSettingsInvokeResponsePtrOutput() NetworkInterfaceDnsSettingsInvokeResponsePtrOutput {
	return o.ToNetworkInterfaceDnsSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceDnsSettingsInvokeResponseOutput) ToNetworkInterfaceDnsSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsInvokeResponse) *NetworkInterfaceDnsSettingsInvokeResponse {
		return &v
	}).(NetworkInterfaceDnsSettingsInvokeResponsePtrOutput)
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsInvokeResponseOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsInvokeResponse) []string { return v.AppliedDnsServers }).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsInvokeResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsInvokeResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsInvokeResponseOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsInvokeResponse) *string { return v.InternalDnsNameLabel }).(pulumi.StringPtrOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsInvokeResponseOutput) InternalFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsInvokeResponse) *string { return v.InternalFqdn }).(pulumi.StringPtrOutput)
}

type NetworkInterfaceDnsSettingsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettingsInvokeResponse)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsInvokeResponsePtrOutput) ToNetworkInterfaceDnsSettingsInvokeResponsePtrOutput() NetworkInterfaceDnsSettingsInvokeResponsePtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsInvokeResponsePtrOutput) ToNetworkInterfaceDnsSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsInvokeResponsePtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsInvokeResponsePtrOutput) Elem() NetworkInterfaceDnsSettingsInvokeResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsInvokeResponse) NetworkInterfaceDnsSettingsInvokeResponse {
		return *v
	}).(NetworkInterfaceDnsSettingsInvokeResponseOutput)
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsInvokeResponsePtrOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsInvokeResponse) []string {
		if v == nil {
			return nil
		}
		return v.AppliedDnsServers
	}).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsInvokeResponsePtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsInvokeResponse) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsInvokeResponsePtrOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalDnsNameLabel
	}).(pulumi.StringPtrOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsInvokeResponsePtrOutput) InternalFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalFqdn
	}).(pulumi.StringPtrOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsResponse struct {
	// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
	AppliedDnsServers []string `pulumi:"appliedDnsServers"`
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers []string `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel *string `pulumi:"internalDnsNameLabel"`
	// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn *string `pulumi:"internalFqdn"`
}

// NetworkInterfaceDnsSettingsResponseInput is an input type that accepts NetworkInterfaceDnsSettingsResponseArgs and NetworkInterfaceDnsSettingsResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsResponseInput` via:
//
//          NetworkInterfaceDnsSettingsResponseArgs{...}
type NetworkInterfaceDnsSettingsResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsResponseOutput() NetworkInterfaceDnsSettingsResponseOutput
	ToNetworkInterfaceDnsSettingsResponseOutputWithContext(context.Context) NetworkInterfaceDnsSettingsResponseOutput
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsResponseArgs struct {
	// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
	AppliedDnsServers pulumi.StringArrayInput `pulumi:"appliedDnsServers"`
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel pulumi.StringPtrInput `pulumi:"internalDnsNameLabel"`
	// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn pulumi.StringPtrInput `pulumi:"internalFqdn"`
}

func (NetworkInterfaceDnsSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (i NetworkInterfaceDnsSettingsResponseArgs) ToNetworkInterfaceDnsSettingsResponseOutput() NetworkInterfaceDnsSettingsResponseOutput {
	return i.ToNetworkInterfaceDnsSettingsResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsResponseArgs) ToNetworkInterfaceDnsSettingsResponseOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsResponseOutput)
}

func (i NetworkInterfaceDnsSettingsResponseArgs) ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return i.ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsResponseArgs) ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsResponseOutput).ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx)
}

// NetworkInterfaceDnsSettingsResponsePtrInput is an input type that accepts NetworkInterfaceDnsSettingsResponseArgs, NetworkInterfaceDnsSettingsResponsePtr and NetworkInterfaceDnsSettingsResponsePtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsResponsePtrInput` via:
//
//          NetworkInterfaceDnsSettingsResponseArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceDnsSettingsResponsePtrInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput
	ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput
}

type networkInterfaceDnsSettingsResponsePtrType NetworkInterfaceDnsSettingsResponseArgs

func NetworkInterfaceDnsSettingsResponsePtr(v *NetworkInterfaceDnsSettingsResponseArgs) NetworkInterfaceDnsSettingsResponsePtrInput {
	return (*networkInterfaceDnsSettingsResponsePtrType)(v)
}

func (*networkInterfaceDnsSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (i *networkInterfaceDnsSettingsResponsePtrType) ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return i.ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *networkInterfaceDnsSettingsResponsePtrType) ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsResponsePtrOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponseOutput() NetworkInterfaceDnsSettingsResponseOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponseOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponseOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o.ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) *NetworkInterfaceDnsSettingsResponse {
		return &v
	}).(NetworkInterfaceDnsSettingsResponsePtrOutput)
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsResponseOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) []string { return v.AppliedDnsServers }).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) *string { return v.InternalDnsNameLabel }).(pulumi.StringPtrOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) *string { return v.InternalFqdn }).(pulumi.StringPtrOutput)
}

type NetworkInterfaceDnsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) Elem() NetworkInterfaceDnsSettingsResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) NetworkInterfaceDnsSettingsResponse { return *v }).(NetworkInterfaceDnsSettingsResponseOutput)
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.AppliedDnsServers
	}).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalDnsNameLabel
	}).(pulumi.StringPtrOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalFqdn
	}).(pulumi.StringPtrOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The reference of LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools []BackendAddressPool `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules []InboundNatRule `pulumi:"loadBalancerInboundNatRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets whether this is a primary customer address on the network interface.
	Primary          *bool   `pulumi:"primary"`
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	ProvisioningState         *string `pulumi:"provisioningState"`
	// Public IP address resource.
	PublicIPAddress *PublicIPAddressType `pulumi:"publicIPAddress"`
	// Subnet in a virtual network resource.
	Subnet *SubnetType `pulumi:"subnet"`
}

// NetworkInterfaceIPConfigurationInput is an input type that accepts NetworkInterfaceIPConfigurationArgs and NetworkInterfaceIPConfigurationOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationInput` via:
//
//          NetworkInterfaceIPConfigurationArgs{...}
type NetworkInterfaceIPConfigurationInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationOutput() NetworkInterfaceIPConfigurationOutput
	ToNetworkInterfaceIPConfigurationOutputWithContext(context.Context) NetworkInterfaceIPConfigurationOutput
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The reference of LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools BackendAddressPoolArrayInput `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules InboundNatRuleArrayInput `pulumi:"loadBalancerInboundNatRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets whether this is a primary customer address on the network interface.
	Primary          pulumi.BoolPtrInput   `pulumi:"primary"`
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	ProvisioningState         pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Public IP address resource.
	PublicIPAddress PublicIPAddressTypePtrInput `pulumi:"publicIPAddress"`
	// Subnet in a virtual network resource.
	Subnet SubnetTypePtrInput `pulumi:"subnet"`
}

func (NetworkInterfaceIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationArgs) ToNetworkInterfaceIPConfigurationOutput() NetworkInterfaceIPConfigurationOutput {
	return i.ToNetworkInterfaceIPConfigurationOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationArgs) ToNetworkInterfaceIPConfigurationOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationOutput)
}

func (i NetworkInterfaceIPConfigurationArgs) ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput {
	return i.ToNetworkInterfaceIPConfigurationPtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationArgs) ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationOutput).ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx)
}

// NetworkInterfaceIPConfigurationPtrInput is an input type that accepts NetworkInterfaceIPConfigurationArgs, NetworkInterfaceIPConfigurationPtr and NetworkInterfaceIPConfigurationPtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationPtrInput` via:
//
//          NetworkInterfaceIPConfigurationArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceIPConfigurationPtrInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput
	ToNetworkInterfaceIPConfigurationPtrOutputWithContext(context.Context) NetworkInterfaceIPConfigurationPtrOutput
}

type networkInterfaceIPConfigurationPtrType NetworkInterfaceIPConfigurationArgs

func NetworkInterfaceIPConfigurationPtr(v *NetworkInterfaceIPConfigurationArgs) NetworkInterfaceIPConfigurationPtrInput {
	return (*networkInterfaceIPConfigurationPtrType)(v)
}

func (*networkInterfaceIPConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (i *networkInterfaceIPConfigurationPtrType) ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput {
	return i.ToNetworkInterfaceIPConfigurationPtrOutputWithContext(context.Background())
}

func (i *networkInterfaceIPConfigurationPtrType) ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationPtrOutput)
}

// NetworkInterfaceIPConfigurationArrayInput is an input type that accepts NetworkInterfaceIPConfigurationArray and NetworkInterfaceIPConfigurationArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationArrayInput` via:
//
//          NetworkInterfaceIPConfigurationArray{ NetworkInterfaceIPConfigurationArgs{...} }
type NetworkInterfaceIPConfigurationArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationArrayOutput() NetworkInterfaceIPConfigurationArrayOutput
	ToNetworkInterfaceIPConfigurationArrayOutputWithContext(context.Context) NetworkInterfaceIPConfigurationArrayOutput
}

type NetworkInterfaceIPConfigurationArray []NetworkInterfaceIPConfigurationInput

func (NetworkInterfaceIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationArray) ToNetworkInterfaceIPConfigurationArrayOutput() NetworkInterfaceIPConfigurationArrayOutput {
	return i.ToNetworkInterfaceIPConfigurationArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationArray) ToNetworkInterfaceIPConfigurationArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationArrayOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationOutput) ToNetworkInterfaceIPConfigurationOutput() NetworkInterfaceIPConfigurationOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationOutput) ToNetworkInterfaceIPConfigurationOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationOutput) ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput {
	return o.ToNetworkInterfaceIPConfigurationPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceIPConfigurationOutput) ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *NetworkInterfaceIPConfiguration {
		return &v
	}).(NetworkInterfaceIPConfigurationPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o NetworkInterfaceIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The reference of LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationOutput) LoadBalancerBackendAddressPools() BackendAddressPoolArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) []BackendAddressPool { return v.LoadBalancerBackendAddressPools }).(BackendAddressPoolArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationOutput) LoadBalancerInboundNatRules() InboundNatRuleArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) []InboundNatRule { return v.LoadBalancerInboundNatRules }).(InboundNatRuleArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

func (o NetworkInterfaceIPConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
func (o NetworkInterfaceIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

func (o NetworkInterfaceIPConfigurationOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Public IP address resource.
func (o NetworkInterfaceIPConfigurationOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *PublicIPAddressType { return v.PublicIPAddress }).(PublicIPAddressTypePtrOutput)
}

// Subnet in a virtual network resource.
func (o NetworkInterfaceIPConfigurationOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *SubnetType { return v.Subnet }).(SubnetTypePtrOutput)
}

type NetworkInterfaceIPConfigurationPtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationPtrOutput) ToNetworkInterfaceIPConfigurationPtrOutput() NetworkInterfaceIPConfigurationPtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPtrOutput) ToNetworkInterfaceIPConfigurationPtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationPtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationPtrOutput) Elem() NetworkInterfaceIPConfigurationOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) NetworkInterfaceIPConfiguration { return *v }).(NetworkInterfaceIPConfigurationOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationPtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o NetworkInterfaceIPConfigurationPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The reference of LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationPtrOutput) LoadBalancerBackendAddressPools() BackendAddressPoolArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) []BackendAddressPool {
		if v == nil {
			return nil
		}
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationPtrOutput) LoadBalancerInboundNatRules() InboundNatRuleArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) []InboundNatRule {
		if v == nil {
			return nil
		}
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationPtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

func (o NetworkInterfaceIPConfigurationPtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
func (o NetworkInterfaceIPConfigurationPtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

func (o NetworkInterfaceIPConfigurationPtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Public IP address resource.
func (o NetworkInterfaceIPConfigurationPtrOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *PublicIPAddressType {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressTypePtrOutput)
}

// Subnet in a virtual network resource.
func (o NetworkInterfaceIPConfigurationPtrOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfiguration) *SubnetType {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetTypePtrOutput)
}

type NetworkInterfaceIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationArrayOutput) ToNetworkInterfaceIPConfigurationArrayOutput() NetworkInterfaceIPConfigurationArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationArrayOutput) ToNetworkInterfaceIPConfigurationArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceIPConfiguration {
		return vs[0].([]NetworkInterfaceIPConfiguration)[vs[1].(int)]
	}).(NetworkInterfaceIPConfigurationOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationInvokeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The reference of LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools []BackendAddressPoolInvokeResponse `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules []InboundNatRuleInvokeResponse `pulumi:"loadBalancerInboundNatRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets whether this is a primary customer address on the network interface.
	Primary          *bool   `pulumi:"primary"`
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	ProvisioningState         *string `pulumi:"provisioningState"`
	// Public IP address resource.
	PublicIPAddress *PublicIPAddressInvokeResponse `pulumi:"publicIPAddress"`
	// Subnet in a virtual network resource.
	Subnet *SubnetInvokeResponse `pulumi:"subnet"`
}

// NetworkInterfaceIPConfigurationInvokeResponseInput is an input type that accepts NetworkInterfaceIPConfigurationInvokeResponseArgs and NetworkInterfaceIPConfigurationInvokeResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationInvokeResponseInput` via:
//
//          NetworkInterfaceIPConfigurationInvokeResponseArgs{...}
type NetworkInterfaceIPConfigurationInvokeResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationInvokeResponseOutput() NetworkInterfaceIPConfigurationInvokeResponseOutput
	ToNetworkInterfaceIPConfigurationInvokeResponseOutputWithContext(context.Context) NetworkInterfaceIPConfigurationInvokeResponseOutput
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationInvokeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The reference of LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools BackendAddressPoolInvokeResponseArrayInput `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules InboundNatRuleInvokeResponseArrayInput `pulumi:"loadBalancerInboundNatRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets whether this is a primary customer address on the network interface.
	Primary          pulumi.BoolPtrInput   `pulumi:"primary"`
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	ProvisioningState         pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Public IP address resource.
	PublicIPAddress PublicIPAddressInvokeResponsePtrInput `pulumi:"publicIPAddress"`
	// Subnet in a virtual network resource.
	Subnet SubnetInvokeResponsePtrInput `pulumi:"subnet"`
}

func (NetworkInterfaceIPConfigurationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationInvokeResponse)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationInvokeResponseArgs) ToNetworkInterfaceIPConfigurationInvokeResponseOutput() NetworkInterfaceIPConfigurationInvokeResponseOutput {
	return i.ToNetworkInterfaceIPConfigurationInvokeResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationInvokeResponseArgs) ToNetworkInterfaceIPConfigurationInvokeResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationInvokeResponseOutput)
}

func (i NetworkInterfaceIPConfigurationInvokeResponseArgs) ToNetworkInterfaceIPConfigurationInvokeResponsePtrOutput() NetworkInterfaceIPConfigurationInvokeResponsePtrOutput {
	return i.ToNetworkInterfaceIPConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationInvokeResponseArgs) ToNetworkInterfaceIPConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationInvokeResponseOutput).ToNetworkInterfaceIPConfigurationInvokeResponsePtrOutputWithContext(ctx)
}

// NetworkInterfaceIPConfigurationInvokeResponsePtrInput is an input type that accepts NetworkInterfaceIPConfigurationInvokeResponseArgs, NetworkInterfaceIPConfigurationInvokeResponsePtr and NetworkInterfaceIPConfigurationInvokeResponsePtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationInvokeResponsePtrInput` via:
//
//          NetworkInterfaceIPConfigurationInvokeResponseArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceIPConfigurationInvokeResponsePtrInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationInvokeResponsePtrOutput() NetworkInterfaceIPConfigurationInvokeResponsePtrOutput
	ToNetworkInterfaceIPConfigurationInvokeResponsePtrOutputWithContext(context.Context) NetworkInterfaceIPConfigurationInvokeResponsePtrOutput
}

type networkInterfaceIPConfigurationInvokeResponsePtrType NetworkInterfaceIPConfigurationInvokeResponseArgs

func NetworkInterfaceIPConfigurationInvokeResponsePtr(v *NetworkInterfaceIPConfigurationInvokeResponseArgs) NetworkInterfaceIPConfigurationInvokeResponsePtrInput {
	return (*networkInterfaceIPConfigurationInvokeResponsePtrType)(v)
}

func (*networkInterfaceIPConfigurationInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationInvokeResponse)(nil)).Elem()
}

func (i *networkInterfaceIPConfigurationInvokeResponsePtrType) ToNetworkInterfaceIPConfigurationInvokeResponsePtrOutput() NetworkInterfaceIPConfigurationInvokeResponsePtrOutput {
	return i.ToNetworkInterfaceIPConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *networkInterfaceIPConfigurationInvokeResponsePtrType) ToNetworkInterfaceIPConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationInvokeResponsePtrOutput)
}

// NetworkInterfaceIPConfigurationInvokeResponseArrayInput is an input type that accepts NetworkInterfaceIPConfigurationInvokeResponseArray and NetworkInterfaceIPConfigurationInvokeResponseArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationInvokeResponseArrayInput` via:
//
//          NetworkInterfaceIPConfigurationInvokeResponseArray{ NetworkInterfaceIPConfigurationInvokeResponseArgs{...} }
type NetworkInterfaceIPConfigurationInvokeResponseArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationInvokeResponseArrayOutput() NetworkInterfaceIPConfigurationInvokeResponseArrayOutput
	ToNetworkInterfaceIPConfigurationInvokeResponseArrayOutputWithContext(context.Context) NetworkInterfaceIPConfigurationInvokeResponseArrayOutput
}

type NetworkInterfaceIPConfigurationInvokeResponseArray []NetworkInterfaceIPConfigurationInvokeResponseInput

func (NetworkInterfaceIPConfigurationInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfigurationInvokeResponse)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationInvokeResponseArray) ToNetworkInterfaceIPConfigurationInvokeResponseArrayOutput() NetworkInterfaceIPConfigurationInvokeResponseArrayOutput {
	return i.ToNetworkInterfaceIPConfigurationInvokeResponseArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationInvokeResponseArray) ToNetworkInterfaceIPConfigurationInvokeResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationInvokeResponseArrayOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationInvokeResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationInvokeResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationInvokeResponseOutput) ToNetworkInterfaceIPConfigurationInvokeResponseOutput() NetworkInterfaceIPConfigurationInvokeResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationInvokeResponseOutput) ToNetworkInterfaceIPConfigurationInvokeResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationInvokeResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationInvokeResponseOutput) ToNetworkInterfaceIPConfigurationInvokeResponsePtrOutput() NetworkInterfaceIPConfigurationInvokeResponsePtrOutput {
	return o.ToNetworkInterfaceIPConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceIPConfigurationInvokeResponseOutput) ToNetworkInterfaceIPConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationInvokeResponse) *NetworkInterfaceIPConfigurationInvokeResponse {
		return &v
	}).(NetworkInterfaceIPConfigurationInvokeResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o NetworkInterfaceIPConfigurationInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The reference of LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationInvokeResponseOutput) LoadBalancerBackendAddressPools() BackendAddressPoolInvokeResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationInvokeResponse) []BackendAddressPoolInvokeResponse {
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolInvokeResponseArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationInvokeResponseOutput) LoadBalancerInboundNatRules() InboundNatRuleInvokeResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationInvokeResponse) []InboundNatRuleInvokeResponse {
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleInvokeResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationInvokeResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationInvokeResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

func (o NetworkInterfaceIPConfigurationInvokeResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationInvokeResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
func (o NetworkInterfaceIPConfigurationInvokeResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationInvokeResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

func (o NetworkInterfaceIPConfigurationInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Public IP address resource.
func (o NetworkInterfaceIPConfigurationInvokeResponseOutput) PublicIPAddress() PublicIPAddressInvokeResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationInvokeResponse) *PublicIPAddressInvokeResponse {
		return v.PublicIPAddress
	}).(PublicIPAddressInvokeResponsePtrOutput)
}

// Subnet in a virtual network resource.
func (o NetworkInterfaceIPConfigurationInvokeResponseOutput) Subnet() SubnetInvokeResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationInvokeResponse) *SubnetInvokeResponse { return v.Subnet }).(SubnetInvokeResponsePtrOutput)
}

type NetworkInterfaceIPConfigurationInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationInvokeResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationInvokeResponsePtrOutput) ToNetworkInterfaceIPConfigurationInvokeResponsePtrOutput() NetworkInterfaceIPConfigurationInvokeResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationInvokeResponsePtrOutput) ToNetworkInterfaceIPConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationInvokeResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationInvokeResponsePtrOutput) Elem() NetworkInterfaceIPConfigurationInvokeResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationInvokeResponse) NetworkInterfaceIPConfigurationInvokeResponse {
		return *v
	}).(NetworkInterfaceIPConfigurationInvokeResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationInvokeResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o NetworkInterfaceIPConfigurationInvokeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The reference of LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationInvokeResponsePtrOutput) LoadBalancerBackendAddressPools() BackendAddressPoolInvokeResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationInvokeResponse) []BackendAddressPoolInvokeResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolInvokeResponseArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationInvokeResponsePtrOutput) LoadBalancerInboundNatRules() InboundNatRuleInvokeResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationInvokeResponse) []InboundNatRuleInvokeResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleInvokeResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationInvokeResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationInvokeResponsePtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationInvokeResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

func (o NetworkInterfaceIPConfigurationInvokeResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
func (o NetworkInterfaceIPConfigurationInvokeResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

func (o NetworkInterfaceIPConfigurationInvokeResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Public IP address resource.
func (o NetworkInterfaceIPConfigurationInvokeResponsePtrOutput) PublicIPAddress() PublicIPAddressInvokeResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationInvokeResponse) *PublicIPAddressInvokeResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressInvokeResponsePtrOutput)
}

// Subnet in a virtual network resource.
func (o NetworkInterfaceIPConfigurationInvokeResponsePtrOutput) Subnet() SubnetInvokeResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationInvokeResponse) *SubnetInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetInvokeResponsePtrOutput)
}

type NetworkInterfaceIPConfigurationInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfigurationInvokeResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationInvokeResponseArrayOutput) ToNetworkInterfaceIPConfigurationInvokeResponseArrayOutput() NetworkInterfaceIPConfigurationInvokeResponseArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationInvokeResponseArrayOutput) ToNetworkInterfaceIPConfigurationInvokeResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationInvokeResponseArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationInvokeResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceIPConfigurationInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceIPConfigurationInvokeResponse {
		return vs[0].([]NetworkInterfaceIPConfigurationInvokeResponse)[vs[1].(int)]
	}).(NetworkInterfaceIPConfigurationInvokeResponseOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The reference of LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools []BackendAddressPoolResponse `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules []InboundNatRuleResponse `pulumi:"loadBalancerInboundNatRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets whether this is a primary customer address on the network interface.
	Primary          *bool   `pulumi:"primary"`
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	ProvisioningState         *string `pulumi:"provisioningState"`
	// Public IP address resource.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// Subnet in a virtual network resource.
	Subnet *SubnetResponse `pulumi:"subnet"`
}

// NetworkInterfaceIPConfigurationResponseInput is an input type that accepts NetworkInterfaceIPConfigurationResponseArgs and NetworkInterfaceIPConfigurationResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationResponseInput` via:
//
//          NetworkInterfaceIPConfigurationResponseArgs{...}
type NetworkInterfaceIPConfigurationResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationResponseOutput() NetworkInterfaceIPConfigurationResponseOutput
	ToNetworkInterfaceIPConfigurationResponseOutputWithContext(context.Context) NetworkInterfaceIPConfigurationResponseOutput
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The reference of LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools BackendAddressPoolResponseArrayInput `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules InboundNatRuleResponseArrayInput `pulumi:"loadBalancerInboundNatRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets whether this is a primary customer address on the network interface.
	Primary          pulumi.BoolPtrInput   `pulumi:"primary"`
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	ProvisioningState         pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Public IP address resource.
	PublicIPAddress PublicIPAddressResponsePtrInput `pulumi:"publicIPAddress"`
	// Subnet in a virtual network resource.
	Subnet SubnetResponsePtrInput `pulumi:"subnet"`
}

func (NetworkInterfaceIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationResponseArgs) ToNetworkInterfaceIPConfigurationResponseOutput() NetworkInterfaceIPConfigurationResponseOutput {
	return i.ToNetworkInterfaceIPConfigurationResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationResponseArgs) ToNetworkInterfaceIPConfigurationResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationResponseOutput)
}

func (i NetworkInterfaceIPConfigurationResponseArgs) ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return i.ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationResponseArgs) ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationResponseOutput).ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx)
}

// NetworkInterfaceIPConfigurationResponsePtrInput is an input type that accepts NetworkInterfaceIPConfigurationResponseArgs, NetworkInterfaceIPConfigurationResponsePtr and NetworkInterfaceIPConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationResponsePtrInput` via:
//
//          NetworkInterfaceIPConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceIPConfigurationResponsePtrInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput
	ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput
}

type networkInterfaceIPConfigurationResponsePtrType NetworkInterfaceIPConfigurationResponseArgs

func NetworkInterfaceIPConfigurationResponsePtr(v *NetworkInterfaceIPConfigurationResponseArgs) NetworkInterfaceIPConfigurationResponsePtrInput {
	return (*networkInterfaceIPConfigurationResponsePtrType)(v)
}

func (*networkInterfaceIPConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (i *networkInterfaceIPConfigurationResponsePtrType) ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return i.ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *networkInterfaceIPConfigurationResponsePtrType) ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// NetworkInterfaceIPConfigurationResponseArrayInput is an input type that accepts NetworkInterfaceIPConfigurationResponseArray and NetworkInterfaceIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationResponseArrayInput` via:
//
//          NetworkInterfaceIPConfigurationResponseArray{ NetworkInterfaceIPConfigurationResponseArgs{...} }
type NetworkInterfaceIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationResponseArrayOutput() NetworkInterfaceIPConfigurationResponseArrayOutput
	ToNetworkInterfaceIPConfigurationResponseArrayOutputWithContext(context.Context) NetworkInterfaceIPConfigurationResponseArrayOutput
}

type NetworkInterfaceIPConfigurationResponseArray []NetworkInterfaceIPConfigurationResponseInput

func (NetworkInterfaceIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationResponseArray) ToNetworkInterfaceIPConfigurationResponseArrayOutput() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return i.ToNetworkInterfaceIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationResponseArray) ToNetworkInterfaceIPConfigurationResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponseOutput() NetworkInterfaceIPConfigurationResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *NetworkInterfaceIPConfigurationResponse {
		return &v
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o NetworkInterfaceIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The reference of LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) LoadBalancerBackendAddressPools() BackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []BackendAddressPoolResponse {
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolResponseArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationResponseOutput) LoadBalancerInboundNatRules() InboundNatRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []InboundNatRuleResponse {
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Public IP address resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *PublicIPAddressResponse { return v.PublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// Subnet in a virtual network resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

type NetworkInterfaceIPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Elem() NetworkInterfaceIPConfigurationResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) NetworkInterfaceIPConfigurationResponse { return *v }).(NetworkInterfaceIPConfigurationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The reference of LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) LoadBalancerBackendAddressPools() BackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []BackendAddressPoolResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolResponseArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) LoadBalancerInboundNatRules() InboundNatRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []InboundNatRuleResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Public IP address resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// Subnet in a virtual network resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

type NetworkInterfaceIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) ToNetworkInterfaceIPConfigurationResponseArrayOutput() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) ToNetworkInterfaceIPConfigurationResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceIPConfigurationResponse {
		return vs[0].([]NetworkInterfaceIPConfigurationResponse)[vs[1].(int)]
	}).(NetworkInterfaceIPConfigurationResponseOutput)
}

// A network interface in a resource group.
type NetworkInterfaceInvokeResponse struct {
	// The DNS settings in network interface.
	DnsSettings *NetworkInterfaceDnsSettingsInvokeResponse `pulumi:"dnsSettings"`
	// Indicates whether IP forwarding is enabled on this network interface.
	EnableIPForwarding *bool `pulumi:"enableIPForwarding"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// A list of IPConfigurations of the network interface.
	IpConfigurations []NetworkInterfaceIPConfigurationInvokeResponse `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The MAC address of the network interface.
	MacAddress *string `pulumi:"macAddress"`
	// Resource name.
	Name string `pulumi:"name"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupInvokeResponse `pulumi:"networkSecurityGroup"`
	// Gets whether this is a primary network interface on a virtual machine.
	Primary *bool `pulumi:"primary"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the network interface resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// The reference of a virtual machine.
	VirtualMachine *SubResourceInvokeResponse `pulumi:"virtualMachine"`
}

// NetworkInterfaceInvokeResponseInput is an input type that accepts NetworkInterfaceInvokeResponseArgs and NetworkInterfaceInvokeResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceInvokeResponseInput` via:
//
//          NetworkInterfaceInvokeResponseArgs{...}
type NetworkInterfaceInvokeResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceInvokeResponseOutput() NetworkInterfaceInvokeResponseOutput
	ToNetworkInterfaceInvokeResponseOutputWithContext(context.Context) NetworkInterfaceInvokeResponseOutput
}

// A network interface in a resource group.
type NetworkInterfaceInvokeResponseArgs struct {
	// The DNS settings in network interface.
	DnsSettings NetworkInterfaceDnsSettingsInvokeResponsePtrInput `pulumi:"dnsSettings"`
	// Indicates whether IP forwarding is enabled on this network interface.
	EnableIPForwarding pulumi.BoolPtrInput `pulumi:"enableIPForwarding"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A list of IPConfigurations of the network interface.
	IpConfigurations NetworkInterfaceIPConfigurationInvokeResponseArrayInput `pulumi:"ipConfigurations"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The MAC address of the network interface.
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup NetworkSecurityGroupInvokeResponsePtrInput `pulumi:"networkSecurityGroup"`
	// Gets whether this is a primary network interface on a virtual machine.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the network interface resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// The reference of a virtual machine.
	VirtualMachine SubResourceInvokeResponsePtrInput `pulumi:"virtualMachine"`
}

func (NetworkInterfaceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceInvokeResponse)(nil)).Elem()
}

func (i NetworkInterfaceInvokeResponseArgs) ToNetworkInterfaceInvokeResponseOutput() NetworkInterfaceInvokeResponseOutput {
	return i.ToNetworkInterfaceInvokeResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceInvokeResponseArgs) ToNetworkInterfaceInvokeResponseOutputWithContext(ctx context.Context) NetworkInterfaceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceInvokeResponseOutput)
}

// NetworkInterfaceInvokeResponseArrayInput is an input type that accepts NetworkInterfaceInvokeResponseArray and NetworkInterfaceInvokeResponseArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceInvokeResponseArrayInput` via:
//
//          NetworkInterfaceInvokeResponseArray{ NetworkInterfaceInvokeResponseArgs{...} }
type NetworkInterfaceInvokeResponseArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceInvokeResponseArrayOutput() NetworkInterfaceInvokeResponseArrayOutput
	ToNetworkInterfaceInvokeResponseArrayOutputWithContext(context.Context) NetworkInterfaceInvokeResponseArrayOutput
}

type NetworkInterfaceInvokeResponseArray []NetworkInterfaceInvokeResponseInput

func (NetworkInterfaceInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceInvokeResponse)(nil)).Elem()
}

func (i NetworkInterfaceInvokeResponseArray) ToNetworkInterfaceInvokeResponseArrayOutput() NetworkInterfaceInvokeResponseArrayOutput {
	return i.ToNetworkInterfaceInvokeResponseArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceInvokeResponseArray) ToNetworkInterfaceInvokeResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceInvokeResponseArrayOutput)
}

// A network interface in a resource group.
type NetworkInterfaceInvokeResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceInvokeResponse)(nil)).Elem()
}

func (o NetworkInterfaceInvokeResponseOutput) ToNetworkInterfaceInvokeResponseOutput() NetworkInterfaceInvokeResponseOutput {
	return o
}

func (o NetworkInterfaceInvokeResponseOutput) ToNetworkInterfaceInvokeResponseOutputWithContext(ctx context.Context) NetworkInterfaceInvokeResponseOutput {
	return o
}

// The DNS settings in network interface.
func (o NetworkInterfaceInvokeResponseOutput) DnsSettings() NetworkInterfaceDnsSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceInvokeResponse) *NetworkInterfaceDnsSettingsInvokeResponse {
		return v.DnsSettings
	}).(NetworkInterfaceDnsSettingsInvokeResponsePtrOutput)
}

// Indicates whether IP forwarding is enabled on this network interface.
func (o NetworkInterfaceInvokeResponseOutput) EnableIPForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceInvokeResponse) *bool { return v.EnableIPForwarding }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o NetworkInterfaceInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A list of IPConfigurations of the network interface.
func (o NetworkInterfaceInvokeResponseOutput) IpConfigurations() NetworkInterfaceIPConfigurationInvokeResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceInvokeResponse) []NetworkInterfaceIPConfigurationInvokeResponse {
		return v.IpConfigurations
	}).(NetworkInterfaceIPConfigurationInvokeResponseArrayOutput)
}

// Resource location.
func (o NetworkInterfaceInvokeResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceInvokeResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The MAC address of the network interface.
func (o NetworkInterfaceInvokeResponseOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceInvokeResponse) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkInterfaceInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o NetworkInterfaceInvokeResponseOutput) NetworkSecurityGroup() NetworkSecurityGroupInvokeResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceInvokeResponse) *NetworkSecurityGroupInvokeResponse {
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupInvokeResponsePtrOutput)
}

// Gets whether this is a primary network interface on a virtual machine.
func (o NetworkInterfaceInvokeResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceInvokeResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkInterfaceInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network interface resource.
func (o NetworkInterfaceInvokeResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceInvokeResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o NetworkInterfaceInvokeResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkInterfaceInvokeResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkInterfaceInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The reference of a virtual machine.
func (o NetworkInterfaceInvokeResponseOutput) VirtualMachine() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceInvokeResponse) *SubResourceInvokeResponse { return v.VirtualMachine }).(SubResourceInvokeResponsePtrOutput)
}

type NetworkInterfaceInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceInvokeResponse)(nil)).Elem()
}

func (o NetworkInterfaceInvokeResponseArrayOutput) ToNetworkInterfaceInvokeResponseArrayOutput() NetworkInterfaceInvokeResponseArrayOutput {
	return o
}

func (o NetworkInterfaceInvokeResponseArrayOutput) ToNetworkInterfaceInvokeResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceInvokeResponseArrayOutput {
	return o
}

func (o NetworkInterfaceInvokeResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceInvokeResponse {
		return vs[0].([]NetworkInterfaceInvokeResponse)[vs[1].(int)]
	}).(NetworkInterfaceInvokeResponseOutput)
}

// A network interface in a resource group.
type NetworkInterfaceResponse struct {
	// The DNS settings in network interface.
	DnsSettings *NetworkInterfaceDnsSettingsResponse `pulumi:"dnsSettings"`
	// Indicates whether IP forwarding is enabled on this network interface.
	EnableIPForwarding *bool `pulumi:"enableIPForwarding"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// A list of IPConfigurations of the network interface.
	IpConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The MAC address of the network interface.
	MacAddress *string `pulumi:"macAddress"`
	// Resource name.
	Name string `pulumi:"name"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupResponse `pulumi:"networkSecurityGroup"`
	// Gets whether this is a primary network interface on a virtual machine.
	Primary *bool `pulumi:"primary"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the network interface resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// The reference of a virtual machine.
	VirtualMachine *SubResourceResponse `pulumi:"virtualMachine"`
}

// NetworkInterfaceResponseInput is an input type that accepts NetworkInterfaceResponseArgs and NetworkInterfaceResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceResponseInput` via:
//
//          NetworkInterfaceResponseArgs{...}
type NetworkInterfaceResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput
	ToNetworkInterfaceResponseOutputWithContext(context.Context) NetworkInterfaceResponseOutput
}

// A network interface in a resource group.
type NetworkInterfaceResponseArgs struct {
	// The DNS settings in network interface.
	DnsSettings NetworkInterfaceDnsSettingsResponsePtrInput `pulumi:"dnsSettings"`
	// Indicates whether IP forwarding is enabled on this network interface.
	EnableIPForwarding pulumi.BoolPtrInput `pulumi:"enableIPForwarding"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A list of IPConfigurations of the network interface.
	IpConfigurations NetworkInterfaceIPConfigurationResponseArrayInput `pulumi:"ipConfigurations"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The MAC address of the network interface.
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup NetworkSecurityGroupResponsePtrInput `pulumi:"networkSecurityGroup"`
	// Gets whether this is a primary network interface on a virtual machine.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the network interface resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// The reference of a virtual machine.
	VirtualMachine SubResourceResponsePtrInput `pulumi:"virtualMachine"`
}

func (NetworkInterfaceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResponse)(nil)).Elem()
}

func (i NetworkInterfaceResponseArgs) ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput {
	return i.ToNetworkInterfaceResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceResponseArgs) ToNetworkInterfaceResponseOutputWithContext(ctx context.Context) NetworkInterfaceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceResponseOutput)
}

// NetworkInterfaceResponseArrayInput is an input type that accepts NetworkInterfaceResponseArray and NetworkInterfaceResponseArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceResponseArrayInput` via:
//
//          NetworkInterfaceResponseArray{ NetworkInterfaceResponseArgs{...} }
type NetworkInterfaceResponseArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceResponseArrayOutput() NetworkInterfaceResponseArrayOutput
	ToNetworkInterfaceResponseArrayOutputWithContext(context.Context) NetworkInterfaceResponseArrayOutput
}

type NetworkInterfaceResponseArray []NetworkInterfaceResponseInput

func (NetworkInterfaceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceResponse)(nil)).Elem()
}

func (i NetworkInterfaceResponseArray) ToNetworkInterfaceResponseArrayOutput() NetworkInterfaceResponseArrayOutput {
	return i.ToNetworkInterfaceResponseArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceResponseArray) ToNetworkInterfaceResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceResponseArrayOutput)
}

// A network interface in a resource group.
type NetworkInterfaceResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput {
	return o
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutputWithContext(ctx context.Context) NetworkInterfaceResponseOutput {
	return o
}

// The DNS settings in network interface.
func (o NetworkInterfaceResponseOutput) DnsSettings() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *NetworkInterfaceDnsSettingsResponse { return v.DnsSettings }).(NetworkInterfaceDnsSettingsResponsePtrOutput)
}

// Indicates whether IP forwarding is enabled on this network interface.
func (o NetworkInterfaceResponseOutput) EnableIPForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *bool { return v.EnableIPForwarding }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o NetworkInterfaceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A list of IPConfigurations of the network interface.
func (o NetworkInterfaceResponseOutput) IpConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) []NetworkInterfaceIPConfigurationResponse { return v.IpConfigurations }).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o NetworkInterfaceResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The MAC address of the network interface.
func (o NetworkInterfaceResponseOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkInterfaceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o NetworkInterfaceResponseOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *NetworkSecurityGroupResponse { return v.NetworkSecurityGroup }).(NetworkSecurityGroupResponsePtrOutput)
}

// Gets whether this is a primary network interface on a virtual machine.
func (o NetworkInterfaceResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkInterfaceResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network interface resource.
func (o NetworkInterfaceResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o NetworkInterfaceResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkInterfaceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The reference of a virtual machine.
func (o NetworkInterfaceResponseOutput) VirtualMachine() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *SubResourceResponse { return v.VirtualMachine }).(SubResourceResponsePtrOutput)
}

type NetworkInterfaceResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponseArrayOutput) ToNetworkInterfaceResponseArrayOutput() NetworkInterfaceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceResponseArrayOutput) ToNetworkInterfaceResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceResponse {
		return vs[0].([]NetworkInterfaceResponse)[vs[1].(int)]
	}).(NetworkInterfaceResponseOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupType struct {
	// The default security rules of network security group.
	DefaultSecurityRules []SecurityRuleType `pulumi:"defaultSecurityRules"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// A collection of references to network interfaces.
	NetworkInterfaces []NetworkInterfaceType `pulumi:"networkInterfaces"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules []SecurityRuleType `pulumi:"securityRules"`
	// A collection of references to subnets.
	Subnets []SubnetType `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// NetworkSecurityGroupTypeInput is an input type that accepts NetworkSecurityGroupTypeArgs and NetworkSecurityGroupTypeOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupTypeInput` via:
//
//          NetworkSecurityGroupTypeArgs{...}
type NetworkSecurityGroupTypeInput interface {
	pulumi.Input

	ToNetworkSecurityGroupTypeOutput() NetworkSecurityGroupTypeOutput
	ToNetworkSecurityGroupTypeOutputWithContext(context.Context) NetworkSecurityGroupTypeOutput
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupTypeArgs struct {
	// The default security rules of network security group.
	DefaultSecurityRules SecurityRuleTypeArrayInput `pulumi:"defaultSecurityRules"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// A collection of references to network interfaces.
	NetworkInterfaces NetworkInterfaceTypeArrayInput `pulumi:"networkInterfaces"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules SecurityRuleTypeArrayInput `pulumi:"securityRules"`
	// A collection of references to subnets.
	Subnets SubnetTypeArrayInput `pulumi:"subnets"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (NetworkSecurityGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupType)(nil)).Elem()
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypeOutput() NetworkSecurityGroupTypeOutput {
	return i.ToNetworkSecurityGroupTypeOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypeOutputWithContext(ctx context.Context) NetworkSecurityGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupTypeOutput)
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return i.ToNetworkSecurityGroupTypePtrOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupTypeOutput).ToNetworkSecurityGroupTypePtrOutputWithContext(ctx)
}

// NetworkSecurityGroupTypePtrInput is an input type that accepts NetworkSecurityGroupTypeArgs, NetworkSecurityGroupTypePtr and NetworkSecurityGroupTypePtrOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupTypePtrInput` via:
//
//          NetworkSecurityGroupTypeArgs{...}
//
//  or:
//
//          nil
type NetworkSecurityGroupTypePtrInput interface {
	pulumi.Input

	ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput
	ToNetworkSecurityGroupTypePtrOutputWithContext(context.Context) NetworkSecurityGroupTypePtrOutput
}

type networkSecurityGroupTypePtrType NetworkSecurityGroupTypeArgs

func NetworkSecurityGroupTypePtr(v *NetworkSecurityGroupTypeArgs) NetworkSecurityGroupTypePtrInput {
	return (*networkSecurityGroupTypePtrType)(v)
}

func (*networkSecurityGroupTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupType)(nil)).Elem()
}

func (i *networkSecurityGroupTypePtrType) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return i.ToNetworkSecurityGroupTypePtrOutputWithContext(context.Background())
}

func (i *networkSecurityGroupTypePtrType) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupTypePtrOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupTypeOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupType)(nil)).Elem()
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypeOutput() NetworkSecurityGroupTypeOutput {
	return o
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypeOutputWithContext(ctx context.Context) NetworkSecurityGroupTypeOutput {
	return o
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return o.ToNetworkSecurityGroupTypePtrOutputWithContext(context.Background())
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *NetworkSecurityGroupType {
		return &v
	}).(NetworkSecurityGroupTypePtrOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupTypeOutput) DefaultSecurityRules() SecurityRuleTypeArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) []SecurityRuleType { return v.DefaultSecurityRules }).(SecurityRuleTypeArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o NetworkSecurityGroupTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// A collection of references to network interfaces.
func (o NetworkSecurityGroupTypeOutput) NetworkInterfaces() NetworkInterfaceTypeArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) []NetworkInterfaceType { return v.NetworkInterfaces }).(NetworkInterfaceTypeArrayOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkSecurityGroupTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupTypeOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupTypeOutput) SecurityRules() SecurityRuleTypeArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) []SecurityRuleType { return v.SecurityRules }).(SecurityRuleTypeArrayOutput)
}

// A collection of references to subnets.
func (o NetworkSecurityGroupTypeOutput) Subnets() SubnetTypeArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) []SubnetType { return v.Subnets }).(SubnetTypeArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type NetworkSecurityGroupTypePtrOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupType)(nil)).Elem()
}

func (o NetworkSecurityGroupTypePtrOutput) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return o
}

func (o NetworkSecurityGroupTypePtrOutput) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return o
}

func (o NetworkSecurityGroupTypePtrOutput) Elem() NetworkSecurityGroupTypeOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) NetworkSecurityGroupType { return *v }).(NetworkSecurityGroupTypeOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupTypePtrOutput) DefaultSecurityRules() SecurityRuleTypeArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) []SecurityRuleType {
		if v == nil {
			return nil
		}
		return v.DefaultSecurityRules
	}).(SecurityRuleTypeArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o NetworkSecurityGroupTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// A collection of references to network interfaces.
func (o NetworkSecurityGroupTypePtrOutput) NetworkInterfaces() NetworkInterfaceTypeArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) []NetworkInterfaceType {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceTypeArrayOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkSecurityGroupTypePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupTypePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupTypePtrOutput) SecurityRules() SecurityRuleTypeArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) []SecurityRuleType {
		if v == nil {
			return nil
		}
		return v.SecurityRules
	}).(SecurityRuleTypeArrayOutput)
}

// A collection of references to subnets.
func (o NetworkSecurityGroupTypePtrOutput) Subnets() SubnetTypeArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) []SubnetType {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetTypeArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupInvokeResponse struct {
	// The default security rules of network security group.
	DefaultSecurityRules []SecurityRuleInvokeResponse `pulumi:"defaultSecurityRules"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// A collection of references to network interfaces.
	NetworkInterfaces []NetworkInterfaceInvokeResponse `pulumi:"networkInterfaces"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules []SecurityRuleInvokeResponse `pulumi:"securityRules"`
	// A collection of references to subnets.
	Subnets []SubnetInvokeResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// NetworkSecurityGroupInvokeResponseInput is an input type that accepts NetworkSecurityGroupInvokeResponseArgs and NetworkSecurityGroupInvokeResponseOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupInvokeResponseInput` via:
//
//          NetworkSecurityGroupInvokeResponseArgs{...}
type NetworkSecurityGroupInvokeResponseInput interface {
	pulumi.Input

	ToNetworkSecurityGroupInvokeResponseOutput() NetworkSecurityGroupInvokeResponseOutput
	ToNetworkSecurityGroupInvokeResponseOutputWithContext(context.Context) NetworkSecurityGroupInvokeResponseOutput
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupInvokeResponseArgs struct {
	// The default security rules of network security group.
	DefaultSecurityRules SecurityRuleInvokeResponseArrayInput `pulumi:"defaultSecurityRules"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// A collection of references to network interfaces.
	NetworkInterfaces NetworkInterfaceInvokeResponseArrayInput `pulumi:"networkInterfaces"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules SecurityRuleInvokeResponseArrayInput `pulumi:"securityRules"`
	// A collection of references to subnets.
	Subnets SubnetInvokeResponseArrayInput `pulumi:"subnets"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NetworkSecurityGroupInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupInvokeResponse)(nil)).Elem()
}

func (i NetworkSecurityGroupInvokeResponseArgs) ToNetworkSecurityGroupInvokeResponseOutput() NetworkSecurityGroupInvokeResponseOutput {
	return i.ToNetworkSecurityGroupInvokeResponseOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupInvokeResponseArgs) ToNetworkSecurityGroupInvokeResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupInvokeResponseOutput)
}

func (i NetworkSecurityGroupInvokeResponseArgs) ToNetworkSecurityGroupInvokeResponsePtrOutput() NetworkSecurityGroupInvokeResponsePtrOutput {
	return i.ToNetworkSecurityGroupInvokeResponsePtrOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupInvokeResponseArgs) ToNetworkSecurityGroupInvokeResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupInvokeResponseOutput).ToNetworkSecurityGroupInvokeResponsePtrOutputWithContext(ctx)
}

// NetworkSecurityGroupInvokeResponsePtrInput is an input type that accepts NetworkSecurityGroupInvokeResponseArgs, NetworkSecurityGroupInvokeResponsePtr and NetworkSecurityGroupInvokeResponsePtrOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupInvokeResponsePtrInput` via:
//
//          NetworkSecurityGroupInvokeResponseArgs{...}
//
//  or:
//
//          nil
type NetworkSecurityGroupInvokeResponsePtrInput interface {
	pulumi.Input

	ToNetworkSecurityGroupInvokeResponsePtrOutput() NetworkSecurityGroupInvokeResponsePtrOutput
	ToNetworkSecurityGroupInvokeResponsePtrOutputWithContext(context.Context) NetworkSecurityGroupInvokeResponsePtrOutput
}

type networkSecurityGroupInvokeResponsePtrType NetworkSecurityGroupInvokeResponseArgs

func NetworkSecurityGroupInvokeResponsePtr(v *NetworkSecurityGroupInvokeResponseArgs) NetworkSecurityGroupInvokeResponsePtrInput {
	return (*networkSecurityGroupInvokeResponsePtrType)(v)
}

func (*networkSecurityGroupInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupInvokeResponse)(nil)).Elem()
}

func (i *networkSecurityGroupInvokeResponsePtrType) ToNetworkSecurityGroupInvokeResponsePtrOutput() NetworkSecurityGroupInvokeResponsePtrOutput {
	return i.ToNetworkSecurityGroupInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *networkSecurityGroupInvokeResponsePtrType) ToNetworkSecurityGroupInvokeResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupInvokeResponsePtrOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupInvokeResponseOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupInvokeResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupInvokeResponseOutput) ToNetworkSecurityGroupInvokeResponseOutput() NetworkSecurityGroupInvokeResponseOutput {
	return o
}

func (o NetworkSecurityGroupInvokeResponseOutput) ToNetworkSecurityGroupInvokeResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupInvokeResponseOutput {
	return o
}

func (o NetworkSecurityGroupInvokeResponseOutput) ToNetworkSecurityGroupInvokeResponsePtrOutput() NetworkSecurityGroupInvokeResponsePtrOutput {
	return o.ToNetworkSecurityGroupInvokeResponsePtrOutputWithContext(context.Background())
}

func (o NetworkSecurityGroupInvokeResponseOutput) ToNetworkSecurityGroupInvokeResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupInvokeResponsePtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupInvokeResponse) *NetworkSecurityGroupInvokeResponse {
		return &v
	}).(NetworkSecurityGroupInvokeResponsePtrOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupInvokeResponseOutput) DefaultSecurityRules() SecurityRuleInvokeResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupInvokeResponse) []SecurityRuleInvokeResponse { return v.DefaultSecurityRules }).(SecurityRuleInvokeResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o NetworkSecurityGroupInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupInvokeResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupInvokeResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkSecurityGroupInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// A collection of references to network interfaces.
func (o NetworkSecurityGroupInvokeResponseOutput) NetworkInterfaces() NetworkInterfaceInvokeResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupInvokeResponse) []NetworkInterfaceInvokeResponse {
		return v.NetworkInterfaces
	}).(NetworkInterfaceInvokeResponseArrayOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkSecurityGroupInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupInvokeResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupInvokeResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupInvokeResponseOutput) SecurityRules() SecurityRuleInvokeResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupInvokeResponse) []SecurityRuleInvokeResponse { return v.SecurityRules }).(SecurityRuleInvokeResponseArrayOutput)
}

// A collection of references to subnets.
func (o NetworkSecurityGroupInvokeResponseOutput) Subnets() SubnetInvokeResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupInvokeResponse) []SubnetInvokeResponse { return v.Subnets }).(SubnetInvokeResponseArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupInvokeResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityGroupInvokeResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkSecurityGroupInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

type NetworkSecurityGroupInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupInvokeResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupInvokeResponsePtrOutput) ToNetworkSecurityGroupInvokeResponsePtrOutput() NetworkSecurityGroupInvokeResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupInvokeResponsePtrOutput) ToNetworkSecurityGroupInvokeResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupInvokeResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupInvokeResponsePtrOutput) Elem() NetworkSecurityGroupInvokeResponseOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupInvokeResponse) NetworkSecurityGroupInvokeResponse { return *v }).(NetworkSecurityGroupInvokeResponseOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupInvokeResponsePtrOutput) DefaultSecurityRules() SecurityRuleInvokeResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupInvokeResponse) []SecurityRuleInvokeResponse {
		if v == nil {
			return nil
		}
		return v.DefaultSecurityRules
	}).(SecurityRuleInvokeResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupInvokeResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o NetworkSecurityGroupInvokeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupInvokeResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkSecurityGroupInvokeResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A collection of references to network interfaces.
func (o NetworkSecurityGroupInvokeResponsePtrOutput) NetworkInterfaces() NetworkInterfaceInvokeResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupInvokeResponse) []NetworkInterfaceInvokeResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceInvokeResponseArrayOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkSecurityGroupInvokeResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupInvokeResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupInvokeResponsePtrOutput) SecurityRules() SecurityRuleInvokeResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupInvokeResponse) []SecurityRuleInvokeResponse {
		if v == nil {
			return nil
		}
		return v.SecurityRules
	}).(SecurityRuleInvokeResponseArrayOutput)
}

// A collection of references to subnets.
func (o NetworkSecurityGroupInvokeResponsePtrOutput) Subnets() SubnetInvokeResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupInvokeResponse) []SubnetInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetInvokeResponseArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupInvokeResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupInvokeResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkSecurityGroupInvokeResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupResponse struct {
	// The default security rules of network security group.
	DefaultSecurityRules []SecurityRuleResponse `pulumi:"defaultSecurityRules"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// A collection of references to network interfaces.
	NetworkInterfaces []NetworkInterfaceResponse `pulumi:"networkInterfaces"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules []SecurityRuleResponse `pulumi:"securityRules"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// NetworkSecurityGroupResponseInput is an input type that accepts NetworkSecurityGroupResponseArgs and NetworkSecurityGroupResponseOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupResponseInput` via:
//
//          NetworkSecurityGroupResponseArgs{...}
type NetworkSecurityGroupResponseInput interface {
	pulumi.Input

	ToNetworkSecurityGroupResponseOutput() NetworkSecurityGroupResponseOutput
	ToNetworkSecurityGroupResponseOutputWithContext(context.Context) NetworkSecurityGroupResponseOutput
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupResponseArgs struct {
	// The default security rules of network security group.
	DefaultSecurityRules SecurityRuleResponseArrayInput `pulumi:"defaultSecurityRules"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// A collection of references to network interfaces.
	NetworkInterfaces NetworkInterfaceResponseArrayInput `pulumi:"networkInterfaces"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules SecurityRuleResponseArrayInput `pulumi:"securityRules"`
	// A collection of references to subnets.
	Subnets SubnetResponseArrayInput `pulumi:"subnets"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NetworkSecurityGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupResponse)(nil)).Elem()
}

func (i NetworkSecurityGroupResponseArgs) ToNetworkSecurityGroupResponseOutput() NetworkSecurityGroupResponseOutput {
	return i.ToNetworkSecurityGroupResponseOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupResponseArgs) ToNetworkSecurityGroupResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupResponseOutput)
}

func (i NetworkSecurityGroupResponseArgs) ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput {
	return i.ToNetworkSecurityGroupResponsePtrOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupResponseArgs) ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupResponseOutput).ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx)
}

// NetworkSecurityGroupResponsePtrInput is an input type that accepts NetworkSecurityGroupResponseArgs, NetworkSecurityGroupResponsePtr and NetworkSecurityGroupResponsePtrOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupResponsePtrInput` via:
//
//          NetworkSecurityGroupResponseArgs{...}
//
//  or:
//
//          nil
type NetworkSecurityGroupResponsePtrInput interface {
	pulumi.Input

	ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput
	ToNetworkSecurityGroupResponsePtrOutputWithContext(context.Context) NetworkSecurityGroupResponsePtrOutput
}

type networkSecurityGroupResponsePtrType NetworkSecurityGroupResponseArgs

func NetworkSecurityGroupResponsePtr(v *NetworkSecurityGroupResponseArgs) NetworkSecurityGroupResponsePtrInput {
	return (*networkSecurityGroupResponsePtrType)(v)
}

func (*networkSecurityGroupResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupResponse)(nil)).Elem()
}

func (i *networkSecurityGroupResponsePtrType) ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput {
	return i.ToNetworkSecurityGroupResponsePtrOutputWithContext(context.Background())
}

func (i *networkSecurityGroupResponsePtrType) ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupResponsePtrOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupResponseOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponseOutput() NetworkSecurityGroupResponseOutput {
	return o
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupResponseOutput {
	return o
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput {
	return o.ToNetworkSecurityGroupResponsePtrOutputWithContext(context.Background())
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *NetworkSecurityGroupResponse {
		return &v
	}).(NetworkSecurityGroupResponsePtrOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupResponseOutput) DefaultSecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []SecurityRuleResponse { return v.DefaultSecurityRules }).(SecurityRuleResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o NetworkSecurityGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkSecurityGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// A collection of references to network interfaces.
func (o NetworkSecurityGroupResponseOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []NetworkInterfaceResponse { return v.NetworkInterfaces }).(NetworkInterfaceResponseArrayOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkSecurityGroupResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupResponseOutput) SecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []SecurityRuleResponse { return v.SecurityRules }).(SecurityRuleResponseArrayOutput)
}

// A collection of references to subnets.
func (o NetworkSecurityGroupResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkSecurityGroupResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.Type }).(pulumi.StringOutput)
}

type NetworkSecurityGroupResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupResponsePtrOutput) ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupResponsePtrOutput) ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupResponsePtrOutput) Elem() NetworkSecurityGroupResponseOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) NetworkSecurityGroupResponse { return *v }).(NetworkSecurityGroupResponseOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupResponsePtrOutput) DefaultSecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []SecurityRuleResponse {
		if v == nil {
			return nil
		}
		return v.DefaultSecurityRules
	}).(SecurityRuleResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o NetworkSecurityGroupResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkSecurityGroupResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A collection of references to network interfaces.
func (o NetworkSecurityGroupResponsePtrOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []NetworkInterfaceResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceResponseArrayOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkSecurityGroupResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupResponsePtrOutput) SecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []SecurityRuleResponse {
		if v == nil {
			return nil
		}
		return v.SecurityRules
	}).(SecurityRuleResponseArrayOutput)
}

// A collection of references to subnets.
func (o NetworkSecurityGroupResponsePtrOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkSecurityGroupResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Outbound NAT pool of the load balancer.
type OutboundNatRule struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts *int `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResource `pulumi:"backendAddressPool"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations []SubResource `pulumi:"frontendIPConfigurations"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// OutboundNatRuleInput is an input type that accepts OutboundNatRuleArgs and OutboundNatRuleOutput values.
// You can construct a concrete instance of `OutboundNatRuleInput` via:
//
//          OutboundNatRuleArgs{...}
type OutboundNatRuleInput interface {
	pulumi.Input

	ToOutboundNatRuleOutput() OutboundNatRuleOutput
	ToOutboundNatRuleOutputWithContext(context.Context) OutboundNatRuleOutput
}

// Outbound NAT pool of the load balancer.
type OutboundNatRuleArgs struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts pulumi.IntPtrInput `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceInput `pulumi:"backendAddressPool"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations SubResourceArrayInput `pulumi:"frontendIPConfigurations"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (OutboundNatRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundNatRule)(nil)).Elem()
}

func (i OutboundNatRuleArgs) ToOutboundNatRuleOutput() OutboundNatRuleOutput {
	return i.ToOutboundNatRuleOutputWithContext(context.Background())
}

func (i OutboundNatRuleArgs) ToOutboundNatRuleOutputWithContext(ctx context.Context) OutboundNatRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundNatRuleOutput)
}

// OutboundNatRuleArrayInput is an input type that accepts OutboundNatRuleArray and OutboundNatRuleArrayOutput values.
// You can construct a concrete instance of `OutboundNatRuleArrayInput` via:
//
//          OutboundNatRuleArray{ OutboundNatRuleArgs{...} }
type OutboundNatRuleArrayInput interface {
	pulumi.Input

	ToOutboundNatRuleArrayOutput() OutboundNatRuleArrayOutput
	ToOutboundNatRuleArrayOutputWithContext(context.Context) OutboundNatRuleArrayOutput
}

type OutboundNatRuleArray []OutboundNatRuleInput

func (OutboundNatRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundNatRule)(nil)).Elem()
}

func (i OutboundNatRuleArray) ToOutboundNatRuleArrayOutput() OutboundNatRuleArrayOutput {
	return i.ToOutboundNatRuleArrayOutputWithContext(context.Background())
}

func (i OutboundNatRuleArray) ToOutboundNatRuleArrayOutputWithContext(ctx context.Context) OutboundNatRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundNatRuleArrayOutput)
}

// Outbound NAT pool of the load balancer.
type OutboundNatRuleOutput struct{ *pulumi.OutputState }

func (OutboundNatRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundNatRule)(nil)).Elem()
}

func (o OutboundNatRuleOutput) ToOutboundNatRuleOutput() OutboundNatRuleOutput {
	return o
}

func (o OutboundNatRuleOutput) ToOutboundNatRuleOutputWithContext(ctx context.Context) OutboundNatRuleOutput {
	return o
}

// The number of outbound ports to be used for NAT.
func (o OutboundNatRuleOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OutboundNatRule) *int { return v.AllocatedOutboundPorts }).(pulumi.IntPtrOutput)
}

// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
func (o OutboundNatRuleOutput) BackendAddressPool() SubResourceOutput {
	return o.ApplyT(func(v OutboundNatRule) SubResource { return v.BackendAddressPool }).(SubResourceOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o OutboundNatRuleOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRule) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The Frontend IP addresses of the load balancer.
func (o OutboundNatRuleOutput) FrontendIPConfigurations() SubResourceArrayOutput {
	return o.ApplyT(func(v OutboundNatRule) []SubResource { return v.FrontendIPConfigurations }).(SubResourceArrayOutput)
}

// Resource Identifier.
func (o OutboundNatRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o OutboundNatRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o OutboundNatRuleOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRule) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type OutboundNatRuleArrayOutput struct{ *pulumi.OutputState }

func (OutboundNatRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundNatRule)(nil)).Elem()
}

func (o OutboundNatRuleArrayOutput) ToOutboundNatRuleArrayOutput() OutboundNatRuleArrayOutput {
	return o
}

func (o OutboundNatRuleArrayOutput) ToOutboundNatRuleArrayOutputWithContext(ctx context.Context) OutboundNatRuleArrayOutput {
	return o
}

func (o OutboundNatRuleArrayOutput) Index(i pulumi.IntInput) OutboundNatRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OutboundNatRule {
		return vs[0].([]OutboundNatRule)[vs[1].(int)]
	}).(OutboundNatRuleOutput)
}

// Outbound NAT pool of the load balancer.
type OutboundNatRuleInvokeResponse struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts *int `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceInvokeResponse `pulumi:"backendAddressPool"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations []SubResourceInvokeResponse `pulumi:"frontendIPConfigurations"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// OutboundNatRuleInvokeResponseInput is an input type that accepts OutboundNatRuleInvokeResponseArgs and OutboundNatRuleInvokeResponseOutput values.
// You can construct a concrete instance of `OutboundNatRuleInvokeResponseInput` via:
//
//          OutboundNatRuleInvokeResponseArgs{...}
type OutboundNatRuleInvokeResponseInput interface {
	pulumi.Input

	ToOutboundNatRuleInvokeResponseOutput() OutboundNatRuleInvokeResponseOutput
	ToOutboundNatRuleInvokeResponseOutputWithContext(context.Context) OutboundNatRuleInvokeResponseOutput
}

// Outbound NAT pool of the load balancer.
type OutboundNatRuleInvokeResponseArgs struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts pulumi.IntPtrInput `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceInvokeResponseInput `pulumi:"backendAddressPool"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations SubResourceInvokeResponseArrayInput `pulumi:"frontendIPConfigurations"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (OutboundNatRuleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundNatRuleInvokeResponse)(nil)).Elem()
}

func (i OutboundNatRuleInvokeResponseArgs) ToOutboundNatRuleInvokeResponseOutput() OutboundNatRuleInvokeResponseOutput {
	return i.ToOutboundNatRuleInvokeResponseOutputWithContext(context.Background())
}

func (i OutboundNatRuleInvokeResponseArgs) ToOutboundNatRuleInvokeResponseOutputWithContext(ctx context.Context) OutboundNatRuleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundNatRuleInvokeResponseOutput)
}

// OutboundNatRuleInvokeResponseArrayInput is an input type that accepts OutboundNatRuleInvokeResponseArray and OutboundNatRuleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `OutboundNatRuleInvokeResponseArrayInput` via:
//
//          OutboundNatRuleInvokeResponseArray{ OutboundNatRuleInvokeResponseArgs{...} }
type OutboundNatRuleInvokeResponseArrayInput interface {
	pulumi.Input

	ToOutboundNatRuleInvokeResponseArrayOutput() OutboundNatRuleInvokeResponseArrayOutput
	ToOutboundNatRuleInvokeResponseArrayOutputWithContext(context.Context) OutboundNatRuleInvokeResponseArrayOutput
}

type OutboundNatRuleInvokeResponseArray []OutboundNatRuleInvokeResponseInput

func (OutboundNatRuleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundNatRuleInvokeResponse)(nil)).Elem()
}

func (i OutboundNatRuleInvokeResponseArray) ToOutboundNatRuleInvokeResponseArrayOutput() OutboundNatRuleInvokeResponseArrayOutput {
	return i.ToOutboundNatRuleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i OutboundNatRuleInvokeResponseArray) ToOutboundNatRuleInvokeResponseArrayOutputWithContext(ctx context.Context) OutboundNatRuleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundNatRuleInvokeResponseArrayOutput)
}

// Outbound NAT pool of the load balancer.
type OutboundNatRuleInvokeResponseOutput struct{ *pulumi.OutputState }

func (OutboundNatRuleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundNatRuleInvokeResponse)(nil)).Elem()
}

func (o OutboundNatRuleInvokeResponseOutput) ToOutboundNatRuleInvokeResponseOutput() OutboundNatRuleInvokeResponseOutput {
	return o
}

func (o OutboundNatRuleInvokeResponseOutput) ToOutboundNatRuleInvokeResponseOutputWithContext(ctx context.Context) OutboundNatRuleInvokeResponseOutput {
	return o
}

// The number of outbound ports to be used for NAT.
func (o OutboundNatRuleInvokeResponseOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OutboundNatRuleInvokeResponse) *int { return v.AllocatedOutboundPorts }).(pulumi.IntPtrOutput)
}

// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
func (o OutboundNatRuleInvokeResponseOutput) BackendAddressPool() SubResourceInvokeResponseOutput {
	return o.ApplyT(func(v OutboundNatRuleInvokeResponse) SubResourceInvokeResponse { return v.BackendAddressPool }).(SubResourceInvokeResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o OutboundNatRuleInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRuleInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The Frontend IP addresses of the load balancer.
func (o OutboundNatRuleInvokeResponseOutput) FrontendIPConfigurations() SubResourceInvokeResponseArrayOutput {
	return o.ApplyT(func(v OutboundNatRuleInvokeResponse) []SubResourceInvokeResponse { return v.FrontendIPConfigurations }).(SubResourceInvokeResponseArrayOutput)
}

// Resource Identifier.
func (o OutboundNatRuleInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRuleInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o OutboundNatRuleInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRuleInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o OutboundNatRuleInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRuleInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type OutboundNatRuleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (OutboundNatRuleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundNatRuleInvokeResponse)(nil)).Elem()
}

func (o OutboundNatRuleInvokeResponseArrayOutput) ToOutboundNatRuleInvokeResponseArrayOutput() OutboundNatRuleInvokeResponseArrayOutput {
	return o
}

func (o OutboundNatRuleInvokeResponseArrayOutput) ToOutboundNatRuleInvokeResponseArrayOutputWithContext(ctx context.Context) OutboundNatRuleInvokeResponseArrayOutput {
	return o
}

func (o OutboundNatRuleInvokeResponseArrayOutput) Index(i pulumi.IntInput) OutboundNatRuleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OutboundNatRuleInvokeResponse {
		return vs[0].([]OutboundNatRuleInvokeResponse)[vs[1].(int)]
	}).(OutboundNatRuleInvokeResponseOutput)
}

// Outbound NAT pool of the load balancer.
type OutboundNatRuleResponse struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts *int `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceResponse `pulumi:"backendAddressPool"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations []SubResourceResponse `pulumi:"frontendIPConfigurations"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// OutboundNatRuleResponseInput is an input type that accepts OutboundNatRuleResponseArgs and OutboundNatRuleResponseOutput values.
// You can construct a concrete instance of `OutboundNatRuleResponseInput` via:
//
//          OutboundNatRuleResponseArgs{...}
type OutboundNatRuleResponseInput interface {
	pulumi.Input

	ToOutboundNatRuleResponseOutput() OutboundNatRuleResponseOutput
	ToOutboundNatRuleResponseOutputWithContext(context.Context) OutboundNatRuleResponseOutput
}

// Outbound NAT pool of the load balancer.
type OutboundNatRuleResponseArgs struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts pulumi.IntPtrInput `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceResponseInput `pulumi:"backendAddressPool"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations SubResourceResponseArrayInput `pulumi:"frontendIPConfigurations"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (OutboundNatRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundNatRuleResponse)(nil)).Elem()
}

func (i OutboundNatRuleResponseArgs) ToOutboundNatRuleResponseOutput() OutboundNatRuleResponseOutput {
	return i.ToOutboundNatRuleResponseOutputWithContext(context.Background())
}

func (i OutboundNatRuleResponseArgs) ToOutboundNatRuleResponseOutputWithContext(ctx context.Context) OutboundNatRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundNatRuleResponseOutput)
}

// OutboundNatRuleResponseArrayInput is an input type that accepts OutboundNatRuleResponseArray and OutboundNatRuleResponseArrayOutput values.
// You can construct a concrete instance of `OutboundNatRuleResponseArrayInput` via:
//
//          OutboundNatRuleResponseArray{ OutboundNatRuleResponseArgs{...} }
type OutboundNatRuleResponseArrayInput interface {
	pulumi.Input

	ToOutboundNatRuleResponseArrayOutput() OutboundNatRuleResponseArrayOutput
	ToOutboundNatRuleResponseArrayOutputWithContext(context.Context) OutboundNatRuleResponseArrayOutput
}

type OutboundNatRuleResponseArray []OutboundNatRuleResponseInput

func (OutboundNatRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundNatRuleResponse)(nil)).Elem()
}

func (i OutboundNatRuleResponseArray) ToOutboundNatRuleResponseArrayOutput() OutboundNatRuleResponseArrayOutput {
	return i.ToOutboundNatRuleResponseArrayOutputWithContext(context.Background())
}

func (i OutboundNatRuleResponseArray) ToOutboundNatRuleResponseArrayOutputWithContext(ctx context.Context) OutboundNatRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundNatRuleResponseArrayOutput)
}

// Outbound NAT pool of the load balancer.
type OutboundNatRuleResponseOutput struct{ *pulumi.OutputState }

func (OutboundNatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundNatRuleResponse)(nil)).Elem()
}

func (o OutboundNatRuleResponseOutput) ToOutboundNatRuleResponseOutput() OutboundNatRuleResponseOutput {
	return o
}

func (o OutboundNatRuleResponseOutput) ToOutboundNatRuleResponseOutputWithContext(ctx context.Context) OutboundNatRuleResponseOutput {
	return o
}

// The number of outbound ports to be used for NAT.
func (o OutboundNatRuleResponseOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OutboundNatRuleResponse) *int { return v.AllocatedOutboundPorts }).(pulumi.IntPtrOutput)
}

// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
func (o OutboundNatRuleResponseOutput) BackendAddressPool() SubResourceResponseOutput {
	return o.ApplyT(func(v OutboundNatRuleResponse) SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o OutboundNatRuleResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRuleResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The Frontend IP addresses of the load balancer.
func (o OutboundNatRuleResponseOutput) FrontendIPConfigurations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v OutboundNatRuleResponse) []SubResourceResponse { return v.FrontendIPConfigurations }).(SubResourceResponseArrayOutput)
}

// Resource Identifier.
func (o OutboundNatRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o OutboundNatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o OutboundNatRuleResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRuleResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type OutboundNatRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (OutboundNatRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundNatRuleResponse)(nil)).Elem()
}

func (o OutboundNatRuleResponseArrayOutput) ToOutboundNatRuleResponseArrayOutput() OutboundNatRuleResponseArrayOutput {
	return o
}

func (o OutboundNatRuleResponseArrayOutput) ToOutboundNatRuleResponseArrayOutputWithContext(ctx context.Context) OutboundNatRuleResponseArrayOutput {
	return o
}

func (o OutboundNatRuleResponseArrayOutput) Index(i pulumi.IntInput) OutboundNatRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OutboundNatRuleResponse {
		return vs[0].([]OutboundNatRuleResponse)[vs[1].(int)]
	}).(OutboundNatRuleResponseOutput)
}

// A load balancer probe.
type Probe struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// The load balancer rules that use this probe.
	LoadBalancingRules []SubResource `pulumi:"loadBalancingRules"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes *int `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port int `pulumi:"port"`
	// The protocol of the end point. Possible values are: 'Http' or 'Tcp'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath *string `pulumi:"requestPath"`
}

// ProbeInput is an input type that accepts ProbeArgs and ProbeOutput values.
// You can construct a concrete instance of `ProbeInput` via:
//
//          ProbeArgs{...}
type ProbeInput interface {
	pulumi.Input

	ToProbeOutput() ProbeOutput
	ToProbeOutputWithContext(context.Context) ProbeOutput
}

// A load balancer probe.
type ProbeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// The load balancer rules that use this probe.
	LoadBalancingRules SubResourceArrayInput `pulumi:"loadBalancingRules"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes pulumi.IntPtrInput `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol of the end point. Possible values are: 'Http' or 'Tcp'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath pulumi.StringPtrInput `pulumi:"requestPath"`
}

func (ProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Probe)(nil)).Elem()
}

func (i ProbeArgs) ToProbeOutput() ProbeOutput {
	return i.ToProbeOutputWithContext(context.Background())
}

func (i ProbeArgs) ToProbeOutputWithContext(ctx context.Context) ProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeOutput)
}

// ProbeArrayInput is an input type that accepts ProbeArray and ProbeArrayOutput values.
// You can construct a concrete instance of `ProbeArrayInput` via:
//
//          ProbeArray{ ProbeArgs{...} }
type ProbeArrayInput interface {
	pulumi.Input

	ToProbeArrayOutput() ProbeArrayOutput
	ToProbeArrayOutputWithContext(context.Context) ProbeArrayOutput
}

type ProbeArray []ProbeInput

func (ProbeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Probe)(nil)).Elem()
}

func (i ProbeArray) ToProbeArrayOutput() ProbeArrayOutput {
	return i.ToProbeArrayOutputWithContext(context.Background())
}

func (i ProbeArray) ToProbeArrayOutputWithContext(ctx context.Context) ProbeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeArrayOutput)
}

// A load balancer probe.
type ProbeOutput struct{ *pulumi.OutputState }

func (ProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Probe)(nil)).Elem()
}

func (o ProbeOutput) ToProbeOutput() ProbeOutput {
	return o
}

func (o ProbeOutput) ToProbeOutputWithContext(ctx context.Context) ProbeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ProbeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Probe) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ProbeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Probe) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
func (o ProbeOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Probe) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The load balancer rules that use this probe.
func (o ProbeOutput) LoadBalancingRules() SubResourceArrayOutput {
	return o.ApplyT(func(v Probe) []SubResource { return v.LoadBalancingRules }).(SubResourceArrayOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ProbeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Probe) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
func (o ProbeOutput) NumberOfProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Probe) *int { return v.NumberOfProbes }).(pulumi.IntPtrOutput)
}

// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
func (o ProbeOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v Probe) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol of the end point. Possible values are: 'Http' or 'Tcp'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
func (o ProbeOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v Probe) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ProbeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Probe) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
func (o ProbeOutput) RequestPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Probe) *string { return v.RequestPath }).(pulumi.StringPtrOutput)
}

type ProbeArrayOutput struct{ *pulumi.OutputState }

func (ProbeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Probe)(nil)).Elem()
}

func (o ProbeArrayOutput) ToProbeArrayOutput() ProbeArrayOutput {
	return o
}

func (o ProbeArrayOutput) ToProbeArrayOutputWithContext(ctx context.Context) ProbeArrayOutput {
	return o
}

func (o ProbeArrayOutput) Index(i pulumi.IntInput) ProbeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Probe {
		return vs[0].([]Probe)[vs[1].(int)]
	}).(ProbeOutput)
}

// A load balancer probe.
type ProbeInvokeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// The load balancer rules that use this probe.
	LoadBalancingRules []SubResourceInvokeResponse `pulumi:"loadBalancingRules"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes *int `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port int `pulumi:"port"`
	// The protocol of the end point. Possible values are: 'Http' or 'Tcp'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath *string `pulumi:"requestPath"`
}

// ProbeInvokeResponseInput is an input type that accepts ProbeInvokeResponseArgs and ProbeInvokeResponseOutput values.
// You can construct a concrete instance of `ProbeInvokeResponseInput` via:
//
//          ProbeInvokeResponseArgs{...}
type ProbeInvokeResponseInput interface {
	pulumi.Input

	ToProbeInvokeResponseOutput() ProbeInvokeResponseOutput
	ToProbeInvokeResponseOutputWithContext(context.Context) ProbeInvokeResponseOutput
}

// A load balancer probe.
type ProbeInvokeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// The load balancer rules that use this probe.
	LoadBalancingRules SubResourceInvokeResponseArrayInput `pulumi:"loadBalancingRules"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes pulumi.IntPtrInput `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol of the end point. Possible values are: 'Http' or 'Tcp'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath pulumi.StringPtrInput `pulumi:"requestPath"`
}

func (ProbeInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeInvokeResponse)(nil)).Elem()
}

func (i ProbeInvokeResponseArgs) ToProbeInvokeResponseOutput() ProbeInvokeResponseOutput {
	return i.ToProbeInvokeResponseOutputWithContext(context.Background())
}

func (i ProbeInvokeResponseArgs) ToProbeInvokeResponseOutputWithContext(ctx context.Context) ProbeInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeInvokeResponseOutput)
}

// ProbeInvokeResponseArrayInput is an input type that accepts ProbeInvokeResponseArray and ProbeInvokeResponseArrayOutput values.
// You can construct a concrete instance of `ProbeInvokeResponseArrayInput` via:
//
//          ProbeInvokeResponseArray{ ProbeInvokeResponseArgs{...} }
type ProbeInvokeResponseArrayInput interface {
	pulumi.Input

	ToProbeInvokeResponseArrayOutput() ProbeInvokeResponseArrayOutput
	ToProbeInvokeResponseArrayOutputWithContext(context.Context) ProbeInvokeResponseArrayOutput
}

type ProbeInvokeResponseArray []ProbeInvokeResponseInput

func (ProbeInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProbeInvokeResponse)(nil)).Elem()
}

func (i ProbeInvokeResponseArray) ToProbeInvokeResponseArrayOutput() ProbeInvokeResponseArrayOutput {
	return i.ToProbeInvokeResponseArrayOutputWithContext(context.Background())
}

func (i ProbeInvokeResponseArray) ToProbeInvokeResponseArrayOutputWithContext(ctx context.Context) ProbeInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeInvokeResponseArrayOutput)
}

// A load balancer probe.
type ProbeInvokeResponseOutput struct{ *pulumi.OutputState }

func (ProbeInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeInvokeResponse)(nil)).Elem()
}

func (o ProbeInvokeResponseOutput) ToProbeInvokeResponseOutput() ProbeInvokeResponseOutput {
	return o
}

func (o ProbeInvokeResponseOutput) ToProbeInvokeResponseOutputWithContext(ctx context.Context) ProbeInvokeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ProbeInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ProbeInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
func (o ProbeInvokeResponseOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeInvokeResponse) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The load balancer rules that use this probe.
func (o ProbeInvokeResponseOutput) LoadBalancingRules() SubResourceInvokeResponseArrayOutput {
	return o.ApplyT(func(v ProbeInvokeResponse) []SubResourceInvokeResponse { return v.LoadBalancingRules }).(SubResourceInvokeResponseArrayOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ProbeInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
func (o ProbeInvokeResponseOutput) NumberOfProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeInvokeResponse) *int { return v.NumberOfProbes }).(pulumi.IntPtrOutput)
}

// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
func (o ProbeInvokeResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ProbeInvokeResponse) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol of the end point. Possible values are: 'Http' or 'Tcp'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
func (o ProbeInvokeResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ProbeInvokeResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ProbeInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
func (o ProbeInvokeResponseOutput) RequestPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeInvokeResponse) *string { return v.RequestPath }).(pulumi.StringPtrOutput)
}

type ProbeInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (ProbeInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProbeInvokeResponse)(nil)).Elem()
}

func (o ProbeInvokeResponseArrayOutput) ToProbeInvokeResponseArrayOutput() ProbeInvokeResponseArrayOutput {
	return o
}

func (o ProbeInvokeResponseArrayOutput) ToProbeInvokeResponseArrayOutputWithContext(ctx context.Context) ProbeInvokeResponseArrayOutput {
	return o
}

func (o ProbeInvokeResponseArrayOutput) Index(i pulumi.IntInput) ProbeInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProbeInvokeResponse {
		return vs[0].([]ProbeInvokeResponse)[vs[1].(int)]
	}).(ProbeInvokeResponseOutput)
}

// A load balancer probe.
type ProbeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// The load balancer rules that use this probe.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes *int `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port int `pulumi:"port"`
	// The protocol of the end point. Possible values are: 'Http' or 'Tcp'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath *string `pulumi:"requestPath"`
}

// ProbeResponseInput is an input type that accepts ProbeResponseArgs and ProbeResponseOutput values.
// You can construct a concrete instance of `ProbeResponseInput` via:
//
//          ProbeResponseArgs{...}
type ProbeResponseInput interface {
	pulumi.Input

	ToProbeResponseOutput() ProbeResponseOutput
	ToProbeResponseOutputWithContext(context.Context) ProbeResponseOutput
}

// A load balancer probe.
type ProbeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// The load balancer rules that use this probe.
	LoadBalancingRules SubResourceResponseArrayInput `pulumi:"loadBalancingRules"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes pulumi.IntPtrInput `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol of the end point. Possible values are: 'Http' or 'Tcp'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath pulumi.StringPtrInput `pulumi:"requestPath"`
}

func (ProbeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeResponse)(nil)).Elem()
}

func (i ProbeResponseArgs) ToProbeResponseOutput() ProbeResponseOutput {
	return i.ToProbeResponseOutputWithContext(context.Background())
}

func (i ProbeResponseArgs) ToProbeResponseOutputWithContext(ctx context.Context) ProbeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeResponseOutput)
}

// ProbeResponseArrayInput is an input type that accepts ProbeResponseArray and ProbeResponseArrayOutput values.
// You can construct a concrete instance of `ProbeResponseArrayInput` via:
//
//          ProbeResponseArray{ ProbeResponseArgs{...} }
type ProbeResponseArrayInput interface {
	pulumi.Input

	ToProbeResponseArrayOutput() ProbeResponseArrayOutput
	ToProbeResponseArrayOutputWithContext(context.Context) ProbeResponseArrayOutput
}

type ProbeResponseArray []ProbeResponseInput

func (ProbeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProbeResponse)(nil)).Elem()
}

func (i ProbeResponseArray) ToProbeResponseArrayOutput() ProbeResponseArrayOutput {
	return i.ToProbeResponseArrayOutputWithContext(context.Background())
}

func (i ProbeResponseArray) ToProbeResponseArrayOutputWithContext(ctx context.Context) ProbeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeResponseArrayOutput)
}

// A load balancer probe.
type ProbeResponseOutput struct{ *pulumi.OutputState }

func (ProbeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeResponse)(nil)).Elem()
}

func (o ProbeResponseOutput) ToProbeResponseOutput() ProbeResponseOutput {
	return o
}

func (o ProbeResponseOutput) ToProbeResponseOutputWithContext(ctx context.Context) ProbeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ProbeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o ProbeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
func (o ProbeResponseOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The load balancer rules that use this probe.
func (o ProbeResponseOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ProbeResponse) []SubResourceResponse { return v.LoadBalancingRules }).(SubResourceResponseArrayOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ProbeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
func (o ProbeResponseOutput) NumberOfProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *int { return v.NumberOfProbes }).(pulumi.IntPtrOutput)
}

// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
func (o ProbeResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ProbeResponse) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol of the end point. Possible values are: 'Http' or 'Tcp'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
func (o ProbeResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ProbeResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ProbeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
func (o ProbeResponseOutput) RequestPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *string { return v.RequestPath }).(pulumi.StringPtrOutput)
}

type ProbeResponseArrayOutput struct{ *pulumi.OutputState }

func (ProbeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProbeResponse)(nil)).Elem()
}

func (o ProbeResponseArrayOutput) ToProbeResponseArrayOutput() ProbeResponseArrayOutput {
	return o
}

func (o ProbeResponseArrayOutput) ToProbeResponseArrayOutputWithContext(ctx context.Context) ProbeResponseArrayOutput {
	return o
}

func (o ProbeResponseArrayOutput) Index(i pulumi.IntInput) ProbeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProbeResponse {
		return vs[0].([]ProbeResponse)[vs[1].(int)]
	}).(ProbeResponseOutput)
}

// Public IP address resource.
type PublicIPAddressType struct {
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings *PublicIPAddressDnsSettings `pulumi:"dnsSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes *int    `pulumi:"idleTimeoutInMinutes"`
	IpAddress            *string `pulumi:"ipAddress"`
	// IPConfiguration
	IpConfiguration *IPConfiguration `pulumi:"ipConfiguration"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PublicIPAllocationMethod *string `pulumi:"publicIPAllocationMethod"`
	// The resource GUID property of the public IP resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// PublicIPAddressTypeInput is an input type that accepts PublicIPAddressTypeArgs and PublicIPAddressTypeOutput values.
// You can construct a concrete instance of `PublicIPAddressTypeInput` via:
//
//          PublicIPAddressTypeArgs{...}
type PublicIPAddressTypeInput interface {
	pulumi.Input

	ToPublicIPAddressTypeOutput() PublicIPAddressTypeOutput
	ToPublicIPAddressTypeOutputWithContext(context.Context) PublicIPAddressTypeOutput
}

// Public IP address resource.
type PublicIPAddressTypeArgs struct {
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings PublicIPAddressDnsSettingsPtrInput `pulumi:"dnsSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes pulumi.IntPtrInput    `pulumi:"idleTimeoutInMinutes"`
	IpAddress            pulumi.StringPtrInput `pulumi:"ipAddress"`
	// IPConfiguration
	IpConfiguration IPConfigurationPtrInput `pulumi:"ipConfiguration"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PublicIPAllocationMethod pulumi.StringPtrInput `pulumi:"publicIPAllocationMethod"`
	// The resource GUID property of the public IP resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (PublicIPAddressTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressType)(nil)).Elem()
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypeOutput() PublicIPAddressTypeOutput {
	return i.ToPublicIPAddressTypeOutputWithContext(context.Background())
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypeOutputWithContext(ctx context.Context) PublicIPAddressTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressTypeOutput)
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return i.ToPublicIPAddressTypePtrOutputWithContext(context.Background())
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressTypeOutput).ToPublicIPAddressTypePtrOutputWithContext(ctx)
}

// PublicIPAddressTypePtrInput is an input type that accepts PublicIPAddressTypeArgs, PublicIPAddressTypePtr and PublicIPAddressTypePtrOutput values.
// You can construct a concrete instance of `PublicIPAddressTypePtrInput` via:
//
//          PublicIPAddressTypeArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressTypePtrInput interface {
	pulumi.Input

	ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput
	ToPublicIPAddressTypePtrOutputWithContext(context.Context) PublicIPAddressTypePtrOutput
}

type publicIPAddressTypePtrType PublicIPAddressTypeArgs

func PublicIPAddressTypePtr(v *PublicIPAddressTypeArgs) PublicIPAddressTypePtrInput {
	return (*publicIPAddressTypePtrType)(v)
}

func (*publicIPAddressTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressType)(nil)).Elem()
}

func (i *publicIPAddressTypePtrType) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return i.ToPublicIPAddressTypePtrOutputWithContext(context.Background())
}

func (i *publicIPAddressTypePtrType) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressTypePtrOutput)
}

// Public IP address resource.
type PublicIPAddressTypeOutput struct{ *pulumi.OutputState }

func (PublicIPAddressTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressType)(nil)).Elem()
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypeOutput() PublicIPAddressTypeOutput {
	return o
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypeOutputWithContext(ctx context.Context) PublicIPAddressTypeOutput {
	return o
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return o.ToPublicIPAddressTypePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *PublicIPAddressType {
		return &v
	}).(PublicIPAddressTypePtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressTypeOutput) DnsSettings() PublicIPAddressDnsSettingsPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *PublicIPAddressDnsSettings { return v.DnsSettings }).(PublicIPAddressDnsSettingsPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o PublicIPAddressTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressTypeOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

func (o PublicIPAddressTypeOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// IPConfiguration
func (o PublicIPAddressTypeOutput) IpConfiguration() IPConfigurationPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *IPConfiguration { return v.IpConfiguration }).(IPConfigurationPtrOutput)
}

// Resource location.
func (o PublicIPAddressTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o PublicIPAddressTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o PublicIPAddressTypeOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.PublicIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the public IP resource.
func (o PublicIPAddressTypeOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o PublicIPAddressTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PublicIPAddressType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type PublicIPAddressTypePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressType)(nil)).Elem()
}

func (o PublicIPAddressTypePtrOutput) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return o
}

func (o PublicIPAddressTypePtrOutput) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return o
}

func (o PublicIPAddressTypePtrOutput) Elem() PublicIPAddressTypeOutput {
	return o.ApplyT(func(v *PublicIPAddressType) PublicIPAddressType { return *v }).(PublicIPAddressTypeOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressTypePtrOutput) DnsSettings() PublicIPAddressDnsSettingsPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *PublicIPAddressDnsSettings {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(PublicIPAddressDnsSettingsPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o PublicIPAddressTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressTypePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

func (o PublicIPAddressTypePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// IPConfiguration
func (o PublicIPAddressTypePtrOutput) IpConfiguration() IPConfigurationPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *IPConfiguration {
		if v == nil {
			return nil
		}
		return v.IpConfiguration
	}).(IPConfigurationPtrOutput)
}

// Resource location.
func (o PublicIPAddressTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o PublicIPAddressTypePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o PublicIPAddressTypePtrOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the public IP resource.
func (o PublicIPAddressTypePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o PublicIPAddressTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PublicIPAddressType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettings struct {
	// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn *string `pulumi:"fqdn"`
	// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn *string `pulumi:"reverseFqdn"`
}

// PublicIPAddressDnsSettingsInput is an input type that accepts PublicIPAddressDnsSettingsArgs and PublicIPAddressDnsSettingsOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsInput` via:
//
//          PublicIPAddressDnsSettingsArgs{...}
type PublicIPAddressDnsSettingsInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsOutput() PublicIPAddressDnsSettingsOutput
	ToPublicIPAddressDnsSettingsOutputWithContext(context.Context) PublicIPAddressDnsSettingsOutput
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettingsArgs struct {
	// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel pulumi.StringPtrInput `pulumi:"domainNameLabel"`
	// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn pulumi.StringPtrInput `pulumi:"reverseFqdn"`
}

func (PublicIPAddressDnsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettings)(nil)).Elem()
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsOutput() PublicIPAddressDnsSettingsOutput {
	return i.ToPublicIPAddressDnsSettingsOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsOutput)
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return i.ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsOutput).ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx)
}

// PublicIPAddressDnsSettingsPtrInput is an input type that accepts PublicIPAddressDnsSettingsArgs, PublicIPAddressDnsSettingsPtr and PublicIPAddressDnsSettingsPtrOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsPtrInput` via:
//
//          PublicIPAddressDnsSettingsArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressDnsSettingsPtrInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput
	ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Context) PublicIPAddressDnsSettingsPtrOutput
}

type publicIPAddressDnsSettingsPtrType PublicIPAddressDnsSettingsArgs

func PublicIPAddressDnsSettingsPtr(v *PublicIPAddressDnsSettingsArgs) PublicIPAddressDnsSettingsPtrInput {
	return (*publicIPAddressDnsSettingsPtrType)(v)
}

func (*publicIPAddressDnsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettings)(nil)).Elem()
}

func (i *publicIPAddressDnsSettingsPtrType) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return i.ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Background())
}

func (i *publicIPAddressDnsSettingsPtrType) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsPtrOutput)
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettingsOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettings)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsOutput() PublicIPAddressDnsSettingsOutput {
	return o
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsOutput {
	return o
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return o.ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Background())
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *PublicIPAddressDnsSettings {
		return &v
	}).(PublicIPAddressDnsSettingsPtrOutput)
}

// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *string { return v.DomainNameLabel }).(pulumi.StringPtrOutput)
}

// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *string { return v.ReverseFqdn }).(pulumi.StringPtrOutput)
}

type PublicIPAddressDnsSettingsPtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettings)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsPtrOutput) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsPtrOutput) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsPtrOutput) Elem() PublicIPAddressDnsSettingsOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) PublicIPAddressDnsSettings { return *v }).(PublicIPAddressDnsSettingsOutput)
}

// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsPtrOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.DomainNameLabel
	}).(pulumi.StringPtrOutput)
}

// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsPtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsPtrOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.ReverseFqdn
	}).(pulumi.StringPtrOutput)
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettingsInvokeResponse struct {
	// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn *string `pulumi:"fqdn"`
	// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn *string `pulumi:"reverseFqdn"`
}

// PublicIPAddressDnsSettingsInvokeResponseInput is an input type that accepts PublicIPAddressDnsSettingsInvokeResponseArgs and PublicIPAddressDnsSettingsInvokeResponseOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsInvokeResponseInput` via:
//
//          PublicIPAddressDnsSettingsInvokeResponseArgs{...}
type PublicIPAddressDnsSettingsInvokeResponseInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsInvokeResponseOutput() PublicIPAddressDnsSettingsInvokeResponseOutput
	ToPublicIPAddressDnsSettingsInvokeResponseOutputWithContext(context.Context) PublicIPAddressDnsSettingsInvokeResponseOutput
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettingsInvokeResponseArgs struct {
	// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel pulumi.StringPtrInput `pulumi:"domainNameLabel"`
	// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn pulumi.StringPtrInput `pulumi:"reverseFqdn"`
}

func (PublicIPAddressDnsSettingsInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettingsInvokeResponse)(nil)).Elem()
}

func (i PublicIPAddressDnsSettingsInvokeResponseArgs) ToPublicIPAddressDnsSettingsInvokeResponseOutput() PublicIPAddressDnsSettingsInvokeResponseOutput {
	return i.ToPublicIPAddressDnsSettingsInvokeResponseOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsInvokeResponseArgs) ToPublicIPAddressDnsSettingsInvokeResponseOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsInvokeResponseOutput)
}

func (i PublicIPAddressDnsSettingsInvokeResponseArgs) ToPublicIPAddressDnsSettingsInvokeResponsePtrOutput() PublicIPAddressDnsSettingsInvokeResponsePtrOutput {
	return i.ToPublicIPAddressDnsSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsInvokeResponseArgs) ToPublicIPAddressDnsSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsInvokeResponseOutput).ToPublicIPAddressDnsSettingsInvokeResponsePtrOutputWithContext(ctx)
}

// PublicIPAddressDnsSettingsInvokeResponsePtrInput is an input type that accepts PublicIPAddressDnsSettingsInvokeResponseArgs, PublicIPAddressDnsSettingsInvokeResponsePtr and PublicIPAddressDnsSettingsInvokeResponsePtrOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsInvokeResponsePtrInput` via:
//
//          PublicIPAddressDnsSettingsInvokeResponseArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressDnsSettingsInvokeResponsePtrInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsInvokeResponsePtrOutput() PublicIPAddressDnsSettingsInvokeResponsePtrOutput
	ToPublicIPAddressDnsSettingsInvokeResponsePtrOutputWithContext(context.Context) PublicIPAddressDnsSettingsInvokeResponsePtrOutput
}

type publicIPAddressDnsSettingsInvokeResponsePtrType PublicIPAddressDnsSettingsInvokeResponseArgs

func PublicIPAddressDnsSettingsInvokeResponsePtr(v *PublicIPAddressDnsSettingsInvokeResponseArgs) PublicIPAddressDnsSettingsInvokeResponsePtrInput {
	return (*publicIPAddressDnsSettingsInvokeResponsePtrType)(v)
}

func (*publicIPAddressDnsSettingsInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettingsInvokeResponse)(nil)).Elem()
}

func (i *publicIPAddressDnsSettingsInvokeResponsePtrType) ToPublicIPAddressDnsSettingsInvokeResponsePtrOutput() PublicIPAddressDnsSettingsInvokeResponsePtrOutput {
	return i.ToPublicIPAddressDnsSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *publicIPAddressDnsSettingsInvokeResponsePtrType) ToPublicIPAddressDnsSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsInvokeResponsePtrOutput)
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettingsInvokeResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettingsInvokeResponse)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsInvokeResponseOutput) ToPublicIPAddressDnsSettingsInvokeResponseOutput() PublicIPAddressDnsSettingsInvokeResponseOutput {
	return o
}

func (o PublicIPAddressDnsSettingsInvokeResponseOutput) ToPublicIPAddressDnsSettingsInvokeResponseOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsInvokeResponseOutput {
	return o
}

func (o PublicIPAddressDnsSettingsInvokeResponseOutput) ToPublicIPAddressDnsSettingsInvokeResponsePtrOutput() PublicIPAddressDnsSettingsInvokeResponsePtrOutput {
	return o.ToPublicIPAddressDnsSettingsInvokeResponsePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressDnsSettingsInvokeResponseOutput) ToPublicIPAddressDnsSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsInvokeResponse) *PublicIPAddressDnsSettingsInvokeResponse {
		return &v
	}).(PublicIPAddressDnsSettingsInvokeResponsePtrOutput)
}

// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsInvokeResponseOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsInvokeResponse) *string { return v.DomainNameLabel }).(pulumi.StringPtrOutput)
}

// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsInvokeResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsInvokeResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsInvokeResponseOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsInvokeResponse) *string { return v.ReverseFqdn }).(pulumi.StringPtrOutput)
}

type PublicIPAddressDnsSettingsInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettingsInvokeResponse)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsInvokeResponsePtrOutput) ToPublicIPAddressDnsSettingsInvokeResponsePtrOutput() PublicIPAddressDnsSettingsInvokeResponsePtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsInvokeResponsePtrOutput) ToPublicIPAddressDnsSettingsInvokeResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsInvokeResponsePtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsInvokeResponsePtrOutput) Elem() PublicIPAddressDnsSettingsInvokeResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsInvokeResponse) PublicIPAddressDnsSettingsInvokeResponse { return *v }).(PublicIPAddressDnsSettingsInvokeResponseOutput)
}

// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsInvokeResponsePtrOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.DomainNameLabel
	}).(pulumi.StringPtrOutput)
}

// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsInvokeResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsInvokeResponsePtrOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReverseFqdn
	}).(pulumi.StringPtrOutput)
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettingsResponse struct {
	// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn *string `pulumi:"fqdn"`
	// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn *string `pulumi:"reverseFqdn"`
}

// PublicIPAddressDnsSettingsResponseInput is an input type that accepts PublicIPAddressDnsSettingsResponseArgs and PublicIPAddressDnsSettingsResponseOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsResponseInput` via:
//
//          PublicIPAddressDnsSettingsResponseArgs{...}
type PublicIPAddressDnsSettingsResponseInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsResponseOutput() PublicIPAddressDnsSettingsResponseOutput
	ToPublicIPAddressDnsSettingsResponseOutputWithContext(context.Context) PublicIPAddressDnsSettingsResponseOutput
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettingsResponseArgs struct {
	// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel pulumi.StringPtrInput `pulumi:"domainNameLabel"`
	// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn pulumi.StringPtrInput `pulumi:"reverseFqdn"`
}

func (PublicIPAddressDnsSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (i PublicIPAddressDnsSettingsResponseArgs) ToPublicIPAddressDnsSettingsResponseOutput() PublicIPAddressDnsSettingsResponseOutput {
	return i.ToPublicIPAddressDnsSettingsResponseOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsResponseArgs) ToPublicIPAddressDnsSettingsResponseOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsResponseOutput)
}

func (i PublicIPAddressDnsSettingsResponseArgs) ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput {
	return i.ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsResponseArgs) ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsResponseOutput).ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx)
}

// PublicIPAddressDnsSettingsResponsePtrInput is an input type that accepts PublicIPAddressDnsSettingsResponseArgs, PublicIPAddressDnsSettingsResponsePtr and PublicIPAddressDnsSettingsResponsePtrOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsResponsePtrInput` via:
//
//          PublicIPAddressDnsSettingsResponseArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressDnsSettingsResponsePtrInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput
	ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(context.Context) PublicIPAddressDnsSettingsResponsePtrOutput
}

type publicIPAddressDnsSettingsResponsePtrType PublicIPAddressDnsSettingsResponseArgs

func PublicIPAddressDnsSettingsResponsePtr(v *PublicIPAddressDnsSettingsResponseArgs) PublicIPAddressDnsSettingsResponsePtrInput {
	return (*publicIPAddressDnsSettingsResponsePtrType)(v)
}

func (*publicIPAddressDnsSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (i *publicIPAddressDnsSettingsResponsePtrType) ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput {
	return i.ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *publicIPAddressDnsSettingsResponsePtrType) ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettingsResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponseOutput() PublicIPAddressDnsSettingsResponseOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponseOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponseOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *PublicIPAddressDnsSettingsResponse {
		return &v
	}).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsResponseOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.DomainNameLabel }).(pulumi.StringPtrOutput)
}

// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsResponseOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.ReverseFqdn }).(pulumi.StringPtrOutput)
}

type PublicIPAddressDnsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponsePtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) Elem() PublicIPAddressDnsSettingsResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) PublicIPAddressDnsSettingsResponse { return *v }).(PublicIPAddressDnsSettingsResponseOutput)
}

// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DomainNameLabel
	}).(pulumi.StringPtrOutput)
}

// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReverseFqdn
	}).(pulumi.StringPtrOutput)
}

// Public IP address resource.
type PublicIPAddressInvokeResponse struct {
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings *PublicIPAddressDnsSettingsInvokeResponse `pulumi:"dnsSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes *int    `pulumi:"idleTimeoutInMinutes"`
	IpAddress            *string `pulumi:"ipAddress"`
	// IPConfiguration
	IpConfiguration *IPConfigurationInvokeResponse `pulumi:"ipConfiguration"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PublicIPAllocationMethod *string `pulumi:"publicIPAllocationMethod"`
	// The resource GUID property of the public IP resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// PublicIPAddressInvokeResponseInput is an input type that accepts PublicIPAddressInvokeResponseArgs and PublicIPAddressInvokeResponseOutput values.
// You can construct a concrete instance of `PublicIPAddressInvokeResponseInput` via:
//
//          PublicIPAddressInvokeResponseArgs{...}
type PublicIPAddressInvokeResponseInput interface {
	pulumi.Input

	ToPublicIPAddressInvokeResponseOutput() PublicIPAddressInvokeResponseOutput
	ToPublicIPAddressInvokeResponseOutputWithContext(context.Context) PublicIPAddressInvokeResponseOutput
}

// Public IP address resource.
type PublicIPAddressInvokeResponseArgs struct {
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings PublicIPAddressDnsSettingsInvokeResponsePtrInput `pulumi:"dnsSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes pulumi.IntPtrInput    `pulumi:"idleTimeoutInMinutes"`
	IpAddress            pulumi.StringPtrInput `pulumi:"ipAddress"`
	// IPConfiguration
	IpConfiguration IPConfigurationInvokeResponsePtrInput `pulumi:"ipConfiguration"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PublicIPAllocationMethod pulumi.StringPtrInput `pulumi:"publicIPAllocationMethod"`
	// The resource GUID property of the public IP resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PublicIPAddressInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressInvokeResponse)(nil)).Elem()
}

func (i PublicIPAddressInvokeResponseArgs) ToPublicIPAddressInvokeResponseOutput() PublicIPAddressInvokeResponseOutput {
	return i.ToPublicIPAddressInvokeResponseOutputWithContext(context.Background())
}

func (i PublicIPAddressInvokeResponseArgs) ToPublicIPAddressInvokeResponseOutputWithContext(ctx context.Context) PublicIPAddressInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressInvokeResponseOutput)
}

func (i PublicIPAddressInvokeResponseArgs) ToPublicIPAddressInvokeResponsePtrOutput() PublicIPAddressInvokeResponsePtrOutput {
	return i.ToPublicIPAddressInvokeResponsePtrOutputWithContext(context.Background())
}

func (i PublicIPAddressInvokeResponseArgs) ToPublicIPAddressInvokeResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressInvokeResponseOutput).ToPublicIPAddressInvokeResponsePtrOutputWithContext(ctx)
}

// PublicIPAddressInvokeResponsePtrInput is an input type that accepts PublicIPAddressInvokeResponseArgs, PublicIPAddressInvokeResponsePtr and PublicIPAddressInvokeResponsePtrOutput values.
// You can construct a concrete instance of `PublicIPAddressInvokeResponsePtrInput` via:
//
//          PublicIPAddressInvokeResponseArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressInvokeResponsePtrInput interface {
	pulumi.Input

	ToPublicIPAddressInvokeResponsePtrOutput() PublicIPAddressInvokeResponsePtrOutput
	ToPublicIPAddressInvokeResponsePtrOutputWithContext(context.Context) PublicIPAddressInvokeResponsePtrOutput
}

type publicIPAddressInvokeResponsePtrType PublicIPAddressInvokeResponseArgs

func PublicIPAddressInvokeResponsePtr(v *PublicIPAddressInvokeResponseArgs) PublicIPAddressInvokeResponsePtrInput {
	return (*publicIPAddressInvokeResponsePtrType)(v)
}

func (*publicIPAddressInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressInvokeResponse)(nil)).Elem()
}

func (i *publicIPAddressInvokeResponsePtrType) ToPublicIPAddressInvokeResponsePtrOutput() PublicIPAddressInvokeResponsePtrOutput {
	return i.ToPublicIPAddressInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *publicIPAddressInvokeResponsePtrType) ToPublicIPAddressInvokeResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressInvokeResponsePtrOutput)
}

// Public IP address resource.
type PublicIPAddressInvokeResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressInvokeResponse)(nil)).Elem()
}

func (o PublicIPAddressInvokeResponseOutput) ToPublicIPAddressInvokeResponseOutput() PublicIPAddressInvokeResponseOutput {
	return o
}

func (o PublicIPAddressInvokeResponseOutput) ToPublicIPAddressInvokeResponseOutputWithContext(ctx context.Context) PublicIPAddressInvokeResponseOutput {
	return o
}

func (o PublicIPAddressInvokeResponseOutput) ToPublicIPAddressInvokeResponsePtrOutput() PublicIPAddressInvokeResponsePtrOutput {
	return o.ToPublicIPAddressInvokeResponsePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressInvokeResponseOutput) ToPublicIPAddressInvokeResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressInvokeResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressInvokeResponse) *PublicIPAddressInvokeResponse {
		return &v
	}).(PublicIPAddressInvokeResponsePtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressInvokeResponseOutput) DnsSettings() PublicIPAddressDnsSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressInvokeResponse) *PublicIPAddressDnsSettingsInvokeResponse { return v.DnsSettings }).(PublicIPAddressDnsSettingsInvokeResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o PublicIPAddressInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressInvokeResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PublicIPAddressInvokeResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

func (o PublicIPAddressInvokeResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressInvokeResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// IPConfiguration
func (o PublicIPAddressInvokeResponseOutput) IpConfiguration() IPConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressInvokeResponse) *IPConfigurationInvokeResponse { return v.IpConfiguration }).(IPConfigurationInvokeResponsePtrOutput)
}

// Resource location.
func (o PublicIPAddressInvokeResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressInvokeResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PublicIPAddressInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o PublicIPAddressInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o PublicIPAddressInvokeResponseOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressInvokeResponse) *string { return v.PublicIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the public IP resource.
func (o PublicIPAddressInvokeResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressInvokeResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o PublicIPAddressInvokeResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PublicIPAddressInvokeResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o PublicIPAddressInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PublicIPAddressInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressInvokeResponse)(nil)).Elem()
}

func (o PublicIPAddressInvokeResponsePtrOutput) ToPublicIPAddressInvokeResponsePtrOutput() PublicIPAddressInvokeResponsePtrOutput {
	return o
}

func (o PublicIPAddressInvokeResponsePtrOutput) ToPublicIPAddressInvokeResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressInvokeResponsePtrOutput {
	return o
}

func (o PublicIPAddressInvokeResponsePtrOutput) Elem() PublicIPAddressInvokeResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressInvokeResponse) PublicIPAddressInvokeResponse { return *v }).(PublicIPAddressInvokeResponseOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressInvokeResponsePtrOutput) DnsSettings() PublicIPAddressDnsSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressInvokeResponse) *PublicIPAddressDnsSettingsInvokeResponse {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(PublicIPAddressDnsSettingsInvokeResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressInvokeResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o PublicIPAddressInvokeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressInvokeResponsePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

func (o PublicIPAddressInvokeResponsePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// IPConfiguration
func (o PublicIPAddressInvokeResponsePtrOutput) IpConfiguration() IPConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressInvokeResponse) *IPConfigurationInvokeResponse {
		if v == nil {
			return nil
		}
		return v.IpConfiguration
	}).(IPConfigurationInvokeResponsePtrOutput)
}

// Resource location.
func (o PublicIPAddressInvokeResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PublicIPAddressInvokeResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o PublicIPAddressInvokeResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o PublicIPAddressInvokeResponsePtrOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the public IP resource.
func (o PublicIPAddressInvokeResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o PublicIPAddressInvokeResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PublicIPAddressInvokeResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o PublicIPAddressInvokeResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Public IP address resource.
type PublicIPAddressResponse struct {
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings *PublicIPAddressDnsSettingsResponse `pulumi:"dnsSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes *int    `pulumi:"idleTimeoutInMinutes"`
	IpAddress            *string `pulumi:"ipAddress"`
	// IPConfiguration
	IpConfiguration *IPConfigurationResponse `pulumi:"ipConfiguration"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PublicIPAllocationMethod *string `pulumi:"publicIPAllocationMethod"`
	// The resource GUID property of the public IP resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// PublicIPAddressResponseInput is an input type that accepts PublicIPAddressResponseArgs and PublicIPAddressResponseOutput values.
// You can construct a concrete instance of `PublicIPAddressResponseInput` via:
//
//          PublicIPAddressResponseArgs{...}
type PublicIPAddressResponseInput interface {
	pulumi.Input

	ToPublicIPAddressResponseOutput() PublicIPAddressResponseOutput
	ToPublicIPAddressResponseOutputWithContext(context.Context) PublicIPAddressResponseOutput
}

// Public IP address resource.
type PublicIPAddressResponseArgs struct {
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings PublicIPAddressDnsSettingsResponsePtrInput `pulumi:"dnsSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes pulumi.IntPtrInput    `pulumi:"idleTimeoutInMinutes"`
	IpAddress            pulumi.StringPtrInput `pulumi:"ipAddress"`
	// IPConfiguration
	IpConfiguration IPConfigurationResponsePtrInput `pulumi:"ipConfiguration"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PublicIPAllocationMethod pulumi.StringPtrInput `pulumi:"publicIPAllocationMethod"`
	// The resource GUID property of the public IP resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PublicIPAddressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressResponse)(nil)).Elem()
}

func (i PublicIPAddressResponseArgs) ToPublicIPAddressResponseOutput() PublicIPAddressResponseOutput {
	return i.ToPublicIPAddressResponseOutputWithContext(context.Background())
}

func (i PublicIPAddressResponseArgs) ToPublicIPAddressResponseOutputWithContext(ctx context.Context) PublicIPAddressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressResponseOutput)
}

func (i PublicIPAddressResponseArgs) ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput {
	return i.ToPublicIPAddressResponsePtrOutputWithContext(context.Background())
}

func (i PublicIPAddressResponseArgs) ToPublicIPAddressResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressResponseOutput).ToPublicIPAddressResponsePtrOutputWithContext(ctx)
}

// PublicIPAddressResponsePtrInput is an input type that accepts PublicIPAddressResponseArgs, PublicIPAddressResponsePtr and PublicIPAddressResponsePtrOutput values.
// You can construct a concrete instance of `PublicIPAddressResponsePtrInput` via:
//
//          PublicIPAddressResponseArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressResponsePtrInput interface {
	pulumi.Input

	ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput
	ToPublicIPAddressResponsePtrOutputWithContext(context.Context) PublicIPAddressResponsePtrOutput
}

type publicIPAddressResponsePtrType PublicIPAddressResponseArgs

func PublicIPAddressResponsePtr(v *PublicIPAddressResponseArgs) PublicIPAddressResponsePtrInput {
	return (*publicIPAddressResponsePtrType)(v)
}

func (*publicIPAddressResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressResponse)(nil)).Elem()
}

func (i *publicIPAddressResponsePtrType) ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput {
	return i.ToPublicIPAddressResponsePtrOutputWithContext(context.Background())
}

func (i *publicIPAddressResponsePtrType) ToPublicIPAddressResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressResponsePtrOutput)
}

// Public IP address resource.
type PublicIPAddressResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressResponse)(nil)).Elem()
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponseOutput() PublicIPAddressResponseOutput {
	return o
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponseOutputWithContext(ctx context.Context) PublicIPAddressResponseOutput {
	return o
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput {
	return o.ToPublicIPAddressResponsePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressResponse {
		return &v
	}).(PublicIPAddressResponsePtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressResponseOutput) DnsSettings() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressDnsSettingsResponse { return v.DnsSettings }).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o PublicIPAddressResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

func (o PublicIPAddressResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// IPConfiguration
func (o PublicIPAddressResponseOutput) IpConfiguration() IPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *IPConfigurationResponse { return v.IpConfiguration }).(IPConfigurationResponsePtrOutput)
}

// Resource location.
func (o PublicIPAddressResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PublicIPAddressResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o PublicIPAddressResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o PublicIPAddressResponseOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.PublicIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the public IP resource.
func (o PublicIPAddressResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o PublicIPAddressResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o PublicIPAddressResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.Type }).(pulumi.StringOutput)
}

type PublicIPAddressResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressResponse)(nil)).Elem()
}

func (o PublicIPAddressResponsePtrOutput) ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput {
	return o
}

func (o PublicIPAddressResponsePtrOutput) ToPublicIPAddressResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressResponsePtrOutput {
	return o
}

func (o PublicIPAddressResponsePtrOutput) Elem() PublicIPAddressResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) PublicIPAddressResponse { return *v }).(PublicIPAddressResponseOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) DnsSettings() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *PublicIPAddressDnsSettingsResponse {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o PublicIPAddressResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressResponsePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

func (o PublicIPAddressResponsePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// IPConfiguration
func (o PublicIPAddressResponsePtrOutput) IpConfiguration() IPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *IPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfiguration
	}).(IPConfigurationResponsePtrOutput)
}

// Resource location.
func (o PublicIPAddressResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PublicIPAddressResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o PublicIPAddressResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o PublicIPAddressResponsePtrOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the public IP resource.
func (o PublicIPAddressResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o PublicIPAddressResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o PublicIPAddressResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Route resource
type RouteType struct {
	// The destination CIDR to which the route applies.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
	NextHopType string `pulumi:"nextHopType"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// RouteTypeInput is an input type that accepts RouteTypeArgs and RouteTypeOutput values.
// You can construct a concrete instance of `RouteTypeInput` via:
//
//          RouteTypeArgs{...}
type RouteTypeInput interface {
	pulumi.Input

	ToRouteTypeOutput() RouteTypeOutput
	ToRouteTypeOutputWithContext(context.Context) RouteTypeOutput
}

// Route resource
type RouteTypeArgs struct {
	// The destination CIDR to which the route applies.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (RouteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteType)(nil)).Elem()
}

func (i RouteTypeArgs) ToRouteTypeOutput() RouteTypeOutput {
	return i.ToRouteTypeOutputWithContext(context.Background())
}

func (i RouteTypeArgs) ToRouteTypeOutputWithContext(ctx context.Context) RouteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTypeOutput)
}

// RouteTypeArrayInput is an input type that accepts RouteTypeArray and RouteTypeArrayOutput values.
// You can construct a concrete instance of `RouteTypeArrayInput` via:
//
//          RouteTypeArray{ RouteTypeArgs{...} }
type RouteTypeArrayInput interface {
	pulumi.Input

	ToRouteTypeArrayOutput() RouteTypeArrayOutput
	ToRouteTypeArrayOutputWithContext(context.Context) RouteTypeArrayOutput
}

type RouteTypeArray []RouteTypeInput

func (RouteTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteType)(nil)).Elem()
}

func (i RouteTypeArray) ToRouteTypeArrayOutput() RouteTypeArrayOutput {
	return i.ToRouteTypeArrayOutputWithContext(context.Background())
}

func (i RouteTypeArray) ToRouteTypeArrayOutputWithContext(ctx context.Context) RouteTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTypeArrayOutput)
}

// Route resource
type RouteTypeOutput struct{ *pulumi.OutputState }

func (RouteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteType)(nil)).Elem()
}

func (o RouteTypeOutput) ToRouteTypeOutput() RouteTypeOutput {
	return o
}

func (o RouteTypeOutput) ToRouteTypeOutputWithContext(ctx context.Context) RouteTypeOutput {
	return o
}

// The destination CIDR to which the route applies.
func (o RouteTypeOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o RouteTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RouteTypeOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
func (o RouteTypeOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteType) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type RouteTypeArrayOutput struct{ *pulumi.OutputState }

func (RouteTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteType)(nil)).Elem()
}

func (o RouteTypeArrayOutput) ToRouteTypeArrayOutput() RouteTypeArrayOutput {
	return o
}

func (o RouteTypeArrayOutput) ToRouteTypeArrayOutputWithContext(ctx context.Context) RouteTypeArrayOutput {
	return o
}

func (o RouteTypeArrayOutput) Index(i pulumi.IntInput) RouteTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteType {
		return vs[0].([]RouteType)[vs[1].(int)]
	}).(RouteTypeOutput)
}

// Route resource
type RouteInvokeResponse struct {
	// The destination CIDR to which the route applies.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
	NextHopType string `pulumi:"nextHopType"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// RouteInvokeResponseInput is an input type that accepts RouteInvokeResponseArgs and RouteInvokeResponseOutput values.
// You can construct a concrete instance of `RouteInvokeResponseInput` via:
//
//          RouteInvokeResponseArgs{...}
type RouteInvokeResponseInput interface {
	pulumi.Input

	ToRouteInvokeResponseOutput() RouteInvokeResponseOutput
	ToRouteInvokeResponseOutputWithContext(context.Context) RouteInvokeResponseOutput
}

// Route resource
type RouteInvokeResponseArgs struct {
	// The destination CIDR to which the route applies.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (RouteInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteInvokeResponse)(nil)).Elem()
}

func (i RouteInvokeResponseArgs) ToRouteInvokeResponseOutput() RouteInvokeResponseOutput {
	return i.ToRouteInvokeResponseOutputWithContext(context.Background())
}

func (i RouteInvokeResponseArgs) ToRouteInvokeResponseOutputWithContext(ctx context.Context) RouteInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteInvokeResponseOutput)
}

// RouteInvokeResponseArrayInput is an input type that accepts RouteInvokeResponseArray and RouteInvokeResponseArrayOutput values.
// You can construct a concrete instance of `RouteInvokeResponseArrayInput` via:
//
//          RouteInvokeResponseArray{ RouteInvokeResponseArgs{...} }
type RouteInvokeResponseArrayInput interface {
	pulumi.Input

	ToRouteInvokeResponseArrayOutput() RouteInvokeResponseArrayOutput
	ToRouteInvokeResponseArrayOutputWithContext(context.Context) RouteInvokeResponseArrayOutput
}

type RouteInvokeResponseArray []RouteInvokeResponseInput

func (RouteInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteInvokeResponse)(nil)).Elem()
}

func (i RouteInvokeResponseArray) ToRouteInvokeResponseArrayOutput() RouteInvokeResponseArrayOutput {
	return i.ToRouteInvokeResponseArrayOutputWithContext(context.Background())
}

func (i RouteInvokeResponseArray) ToRouteInvokeResponseArrayOutputWithContext(ctx context.Context) RouteInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteInvokeResponseArrayOutput)
}

// Route resource
type RouteInvokeResponseOutput struct{ *pulumi.OutputState }

func (RouteInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteInvokeResponse)(nil)).Elem()
}

func (o RouteInvokeResponseOutput) ToRouteInvokeResponseOutput() RouteInvokeResponseOutput {
	return o
}

func (o RouteInvokeResponseOutput) ToRouteInvokeResponseOutputWithContext(ctx context.Context) RouteInvokeResponseOutput {
	return o
}

// The destination CIDR to which the route applies.
func (o RouteInvokeResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteInvokeResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o RouteInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RouteInvokeResponseOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteInvokeResponse) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
func (o RouteInvokeResponseOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteInvokeResponse) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type RouteInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (RouteInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteInvokeResponse)(nil)).Elem()
}

func (o RouteInvokeResponseArrayOutput) ToRouteInvokeResponseArrayOutput() RouteInvokeResponseArrayOutput {
	return o
}

func (o RouteInvokeResponseArrayOutput) ToRouteInvokeResponseArrayOutputWithContext(ctx context.Context) RouteInvokeResponseArrayOutput {
	return o
}

func (o RouteInvokeResponseArrayOutput) Index(i pulumi.IntInput) RouteInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteInvokeResponse {
		return vs[0].([]RouteInvokeResponse)[vs[1].(int)]
	}).(RouteInvokeResponseOutput)
}

// Route resource
type RouteResponse struct {
	// The destination CIDR to which the route applies.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
	NextHopType string `pulumi:"nextHopType"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// RouteResponseInput is an input type that accepts RouteResponseArgs and RouteResponseOutput values.
// You can construct a concrete instance of `RouteResponseInput` via:
//
//          RouteResponseArgs{...}
type RouteResponseInput interface {
	pulumi.Input

	ToRouteResponseOutput() RouteResponseOutput
	ToRouteResponseOutputWithContext(context.Context) RouteResponseOutput
}

// Route resource
type RouteResponseArgs struct {
	// The destination CIDR to which the route applies.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (RouteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteResponse)(nil)).Elem()
}

func (i RouteResponseArgs) ToRouteResponseOutput() RouteResponseOutput {
	return i.ToRouteResponseOutputWithContext(context.Background())
}

func (i RouteResponseArgs) ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteResponseOutput)
}

// RouteResponseArrayInput is an input type that accepts RouteResponseArray and RouteResponseArrayOutput values.
// You can construct a concrete instance of `RouteResponseArrayInput` via:
//
//          RouteResponseArray{ RouteResponseArgs{...} }
type RouteResponseArrayInput interface {
	pulumi.Input

	ToRouteResponseArrayOutput() RouteResponseArrayOutput
	ToRouteResponseArrayOutputWithContext(context.Context) RouteResponseArrayOutput
}

type RouteResponseArray []RouteResponseInput

func (RouteResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteResponse)(nil)).Elem()
}

func (i RouteResponseArray) ToRouteResponseArrayOutput() RouteResponseArrayOutput {
	return i.ToRouteResponseArrayOutputWithContext(context.Background())
}

func (i RouteResponseArray) ToRouteResponseArrayOutputWithContext(ctx context.Context) RouteResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteResponseArrayOutput)
}

// Route resource
type RouteResponseOutput struct{ *pulumi.OutputState }

func (RouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteResponse)(nil)).Elem()
}

func (o RouteResponseOutput) ToRouteResponseOutput() RouteResponseOutput {
	return o
}

func (o RouteResponseOutput) ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput {
	return o
}

// The destination CIDR to which the route applies.
func (o RouteResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o RouteResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RouteResponseOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
func (o RouteResponseOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type RouteResponseArrayOutput struct{ *pulumi.OutputState }

func (RouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteResponse)(nil)).Elem()
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutput() RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutputWithContext(ctx context.Context) RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) Index(i pulumi.IntInput) RouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteResponse {
		return vs[0].([]RouteResponse)[vs[1].(int)]
	}).(RouteResponseOutput)
}

// Route table resource.
type RouteTableType struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes []RouteType `pulumi:"routes"`
	// A collection of references to subnets.
	Subnets []SubnetType `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// RouteTableTypeInput is an input type that accepts RouteTableTypeArgs and RouteTableTypeOutput values.
// You can construct a concrete instance of `RouteTableTypeInput` via:
//
//          RouteTableTypeArgs{...}
type RouteTableTypeInput interface {
	pulumi.Input

	ToRouteTableTypeOutput() RouteTableTypeOutput
	ToRouteTableTypeOutputWithContext(context.Context) RouteTableTypeOutput
}

// Route table resource.
type RouteTableTypeArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes RouteTypeArrayInput `pulumi:"routes"`
	// A collection of references to subnets.
	Subnets SubnetTypeArrayInput `pulumi:"subnets"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (RouteTableTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableType)(nil)).Elem()
}

func (i RouteTableTypeArgs) ToRouteTableTypeOutput() RouteTableTypeOutput {
	return i.ToRouteTableTypeOutputWithContext(context.Background())
}

func (i RouteTableTypeArgs) ToRouteTableTypeOutputWithContext(ctx context.Context) RouteTableTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTypeOutput)
}

func (i RouteTableTypeArgs) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return i.ToRouteTableTypePtrOutputWithContext(context.Background())
}

func (i RouteTableTypeArgs) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTypeOutput).ToRouteTableTypePtrOutputWithContext(ctx)
}

// RouteTableTypePtrInput is an input type that accepts RouteTableTypeArgs, RouteTableTypePtr and RouteTableTypePtrOutput values.
// You can construct a concrete instance of `RouteTableTypePtrInput` via:
//
//          RouteTableTypeArgs{...}
//
//  or:
//
//          nil
type RouteTableTypePtrInput interface {
	pulumi.Input

	ToRouteTableTypePtrOutput() RouteTableTypePtrOutput
	ToRouteTableTypePtrOutputWithContext(context.Context) RouteTableTypePtrOutput
}

type routeTableTypePtrType RouteTableTypeArgs

func RouteTableTypePtr(v *RouteTableTypeArgs) RouteTableTypePtrInput {
	return (*routeTableTypePtrType)(v)
}

func (*routeTableTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableType)(nil)).Elem()
}

func (i *routeTableTypePtrType) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return i.ToRouteTableTypePtrOutputWithContext(context.Background())
}

func (i *routeTableTypePtrType) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTypePtrOutput)
}

// Route table resource.
type RouteTableTypeOutput struct{ *pulumi.OutputState }

func (RouteTableTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableType)(nil)).Elem()
}

func (o RouteTableTypeOutput) ToRouteTableTypeOutput() RouteTableTypeOutput {
	return o
}

func (o RouteTableTypeOutput) ToRouteTableTypeOutputWithContext(ctx context.Context) RouteTableTypeOutput {
	return o
}

func (o RouteTableTypeOutput) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return o.ToRouteTableTypePtrOutputWithContext(context.Background())
}

func (o RouteTableTypeOutput) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return o.ApplyT(func(v RouteTableType) *RouteTableType {
		return &v
	}).(RouteTableTypePtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteTableTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o RouteTableTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTableTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableTypeOutput) Routes() RouteTypeArrayOutput {
	return o.ApplyT(func(v RouteTableType) []RouteType { return v.Routes }).(RouteTypeArrayOutput)
}

// A collection of references to subnets.
func (o RouteTableTypeOutput) Subnets() SubnetTypeArrayOutput {
	return o.ApplyT(func(v RouteTableType) []SubnetType { return v.Subnets }).(SubnetTypeArrayOutput)
}

// Resource tags.
func (o RouteTableTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteTableType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type RouteTableTypePtrOutput struct{ *pulumi.OutputState }

func (RouteTableTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableType)(nil)).Elem()
}

func (o RouteTableTypePtrOutput) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return o
}

func (o RouteTableTypePtrOutput) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return o
}

func (o RouteTableTypePtrOutput) Elem() RouteTableTypeOutput {
	return o.ApplyT(func(v *RouteTableType) RouteTableType { return *v }).(RouteTableTypeOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteTableTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o RouteTableTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTableTypePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableTypePtrOutput) Routes() RouteTypeArrayOutput {
	return o.ApplyT(func(v *RouteTableType) []RouteType {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RouteTypeArrayOutput)
}

// A collection of references to subnets.
func (o RouteTableTypePtrOutput) Subnets() SubnetTypeArrayOutput {
	return o.ApplyT(func(v *RouteTableType) []SubnetType {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetTypeArrayOutput)
}

// Resource tags.
func (o RouteTableTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteTableType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Route table resource.
type RouteTableInvokeResponse struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes []RouteInvokeResponse `pulumi:"routes"`
	// A collection of references to subnets.
	Subnets []SubnetInvokeResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// RouteTableInvokeResponseInput is an input type that accepts RouteTableInvokeResponseArgs and RouteTableInvokeResponseOutput values.
// You can construct a concrete instance of `RouteTableInvokeResponseInput` via:
//
//          RouteTableInvokeResponseArgs{...}
type RouteTableInvokeResponseInput interface {
	pulumi.Input

	ToRouteTableInvokeResponseOutput() RouteTableInvokeResponseOutput
	ToRouteTableInvokeResponseOutputWithContext(context.Context) RouteTableInvokeResponseOutput
}

// Route table resource.
type RouteTableInvokeResponseArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes RouteInvokeResponseArrayInput `pulumi:"routes"`
	// A collection of references to subnets.
	Subnets SubnetInvokeResponseArrayInput `pulumi:"subnets"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RouteTableInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableInvokeResponse)(nil)).Elem()
}

func (i RouteTableInvokeResponseArgs) ToRouteTableInvokeResponseOutput() RouteTableInvokeResponseOutput {
	return i.ToRouteTableInvokeResponseOutputWithContext(context.Background())
}

func (i RouteTableInvokeResponseArgs) ToRouteTableInvokeResponseOutputWithContext(ctx context.Context) RouteTableInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableInvokeResponseOutput)
}

func (i RouteTableInvokeResponseArgs) ToRouteTableInvokeResponsePtrOutput() RouteTableInvokeResponsePtrOutput {
	return i.ToRouteTableInvokeResponsePtrOutputWithContext(context.Background())
}

func (i RouteTableInvokeResponseArgs) ToRouteTableInvokeResponsePtrOutputWithContext(ctx context.Context) RouteTableInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableInvokeResponseOutput).ToRouteTableInvokeResponsePtrOutputWithContext(ctx)
}

// RouteTableInvokeResponsePtrInput is an input type that accepts RouteTableInvokeResponseArgs, RouteTableInvokeResponsePtr and RouteTableInvokeResponsePtrOutput values.
// You can construct a concrete instance of `RouteTableInvokeResponsePtrInput` via:
//
//          RouteTableInvokeResponseArgs{...}
//
//  or:
//
//          nil
type RouteTableInvokeResponsePtrInput interface {
	pulumi.Input

	ToRouteTableInvokeResponsePtrOutput() RouteTableInvokeResponsePtrOutput
	ToRouteTableInvokeResponsePtrOutputWithContext(context.Context) RouteTableInvokeResponsePtrOutput
}

type routeTableInvokeResponsePtrType RouteTableInvokeResponseArgs

func RouteTableInvokeResponsePtr(v *RouteTableInvokeResponseArgs) RouteTableInvokeResponsePtrInput {
	return (*routeTableInvokeResponsePtrType)(v)
}

func (*routeTableInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableInvokeResponse)(nil)).Elem()
}

func (i *routeTableInvokeResponsePtrType) ToRouteTableInvokeResponsePtrOutput() RouteTableInvokeResponsePtrOutput {
	return i.ToRouteTableInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *routeTableInvokeResponsePtrType) ToRouteTableInvokeResponsePtrOutputWithContext(ctx context.Context) RouteTableInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableInvokeResponsePtrOutput)
}

// Route table resource.
type RouteTableInvokeResponseOutput struct{ *pulumi.OutputState }

func (RouteTableInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableInvokeResponse)(nil)).Elem()
}

func (o RouteTableInvokeResponseOutput) ToRouteTableInvokeResponseOutput() RouteTableInvokeResponseOutput {
	return o
}

func (o RouteTableInvokeResponseOutput) ToRouteTableInvokeResponseOutputWithContext(ctx context.Context) RouteTableInvokeResponseOutput {
	return o
}

func (o RouteTableInvokeResponseOutput) ToRouteTableInvokeResponsePtrOutput() RouteTableInvokeResponsePtrOutput {
	return o.ToRouteTableInvokeResponsePtrOutputWithContext(context.Background())
}

func (o RouteTableInvokeResponseOutput) ToRouteTableInvokeResponsePtrOutputWithContext(ctx context.Context) RouteTableInvokeResponsePtrOutput {
	return o.ApplyT(func(v RouteTableInvokeResponse) *RouteTableInvokeResponse {
		return &v
	}).(RouteTableInvokeResponsePtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteTableInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o RouteTableInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableInvokeResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableInvokeResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteTableInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTableInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableInvokeResponseOutput) Routes() RouteInvokeResponseArrayOutput {
	return o.ApplyT(func(v RouteTableInvokeResponse) []RouteInvokeResponse { return v.Routes }).(RouteInvokeResponseArrayOutput)
}

// A collection of references to subnets.
func (o RouteTableInvokeResponseOutput) Subnets() SubnetInvokeResponseArrayOutput {
	return o.ApplyT(func(v RouteTableInvokeResponse) []SubnetInvokeResponse { return v.Subnets }).(SubnetInvokeResponseArrayOutput)
}

// Resource tags.
func (o RouteTableInvokeResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteTableInvokeResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteTableInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

type RouteTableInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (RouteTableInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableInvokeResponse)(nil)).Elem()
}

func (o RouteTableInvokeResponsePtrOutput) ToRouteTableInvokeResponsePtrOutput() RouteTableInvokeResponsePtrOutput {
	return o
}

func (o RouteTableInvokeResponsePtrOutput) ToRouteTableInvokeResponsePtrOutputWithContext(ctx context.Context) RouteTableInvokeResponsePtrOutput {
	return o
}

func (o RouteTableInvokeResponsePtrOutput) Elem() RouteTableInvokeResponseOutput {
	return o.ApplyT(func(v *RouteTableInvokeResponse) RouteTableInvokeResponse { return *v }).(RouteTableInvokeResponseOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteTableInvokeResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o RouteTableInvokeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableInvokeResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteTableInvokeResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTableInvokeResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableInvokeResponsePtrOutput) Routes() RouteInvokeResponseArrayOutput {
	return o.ApplyT(func(v *RouteTableInvokeResponse) []RouteInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RouteInvokeResponseArrayOutput)
}

// A collection of references to subnets.
func (o RouteTableInvokeResponsePtrOutput) Subnets() SubnetInvokeResponseArrayOutput {
	return o.ApplyT(func(v *RouteTableInvokeResponse) []SubnetInvokeResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetInvokeResponseArrayOutput)
}

// Resource tags.
func (o RouteTableInvokeResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteTableInvokeResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteTableInvokeResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Route table resource.
type RouteTableResponse struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes []RouteResponse `pulumi:"routes"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// RouteTableResponseInput is an input type that accepts RouteTableResponseArgs and RouteTableResponseOutput values.
// You can construct a concrete instance of `RouteTableResponseInput` via:
//
//          RouteTableResponseArgs{...}
type RouteTableResponseInput interface {
	pulumi.Input

	ToRouteTableResponseOutput() RouteTableResponseOutput
	ToRouteTableResponseOutputWithContext(context.Context) RouteTableResponseOutput
}

// Route table resource.
type RouteTableResponseArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes RouteResponseArrayInput `pulumi:"routes"`
	// A collection of references to subnets.
	Subnets SubnetResponseArrayInput `pulumi:"subnets"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RouteTableResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableResponse)(nil)).Elem()
}

func (i RouteTableResponseArgs) ToRouteTableResponseOutput() RouteTableResponseOutput {
	return i.ToRouteTableResponseOutputWithContext(context.Background())
}

func (i RouteTableResponseArgs) ToRouteTableResponseOutputWithContext(ctx context.Context) RouteTableResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableResponseOutput)
}

func (i RouteTableResponseArgs) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return i.ToRouteTableResponsePtrOutputWithContext(context.Background())
}

func (i RouteTableResponseArgs) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableResponseOutput).ToRouteTableResponsePtrOutputWithContext(ctx)
}

// RouteTableResponsePtrInput is an input type that accepts RouteTableResponseArgs, RouteTableResponsePtr and RouteTableResponsePtrOutput values.
// You can construct a concrete instance of `RouteTableResponsePtrInput` via:
//
//          RouteTableResponseArgs{...}
//
//  or:
//
//          nil
type RouteTableResponsePtrInput interface {
	pulumi.Input

	ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput
	ToRouteTableResponsePtrOutputWithContext(context.Context) RouteTableResponsePtrOutput
}

type routeTableResponsePtrType RouteTableResponseArgs

func RouteTableResponsePtr(v *RouteTableResponseArgs) RouteTableResponsePtrInput {
	return (*routeTableResponsePtrType)(v)
}

func (*routeTableResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableResponse)(nil)).Elem()
}

func (i *routeTableResponsePtrType) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return i.ToRouteTableResponsePtrOutputWithContext(context.Background())
}

func (i *routeTableResponsePtrType) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableResponsePtrOutput)
}

// Route table resource.
type RouteTableResponseOutput struct{ *pulumi.OutputState }

func (RouteTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableResponse)(nil)).Elem()
}

func (o RouteTableResponseOutput) ToRouteTableResponseOutput() RouteTableResponseOutput {
	return o
}

func (o RouteTableResponseOutput) ToRouteTableResponseOutputWithContext(ctx context.Context) RouteTableResponseOutput {
	return o
}

func (o RouteTableResponseOutput) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return o.ToRouteTableResponsePtrOutputWithContext(context.Background())
}

func (o RouteTableResponseOutput) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *RouteTableResponse {
		return &v
	}).(RouteTableResponsePtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteTableResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o RouteTableResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteTableResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTableResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableResponseOutput) Routes() RouteResponseArrayOutput {
	return o.ApplyT(func(v RouteTableResponse) []RouteResponse { return v.Routes }).(RouteResponseArrayOutput)
}

// A collection of references to subnets.
func (o RouteTableResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v RouteTableResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o RouteTableResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteTableResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteTableResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Type }).(pulumi.StringOutput)
}

type RouteTableResponsePtrOutput struct{ *pulumi.OutputState }

func (RouteTableResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableResponse)(nil)).Elem()
}

func (o RouteTableResponsePtrOutput) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return o
}

func (o RouteTableResponsePtrOutput) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return o
}

func (o RouteTableResponsePtrOutput) Elem() RouteTableResponseOutput {
	return o.ApplyT(func(v *RouteTableResponse) RouteTableResponse { return *v }).(RouteTableResponseOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteTableResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o RouteTableResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteTableResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTableResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableResponsePtrOutput) Routes() RouteResponseArrayOutput {
	return o.ApplyT(func(v *RouteTableResponse) []RouteResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RouteResponseArrayOutput)
}

// A collection of references to subnets.
func (o RouteTableResponsePtrOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v *RouteTableResponse) []SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o RouteTableResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteTableResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteTableResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Network security rule.
type SecurityRuleType struct {
	// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
	Access string `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination address prefix. CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix string `pulumi:"destinationAddressPrefix"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
	Direction string `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix string `pulumi:"sourceAddressPrefix"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
}

// SecurityRuleTypeInput is an input type that accepts SecurityRuleTypeArgs and SecurityRuleTypeOutput values.
// You can construct a concrete instance of `SecurityRuleTypeInput` via:
//
//          SecurityRuleTypeArgs{...}
type SecurityRuleTypeInput interface {
	pulumi.Input

	ToSecurityRuleTypeOutput() SecurityRuleTypeOutput
	ToSecurityRuleTypeOutputWithContext(context.Context) SecurityRuleTypeOutput
}

// Network security rule.
type SecurityRuleTypeArgs struct {
	// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
	Access pulumi.StringInput `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The destination address prefix. CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix pulumi.StringInput `pulumi:"destinationAddressPrefix"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange pulumi.StringPtrInput `pulumi:"destinationPortRange"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
	Direction pulumi.StringInput `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix pulumi.StringInput `pulumi:"sourceAddressPrefix"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange pulumi.StringPtrInput `pulumi:"sourcePortRange"`
}

func (SecurityRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleType)(nil)).Elem()
}

func (i SecurityRuleTypeArgs) ToSecurityRuleTypeOutput() SecurityRuleTypeOutput {
	return i.ToSecurityRuleTypeOutputWithContext(context.Background())
}

func (i SecurityRuleTypeArgs) ToSecurityRuleTypeOutputWithContext(ctx context.Context) SecurityRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleTypeOutput)
}

// SecurityRuleTypeArrayInput is an input type that accepts SecurityRuleTypeArray and SecurityRuleTypeArrayOutput values.
// You can construct a concrete instance of `SecurityRuleTypeArrayInput` via:
//
//          SecurityRuleTypeArray{ SecurityRuleTypeArgs{...} }
type SecurityRuleTypeArrayInput interface {
	pulumi.Input

	ToSecurityRuleTypeArrayOutput() SecurityRuleTypeArrayOutput
	ToSecurityRuleTypeArrayOutputWithContext(context.Context) SecurityRuleTypeArrayOutput
}

type SecurityRuleTypeArray []SecurityRuleTypeInput

func (SecurityRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleType)(nil)).Elem()
}

func (i SecurityRuleTypeArray) ToSecurityRuleTypeArrayOutput() SecurityRuleTypeArrayOutput {
	return i.ToSecurityRuleTypeArrayOutputWithContext(context.Background())
}

func (i SecurityRuleTypeArray) ToSecurityRuleTypeArrayOutputWithContext(ctx context.Context) SecurityRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleTypeArrayOutput)
}

// Network security rule.
type SecurityRuleTypeOutput struct{ *pulumi.OutputState }

func (SecurityRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleType)(nil)).Elem()
}

func (o SecurityRuleTypeOutput) ToSecurityRuleTypeOutput() SecurityRuleTypeOutput {
	return o
}

func (o SecurityRuleTypeOutput) ToSecurityRuleTypeOutputWithContext(ctx context.Context) SecurityRuleTypeOutput {
	return o
}

// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
func (o SecurityRuleTypeOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleType) string { return v.Access }).(pulumi.StringOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o SecurityRuleTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination address prefix. CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
func (o SecurityRuleTypeOutput) DestinationAddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleType) string { return v.DestinationAddressPrefix }).(pulumi.StringOutput)
}

// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleTypeOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
func (o SecurityRuleTypeOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleType) string { return v.Direction }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SecurityRuleTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o SecurityRuleTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SecurityRuleTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o SecurityRuleTypeOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
func (o SecurityRuleTypeOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleType) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o SecurityRuleTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
func (o SecurityRuleTypeOutput) SourceAddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleType) string { return v.SourceAddressPrefix }).(pulumi.StringOutput)
}

// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleTypeOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

type SecurityRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (SecurityRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleType)(nil)).Elem()
}

func (o SecurityRuleTypeArrayOutput) ToSecurityRuleTypeArrayOutput() SecurityRuleTypeArrayOutput {
	return o
}

func (o SecurityRuleTypeArrayOutput) ToSecurityRuleTypeArrayOutputWithContext(ctx context.Context) SecurityRuleTypeArrayOutput {
	return o
}

func (o SecurityRuleTypeArrayOutput) Index(i pulumi.IntInput) SecurityRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityRuleType {
		return vs[0].([]SecurityRuleType)[vs[1].(int)]
	}).(SecurityRuleTypeOutput)
}

// Network security rule.
type SecurityRuleInvokeResponse struct {
	// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
	Access string `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination address prefix. CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix string `pulumi:"destinationAddressPrefix"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
	Direction string `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix string `pulumi:"sourceAddressPrefix"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
}

// SecurityRuleInvokeResponseInput is an input type that accepts SecurityRuleInvokeResponseArgs and SecurityRuleInvokeResponseOutput values.
// You can construct a concrete instance of `SecurityRuleInvokeResponseInput` via:
//
//          SecurityRuleInvokeResponseArgs{...}
type SecurityRuleInvokeResponseInput interface {
	pulumi.Input

	ToSecurityRuleInvokeResponseOutput() SecurityRuleInvokeResponseOutput
	ToSecurityRuleInvokeResponseOutputWithContext(context.Context) SecurityRuleInvokeResponseOutput
}

// Network security rule.
type SecurityRuleInvokeResponseArgs struct {
	// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
	Access pulumi.StringInput `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The destination address prefix. CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix pulumi.StringInput `pulumi:"destinationAddressPrefix"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange pulumi.StringPtrInput `pulumi:"destinationPortRange"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
	Direction pulumi.StringInput `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix pulumi.StringInput `pulumi:"sourceAddressPrefix"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange pulumi.StringPtrInput `pulumi:"sourcePortRange"`
}

func (SecurityRuleInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleInvokeResponse)(nil)).Elem()
}

func (i SecurityRuleInvokeResponseArgs) ToSecurityRuleInvokeResponseOutput() SecurityRuleInvokeResponseOutput {
	return i.ToSecurityRuleInvokeResponseOutputWithContext(context.Background())
}

func (i SecurityRuleInvokeResponseArgs) ToSecurityRuleInvokeResponseOutputWithContext(ctx context.Context) SecurityRuleInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleInvokeResponseOutput)
}

// SecurityRuleInvokeResponseArrayInput is an input type that accepts SecurityRuleInvokeResponseArray and SecurityRuleInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SecurityRuleInvokeResponseArrayInput` via:
//
//          SecurityRuleInvokeResponseArray{ SecurityRuleInvokeResponseArgs{...} }
type SecurityRuleInvokeResponseArrayInput interface {
	pulumi.Input

	ToSecurityRuleInvokeResponseArrayOutput() SecurityRuleInvokeResponseArrayOutput
	ToSecurityRuleInvokeResponseArrayOutputWithContext(context.Context) SecurityRuleInvokeResponseArrayOutput
}

type SecurityRuleInvokeResponseArray []SecurityRuleInvokeResponseInput

func (SecurityRuleInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleInvokeResponse)(nil)).Elem()
}

func (i SecurityRuleInvokeResponseArray) ToSecurityRuleInvokeResponseArrayOutput() SecurityRuleInvokeResponseArrayOutput {
	return i.ToSecurityRuleInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SecurityRuleInvokeResponseArray) ToSecurityRuleInvokeResponseArrayOutputWithContext(ctx context.Context) SecurityRuleInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleInvokeResponseArrayOutput)
}

// Network security rule.
type SecurityRuleInvokeResponseOutput struct{ *pulumi.OutputState }

func (SecurityRuleInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleInvokeResponse)(nil)).Elem()
}

func (o SecurityRuleInvokeResponseOutput) ToSecurityRuleInvokeResponseOutput() SecurityRuleInvokeResponseOutput {
	return o
}

func (o SecurityRuleInvokeResponseOutput) ToSecurityRuleInvokeResponseOutputWithContext(ctx context.Context) SecurityRuleInvokeResponseOutput {
	return o
}

// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
func (o SecurityRuleInvokeResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleInvokeResponse) string { return v.Access }).(pulumi.StringOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o SecurityRuleInvokeResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleInvokeResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination address prefix. CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
func (o SecurityRuleInvokeResponseOutput) DestinationAddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleInvokeResponse) string { return v.DestinationAddressPrefix }).(pulumi.StringOutput)
}

// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleInvokeResponseOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleInvokeResponse) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
func (o SecurityRuleInvokeResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleInvokeResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SecurityRuleInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o SecurityRuleInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SecurityRuleInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o SecurityRuleInvokeResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityRuleInvokeResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
func (o SecurityRuleInvokeResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleInvokeResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o SecurityRuleInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
func (o SecurityRuleInvokeResponseOutput) SourceAddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleInvokeResponse) string { return v.SourceAddressPrefix }).(pulumi.StringOutput)
}

// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleInvokeResponseOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleInvokeResponse) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

type SecurityRuleInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityRuleInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleInvokeResponse)(nil)).Elem()
}

func (o SecurityRuleInvokeResponseArrayOutput) ToSecurityRuleInvokeResponseArrayOutput() SecurityRuleInvokeResponseArrayOutput {
	return o
}

func (o SecurityRuleInvokeResponseArrayOutput) ToSecurityRuleInvokeResponseArrayOutputWithContext(ctx context.Context) SecurityRuleInvokeResponseArrayOutput {
	return o
}

func (o SecurityRuleInvokeResponseArrayOutput) Index(i pulumi.IntInput) SecurityRuleInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityRuleInvokeResponse {
		return vs[0].([]SecurityRuleInvokeResponse)[vs[1].(int)]
	}).(SecurityRuleInvokeResponseOutput)
}

// Network security rule.
type SecurityRuleResponse struct {
	// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
	Access string `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination address prefix. CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix string `pulumi:"destinationAddressPrefix"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
	Direction string `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix string `pulumi:"sourceAddressPrefix"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
}

// SecurityRuleResponseInput is an input type that accepts SecurityRuleResponseArgs and SecurityRuleResponseOutput values.
// You can construct a concrete instance of `SecurityRuleResponseInput` via:
//
//          SecurityRuleResponseArgs{...}
type SecurityRuleResponseInput interface {
	pulumi.Input

	ToSecurityRuleResponseOutput() SecurityRuleResponseOutput
	ToSecurityRuleResponseOutputWithContext(context.Context) SecurityRuleResponseOutput
}

// Network security rule.
type SecurityRuleResponseArgs struct {
	// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
	Access pulumi.StringInput `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The destination address prefix. CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix pulumi.StringInput `pulumi:"destinationAddressPrefix"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange pulumi.StringPtrInput `pulumi:"destinationPortRange"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
	Direction pulumi.StringInput `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix pulumi.StringInput `pulumi:"sourceAddressPrefix"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange pulumi.StringPtrInput `pulumi:"sourcePortRange"`
}

func (SecurityRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleResponse)(nil)).Elem()
}

func (i SecurityRuleResponseArgs) ToSecurityRuleResponseOutput() SecurityRuleResponseOutput {
	return i.ToSecurityRuleResponseOutputWithContext(context.Background())
}

func (i SecurityRuleResponseArgs) ToSecurityRuleResponseOutputWithContext(ctx context.Context) SecurityRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleResponseOutput)
}

// SecurityRuleResponseArrayInput is an input type that accepts SecurityRuleResponseArray and SecurityRuleResponseArrayOutput values.
// You can construct a concrete instance of `SecurityRuleResponseArrayInput` via:
//
//          SecurityRuleResponseArray{ SecurityRuleResponseArgs{...} }
type SecurityRuleResponseArrayInput interface {
	pulumi.Input

	ToSecurityRuleResponseArrayOutput() SecurityRuleResponseArrayOutput
	ToSecurityRuleResponseArrayOutputWithContext(context.Context) SecurityRuleResponseArrayOutput
}

type SecurityRuleResponseArray []SecurityRuleResponseInput

func (SecurityRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleResponse)(nil)).Elem()
}

func (i SecurityRuleResponseArray) ToSecurityRuleResponseArrayOutput() SecurityRuleResponseArrayOutput {
	return i.ToSecurityRuleResponseArrayOutputWithContext(context.Background())
}

func (i SecurityRuleResponseArray) ToSecurityRuleResponseArrayOutputWithContext(ctx context.Context) SecurityRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleResponseArrayOutput)
}

// Network security rule.
type SecurityRuleResponseOutput struct{ *pulumi.OutputState }

func (SecurityRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleResponse)(nil)).Elem()
}

func (o SecurityRuleResponseOutput) ToSecurityRuleResponseOutput() SecurityRuleResponseOutput {
	return o
}

func (o SecurityRuleResponseOutput) ToSecurityRuleResponseOutputWithContext(ctx context.Context) SecurityRuleResponseOutput {
	return o
}

// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
func (o SecurityRuleResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Access }).(pulumi.StringOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o SecurityRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination address prefix. CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
func (o SecurityRuleResponseOutput) DestinationAddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.DestinationAddressPrefix }).(pulumi.StringOutput)
}

// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleResponseOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
func (o SecurityRuleResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SecurityRuleResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o SecurityRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SecurityRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o SecurityRuleResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
func (o SecurityRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o SecurityRuleResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
func (o SecurityRuleResponseOutput) SourceAddressPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.SourceAddressPrefix }).(pulumi.StringOutput)
}

// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleResponseOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

type SecurityRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleResponse)(nil)).Elem()
}

func (o SecurityRuleResponseArrayOutput) ToSecurityRuleResponseArrayOutput() SecurityRuleResponseArrayOutput {
	return o
}

func (o SecurityRuleResponseArrayOutput) ToSecurityRuleResponseArrayOutputWithContext(ctx context.Context) SecurityRuleResponseArrayOutput {
	return o
}

func (o SecurityRuleResponseArrayOutput) Index(i pulumi.IntInput) SecurityRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityRuleResponse {
		return vs[0].([]SecurityRuleResponse)[vs[1].(int)]
	}).(SecurityRuleResponseOutput)
}

// Azure resource manager sub resource properties.
type SubResource struct {
	// Resource Identifier.
	Id *string `pulumi:"id"`
}

// SubResourceInput is an input type that accepts SubResourceArgs and SubResourceOutput values.
// You can construct a concrete instance of `SubResourceInput` via:
//
//          SubResourceArgs{...}
type SubResourceInput interface {
	pulumi.Input

	ToSubResourceOutput() SubResourceOutput
	ToSubResourceOutputWithContext(context.Context) SubResourceOutput
}

// Azure resource manager sub resource properties.
type SubResourceArgs struct {
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (i SubResourceArgs) ToSubResourceOutput() SubResourceOutput {
	return i.ToSubResourceOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput)
}

func (i SubResourceArgs) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput).ToSubResourcePtrOutputWithContext(ctx)
}

// SubResourcePtrInput is an input type that accepts SubResourceArgs, SubResourcePtr and SubResourcePtrOutput values.
// You can construct a concrete instance of `SubResourcePtrInput` via:
//
//          SubResourceArgs{...}
//
//  or:
//
//          nil
type SubResourcePtrInput interface {
	pulumi.Input

	ToSubResourcePtrOutput() SubResourcePtrOutput
	ToSubResourcePtrOutputWithContext(context.Context) SubResourcePtrOutput
}

type subResourcePtrType SubResourceArgs

func SubResourcePtr(v *SubResourceArgs) SubResourcePtrInput {
	return (*subResourcePtrType)(v)
}

func (*subResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (i *subResourcePtrType) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i *subResourcePtrType) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourcePtrOutput)
}

// SubResourceArrayInput is an input type that accepts SubResourceArray and SubResourceArrayOutput values.
// You can construct a concrete instance of `SubResourceArrayInput` via:
//
//          SubResourceArray{ SubResourceArgs{...} }
type SubResourceArrayInput interface {
	pulumi.Input

	ToSubResourceArrayOutput() SubResourceArrayOutput
	ToSubResourceArrayOutputWithContext(context.Context) SubResourceArrayOutput
}

type SubResourceArray []SubResourceInput

func (SubResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (i SubResourceArray) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return i.ToSubResourceArrayOutputWithContext(context.Background())
}

func (i SubResourceArray) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceArrayOutput)
}

// Azure resource manager sub resource properties.
type SubResourceOutput struct{ *pulumi.OutputState }

func (SubResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (o SubResourceOutput) ToSubResourceOutput() SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o.ToSubResourcePtrOutputWithContext(context.Background())
}

func (o SubResourceOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o.ApplyT(func(v SubResource) *SubResource {
		return &v
	}).(SubResourcePtrOutput)
}

// Resource Identifier.
func (o SubResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourcePtrOutput struct{ *pulumi.OutputState }

func (SubResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) Elem() SubResourceOutput {
	return o.ApplyT(func(v *SubResource) SubResource { return *v }).(SubResourceOutput)
}

// Resource Identifier.
func (o SubResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceArrayOutput struct{ *pulumi.OutputState }

func (SubResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) Index(i pulumi.IntInput) SubResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResource {
		return vs[0].([]SubResource)[vs[1].(int)]
	}).(SubResourceOutput)
}

// Azure resource manager sub resource properties.
type SubResourceInvokeResponse struct {
	// Resource Identifier.
	Id *string `pulumi:"id"`
}

// SubResourceInvokeResponseInput is an input type that accepts SubResourceInvokeResponseArgs and SubResourceInvokeResponseOutput values.
// You can construct a concrete instance of `SubResourceInvokeResponseInput` via:
//
//          SubResourceInvokeResponseArgs{...}
type SubResourceInvokeResponseInput interface {
	pulumi.Input

	ToSubResourceInvokeResponseOutput() SubResourceInvokeResponseOutput
	ToSubResourceInvokeResponseOutputWithContext(context.Context) SubResourceInvokeResponseOutput
}

// Azure resource manager sub resource properties.
type SubResourceInvokeResponseArgs struct {
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubResourceInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceInvokeResponse)(nil)).Elem()
}

func (i SubResourceInvokeResponseArgs) ToSubResourceInvokeResponseOutput() SubResourceInvokeResponseOutput {
	return i.ToSubResourceInvokeResponseOutputWithContext(context.Background())
}

func (i SubResourceInvokeResponseArgs) ToSubResourceInvokeResponseOutputWithContext(ctx context.Context) SubResourceInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceInvokeResponseOutput)
}

func (i SubResourceInvokeResponseArgs) ToSubResourceInvokeResponsePtrOutput() SubResourceInvokeResponsePtrOutput {
	return i.ToSubResourceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SubResourceInvokeResponseArgs) ToSubResourceInvokeResponsePtrOutputWithContext(ctx context.Context) SubResourceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceInvokeResponseOutput).ToSubResourceInvokeResponsePtrOutputWithContext(ctx)
}

// SubResourceInvokeResponsePtrInput is an input type that accepts SubResourceInvokeResponseArgs, SubResourceInvokeResponsePtr and SubResourceInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SubResourceInvokeResponsePtrInput` via:
//
//          SubResourceInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SubResourceInvokeResponsePtrInput interface {
	pulumi.Input

	ToSubResourceInvokeResponsePtrOutput() SubResourceInvokeResponsePtrOutput
	ToSubResourceInvokeResponsePtrOutputWithContext(context.Context) SubResourceInvokeResponsePtrOutput
}

type subResourceInvokeResponsePtrType SubResourceInvokeResponseArgs

func SubResourceInvokeResponsePtr(v *SubResourceInvokeResponseArgs) SubResourceInvokeResponsePtrInput {
	return (*subResourceInvokeResponsePtrType)(v)
}

func (*subResourceInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceInvokeResponse)(nil)).Elem()
}

func (i *subResourceInvokeResponsePtrType) ToSubResourceInvokeResponsePtrOutput() SubResourceInvokeResponsePtrOutput {
	return i.ToSubResourceInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *subResourceInvokeResponsePtrType) ToSubResourceInvokeResponsePtrOutputWithContext(ctx context.Context) SubResourceInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceInvokeResponsePtrOutput)
}

// SubResourceInvokeResponseArrayInput is an input type that accepts SubResourceInvokeResponseArray and SubResourceInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SubResourceInvokeResponseArrayInput` via:
//
//          SubResourceInvokeResponseArray{ SubResourceInvokeResponseArgs{...} }
type SubResourceInvokeResponseArrayInput interface {
	pulumi.Input

	ToSubResourceInvokeResponseArrayOutput() SubResourceInvokeResponseArrayOutput
	ToSubResourceInvokeResponseArrayOutputWithContext(context.Context) SubResourceInvokeResponseArrayOutput
}

type SubResourceInvokeResponseArray []SubResourceInvokeResponseInput

func (SubResourceInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceInvokeResponse)(nil)).Elem()
}

func (i SubResourceInvokeResponseArray) ToSubResourceInvokeResponseArrayOutput() SubResourceInvokeResponseArrayOutput {
	return i.ToSubResourceInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SubResourceInvokeResponseArray) ToSubResourceInvokeResponseArrayOutputWithContext(ctx context.Context) SubResourceInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceInvokeResponseArrayOutput)
}

// Azure resource manager sub resource properties.
type SubResourceInvokeResponseOutput struct{ *pulumi.OutputState }

func (SubResourceInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceInvokeResponse)(nil)).Elem()
}

func (o SubResourceInvokeResponseOutput) ToSubResourceInvokeResponseOutput() SubResourceInvokeResponseOutput {
	return o
}

func (o SubResourceInvokeResponseOutput) ToSubResourceInvokeResponseOutputWithContext(ctx context.Context) SubResourceInvokeResponseOutput {
	return o
}

func (o SubResourceInvokeResponseOutput) ToSubResourceInvokeResponsePtrOutput() SubResourceInvokeResponsePtrOutput {
	return o.ToSubResourceInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SubResourceInvokeResponseOutput) ToSubResourceInvokeResponsePtrOutputWithContext(ctx context.Context) SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v SubResourceInvokeResponse) *SubResourceInvokeResponse {
		return &v
	}).(SubResourceInvokeResponsePtrOutput)
}

// Resource Identifier.
func (o SubResourceInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResourceInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourceInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SubResourceInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceInvokeResponse)(nil)).Elem()
}

func (o SubResourceInvokeResponsePtrOutput) ToSubResourceInvokeResponsePtrOutput() SubResourceInvokeResponsePtrOutput {
	return o
}

func (o SubResourceInvokeResponsePtrOutput) ToSubResourceInvokeResponsePtrOutputWithContext(ctx context.Context) SubResourceInvokeResponsePtrOutput {
	return o
}

func (o SubResourceInvokeResponsePtrOutput) Elem() SubResourceInvokeResponseOutput {
	return o.ApplyT(func(v *SubResourceInvokeResponse) SubResourceInvokeResponse { return *v }).(SubResourceInvokeResponseOutput)
}

// Resource Identifier.
func (o SubResourceInvokeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResourceInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SubResourceInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceInvokeResponse)(nil)).Elem()
}

func (o SubResourceInvokeResponseArrayOutput) ToSubResourceInvokeResponseArrayOutput() SubResourceInvokeResponseArrayOutput {
	return o
}

func (o SubResourceInvokeResponseArrayOutput) ToSubResourceInvokeResponseArrayOutputWithContext(ctx context.Context) SubResourceInvokeResponseArrayOutput {
	return o
}

func (o SubResourceInvokeResponseArrayOutput) Index(i pulumi.IntInput) SubResourceInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResourceInvokeResponse {
		return vs[0].([]SubResourceInvokeResponse)[vs[1].(int)]
	}).(SubResourceInvokeResponseOutput)
}

// Azure resource manager sub resource properties.
type SubResourceResponse struct {
	// Resource Identifier.
	Id *string `pulumi:"id"`
}

// SubResourceResponseInput is an input type that accepts SubResourceResponseArgs and SubResourceResponseOutput values.
// You can construct a concrete instance of `SubResourceResponseInput` via:
//
//          SubResourceResponseArgs{...}
type SubResourceResponseInput interface {
	pulumi.Input

	ToSubResourceResponseOutput() SubResourceResponseOutput
	ToSubResourceResponseOutputWithContext(context.Context) SubResourceResponseOutput
}

// Azure resource manager sub resource properties.
type SubResourceResponseArgs struct {
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubResourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceResponse)(nil)).Elem()
}

func (i SubResourceResponseArgs) ToSubResourceResponseOutput() SubResourceResponseOutput {
	return i.ToSubResourceResponseOutputWithContext(context.Background())
}

func (i SubResourceResponseArgs) ToSubResourceResponseOutputWithContext(ctx context.Context) SubResourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponseOutput)
}

func (i SubResourceResponseArgs) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return i.ToSubResourceResponsePtrOutputWithContext(context.Background())
}

func (i SubResourceResponseArgs) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponseOutput).ToSubResourceResponsePtrOutputWithContext(ctx)
}

// SubResourceResponsePtrInput is an input type that accepts SubResourceResponseArgs, SubResourceResponsePtr and SubResourceResponsePtrOutput values.
// You can construct a concrete instance of `SubResourceResponsePtrInput` via:
//
//          SubResourceResponseArgs{...}
//
//  or:
//
//          nil
type SubResourceResponsePtrInput interface {
	pulumi.Input

	ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput
	ToSubResourceResponsePtrOutputWithContext(context.Context) SubResourceResponsePtrOutput
}

type subResourceResponsePtrType SubResourceResponseArgs

func SubResourceResponsePtr(v *SubResourceResponseArgs) SubResourceResponsePtrInput {
	return (*subResourceResponsePtrType)(v)
}

func (*subResourceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceResponse)(nil)).Elem()
}

func (i *subResourceResponsePtrType) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return i.ToSubResourceResponsePtrOutputWithContext(context.Background())
}

func (i *subResourceResponsePtrType) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponsePtrOutput)
}

// SubResourceResponseArrayInput is an input type that accepts SubResourceResponseArray and SubResourceResponseArrayOutput values.
// You can construct a concrete instance of `SubResourceResponseArrayInput` via:
//
//          SubResourceResponseArray{ SubResourceResponseArgs{...} }
type SubResourceResponseArrayInput interface {
	pulumi.Input

	ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput
	ToSubResourceResponseArrayOutputWithContext(context.Context) SubResourceResponseArrayOutput
}

type SubResourceResponseArray []SubResourceResponseInput

func (SubResourceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceResponse)(nil)).Elem()
}

func (i SubResourceResponseArray) ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput {
	return i.ToSubResourceResponseArrayOutputWithContext(context.Background())
}

func (i SubResourceResponseArray) ToSubResourceResponseArrayOutputWithContext(ctx context.Context) SubResourceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponseArrayOutput)
}

// Azure resource manager sub resource properties.
type SubResourceResponseOutput struct{ *pulumi.OutputState }

func (SubResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutput() SubResourceResponseOutput {
	return o
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutputWithContext(ctx context.Context) SubResourceResponseOutput {
	return o
}

func (o SubResourceResponseOutput) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return o.ToSubResourceResponsePtrOutputWithContext(context.Background())
}

func (o SubResourceResponseOutput) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return o.ApplyT(func(v SubResourceResponse) *SubResourceResponse {
		return &v
	}).(SubResourceResponsePtrOutput)
}

// Resource Identifier.
func (o SubResourceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResourceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourceResponsePtrOutput struct{ *pulumi.OutputState }

func (SubResourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) Elem() SubResourceResponseOutput {
	return o.ApplyT(func(v *SubResourceResponse) SubResourceResponse { return *v }).(SubResourceResponseOutput)
}

// Resource Identifier.
func (o SubResourceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SubResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutputWithContext(ctx context.Context) SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) Index(i pulumi.IntInput) SubResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResourceResponse {
		return vs[0].([]SubResourceResponse)[vs[1].(int)]
	}).(SubResourceResponseOutput)
}

// Subnet in a virtual network resource.
type SubnetType struct {
	// The address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Gets an array of references to the network interface IP configurations using subnet.
	IpConfigurations []IPConfiguration `pulumi:"ipConfigurations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupType `pulumi:"networkSecurityGroup"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the RouteTable resource.
	RouteTable *RouteTableType `pulumi:"routeTable"`
}

// SubnetTypeInput is an input type that accepts SubnetTypeArgs and SubnetTypeOutput values.
// You can construct a concrete instance of `SubnetTypeInput` via:
//
//          SubnetTypeArgs{...}
type SubnetTypeInput interface {
	pulumi.Input

	ToSubnetTypeOutput() SubnetTypeOutput
	ToSubnetTypeOutputWithContext(context.Context) SubnetTypeOutput
}

// Subnet in a virtual network resource.
type SubnetTypeArgs struct {
	// The address prefix for the subnet.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets an array of references to the network interface IP configurations using subnet.
	IpConfigurations IPConfigurationArrayInput `pulumi:"ipConfigurations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup NetworkSecurityGroupTypePtrInput `pulumi:"networkSecurityGroup"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the RouteTable resource.
	RouteTable RouteTableTypePtrInput `pulumi:"routeTable"`
}

func (SubnetTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetType)(nil)).Elem()
}

func (i SubnetTypeArgs) ToSubnetTypeOutput() SubnetTypeOutput {
	return i.ToSubnetTypeOutputWithContext(context.Background())
}

func (i SubnetTypeArgs) ToSubnetTypeOutputWithContext(ctx context.Context) SubnetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypeOutput)
}

func (i SubnetTypeArgs) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return i.ToSubnetTypePtrOutputWithContext(context.Background())
}

func (i SubnetTypeArgs) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypeOutput).ToSubnetTypePtrOutputWithContext(ctx)
}

// SubnetTypePtrInput is an input type that accepts SubnetTypeArgs, SubnetTypePtr and SubnetTypePtrOutput values.
// You can construct a concrete instance of `SubnetTypePtrInput` via:
//
//          SubnetTypeArgs{...}
//
//  or:
//
//          nil
type SubnetTypePtrInput interface {
	pulumi.Input

	ToSubnetTypePtrOutput() SubnetTypePtrOutput
	ToSubnetTypePtrOutputWithContext(context.Context) SubnetTypePtrOutput
}

type subnetTypePtrType SubnetTypeArgs

func SubnetTypePtr(v *SubnetTypeArgs) SubnetTypePtrInput {
	return (*subnetTypePtrType)(v)
}

func (*subnetTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetType)(nil)).Elem()
}

func (i *subnetTypePtrType) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return i.ToSubnetTypePtrOutputWithContext(context.Background())
}

func (i *subnetTypePtrType) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypePtrOutput)
}

// SubnetTypeArrayInput is an input type that accepts SubnetTypeArray and SubnetTypeArrayOutput values.
// You can construct a concrete instance of `SubnetTypeArrayInput` via:
//
//          SubnetTypeArray{ SubnetTypeArgs{...} }
type SubnetTypeArrayInput interface {
	pulumi.Input

	ToSubnetTypeArrayOutput() SubnetTypeArrayOutput
	ToSubnetTypeArrayOutputWithContext(context.Context) SubnetTypeArrayOutput
}

type SubnetTypeArray []SubnetTypeInput

func (SubnetTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetType)(nil)).Elem()
}

func (i SubnetTypeArray) ToSubnetTypeArrayOutput() SubnetTypeArrayOutput {
	return i.ToSubnetTypeArrayOutputWithContext(context.Background())
}

func (i SubnetTypeArray) ToSubnetTypeArrayOutputWithContext(ctx context.Context) SubnetTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypeArrayOutput)
}

// Subnet in a virtual network resource.
type SubnetTypeOutput struct{ *pulumi.OutputState }

func (SubnetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetType)(nil)).Elem()
}

func (o SubnetTypeOutput) ToSubnetTypeOutput() SubnetTypeOutput {
	return o
}

func (o SubnetTypeOutput) ToSubnetTypeOutputWithContext(ctx context.Context) SubnetTypeOutput {
	return o
}

func (o SubnetTypeOutput) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return o.ToSubnetTypePtrOutputWithContext(context.Background())
}

func (o SubnetTypeOutput) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return o.ApplyT(func(v SubnetType) *SubnetType {
		return &v
	}).(SubnetTypePtrOutput)
}

// The address prefix for the subnet.
func (o SubnetTypeOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o SubnetTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets an array of references to the network interface IP configurations using subnet.
func (o SubnetTypeOutput) IpConfigurations() IPConfigurationArrayOutput {
	return o.ApplyT(func(v SubnetType) []IPConfiguration { return v.IpConfigurations }).(IPConfigurationArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o SubnetTypeOutput) NetworkSecurityGroup() NetworkSecurityGroupTypePtrOutput {
	return o.ApplyT(func(v SubnetType) *NetworkSecurityGroupType { return v.NetworkSecurityGroup }).(NetworkSecurityGroupTypePtrOutput)
}

// The provisioning state of the resource.
func (o SubnetTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the RouteTable resource.
func (o SubnetTypeOutput) RouteTable() RouteTableTypePtrOutput {
	return o.ApplyT(func(v SubnetType) *RouteTableType { return v.RouteTable }).(RouteTableTypePtrOutput)
}

type SubnetTypePtrOutput struct{ *pulumi.OutputState }

func (SubnetTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetType)(nil)).Elem()
}

func (o SubnetTypePtrOutput) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return o
}

func (o SubnetTypePtrOutput) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return o
}

func (o SubnetTypePtrOutput) Elem() SubnetTypeOutput {
	return o.ApplyT(func(v *SubnetType) SubnetType { return *v }).(SubnetTypeOutput)
}

// The address prefix for the subnet.
func (o SubnetTypePtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o SubnetTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Gets an array of references to the network interface IP configurations using subnet.
func (o SubnetTypePtrOutput) IpConfigurations() IPConfigurationArrayOutput {
	return o.ApplyT(func(v *SubnetType) []IPConfiguration {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(IPConfigurationArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o SubnetTypePtrOutput) NetworkSecurityGroup() NetworkSecurityGroupTypePtrOutput {
	return o.ApplyT(func(v *SubnetType) *NetworkSecurityGroupType {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupTypePtrOutput)
}

// The provisioning state of the resource.
func (o SubnetTypePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference of the RouteTable resource.
func (o SubnetTypePtrOutput) RouteTable() RouteTableTypePtrOutput {
	return o.ApplyT(func(v *SubnetType) *RouteTableType {
		if v == nil {
			return nil
		}
		return v.RouteTable
	}).(RouteTableTypePtrOutput)
}

type SubnetTypeArrayOutput struct{ *pulumi.OutputState }

func (SubnetTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetType)(nil)).Elem()
}

func (o SubnetTypeArrayOutput) ToSubnetTypeArrayOutput() SubnetTypeArrayOutput {
	return o
}

func (o SubnetTypeArrayOutput) ToSubnetTypeArrayOutputWithContext(ctx context.Context) SubnetTypeArrayOutput {
	return o
}

func (o SubnetTypeArrayOutput) Index(i pulumi.IntInput) SubnetTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetType {
		return vs[0].([]SubnetType)[vs[1].(int)]
	}).(SubnetTypeOutput)
}

// Subnet in a virtual network resource.
type SubnetInvokeResponse struct {
	// The address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Gets an array of references to the network interface IP configurations using subnet.
	IpConfigurations []IPConfigurationInvokeResponse `pulumi:"ipConfigurations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupInvokeResponse `pulumi:"networkSecurityGroup"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the RouteTable resource.
	RouteTable *RouteTableInvokeResponse `pulumi:"routeTable"`
}

// SubnetInvokeResponseInput is an input type that accepts SubnetInvokeResponseArgs and SubnetInvokeResponseOutput values.
// You can construct a concrete instance of `SubnetInvokeResponseInput` via:
//
//          SubnetInvokeResponseArgs{...}
type SubnetInvokeResponseInput interface {
	pulumi.Input

	ToSubnetInvokeResponseOutput() SubnetInvokeResponseOutput
	ToSubnetInvokeResponseOutputWithContext(context.Context) SubnetInvokeResponseOutput
}

// Subnet in a virtual network resource.
type SubnetInvokeResponseArgs struct {
	// The address prefix for the subnet.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets an array of references to the network interface IP configurations using subnet.
	IpConfigurations IPConfigurationInvokeResponseArrayInput `pulumi:"ipConfigurations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup NetworkSecurityGroupInvokeResponsePtrInput `pulumi:"networkSecurityGroup"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the RouteTable resource.
	RouteTable RouteTableInvokeResponsePtrInput `pulumi:"routeTable"`
}

func (SubnetInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetInvokeResponse)(nil)).Elem()
}

func (i SubnetInvokeResponseArgs) ToSubnetInvokeResponseOutput() SubnetInvokeResponseOutput {
	return i.ToSubnetInvokeResponseOutputWithContext(context.Background())
}

func (i SubnetInvokeResponseArgs) ToSubnetInvokeResponseOutputWithContext(ctx context.Context) SubnetInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetInvokeResponseOutput)
}

func (i SubnetInvokeResponseArgs) ToSubnetInvokeResponsePtrOutput() SubnetInvokeResponsePtrOutput {
	return i.ToSubnetInvokeResponsePtrOutputWithContext(context.Background())
}

func (i SubnetInvokeResponseArgs) ToSubnetInvokeResponsePtrOutputWithContext(ctx context.Context) SubnetInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetInvokeResponseOutput).ToSubnetInvokeResponsePtrOutputWithContext(ctx)
}

// SubnetInvokeResponsePtrInput is an input type that accepts SubnetInvokeResponseArgs, SubnetInvokeResponsePtr and SubnetInvokeResponsePtrOutput values.
// You can construct a concrete instance of `SubnetInvokeResponsePtrInput` via:
//
//          SubnetInvokeResponseArgs{...}
//
//  or:
//
//          nil
type SubnetInvokeResponsePtrInput interface {
	pulumi.Input

	ToSubnetInvokeResponsePtrOutput() SubnetInvokeResponsePtrOutput
	ToSubnetInvokeResponsePtrOutputWithContext(context.Context) SubnetInvokeResponsePtrOutput
}

type subnetInvokeResponsePtrType SubnetInvokeResponseArgs

func SubnetInvokeResponsePtr(v *SubnetInvokeResponseArgs) SubnetInvokeResponsePtrInput {
	return (*subnetInvokeResponsePtrType)(v)
}

func (*subnetInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetInvokeResponse)(nil)).Elem()
}

func (i *subnetInvokeResponsePtrType) ToSubnetInvokeResponsePtrOutput() SubnetInvokeResponsePtrOutput {
	return i.ToSubnetInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *subnetInvokeResponsePtrType) ToSubnetInvokeResponsePtrOutputWithContext(ctx context.Context) SubnetInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetInvokeResponsePtrOutput)
}

// SubnetInvokeResponseArrayInput is an input type that accepts SubnetInvokeResponseArray and SubnetInvokeResponseArrayOutput values.
// You can construct a concrete instance of `SubnetInvokeResponseArrayInput` via:
//
//          SubnetInvokeResponseArray{ SubnetInvokeResponseArgs{...} }
type SubnetInvokeResponseArrayInput interface {
	pulumi.Input

	ToSubnetInvokeResponseArrayOutput() SubnetInvokeResponseArrayOutput
	ToSubnetInvokeResponseArrayOutputWithContext(context.Context) SubnetInvokeResponseArrayOutput
}

type SubnetInvokeResponseArray []SubnetInvokeResponseInput

func (SubnetInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetInvokeResponse)(nil)).Elem()
}

func (i SubnetInvokeResponseArray) ToSubnetInvokeResponseArrayOutput() SubnetInvokeResponseArrayOutput {
	return i.ToSubnetInvokeResponseArrayOutputWithContext(context.Background())
}

func (i SubnetInvokeResponseArray) ToSubnetInvokeResponseArrayOutputWithContext(ctx context.Context) SubnetInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetInvokeResponseArrayOutput)
}

// Subnet in a virtual network resource.
type SubnetInvokeResponseOutput struct{ *pulumi.OutputState }

func (SubnetInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetInvokeResponse)(nil)).Elem()
}

func (o SubnetInvokeResponseOutput) ToSubnetInvokeResponseOutput() SubnetInvokeResponseOutput {
	return o
}

func (o SubnetInvokeResponseOutput) ToSubnetInvokeResponseOutputWithContext(ctx context.Context) SubnetInvokeResponseOutput {
	return o
}

func (o SubnetInvokeResponseOutput) ToSubnetInvokeResponsePtrOutput() SubnetInvokeResponsePtrOutput {
	return o.ToSubnetInvokeResponsePtrOutputWithContext(context.Background())
}

func (o SubnetInvokeResponseOutput) ToSubnetInvokeResponsePtrOutputWithContext(ctx context.Context) SubnetInvokeResponsePtrOutput {
	return o.ApplyT(func(v SubnetInvokeResponse) *SubnetInvokeResponse {
		return &v
	}).(SubnetInvokeResponsePtrOutput)
}

// The address prefix for the subnet.
func (o SubnetInvokeResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetInvokeResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o SubnetInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets an array of references to the network interface IP configurations using subnet.
func (o SubnetInvokeResponseOutput) IpConfigurations() IPConfigurationInvokeResponseArrayOutput {
	return o.ApplyT(func(v SubnetInvokeResponse) []IPConfigurationInvokeResponse { return v.IpConfigurations }).(IPConfigurationInvokeResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o SubnetInvokeResponseOutput) NetworkSecurityGroup() NetworkSecurityGroupInvokeResponsePtrOutput {
	return o.ApplyT(func(v SubnetInvokeResponse) *NetworkSecurityGroupInvokeResponse { return v.NetworkSecurityGroup }).(NetworkSecurityGroupInvokeResponsePtrOutput)
}

// The provisioning state of the resource.
func (o SubnetInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the RouteTable resource.
func (o SubnetInvokeResponseOutput) RouteTable() RouteTableInvokeResponsePtrOutput {
	return o.ApplyT(func(v SubnetInvokeResponse) *RouteTableInvokeResponse { return v.RouteTable }).(RouteTableInvokeResponsePtrOutput)
}

type SubnetInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (SubnetInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetInvokeResponse)(nil)).Elem()
}

func (o SubnetInvokeResponsePtrOutput) ToSubnetInvokeResponsePtrOutput() SubnetInvokeResponsePtrOutput {
	return o
}

func (o SubnetInvokeResponsePtrOutput) ToSubnetInvokeResponsePtrOutputWithContext(ctx context.Context) SubnetInvokeResponsePtrOutput {
	return o
}

func (o SubnetInvokeResponsePtrOutput) Elem() SubnetInvokeResponseOutput {
	return o.ApplyT(func(v *SubnetInvokeResponse) SubnetInvokeResponse { return *v }).(SubnetInvokeResponseOutput)
}

// The address prefix for the subnet.
func (o SubnetInvokeResponsePtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetInvokeResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o SubnetInvokeResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Gets an array of references to the network interface IP configurations using subnet.
func (o SubnetInvokeResponsePtrOutput) IpConfigurations() IPConfigurationInvokeResponseArrayOutput {
	return o.ApplyT(func(v *SubnetInvokeResponse) []IPConfigurationInvokeResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(IPConfigurationInvokeResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetInvokeResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o SubnetInvokeResponsePtrOutput) NetworkSecurityGroup() NetworkSecurityGroupInvokeResponsePtrOutput {
	return o.ApplyT(func(v *SubnetInvokeResponse) *NetworkSecurityGroupInvokeResponse {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupInvokeResponsePtrOutput)
}

// The provisioning state of the resource.
func (o SubnetInvokeResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference of the RouteTable resource.
func (o SubnetInvokeResponsePtrOutput) RouteTable() RouteTableInvokeResponsePtrOutput {
	return o.ApplyT(func(v *SubnetInvokeResponse) *RouteTableInvokeResponse {
		if v == nil {
			return nil
		}
		return v.RouteTable
	}).(RouteTableInvokeResponsePtrOutput)
}

type SubnetInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetInvokeResponse)(nil)).Elem()
}

func (o SubnetInvokeResponseArrayOutput) ToSubnetInvokeResponseArrayOutput() SubnetInvokeResponseArrayOutput {
	return o
}

func (o SubnetInvokeResponseArrayOutput) ToSubnetInvokeResponseArrayOutputWithContext(ctx context.Context) SubnetInvokeResponseArrayOutput {
	return o
}

func (o SubnetInvokeResponseArrayOutput) Index(i pulumi.IntInput) SubnetInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetInvokeResponse {
		return vs[0].([]SubnetInvokeResponse)[vs[1].(int)]
	}).(SubnetInvokeResponseOutput)
}

// Subnet in a virtual network resource.
type SubnetResponse struct {
	// The address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// Gets an array of references to the network interface IP configurations using subnet.
	IpConfigurations []IPConfigurationResponse `pulumi:"ipConfigurations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupResponse `pulumi:"networkSecurityGroup"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the RouteTable resource.
	RouteTable *RouteTableResponse `pulumi:"routeTable"`
}

// SubnetResponseInput is an input type that accepts SubnetResponseArgs and SubnetResponseOutput values.
// You can construct a concrete instance of `SubnetResponseInput` via:
//
//          SubnetResponseArgs{...}
type SubnetResponseInput interface {
	pulumi.Input

	ToSubnetResponseOutput() SubnetResponseOutput
	ToSubnetResponseOutputWithContext(context.Context) SubnetResponseOutput
}

// Subnet in a virtual network resource.
type SubnetResponseArgs struct {
	// The address prefix for the subnet.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets an array of references to the network interface IP configurations using subnet.
	IpConfigurations IPConfigurationResponseArrayInput `pulumi:"ipConfigurations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup NetworkSecurityGroupResponsePtrInput `pulumi:"networkSecurityGroup"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the RouteTable resource.
	RouteTable RouteTableResponsePtrInput `pulumi:"routeTable"`
}

func (SubnetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResponse)(nil)).Elem()
}

func (i SubnetResponseArgs) ToSubnetResponseOutput() SubnetResponseOutput {
	return i.ToSubnetResponseOutputWithContext(context.Background())
}

func (i SubnetResponseArgs) ToSubnetResponseOutputWithContext(ctx context.Context) SubnetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponseOutput)
}

func (i SubnetResponseArgs) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return i.ToSubnetResponsePtrOutputWithContext(context.Background())
}

func (i SubnetResponseArgs) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponseOutput).ToSubnetResponsePtrOutputWithContext(ctx)
}

// SubnetResponsePtrInput is an input type that accepts SubnetResponseArgs, SubnetResponsePtr and SubnetResponsePtrOutput values.
// You can construct a concrete instance of `SubnetResponsePtrInput` via:
//
//          SubnetResponseArgs{...}
//
//  or:
//
//          nil
type SubnetResponsePtrInput interface {
	pulumi.Input

	ToSubnetResponsePtrOutput() SubnetResponsePtrOutput
	ToSubnetResponsePtrOutputWithContext(context.Context) SubnetResponsePtrOutput
}

type subnetResponsePtrType SubnetResponseArgs

func SubnetResponsePtr(v *SubnetResponseArgs) SubnetResponsePtrInput {
	return (*subnetResponsePtrType)(v)
}

func (*subnetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetResponse)(nil)).Elem()
}

func (i *subnetResponsePtrType) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return i.ToSubnetResponsePtrOutputWithContext(context.Background())
}

func (i *subnetResponsePtrType) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponsePtrOutput)
}

// SubnetResponseArrayInput is an input type that accepts SubnetResponseArray and SubnetResponseArrayOutput values.
// You can construct a concrete instance of `SubnetResponseArrayInput` via:
//
//          SubnetResponseArray{ SubnetResponseArgs{...} }
type SubnetResponseArrayInput interface {
	pulumi.Input

	ToSubnetResponseArrayOutput() SubnetResponseArrayOutput
	ToSubnetResponseArrayOutputWithContext(context.Context) SubnetResponseArrayOutput
}

type SubnetResponseArray []SubnetResponseInput

func (SubnetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResponse)(nil)).Elem()
}

func (i SubnetResponseArray) ToSubnetResponseArrayOutput() SubnetResponseArrayOutput {
	return i.ToSubnetResponseArrayOutputWithContext(context.Background())
}

func (i SubnetResponseArray) ToSubnetResponseArrayOutputWithContext(ctx context.Context) SubnetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponseArrayOutput)
}

// Subnet in a virtual network resource.
type SubnetResponseOutput struct{ *pulumi.OutputState }

func (SubnetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseOutput) ToSubnetResponseOutput() SubnetResponseOutput {
	return o
}

func (o SubnetResponseOutput) ToSubnetResponseOutputWithContext(ctx context.Context) SubnetResponseOutput {
	return o
}

func (o SubnetResponseOutput) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return o.ToSubnetResponsePtrOutputWithContext(context.Background())
}

func (o SubnetResponseOutput) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *SubnetResponse {
		return &v
	}).(SubnetResponsePtrOutput)
}

// The address prefix for the subnet.
func (o SubnetResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o SubnetResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets an array of references to the network interface IP configurations using subnet.
func (o SubnetResponseOutput) IpConfigurations() IPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []IPConfigurationResponse { return v.IpConfigurations }).(IPConfigurationResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o SubnetResponseOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *NetworkSecurityGroupResponse { return v.NetworkSecurityGroup }).(NetworkSecurityGroupResponsePtrOutput)
}

// The provisioning state of the resource.
func (o SubnetResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the RouteTable resource.
func (o SubnetResponseOutput) RouteTable() RouteTableResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *RouteTableResponse { return v.RouteTable }).(RouteTableResponsePtrOutput)
}

type SubnetResponsePtrOutput struct{ *pulumi.OutputState }

func (SubnetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetResponse)(nil)).Elem()
}

func (o SubnetResponsePtrOutput) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return o
}

func (o SubnetResponsePtrOutput) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return o
}

func (o SubnetResponsePtrOutput) Elem() SubnetResponseOutput {
	return o.ApplyT(func(v *SubnetResponse) SubnetResponse { return *v }).(SubnetResponseOutput)
}

// The address prefix for the subnet.
func (o SubnetResponsePtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o SubnetResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Gets an array of references to the network interface IP configurations using subnet.
func (o SubnetResponsePtrOutput) IpConfigurations() IPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []IPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(IPConfigurationResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o SubnetResponsePtrOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *NetworkSecurityGroupResponse {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupResponsePtrOutput)
}

// The provisioning state of the resource.
func (o SubnetResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference of the RouteTable resource.
func (o SubnetResponsePtrOutput) RouteTable() RouteTableResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *RouteTableResponse {
		if v == nil {
			return nil
		}
		return v.RouteTable
	}).(RouteTableResponsePtrOutput)
}

type SubnetResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutput() SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutputWithContext(ctx context.Context) SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) Index(i pulumi.IntInput) SubnetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetResponse {
		return vs[0].([]SubnetResponse)[vs[1].(int)]
	}).(SubnetResponseOutput)
}

// A common class for general resource information
type VirtualNetworkGatewayType struct {
	// Virtual network gateway's BGP speaker settings.
	BgpSettings *BgpSettings `pulumi:"bgpSettings"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp *bool `pulumi:"enableBgp"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite *SubResource `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
	GatewayType *string `pulumi:"gatewayType"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// IP configurations for virtual network gateway.
	IpConfigurations []VirtualNetworkGatewayIPConfiguration `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the VirtualNetworkGateway resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku *VirtualNetworkGatewaySku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration *VpnClientConfiguration `pulumi:"vpnClientConfiguration"`
	// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
	VpnType *string `pulumi:"vpnType"`
}

// VirtualNetworkGatewayTypeInput is an input type that accepts VirtualNetworkGatewayTypeArgs and VirtualNetworkGatewayTypeOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayTypeInput` via:
//
//          VirtualNetworkGatewayTypeArgs{...}
type VirtualNetworkGatewayTypeInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayTypeOutput() VirtualNetworkGatewayTypeOutput
	ToVirtualNetworkGatewayTypeOutputWithContext(context.Context) VirtualNetworkGatewayTypeOutput
}

// A common class for general resource information
type VirtualNetworkGatewayTypeArgs struct {
	// Virtual network gateway's BGP speaker settings.
	BgpSettings BgpSettingsPtrInput `pulumi:"bgpSettings"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite SubResourcePtrInput `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
	GatewayType pulumi.StringPtrInput `pulumi:"gatewayType"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// IP configurations for virtual network gateway.
	IpConfigurations VirtualNetworkGatewayIPConfigurationArrayInput `pulumi:"ipConfigurations"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the VirtualNetworkGateway resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku VirtualNetworkGatewaySkuPtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration VpnClientConfigurationPtrInput `pulumi:"vpnClientConfiguration"`
	// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
	VpnType pulumi.StringPtrInput `pulumi:"vpnType"`
}

func (VirtualNetworkGatewayTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayType)(nil)).Elem()
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypeOutput() VirtualNetworkGatewayTypeOutput {
	return i.ToVirtualNetworkGatewayTypeOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypeOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayTypeOutput)
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return i.ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayTypeOutput).ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayTypePtrInput is an input type that accepts VirtualNetworkGatewayTypeArgs, VirtualNetworkGatewayTypePtr and VirtualNetworkGatewayTypePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayTypePtrInput` via:
//
//          VirtualNetworkGatewayTypeArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewayTypePtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput
	ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Context) VirtualNetworkGatewayTypePtrOutput
}

type virtualNetworkGatewayTypePtrType VirtualNetworkGatewayTypeArgs

func VirtualNetworkGatewayTypePtr(v *VirtualNetworkGatewayTypeArgs) VirtualNetworkGatewayTypePtrInput {
	return (*virtualNetworkGatewayTypePtrType)(v)
}

func (*virtualNetworkGatewayTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayType)(nil)).Elem()
}

func (i *virtualNetworkGatewayTypePtrType) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return i.ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayTypePtrType) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayTypePtrOutput)
}

// A common class for general resource information
type VirtualNetworkGatewayTypeOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayType)(nil)).Elem()
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypeOutput() VirtualNetworkGatewayTypeOutput {
	return o
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypeOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypeOutput {
	return o
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return o.ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *VirtualNetworkGatewayType {
		return &v
	}).(VirtualNetworkGatewayTypePtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayTypeOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *BgpSettings { return v.BgpSettings }).(BgpSettingsPtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayTypeOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayTypeOutput) GatewayDefaultSite() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *SubResource { return v.GatewayDefaultSite }).(SubResourcePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
func (o VirtualNetworkGatewayTypeOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.GatewayType }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o VirtualNetworkGatewayTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) []VirtualNetworkGatewayIPConfiguration { return v.IpConfigurations }).(VirtualNetworkGatewayIPConfigurationArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkGatewayTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the VirtualNetworkGateway resource.
func (o VirtualNetworkGatewayTypeOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) Sku() VirtualNetworkGatewaySkuPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *VirtualNetworkGatewaySku { return v.Sku }).(VirtualNetworkGatewaySkuPtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayTypeOutput) VpnClientConfiguration() VpnClientConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *VpnClientConfiguration { return v.VpnClientConfiguration }).(VpnClientConfigurationPtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
func (o VirtualNetworkGatewayTypeOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.VpnType }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayTypePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayType)(nil)).Elem()
}

func (o VirtualNetworkGatewayTypePtrOutput) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return o
}

func (o VirtualNetworkGatewayTypePtrOutput) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return o
}

func (o VirtualNetworkGatewayTypePtrOutput) Elem() VirtualNetworkGatewayTypeOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) VirtualNetworkGatewayType { return *v }).(VirtualNetworkGatewayTypeOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayTypePtrOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *BgpSettings {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsPtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayTypePtrOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgp
	}).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayTypePtrOutput) GatewayDefaultSite() SubResourcePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *SubResource {
		if v == nil {
			return nil
		}
		return v.GatewayDefaultSite
	}).(SubResourcePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
func (o VirtualNetworkGatewayTypePtrOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.GatewayType
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o VirtualNetworkGatewayTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) []VirtualNetworkGatewayIPConfiguration {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkGatewayTypePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the VirtualNetworkGateway resource.
func (o VirtualNetworkGatewayTypePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) Sku() VirtualNetworkGatewaySkuPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *VirtualNetworkGatewaySku {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(VirtualNetworkGatewaySkuPtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayTypePtrOutput) VpnClientConfiguration() VpnClientConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *VpnClientConfiguration {
		if v == nil {
			return nil
		}
		return v.VpnClientConfiguration
	}).(VpnClientConfigurationPtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
func (o VirtualNetworkGatewayTypePtrOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.VpnType
	}).(pulumi.StringPtrOutput)
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets or sets the privateIPAddress of the IP Configuration
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress *SubResource `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet *SubResource `pulumi:"subnet"`
}

// VirtualNetworkGatewayIPConfigurationInput is an input type that accepts VirtualNetworkGatewayIPConfigurationArgs and VirtualNetworkGatewayIPConfigurationOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationInput` via:
//
//          VirtualNetworkGatewayIPConfigurationArgs{...}
type VirtualNetworkGatewayIPConfigurationInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationOutput() VirtualNetworkGatewayIPConfigurationOutput
	ToVirtualNetworkGatewayIPConfigurationOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationOutput
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets the privateIPAddress of the IP Configuration
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress SubResourcePtrInput `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (VirtualNetworkGatewayIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationArgs) ToVirtualNetworkGatewayIPConfigurationOutput() VirtualNetworkGatewayIPConfigurationOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationArgs) ToVirtualNetworkGatewayIPConfigurationOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationOutput)
}

// VirtualNetworkGatewayIPConfigurationArrayInput is an input type that accepts VirtualNetworkGatewayIPConfigurationArray and VirtualNetworkGatewayIPConfigurationArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationArrayInput` via:
//
//          VirtualNetworkGatewayIPConfigurationArray{ VirtualNetworkGatewayIPConfigurationArgs{...} }
type VirtualNetworkGatewayIPConfigurationArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationArrayOutput() VirtualNetworkGatewayIPConfigurationArrayOutput
	ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationArrayOutput
}

type VirtualNetworkGatewayIPConfigurationArray []VirtualNetworkGatewayIPConfigurationInput

func (VirtualNetworkGatewayIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationArray) ToVirtualNetworkGatewayIPConfigurationArrayOutput() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationArray) ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationArrayOutput)
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationOutput) ToVirtualNetworkGatewayIPConfigurationOutput() VirtualNetworkGatewayIPConfigurationOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationOutput) ToVirtualNetworkGatewayIPConfigurationOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayIPConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o VirtualNetworkGatewayIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets the privateIPAddress of the IP Configuration
func (o VirtualNetworkGatewayIPConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o VirtualNetworkGatewayIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkGatewayIPConfigurationOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the public IP resource.
func (o VirtualNetworkGatewayIPConfigurationOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *SubResource { return v.PublicIPAddress }).(SubResourcePtrOutput)
}

// The reference of the subnet resource.
func (o VirtualNetworkGatewayIPConfigurationOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type VirtualNetworkGatewayIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationArrayOutput) ToVirtualNetworkGatewayIPConfigurationArrayOutput() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationArrayOutput) ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayIPConfiguration {
		return vs[0].([]VirtualNetworkGatewayIPConfiguration)[vs[1].(int)]
	}).(VirtualNetworkGatewayIPConfigurationOutput)
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfigurationInvokeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets or sets the privateIPAddress of the IP Configuration
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress *SubResourceInvokeResponse `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet *SubResourceInvokeResponse `pulumi:"subnet"`
}

// VirtualNetworkGatewayIPConfigurationInvokeResponseInput is an input type that accepts VirtualNetworkGatewayIPConfigurationInvokeResponseArgs and VirtualNetworkGatewayIPConfigurationInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationInvokeResponseInput` via:
//
//          VirtualNetworkGatewayIPConfigurationInvokeResponseArgs{...}
type VirtualNetworkGatewayIPConfigurationInvokeResponseInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationInvokeResponseOutput() VirtualNetworkGatewayIPConfigurationInvokeResponseOutput
	ToVirtualNetworkGatewayIPConfigurationInvokeResponseOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationInvokeResponseOutput
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfigurationInvokeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets the privateIPAddress of the IP Configuration
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress SubResourceInvokeResponsePtrInput `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet SubResourceInvokeResponsePtrInput `pulumi:"subnet"`
}

func (VirtualNetworkGatewayIPConfigurationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfigurationInvokeResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationInvokeResponseArgs) ToVirtualNetworkGatewayIPConfigurationInvokeResponseOutput() VirtualNetworkGatewayIPConfigurationInvokeResponseOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationInvokeResponseArgs) ToVirtualNetworkGatewayIPConfigurationInvokeResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationInvokeResponseOutput)
}

// VirtualNetworkGatewayIPConfigurationInvokeResponseArrayInput is an input type that accepts VirtualNetworkGatewayIPConfigurationInvokeResponseArray and VirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationInvokeResponseArrayInput` via:
//
//          VirtualNetworkGatewayIPConfigurationInvokeResponseArray{ VirtualNetworkGatewayIPConfigurationInvokeResponseArgs{...} }
type VirtualNetworkGatewayIPConfigurationInvokeResponseArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutput() VirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutput
	ToVirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutput
}

type VirtualNetworkGatewayIPConfigurationInvokeResponseArray []VirtualNetworkGatewayIPConfigurationInvokeResponseInput

func (VirtualNetworkGatewayIPConfigurationInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfigurationInvokeResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationInvokeResponseArray) ToVirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutput() VirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationInvokeResponseArray) ToVirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutput)
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfigurationInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfigurationInvokeResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationInvokeResponseOutput) ToVirtualNetworkGatewayIPConfigurationInvokeResponseOutput() VirtualNetworkGatewayIPConfigurationInvokeResponseOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationInvokeResponseOutput) ToVirtualNetworkGatewayIPConfigurationInvokeResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationInvokeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayIPConfigurationInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o VirtualNetworkGatewayIPConfigurationInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayIPConfigurationInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets the privateIPAddress of the IP Configuration
func (o VirtualNetworkGatewayIPConfigurationInvokeResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationInvokeResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o VirtualNetworkGatewayIPConfigurationInvokeResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationInvokeResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkGatewayIPConfigurationInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the public IP resource.
func (o VirtualNetworkGatewayIPConfigurationInvokeResponseOutput) PublicIPAddress() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationInvokeResponse) *SubResourceInvokeResponse {
		return v.PublicIPAddress
	}).(SubResourceInvokeResponsePtrOutput)
}

// The reference of the subnet resource.
func (o VirtualNetworkGatewayIPConfigurationInvokeResponseOutput) Subnet() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationInvokeResponse) *SubResourceInvokeResponse { return v.Subnet }).(SubResourceInvokeResponsePtrOutput)
}

type VirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfigurationInvokeResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutput) ToVirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutput() VirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutput) ToVirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayIPConfigurationInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayIPConfigurationInvokeResponse {
		return vs[0].([]VirtualNetworkGatewayIPConfigurationInvokeResponse)[vs[1].(int)]
	}).(VirtualNetworkGatewayIPConfigurationInvokeResponseOutput)
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets or sets the privateIPAddress of the IP Configuration
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress *SubResourceResponse `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet *SubResourceResponse `pulumi:"subnet"`
}

// VirtualNetworkGatewayIPConfigurationResponseInput is an input type that accepts VirtualNetworkGatewayIPConfigurationResponseArgs and VirtualNetworkGatewayIPConfigurationResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationResponseInput` via:
//
//          VirtualNetworkGatewayIPConfigurationResponseArgs{...}
type VirtualNetworkGatewayIPConfigurationResponseInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationResponseOutput() VirtualNetworkGatewayIPConfigurationResponseOutput
	ToVirtualNetworkGatewayIPConfigurationResponseOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationResponseOutput
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets or sets the privateIPAddress of the IP Configuration
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress SubResourceResponsePtrInput `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet SubResourceResponsePtrInput `pulumi:"subnet"`
}

func (VirtualNetworkGatewayIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationResponseArgs) ToVirtualNetworkGatewayIPConfigurationResponseOutput() VirtualNetworkGatewayIPConfigurationResponseOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationResponseArgs) ToVirtualNetworkGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationResponseOutput)
}

// VirtualNetworkGatewayIPConfigurationResponseArrayInput is an input type that accepts VirtualNetworkGatewayIPConfigurationResponseArray and VirtualNetworkGatewayIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationResponseArrayInput` via:
//
//          VirtualNetworkGatewayIPConfigurationResponseArray{ VirtualNetworkGatewayIPConfigurationResponseArgs{...} }
type VirtualNetworkGatewayIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationResponseArrayOutput() VirtualNetworkGatewayIPConfigurationResponseArrayOutput
	ToVirtualNetworkGatewayIPConfigurationResponseArrayOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationResponseArrayOutput
}

type VirtualNetworkGatewayIPConfigurationResponseArray []VirtualNetworkGatewayIPConfigurationResponseInput

func (VirtualNetworkGatewayIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationResponseArray) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutput() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationResponseArray) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationResponseArrayOutput)
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationResponseOutput) ToVirtualNetworkGatewayIPConfigurationResponseOutput() VirtualNetworkGatewayIPConfigurationResponseOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationResponseOutput) ToVirtualNetworkGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets the privateIPAddress of the IP Configuration
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the public IP resource.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *SubResourceResponse { return v.PublicIPAddress }).(SubResourceResponsePtrOutput)
}

// The reference of the subnet resource.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

type VirtualNetworkGatewayIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationResponseArrayOutput) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutput() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationResponseArrayOutput) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayIPConfigurationResponse {
		return vs[0].([]VirtualNetworkGatewayIPConfigurationResponse)[vs[1].(int)]
	}).(VirtualNetworkGatewayIPConfigurationResponseOutput)
}

// A common class for general resource information
type VirtualNetworkGatewayInvokeResponse struct {
	// Virtual network gateway's BGP speaker settings.
	BgpSettings *BgpSettingsInvokeResponse `pulumi:"bgpSettings"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp *bool `pulumi:"enableBgp"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite *SubResourceInvokeResponse `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
	GatewayType *string `pulumi:"gatewayType"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// IP configurations for virtual network gateway.
	IpConfigurations []VirtualNetworkGatewayIPConfigurationInvokeResponse `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the VirtualNetworkGateway resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku *VirtualNetworkGatewaySkuInvokeResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration *VpnClientConfigurationInvokeResponse `pulumi:"vpnClientConfiguration"`
	// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
	VpnType *string `pulumi:"vpnType"`
}

// VirtualNetworkGatewayInvokeResponseInput is an input type that accepts VirtualNetworkGatewayInvokeResponseArgs and VirtualNetworkGatewayInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayInvokeResponseInput` via:
//
//          VirtualNetworkGatewayInvokeResponseArgs{...}
type VirtualNetworkGatewayInvokeResponseInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayInvokeResponseOutput() VirtualNetworkGatewayInvokeResponseOutput
	ToVirtualNetworkGatewayInvokeResponseOutputWithContext(context.Context) VirtualNetworkGatewayInvokeResponseOutput
}

// A common class for general resource information
type VirtualNetworkGatewayInvokeResponseArgs struct {
	// Virtual network gateway's BGP speaker settings.
	BgpSettings BgpSettingsInvokeResponsePtrInput `pulumi:"bgpSettings"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite SubResourceInvokeResponsePtrInput `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
	GatewayType pulumi.StringPtrInput `pulumi:"gatewayType"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// IP configurations for virtual network gateway.
	IpConfigurations VirtualNetworkGatewayIPConfigurationInvokeResponseArrayInput `pulumi:"ipConfigurations"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the VirtualNetworkGateway resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku VirtualNetworkGatewaySkuInvokeResponsePtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration VpnClientConfigurationInvokeResponsePtrInput `pulumi:"vpnClientConfiguration"`
	// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
	VpnType pulumi.StringPtrInput `pulumi:"vpnType"`
}

func (VirtualNetworkGatewayInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayInvokeResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewayInvokeResponseArgs) ToVirtualNetworkGatewayInvokeResponseOutput() VirtualNetworkGatewayInvokeResponseOutput {
	return i.ToVirtualNetworkGatewayInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayInvokeResponseArgs) ToVirtualNetworkGatewayInvokeResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayInvokeResponseOutput)
}

// A common class for general resource information
type VirtualNetworkGatewayInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayInvokeResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayInvokeResponseOutput) ToVirtualNetworkGatewayInvokeResponseOutput() VirtualNetworkGatewayInvokeResponseOutput {
	return o
}

func (o VirtualNetworkGatewayInvokeResponseOutput) ToVirtualNetworkGatewayInvokeResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayInvokeResponseOutput {
	return o
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayInvokeResponseOutput) BgpSettings() BgpSettingsInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayInvokeResponse) *BgpSettingsInvokeResponse { return v.BgpSettings }).(BgpSettingsInvokeResponsePtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayInvokeResponseOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayInvokeResponse) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayInvokeResponseOutput) GatewayDefaultSite() SubResourceInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayInvokeResponse) *SubResourceInvokeResponse { return v.GatewayDefaultSite }).(SubResourceInvokeResponsePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
func (o VirtualNetworkGatewayInvokeResponseOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayInvokeResponse) *string { return v.GatewayType }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o VirtualNetworkGatewayInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayInvokeResponseOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayInvokeResponse) []VirtualNetworkGatewayIPConfigurationInvokeResponse {
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayInvokeResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayInvokeResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkGatewayInvokeResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayInvokeResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkGatewayInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the VirtualNetworkGateway resource.
func (o VirtualNetworkGatewayInvokeResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayInvokeResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayInvokeResponseOutput) Sku() VirtualNetworkGatewaySkuInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayInvokeResponse) *VirtualNetworkGatewaySkuInvokeResponse { return v.Sku }).(VirtualNetworkGatewaySkuInvokeResponsePtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayInvokeResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayInvokeResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkGatewayInvokeResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayInvokeResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayInvokeResponseOutput) VpnClientConfiguration() VpnClientConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayInvokeResponse) *VpnClientConfigurationInvokeResponse {
		return v.VpnClientConfiguration
	}).(VpnClientConfigurationInvokeResponsePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
func (o VirtualNetworkGatewayInvokeResponseOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayInvokeResponse) *string { return v.VpnType }).(pulumi.StringPtrOutput)
}

// A common class for general resource information
type VirtualNetworkGatewayResponse struct {
	// Virtual network gateway's BGP speaker settings.
	BgpSettings *BgpSettingsResponse `pulumi:"bgpSettings"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp *bool `pulumi:"enableBgp"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite *SubResourceResponse `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
	GatewayType *string `pulumi:"gatewayType"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// IP configurations for virtual network gateway.
	IpConfigurations []VirtualNetworkGatewayIPConfigurationResponse `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the VirtualNetworkGateway resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku *VirtualNetworkGatewaySkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration *VpnClientConfigurationResponse `pulumi:"vpnClientConfiguration"`
	// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
	VpnType *string `pulumi:"vpnType"`
}

// VirtualNetworkGatewayResponseInput is an input type that accepts VirtualNetworkGatewayResponseArgs and VirtualNetworkGatewayResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayResponseInput` via:
//
//          VirtualNetworkGatewayResponseArgs{...}
type VirtualNetworkGatewayResponseInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayResponseOutput() VirtualNetworkGatewayResponseOutput
	ToVirtualNetworkGatewayResponseOutputWithContext(context.Context) VirtualNetworkGatewayResponseOutput
}

// A common class for general resource information
type VirtualNetworkGatewayResponseArgs struct {
	// Virtual network gateway's BGP speaker settings.
	BgpSettings BgpSettingsResponsePtrInput `pulumi:"bgpSettings"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite SubResourceResponsePtrInput `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
	GatewayType pulumi.StringPtrInput `pulumi:"gatewayType"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// IP configurations for virtual network gateway.
	IpConfigurations VirtualNetworkGatewayIPConfigurationResponseArrayInput `pulumi:"ipConfigurations"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the VirtualNetworkGateway resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku VirtualNetworkGatewaySkuResponsePtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration VpnClientConfigurationResponsePtrInput `pulumi:"vpnClientConfiguration"`
	// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
	VpnType pulumi.StringPtrInput `pulumi:"vpnType"`
}

func (VirtualNetworkGatewayResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewayResponseArgs) ToVirtualNetworkGatewayResponseOutput() VirtualNetworkGatewayResponseOutput {
	return i.ToVirtualNetworkGatewayResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayResponseArgs) ToVirtualNetworkGatewayResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayResponseOutput)
}

func (i VirtualNetworkGatewayResponseArgs) ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput {
	return i.ToVirtualNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayResponseArgs) ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayResponseOutput).ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayResponsePtrInput is an input type that accepts VirtualNetworkGatewayResponseArgs, VirtualNetworkGatewayResponsePtr and VirtualNetworkGatewayResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayResponsePtrInput` via:
//
//          VirtualNetworkGatewayResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewayResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput
	ToVirtualNetworkGatewayResponsePtrOutputWithContext(context.Context) VirtualNetworkGatewayResponsePtrOutput
}

type virtualNetworkGatewayResponsePtrType VirtualNetworkGatewayResponseArgs

func VirtualNetworkGatewayResponsePtr(v *VirtualNetworkGatewayResponseArgs) VirtualNetworkGatewayResponsePtrInput {
	return (*virtualNetworkGatewayResponsePtrType)(v)
}

func (*virtualNetworkGatewayResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (i *virtualNetworkGatewayResponsePtrType) ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput {
	return i.ToVirtualNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayResponsePtrType) ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayResponsePtrOutput)
}

// A common class for general resource information
type VirtualNetworkGatewayResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponseOutput() VirtualNetworkGatewayResponseOutput {
	return o
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponseOutput {
	return o
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput {
	return o.ToVirtualNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *VirtualNetworkGatewayResponse {
		return &v
	}).(VirtualNetworkGatewayResponsePtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayResponseOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *BgpSettingsResponse { return v.BgpSettings }).(BgpSettingsResponsePtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayResponseOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayResponseOutput) GatewayDefaultSite() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *SubResourceResponse { return v.GatewayDefaultSite }).(SubResourceResponsePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
func (o VirtualNetworkGatewayResponseOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.GatewayType }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o VirtualNetworkGatewayResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) []VirtualNetworkGatewayIPConfigurationResponse {
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkGatewayResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkGatewayResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the VirtualNetworkGateway resource.
func (o VirtualNetworkGatewayResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) Sku() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *VirtualNetworkGatewaySkuResponse { return v.Sku }).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkGatewayResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayResponseOutput) VpnClientConfiguration() VpnClientConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *VpnClientConfigurationResponse { return v.VpnClientConfiguration }).(VpnClientConfigurationResponsePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
func (o VirtualNetworkGatewayResponseOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.VpnType }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayResponsePtrOutput) ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayResponsePtrOutput) ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayResponsePtrOutput) Elem() VirtualNetworkGatewayResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) VirtualNetworkGatewayResponse { return *v }).(VirtualNetworkGatewayResponseOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayResponsePtrOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *BgpSettingsResponse {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsResponsePtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayResponsePtrOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgp
	}).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayResponsePtrOutput) GatewayDefaultSite() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.GatewayDefaultSite
	}).(SubResourceResponsePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
func (o VirtualNetworkGatewayResponsePtrOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.GatewayType
	}).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o VirtualNetworkGatewayResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) []VirtualNetworkGatewayIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkGatewayResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkGatewayResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the VirtualNetworkGateway resource.
func (o VirtualNetworkGatewayResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) Sku() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *VirtualNetworkGatewaySkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkGatewayResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayResponsePtrOutput) VpnClientConfiguration() VpnClientConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *VpnClientConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientConfiguration
	}).(VpnClientConfigurationResponsePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
func (o VirtualNetworkGatewayResponsePtrOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.VpnType
	}).(pulumi.StringPtrOutput)
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySku struct {
	// The capacity
	Capacity *int `pulumi:"capacity"`
	// Gateway sku name -Basic/HighPerformance/Standard
	Name *string `pulumi:"name"`
	// Gateway sku tier -Basic/HighPerformance/Standard
	Tier *string `pulumi:"tier"`
}

// VirtualNetworkGatewaySkuInput is an input type that accepts VirtualNetworkGatewaySkuArgs and VirtualNetworkGatewaySkuOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuInput` via:
//
//          VirtualNetworkGatewaySkuArgs{...}
type VirtualNetworkGatewaySkuInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuOutput() VirtualNetworkGatewaySkuOutput
	ToVirtualNetworkGatewaySkuOutputWithContext(context.Context) VirtualNetworkGatewaySkuOutput
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySkuArgs struct {
	// The capacity
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Gateway sku name -Basic/HighPerformance/Standard
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gateway sku tier -Basic/HighPerformance/Standard
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (VirtualNetworkGatewaySkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySku)(nil)).Elem()
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuOutput() VirtualNetworkGatewaySkuOutput {
	return i.ToVirtualNetworkGatewaySkuOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuOutput)
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return i.ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuOutput).ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx)
}

// VirtualNetworkGatewaySkuPtrInput is an input type that accepts VirtualNetworkGatewaySkuArgs, VirtualNetworkGatewaySkuPtr and VirtualNetworkGatewaySkuPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuPtrInput` via:
//
//          VirtualNetworkGatewaySkuArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewaySkuPtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput
	ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Context) VirtualNetworkGatewaySkuPtrOutput
}

type virtualNetworkGatewaySkuPtrType VirtualNetworkGatewaySkuArgs

func VirtualNetworkGatewaySkuPtr(v *VirtualNetworkGatewaySkuArgs) VirtualNetworkGatewaySkuPtrInput {
	return (*virtualNetworkGatewaySkuPtrType)(v)
}

func (*virtualNetworkGatewaySkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySku)(nil)).Elem()
}

func (i *virtualNetworkGatewaySkuPtrType) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return i.ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewaySkuPtrType) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuPtrOutput)
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySkuOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySku)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuOutput() VirtualNetworkGatewaySkuOutput {
	return o
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuOutput {
	return o
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return o.ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySku) *VirtualNetworkGatewaySku {
		return &v
	}).(VirtualNetworkGatewaySkuPtrOutput)
}

// The capacity
func (o VirtualNetworkGatewaySkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Gateway sku name -Basic/HighPerformance/Standard
func (o VirtualNetworkGatewaySkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gateway sku tier -Basic/HighPerformance/Standard
func (o VirtualNetworkGatewaySkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewaySkuPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySku)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuPtrOutput) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuPtrOutput) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuPtrOutput) Elem() VirtualNetworkGatewaySkuOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) VirtualNetworkGatewaySku { return *v }).(VirtualNetworkGatewaySkuOutput)
}

// The capacity
func (o VirtualNetworkGatewaySkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Gateway sku name -Basic/HighPerformance/Standard
func (o VirtualNetworkGatewaySkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gateway sku tier -Basic/HighPerformance/Standard
func (o VirtualNetworkGatewaySkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySkuInvokeResponse struct {
	// The capacity
	Capacity *int `pulumi:"capacity"`
	// Gateway sku name -Basic/HighPerformance/Standard
	Name *string `pulumi:"name"`
	// Gateway sku tier -Basic/HighPerformance/Standard
	Tier *string `pulumi:"tier"`
}

// VirtualNetworkGatewaySkuInvokeResponseInput is an input type that accepts VirtualNetworkGatewaySkuInvokeResponseArgs and VirtualNetworkGatewaySkuInvokeResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuInvokeResponseInput` via:
//
//          VirtualNetworkGatewaySkuInvokeResponseArgs{...}
type VirtualNetworkGatewaySkuInvokeResponseInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuInvokeResponseOutput() VirtualNetworkGatewaySkuInvokeResponseOutput
	ToVirtualNetworkGatewaySkuInvokeResponseOutputWithContext(context.Context) VirtualNetworkGatewaySkuInvokeResponseOutput
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySkuInvokeResponseArgs struct {
	// The capacity
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Gateway sku name -Basic/HighPerformance/Standard
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gateway sku tier -Basic/HighPerformance/Standard
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (VirtualNetworkGatewaySkuInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySkuInvokeResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewaySkuInvokeResponseArgs) ToVirtualNetworkGatewaySkuInvokeResponseOutput() VirtualNetworkGatewaySkuInvokeResponseOutput {
	return i.ToVirtualNetworkGatewaySkuInvokeResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuInvokeResponseArgs) ToVirtualNetworkGatewaySkuInvokeResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuInvokeResponseOutput)
}

func (i VirtualNetworkGatewaySkuInvokeResponseArgs) ToVirtualNetworkGatewaySkuInvokeResponsePtrOutput() VirtualNetworkGatewaySkuInvokeResponsePtrOutput {
	return i.ToVirtualNetworkGatewaySkuInvokeResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuInvokeResponseArgs) ToVirtualNetworkGatewaySkuInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuInvokeResponseOutput).ToVirtualNetworkGatewaySkuInvokeResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkGatewaySkuInvokeResponsePtrInput is an input type that accepts VirtualNetworkGatewaySkuInvokeResponseArgs, VirtualNetworkGatewaySkuInvokeResponsePtr and VirtualNetworkGatewaySkuInvokeResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuInvokeResponsePtrInput` via:
//
//          VirtualNetworkGatewaySkuInvokeResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewaySkuInvokeResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuInvokeResponsePtrOutput() VirtualNetworkGatewaySkuInvokeResponsePtrOutput
	ToVirtualNetworkGatewaySkuInvokeResponsePtrOutputWithContext(context.Context) VirtualNetworkGatewaySkuInvokeResponsePtrOutput
}

type virtualNetworkGatewaySkuInvokeResponsePtrType VirtualNetworkGatewaySkuInvokeResponseArgs

func VirtualNetworkGatewaySkuInvokeResponsePtr(v *VirtualNetworkGatewaySkuInvokeResponseArgs) VirtualNetworkGatewaySkuInvokeResponsePtrInput {
	return (*virtualNetworkGatewaySkuInvokeResponsePtrType)(v)
}

func (*virtualNetworkGatewaySkuInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySkuInvokeResponse)(nil)).Elem()
}

func (i *virtualNetworkGatewaySkuInvokeResponsePtrType) ToVirtualNetworkGatewaySkuInvokeResponsePtrOutput() VirtualNetworkGatewaySkuInvokeResponsePtrOutput {
	return i.ToVirtualNetworkGatewaySkuInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewaySkuInvokeResponsePtrType) ToVirtualNetworkGatewaySkuInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuInvokeResponsePtrOutput)
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySkuInvokeResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySkuInvokeResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuInvokeResponseOutput) ToVirtualNetworkGatewaySkuInvokeResponseOutput() VirtualNetworkGatewaySkuInvokeResponseOutput {
	return o
}

func (o VirtualNetworkGatewaySkuInvokeResponseOutput) ToVirtualNetworkGatewaySkuInvokeResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuInvokeResponseOutput {
	return o
}

func (o VirtualNetworkGatewaySkuInvokeResponseOutput) ToVirtualNetworkGatewaySkuInvokeResponsePtrOutput() VirtualNetworkGatewaySkuInvokeResponsePtrOutput {
	return o.ToVirtualNetworkGatewaySkuInvokeResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewaySkuInvokeResponseOutput) ToVirtualNetworkGatewaySkuInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuInvokeResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuInvokeResponse) *VirtualNetworkGatewaySkuInvokeResponse {
		return &v
	}).(VirtualNetworkGatewaySkuInvokeResponsePtrOutput)
}

// The capacity
func (o VirtualNetworkGatewaySkuInvokeResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuInvokeResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Gateway sku name -Basic/HighPerformance/Standard
func (o VirtualNetworkGatewaySkuInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gateway sku tier -Basic/HighPerformance/Standard
func (o VirtualNetworkGatewaySkuInvokeResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuInvokeResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewaySkuInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySkuInvokeResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuInvokeResponsePtrOutput) ToVirtualNetworkGatewaySkuInvokeResponsePtrOutput() VirtualNetworkGatewaySkuInvokeResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuInvokeResponsePtrOutput) ToVirtualNetworkGatewaySkuInvokeResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuInvokeResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuInvokeResponsePtrOutput) Elem() VirtualNetworkGatewaySkuInvokeResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuInvokeResponse) VirtualNetworkGatewaySkuInvokeResponse { return *v }).(VirtualNetworkGatewaySkuInvokeResponseOutput)
}

// The capacity
func (o VirtualNetworkGatewaySkuInvokeResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuInvokeResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Gateway sku name -Basic/HighPerformance/Standard
func (o VirtualNetworkGatewaySkuInvokeResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gateway sku tier -Basic/HighPerformance/Standard
func (o VirtualNetworkGatewaySkuInvokeResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuInvokeResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySkuResponse struct {
	// The capacity
	Capacity *int `pulumi:"capacity"`
	// Gateway sku name -Basic/HighPerformance/Standard
	Name *string `pulumi:"name"`
	// Gateway sku tier -Basic/HighPerformance/Standard
	Tier *string `pulumi:"tier"`
}

// VirtualNetworkGatewaySkuResponseInput is an input type that accepts VirtualNetworkGatewaySkuResponseArgs and VirtualNetworkGatewaySkuResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuResponseInput` via:
//
//          VirtualNetworkGatewaySkuResponseArgs{...}
type VirtualNetworkGatewaySkuResponseInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuResponseOutput() VirtualNetworkGatewaySkuResponseOutput
	ToVirtualNetworkGatewaySkuResponseOutputWithContext(context.Context) VirtualNetworkGatewaySkuResponseOutput
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySkuResponseArgs struct {
	// The capacity
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Gateway sku name -Basic/HighPerformance/Standard
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gateway sku tier -Basic/HighPerformance/Standard
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (VirtualNetworkGatewaySkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewaySkuResponseArgs) ToVirtualNetworkGatewaySkuResponseOutput() VirtualNetworkGatewaySkuResponseOutput {
	return i.ToVirtualNetworkGatewaySkuResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuResponseArgs) ToVirtualNetworkGatewaySkuResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuResponseOutput)
}

func (i VirtualNetworkGatewaySkuResponseArgs) ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput {
	return i.ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuResponseArgs) ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuResponseOutput).ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkGatewaySkuResponsePtrInput is an input type that accepts VirtualNetworkGatewaySkuResponseArgs, VirtualNetworkGatewaySkuResponsePtr and VirtualNetworkGatewaySkuResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuResponsePtrInput` via:
//
//          VirtualNetworkGatewaySkuResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewaySkuResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput
	ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(context.Context) VirtualNetworkGatewaySkuResponsePtrOutput
}

type virtualNetworkGatewaySkuResponsePtrType VirtualNetworkGatewaySkuResponseArgs

func VirtualNetworkGatewaySkuResponsePtr(v *VirtualNetworkGatewaySkuResponseArgs) VirtualNetworkGatewaySkuResponsePtrInput {
	return (*virtualNetworkGatewaySkuResponsePtrType)(v)
}

func (*virtualNetworkGatewaySkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (i *virtualNetworkGatewaySkuResponsePtrType) ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput {
	return i.ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewaySkuResponsePtrType) ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySkuResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponseOutput() VirtualNetworkGatewaySkuResponseOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponseOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) *VirtualNetworkGatewaySkuResponse {
		return &v
	}).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// The capacity
func (o VirtualNetworkGatewaySkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Gateway sku name -Basic/HighPerformance/Standard
func (o VirtualNetworkGatewaySkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gateway sku tier -Basic/HighPerformance/Standard
func (o VirtualNetworkGatewaySkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewaySkuResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuResponsePtrOutput) ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponsePtrOutput) ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponsePtrOutput) Elem() VirtualNetworkGatewaySkuResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) VirtualNetworkGatewaySkuResponse { return *v }).(VirtualNetworkGatewaySkuResponseOutput)
}

// The capacity
func (o VirtualNetworkGatewaySkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Gateway sku name -Basic/HighPerformance/Standard
func (o VirtualNetworkGatewaySkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gateway sku tier -Basic/HighPerformance/Standard
func (o VirtualNetworkGatewaySkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// VpnClientConfiguration for P2S client
type VpnClientConfiguration struct {
	// Gets or sets the reference of the Address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpace `pulumi:"vpnClientAddressPool"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates []VpnClientRevokedCertificate `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for Virtual network gateway.
	VpnClientRootCertificates []VpnClientRootCertificate `pulumi:"vpnClientRootCertificates"`
}

// VpnClientConfigurationInput is an input type that accepts VpnClientConfigurationArgs and VpnClientConfigurationOutput values.
// You can construct a concrete instance of `VpnClientConfigurationInput` via:
//
//          VpnClientConfigurationArgs{...}
type VpnClientConfigurationInput interface {
	pulumi.Input

	ToVpnClientConfigurationOutput() VpnClientConfigurationOutput
	ToVpnClientConfigurationOutputWithContext(context.Context) VpnClientConfigurationOutput
}

// VpnClientConfiguration for P2S client
type VpnClientConfigurationArgs struct {
	// Gets or sets the reference of the Address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpacePtrInput `pulumi:"vpnClientAddressPool"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates VpnClientRevokedCertificateArrayInput `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for Virtual network gateway.
	VpnClientRootCertificates VpnClientRootCertificateArrayInput `pulumi:"vpnClientRootCertificates"`
}

func (VpnClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfiguration)(nil)).Elem()
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationOutput() VpnClientConfigurationOutput {
	return i.ToVpnClientConfigurationOutputWithContext(context.Background())
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationOutputWithContext(ctx context.Context) VpnClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationOutput)
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return i.ToVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationOutput).ToVpnClientConfigurationPtrOutputWithContext(ctx)
}

// VpnClientConfigurationPtrInput is an input type that accepts VpnClientConfigurationArgs, VpnClientConfigurationPtr and VpnClientConfigurationPtrOutput values.
// You can construct a concrete instance of `VpnClientConfigurationPtrInput` via:
//
//          VpnClientConfigurationArgs{...}
//
//  or:
//
//          nil
type VpnClientConfigurationPtrInput interface {
	pulumi.Input

	ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput
	ToVpnClientConfigurationPtrOutputWithContext(context.Context) VpnClientConfigurationPtrOutput
}

type vpnClientConfigurationPtrType VpnClientConfigurationArgs

func VpnClientConfigurationPtr(v *VpnClientConfigurationArgs) VpnClientConfigurationPtrInput {
	return (*vpnClientConfigurationPtrType)(v)
}

func (*vpnClientConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfiguration)(nil)).Elem()
}

func (i *vpnClientConfigurationPtrType) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return i.ToVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (i *vpnClientConfigurationPtrType) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationPtrOutput)
}

// VpnClientConfiguration for P2S client
type VpnClientConfigurationOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfiguration)(nil)).Elem()
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationOutput() VpnClientConfigurationOutput {
	return o
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationOutputWithContext(ctx context.Context) VpnClientConfigurationOutput {
	return o
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return o.ToVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *VpnClientConfiguration {
		return &v
	}).(VpnClientConfigurationPtrOutput)
}

// Gets or sets the reference of the Address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationOutput) VpnClientAddressPool() AddressSpacePtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *AddressSpace { return v.VpnClientAddressPool }).(AddressSpacePtrOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []VpnClientRevokedCertificate { return v.VpnClientRevokedCertificates }).(VpnClientRevokedCertificateArrayOutput)
}

// VpnClientRootCertificate for Virtual network gateway.
func (o VpnClientConfigurationOutput) VpnClientRootCertificates() VpnClientRootCertificateArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []VpnClientRootCertificate { return v.VpnClientRootCertificates }).(VpnClientRootCertificateArrayOutput)
}

type VpnClientConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfiguration)(nil)).Elem()
}

func (o VpnClientConfigurationPtrOutput) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return o
}

func (o VpnClientConfigurationPtrOutput) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return o
}

func (o VpnClientConfigurationPtrOutput) Elem() VpnClientConfigurationOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) VpnClientConfiguration { return *v }).(VpnClientConfigurationOutput)
}

// Gets or sets the reference of the Address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationPtrOutput) VpnClientAddressPool() AddressSpacePtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *AddressSpace {
		if v == nil {
			return nil
		}
		return v.VpnClientAddressPool
	}).(AddressSpacePtrOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationPtrOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []VpnClientRevokedCertificate {
		if v == nil {
			return nil
		}
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateArrayOutput)
}

// VpnClientRootCertificate for Virtual network gateway.
func (o VpnClientConfigurationPtrOutput) VpnClientRootCertificates() VpnClientRootCertificateArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []VpnClientRootCertificate {
		if v == nil {
			return nil
		}
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateArrayOutput)
}

// VpnClientConfiguration for P2S client
type VpnClientConfigurationInvokeResponse struct {
	// Gets or sets the reference of the Address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpaceInvokeResponse `pulumi:"vpnClientAddressPool"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates []VpnClientRevokedCertificateInvokeResponse `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for Virtual network gateway.
	VpnClientRootCertificates []VpnClientRootCertificateInvokeResponse `pulumi:"vpnClientRootCertificates"`
}

// VpnClientConfigurationInvokeResponseInput is an input type that accepts VpnClientConfigurationInvokeResponseArgs and VpnClientConfigurationInvokeResponseOutput values.
// You can construct a concrete instance of `VpnClientConfigurationInvokeResponseInput` via:
//
//          VpnClientConfigurationInvokeResponseArgs{...}
type VpnClientConfigurationInvokeResponseInput interface {
	pulumi.Input

	ToVpnClientConfigurationInvokeResponseOutput() VpnClientConfigurationInvokeResponseOutput
	ToVpnClientConfigurationInvokeResponseOutputWithContext(context.Context) VpnClientConfigurationInvokeResponseOutput
}

// VpnClientConfiguration for P2S client
type VpnClientConfigurationInvokeResponseArgs struct {
	// Gets or sets the reference of the Address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpaceInvokeResponsePtrInput `pulumi:"vpnClientAddressPool"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates VpnClientRevokedCertificateInvokeResponseArrayInput `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for Virtual network gateway.
	VpnClientRootCertificates VpnClientRootCertificateInvokeResponseArrayInput `pulumi:"vpnClientRootCertificates"`
}

func (VpnClientConfigurationInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfigurationInvokeResponse)(nil)).Elem()
}

func (i VpnClientConfigurationInvokeResponseArgs) ToVpnClientConfigurationInvokeResponseOutput() VpnClientConfigurationInvokeResponseOutput {
	return i.ToVpnClientConfigurationInvokeResponseOutputWithContext(context.Background())
}

func (i VpnClientConfigurationInvokeResponseArgs) ToVpnClientConfigurationInvokeResponseOutputWithContext(ctx context.Context) VpnClientConfigurationInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationInvokeResponseOutput)
}

func (i VpnClientConfigurationInvokeResponseArgs) ToVpnClientConfigurationInvokeResponsePtrOutput() VpnClientConfigurationInvokeResponsePtrOutput {
	return i.ToVpnClientConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i VpnClientConfigurationInvokeResponseArgs) ToVpnClientConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationInvokeResponseOutput).ToVpnClientConfigurationInvokeResponsePtrOutputWithContext(ctx)
}

// VpnClientConfigurationInvokeResponsePtrInput is an input type that accepts VpnClientConfigurationInvokeResponseArgs, VpnClientConfigurationInvokeResponsePtr and VpnClientConfigurationInvokeResponsePtrOutput values.
// You can construct a concrete instance of `VpnClientConfigurationInvokeResponsePtrInput` via:
//
//          VpnClientConfigurationInvokeResponseArgs{...}
//
//  or:
//
//          nil
type VpnClientConfigurationInvokeResponsePtrInput interface {
	pulumi.Input

	ToVpnClientConfigurationInvokeResponsePtrOutput() VpnClientConfigurationInvokeResponsePtrOutput
	ToVpnClientConfigurationInvokeResponsePtrOutputWithContext(context.Context) VpnClientConfigurationInvokeResponsePtrOutput
}

type vpnClientConfigurationInvokeResponsePtrType VpnClientConfigurationInvokeResponseArgs

func VpnClientConfigurationInvokeResponsePtr(v *VpnClientConfigurationInvokeResponseArgs) VpnClientConfigurationInvokeResponsePtrInput {
	return (*vpnClientConfigurationInvokeResponsePtrType)(v)
}

func (*vpnClientConfigurationInvokeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfigurationInvokeResponse)(nil)).Elem()
}

func (i *vpnClientConfigurationInvokeResponsePtrType) ToVpnClientConfigurationInvokeResponsePtrOutput() VpnClientConfigurationInvokeResponsePtrOutput {
	return i.ToVpnClientConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (i *vpnClientConfigurationInvokeResponsePtrType) ToVpnClientConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationInvokeResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationInvokeResponsePtrOutput)
}

// VpnClientConfiguration for P2S client
type VpnClientConfigurationInvokeResponseOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfigurationInvokeResponse)(nil)).Elem()
}

func (o VpnClientConfigurationInvokeResponseOutput) ToVpnClientConfigurationInvokeResponseOutput() VpnClientConfigurationInvokeResponseOutput {
	return o
}

func (o VpnClientConfigurationInvokeResponseOutput) ToVpnClientConfigurationInvokeResponseOutputWithContext(ctx context.Context) VpnClientConfigurationInvokeResponseOutput {
	return o
}

func (o VpnClientConfigurationInvokeResponseOutput) ToVpnClientConfigurationInvokeResponsePtrOutput() VpnClientConfigurationInvokeResponsePtrOutput {
	return o.ToVpnClientConfigurationInvokeResponsePtrOutputWithContext(context.Background())
}

func (o VpnClientConfigurationInvokeResponseOutput) ToVpnClientConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationInvokeResponsePtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationInvokeResponse) *VpnClientConfigurationInvokeResponse {
		return &v
	}).(VpnClientConfigurationInvokeResponsePtrOutput)
}

// Gets or sets the reference of the Address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationInvokeResponseOutput) VpnClientAddressPool() AddressSpaceInvokeResponsePtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationInvokeResponse) *AddressSpaceInvokeResponse {
		return v.VpnClientAddressPool
	}).(AddressSpaceInvokeResponsePtrOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationInvokeResponseOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateInvokeResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationInvokeResponse) []VpnClientRevokedCertificateInvokeResponse {
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateInvokeResponseArrayOutput)
}

// VpnClientRootCertificate for Virtual network gateway.
func (o VpnClientConfigurationInvokeResponseOutput) VpnClientRootCertificates() VpnClientRootCertificateInvokeResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationInvokeResponse) []VpnClientRootCertificateInvokeResponse {
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateInvokeResponseArrayOutput)
}

type VpnClientConfigurationInvokeResponsePtrOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationInvokeResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfigurationInvokeResponse)(nil)).Elem()
}

func (o VpnClientConfigurationInvokeResponsePtrOutput) ToVpnClientConfigurationInvokeResponsePtrOutput() VpnClientConfigurationInvokeResponsePtrOutput {
	return o
}

func (o VpnClientConfigurationInvokeResponsePtrOutput) ToVpnClientConfigurationInvokeResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationInvokeResponsePtrOutput {
	return o
}

func (o VpnClientConfigurationInvokeResponsePtrOutput) Elem() VpnClientConfigurationInvokeResponseOutput {
	return o.ApplyT(func(v *VpnClientConfigurationInvokeResponse) VpnClientConfigurationInvokeResponse { return *v }).(VpnClientConfigurationInvokeResponseOutput)
}

// Gets or sets the reference of the Address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationInvokeResponsePtrOutput) VpnClientAddressPool() AddressSpaceInvokeResponsePtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationInvokeResponse) *AddressSpaceInvokeResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientAddressPool
	}).(AddressSpaceInvokeResponsePtrOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationInvokeResponsePtrOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateInvokeResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationInvokeResponse) []VpnClientRevokedCertificateInvokeResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateInvokeResponseArrayOutput)
}

// VpnClientRootCertificate for Virtual network gateway.
func (o VpnClientConfigurationInvokeResponsePtrOutput) VpnClientRootCertificates() VpnClientRootCertificateInvokeResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationInvokeResponse) []VpnClientRootCertificateInvokeResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateInvokeResponseArrayOutput)
}

// VpnClientConfiguration for P2S client
type VpnClientConfigurationResponse struct {
	// Gets or sets the reference of the Address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpaceResponse `pulumi:"vpnClientAddressPool"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates []VpnClientRevokedCertificateResponse `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for Virtual network gateway.
	VpnClientRootCertificates []VpnClientRootCertificateResponse `pulumi:"vpnClientRootCertificates"`
}

// VpnClientConfigurationResponseInput is an input type that accepts VpnClientConfigurationResponseArgs and VpnClientConfigurationResponseOutput values.
// You can construct a concrete instance of `VpnClientConfigurationResponseInput` via:
//
//          VpnClientConfigurationResponseArgs{...}
type VpnClientConfigurationResponseInput interface {
	pulumi.Input

	ToVpnClientConfigurationResponseOutput() VpnClientConfigurationResponseOutput
	ToVpnClientConfigurationResponseOutputWithContext(context.Context) VpnClientConfigurationResponseOutput
}

// VpnClientConfiguration for P2S client
type VpnClientConfigurationResponseArgs struct {
	// Gets or sets the reference of the Address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpaceResponsePtrInput `pulumi:"vpnClientAddressPool"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates VpnClientRevokedCertificateResponseArrayInput `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for Virtual network gateway.
	VpnClientRootCertificates VpnClientRootCertificateResponseArrayInput `pulumi:"vpnClientRootCertificates"`
}

func (VpnClientConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfigurationResponse)(nil)).Elem()
}

func (i VpnClientConfigurationResponseArgs) ToVpnClientConfigurationResponseOutput() VpnClientConfigurationResponseOutput {
	return i.ToVpnClientConfigurationResponseOutputWithContext(context.Background())
}

func (i VpnClientConfigurationResponseArgs) ToVpnClientConfigurationResponseOutputWithContext(ctx context.Context) VpnClientConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationResponseOutput)
}

func (i VpnClientConfigurationResponseArgs) ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput {
	return i.ToVpnClientConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i VpnClientConfigurationResponseArgs) ToVpnClientConfigurationResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationResponseOutput).ToVpnClientConfigurationResponsePtrOutputWithContext(ctx)
}

// VpnClientConfigurationResponsePtrInput is an input type that accepts VpnClientConfigurationResponseArgs, VpnClientConfigurationResponsePtr and VpnClientConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `VpnClientConfigurationResponsePtrInput` via:
//
//          VpnClientConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type VpnClientConfigurationResponsePtrInput interface {
	pulumi.Input

	ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput
	ToVpnClientConfigurationResponsePtrOutputWithContext(context.Context) VpnClientConfigurationResponsePtrOutput
}

type vpnClientConfigurationResponsePtrType VpnClientConfigurationResponseArgs

func VpnClientConfigurationResponsePtr(v *VpnClientConfigurationResponseArgs) VpnClientConfigurationResponsePtrInput {
	return (*vpnClientConfigurationResponsePtrType)(v)
}

func (*vpnClientConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfigurationResponse)(nil)).Elem()
}

func (i *vpnClientConfigurationResponsePtrType) ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput {
	return i.ToVpnClientConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *vpnClientConfigurationResponsePtrType) ToVpnClientConfigurationResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationResponsePtrOutput)
}

// VpnClientConfiguration for P2S client
type VpnClientConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfigurationResponse)(nil)).Elem()
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponseOutput() VpnClientConfigurationResponseOutput {
	return o
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponseOutputWithContext(ctx context.Context) VpnClientConfigurationResponseOutput {
	return o
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput {
	return o.ToVpnClientConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *VpnClientConfigurationResponse {
		return &v
	}).(VpnClientConfigurationResponsePtrOutput)
}

// Gets or sets the reference of the Address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationResponseOutput) VpnClientAddressPool() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *AddressSpaceResponse { return v.VpnClientAddressPool }).(AddressSpaceResponsePtrOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationResponseOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []VpnClientRevokedCertificateResponse {
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateResponseArrayOutput)
}

// VpnClientRootCertificate for Virtual network gateway.
func (o VpnClientConfigurationResponseOutput) VpnClientRootCertificates() VpnClientRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []VpnClientRootCertificateResponse {
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateResponseArrayOutput)
}

type VpnClientConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfigurationResponse)(nil)).Elem()
}

func (o VpnClientConfigurationResponsePtrOutput) ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput {
	return o
}

func (o VpnClientConfigurationResponsePtrOutput) ToVpnClientConfigurationResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationResponsePtrOutput {
	return o
}

func (o VpnClientConfigurationResponsePtrOutput) Elem() VpnClientConfigurationResponseOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) VpnClientConfigurationResponse { return *v }).(VpnClientConfigurationResponseOutput)
}

// Gets or sets the reference of the Address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientAddressPool() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *AddressSpaceResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientAddressPool
	}).(AddressSpaceResponsePtrOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []VpnClientRevokedCertificateResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateResponseArrayOutput)
}

// VpnClientRootCertificate for Virtual network gateway.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientRootCertificates() VpnClientRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []VpnClientRootCertificateResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateResponseArrayOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VpnClientRevokedCertificateInput is an input type that accepts VpnClientRevokedCertificateArgs and VpnClientRevokedCertificateOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateInput` via:
//
//          VpnClientRevokedCertificateArgs{...}
type VpnClientRevokedCertificateInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateOutput() VpnClientRevokedCertificateOutput
	ToVpnClientRevokedCertificateOutputWithContext(context.Context) VpnClientRevokedCertificateOutput
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (VpnClientRevokedCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificate)(nil)).Elem()
}

func (i VpnClientRevokedCertificateArgs) ToVpnClientRevokedCertificateOutput() VpnClientRevokedCertificateOutput {
	return i.ToVpnClientRevokedCertificateOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateArgs) ToVpnClientRevokedCertificateOutputWithContext(ctx context.Context) VpnClientRevokedCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateOutput)
}

// VpnClientRevokedCertificateArrayInput is an input type that accepts VpnClientRevokedCertificateArray and VpnClientRevokedCertificateArrayOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateArrayInput` via:
//
//          VpnClientRevokedCertificateArray{ VpnClientRevokedCertificateArgs{...} }
type VpnClientRevokedCertificateArrayInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateArrayOutput() VpnClientRevokedCertificateArrayOutput
	ToVpnClientRevokedCertificateArrayOutputWithContext(context.Context) VpnClientRevokedCertificateArrayOutput
}

type VpnClientRevokedCertificateArray []VpnClientRevokedCertificateInput

func (VpnClientRevokedCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificate)(nil)).Elem()
}

func (i VpnClientRevokedCertificateArray) ToVpnClientRevokedCertificateArrayOutput() VpnClientRevokedCertificateArrayOutput {
	return i.ToVpnClientRevokedCertificateArrayOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateArray) ToVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateArrayOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificate)(nil)).Elem()
}

func (o VpnClientRevokedCertificateOutput) ToVpnClientRevokedCertificateOutput() VpnClientRevokedCertificateOutput {
	return o
}

func (o VpnClientRevokedCertificateOutput) ToVpnClientRevokedCertificateOutputWithContext(ctx context.Context) VpnClientRevokedCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRevokedCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o VpnClientRevokedCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRevokedCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VpnClientRevokedCertificateOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnClientRevokedCertificateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnClientRevokedCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificate)(nil)).Elem()
}

func (o VpnClientRevokedCertificateArrayOutput) ToVpnClientRevokedCertificateArrayOutput() VpnClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateArrayOutput) ToVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateArrayOutput) Index(i pulumi.IntInput) VpnClientRevokedCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRevokedCertificate {
		return vs[0].([]VpnClientRevokedCertificate)[vs[1].(int)]
	}).(VpnClientRevokedCertificateOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateInvokeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VpnClientRevokedCertificateInvokeResponseInput is an input type that accepts VpnClientRevokedCertificateInvokeResponseArgs and VpnClientRevokedCertificateInvokeResponseOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateInvokeResponseInput` via:
//
//          VpnClientRevokedCertificateInvokeResponseArgs{...}
type VpnClientRevokedCertificateInvokeResponseInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateInvokeResponseOutput() VpnClientRevokedCertificateInvokeResponseOutput
	ToVpnClientRevokedCertificateInvokeResponseOutputWithContext(context.Context) VpnClientRevokedCertificateInvokeResponseOutput
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateInvokeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (VpnClientRevokedCertificateInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificateInvokeResponse)(nil)).Elem()
}

func (i VpnClientRevokedCertificateInvokeResponseArgs) ToVpnClientRevokedCertificateInvokeResponseOutput() VpnClientRevokedCertificateInvokeResponseOutput {
	return i.ToVpnClientRevokedCertificateInvokeResponseOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateInvokeResponseArgs) ToVpnClientRevokedCertificateInvokeResponseOutputWithContext(ctx context.Context) VpnClientRevokedCertificateInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateInvokeResponseOutput)
}

// VpnClientRevokedCertificateInvokeResponseArrayInput is an input type that accepts VpnClientRevokedCertificateInvokeResponseArray and VpnClientRevokedCertificateInvokeResponseArrayOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateInvokeResponseArrayInput` via:
//
//          VpnClientRevokedCertificateInvokeResponseArray{ VpnClientRevokedCertificateInvokeResponseArgs{...} }
type VpnClientRevokedCertificateInvokeResponseArrayInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateInvokeResponseArrayOutput() VpnClientRevokedCertificateInvokeResponseArrayOutput
	ToVpnClientRevokedCertificateInvokeResponseArrayOutputWithContext(context.Context) VpnClientRevokedCertificateInvokeResponseArrayOutput
}

type VpnClientRevokedCertificateInvokeResponseArray []VpnClientRevokedCertificateInvokeResponseInput

func (VpnClientRevokedCertificateInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificateInvokeResponse)(nil)).Elem()
}

func (i VpnClientRevokedCertificateInvokeResponseArray) ToVpnClientRevokedCertificateInvokeResponseArrayOutput() VpnClientRevokedCertificateInvokeResponseArrayOutput {
	return i.ToVpnClientRevokedCertificateInvokeResponseArrayOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateInvokeResponseArray) ToVpnClientRevokedCertificateInvokeResponseArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateInvokeResponseArrayOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateInvokeResponseOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificateInvokeResponse)(nil)).Elem()
}

func (o VpnClientRevokedCertificateInvokeResponseOutput) ToVpnClientRevokedCertificateInvokeResponseOutput() VpnClientRevokedCertificateInvokeResponseOutput {
	return o
}

func (o VpnClientRevokedCertificateInvokeResponseOutput) ToVpnClientRevokedCertificateInvokeResponseOutputWithContext(ctx context.Context) VpnClientRevokedCertificateInvokeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRevokedCertificateInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o VpnClientRevokedCertificateInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRevokedCertificateInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VpnClientRevokedCertificateInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnClientRevokedCertificateInvokeResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateInvokeResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnClientRevokedCertificateInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificateInvokeResponse)(nil)).Elem()
}

func (o VpnClientRevokedCertificateInvokeResponseArrayOutput) ToVpnClientRevokedCertificateInvokeResponseArrayOutput() VpnClientRevokedCertificateInvokeResponseArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateInvokeResponseArrayOutput) ToVpnClientRevokedCertificateInvokeResponseArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateInvokeResponseArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateInvokeResponseArrayOutput) Index(i pulumi.IntInput) VpnClientRevokedCertificateInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRevokedCertificateInvokeResponse {
		return vs[0].([]VpnClientRevokedCertificateInvokeResponse)[vs[1].(int)]
	}).(VpnClientRevokedCertificateInvokeResponseOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VpnClientRevokedCertificateResponseInput is an input type that accepts VpnClientRevokedCertificateResponseArgs and VpnClientRevokedCertificateResponseOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateResponseInput` via:
//
//          VpnClientRevokedCertificateResponseArgs{...}
type VpnClientRevokedCertificateResponseInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateResponseOutput() VpnClientRevokedCertificateResponseOutput
	ToVpnClientRevokedCertificateResponseOutputWithContext(context.Context) VpnClientRevokedCertificateResponseOutput
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (VpnClientRevokedCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (i VpnClientRevokedCertificateResponseArgs) ToVpnClientRevokedCertificateResponseOutput() VpnClientRevokedCertificateResponseOutput {
	return i.ToVpnClientRevokedCertificateResponseOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateResponseArgs) ToVpnClientRevokedCertificateResponseOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateResponseOutput)
}

// VpnClientRevokedCertificateResponseArrayInput is an input type that accepts VpnClientRevokedCertificateResponseArray and VpnClientRevokedCertificateResponseArrayOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateResponseArrayInput` via:
//
//          VpnClientRevokedCertificateResponseArray{ VpnClientRevokedCertificateResponseArgs{...} }
type VpnClientRevokedCertificateResponseArrayInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateResponseArrayOutput() VpnClientRevokedCertificateResponseArrayOutput
	ToVpnClientRevokedCertificateResponseArrayOutputWithContext(context.Context) VpnClientRevokedCertificateResponseArrayOutput
}

type VpnClientRevokedCertificateResponseArray []VpnClientRevokedCertificateResponseInput

func (VpnClientRevokedCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (i VpnClientRevokedCertificateResponseArray) ToVpnClientRevokedCertificateResponseArrayOutput() VpnClientRevokedCertificateResponseArrayOutput {
	return i.ToVpnClientRevokedCertificateResponseArrayOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateResponseArray) ToVpnClientRevokedCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateResponseArrayOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o VpnClientRevokedCertificateResponseOutput) ToVpnClientRevokedCertificateResponseOutput() VpnClientRevokedCertificateResponseOutput {
	return o
}

func (o VpnClientRevokedCertificateResponseOutput) ToVpnClientRevokedCertificateResponseOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRevokedCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o VpnClientRevokedCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRevokedCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VpnClientRevokedCertificateResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnClientRevokedCertificateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnClientRevokedCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o VpnClientRevokedCertificateResponseArrayOutput) ToVpnClientRevokedCertificateResponseArrayOutput() VpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateResponseArrayOutput) ToVpnClientRevokedCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnClientRevokedCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRevokedCertificateResponse {
		return vs[0].([]VpnClientRevokedCertificateResponse)[vs[1].(int)]
	}).(VpnClientRevokedCertificateResponseOutput)
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Gets or sets the certificate public data
	PublicCertData *string `pulumi:"publicCertData"`
}

// VpnClientRootCertificateInput is an input type that accepts VpnClientRootCertificateArgs and VpnClientRootCertificateOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateInput` via:
//
//          VpnClientRootCertificateArgs{...}
type VpnClientRootCertificateInput interface {
	pulumi.Input

	ToVpnClientRootCertificateOutput() VpnClientRootCertificateOutput
	ToVpnClientRootCertificateOutputWithContext(context.Context) VpnClientRootCertificateOutput
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Gets or sets the certificate public data
	PublicCertData pulumi.StringPtrInput `pulumi:"publicCertData"`
}

func (VpnClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificate)(nil)).Elem()
}

func (i VpnClientRootCertificateArgs) ToVpnClientRootCertificateOutput() VpnClientRootCertificateOutput {
	return i.ToVpnClientRootCertificateOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateArgs) ToVpnClientRootCertificateOutputWithContext(ctx context.Context) VpnClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateOutput)
}

// VpnClientRootCertificateArrayInput is an input type that accepts VpnClientRootCertificateArray and VpnClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateArrayInput` via:
//
//          VpnClientRootCertificateArray{ VpnClientRootCertificateArgs{...} }
type VpnClientRootCertificateArrayInput interface {
	pulumi.Input

	ToVpnClientRootCertificateArrayOutput() VpnClientRootCertificateArrayOutput
	ToVpnClientRootCertificateArrayOutputWithContext(context.Context) VpnClientRootCertificateArrayOutput
}

type VpnClientRootCertificateArray []VpnClientRootCertificateInput

func (VpnClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificate)(nil)).Elem()
}

func (i VpnClientRootCertificateArray) ToVpnClientRootCertificateArrayOutput() VpnClientRootCertificateArrayOutput {
	return i.ToVpnClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateArray) ToVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateArrayOutput)
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificateOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificate)(nil)).Elem()
}

func (o VpnClientRootCertificateOutput) ToVpnClientRootCertificateOutput() VpnClientRootCertificateOutput {
	return o
}

func (o VpnClientRootCertificateOutput) ToVpnClientRootCertificateOutputWithContext(ctx context.Context) VpnClientRootCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRootCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o VpnClientRootCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VpnClientRootCertificateOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Gets or sets the certificate public data
func (o VpnClientRootCertificateOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type VpnClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificate)(nil)).Elem()
}

func (o VpnClientRootCertificateArrayOutput) ToVpnClientRootCertificateArrayOutput() VpnClientRootCertificateArrayOutput {
	return o
}

func (o VpnClientRootCertificateArrayOutput) ToVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateArrayOutput {
	return o
}

func (o VpnClientRootCertificateArrayOutput) Index(i pulumi.IntInput) VpnClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRootCertificate {
		return vs[0].([]VpnClientRootCertificate)[vs[1].(int)]
	}).(VpnClientRootCertificateOutput)
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificateInvokeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Gets or sets the certificate public data
	PublicCertData *string `pulumi:"publicCertData"`
}

// VpnClientRootCertificateInvokeResponseInput is an input type that accepts VpnClientRootCertificateInvokeResponseArgs and VpnClientRootCertificateInvokeResponseOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateInvokeResponseInput` via:
//
//          VpnClientRootCertificateInvokeResponseArgs{...}
type VpnClientRootCertificateInvokeResponseInput interface {
	pulumi.Input

	ToVpnClientRootCertificateInvokeResponseOutput() VpnClientRootCertificateInvokeResponseOutput
	ToVpnClientRootCertificateInvokeResponseOutputWithContext(context.Context) VpnClientRootCertificateInvokeResponseOutput
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificateInvokeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Gets or sets the certificate public data
	PublicCertData pulumi.StringPtrInput `pulumi:"publicCertData"`
}

func (VpnClientRootCertificateInvokeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificateInvokeResponse)(nil)).Elem()
}

func (i VpnClientRootCertificateInvokeResponseArgs) ToVpnClientRootCertificateInvokeResponseOutput() VpnClientRootCertificateInvokeResponseOutput {
	return i.ToVpnClientRootCertificateInvokeResponseOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateInvokeResponseArgs) ToVpnClientRootCertificateInvokeResponseOutputWithContext(ctx context.Context) VpnClientRootCertificateInvokeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateInvokeResponseOutput)
}

// VpnClientRootCertificateInvokeResponseArrayInput is an input type that accepts VpnClientRootCertificateInvokeResponseArray and VpnClientRootCertificateInvokeResponseArrayOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateInvokeResponseArrayInput` via:
//
//          VpnClientRootCertificateInvokeResponseArray{ VpnClientRootCertificateInvokeResponseArgs{...} }
type VpnClientRootCertificateInvokeResponseArrayInput interface {
	pulumi.Input

	ToVpnClientRootCertificateInvokeResponseArrayOutput() VpnClientRootCertificateInvokeResponseArrayOutput
	ToVpnClientRootCertificateInvokeResponseArrayOutputWithContext(context.Context) VpnClientRootCertificateInvokeResponseArrayOutput
}

type VpnClientRootCertificateInvokeResponseArray []VpnClientRootCertificateInvokeResponseInput

func (VpnClientRootCertificateInvokeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificateInvokeResponse)(nil)).Elem()
}

func (i VpnClientRootCertificateInvokeResponseArray) ToVpnClientRootCertificateInvokeResponseArrayOutput() VpnClientRootCertificateInvokeResponseArrayOutput {
	return i.ToVpnClientRootCertificateInvokeResponseArrayOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateInvokeResponseArray) ToVpnClientRootCertificateInvokeResponseArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateInvokeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateInvokeResponseArrayOutput)
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificateInvokeResponseOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateInvokeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificateInvokeResponse)(nil)).Elem()
}

func (o VpnClientRootCertificateInvokeResponseOutput) ToVpnClientRootCertificateInvokeResponseOutput() VpnClientRootCertificateInvokeResponseOutput {
	return o
}

func (o VpnClientRootCertificateInvokeResponseOutput) ToVpnClientRootCertificateInvokeResponseOutputWithContext(ctx context.Context) VpnClientRootCertificateInvokeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRootCertificateInvokeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateInvokeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o VpnClientRootCertificateInvokeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateInvokeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRootCertificateInvokeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateInvokeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VpnClientRootCertificateInvokeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateInvokeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Gets or sets the certificate public data
func (o VpnClientRootCertificateInvokeResponseOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateInvokeResponse) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type VpnClientRootCertificateInvokeResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateInvokeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificateInvokeResponse)(nil)).Elem()
}

func (o VpnClientRootCertificateInvokeResponseArrayOutput) ToVpnClientRootCertificateInvokeResponseArrayOutput() VpnClientRootCertificateInvokeResponseArrayOutput {
	return o
}

func (o VpnClientRootCertificateInvokeResponseArrayOutput) ToVpnClientRootCertificateInvokeResponseArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateInvokeResponseArrayOutput {
	return o
}

func (o VpnClientRootCertificateInvokeResponseArrayOutput) Index(i pulumi.IntInput) VpnClientRootCertificateInvokeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRootCertificateInvokeResponse {
		return vs[0].([]VpnClientRootCertificateInvokeResponse)[vs[1].(int)]
	}).(VpnClientRootCertificateInvokeResponseOutput)
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource Identifier.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Gets or sets the certificate public data
	PublicCertData *string `pulumi:"publicCertData"`
}

// VpnClientRootCertificateResponseInput is an input type that accepts VpnClientRootCertificateResponseArgs and VpnClientRootCertificateResponseOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateResponseInput` via:
//
//          VpnClientRootCertificateResponseArgs{...}
type VpnClientRootCertificateResponseInput interface {
	pulumi.Input

	ToVpnClientRootCertificateResponseOutput() VpnClientRootCertificateResponseOutput
	ToVpnClientRootCertificateResponseOutputWithContext(context.Context) VpnClientRootCertificateResponseOutput
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificateResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource Identifier.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Gets or sets the certificate public data
	PublicCertData pulumi.StringPtrInput `pulumi:"publicCertData"`
}

func (VpnClientRootCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificateResponse)(nil)).Elem()
}

func (i VpnClientRootCertificateResponseArgs) ToVpnClientRootCertificateResponseOutput() VpnClientRootCertificateResponseOutput {
	return i.ToVpnClientRootCertificateResponseOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateResponseArgs) ToVpnClientRootCertificateResponseOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateResponseOutput)
}

// VpnClientRootCertificateResponseArrayInput is an input type that accepts VpnClientRootCertificateResponseArray and VpnClientRootCertificateResponseArrayOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateResponseArrayInput` via:
//
//          VpnClientRootCertificateResponseArray{ VpnClientRootCertificateResponseArgs{...} }
type VpnClientRootCertificateResponseArrayInput interface {
	pulumi.Input

	ToVpnClientRootCertificateResponseArrayOutput() VpnClientRootCertificateResponseArrayOutput
	ToVpnClientRootCertificateResponseArrayOutputWithContext(context.Context) VpnClientRootCertificateResponseArrayOutput
}

type VpnClientRootCertificateResponseArray []VpnClientRootCertificateResponseInput

func (VpnClientRootCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificateResponse)(nil)).Elem()
}

func (i VpnClientRootCertificateResponseArray) ToVpnClientRootCertificateResponseArrayOutput() VpnClientRootCertificateResponseArrayOutput {
	return i.ToVpnClientRootCertificateResponseArrayOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateResponseArray) ToVpnClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateResponseArrayOutput)
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnClientRootCertificateResponseOutput) ToVpnClientRootCertificateResponseOutput() VpnClientRootCertificateResponseOutput {
	return o
}

func (o VpnClientRootCertificateResponseOutput) ToVpnClientRootCertificateResponseOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRootCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource Identifier.
func (o VpnClientRootCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VpnClientRootCertificateResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Gets or sets the certificate public data
func (o VpnClientRootCertificateResponseOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

type VpnClientRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnClientRootCertificateResponseArrayOutput) ToVpnClientRootCertificateResponseArrayOutput() VpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRootCertificateResponseArrayOutput) ToVpnClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnClientRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRootCertificateResponse {
		return vs[0].([]VpnClientRootCertificateResponse)[vs[1].(int)]
	}).(VpnClientRootCertificateResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AddressSpaceOutput{})
	pulumi.RegisterOutputType(AddressSpacePtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceInvokeResponseOutput{})
	pulumi.RegisterOutputType(AddressSpaceInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceResponseOutput{})
	pulumi.RegisterOutputType(AddressSpaceResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapInvokeResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapResponseArrayOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolArrayOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolInvokeResponseOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolResponseOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(BgpSettingsOutput{})
	pulumi.RegisterOutputType(BgpSettingsPtrOutput{})
	pulumi.RegisterOutputType(BgpSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(BgpSettingsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(BgpSettingsResponseOutput{})
	pulumi.RegisterOutputType(BgpSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(DhcpOptionsOutput{})
	pulumi.RegisterOutputType(DhcpOptionsPtrOutput{})
	pulumi.RegisterOutputType(DhcpOptionsInvokeResponseOutput{})
	pulumi.RegisterOutputType(DhcpOptionsResponseOutput{})
	pulumi.RegisterOutputType(DhcpOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationTypeOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationTypeArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationInvokeResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringTypeOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringTypeArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigInvokeResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringInvokeResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesInvokeResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuInvokeResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsInvokeResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsResponsePtrOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationInvokeResponseOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationOutput{})
	pulumi.RegisterOutputType(IPConfigurationPtrOutput{})
	pulumi.RegisterOutputType(IPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationInvokeResponseOutput{})
	pulumi.RegisterOutputType(IPConfigurationInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(IPConfigurationInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(InboundNatPoolOutput{})
	pulumi.RegisterOutputType(InboundNatPoolArrayOutput{})
	pulumi.RegisterOutputType(InboundNatPoolInvokeResponseOutput{})
	pulumi.RegisterOutputType(InboundNatPoolInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(InboundNatPoolResponseOutput{})
	pulumi.RegisterOutputType(InboundNatPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(InboundNatRuleOutput{})
	pulumi.RegisterOutputType(InboundNatRuleArrayOutput{})
	pulumi.RegisterOutputType(InboundNatRuleInvokeResponseOutput{})
	pulumi.RegisterOutputType(InboundNatRuleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(InboundNatRuleResponseOutput{})
	pulumi.RegisterOutputType(InboundNatRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleInvokeResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayTypeOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayTypePtrOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayInvokeResponseOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayResponseOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTypeOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceTypeArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsPtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationPtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationInvokeResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceInvokeResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupTypeOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupTypePtrOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupInvokeResponseOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupResponseOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupResponsePtrOutput{})
	pulumi.RegisterOutputType(OutboundNatRuleOutput{})
	pulumi.RegisterOutputType(OutboundNatRuleArrayOutput{})
	pulumi.RegisterOutputType(OutboundNatRuleInvokeResponseOutput{})
	pulumi.RegisterOutputType(OutboundNatRuleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(OutboundNatRuleResponseOutput{})
	pulumi.RegisterOutputType(OutboundNatRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ProbeOutput{})
	pulumi.RegisterOutputType(ProbeArrayOutput{})
	pulumi.RegisterOutputType(ProbeInvokeResponseOutput{})
	pulumi.RegisterOutputType(ProbeInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(ProbeResponseOutput{})
	pulumi.RegisterOutputType(ProbeResponseArrayOutput{})
	pulumi.RegisterOutputType(PublicIPAddressTypeOutput{})
	pulumi.RegisterOutputType(PublicIPAddressTypePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsPtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsInvokeResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressInvokeResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressResponsePtrOutput{})
	pulumi.RegisterOutputType(RouteTypeOutput{})
	pulumi.RegisterOutputType(RouteTypeArrayOutput{})
	pulumi.RegisterOutputType(RouteInvokeResponseOutput{})
	pulumi.RegisterOutputType(RouteInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteResponseOutput{})
	pulumi.RegisterOutputType(RouteResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteTableTypeOutput{})
	pulumi.RegisterOutputType(RouteTableTypePtrOutput{})
	pulumi.RegisterOutputType(RouteTableInvokeResponseOutput{})
	pulumi.RegisterOutputType(RouteTableInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(RouteTableResponseOutput{})
	pulumi.RegisterOutputType(RouteTableResponsePtrOutput{})
	pulumi.RegisterOutputType(SecurityRuleTypeOutput{})
	pulumi.RegisterOutputType(SecurityRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(SecurityRuleInvokeResponseOutput{})
	pulumi.RegisterOutputType(SecurityRuleInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SecurityRuleResponseOutput{})
	pulumi.RegisterOutputType(SecurityRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(SubResourceOutput{})
	pulumi.RegisterOutputType(SubResourcePtrOutput{})
	pulumi.RegisterOutputType(SubResourceArrayOutput{})
	pulumi.RegisterOutputType(SubResourceInvokeResponseOutput{})
	pulumi.RegisterOutputType(SubResourceInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SubResourceInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SubResourceResponseOutput{})
	pulumi.RegisterOutputType(SubResourceResponsePtrOutput{})
	pulumi.RegisterOutputType(SubResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(SubnetTypeOutput{})
	pulumi.RegisterOutputType(SubnetTypePtrOutput{})
	pulumi.RegisterOutputType(SubnetTypeArrayOutput{})
	pulumi.RegisterOutputType(SubnetInvokeResponseOutput{})
	pulumi.RegisterOutputType(SubnetInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(SubnetInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(SubnetResponseOutput{})
	pulumi.RegisterOutputType(SubnetResponsePtrOutput{})
	pulumi.RegisterOutputType(SubnetResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayTypeOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayTypePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuInvokeResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationInvokeResponseOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationInvokeResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateInvokeResponseOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateInvokeResponseOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateInvokeResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateResponseArrayOutput{})
}
