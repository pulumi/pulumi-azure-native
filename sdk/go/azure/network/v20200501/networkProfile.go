// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200501

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkProfile struct {
	pulumi.CustomResourceState

	ContainerNetworkInterfaceConfigurations ContainerNetworkInterfaceConfigurationResponseArrayOutput `pulumi:"containerNetworkInterfaceConfigurations"`
	ContainerNetworkInterfaces              ContainerNetworkInterfaceResponseArrayOutput              `pulumi:"containerNetworkInterfaces"`
	Etag                                    pulumi.StringOutput                                       `pulumi:"etag"`
	Location                                pulumi.StringPtrOutput                                    `pulumi:"location"`
	Name                                    pulumi.StringOutput                                       `pulumi:"name"`
	ProvisioningState                       pulumi.StringOutput                                       `pulumi:"provisioningState"`
	ResourceGuid                            pulumi.StringOutput                                       `pulumi:"resourceGuid"`
	Tags                                    pulumi.StringMapOutput                                    `pulumi:"tags"`
	Type                                    pulumi.StringOutput                                       `pulumi:"type"`
}

// NewNetworkProfile registers a new resource with the given unique name, arguments, and options.
func NewNetworkProfile(ctx *pulumi.Context,
	name string, args *NetworkProfileArgs, opts ...pulumi.ResourceOption) (*NetworkProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceGroupName == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroupName'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:network/v20200501:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20180801:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20180801:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20181001:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20181001:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20181101:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20181101:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20181201:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20181201:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20190201:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20190201:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20190401:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20190401:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20190601:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20190601:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20190701:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20190701:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20190801:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20190801:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20190901:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20190901:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20191101:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20191101:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20191201:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20191201:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20200301:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20200301:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20200401:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20200401:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20200601:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20200601:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20200701:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20200701:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20200801:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20200801:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20201101:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20201101:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20210201:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20210201:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-native:network/v20210301:NetworkProfile"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20210301:NetworkProfile"),
		},
	})
	opts = append(opts, aliases)
	var resource NetworkProfile
	err := ctx.RegisterResource("azure-native:network/v20200501:NetworkProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkProfile gets an existing NetworkProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkProfileState, opts ...pulumi.ResourceOption) (*NetworkProfile, error) {
	var resource NetworkProfile
	err := ctx.ReadResource("azure-native:network/v20200501:NetworkProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkProfile resources.
type networkProfileState struct {
}

type NetworkProfileState struct {
}

func (NetworkProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkProfileState)(nil)).Elem()
}

type networkProfileArgs struct {
	ContainerNetworkInterfaceConfigurations []ContainerNetworkInterfaceConfiguration `pulumi:"containerNetworkInterfaceConfigurations"`
	Id                                      *string                                  `pulumi:"id"`
	Location                                *string                                  `pulumi:"location"`
	NetworkProfileName                      *string                                  `pulumi:"networkProfileName"`
	ResourceGroupName                       string                                   `pulumi:"resourceGroupName"`
	Tags                                    map[string]string                        `pulumi:"tags"`
}

// The set of arguments for constructing a NetworkProfile resource.
type NetworkProfileArgs struct {
	ContainerNetworkInterfaceConfigurations ContainerNetworkInterfaceConfigurationArrayInput
	Id                                      pulumi.StringPtrInput
	Location                                pulumi.StringPtrInput
	NetworkProfileName                      pulumi.StringPtrInput
	ResourceGroupName                       pulumi.StringInput
	Tags                                    pulumi.StringMapInput
}

func (NetworkProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkProfileArgs)(nil)).Elem()
}

type NetworkProfileInput interface {
	pulumi.Input

	ToNetworkProfileOutput() NetworkProfileOutput
	ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput
}

func (*NetworkProfile) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil))
}

func (i *NetworkProfile) ToNetworkProfileOutput() NetworkProfileOutput {
	return i.ToNetworkProfileOutputWithContext(context.Background())
}

func (i *NetworkProfile) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkProfileOutput)
}

type NetworkProfileOutput struct{ *pulumi.OutputState }

func (NetworkProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkProfile)(nil))
}

func (o NetworkProfileOutput) ToNetworkProfileOutput() NetworkProfileOutput {
	return o
}

func (o NetworkProfileOutput) ToNetworkProfileOutputWithContext(ctx context.Context) NetworkProfileOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(NetworkProfileOutput{})
}
