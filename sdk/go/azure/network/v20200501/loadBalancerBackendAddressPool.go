// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20200501

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Pool of backend IP addresses.
type LoadBalancerBackendAddressPool struct {
	pulumi.CustomResourceState

	// An array of references to IP addresses defined in network interfaces.
	BackendIPConfigurations NetworkInterfaceIPConfigurationResponseArrayOutput `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// An array of backend addresses.
	LoadBalancerBackendAddresses LoadBalancerBackendAddressResponseArrayOutput `pulumi:"loadBalancerBackendAddresses"`
	// An array of references to load balancing rules that use this backend address pool.
	LoadBalancingRules SubResourceResponseArrayOutput `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// A reference to an outbound rule that uses this backend address pool.
	OutboundRule SubResourceResponseOutput `pulumi:"outboundRule"`
	// An array of references to outbound rules that use this backend address pool.
	OutboundRules SubResourceResponseArrayOutput `pulumi:"outboundRules"`
	// The provisioning state of the backend address pool resource.
	ProvisioningState pulumi.StringOutput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewLoadBalancerBackendAddressPool registers a new resource with the given unique name, arguments, and options.
func NewLoadBalancerBackendAddressPool(ctx *pulumi.Context,
	name string, args *LoadBalancerBackendAddressPoolArgs, opts ...pulumi.ResourceOption) (*LoadBalancerBackendAddressPool, error) {
	if args == nil || args.BackendAddressPoolName == nil {
		return nil, errors.New("missing required argument 'BackendAddressPoolName'")
	}
	if args == nil || args.LoadBalancerName == nil {
		return nil, errors.New("missing required argument 'LoadBalancerName'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil {
		args = &LoadBalancerBackendAddressPoolArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:network/latest:LoadBalancerBackendAddressPool"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20200401:LoadBalancerBackendAddressPool"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20200601:LoadBalancerBackendAddressPool"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20200701:LoadBalancerBackendAddressPool"),
		},
	})
	opts = append(opts, aliases)
	var resource LoadBalancerBackendAddressPool
	err := ctx.RegisterResource("azure-nextgen:network/v20200501:LoadBalancerBackendAddressPool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoadBalancerBackendAddressPool gets an existing LoadBalancerBackendAddressPool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoadBalancerBackendAddressPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoadBalancerBackendAddressPoolState, opts ...pulumi.ResourceOption) (*LoadBalancerBackendAddressPool, error) {
	var resource LoadBalancerBackendAddressPool
	err := ctx.ReadResource("azure-nextgen:network/v20200501:LoadBalancerBackendAddressPool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoadBalancerBackendAddressPool resources.
type loadBalancerBackendAddressPoolState struct {
	// An array of references to IP addresses defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// An array of backend addresses.
	LoadBalancerBackendAddresses []LoadBalancerBackendAddressResponse `pulumi:"loadBalancerBackendAddresses"`
	// An array of references to load balancing rules that use this backend address pool.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// A reference to an outbound rule that uses this backend address pool.
	OutboundRule *SubResourceResponse `pulumi:"outboundRule"`
	// An array of references to outbound rules that use this backend address pool.
	OutboundRules []SubResourceResponse `pulumi:"outboundRules"`
	// The provisioning state of the backend address pool resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

type LoadBalancerBackendAddressPoolState struct {
	// An array of references to IP addresses defined in network interfaces.
	BackendIPConfigurations NetworkInterfaceIPConfigurationResponseArrayInput
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput
	// An array of backend addresses.
	LoadBalancerBackendAddresses LoadBalancerBackendAddressResponseArrayInput
	// An array of references to load balancing rules that use this backend address pool.
	LoadBalancingRules SubResourceResponseArrayInput
	// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput
	// A reference to an outbound rule that uses this backend address pool.
	OutboundRule SubResourceResponsePtrInput
	// An array of references to outbound rules that use this backend address pool.
	OutboundRules SubResourceResponseArrayInput
	// The provisioning state of the backend address pool resource.
	ProvisioningState pulumi.StringPtrInput
	// Type of the resource.
	Type pulumi.StringPtrInput
}

func (LoadBalancerBackendAddressPoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerBackendAddressPoolState)(nil)).Elem()
}

type loadBalancerBackendAddressPoolArgs struct {
	// The name of the backend address pool.
	BackendAddressPoolName string `pulumi:"backendAddressPoolName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// An array of backend addresses.
	LoadBalancerBackendAddresses []LoadBalancerBackendAddress `pulumi:"loadBalancerBackendAddresses"`
	// The name of the load balancer.
	LoadBalancerName string `pulumi:"loadBalancerName"`
	// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// The set of arguments for constructing a LoadBalancerBackendAddressPool resource.
type LoadBalancerBackendAddressPoolArgs struct {
	// The name of the backend address pool.
	BackendAddressPoolName pulumi.StringInput
	// Resource ID.
	Id pulumi.StringPtrInput
	// An array of backend addresses.
	LoadBalancerBackendAddresses LoadBalancerBackendAddressArrayInput
	// The name of the load balancer.
	LoadBalancerName pulumi.StringInput
	// The name of the resource that is unique within the set of backend address pools used by the load balancer. This name can be used to access the resource.
	Name pulumi.StringPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
}

func (LoadBalancerBackendAddressPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loadBalancerBackendAddressPoolArgs)(nil)).Elem()
}
