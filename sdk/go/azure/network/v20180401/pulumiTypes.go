// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20180401

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpace struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
}

// AddressSpaceInput is an input type that accepts AddressSpaceArgs and AddressSpaceOutput values.
// You can construct a concrete instance of `AddressSpaceInput` via:
//
//          AddressSpaceArgs{...}
type AddressSpaceInput interface {
	pulumi.Input

	ToAddressSpaceOutput() AddressSpaceOutput
	ToAddressSpaceOutputWithContext(context.Context) AddressSpaceOutput
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceArgs struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
}

func (AddressSpaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpace)(nil)).Elem()
}

func (i AddressSpaceArgs) ToAddressSpaceOutput() AddressSpaceOutput {
	return i.ToAddressSpaceOutputWithContext(context.Background())
}

func (i AddressSpaceArgs) ToAddressSpaceOutputWithContext(ctx context.Context) AddressSpaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceOutput)
}

func (i AddressSpaceArgs) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return i.ToAddressSpacePtrOutputWithContext(context.Background())
}

func (i AddressSpaceArgs) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceOutput).ToAddressSpacePtrOutputWithContext(ctx)
}

// AddressSpacePtrInput is an input type that accepts AddressSpaceArgs, AddressSpacePtr and AddressSpacePtrOutput values.
// You can construct a concrete instance of `AddressSpacePtrInput` via:
//
//          AddressSpaceArgs{...}
//
//  or:
//
//          nil
type AddressSpacePtrInput interface {
	pulumi.Input

	ToAddressSpacePtrOutput() AddressSpacePtrOutput
	ToAddressSpacePtrOutputWithContext(context.Context) AddressSpacePtrOutput
}

type addressSpacePtrType AddressSpaceArgs

func AddressSpacePtr(v *AddressSpaceArgs) AddressSpacePtrInput {
	return (*addressSpacePtrType)(v)
}

func (*addressSpacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpace)(nil)).Elem()
}

func (i *addressSpacePtrType) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return i.ToAddressSpacePtrOutputWithContext(context.Background())
}

func (i *addressSpacePtrType) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpacePtrOutput)
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceOutput struct{ *pulumi.OutputState }

func (AddressSpaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpace)(nil)).Elem()
}

func (o AddressSpaceOutput) ToAddressSpaceOutput() AddressSpaceOutput {
	return o
}

func (o AddressSpaceOutput) ToAddressSpaceOutputWithContext(ctx context.Context) AddressSpaceOutput {
	return o
}

func (o AddressSpaceOutput) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return o.ToAddressSpacePtrOutputWithContext(context.Background())
}

func (o AddressSpaceOutput) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return o.ApplyT(func(v AddressSpace) *AddressSpace {
		return &v
	}).(AddressSpacePtrOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpaceOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AddressSpace) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

type AddressSpacePtrOutput struct{ *pulumi.OutputState }

func (AddressSpacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpace)(nil)).Elem()
}

func (o AddressSpacePtrOutput) ToAddressSpacePtrOutput() AddressSpacePtrOutput {
	return o
}

func (o AddressSpacePtrOutput) ToAddressSpacePtrOutputWithContext(ctx context.Context) AddressSpacePtrOutput {
	return o
}

func (o AddressSpacePtrOutput) Elem() AddressSpaceOutput {
	return o.ApplyT(func(v *AddressSpace) AddressSpace { return *v }).(AddressSpaceOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpacePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AddressSpace) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceResponse struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes []string `pulumi:"addressPrefixes"`
}

// AddressSpaceResponseInput is an input type that accepts AddressSpaceResponseArgs and AddressSpaceResponseOutput values.
// You can construct a concrete instance of `AddressSpaceResponseInput` via:
//
//          AddressSpaceResponseArgs{...}
type AddressSpaceResponseInput interface {
	pulumi.Input

	ToAddressSpaceResponseOutput() AddressSpaceResponseOutput
	ToAddressSpaceResponseOutputWithContext(context.Context) AddressSpaceResponseOutput
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceResponseArgs struct {
	// A list of address blocks reserved for this virtual network in CIDR notation.
	AddressPrefixes pulumi.StringArrayInput `pulumi:"addressPrefixes"`
}

func (AddressSpaceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceResponse)(nil)).Elem()
}

func (i AddressSpaceResponseArgs) ToAddressSpaceResponseOutput() AddressSpaceResponseOutput {
	return i.ToAddressSpaceResponseOutputWithContext(context.Background())
}

func (i AddressSpaceResponseArgs) ToAddressSpaceResponseOutputWithContext(ctx context.Context) AddressSpaceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceResponseOutput)
}

func (i AddressSpaceResponseArgs) ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput {
	return i.ToAddressSpaceResponsePtrOutputWithContext(context.Background())
}

func (i AddressSpaceResponseArgs) ToAddressSpaceResponsePtrOutputWithContext(ctx context.Context) AddressSpaceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceResponseOutput).ToAddressSpaceResponsePtrOutputWithContext(ctx)
}

// AddressSpaceResponsePtrInput is an input type that accepts AddressSpaceResponseArgs, AddressSpaceResponsePtr and AddressSpaceResponsePtrOutput values.
// You can construct a concrete instance of `AddressSpaceResponsePtrInput` via:
//
//          AddressSpaceResponseArgs{...}
//
//  or:
//
//          nil
type AddressSpaceResponsePtrInput interface {
	pulumi.Input

	ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput
	ToAddressSpaceResponsePtrOutputWithContext(context.Context) AddressSpaceResponsePtrOutput
}

type addressSpaceResponsePtrType AddressSpaceResponseArgs

func AddressSpaceResponsePtr(v *AddressSpaceResponseArgs) AddressSpaceResponsePtrInput {
	return (*addressSpaceResponsePtrType)(v)
}

func (*addressSpaceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceResponse)(nil)).Elem()
}

func (i *addressSpaceResponsePtrType) ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput {
	return i.ToAddressSpaceResponsePtrOutputWithContext(context.Background())
}

func (i *addressSpaceResponsePtrType) ToAddressSpaceResponsePtrOutputWithContext(ctx context.Context) AddressSpaceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AddressSpaceResponsePtrOutput)
}

// AddressSpace contains an array of IP address ranges that can be used by subnets of the virtual network.
type AddressSpaceResponseOutput struct{ *pulumi.OutputState }

func (AddressSpaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AddressSpaceResponse)(nil)).Elem()
}

func (o AddressSpaceResponseOutput) ToAddressSpaceResponseOutput() AddressSpaceResponseOutput {
	return o
}

func (o AddressSpaceResponseOutput) ToAddressSpaceResponseOutputWithContext(ctx context.Context) AddressSpaceResponseOutput {
	return o
}

func (o AddressSpaceResponseOutput) ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput {
	return o.ToAddressSpaceResponsePtrOutputWithContext(context.Background())
}

func (o AddressSpaceResponseOutput) ToAddressSpaceResponsePtrOutputWithContext(ctx context.Context) AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v AddressSpaceResponse) *AddressSpaceResponse {
		return &v
	}).(AddressSpaceResponsePtrOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpaceResponseOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AddressSpaceResponse) []string { return v.AddressPrefixes }).(pulumi.StringArrayOutput)
}

type AddressSpaceResponsePtrOutput struct{ *pulumi.OutputState }

func (AddressSpaceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AddressSpaceResponse)(nil)).Elem()
}

func (o AddressSpaceResponsePtrOutput) ToAddressSpaceResponsePtrOutput() AddressSpaceResponsePtrOutput {
	return o
}

func (o AddressSpaceResponsePtrOutput) ToAddressSpaceResponsePtrOutputWithContext(ctx context.Context) AddressSpaceResponsePtrOutput {
	return o
}

func (o AddressSpaceResponsePtrOutput) Elem() AddressSpaceResponseOutput {
	return o.ApplyT(func(v *AddressSpaceResponse) AddressSpaceResponse { return *v }).(AddressSpaceResponseOutput)
}

// A list of address blocks reserved for this virtual network in CIDR notation.
func (o AddressSpaceResponsePtrOutput) AddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AddressSpaceResponse) []string {
		if v == nil {
			return nil
		}
		return v.AddressPrefixes
	}).(pulumi.StringArrayOutput)
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificate struct {
	// Certificate public data.
	Data *string `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the authentication certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayAuthenticationCertificateInput is an input type that accepts ApplicationGatewayAuthenticationCertificateArgs and ApplicationGatewayAuthenticationCertificateOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificateInput` via:
//
//          ApplicationGatewayAuthenticationCertificateArgs{...}
type ApplicationGatewayAuthenticationCertificateInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificateOutput() ApplicationGatewayAuthenticationCertificateOutput
	ToApplicationGatewayAuthenticationCertificateOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificateOutput
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificateArgs struct {
	// Certificate public data.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the authentication certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayAuthenticationCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (i ApplicationGatewayAuthenticationCertificateArgs) ToApplicationGatewayAuthenticationCertificateOutput() ApplicationGatewayAuthenticationCertificateOutput {
	return i.ToApplicationGatewayAuthenticationCertificateOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificateArgs) ToApplicationGatewayAuthenticationCertificateOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificateOutput)
}

// ApplicationGatewayAuthenticationCertificateArrayInput is an input type that accepts ApplicationGatewayAuthenticationCertificateArray and ApplicationGatewayAuthenticationCertificateArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificateArrayInput` via:
//
//          ApplicationGatewayAuthenticationCertificateArray{ ApplicationGatewayAuthenticationCertificateArgs{...} }
type ApplicationGatewayAuthenticationCertificateArrayInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificateArrayOutput() ApplicationGatewayAuthenticationCertificateArrayOutput
	ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificateArrayOutput
}

type ApplicationGatewayAuthenticationCertificateArray []ApplicationGatewayAuthenticationCertificateInput

func (ApplicationGatewayAuthenticationCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (i ApplicationGatewayAuthenticationCertificateArray) ToApplicationGatewayAuthenticationCertificateArrayOutput() ApplicationGatewayAuthenticationCertificateArrayOutput {
	return i.ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificateArray) ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificateArrayOutput)
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificateOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificateOutput) ToApplicationGatewayAuthenticationCertificateOutput() ApplicationGatewayAuthenticationCertificateOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateOutput) ToApplicationGatewayAuthenticationCertificateOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateOutput {
	return o
}

// Certificate public data.
func (o ApplicationGatewayAuthenticationCertificateOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayAuthenticationCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayAuthenticationCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the authentication certificate that is unique within an Application Gateway.
func (o ApplicationGatewayAuthenticationCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayAuthenticationCertificateOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayAuthenticationCertificateOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificate) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayAuthenticationCertificateArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayAuthenticationCertificate)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificateArrayOutput) ToApplicationGatewayAuthenticationCertificateArrayOutput() ApplicationGatewayAuthenticationCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateArrayOutput) ToApplicationGatewayAuthenticationCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateArrayOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayAuthenticationCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayAuthenticationCertificate {
		return vs[0].([]ApplicationGatewayAuthenticationCertificate)[vs[1].(int)]
	}).(ApplicationGatewayAuthenticationCertificateOutput)
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificateResponse struct {
	// Certificate public data.
	Data *string `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the authentication certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayAuthenticationCertificateResponseInput is an input type that accepts ApplicationGatewayAuthenticationCertificateResponseArgs and ApplicationGatewayAuthenticationCertificateResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificateResponseInput` via:
//
//          ApplicationGatewayAuthenticationCertificateResponseArgs{...}
type ApplicationGatewayAuthenticationCertificateResponseInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificateResponseOutput() ApplicationGatewayAuthenticationCertificateResponseOutput
	ToApplicationGatewayAuthenticationCertificateResponseOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificateResponseOutput
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificateResponseArgs struct {
	// Certificate public data.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the authentication certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayAuthenticationCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewayAuthenticationCertificateResponseArgs) ToApplicationGatewayAuthenticationCertificateResponseOutput() ApplicationGatewayAuthenticationCertificateResponseOutput {
	return i.ToApplicationGatewayAuthenticationCertificateResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificateResponseArgs) ToApplicationGatewayAuthenticationCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificateResponseOutput)
}

// ApplicationGatewayAuthenticationCertificateResponseArrayInput is an input type that accepts ApplicationGatewayAuthenticationCertificateResponseArray and ApplicationGatewayAuthenticationCertificateResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayAuthenticationCertificateResponseArrayInput` via:
//
//          ApplicationGatewayAuthenticationCertificateResponseArray{ ApplicationGatewayAuthenticationCertificateResponseArgs{...} }
type ApplicationGatewayAuthenticationCertificateResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayAuthenticationCertificateResponseArrayOutput() ApplicationGatewayAuthenticationCertificateResponseArrayOutput
	ToApplicationGatewayAuthenticationCertificateResponseArrayOutputWithContext(context.Context) ApplicationGatewayAuthenticationCertificateResponseArrayOutput
}

type ApplicationGatewayAuthenticationCertificateResponseArray []ApplicationGatewayAuthenticationCertificateResponseInput

func (ApplicationGatewayAuthenticationCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayAuthenticationCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewayAuthenticationCertificateResponseArray) ToApplicationGatewayAuthenticationCertificateResponseArrayOutput() ApplicationGatewayAuthenticationCertificateResponseArrayOutput {
	return i.ToApplicationGatewayAuthenticationCertificateResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayAuthenticationCertificateResponseArray) ToApplicationGatewayAuthenticationCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAuthenticationCertificateResponseArrayOutput)
}

// Authentication certificates of an application gateway.
type ApplicationGatewayAuthenticationCertificateResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAuthenticationCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificateResponseOutput) ToApplicationGatewayAuthenticationCertificateResponseOutput() ApplicationGatewayAuthenticationCertificateResponseOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateResponseOutput) ToApplicationGatewayAuthenticationCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateResponseOutput {
	return o
}

// Certificate public data.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the authentication certificate that is unique within an Application Gateway.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Provisioning state of the authentication certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayAuthenticationCertificateResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAuthenticationCertificateResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayAuthenticationCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAuthenticationCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayAuthenticationCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewayAuthenticationCertificateResponseArrayOutput) ToApplicationGatewayAuthenticationCertificateResponseArrayOutput() ApplicationGatewayAuthenticationCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateResponseArrayOutput) ToApplicationGatewayAuthenticationCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayAuthenticationCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewayAuthenticationCertificateResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayAuthenticationCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayAuthenticationCertificateResponse {
		return vs[0].([]ApplicationGatewayAuthenticationCertificateResponse)[vs[1].(int)]
	}).(ApplicationGatewayAuthenticationCertificateResponseOutput)
}

// Application Gateway autoscale bounds on number of Application Gateway instance.
type ApplicationGatewayAutoscaleBounds struct {
	// Upper bound on number of Application Gateway instances.
	Max int `pulumi:"max"`
	// Lower bound on number of Application Gateway instances.
	Min int `pulumi:"min"`
}

// ApplicationGatewayAutoscaleBoundsInput is an input type that accepts ApplicationGatewayAutoscaleBoundsArgs and ApplicationGatewayAutoscaleBoundsOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleBoundsInput` via:
//
//          ApplicationGatewayAutoscaleBoundsArgs{...}
type ApplicationGatewayAutoscaleBoundsInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleBoundsOutput() ApplicationGatewayAutoscaleBoundsOutput
	ToApplicationGatewayAutoscaleBoundsOutputWithContext(context.Context) ApplicationGatewayAutoscaleBoundsOutput
}

// Application Gateway autoscale bounds on number of Application Gateway instance.
type ApplicationGatewayAutoscaleBoundsArgs struct {
	// Upper bound on number of Application Gateway instances.
	Max pulumi.IntInput `pulumi:"max"`
	// Lower bound on number of Application Gateway instances.
	Min pulumi.IntInput `pulumi:"min"`
}

func (ApplicationGatewayAutoscaleBoundsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleBounds)(nil)).Elem()
}

func (i ApplicationGatewayAutoscaleBoundsArgs) ToApplicationGatewayAutoscaleBoundsOutput() ApplicationGatewayAutoscaleBoundsOutput {
	return i.ToApplicationGatewayAutoscaleBoundsOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleBoundsArgs) ToApplicationGatewayAutoscaleBoundsOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleBoundsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleBoundsOutput)
}

func (i ApplicationGatewayAutoscaleBoundsArgs) ToApplicationGatewayAutoscaleBoundsPtrOutput() ApplicationGatewayAutoscaleBoundsPtrOutput {
	return i.ToApplicationGatewayAutoscaleBoundsPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleBoundsArgs) ToApplicationGatewayAutoscaleBoundsPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleBoundsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleBoundsOutput).ToApplicationGatewayAutoscaleBoundsPtrOutputWithContext(ctx)
}

// ApplicationGatewayAutoscaleBoundsPtrInput is an input type that accepts ApplicationGatewayAutoscaleBoundsArgs, ApplicationGatewayAutoscaleBoundsPtr and ApplicationGatewayAutoscaleBoundsPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleBoundsPtrInput` via:
//
//          ApplicationGatewayAutoscaleBoundsArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayAutoscaleBoundsPtrInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleBoundsPtrOutput() ApplicationGatewayAutoscaleBoundsPtrOutput
	ToApplicationGatewayAutoscaleBoundsPtrOutputWithContext(context.Context) ApplicationGatewayAutoscaleBoundsPtrOutput
}

type applicationGatewayAutoscaleBoundsPtrType ApplicationGatewayAutoscaleBoundsArgs

func ApplicationGatewayAutoscaleBoundsPtr(v *ApplicationGatewayAutoscaleBoundsArgs) ApplicationGatewayAutoscaleBoundsPtrInput {
	return (*applicationGatewayAutoscaleBoundsPtrType)(v)
}

func (*applicationGatewayAutoscaleBoundsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleBounds)(nil)).Elem()
}

func (i *applicationGatewayAutoscaleBoundsPtrType) ToApplicationGatewayAutoscaleBoundsPtrOutput() ApplicationGatewayAutoscaleBoundsPtrOutput {
	return i.ToApplicationGatewayAutoscaleBoundsPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayAutoscaleBoundsPtrType) ToApplicationGatewayAutoscaleBoundsPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleBoundsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleBoundsPtrOutput)
}

// Application Gateway autoscale bounds on number of Application Gateway instance.
type ApplicationGatewayAutoscaleBoundsOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleBoundsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleBounds)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleBoundsOutput) ToApplicationGatewayAutoscaleBoundsOutput() ApplicationGatewayAutoscaleBoundsOutput {
	return o
}

func (o ApplicationGatewayAutoscaleBoundsOutput) ToApplicationGatewayAutoscaleBoundsOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleBoundsOutput {
	return o
}

func (o ApplicationGatewayAutoscaleBoundsOutput) ToApplicationGatewayAutoscaleBoundsPtrOutput() ApplicationGatewayAutoscaleBoundsPtrOutput {
	return o.ToApplicationGatewayAutoscaleBoundsPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayAutoscaleBoundsOutput) ToApplicationGatewayAutoscaleBoundsPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleBoundsPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleBounds) *ApplicationGatewayAutoscaleBounds {
		return &v
	}).(ApplicationGatewayAutoscaleBoundsPtrOutput)
}

// Upper bound on number of Application Gateway instances.
func (o ApplicationGatewayAutoscaleBoundsOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleBounds) int { return v.Max }).(pulumi.IntOutput)
}

// Lower bound on number of Application Gateway instances.
func (o ApplicationGatewayAutoscaleBoundsOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleBounds) int { return v.Min }).(pulumi.IntOutput)
}

type ApplicationGatewayAutoscaleBoundsPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleBoundsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleBounds)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleBoundsPtrOutput) ToApplicationGatewayAutoscaleBoundsPtrOutput() ApplicationGatewayAutoscaleBoundsPtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleBoundsPtrOutput) ToApplicationGatewayAutoscaleBoundsPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleBoundsPtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleBoundsPtrOutput) Elem() ApplicationGatewayAutoscaleBoundsOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleBounds) ApplicationGatewayAutoscaleBounds { return *v }).(ApplicationGatewayAutoscaleBoundsOutput)
}

// Upper bound on number of Application Gateway instances.
func (o ApplicationGatewayAutoscaleBoundsPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleBounds) *int {
		if v == nil {
			return nil
		}
		return &v.Max
	}).(pulumi.IntPtrOutput)
}

// Lower bound on number of Application Gateway instances.
func (o ApplicationGatewayAutoscaleBoundsPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleBounds) *int {
		if v == nil {
			return nil
		}
		return &v.Min
	}).(pulumi.IntPtrOutput)
}

// Application Gateway autoscale bounds on number of Application Gateway instance.
type ApplicationGatewayAutoscaleBoundsResponse struct {
	// Upper bound on number of Application Gateway instances.
	Max int `pulumi:"max"`
	// Lower bound on number of Application Gateway instances.
	Min int `pulumi:"min"`
}

// ApplicationGatewayAutoscaleBoundsResponseInput is an input type that accepts ApplicationGatewayAutoscaleBoundsResponseArgs and ApplicationGatewayAutoscaleBoundsResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleBoundsResponseInput` via:
//
//          ApplicationGatewayAutoscaleBoundsResponseArgs{...}
type ApplicationGatewayAutoscaleBoundsResponseInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleBoundsResponseOutput() ApplicationGatewayAutoscaleBoundsResponseOutput
	ToApplicationGatewayAutoscaleBoundsResponseOutputWithContext(context.Context) ApplicationGatewayAutoscaleBoundsResponseOutput
}

// Application Gateway autoscale bounds on number of Application Gateway instance.
type ApplicationGatewayAutoscaleBoundsResponseArgs struct {
	// Upper bound on number of Application Gateway instances.
	Max pulumi.IntInput `pulumi:"max"`
	// Lower bound on number of Application Gateway instances.
	Min pulumi.IntInput `pulumi:"min"`
}

func (ApplicationGatewayAutoscaleBoundsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleBoundsResponse)(nil)).Elem()
}

func (i ApplicationGatewayAutoscaleBoundsResponseArgs) ToApplicationGatewayAutoscaleBoundsResponseOutput() ApplicationGatewayAutoscaleBoundsResponseOutput {
	return i.ToApplicationGatewayAutoscaleBoundsResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleBoundsResponseArgs) ToApplicationGatewayAutoscaleBoundsResponseOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleBoundsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleBoundsResponseOutput)
}

func (i ApplicationGatewayAutoscaleBoundsResponseArgs) ToApplicationGatewayAutoscaleBoundsResponsePtrOutput() ApplicationGatewayAutoscaleBoundsResponsePtrOutput {
	return i.ToApplicationGatewayAutoscaleBoundsResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleBoundsResponseArgs) ToApplicationGatewayAutoscaleBoundsResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleBoundsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleBoundsResponseOutput).ToApplicationGatewayAutoscaleBoundsResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayAutoscaleBoundsResponsePtrInput is an input type that accepts ApplicationGatewayAutoscaleBoundsResponseArgs, ApplicationGatewayAutoscaleBoundsResponsePtr and ApplicationGatewayAutoscaleBoundsResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleBoundsResponsePtrInput` via:
//
//          ApplicationGatewayAutoscaleBoundsResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayAutoscaleBoundsResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleBoundsResponsePtrOutput() ApplicationGatewayAutoscaleBoundsResponsePtrOutput
	ToApplicationGatewayAutoscaleBoundsResponsePtrOutputWithContext(context.Context) ApplicationGatewayAutoscaleBoundsResponsePtrOutput
}

type applicationGatewayAutoscaleBoundsResponsePtrType ApplicationGatewayAutoscaleBoundsResponseArgs

func ApplicationGatewayAutoscaleBoundsResponsePtr(v *ApplicationGatewayAutoscaleBoundsResponseArgs) ApplicationGatewayAutoscaleBoundsResponsePtrInput {
	return (*applicationGatewayAutoscaleBoundsResponsePtrType)(v)
}

func (*applicationGatewayAutoscaleBoundsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleBoundsResponse)(nil)).Elem()
}

func (i *applicationGatewayAutoscaleBoundsResponsePtrType) ToApplicationGatewayAutoscaleBoundsResponsePtrOutput() ApplicationGatewayAutoscaleBoundsResponsePtrOutput {
	return i.ToApplicationGatewayAutoscaleBoundsResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayAutoscaleBoundsResponsePtrType) ToApplicationGatewayAutoscaleBoundsResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleBoundsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleBoundsResponsePtrOutput)
}

// Application Gateway autoscale bounds on number of Application Gateway instance.
type ApplicationGatewayAutoscaleBoundsResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleBoundsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleBoundsResponse)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleBoundsResponseOutput) ToApplicationGatewayAutoscaleBoundsResponseOutput() ApplicationGatewayAutoscaleBoundsResponseOutput {
	return o
}

func (o ApplicationGatewayAutoscaleBoundsResponseOutput) ToApplicationGatewayAutoscaleBoundsResponseOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleBoundsResponseOutput {
	return o
}

func (o ApplicationGatewayAutoscaleBoundsResponseOutput) ToApplicationGatewayAutoscaleBoundsResponsePtrOutput() ApplicationGatewayAutoscaleBoundsResponsePtrOutput {
	return o.ToApplicationGatewayAutoscaleBoundsResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayAutoscaleBoundsResponseOutput) ToApplicationGatewayAutoscaleBoundsResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleBoundsResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleBoundsResponse) *ApplicationGatewayAutoscaleBoundsResponse {
		return &v
	}).(ApplicationGatewayAutoscaleBoundsResponsePtrOutput)
}

// Upper bound on number of Application Gateway instances.
func (o ApplicationGatewayAutoscaleBoundsResponseOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleBoundsResponse) int { return v.Max }).(pulumi.IntOutput)
}

// Lower bound on number of Application Gateway instances.
func (o ApplicationGatewayAutoscaleBoundsResponseOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleBoundsResponse) int { return v.Min }).(pulumi.IntOutput)
}

type ApplicationGatewayAutoscaleBoundsResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleBoundsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleBoundsResponse)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleBoundsResponsePtrOutput) ToApplicationGatewayAutoscaleBoundsResponsePtrOutput() ApplicationGatewayAutoscaleBoundsResponsePtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleBoundsResponsePtrOutput) ToApplicationGatewayAutoscaleBoundsResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleBoundsResponsePtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleBoundsResponsePtrOutput) Elem() ApplicationGatewayAutoscaleBoundsResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleBoundsResponse) ApplicationGatewayAutoscaleBoundsResponse {
		return *v
	}).(ApplicationGatewayAutoscaleBoundsResponseOutput)
}

// Upper bound on number of Application Gateway instances.
func (o ApplicationGatewayAutoscaleBoundsResponsePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleBoundsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Max
	}).(pulumi.IntPtrOutput)
}

// Lower bound on number of Application Gateway instances.
func (o ApplicationGatewayAutoscaleBoundsResponsePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleBoundsResponse) *int {
		if v == nil {
			return nil
		}
		return &v.Min
	}).(pulumi.IntPtrOutput)
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfiguration struct {
	// Autoscale bounds
	Bounds ApplicationGatewayAutoscaleBounds `pulumi:"bounds"`
}

// ApplicationGatewayAutoscaleConfigurationInput is an input type that accepts ApplicationGatewayAutoscaleConfigurationArgs and ApplicationGatewayAutoscaleConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleConfigurationInput` via:
//
//          ApplicationGatewayAutoscaleConfigurationArgs{...}
type ApplicationGatewayAutoscaleConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleConfigurationOutput() ApplicationGatewayAutoscaleConfigurationOutput
	ToApplicationGatewayAutoscaleConfigurationOutputWithContext(context.Context) ApplicationGatewayAutoscaleConfigurationOutput
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfigurationArgs struct {
	// Autoscale bounds
	Bounds ApplicationGatewayAutoscaleBoundsInput `pulumi:"bounds"`
}

func (ApplicationGatewayAutoscaleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationOutput() ApplicationGatewayAutoscaleConfigurationOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationOutput)
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleConfigurationArgs) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationOutput).ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx)
}

// ApplicationGatewayAutoscaleConfigurationPtrInput is an input type that accepts ApplicationGatewayAutoscaleConfigurationArgs, ApplicationGatewayAutoscaleConfigurationPtr and ApplicationGatewayAutoscaleConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleConfigurationPtrInput` via:
//
//          ApplicationGatewayAutoscaleConfigurationArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayAutoscaleConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput
	ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput
}

type applicationGatewayAutoscaleConfigurationPtrType ApplicationGatewayAutoscaleConfigurationArgs

func ApplicationGatewayAutoscaleConfigurationPtr(v *ApplicationGatewayAutoscaleConfigurationArgs) ApplicationGatewayAutoscaleConfigurationPtrInput {
	return (*applicationGatewayAutoscaleConfigurationPtrType)(v)
}

func (*applicationGatewayAutoscaleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (i *applicationGatewayAutoscaleConfigurationPtrType) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayAutoscaleConfigurationPtrType) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationPtrOutput)
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationOutput() ApplicationGatewayAutoscaleConfigurationOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o.ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayAutoscaleConfigurationOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfiguration) *ApplicationGatewayAutoscaleConfiguration {
		return &v
	}).(ApplicationGatewayAutoscaleConfigurationPtrOutput)
}

// Autoscale bounds
func (o ApplicationGatewayAutoscaleConfigurationOutput) Bounds() ApplicationGatewayAutoscaleBoundsOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfiguration) ApplicationGatewayAutoscaleBounds { return v.Bounds }).(ApplicationGatewayAutoscaleBoundsOutput)
}

type ApplicationGatewayAutoscaleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutput() ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) ToApplicationGatewayAutoscaleConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) Elem() ApplicationGatewayAutoscaleConfigurationOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfiguration) ApplicationGatewayAutoscaleConfiguration { return *v }).(ApplicationGatewayAutoscaleConfigurationOutput)
}

// Autoscale bounds
func (o ApplicationGatewayAutoscaleConfigurationPtrOutput) Bounds() ApplicationGatewayAutoscaleBoundsPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfiguration) *ApplicationGatewayAutoscaleBounds {
		if v == nil {
			return nil
		}
		return &v.Bounds
	}).(ApplicationGatewayAutoscaleBoundsPtrOutput)
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfigurationResponse struct {
	// Autoscale bounds
	Bounds ApplicationGatewayAutoscaleBoundsResponse `pulumi:"bounds"`
}

// ApplicationGatewayAutoscaleConfigurationResponseInput is an input type that accepts ApplicationGatewayAutoscaleConfigurationResponseArgs and ApplicationGatewayAutoscaleConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleConfigurationResponseInput` via:
//
//          ApplicationGatewayAutoscaleConfigurationResponseArgs{...}
type ApplicationGatewayAutoscaleConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleConfigurationResponseOutput() ApplicationGatewayAutoscaleConfigurationResponseOutput
	ToApplicationGatewayAutoscaleConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayAutoscaleConfigurationResponseOutput
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfigurationResponseArgs struct {
	// Autoscale bounds
	Bounds ApplicationGatewayAutoscaleBoundsResponseInput `pulumi:"bounds"`
}

func (ApplicationGatewayAutoscaleConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayAutoscaleConfigurationResponseArgs) ToApplicationGatewayAutoscaleConfigurationResponseOutput() ApplicationGatewayAutoscaleConfigurationResponseOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleConfigurationResponseArgs) ToApplicationGatewayAutoscaleConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationResponseOutput)
}

func (i ApplicationGatewayAutoscaleConfigurationResponseArgs) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutput() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayAutoscaleConfigurationResponseArgs) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationResponseOutput).ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayAutoscaleConfigurationResponsePtrInput is an input type that accepts ApplicationGatewayAutoscaleConfigurationResponseArgs, ApplicationGatewayAutoscaleConfigurationResponsePtr and ApplicationGatewayAutoscaleConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayAutoscaleConfigurationResponsePtrInput` via:
//
//          ApplicationGatewayAutoscaleConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayAutoscaleConfigurationResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayAutoscaleConfigurationResponsePtrOutput() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput
	ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(context.Context) ApplicationGatewayAutoscaleConfigurationResponsePtrOutput
}

type applicationGatewayAutoscaleConfigurationResponsePtrType ApplicationGatewayAutoscaleConfigurationResponseArgs

func ApplicationGatewayAutoscaleConfigurationResponsePtr(v *ApplicationGatewayAutoscaleConfigurationResponseArgs) ApplicationGatewayAutoscaleConfigurationResponsePtrInput {
	return (*applicationGatewayAutoscaleConfigurationResponsePtrType)(v)
}

func (*applicationGatewayAutoscaleConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleConfigurationResponse)(nil)).Elem()
}

func (i *applicationGatewayAutoscaleConfigurationResponsePtrType) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutput() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return i.ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayAutoscaleConfigurationResponsePtrType) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayAutoscaleConfigurationResponsePtrOutput)
}

// Application Gateway autoscale configuration.
type ApplicationGatewayAutoscaleConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayAutoscaleConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) ToApplicationGatewayAutoscaleConfigurationResponseOutput() ApplicationGatewayAutoscaleConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) ToApplicationGatewayAutoscaleConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutput() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return o.ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfigurationResponse) *ApplicationGatewayAutoscaleConfigurationResponse {
		return &v
	}).(ApplicationGatewayAutoscaleConfigurationResponsePtrOutput)
}

// Autoscale bounds
func (o ApplicationGatewayAutoscaleConfigurationResponseOutput) Bounds() ApplicationGatewayAutoscaleBoundsResponseOutput {
	return o.ApplyT(func(v ApplicationGatewayAutoscaleConfigurationResponse) ApplicationGatewayAutoscaleBoundsResponse {
		return v.Bounds
	}).(ApplicationGatewayAutoscaleBoundsResponseOutput)
}

type ApplicationGatewayAutoscaleConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayAutoscaleConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutput() ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) ToApplicationGatewayAutoscaleConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayAutoscaleConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) Elem() ApplicationGatewayAutoscaleConfigurationResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfigurationResponse) ApplicationGatewayAutoscaleConfigurationResponse {
		return *v
	}).(ApplicationGatewayAutoscaleConfigurationResponseOutput)
}

// Autoscale bounds
func (o ApplicationGatewayAutoscaleConfigurationResponsePtrOutput) Bounds() ApplicationGatewayAutoscaleBoundsResponsePtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayAutoscaleConfigurationResponse) *ApplicationGatewayAutoscaleBoundsResponse {
		if v == nil {
			return nil
		}
		return &v.Bounds
	}).(ApplicationGatewayAutoscaleBoundsResponsePtrOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddress struct {
	// Fully qualified domain name (FQDN).
	Fqdn *string `pulumi:"fqdn"`
	// IP address
	IpAddress *string `pulumi:"ipAddress"`
}

// ApplicationGatewayBackendAddressInput is an input type that accepts ApplicationGatewayBackendAddressArgs and ApplicationGatewayBackendAddressOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressInput` via:
//
//          ApplicationGatewayBackendAddressArgs{...}
type ApplicationGatewayBackendAddressInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressOutput() ApplicationGatewayBackendAddressOutput
	ToApplicationGatewayBackendAddressOutputWithContext(context.Context) ApplicationGatewayBackendAddressOutput
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressArgs struct {
	// Fully qualified domain name (FQDN).
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// IP address
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (ApplicationGatewayBackendAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressArgs) ToApplicationGatewayBackendAddressOutput() ApplicationGatewayBackendAddressOutput {
	return i.ToApplicationGatewayBackendAddressOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressArgs) ToApplicationGatewayBackendAddressOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressOutput)
}

// ApplicationGatewayBackendAddressArrayInput is an input type that accepts ApplicationGatewayBackendAddressArray and ApplicationGatewayBackendAddressArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressArrayInput` via:
//
//          ApplicationGatewayBackendAddressArray{ ApplicationGatewayBackendAddressArgs{...} }
type ApplicationGatewayBackendAddressArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressArrayOutput() ApplicationGatewayBackendAddressArrayOutput
	ToApplicationGatewayBackendAddressArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressArrayOutput
}

type ApplicationGatewayBackendAddressArray []ApplicationGatewayBackendAddressInput

func (ApplicationGatewayBackendAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressArray) ToApplicationGatewayBackendAddressArrayOutput() ApplicationGatewayBackendAddressArrayOutput {
	return i.ToApplicationGatewayBackendAddressArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressArray) ToApplicationGatewayBackendAddressArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressArrayOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressOutput) ToApplicationGatewayBackendAddressOutput() ApplicationGatewayBackendAddressOutput {
	return o
}

func (o ApplicationGatewayBackendAddressOutput) ToApplicationGatewayBackendAddressOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressOutput {
	return o
}

// Fully qualified domain name (FQDN).
func (o ApplicationGatewayBackendAddressOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddress) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// IP address
func (o ApplicationGatewayBackendAddressOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddress) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddress)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressArrayOutput) ToApplicationGatewayBackendAddressArrayOutput() ApplicationGatewayBackendAddressArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressArrayOutput) ToApplicationGatewayBackendAddressArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddress {
		return vs[0].([]ApplicationGatewayBackendAddress)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPool struct {
	// Backend addresses
	BackendAddresses []ApplicationGatewayBackendAddress `pulumi:"backendAddresses"`
	// Collection of references to IPs defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfiguration `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend address pool that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayBackendAddressPoolInput is an input type that accepts ApplicationGatewayBackendAddressPoolArgs and ApplicationGatewayBackendAddressPoolOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolInput` via:
//
//          ApplicationGatewayBackendAddressPoolArgs{...}
type ApplicationGatewayBackendAddressPoolInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolOutput() ApplicationGatewayBackendAddressPoolOutput
	ToApplicationGatewayBackendAddressPoolOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolOutput
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolArgs struct {
	// Backend addresses
	BackendAddresses ApplicationGatewayBackendAddressArrayInput `pulumi:"backendAddresses"`
	// Collection of references to IPs defined in network interfaces.
	BackendIPConfigurations NetworkInterfaceIPConfigurationArrayInput `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the backend address pool that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayBackendAddressPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolArgs) ToApplicationGatewayBackendAddressPoolOutput() ApplicationGatewayBackendAddressPoolOutput {
	return i.ToApplicationGatewayBackendAddressPoolOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolArgs) ToApplicationGatewayBackendAddressPoolOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolOutput)
}

// ApplicationGatewayBackendAddressPoolArrayInput is an input type that accepts ApplicationGatewayBackendAddressPoolArray and ApplicationGatewayBackendAddressPoolArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolArrayInput` via:
//
//          ApplicationGatewayBackendAddressPoolArray{ ApplicationGatewayBackendAddressPoolArgs{...} }
type ApplicationGatewayBackendAddressPoolArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolArrayOutput() ApplicationGatewayBackendAddressPoolArrayOutput
	ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolArrayOutput
}

type ApplicationGatewayBackendAddressPoolArray []ApplicationGatewayBackendAddressPoolInput

func (ApplicationGatewayBackendAddressPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolArray) ToApplicationGatewayBackendAddressPoolArrayOutput() ApplicationGatewayBackendAddressPoolArrayOutput {
	return i.ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolArray) ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolArrayOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolOutput) ToApplicationGatewayBackendAddressPoolOutput() ApplicationGatewayBackendAddressPoolOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolOutput) ToApplicationGatewayBackendAddressPoolOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolOutput {
	return o
}

// Backend addresses
func (o ApplicationGatewayBackendAddressPoolOutput) BackendAddresses() ApplicationGatewayBackendAddressArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) []ApplicationGatewayBackendAddress {
		return v.BackendAddresses
	}).(ApplicationGatewayBackendAddressArrayOutput)
}

// Collection of references to IPs defined in network interfaces.
func (o ApplicationGatewayBackendAddressPoolOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) []NetworkInterfaceIPConfiguration {
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendAddressPoolOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendAddressPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend address pool that is unique within an Application Gateway.
func (o ApplicationGatewayBackendAddressPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayBackendAddressPoolOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayBackendAddressPoolOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPool) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressPoolArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPool)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolArrayOutput) ToApplicationGatewayBackendAddressPoolArrayOutput() ApplicationGatewayBackendAddressPoolArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolArrayOutput) ToApplicationGatewayBackendAddressPoolArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressPool {
		return vs[0].([]ApplicationGatewayBackendAddressPool)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressPoolOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolResponse struct {
	// Backend addresses
	BackendAddresses []ApplicationGatewayBackendAddressResponse `pulumi:"backendAddresses"`
	// Collection of references to IPs defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend address pool that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayBackendAddressPoolResponseInput is an input type that accepts ApplicationGatewayBackendAddressPoolResponseArgs and ApplicationGatewayBackendAddressPoolResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolResponseInput` via:
//
//          ApplicationGatewayBackendAddressPoolResponseArgs{...}
type ApplicationGatewayBackendAddressPoolResponseInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolResponseOutput() ApplicationGatewayBackendAddressPoolResponseOutput
	ToApplicationGatewayBackendAddressPoolResponseOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolResponseOutput
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolResponseArgs struct {
	// Backend addresses
	BackendAddresses ApplicationGatewayBackendAddressResponseArrayInput `pulumi:"backendAddresses"`
	// Collection of references to IPs defined in network interfaces.
	BackendIPConfigurations NetworkInterfaceIPConfigurationResponseArrayInput `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the backend address pool that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayBackendAddressPoolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolResponseArgs) ToApplicationGatewayBackendAddressPoolResponseOutput() ApplicationGatewayBackendAddressPoolResponseOutput {
	return i.ToApplicationGatewayBackendAddressPoolResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolResponseArgs) ToApplicationGatewayBackendAddressPoolResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolResponseOutput)
}

// ApplicationGatewayBackendAddressPoolResponseArrayInput is an input type that accepts ApplicationGatewayBackendAddressPoolResponseArray and ApplicationGatewayBackendAddressPoolResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressPoolResponseArrayInput` via:
//
//          ApplicationGatewayBackendAddressPoolResponseArray{ ApplicationGatewayBackendAddressPoolResponseArgs{...} }
type ApplicationGatewayBackendAddressPoolResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressPoolResponseArrayOutput() ApplicationGatewayBackendAddressPoolResponseArrayOutput
	ToApplicationGatewayBackendAddressPoolResponseArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressPoolResponseArrayOutput
}

type ApplicationGatewayBackendAddressPoolResponseArray []ApplicationGatewayBackendAddressPoolResponseInput

func (ApplicationGatewayBackendAddressPoolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressPoolResponseArray) ToApplicationGatewayBackendAddressPoolResponseArrayOutput() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return i.ToApplicationGatewayBackendAddressPoolResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressPoolResponseArray) ToApplicationGatewayBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Backend Address Pool of an application gateway.
type ApplicationGatewayBackendAddressPoolResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolResponseOutput) ToApplicationGatewayBackendAddressPoolResponseOutput() ApplicationGatewayBackendAddressPoolResponseOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseOutput) ToApplicationGatewayBackendAddressPoolResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseOutput {
	return o
}

// Backend addresses
func (o ApplicationGatewayBackendAddressPoolResponseOutput) BackendAddresses() ApplicationGatewayBackendAddressResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) []ApplicationGatewayBackendAddressResponse {
		return v.BackendAddresses
	}).(ApplicationGatewayBackendAddressResponseArrayOutput)
}

// Collection of references to IPs defined in network interfaces.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) []NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend address pool that is unique within an Application Gateway.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend address pool resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayBackendAddressPoolResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressPoolResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressPoolResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) ToApplicationGatewayBackendAddressPoolResponseArrayOutput() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) ToApplicationGatewayBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressPoolResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressPoolResponse {
		return vs[0].([]ApplicationGatewayBackendAddressPoolResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressPoolResponseOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressResponse struct {
	// Fully qualified domain name (FQDN).
	Fqdn *string `pulumi:"fqdn"`
	// IP address
	IpAddress *string `pulumi:"ipAddress"`
}

// ApplicationGatewayBackendAddressResponseInput is an input type that accepts ApplicationGatewayBackendAddressResponseArgs and ApplicationGatewayBackendAddressResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressResponseInput` via:
//
//          ApplicationGatewayBackendAddressResponseArgs{...}
type ApplicationGatewayBackendAddressResponseInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressResponseOutput() ApplicationGatewayBackendAddressResponseOutput
	ToApplicationGatewayBackendAddressResponseOutputWithContext(context.Context) ApplicationGatewayBackendAddressResponseOutput
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressResponseArgs struct {
	// Fully qualified domain name (FQDN).
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// IP address
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
}

func (ApplicationGatewayBackendAddressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressResponseArgs) ToApplicationGatewayBackendAddressResponseOutput() ApplicationGatewayBackendAddressResponseOutput {
	return i.ToApplicationGatewayBackendAddressResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressResponseArgs) ToApplicationGatewayBackendAddressResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressResponseOutput)
}

// ApplicationGatewayBackendAddressResponseArrayInput is an input type that accepts ApplicationGatewayBackendAddressResponseArray and ApplicationGatewayBackendAddressResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendAddressResponseArrayInput` via:
//
//          ApplicationGatewayBackendAddressResponseArray{ ApplicationGatewayBackendAddressResponseArgs{...} }
type ApplicationGatewayBackendAddressResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendAddressResponseArrayOutput() ApplicationGatewayBackendAddressResponseArrayOutput
	ToApplicationGatewayBackendAddressResponseArrayOutputWithContext(context.Context) ApplicationGatewayBackendAddressResponseArrayOutput
}

type ApplicationGatewayBackendAddressResponseArray []ApplicationGatewayBackendAddressResponseInput

func (ApplicationGatewayBackendAddressResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendAddressResponseArray) ToApplicationGatewayBackendAddressResponseArrayOutput() ApplicationGatewayBackendAddressResponseArrayOutput {
	return i.ToApplicationGatewayBackendAddressResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendAddressResponseArray) ToApplicationGatewayBackendAddressResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendAddressResponseArrayOutput)
}

// Backend address of an application gateway.
type ApplicationGatewayBackendAddressResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressResponseOutput) ToApplicationGatewayBackendAddressResponseOutput() ApplicationGatewayBackendAddressResponseOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseOutput) ToApplicationGatewayBackendAddressResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseOutput {
	return o
}

// Fully qualified domain name (FQDN).
func (o ApplicationGatewayBackendAddressResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// IP address
func (o ApplicationGatewayBackendAddressResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendAddressResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendAddressResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendAddressResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendAddressResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) ToApplicationGatewayBackendAddressResponseArrayOutput() ApplicationGatewayBackendAddressResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) ToApplicationGatewayBackendAddressResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendAddressResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendAddressResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendAddressResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendAddressResponse {
		return vs[0].([]ApplicationGatewayBackendAddressResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendAddressResponseOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettings struct {
	// Cookie name to use for the affinity cookie.
	AffinityCookieName *string `pulumi:"affinityCookieName"`
	// Array of references to application gateway authentication certificates.
	AuthenticationCertificates []SubResource `pulumi:"authenticationCertificates"`
	// Connection draining of the backend http settings resource.
	ConnectionDraining *ApplicationGatewayConnectionDraining `pulumi:"connectionDraining"`
	// Cookie based affinity.
	CookieBasedAffinity *string `pulumi:"cookieBasedAffinity"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Host header to be sent to the backend servers.
	HostName *string `pulumi:"hostName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend http settings that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
	Path *string `pulumi:"path"`
	// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
	PickHostNameFromBackendAddress *bool `pulumi:"pickHostNameFromBackendAddress"`
	// The destination port on the backend.
	Port *int `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe *SubResource `pulumi:"probe"`
	// Whether the probe is enabled. Default value is false.
	ProbeEnabled *bool `pulumi:"probeEnabled"`
	// The protocol used to communicate with the backend. Possible values are 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout *int `pulumi:"requestTimeout"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayBackendHttpSettingsInput is an input type that accepts ApplicationGatewayBackendHttpSettingsArgs and ApplicationGatewayBackendHttpSettingsOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsInput` via:
//
//          ApplicationGatewayBackendHttpSettingsArgs{...}
type ApplicationGatewayBackendHttpSettingsInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsOutput() ApplicationGatewayBackendHttpSettingsOutput
	ToApplicationGatewayBackendHttpSettingsOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsOutput
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsArgs struct {
	// Cookie name to use for the affinity cookie.
	AffinityCookieName pulumi.StringPtrInput `pulumi:"affinityCookieName"`
	// Array of references to application gateway authentication certificates.
	AuthenticationCertificates SubResourceArrayInput `pulumi:"authenticationCertificates"`
	// Connection draining of the backend http settings resource.
	ConnectionDraining ApplicationGatewayConnectionDrainingPtrInput `pulumi:"connectionDraining"`
	// Cookie based affinity.
	CookieBasedAffinity pulumi.StringPtrInput `pulumi:"cookieBasedAffinity"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Host header to be sent to the backend servers.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the backend http settings that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
	PickHostNameFromBackendAddress pulumi.BoolPtrInput `pulumi:"pickHostNameFromBackendAddress"`
	// The destination port on the backend.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe SubResourcePtrInput `pulumi:"probe"`
	// Whether the probe is enabled. Default value is false.
	ProbeEnabled pulumi.BoolPtrInput `pulumi:"probeEnabled"`
	// The protocol used to communicate with the backend. Possible values are 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout pulumi.IntPtrInput `pulumi:"requestTimeout"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayBackendHttpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsArgs) ToApplicationGatewayBackendHttpSettingsOutput() ApplicationGatewayBackendHttpSettingsOutput {
	return i.ToApplicationGatewayBackendHttpSettingsOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsArgs) ToApplicationGatewayBackendHttpSettingsOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsOutput)
}

// ApplicationGatewayBackendHttpSettingsArrayInput is an input type that accepts ApplicationGatewayBackendHttpSettingsArray and ApplicationGatewayBackendHttpSettingsArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsArrayInput` via:
//
//          ApplicationGatewayBackendHttpSettingsArray{ ApplicationGatewayBackendHttpSettingsArgs{...} }
type ApplicationGatewayBackendHttpSettingsArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsArrayOutput() ApplicationGatewayBackendHttpSettingsArrayOutput
	ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsArrayOutput
}

type ApplicationGatewayBackendHttpSettingsArray []ApplicationGatewayBackendHttpSettingsInput

func (ApplicationGatewayBackendHttpSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsArray) ToApplicationGatewayBackendHttpSettingsArrayOutput() ApplicationGatewayBackendHttpSettingsArrayOutput {
	return i.ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsArray) ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsArrayOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsOutput) ToApplicationGatewayBackendHttpSettingsOutput() ApplicationGatewayBackendHttpSettingsOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsOutput) ToApplicationGatewayBackendHttpSettingsOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsOutput {
	return o
}

// Cookie name to use for the affinity cookie.
func (o ApplicationGatewayBackendHttpSettingsOutput) AffinityCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.AffinityCookieName }).(pulumi.StringPtrOutput)
}

// Array of references to application gateway authentication certificates.
func (o ApplicationGatewayBackendHttpSettingsOutput) AuthenticationCertificates() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) []SubResource { return v.AuthenticationCertificates }).(SubResourceArrayOutput)
}

// Connection draining of the backend http settings resource.
func (o ApplicationGatewayBackendHttpSettingsOutput) ConnectionDraining() ApplicationGatewayConnectionDrainingPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *ApplicationGatewayConnectionDraining {
		return v.ConnectionDraining
	}).(ApplicationGatewayConnectionDrainingPtrOutput)
}

// Cookie based affinity.
func (o ApplicationGatewayBackendHttpSettingsOutput) CookieBasedAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.CookieBasedAffinity }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendHttpSettingsOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Host header to be sent to the backend servers.
func (o ApplicationGatewayBackendHttpSettingsOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendHttpSettingsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend http settings that is unique within an Application Gateway.
func (o ApplicationGatewayBackendHttpSettingsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
func (o ApplicationGatewayBackendHttpSettingsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsOutput) PickHostNameFromBackendAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *bool { return v.PickHostNameFromBackendAddress }).(pulumi.BoolPtrOutput)
}

// The destination port on the backend.
func (o ApplicationGatewayBackendHttpSettingsOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Probe resource of an application gateway.
func (o ApplicationGatewayBackendHttpSettingsOutput) Probe() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *SubResource { return v.Probe }).(SubResourcePtrOutput)
}

// Whether the probe is enabled. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsOutput) ProbeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *bool { return v.ProbeEnabled }).(pulumi.BoolPtrOutput)
}

// The protocol used to communicate with the backend. Possible values are 'Http' and 'Https'.
func (o ApplicationGatewayBackendHttpSettingsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayBackendHttpSettingsOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayBackendHttpSettingsOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *int { return v.RequestTimeout }).(pulumi.IntPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayBackendHttpSettingsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettings) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendHttpSettingsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettings)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsArrayOutput) ToApplicationGatewayBackendHttpSettingsArrayOutput() ApplicationGatewayBackendHttpSettingsArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsArrayOutput) ToApplicationGatewayBackendHttpSettingsArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendHttpSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendHttpSettings {
		return vs[0].([]ApplicationGatewayBackendHttpSettings)[vs[1].(int)]
	}).(ApplicationGatewayBackendHttpSettingsOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsResponse struct {
	// Cookie name to use for the affinity cookie.
	AffinityCookieName *string `pulumi:"affinityCookieName"`
	// Array of references to application gateway authentication certificates.
	AuthenticationCertificates []SubResourceResponse `pulumi:"authenticationCertificates"`
	// Connection draining of the backend http settings resource.
	ConnectionDraining *ApplicationGatewayConnectionDrainingResponse `pulumi:"connectionDraining"`
	// Cookie based affinity.
	CookieBasedAffinity *string `pulumi:"cookieBasedAffinity"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Host header to be sent to the backend servers.
	HostName *string `pulumi:"hostName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the backend http settings that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
	Path *string `pulumi:"path"`
	// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
	PickHostNameFromBackendAddress *bool `pulumi:"pickHostNameFromBackendAddress"`
	// The destination port on the backend.
	Port *int `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe *SubResourceResponse `pulumi:"probe"`
	// Whether the probe is enabled. Default value is false.
	ProbeEnabled *bool `pulumi:"probeEnabled"`
	// The protocol used to communicate with the backend. Possible values are 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout *int `pulumi:"requestTimeout"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayBackendHttpSettingsResponseInput is an input type that accepts ApplicationGatewayBackendHttpSettingsResponseArgs and ApplicationGatewayBackendHttpSettingsResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsResponseInput` via:
//
//          ApplicationGatewayBackendHttpSettingsResponseArgs{...}
type ApplicationGatewayBackendHttpSettingsResponseInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsResponseOutput() ApplicationGatewayBackendHttpSettingsResponseOutput
	ToApplicationGatewayBackendHttpSettingsResponseOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsResponseOutput
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsResponseArgs struct {
	// Cookie name to use for the affinity cookie.
	AffinityCookieName pulumi.StringPtrInput `pulumi:"affinityCookieName"`
	// Array of references to application gateway authentication certificates.
	AuthenticationCertificates SubResourceResponseArrayInput `pulumi:"authenticationCertificates"`
	// Connection draining of the backend http settings resource.
	ConnectionDraining ApplicationGatewayConnectionDrainingResponsePtrInput `pulumi:"connectionDraining"`
	// Cookie based affinity.
	CookieBasedAffinity pulumi.StringPtrInput `pulumi:"cookieBasedAffinity"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Host header to be sent to the backend servers.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the backend http settings that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
	PickHostNameFromBackendAddress pulumi.BoolPtrInput `pulumi:"pickHostNameFromBackendAddress"`
	// The destination port on the backend.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Probe resource of an application gateway.
	Probe SubResourceResponsePtrInput `pulumi:"probe"`
	// Whether the probe is enabled. Default value is false.
	ProbeEnabled pulumi.BoolPtrInput `pulumi:"probeEnabled"`
	// The protocol used to communicate with the backend. Possible values are 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
	RequestTimeout pulumi.IntPtrInput `pulumi:"requestTimeout"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayBackendHttpSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsResponseArgs) ToApplicationGatewayBackendHttpSettingsResponseOutput() ApplicationGatewayBackendHttpSettingsResponseOutput {
	return i.ToApplicationGatewayBackendHttpSettingsResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsResponseArgs) ToApplicationGatewayBackendHttpSettingsResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsResponseOutput)
}

// ApplicationGatewayBackendHttpSettingsResponseArrayInput is an input type that accepts ApplicationGatewayBackendHttpSettingsResponseArray and ApplicationGatewayBackendHttpSettingsResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayBackendHttpSettingsResponseArrayInput` via:
//
//          ApplicationGatewayBackendHttpSettingsResponseArray{ ApplicationGatewayBackendHttpSettingsResponseArgs{...} }
type ApplicationGatewayBackendHttpSettingsResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayBackendHttpSettingsResponseArrayOutput() ApplicationGatewayBackendHttpSettingsResponseArrayOutput
	ToApplicationGatewayBackendHttpSettingsResponseArrayOutputWithContext(context.Context) ApplicationGatewayBackendHttpSettingsResponseArrayOutput
}

type ApplicationGatewayBackendHttpSettingsResponseArray []ApplicationGatewayBackendHttpSettingsResponseInput

func (ApplicationGatewayBackendHttpSettingsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (i ApplicationGatewayBackendHttpSettingsResponseArray) ToApplicationGatewayBackendHttpSettingsResponseArrayOutput() ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return i.ToApplicationGatewayBackendHttpSettingsResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayBackendHttpSettingsResponseArray) ToApplicationGatewayBackendHttpSettingsResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayBackendHttpSettingsResponseArrayOutput)
}

// Backend address pool settings of an application gateway.
type ApplicationGatewayBackendHttpSettingsResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ToApplicationGatewayBackendHttpSettingsResponseOutput() ApplicationGatewayBackendHttpSettingsResponseOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ToApplicationGatewayBackendHttpSettingsResponseOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponseOutput {
	return o
}

// Cookie name to use for the affinity cookie.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) AffinityCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.AffinityCookieName }).(pulumi.StringPtrOutput)
}

// Array of references to application gateway authentication certificates.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) AuthenticationCertificates() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) []SubResourceResponse {
		return v.AuthenticationCertificates
	}).(SubResourceResponseArrayOutput)
}

// Connection draining of the backend http settings resource.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ConnectionDraining() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *ApplicationGatewayConnectionDrainingResponse {
		return v.ConnectionDraining
	}).(ApplicationGatewayConnectionDrainingResponsePtrOutput)
}

// Cookie based affinity.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) CookieBasedAffinity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.CookieBasedAffinity }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Host header to be sent to the backend servers.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the backend http settings that is unique within an Application Gateway.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path which should be used as a prefix for all HTTP requests. Null means no path will be prefixed. Default value is null.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Whether to pick host header should be picked from the host name of the backend server. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) PickHostNameFromBackendAddress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *bool { return v.PickHostNameFromBackendAddress }).(pulumi.BoolPtrOutput)
}

// The destination port on the backend.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Probe resource of an application gateway.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Probe() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *SubResourceResponse { return v.Probe }).(SubResourceResponsePtrOutput)
}

// Whether the probe is enabled. Default value is false.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ProbeEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *bool { return v.ProbeEnabled }).(pulumi.BoolPtrOutput)
}

// The protocol used to communicate with the backend. Possible values are 'Http' and 'Https'.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Request timeout in seconds. Application Gateway will fail the request if response is not received within RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) RequestTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *int { return v.RequestTimeout }).(pulumi.IntPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayBackendHttpSettingsResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayBackendHttpSettingsResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayBackendHttpSettingsResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayBackendHttpSettingsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayBackendHttpSettingsResponse)(nil)).Elem()
}

func (o ApplicationGatewayBackendHttpSettingsResponseArrayOutput) ToApplicationGatewayBackendHttpSettingsResponseArrayOutput() ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponseArrayOutput) ToApplicationGatewayBackendHttpSettingsResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayBackendHttpSettingsResponseArrayOutput {
	return o
}

func (o ApplicationGatewayBackendHttpSettingsResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayBackendHttpSettingsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayBackendHttpSettingsResponse {
		return vs[0].([]ApplicationGatewayBackendHttpSettingsResponse)[vs[1].(int)]
	}).(ApplicationGatewayBackendHttpSettingsResponseOutput)
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDraining struct {
	// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
	DrainTimeoutInSec int `pulumi:"drainTimeoutInSec"`
	// Whether connection draining is enabled or not.
	Enabled bool `pulumi:"enabled"`
}

// ApplicationGatewayConnectionDrainingInput is an input type that accepts ApplicationGatewayConnectionDrainingArgs and ApplicationGatewayConnectionDrainingOutput values.
// You can construct a concrete instance of `ApplicationGatewayConnectionDrainingInput` via:
//
//          ApplicationGatewayConnectionDrainingArgs{...}
type ApplicationGatewayConnectionDrainingInput interface {
	pulumi.Input

	ToApplicationGatewayConnectionDrainingOutput() ApplicationGatewayConnectionDrainingOutput
	ToApplicationGatewayConnectionDrainingOutputWithContext(context.Context) ApplicationGatewayConnectionDrainingOutput
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDrainingArgs struct {
	// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
	DrainTimeoutInSec pulumi.IntInput `pulumi:"drainTimeoutInSec"`
	// Whether connection draining is enabled or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ApplicationGatewayConnectionDrainingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayConnectionDraining)(nil)).Elem()
}

func (i ApplicationGatewayConnectionDrainingArgs) ToApplicationGatewayConnectionDrainingOutput() ApplicationGatewayConnectionDrainingOutput {
	return i.ToApplicationGatewayConnectionDrainingOutputWithContext(context.Background())
}

func (i ApplicationGatewayConnectionDrainingArgs) ToApplicationGatewayConnectionDrainingOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingOutput)
}

func (i ApplicationGatewayConnectionDrainingArgs) ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput {
	return i.ToApplicationGatewayConnectionDrainingPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayConnectionDrainingArgs) ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingOutput).ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx)
}

// ApplicationGatewayConnectionDrainingPtrInput is an input type that accepts ApplicationGatewayConnectionDrainingArgs, ApplicationGatewayConnectionDrainingPtr and ApplicationGatewayConnectionDrainingPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayConnectionDrainingPtrInput` via:
//
//          ApplicationGatewayConnectionDrainingArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayConnectionDrainingPtrInput interface {
	pulumi.Input

	ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput
	ToApplicationGatewayConnectionDrainingPtrOutputWithContext(context.Context) ApplicationGatewayConnectionDrainingPtrOutput
}

type applicationGatewayConnectionDrainingPtrType ApplicationGatewayConnectionDrainingArgs

func ApplicationGatewayConnectionDrainingPtr(v *ApplicationGatewayConnectionDrainingArgs) ApplicationGatewayConnectionDrainingPtrInput {
	return (*applicationGatewayConnectionDrainingPtrType)(v)
}

func (*applicationGatewayConnectionDrainingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayConnectionDraining)(nil)).Elem()
}

func (i *applicationGatewayConnectionDrainingPtrType) ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput {
	return i.ToApplicationGatewayConnectionDrainingPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayConnectionDrainingPtrType) ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingPtrOutput)
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDrainingOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayConnectionDrainingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayConnectionDraining)(nil)).Elem()
}

func (o ApplicationGatewayConnectionDrainingOutput) ToApplicationGatewayConnectionDrainingOutput() ApplicationGatewayConnectionDrainingOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingOutput) ToApplicationGatewayConnectionDrainingOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingOutput) ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput {
	return o.ToApplicationGatewayConnectionDrainingPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayConnectionDrainingOutput) ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDraining) *ApplicationGatewayConnectionDraining {
		return &v
	}).(ApplicationGatewayConnectionDrainingPtrOutput)
}

// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
func (o ApplicationGatewayConnectionDrainingOutput) DrainTimeoutInSec() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDraining) int { return v.DrainTimeoutInSec }).(pulumi.IntOutput)
}

// Whether connection draining is enabled or not.
func (o ApplicationGatewayConnectionDrainingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDraining) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ApplicationGatewayConnectionDrainingPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayConnectionDrainingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayConnectionDraining)(nil)).Elem()
}

func (o ApplicationGatewayConnectionDrainingPtrOutput) ToApplicationGatewayConnectionDrainingPtrOutput() ApplicationGatewayConnectionDrainingPtrOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingPtrOutput) ToApplicationGatewayConnectionDrainingPtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingPtrOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingPtrOutput) Elem() ApplicationGatewayConnectionDrainingOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDraining) ApplicationGatewayConnectionDraining { return *v }).(ApplicationGatewayConnectionDrainingOutput)
}

// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
func (o ApplicationGatewayConnectionDrainingPtrOutput) DrainTimeoutInSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDraining) *int {
		if v == nil {
			return nil
		}
		return &v.DrainTimeoutInSec
	}).(pulumi.IntPtrOutput)
}

// Whether connection draining is enabled or not.
func (o ApplicationGatewayConnectionDrainingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDraining) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDrainingResponse struct {
	// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
	DrainTimeoutInSec int `pulumi:"drainTimeoutInSec"`
	// Whether connection draining is enabled or not.
	Enabled bool `pulumi:"enabled"`
}

// ApplicationGatewayConnectionDrainingResponseInput is an input type that accepts ApplicationGatewayConnectionDrainingResponseArgs and ApplicationGatewayConnectionDrainingResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayConnectionDrainingResponseInput` via:
//
//          ApplicationGatewayConnectionDrainingResponseArgs{...}
type ApplicationGatewayConnectionDrainingResponseInput interface {
	pulumi.Input

	ToApplicationGatewayConnectionDrainingResponseOutput() ApplicationGatewayConnectionDrainingResponseOutput
	ToApplicationGatewayConnectionDrainingResponseOutputWithContext(context.Context) ApplicationGatewayConnectionDrainingResponseOutput
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDrainingResponseArgs struct {
	// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
	DrainTimeoutInSec pulumi.IntInput `pulumi:"drainTimeoutInSec"`
	// Whether connection draining is enabled or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ApplicationGatewayConnectionDrainingResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayConnectionDrainingResponse)(nil)).Elem()
}

func (i ApplicationGatewayConnectionDrainingResponseArgs) ToApplicationGatewayConnectionDrainingResponseOutput() ApplicationGatewayConnectionDrainingResponseOutput {
	return i.ToApplicationGatewayConnectionDrainingResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayConnectionDrainingResponseArgs) ToApplicationGatewayConnectionDrainingResponseOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingResponseOutput)
}

func (i ApplicationGatewayConnectionDrainingResponseArgs) ToApplicationGatewayConnectionDrainingResponsePtrOutput() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return i.ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayConnectionDrainingResponseArgs) ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingResponseOutput).ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayConnectionDrainingResponsePtrInput is an input type that accepts ApplicationGatewayConnectionDrainingResponseArgs, ApplicationGatewayConnectionDrainingResponsePtr and ApplicationGatewayConnectionDrainingResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayConnectionDrainingResponsePtrInput` via:
//
//          ApplicationGatewayConnectionDrainingResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayConnectionDrainingResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayConnectionDrainingResponsePtrOutput() ApplicationGatewayConnectionDrainingResponsePtrOutput
	ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(context.Context) ApplicationGatewayConnectionDrainingResponsePtrOutput
}

type applicationGatewayConnectionDrainingResponsePtrType ApplicationGatewayConnectionDrainingResponseArgs

func ApplicationGatewayConnectionDrainingResponsePtr(v *ApplicationGatewayConnectionDrainingResponseArgs) ApplicationGatewayConnectionDrainingResponsePtrInput {
	return (*applicationGatewayConnectionDrainingResponsePtrType)(v)
}

func (*applicationGatewayConnectionDrainingResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayConnectionDrainingResponse)(nil)).Elem()
}

func (i *applicationGatewayConnectionDrainingResponsePtrType) ToApplicationGatewayConnectionDrainingResponsePtrOutput() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return i.ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayConnectionDrainingResponsePtrType) ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayConnectionDrainingResponsePtrOutput)
}

// Connection draining allows open connections to a backend server to be active for a specified time after the backend server got removed from the configuration.
type ApplicationGatewayConnectionDrainingResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayConnectionDrainingResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayConnectionDrainingResponse)(nil)).Elem()
}

func (o ApplicationGatewayConnectionDrainingResponseOutput) ToApplicationGatewayConnectionDrainingResponseOutput() ApplicationGatewayConnectionDrainingResponseOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingResponseOutput) ToApplicationGatewayConnectionDrainingResponseOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponseOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingResponseOutput) ToApplicationGatewayConnectionDrainingResponsePtrOutput() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o.ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayConnectionDrainingResponseOutput) ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDrainingResponse) *ApplicationGatewayConnectionDrainingResponse {
		return &v
	}).(ApplicationGatewayConnectionDrainingResponsePtrOutput)
}

// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
func (o ApplicationGatewayConnectionDrainingResponseOutput) DrainTimeoutInSec() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDrainingResponse) int { return v.DrainTimeoutInSec }).(pulumi.IntOutput)
}

// Whether connection draining is enabled or not.
func (o ApplicationGatewayConnectionDrainingResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayConnectionDrainingResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ApplicationGatewayConnectionDrainingResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayConnectionDrainingResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayConnectionDrainingResponse)(nil)).Elem()
}

func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) ToApplicationGatewayConnectionDrainingResponsePtrOutput() ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) ToApplicationGatewayConnectionDrainingResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayConnectionDrainingResponsePtrOutput {
	return o
}

func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) Elem() ApplicationGatewayConnectionDrainingResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDrainingResponse) ApplicationGatewayConnectionDrainingResponse {
		return *v
	}).(ApplicationGatewayConnectionDrainingResponseOutput)
}

// The number of seconds connection draining is active. Acceptable values are from 1 second to 3600 seconds.
func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) DrainTimeoutInSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDrainingResponse) *int {
		if v == nil {
			return nil
		}
		return &v.DrainTimeoutInSec
	}).(pulumi.IntPtrOutput)
}

// Whether connection draining is enabled or not.
func (o ApplicationGatewayConnectionDrainingResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayConnectionDrainingResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroup struct {
	// The name of the rule group that will be disabled.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
	Rules []int `pulumi:"rules"`
}

// ApplicationGatewayFirewallDisabledRuleGroupInput is an input type that accepts ApplicationGatewayFirewallDisabledRuleGroupArgs and ApplicationGatewayFirewallDisabledRuleGroupOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallDisabledRuleGroupInput` via:
//
//          ApplicationGatewayFirewallDisabledRuleGroupArgs{...}
type ApplicationGatewayFirewallDisabledRuleGroupInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallDisabledRuleGroupOutput() ApplicationGatewayFirewallDisabledRuleGroupOutput
	ToApplicationGatewayFirewallDisabledRuleGroupOutputWithContext(context.Context) ApplicationGatewayFirewallDisabledRuleGroupOutput
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroupArgs struct {
	// The name of the rule group that will be disabled.
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
	Rules pulumi.IntArrayInput `pulumi:"rules"`
}

func (ApplicationGatewayFirewallDisabledRuleGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallDisabledRuleGroup)(nil)).Elem()
}

func (i ApplicationGatewayFirewallDisabledRuleGroupArgs) ToApplicationGatewayFirewallDisabledRuleGroupOutput() ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return i.ToApplicationGatewayFirewallDisabledRuleGroupOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallDisabledRuleGroupArgs) ToApplicationGatewayFirewallDisabledRuleGroupOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallDisabledRuleGroupOutput)
}

// ApplicationGatewayFirewallDisabledRuleGroupArrayInput is an input type that accepts ApplicationGatewayFirewallDisabledRuleGroupArray and ApplicationGatewayFirewallDisabledRuleGroupArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallDisabledRuleGroupArrayInput` via:
//
//          ApplicationGatewayFirewallDisabledRuleGroupArray{ ApplicationGatewayFirewallDisabledRuleGroupArgs{...} }
type ApplicationGatewayFirewallDisabledRuleGroupArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallDisabledRuleGroupArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput
	ToApplicationGatewayFirewallDisabledRuleGroupArrayOutputWithContext(context.Context) ApplicationGatewayFirewallDisabledRuleGroupArrayOutput
}

type ApplicationGatewayFirewallDisabledRuleGroupArray []ApplicationGatewayFirewallDisabledRuleGroupInput

func (ApplicationGatewayFirewallDisabledRuleGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallDisabledRuleGroup)(nil)).Elem()
}

func (i ApplicationGatewayFirewallDisabledRuleGroupArray) ToApplicationGatewayFirewallDisabledRuleGroupArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return i.ToApplicationGatewayFirewallDisabledRuleGroupArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallDisabledRuleGroupArray) ToApplicationGatewayFirewallDisabledRuleGroupArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallDisabledRuleGroupArrayOutput)
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroupOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallDisabledRuleGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallDisabledRuleGroup)(nil)).Elem()
}

func (o ApplicationGatewayFirewallDisabledRuleGroupOutput) ToApplicationGatewayFirewallDisabledRuleGroupOutput() ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupOutput) ToApplicationGatewayFirewallDisabledRuleGroupOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return o
}

// The name of the rule group that will be disabled.
func (o ApplicationGatewayFirewallDisabledRuleGroupOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallDisabledRuleGroup) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
func (o ApplicationGatewayFirewallDisabledRuleGroupOutput) Rules() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallDisabledRuleGroup) []int { return v.Rules }).(pulumi.IntArrayOutput)
}

type ApplicationGatewayFirewallDisabledRuleGroupArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallDisabledRuleGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallDisabledRuleGroup)(nil)).Elem()
}

func (o ApplicationGatewayFirewallDisabledRuleGroupArrayOutput) ToApplicationGatewayFirewallDisabledRuleGroupArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupArrayOutput) ToApplicationGatewayFirewallDisabledRuleGroupArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFirewallDisabledRuleGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFirewallDisabledRuleGroup {
		return vs[0].([]ApplicationGatewayFirewallDisabledRuleGroup)[vs[1].(int)]
	}).(ApplicationGatewayFirewallDisabledRuleGroupOutput)
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroupResponse struct {
	// The name of the rule group that will be disabled.
	RuleGroupName string `pulumi:"ruleGroupName"`
	// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
	Rules []int `pulumi:"rules"`
}

// ApplicationGatewayFirewallDisabledRuleGroupResponseInput is an input type that accepts ApplicationGatewayFirewallDisabledRuleGroupResponseArgs and ApplicationGatewayFirewallDisabledRuleGroupResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallDisabledRuleGroupResponseInput` via:
//
//          ApplicationGatewayFirewallDisabledRuleGroupResponseArgs{...}
type ApplicationGatewayFirewallDisabledRuleGroupResponseInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallDisabledRuleGroupResponseOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseOutput
	ToApplicationGatewayFirewallDisabledRuleGroupResponseOutputWithContext(context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseOutput
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroupResponseArgs struct {
	// The name of the rule group that will be disabled.
	RuleGroupName pulumi.StringInput `pulumi:"ruleGroupName"`
	// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
	Rules pulumi.IntArrayInput `pulumi:"rules"`
}

func (ApplicationGatewayFirewallDisabledRuleGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallDisabledRuleGroupResponse)(nil)).Elem()
}

func (i ApplicationGatewayFirewallDisabledRuleGroupResponseArgs) ToApplicationGatewayFirewallDisabledRuleGroupResponseOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseOutput {
	return i.ToApplicationGatewayFirewallDisabledRuleGroupResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallDisabledRuleGroupResponseArgs) ToApplicationGatewayFirewallDisabledRuleGroupResponseOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallDisabledRuleGroupResponseOutput)
}

// ApplicationGatewayFirewallDisabledRuleGroupResponseArrayInput is an input type that accepts ApplicationGatewayFirewallDisabledRuleGroupResponseArray and ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFirewallDisabledRuleGroupResponseArrayInput` via:
//
//          ApplicationGatewayFirewallDisabledRuleGroupResponseArray{ ApplicationGatewayFirewallDisabledRuleGroupResponseArgs{...} }
type ApplicationGatewayFirewallDisabledRuleGroupResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput
	ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutputWithContext(context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput
}

type ApplicationGatewayFirewallDisabledRuleGroupResponseArray []ApplicationGatewayFirewallDisabledRuleGroupResponseInput

func (ApplicationGatewayFirewallDisabledRuleGroupResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallDisabledRuleGroupResponse)(nil)).Elem()
}

func (i ApplicationGatewayFirewallDisabledRuleGroupResponseArray) ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return i.ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFirewallDisabledRuleGroupResponseArray) ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput)
}

// Allows to disable rules within a rule group or an entire rule group.
type ApplicationGatewayFirewallDisabledRuleGroupResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFirewallDisabledRuleGroupResponse)(nil)).Elem()
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) ToApplicationGatewayFirewallDisabledRuleGroupResponseOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) ToApplicationGatewayFirewallDisabledRuleGroupResponseOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseOutput {
	return o
}

// The name of the rule group that will be disabled.
func (o ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) RuleGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallDisabledRuleGroupResponse) string { return v.RuleGroupName }).(pulumi.StringOutput)
}

// The list of rules that will be disabled. If null, all rules of the rule group will be disabled.
func (o ApplicationGatewayFirewallDisabledRuleGroupResponseOutput) Rules() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayFirewallDisabledRuleGroupResponse) []int { return v.Rules }).(pulumi.IntArrayOutput)
}

type ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFirewallDisabledRuleGroupResponse)(nil)).Elem()
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput) ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput() ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput) ToApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFirewallDisabledRuleGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFirewallDisabledRuleGroupResponse {
		return vs[0].([]ApplicationGatewayFirewallDisabledRuleGroupResponse)[vs[1].(int)]
	}).(ApplicationGatewayFirewallDisabledRuleGroupResponseOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the frontend IP configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// PrivateIP allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reference of the PublicIP resource.
	PublicIPAddress *SubResource `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet *SubResource `pulumi:"subnet"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayFrontendIPConfigurationInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationArgs and ApplicationGatewayFrontendIPConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationArgs{...}
type ApplicationGatewayFrontendIPConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationOutput() ApplicationGatewayFrontendIPConfigurationOutput
	ToApplicationGatewayFrontendIPConfigurationOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationOutput
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the frontend IP configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// PrivateIP allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Reference of the PublicIP resource.
	PublicIPAddress SubResourcePtrInput `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayFrontendIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationArgs) ToApplicationGatewayFrontendIPConfigurationOutput() ApplicationGatewayFrontendIPConfigurationOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationArgs) ToApplicationGatewayFrontendIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationOutput)
}

// ApplicationGatewayFrontendIPConfigurationArrayInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationArray and ApplicationGatewayFrontendIPConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationArrayInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationArray{ ApplicationGatewayFrontendIPConfigurationArgs{...} }
type ApplicationGatewayFrontendIPConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationArrayOutput() ApplicationGatewayFrontendIPConfigurationArrayOutput
	ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationArrayOutput
}

type ApplicationGatewayFrontendIPConfigurationArray []ApplicationGatewayFrontendIPConfigurationInput

func (ApplicationGatewayFrontendIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationArray) ToApplicationGatewayFrontendIPConfigurationArrayOutput() ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationArray) ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationArrayOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationOutput) ToApplicationGatewayFrontendIPConfigurationOutput() ApplicationGatewayFrontendIPConfigurationOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationOutput) ToApplicationGatewayFrontendIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the frontend IP configuration that is unique within an Application Gateway.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// PrivateIPAddress of the network interface IP Configuration.
func (o ApplicationGatewayFrontendIPConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// PrivateIP allocation method.
func (o ApplicationGatewayFrontendIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayFrontendIPConfigurationOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Reference of the PublicIP resource.
func (o ApplicationGatewayFrontendIPConfigurationOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *SubResource { return v.PublicIPAddress }).(SubResourcePtrOutput)
}

// Reference of the subnet resource.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayFrontendIPConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayFrontendIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationArrayOutput) ToApplicationGatewayFrontendIPConfigurationArrayOutput() ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationArrayOutput) ToApplicationGatewayFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendIPConfiguration {
		return vs[0].([]ApplicationGatewayFrontendIPConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayFrontendIPConfigurationOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the frontend IP configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// PrivateIP allocation method.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reference of the PublicIP resource.
	PublicIPAddress *SubResourceResponse `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet *SubResourceResponse `pulumi:"subnet"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayFrontendIPConfigurationResponseInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationResponseArgs and ApplicationGatewayFrontendIPConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationResponseInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationResponseArgs{...}
type ApplicationGatewayFrontendIPConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationResponseOutput() ApplicationGatewayFrontendIPConfigurationResponseOutput
	ToApplicationGatewayFrontendIPConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationResponseOutput
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the frontend IP configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// PrivateIPAddress of the network interface IP Configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// PrivateIP allocation method.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Reference of the PublicIP resource.
	PublicIPAddress SubResourceResponsePtrInput `pulumi:"publicIPAddress"`
	// Reference of the subnet resource.
	Subnet SubResourceResponsePtrInput `pulumi:"subnet"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayFrontendIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationResponseArgs) ToApplicationGatewayFrontendIPConfigurationResponseOutput() ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationResponseArgs) ToApplicationGatewayFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationResponseOutput)
}

// ApplicationGatewayFrontendIPConfigurationResponseArrayInput is an input type that accepts ApplicationGatewayFrontendIPConfigurationResponseArray and ApplicationGatewayFrontendIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendIPConfigurationResponseArrayInput` via:
//
//          ApplicationGatewayFrontendIPConfigurationResponseArray{ ApplicationGatewayFrontendIPConfigurationResponseArgs{...} }
type ApplicationGatewayFrontendIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendIPConfigurationResponseArrayOutput() ApplicationGatewayFrontendIPConfigurationResponseArrayOutput
	ToApplicationGatewayFrontendIPConfigurationResponseArrayOutputWithContext(context.Context) ApplicationGatewayFrontendIPConfigurationResponseArrayOutput
}

type ApplicationGatewayFrontendIPConfigurationResponseArray []ApplicationGatewayFrontendIPConfigurationResponseInput

func (ApplicationGatewayFrontendIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendIPConfigurationResponseArray) ToApplicationGatewayFrontendIPConfigurationResponseArrayOutput() ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return i.ToApplicationGatewayFrontendIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendIPConfigurationResponseArray) ToApplicationGatewayFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendIPConfigurationResponseArrayOutput)
}

// Frontend IP configuration of an application gateway.
type ApplicationGatewayFrontendIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) ToApplicationGatewayFrontendIPConfigurationResponseOutput() ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) ToApplicationGatewayFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the frontend IP configuration that is unique within an Application Gateway.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// PrivateIPAddress of the network interface IP Configuration.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// PrivateIP allocation method.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Reference of the PublicIP resource.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *SubResourceResponse {
		return v.PublicIPAddress
	}).(SubResourceResponsePtrOutput)
}

// Reference of the subnet resource.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayFrontendIPConfigurationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendIPConfigurationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayFrontendIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) ToApplicationGatewayFrontendIPConfigurationResponseArrayOutput() ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) ToApplicationGatewayFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendIPConfigurationResponse {
		return vs[0].([]ApplicationGatewayFrontendIPConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayFrontendIPConfigurationResponseOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPort struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the frontend port that is unique within an Application Gateway
	Name *string `pulumi:"name"`
	// Frontend port
	Port *int `pulumi:"port"`
	// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayFrontendPortInput is an input type that accepts ApplicationGatewayFrontendPortArgs and ApplicationGatewayFrontendPortOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortInput` via:
//
//          ApplicationGatewayFrontendPortArgs{...}
type ApplicationGatewayFrontendPortInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortOutput() ApplicationGatewayFrontendPortOutput
	ToApplicationGatewayFrontendPortOutputWithContext(context.Context) ApplicationGatewayFrontendPortOutput
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the frontend port that is unique within an Application Gateway
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Frontend port
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayFrontendPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortArgs) ToApplicationGatewayFrontendPortOutput() ApplicationGatewayFrontendPortOutput {
	return i.ToApplicationGatewayFrontendPortOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortArgs) ToApplicationGatewayFrontendPortOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortOutput)
}

// ApplicationGatewayFrontendPortArrayInput is an input type that accepts ApplicationGatewayFrontendPortArray and ApplicationGatewayFrontendPortArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortArrayInput` via:
//
//          ApplicationGatewayFrontendPortArray{ ApplicationGatewayFrontendPortArgs{...} }
type ApplicationGatewayFrontendPortArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortArrayOutput() ApplicationGatewayFrontendPortArrayOutput
	ToApplicationGatewayFrontendPortArrayOutputWithContext(context.Context) ApplicationGatewayFrontendPortArrayOutput
}

type ApplicationGatewayFrontendPortArray []ApplicationGatewayFrontendPortInput

func (ApplicationGatewayFrontendPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortArray) ToApplicationGatewayFrontendPortArrayOutput() ApplicationGatewayFrontendPortArrayOutput {
	return i.ToApplicationGatewayFrontendPortArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortArray) ToApplicationGatewayFrontendPortArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortArrayOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortOutput) ToApplicationGatewayFrontendPortOutput() ApplicationGatewayFrontendPortOutput {
	return o
}

func (o ApplicationGatewayFrontendPortOutput) ToApplicationGatewayFrontendPortOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayFrontendPortOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayFrontendPortOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the frontend port that is unique within an Application Gateway
func (o ApplicationGatewayFrontendPortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Frontend port
func (o ApplicationGatewayFrontendPortOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayFrontendPortOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayFrontendPortOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPort) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayFrontendPortArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPort)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortArrayOutput) ToApplicationGatewayFrontendPortArrayOutput() ApplicationGatewayFrontendPortArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortArrayOutput) ToApplicationGatewayFrontendPortArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendPort {
		return vs[0].([]ApplicationGatewayFrontendPort)[vs[1].(int)]
	}).(ApplicationGatewayFrontendPortOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the frontend port that is unique within an Application Gateway
	Name *string `pulumi:"name"`
	// Frontend port
	Port *int `pulumi:"port"`
	// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayFrontendPortResponseInput is an input type that accepts ApplicationGatewayFrontendPortResponseArgs and ApplicationGatewayFrontendPortResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortResponseInput` via:
//
//          ApplicationGatewayFrontendPortResponseArgs{...}
type ApplicationGatewayFrontendPortResponseInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortResponseOutput() ApplicationGatewayFrontendPortResponseOutput
	ToApplicationGatewayFrontendPortResponseOutputWithContext(context.Context) ApplicationGatewayFrontendPortResponseOutput
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the frontend port that is unique within an Application Gateway
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Frontend port
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayFrontendPortResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPortResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortResponseArgs) ToApplicationGatewayFrontendPortResponseOutput() ApplicationGatewayFrontendPortResponseOutput {
	return i.ToApplicationGatewayFrontendPortResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortResponseArgs) ToApplicationGatewayFrontendPortResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortResponseOutput)
}

// ApplicationGatewayFrontendPortResponseArrayInput is an input type that accepts ApplicationGatewayFrontendPortResponseArray and ApplicationGatewayFrontendPortResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayFrontendPortResponseArrayInput` via:
//
//          ApplicationGatewayFrontendPortResponseArray{ ApplicationGatewayFrontendPortResponseArgs{...} }
type ApplicationGatewayFrontendPortResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayFrontendPortResponseArrayOutput() ApplicationGatewayFrontendPortResponseArrayOutput
	ToApplicationGatewayFrontendPortResponseArrayOutputWithContext(context.Context) ApplicationGatewayFrontendPortResponseArrayOutput
}

type ApplicationGatewayFrontendPortResponseArray []ApplicationGatewayFrontendPortResponseInput

func (ApplicationGatewayFrontendPortResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPortResponse)(nil)).Elem()
}

func (i ApplicationGatewayFrontendPortResponseArray) ToApplicationGatewayFrontendPortResponseArrayOutput() ApplicationGatewayFrontendPortResponseArrayOutput {
	return i.ToApplicationGatewayFrontendPortResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayFrontendPortResponseArray) ToApplicationGatewayFrontendPortResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayFrontendPortResponseArrayOutput)
}

// Frontend port of an application gateway.
type ApplicationGatewayFrontendPortResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayFrontendPortResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortResponseOutput) ToApplicationGatewayFrontendPortResponseOutput() ApplicationGatewayFrontendPortResponseOutput {
	return o
}

func (o ApplicationGatewayFrontendPortResponseOutput) ToApplicationGatewayFrontendPortResponseOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayFrontendPortResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayFrontendPortResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the frontend port that is unique within an Application Gateway
func (o ApplicationGatewayFrontendPortResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Frontend port
func (o ApplicationGatewayFrontendPortResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Provisioning state of the frontend port resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayFrontendPortResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayFrontendPortResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayFrontendPortResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayFrontendPortResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayFrontendPortResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayFrontendPortResponse)(nil)).Elem()
}

func (o ApplicationGatewayFrontendPortResponseArrayOutput) ToApplicationGatewayFrontendPortResponseArrayOutput() ApplicationGatewayFrontendPortResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortResponseArrayOutput) ToApplicationGatewayFrontendPortResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayFrontendPortResponseArrayOutput {
	return o
}

func (o ApplicationGatewayFrontendPortResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayFrontendPortResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayFrontendPortResponse {
		return vs[0].([]ApplicationGatewayFrontendPortResponse)[vs[1].(int)]
	}).(ApplicationGatewayFrontendPortResponseOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListener struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort *SubResource `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName *string `pulumi:"hostName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the HTTP listener that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Protocol of the HTTP listener. Possible values are 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication *bool `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate *SubResource `pulumi:"sslCertificate"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayHttpListenerInput is an input type that accepts ApplicationGatewayHttpListenerArgs and ApplicationGatewayHttpListenerOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerInput` via:
//
//          ApplicationGatewayHttpListenerArgs{...}
type ApplicationGatewayHttpListenerInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerOutput() ApplicationGatewayHttpListenerOutput
	ToApplicationGatewayHttpListenerOutputWithContext(context.Context) ApplicationGatewayHttpListenerOutput
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort SubResourcePtrInput `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the HTTP listener that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Protocol of the HTTP listener. Possible values are 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication pulumi.BoolPtrInput `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate SubResourcePtrInput `pulumi:"sslCertificate"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayHttpListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListener)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerArgs) ToApplicationGatewayHttpListenerOutput() ApplicationGatewayHttpListenerOutput {
	return i.ToApplicationGatewayHttpListenerOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerArgs) ToApplicationGatewayHttpListenerOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerOutput)
}

// ApplicationGatewayHttpListenerArrayInput is an input type that accepts ApplicationGatewayHttpListenerArray and ApplicationGatewayHttpListenerArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerArrayInput` via:
//
//          ApplicationGatewayHttpListenerArray{ ApplicationGatewayHttpListenerArgs{...} }
type ApplicationGatewayHttpListenerArrayInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerArrayOutput() ApplicationGatewayHttpListenerArrayOutput
	ToApplicationGatewayHttpListenerArrayOutputWithContext(context.Context) ApplicationGatewayHttpListenerArrayOutput
}

type ApplicationGatewayHttpListenerArray []ApplicationGatewayHttpListenerInput

func (ApplicationGatewayHttpListenerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListener)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerArray) ToApplicationGatewayHttpListenerArrayOutput() ApplicationGatewayHttpListenerArrayOutput {
	return i.ToApplicationGatewayHttpListenerArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerArray) ToApplicationGatewayHttpListenerArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerArrayOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListener)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerOutput) ToApplicationGatewayHttpListenerOutput() ApplicationGatewayHttpListenerOutput {
	return o
}

func (o ApplicationGatewayHttpListenerOutput) ToApplicationGatewayHttpListenerOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayHttpListenerOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Frontend IP configuration resource of an application gateway.
func (o ApplicationGatewayHttpListenerOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// Frontend port resource of an application gateway.
func (o ApplicationGatewayHttpListenerOutput) FrontendPort() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *SubResource { return v.FrontendPort }).(SubResourcePtrOutput)
}

// Host name of HTTP listener.
func (o ApplicationGatewayHttpListenerOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayHttpListenerOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the HTTP listener that is unique within an Application Gateway.
func (o ApplicationGatewayHttpListenerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol of the HTTP listener. Possible values are 'Http' and 'Https'.
func (o ApplicationGatewayHttpListenerOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayHttpListenerOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Applicable only if protocol is https. Enables SNI for multi-hosting.
func (o ApplicationGatewayHttpListenerOutput) RequireServerNameIndication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *bool { return v.RequireServerNameIndication }).(pulumi.BoolPtrOutput)
}

// SSL certificate resource of an application gateway.
func (o ApplicationGatewayHttpListenerOutput) SslCertificate() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *SubResource { return v.SslCertificate }).(SubResourcePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayHttpListenerOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListener) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayHttpListenerArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListener)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerArrayOutput) ToApplicationGatewayHttpListenerArrayOutput() ApplicationGatewayHttpListenerArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerArrayOutput) ToApplicationGatewayHttpListenerArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayHttpListenerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayHttpListener {
		return vs[0].([]ApplicationGatewayHttpListener)[vs[1].(int)]
	}).(ApplicationGatewayHttpListenerOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort *SubResourceResponse `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName *string `pulumi:"hostName"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the HTTP listener that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Protocol of the HTTP listener. Possible values are 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication *bool `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate *SubResourceResponse `pulumi:"sslCertificate"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayHttpListenerResponseInput is an input type that accepts ApplicationGatewayHttpListenerResponseArgs and ApplicationGatewayHttpListenerResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerResponseInput` via:
//
//          ApplicationGatewayHttpListenerResponseArgs{...}
type ApplicationGatewayHttpListenerResponseInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerResponseOutput() ApplicationGatewayHttpListenerResponseOutput
	ToApplicationGatewayHttpListenerResponseOutputWithContext(context.Context) ApplicationGatewayHttpListenerResponseOutput
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Frontend IP configuration resource of an application gateway.
	FrontendIPConfiguration SubResourceResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// Frontend port resource of an application gateway.
	FrontendPort SubResourceResponsePtrInput `pulumi:"frontendPort"`
	// Host name of HTTP listener.
	HostName pulumi.StringPtrInput `pulumi:"hostName"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the HTTP listener that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Protocol of the HTTP listener. Possible values are 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Applicable only if protocol is https. Enables SNI for multi-hosting.
	RequireServerNameIndication pulumi.BoolPtrInput `pulumi:"requireServerNameIndication"`
	// SSL certificate resource of an application gateway.
	SslCertificate SubResourceResponsePtrInput `pulumi:"sslCertificate"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayHttpListenerResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListenerResponse)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerResponseArgs) ToApplicationGatewayHttpListenerResponseOutput() ApplicationGatewayHttpListenerResponseOutput {
	return i.ToApplicationGatewayHttpListenerResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerResponseArgs) ToApplicationGatewayHttpListenerResponseOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerResponseOutput)
}

// ApplicationGatewayHttpListenerResponseArrayInput is an input type that accepts ApplicationGatewayHttpListenerResponseArray and ApplicationGatewayHttpListenerResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayHttpListenerResponseArrayInput` via:
//
//          ApplicationGatewayHttpListenerResponseArray{ ApplicationGatewayHttpListenerResponseArgs{...} }
type ApplicationGatewayHttpListenerResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayHttpListenerResponseArrayOutput() ApplicationGatewayHttpListenerResponseArrayOutput
	ToApplicationGatewayHttpListenerResponseArrayOutputWithContext(context.Context) ApplicationGatewayHttpListenerResponseArrayOutput
}

type ApplicationGatewayHttpListenerResponseArray []ApplicationGatewayHttpListenerResponseInput

func (ApplicationGatewayHttpListenerResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListenerResponse)(nil)).Elem()
}

func (i ApplicationGatewayHttpListenerResponseArray) ToApplicationGatewayHttpListenerResponseArrayOutput() ApplicationGatewayHttpListenerResponseArrayOutput {
	return i.ToApplicationGatewayHttpListenerResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayHttpListenerResponseArray) ToApplicationGatewayHttpListenerResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayHttpListenerResponseArrayOutput)
}

// Http listener of an application gateway.
type ApplicationGatewayHttpListenerResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayHttpListenerResponse)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerResponseOutput) ToApplicationGatewayHttpListenerResponseOutput() ApplicationGatewayHttpListenerResponseOutput {
	return o
}

func (o ApplicationGatewayHttpListenerResponseOutput) ToApplicationGatewayHttpListenerResponseOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayHttpListenerResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Frontend IP configuration resource of an application gateway.
func (o ApplicationGatewayHttpListenerResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// Frontend port resource of an application gateway.
func (o ApplicationGatewayHttpListenerResponseOutput) FrontendPort() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *SubResourceResponse { return v.FrontendPort }).(SubResourceResponsePtrOutput)
}

// Host name of HTTP listener.
func (o ApplicationGatewayHttpListenerResponseOutput) HostName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.HostName }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayHttpListenerResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the HTTP listener that is unique within an Application Gateway.
func (o ApplicationGatewayHttpListenerResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol of the HTTP listener. Possible values are 'Http' and 'Https'.
func (o ApplicationGatewayHttpListenerResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Provisioning state of the HTTP listener resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayHttpListenerResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Applicable only if protocol is https. Enables SNI for multi-hosting.
func (o ApplicationGatewayHttpListenerResponseOutput) RequireServerNameIndication() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *bool { return v.RequireServerNameIndication }).(pulumi.BoolPtrOutput)
}

// SSL certificate resource of an application gateway.
func (o ApplicationGatewayHttpListenerResponseOutput) SslCertificate() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *SubResourceResponse { return v.SslCertificate }).(SubResourceResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayHttpListenerResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayHttpListenerResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayHttpListenerResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayHttpListenerResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayHttpListenerResponse)(nil)).Elem()
}

func (o ApplicationGatewayHttpListenerResponseArrayOutput) ToApplicationGatewayHttpListenerResponseArrayOutput() ApplicationGatewayHttpListenerResponseArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerResponseArrayOutput) ToApplicationGatewayHttpListenerResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayHttpListenerResponseArrayOutput {
	return o
}

func (o ApplicationGatewayHttpListenerResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayHttpListenerResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayHttpListenerResponse {
		return vs[0].([]ApplicationGatewayHttpListenerResponse)[vs[1].(int)]
	}).(ApplicationGatewayHttpListenerResponseOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the IP configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reference of the subnet resource. A subnet from where application gateway gets its private address.
	Subnet *SubResource `pulumi:"subnet"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayIPConfigurationInput is an input type that accepts ApplicationGatewayIPConfigurationArgs and ApplicationGatewayIPConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationInput` via:
//
//          ApplicationGatewayIPConfigurationArgs{...}
type ApplicationGatewayIPConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationOutput() ApplicationGatewayIPConfigurationOutput
	ToApplicationGatewayIPConfigurationOutputWithContext(context.Context) ApplicationGatewayIPConfigurationOutput
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the IP configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Reference of the subnet resource. A subnet from where application gateway gets its private address.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationArgs) ToApplicationGatewayIPConfigurationOutput() ApplicationGatewayIPConfigurationOutput {
	return i.ToApplicationGatewayIPConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationArgs) ToApplicationGatewayIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationOutput)
}

// ApplicationGatewayIPConfigurationArrayInput is an input type that accepts ApplicationGatewayIPConfigurationArray and ApplicationGatewayIPConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationArrayInput` via:
//
//          ApplicationGatewayIPConfigurationArray{ ApplicationGatewayIPConfigurationArgs{...} }
type ApplicationGatewayIPConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationArrayOutput() ApplicationGatewayIPConfigurationArrayOutput
	ToApplicationGatewayIPConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayIPConfigurationArrayOutput
}

type ApplicationGatewayIPConfigurationArray []ApplicationGatewayIPConfigurationInput

func (ApplicationGatewayIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationArray) ToApplicationGatewayIPConfigurationArrayOutput() ApplicationGatewayIPConfigurationArrayOutput {
	return i.ToApplicationGatewayIPConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationArray) ToApplicationGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationArrayOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationOutput) ToApplicationGatewayIPConfigurationOutput() ApplicationGatewayIPConfigurationOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationOutput) ToApplicationGatewayIPConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayIPConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the IP configuration that is unique within an Application Gateway.
func (o ApplicationGatewayIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayIPConfigurationOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Reference of the subnet resource. A subnet from where application gateway gets its private address.
func (o ApplicationGatewayIPConfigurationOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayIPConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationArrayOutput) ToApplicationGatewayIPConfigurationArrayOutput() ApplicationGatewayIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationArrayOutput) ToApplicationGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayIPConfiguration {
		return vs[0].([]ApplicationGatewayIPConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayIPConfigurationOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the IP configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Reference of the subnet resource. A subnet from where application gateway gets its private address.
	Subnet *SubResourceResponse `pulumi:"subnet"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayIPConfigurationResponseInput is an input type that accepts ApplicationGatewayIPConfigurationResponseArgs and ApplicationGatewayIPConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationResponseInput` via:
//
//          ApplicationGatewayIPConfigurationResponseArgs{...}
type ApplicationGatewayIPConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationResponseOutput() ApplicationGatewayIPConfigurationResponseOutput
	ToApplicationGatewayIPConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayIPConfigurationResponseOutput
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the IP configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Reference of the subnet resource. A subnet from where application gateway gets its private address.
	Subnet SubResourceResponsePtrInput `pulumi:"subnet"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationResponseArgs) ToApplicationGatewayIPConfigurationResponseOutput() ApplicationGatewayIPConfigurationResponseOutput {
	return i.ToApplicationGatewayIPConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationResponseArgs) ToApplicationGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationResponseOutput)
}

// ApplicationGatewayIPConfigurationResponseArrayInput is an input type that accepts ApplicationGatewayIPConfigurationResponseArray and ApplicationGatewayIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayIPConfigurationResponseArrayInput` via:
//
//          ApplicationGatewayIPConfigurationResponseArray{ ApplicationGatewayIPConfigurationResponseArgs{...} }
type ApplicationGatewayIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayIPConfigurationResponseArrayOutput() ApplicationGatewayIPConfigurationResponseArrayOutput
	ToApplicationGatewayIPConfigurationResponseArrayOutputWithContext(context.Context) ApplicationGatewayIPConfigurationResponseArrayOutput
}

type ApplicationGatewayIPConfigurationResponseArray []ApplicationGatewayIPConfigurationResponseInput

func (ApplicationGatewayIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayIPConfigurationResponseArray) ToApplicationGatewayIPConfigurationResponseArrayOutput() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return i.ToApplicationGatewayIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayIPConfigurationResponseArray) ToApplicationGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayIPConfigurationResponseArrayOutput)
}

// IP configuration of an application gateway. Currently 1 public and 1 private IP configuration is allowed.
type ApplicationGatewayIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationResponseOutput) ToApplicationGatewayIPConfigurationResponseOutput() ApplicationGatewayIPConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationResponseOutput) ToApplicationGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayIPConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the IP configuration that is unique within an Application Gateway.
func (o ApplicationGatewayIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Provisioning state of the application gateway subnet resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayIPConfigurationResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Reference of the subnet resource. A subnet from where application gateway gets its private address.
func (o ApplicationGatewayIPConfigurationResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayIPConfigurationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayIPConfigurationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayIPConfigurationResponseArrayOutput) ToApplicationGatewayIPConfigurationResponseArrayOutput() ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationResponseArrayOutput) ToApplicationGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayIPConfigurationResponse {
		return vs[0].([]ApplicationGatewayIPConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayIPConfigurationResponseOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRule struct {
	// Backend address pool resource of URL path map path rule.
	BackendAddressPool *SubResource `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map path rule.
	BackendHttpSettings *SubResource `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the path rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path rules of URL path map.
	Paths []string `pulumi:"paths"`
	// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Redirect configuration resource of URL path map path rule.
	RedirectConfiguration *SubResource `pulumi:"redirectConfiguration"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayPathRuleInput is an input type that accepts ApplicationGatewayPathRuleArgs and ApplicationGatewayPathRuleOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleInput` via:
//
//          ApplicationGatewayPathRuleArgs{...}
type ApplicationGatewayPathRuleInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleOutput() ApplicationGatewayPathRuleOutput
	ToApplicationGatewayPathRuleOutputWithContext(context.Context) ApplicationGatewayPathRuleOutput
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleArgs struct {
	// Backend address pool resource of URL path map path rule.
	BackendAddressPool SubResourcePtrInput `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map path rule.
	BackendHttpSettings SubResourcePtrInput `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the path rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rules of URL path map.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Redirect configuration resource of URL path map path rule.
	RedirectConfiguration SubResourcePtrInput `pulumi:"redirectConfiguration"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayPathRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRule)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleArgs) ToApplicationGatewayPathRuleOutput() ApplicationGatewayPathRuleOutput {
	return i.ToApplicationGatewayPathRuleOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleArgs) ToApplicationGatewayPathRuleOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleOutput)
}

// ApplicationGatewayPathRuleArrayInput is an input type that accepts ApplicationGatewayPathRuleArray and ApplicationGatewayPathRuleArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleArrayInput` via:
//
//          ApplicationGatewayPathRuleArray{ ApplicationGatewayPathRuleArgs{...} }
type ApplicationGatewayPathRuleArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleArrayOutput() ApplicationGatewayPathRuleArrayOutput
	ToApplicationGatewayPathRuleArrayOutputWithContext(context.Context) ApplicationGatewayPathRuleArrayOutput
}

type ApplicationGatewayPathRuleArray []ApplicationGatewayPathRuleInput

func (ApplicationGatewayPathRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRule)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleArray) ToApplicationGatewayPathRuleArrayOutput() ApplicationGatewayPathRuleArrayOutput {
	return i.ToApplicationGatewayPathRuleArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleArray) ToApplicationGatewayPathRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleArrayOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRule)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleOutput) ToApplicationGatewayPathRuleOutput() ApplicationGatewayPathRuleOutput {
	return o
}

func (o ApplicationGatewayPathRuleOutput) ToApplicationGatewayPathRuleOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleOutput {
	return o
}

// Backend address pool resource of URL path map path rule.
func (o ApplicationGatewayPathRuleOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *SubResource { return v.BackendAddressPool }).(SubResourcePtrOutput)
}

// Backend http settings resource of URL path map path rule.
func (o ApplicationGatewayPathRuleOutput) BackendHttpSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *SubResource { return v.BackendHttpSettings }).(SubResourcePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayPathRuleOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayPathRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the path rule that is unique within an Application Gateway.
func (o ApplicationGatewayPathRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rules of URL path map.
func (o ApplicationGatewayPathRuleOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayPathRuleOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Redirect configuration resource of URL path map path rule.
func (o ApplicationGatewayPathRuleOutput) RedirectConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *SubResource { return v.RedirectConfiguration }).(SubResourcePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayPathRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayPathRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRule)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleArrayOutput) ToApplicationGatewayPathRuleArrayOutput() ApplicationGatewayPathRuleArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleArrayOutput) ToApplicationGatewayPathRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPathRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPathRule {
		return vs[0].([]ApplicationGatewayPathRule)[vs[1].(int)]
	}).(ApplicationGatewayPathRuleOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleResponse struct {
	// Backend address pool resource of URL path map path rule.
	BackendAddressPool *SubResourceResponse `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map path rule.
	BackendHttpSettings *SubResourceResponse `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the path rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path rules of URL path map.
	Paths []string `pulumi:"paths"`
	// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Redirect configuration resource of URL path map path rule.
	RedirectConfiguration *SubResourceResponse `pulumi:"redirectConfiguration"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayPathRuleResponseInput is an input type that accepts ApplicationGatewayPathRuleResponseArgs and ApplicationGatewayPathRuleResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleResponseInput` via:
//
//          ApplicationGatewayPathRuleResponseArgs{...}
type ApplicationGatewayPathRuleResponseInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleResponseOutput() ApplicationGatewayPathRuleResponseOutput
	ToApplicationGatewayPathRuleResponseOutputWithContext(context.Context) ApplicationGatewayPathRuleResponseOutput
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleResponseArgs struct {
	// Backend address pool resource of URL path map path rule.
	BackendAddressPool SubResourceResponsePtrInput `pulumi:"backendAddressPool"`
	// Backend http settings resource of URL path map path rule.
	BackendHttpSettings SubResourceResponsePtrInput `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the path rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rules of URL path map.
	Paths pulumi.StringArrayInput `pulumi:"paths"`
	// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Redirect configuration resource of URL path map path rule.
	RedirectConfiguration SubResourceResponsePtrInput `pulumi:"redirectConfiguration"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayPathRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleResponseArgs) ToApplicationGatewayPathRuleResponseOutput() ApplicationGatewayPathRuleResponseOutput {
	return i.ToApplicationGatewayPathRuleResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleResponseArgs) ToApplicationGatewayPathRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleResponseOutput)
}

// ApplicationGatewayPathRuleResponseArrayInput is an input type that accepts ApplicationGatewayPathRuleResponseArray and ApplicationGatewayPathRuleResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayPathRuleResponseArrayInput` via:
//
//          ApplicationGatewayPathRuleResponseArray{ ApplicationGatewayPathRuleResponseArgs{...} }
type ApplicationGatewayPathRuleResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayPathRuleResponseArrayOutput() ApplicationGatewayPathRuleResponseArrayOutput
	ToApplicationGatewayPathRuleResponseArrayOutputWithContext(context.Context) ApplicationGatewayPathRuleResponseArrayOutput
}

type ApplicationGatewayPathRuleResponseArray []ApplicationGatewayPathRuleResponseInput

func (ApplicationGatewayPathRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayPathRuleResponseArray) ToApplicationGatewayPathRuleResponseArrayOutput() ApplicationGatewayPathRuleResponseArrayOutput {
	return i.ToApplicationGatewayPathRuleResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayPathRuleResponseArray) ToApplicationGatewayPathRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayPathRuleResponseArrayOutput)
}

// Path rule of URL path map of an application gateway.
type ApplicationGatewayPathRuleResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayPathRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleResponseOutput) ToApplicationGatewayPathRuleResponseOutput() ApplicationGatewayPathRuleResponseOutput {
	return o
}

func (o ApplicationGatewayPathRuleResponseOutput) ToApplicationGatewayPathRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleResponseOutput {
	return o
}

// Backend address pool resource of URL path map path rule.
func (o ApplicationGatewayPathRuleResponseOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponsePtrOutput)
}

// Backend http settings resource of URL path map path rule.
func (o ApplicationGatewayPathRuleResponseOutput) BackendHttpSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *SubResourceResponse { return v.BackendHttpSettings }).(SubResourceResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayPathRuleResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayPathRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the path rule that is unique within an Application Gateway.
func (o ApplicationGatewayPathRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rules of URL path map.
func (o ApplicationGatewayPathRuleResponseOutput) Paths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) []string { return v.Paths }).(pulumi.StringArrayOutput)
}

// Path rule of URL path map resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayPathRuleResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Redirect configuration resource of URL path map path rule.
func (o ApplicationGatewayPathRuleResponseOutput) RedirectConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *SubResourceResponse { return v.RedirectConfiguration }).(SubResourceResponsePtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayPathRuleResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayPathRuleResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayPathRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayPathRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayPathRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayPathRuleResponseArrayOutput) ToApplicationGatewayPathRuleResponseArrayOutput() ApplicationGatewayPathRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleResponseArrayOutput) ToApplicationGatewayPathRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayPathRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayPathRuleResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayPathRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayPathRuleResponse {
		return vs[0].([]ApplicationGatewayPathRuleResponse)[vs[1].(int)]
	}).(ApplicationGatewayPathRuleResponseOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbe struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Host name to send the probe to.
	Host *string `pulumi:"host"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval *int `pulumi:"interval"`
	// Criterion for classifying a healthy probe response.
	Match *ApplicationGatewayProbeHealthResponseMatch `pulumi:"match"`
	// Minimum number of servers that are always marked healthy. Default value is 0.
	MinServers *int `pulumi:"minServers"`
	// Name of the probe that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
	Path *string `pulumi:"path"`
	// Whether the host header should be picked from the backend http settings. Default value is false.
	PickHostNameFromBackendHttpSettings *bool `pulumi:"pickHostNameFromBackendHttpSettings"`
	// The protocol used for the probe. Possible values are 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout *int `pulumi:"timeout"`
	// Type of the resource.
	Type *string `pulumi:"type"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// ApplicationGatewayProbeInput is an input type that accepts ApplicationGatewayProbeArgs and ApplicationGatewayProbeOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeInput` via:
//
//          ApplicationGatewayProbeArgs{...}
type ApplicationGatewayProbeInput interface {
	pulumi.Input

	ToApplicationGatewayProbeOutput() ApplicationGatewayProbeOutput
	ToApplicationGatewayProbeOutputWithContext(context.Context) ApplicationGatewayProbeOutput
}

// Probe of the application gateway.
type ApplicationGatewayProbeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Host name to send the probe to.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Criterion for classifying a healthy probe response.
	Match ApplicationGatewayProbeHealthResponseMatchPtrInput `pulumi:"match"`
	// Minimum number of servers that are always marked healthy. Default value is 0.
	MinServers pulumi.IntPtrInput `pulumi:"minServers"`
	// Name of the probe that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Whether the host header should be picked from the backend http settings. Default value is false.
	PickHostNameFromBackendHttpSettings pulumi.BoolPtrInput `pulumi:"pickHostNameFromBackendHttpSettings"`
	// The protocol used for the probe. Possible values are 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (ApplicationGatewayProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbe)(nil)).Elem()
}

func (i ApplicationGatewayProbeArgs) ToApplicationGatewayProbeOutput() ApplicationGatewayProbeOutput {
	return i.ToApplicationGatewayProbeOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeArgs) ToApplicationGatewayProbeOutputWithContext(ctx context.Context) ApplicationGatewayProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeOutput)
}

// ApplicationGatewayProbeArrayInput is an input type that accepts ApplicationGatewayProbeArray and ApplicationGatewayProbeArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeArrayInput` via:
//
//          ApplicationGatewayProbeArray{ ApplicationGatewayProbeArgs{...} }
type ApplicationGatewayProbeArrayInput interface {
	pulumi.Input

	ToApplicationGatewayProbeArrayOutput() ApplicationGatewayProbeArrayOutput
	ToApplicationGatewayProbeArrayOutputWithContext(context.Context) ApplicationGatewayProbeArrayOutput
}

type ApplicationGatewayProbeArray []ApplicationGatewayProbeInput

func (ApplicationGatewayProbeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbe)(nil)).Elem()
}

func (i ApplicationGatewayProbeArray) ToApplicationGatewayProbeArrayOutput() ApplicationGatewayProbeArrayOutput {
	return i.ToApplicationGatewayProbeArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeArray) ToApplicationGatewayProbeArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeArrayOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbeOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbe)(nil)).Elem()
}

func (o ApplicationGatewayProbeOutput) ToApplicationGatewayProbeOutput() ApplicationGatewayProbeOutput {
	return o
}

func (o ApplicationGatewayProbeOutput) ToApplicationGatewayProbeOutputWithContext(ctx context.Context) ApplicationGatewayProbeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayProbeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Host name to send the probe to.
func (o ApplicationGatewayProbeOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayProbeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbeOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Criterion for classifying a healthy probe response.
func (o ApplicationGatewayProbeOutput) Match() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *ApplicationGatewayProbeHealthResponseMatch { return v.Match }).(ApplicationGatewayProbeHealthResponseMatchPtrOutput)
}

// Minimum number of servers that are always marked healthy. Default value is 0.
func (o ApplicationGatewayProbeOutput) MinServers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *int { return v.MinServers }).(pulumi.IntPtrOutput)
}

// Name of the probe that is unique within an Application Gateway.
func (o ApplicationGatewayProbeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
func (o ApplicationGatewayProbeOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Whether the host header should be picked from the backend http settings. Default value is false.
func (o ApplicationGatewayProbeOutput) PickHostNameFromBackendHttpSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *bool { return v.PickHostNameFromBackendHttpSettings }).(pulumi.BoolPtrOutput)
}

// The protocol used for the probe. Possible values are 'Http' and 'Https'.
func (o ApplicationGatewayProbeOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayProbeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbeOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayProbeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
func (o ApplicationGatewayProbeOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbe) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayProbeArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbe)(nil)).Elem()
}

func (o ApplicationGatewayProbeArrayOutput) ToApplicationGatewayProbeArrayOutput() ApplicationGatewayProbeArrayOutput {
	return o
}

func (o ApplicationGatewayProbeArrayOutput) ToApplicationGatewayProbeArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeArrayOutput {
	return o
}

func (o ApplicationGatewayProbeArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayProbeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayProbe {
		return vs[0].([]ApplicationGatewayProbe)[vs[1].(int)]
	}).(ApplicationGatewayProbeOutput)
}

// Application gateway probe health response match
type ApplicationGatewayProbeHealthResponseMatch struct {
	// Body that must be contained in the health response. Default value is empty.
	Body *string `pulumi:"body"`
	// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
	StatusCodes []string `pulumi:"statusCodes"`
}

// ApplicationGatewayProbeHealthResponseMatchInput is an input type that accepts ApplicationGatewayProbeHealthResponseMatchArgs and ApplicationGatewayProbeHealthResponseMatchOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeHealthResponseMatchInput` via:
//
//          ApplicationGatewayProbeHealthResponseMatchArgs{...}
type ApplicationGatewayProbeHealthResponseMatchInput interface {
	pulumi.Input

	ToApplicationGatewayProbeHealthResponseMatchOutput() ApplicationGatewayProbeHealthResponseMatchOutput
	ToApplicationGatewayProbeHealthResponseMatchOutputWithContext(context.Context) ApplicationGatewayProbeHealthResponseMatchOutput
}

// Application gateway probe health response match
type ApplicationGatewayProbeHealthResponseMatchArgs struct {
	// Body that must be contained in the health response. Default value is empty.
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
	StatusCodes pulumi.StringArrayInput `pulumi:"statusCodes"`
}

func (ApplicationGatewayProbeHealthResponseMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeHealthResponseMatch)(nil)).Elem()
}

func (i ApplicationGatewayProbeHealthResponseMatchArgs) ToApplicationGatewayProbeHealthResponseMatchOutput() ApplicationGatewayProbeHealthResponseMatchOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeHealthResponseMatchArgs) ToApplicationGatewayProbeHealthResponseMatchOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchOutput)
}

func (i ApplicationGatewayProbeHealthResponseMatchArgs) ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeHealthResponseMatchArgs) ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchOutput).ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx)
}

// ApplicationGatewayProbeHealthResponseMatchPtrInput is an input type that accepts ApplicationGatewayProbeHealthResponseMatchArgs, ApplicationGatewayProbeHealthResponseMatchPtr and ApplicationGatewayProbeHealthResponseMatchPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeHealthResponseMatchPtrInput` via:
//
//          ApplicationGatewayProbeHealthResponseMatchArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayProbeHealthResponseMatchPtrInput interface {
	pulumi.Input

	ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput
	ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput
}

type applicationGatewayProbeHealthResponseMatchPtrType ApplicationGatewayProbeHealthResponseMatchArgs

func ApplicationGatewayProbeHealthResponseMatchPtr(v *ApplicationGatewayProbeHealthResponseMatchArgs) ApplicationGatewayProbeHealthResponseMatchPtrInput {
	return (*applicationGatewayProbeHealthResponseMatchPtrType)(v)
}

func (*applicationGatewayProbeHealthResponseMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbeHealthResponseMatch)(nil)).Elem()
}

func (i *applicationGatewayProbeHealthResponseMatchPtrType) ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayProbeHealthResponseMatchPtrType) ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchPtrOutput)
}

// Application gateway probe health response match
type ApplicationGatewayProbeHealthResponseMatchOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeHealthResponseMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeHealthResponseMatch)(nil)).Elem()
}

func (o ApplicationGatewayProbeHealthResponseMatchOutput) ToApplicationGatewayProbeHealthResponseMatchOutput() ApplicationGatewayProbeHealthResponseMatchOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchOutput) ToApplicationGatewayProbeHealthResponseMatchOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchOutput) ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o.ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayProbeHealthResponseMatchOutput) ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatch) *ApplicationGatewayProbeHealthResponseMatch {
		return &v
	}).(ApplicationGatewayProbeHealthResponseMatchPtrOutput)
}

// Body that must be contained in the health response. Default value is empty.
func (o ApplicationGatewayProbeHealthResponseMatchOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatch) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
func (o ApplicationGatewayProbeHealthResponseMatchOutput) StatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatch) []string { return v.StatusCodes }).(pulumi.StringArrayOutput)
}

type ApplicationGatewayProbeHealthResponseMatchPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeHealthResponseMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbeHealthResponseMatch)(nil)).Elem()
}

func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) ToApplicationGatewayProbeHealthResponseMatchPtrOutput() ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) ToApplicationGatewayProbeHealthResponseMatchPtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchPtrOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) Elem() ApplicationGatewayProbeHealthResponseMatchOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatch) ApplicationGatewayProbeHealthResponseMatch {
		return *v
	}).(ApplicationGatewayProbeHealthResponseMatchOutput)
}

// Body that must be contained in the health response. Default value is empty.
func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatch) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
func (o ApplicationGatewayProbeHealthResponseMatchPtrOutput) StatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatch) []string {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(pulumi.StringArrayOutput)
}

// Application gateway probe health response match
type ApplicationGatewayProbeHealthResponseMatchResponse struct {
	// Body that must be contained in the health response. Default value is empty.
	Body *string `pulumi:"body"`
	// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
	StatusCodes []string `pulumi:"statusCodes"`
}

// ApplicationGatewayProbeHealthResponseMatchResponseInput is an input type that accepts ApplicationGatewayProbeHealthResponseMatchResponseArgs and ApplicationGatewayProbeHealthResponseMatchResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeHealthResponseMatchResponseInput` via:
//
//          ApplicationGatewayProbeHealthResponseMatchResponseArgs{...}
type ApplicationGatewayProbeHealthResponseMatchResponseInput interface {
	pulumi.Input

	ToApplicationGatewayProbeHealthResponseMatchResponseOutput() ApplicationGatewayProbeHealthResponseMatchResponseOutput
	ToApplicationGatewayProbeHealthResponseMatchResponseOutputWithContext(context.Context) ApplicationGatewayProbeHealthResponseMatchResponseOutput
}

// Application gateway probe health response match
type ApplicationGatewayProbeHealthResponseMatchResponseArgs struct {
	// Body that must be contained in the health response. Default value is empty.
	Body pulumi.StringPtrInput `pulumi:"body"`
	// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
	StatusCodes pulumi.StringArrayInput `pulumi:"statusCodes"`
}

func (ApplicationGatewayProbeHealthResponseMatchResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeHealthResponseMatchResponse)(nil)).Elem()
}

func (i ApplicationGatewayProbeHealthResponseMatchResponseArgs) ToApplicationGatewayProbeHealthResponseMatchResponseOutput() ApplicationGatewayProbeHealthResponseMatchResponseOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeHealthResponseMatchResponseArgs) ToApplicationGatewayProbeHealthResponseMatchResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchResponseOutput)
}

func (i ApplicationGatewayProbeHealthResponseMatchResponseArgs) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutput() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeHealthResponseMatchResponseArgs) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchResponseOutput).ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayProbeHealthResponseMatchResponsePtrInput is an input type that accepts ApplicationGatewayProbeHealthResponseMatchResponseArgs, ApplicationGatewayProbeHealthResponseMatchResponsePtr and ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeHealthResponseMatchResponsePtrInput` via:
//
//          ApplicationGatewayProbeHealthResponseMatchResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayProbeHealthResponseMatchResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutput() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput
	ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(context.Context) ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput
}

type applicationGatewayProbeHealthResponseMatchResponsePtrType ApplicationGatewayProbeHealthResponseMatchResponseArgs

func ApplicationGatewayProbeHealthResponseMatchResponsePtr(v *ApplicationGatewayProbeHealthResponseMatchResponseArgs) ApplicationGatewayProbeHealthResponseMatchResponsePtrInput {
	return (*applicationGatewayProbeHealthResponseMatchResponsePtrType)(v)
}

func (*applicationGatewayProbeHealthResponseMatchResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbeHealthResponseMatchResponse)(nil)).Elem()
}

func (i *applicationGatewayProbeHealthResponseMatchResponsePtrType) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutput() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return i.ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayProbeHealthResponseMatchResponsePtrType) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput)
}

// Application gateway probe health response match
type ApplicationGatewayProbeHealthResponseMatchResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeHealthResponseMatchResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeHealthResponseMatchResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) ToApplicationGatewayProbeHealthResponseMatchResponseOutput() ApplicationGatewayProbeHealthResponseMatchResponseOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) ToApplicationGatewayProbeHealthResponseMatchResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponseOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutput() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return o.ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatchResponse) *ApplicationGatewayProbeHealthResponseMatchResponse {
		return &v
	}).(ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput)
}

// Body that must be contained in the health response. Default value is empty.
func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatchResponse) *string { return v.Body }).(pulumi.StringPtrOutput)
}

// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
func (o ApplicationGatewayProbeHealthResponseMatchResponseOutput) StatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeHealthResponseMatchResponse) []string { return v.StatusCodes }).(pulumi.StringArrayOutput)
}

type ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayProbeHealthResponseMatchResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutput() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) ToApplicationGatewayProbeHealthResponseMatchResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return o
}

func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) Elem() ApplicationGatewayProbeHealthResponseMatchResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatchResponse) ApplicationGatewayProbeHealthResponseMatchResponse {
		return *v
	}).(ApplicationGatewayProbeHealthResponseMatchResponseOutput)
}

// Body that must be contained in the health response. Default value is empty.
func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatchResponse) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

// Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
func (o ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput) StatusCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayProbeHealthResponseMatchResponse) []string {
		if v == nil {
			return nil
		}
		return v.StatusCodes
	}).(pulumi.StringArrayOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Host name to send the probe to.
	Host *string `pulumi:"host"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval *int `pulumi:"interval"`
	// Criterion for classifying a healthy probe response.
	Match *ApplicationGatewayProbeHealthResponseMatchResponse `pulumi:"match"`
	// Minimum number of servers that are always marked healthy. Default value is 0.
	MinServers *int `pulumi:"minServers"`
	// Name of the probe that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
	Path *string `pulumi:"path"`
	// Whether the host header should be picked from the backend http settings. Default value is false.
	PickHostNameFromBackendHttpSettings *bool `pulumi:"pickHostNameFromBackendHttpSettings"`
	// The protocol used for the probe. Possible values are 'Http' and 'Https'.
	Protocol *string `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout *int `pulumi:"timeout"`
	// Type of the resource.
	Type *string `pulumi:"type"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// ApplicationGatewayProbeResponseInput is an input type that accepts ApplicationGatewayProbeResponseArgs and ApplicationGatewayProbeResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeResponseInput` via:
//
//          ApplicationGatewayProbeResponseArgs{...}
type ApplicationGatewayProbeResponseInput interface {
	pulumi.Input

	ToApplicationGatewayProbeResponseOutput() ApplicationGatewayProbeResponseOutput
	ToApplicationGatewayProbeResponseOutputWithContext(context.Context) ApplicationGatewayProbeResponseOutput
}

// Probe of the application gateway.
type ApplicationGatewayProbeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Host name to send the probe to.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Criterion for classifying a healthy probe response.
	Match ApplicationGatewayProbeHealthResponseMatchResponsePtrInput `pulumi:"match"`
	// Minimum number of servers that are always marked healthy. Default value is 0.
	MinServers pulumi.IntPtrInput `pulumi:"minServers"`
	// Name of the probe that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Whether the host header should be picked from the backend http settings. Default value is false.
	PickHostNameFromBackendHttpSettings pulumi.BoolPtrInput `pulumi:"pickHostNameFromBackendHttpSettings"`
	// The protocol used for the probe. Possible values are 'Http' and 'Https'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (ApplicationGatewayProbeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeResponse)(nil)).Elem()
}

func (i ApplicationGatewayProbeResponseArgs) ToApplicationGatewayProbeResponseOutput() ApplicationGatewayProbeResponseOutput {
	return i.ToApplicationGatewayProbeResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeResponseArgs) ToApplicationGatewayProbeResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeResponseOutput)
}

// ApplicationGatewayProbeResponseArrayInput is an input type that accepts ApplicationGatewayProbeResponseArray and ApplicationGatewayProbeResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayProbeResponseArrayInput` via:
//
//          ApplicationGatewayProbeResponseArray{ ApplicationGatewayProbeResponseArgs{...} }
type ApplicationGatewayProbeResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayProbeResponseArrayOutput() ApplicationGatewayProbeResponseArrayOutput
	ToApplicationGatewayProbeResponseArrayOutputWithContext(context.Context) ApplicationGatewayProbeResponseArrayOutput
}

type ApplicationGatewayProbeResponseArray []ApplicationGatewayProbeResponseInput

func (ApplicationGatewayProbeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbeResponse)(nil)).Elem()
}

func (i ApplicationGatewayProbeResponseArray) ToApplicationGatewayProbeResponseArrayOutput() ApplicationGatewayProbeResponseArrayOutput {
	return i.ToApplicationGatewayProbeResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayProbeResponseArray) ToApplicationGatewayProbeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayProbeResponseArrayOutput)
}

// Probe of the application gateway.
type ApplicationGatewayProbeResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayProbeResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeResponseOutput) ToApplicationGatewayProbeResponseOutput() ApplicationGatewayProbeResponseOutput {
	return o
}

func (o ApplicationGatewayProbeResponseOutput) ToApplicationGatewayProbeResponseOutputWithContext(ctx context.Context) ApplicationGatewayProbeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayProbeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Host name to send the probe to.
func (o ApplicationGatewayProbeResponseOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayProbeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The probing interval in seconds. This is the time interval between two consecutive probes. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbeResponseOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Criterion for classifying a healthy probe response.
func (o ApplicationGatewayProbeResponseOutput) Match() ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *ApplicationGatewayProbeHealthResponseMatchResponse {
		return v.Match
	}).(ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput)
}

// Minimum number of servers that are always marked healthy. Default value is 0.
func (o ApplicationGatewayProbeResponseOutput) MinServers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *int { return v.MinServers }).(pulumi.IntPtrOutput)
}

// Name of the probe that is unique within an Application Gateway.
func (o ApplicationGatewayProbeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Relative path of probe. Valid path starts from '/'. Probe is sent to <Protocol>://<host>:<port><path>
func (o ApplicationGatewayProbeResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Whether the host header should be picked from the backend http settings. Default value is false.
func (o ApplicationGatewayProbeResponseOutput) PickHostNameFromBackendHttpSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *bool { return v.PickHostNameFromBackendHttpSettings }).(pulumi.BoolPtrOutput)
}

// The protocol used for the probe. Possible values are 'Http' and 'Https'.
func (o ApplicationGatewayProbeResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayProbeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// the probe timeout in seconds. Probe marked as failed if valid response is not received with this timeout period. Acceptable values are from 1 second to 86400 seconds.
func (o ApplicationGatewayProbeResponseOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayProbeResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The probe retry count. Backend server is marked down after consecutive probe failure count reaches UnhealthyThreshold. Acceptable values are from 1 second to 20.
func (o ApplicationGatewayProbeResponseOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayProbeResponse) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type ApplicationGatewayProbeResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayProbeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayProbeResponse)(nil)).Elem()
}

func (o ApplicationGatewayProbeResponseArrayOutput) ToApplicationGatewayProbeResponseArrayOutput() ApplicationGatewayProbeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayProbeResponseArrayOutput) ToApplicationGatewayProbeResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayProbeResponseArrayOutput {
	return o
}

func (o ApplicationGatewayProbeResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayProbeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayProbeResponse {
		return vs[0].([]ApplicationGatewayProbeResponse)[vs[1].(int)]
	}).(ApplicationGatewayProbeResponseOutput)
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Include path in the redirected url.
	IncludePath *bool `pulumi:"includePath"`
	// Include query string in the redirected url.
	IncludeQueryString *bool `pulumi:"includeQueryString"`
	// Name of the redirect configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path rules specifying redirect configuration.
	PathRules []SubResource `pulumi:"pathRules"`
	// Supported http redirection types - Permanent, Temporary, Found, SeeOther.
	RedirectType *string `pulumi:"redirectType"`
	// Request routing specifying redirect configuration.
	RequestRoutingRules []SubResource `pulumi:"requestRoutingRules"`
	// Reference to a listener to redirect the request to.
	TargetListener *SubResource `pulumi:"targetListener"`
	// Url to redirect the request to.
	TargetUrl *string `pulumi:"targetUrl"`
	// Type of the resource.
	Type *string `pulumi:"type"`
	// Url path maps specifying default redirect configuration.
	UrlPathMaps []SubResource `pulumi:"urlPathMaps"`
}

// ApplicationGatewayRedirectConfigurationInput is an input type that accepts ApplicationGatewayRedirectConfigurationArgs and ApplicationGatewayRedirectConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationInput` via:
//
//          ApplicationGatewayRedirectConfigurationArgs{...}
type ApplicationGatewayRedirectConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationOutput() ApplicationGatewayRedirectConfigurationOutput
	ToApplicationGatewayRedirectConfigurationOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationOutput
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Include path in the redirected url.
	IncludePath pulumi.BoolPtrInput `pulumi:"includePath"`
	// Include query string in the redirected url.
	IncludeQueryString pulumi.BoolPtrInput `pulumi:"includeQueryString"`
	// Name of the redirect configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rules specifying redirect configuration.
	PathRules SubResourceArrayInput `pulumi:"pathRules"`
	// Supported http redirection types - Permanent, Temporary, Found, SeeOther.
	RedirectType pulumi.StringPtrInput `pulumi:"redirectType"`
	// Request routing specifying redirect configuration.
	RequestRoutingRules SubResourceArrayInput `pulumi:"requestRoutingRules"`
	// Reference to a listener to redirect the request to.
	TargetListener SubResourcePtrInput `pulumi:"targetListener"`
	// Url to redirect the request to.
	TargetUrl pulumi.StringPtrInput `pulumi:"targetUrl"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Url path maps specifying default redirect configuration.
	UrlPathMaps SubResourceArrayInput `pulumi:"urlPathMaps"`
}

func (ApplicationGatewayRedirectConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayRedirectConfigurationArgs) ToApplicationGatewayRedirectConfigurationOutput() ApplicationGatewayRedirectConfigurationOutput {
	return i.ToApplicationGatewayRedirectConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationArgs) ToApplicationGatewayRedirectConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationOutput)
}

// ApplicationGatewayRedirectConfigurationArrayInput is an input type that accepts ApplicationGatewayRedirectConfigurationArray and ApplicationGatewayRedirectConfigurationArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationArrayInput` via:
//
//          ApplicationGatewayRedirectConfigurationArray{ ApplicationGatewayRedirectConfigurationArgs{...} }
type ApplicationGatewayRedirectConfigurationArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationArrayOutput() ApplicationGatewayRedirectConfigurationArrayOutput
	ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationArrayOutput
}

type ApplicationGatewayRedirectConfigurationArray []ApplicationGatewayRedirectConfigurationInput

func (ApplicationGatewayRedirectConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayRedirectConfigurationArray) ToApplicationGatewayRedirectConfigurationArrayOutput() ApplicationGatewayRedirectConfigurationArrayOutput {
	return i.ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationArray) ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationArrayOutput)
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationOutput) ToApplicationGatewayRedirectConfigurationOutput() ApplicationGatewayRedirectConfigurationOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationOutput) ToApplicationGatewayRedirectConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayRedirectConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayRedirectConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Include path in the redirected url.
func (o ApplicationGatewayRedirectConfigurationOutput) IncludePath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *bool { return v.IncludePath }).(pulumi.BoolPtrOutput)
}

// Include query string in the redirected url.
func (o ApplicationGatewayRedirectConfigurationOutput) IncludeQueryString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *bool { return v.IncludeQueryString }).(pulumi.BoolPtrOutput)
}

// Name of the redirect configuration that is unique within an Application Gateway.
func (o ApplicationGatewayRedirectConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rules specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationOutput) PathRules() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) []SubResource { return v.PathRules }).(SubResourceArrayOutput)
}

// Supported http redirection types - Permanent, Temporary, Found, SeeOther.
func (o ApplicationGatewayRedirectConfigurationOutput) RedirectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.RedirectType }).(pulumi.StringPtrOutput)
}

// Request routing specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationOutput) RequestRoutingRules() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) []SubResource { return v.RequestRoutingRules }).(SubResourceArrayOutput)
}

// Reference to a listener to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationOutput) TargetListener() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *SubResource { return v.TargetListener }).(SubResourcePtrOutput)
}

// Url to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationOutput) TargetUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.TargetUrl }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayRedirectConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Url path maps specifying default redirect configuration.
func (o ApplicationGatewayRedirectConfigurationOutput) UrlPathMaps() SubResourceArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfiguration) []SubResource { return v.UrlPathMaps }).(SubResourceArrayOutput)
}

type ApplicationGatewayRedirectConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRedirectConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationArrayOutput) ToApplicationGatewayRedirectConfigurationArrayOutput() ApplicationGatewayRedirectConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationArrayOutput) ToApplicationGatewayRedirectConfigurationArrayOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationArrayOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRedirectConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRedirectConfiguration {
		return vs[0].([]ApplicationGatewayRedirectConfiguration)[vs[1].(int)]
	}).(ApplicationGatewayRedirectConfigurationOutput)
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Include path in the redirected url.
	IncludePath *bool `pulumi:"includePath"`
	// Include query string in the redirected url.
	IncludeQueryString *bool `pulumi:"includeQueryString"`
	// Name of the redirect configuration that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path rules specifying redirect configuration.
	PathRules []SubResourceResponse `pulumi:"pathRules"`
	// Supported http redirection types - Permanent, Temporary, Found, SeeOther.
	RedirectType *string `pulumi:"redirectType"`
	// Request routing specifying redirect configuration.
	RequestRoutingRules []SubResourceResponse `pulumi:"requestRoutingRules"`
	// Reference to a listener to redirect the request to.
	TargetListener *SubResourceResponse `pulumi:"targetListener"`
	// Url to redirect the request to.
	TargetUrl *string `pulumi:"targetUrl"`
	// Type of the resource.
	Type *string `pulumi:"type"`
	// Url path maps specifying default redirect configuration.
	UrlPathMaps []SubResourceResponse `pulumi:"urlPathMaps"`
}

// ApplicationGatewayRedirectConfigurationResponseInput is an input type that accepts ApplicationGatewayRedirectConfigurationResponseArgs and ApplicationGatewayRedirectConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationResponseInput` via:
//
//          ApplicationGatewayRedirectConfigurationResponseArgs{...}
type ApplicationGatewayRedirectConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationResponseOutput() ApplicationGatewayRedirectConfigurationResponseOutput
	ToApplicationGatewayRedirectConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationResponseOutput
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Include path in the redirected url.
	IncludePath pulumi.BoolPtrInput `pulumi:"includePath"`
	// Include query string in the redirected url.
	IncludeQueryString pulumi.BoolPtrInput `pulumi:"includeQueryString"`
	// Name of the redirect configuration that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rules specifying redirect configuration.
	PathRules SubResourceResponseArrayInput `pulumi:"pathRules"`
	// Supported http redirection types - Permanent, Temporary, Found, SeeOther.
	RedirectType pulumi.StringPtrInput `pulumi:"redirectType"`
	// Request routing specifying redirect configuration.
	RequestRoutingRules SubResourceResponseArrayInput `pulumi:"requestRoutingRules"`
	// Reference to a listener to redirect the request to.
	TargetListener SubResourceResponsePtrInput `pulumi:"targetListener"`
	// Url to redirect the request to.
	TargetUrl pulumi.StringPtrInput `pulumi:"targetUrl"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Url path maps specifying default redirect configuration.
	UrlPathMaps SubResourceResponseArrayInput `pulumi:"urlPathMaps"`
}

func (ApplicationGatewayRedirectConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayRedirectConfigurationResponseArgs) ToApplicationGatewayRedirectConfigurationResponseOutput() ApplicationGatewayRedirectConfigurationResponseOutput {
	return i.ToApplicationGatewayRedirectConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationResponseArgs) ToApplicationGatewayRedirectConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationResponseOutput)
}

// ApplicationGatewayRedirectConfigurationResponseArrayInput is an input type that accepts ApplicationGatewayRedirectConfigurationResponseArray and ApplicationGatewayRedirectConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRedirectConfigurationResponseArrayInput` via:
//
//          ApplicationGatewayRedirectConfigurationResponseArray{ ApplicationGatewayRedirectConfigurationResponseArgs{...} }
type ApplicationGatewayRedirectConfigurationResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRedirectConfigurationResponseArrayOutput() ApplicationGatewayRedirectConfigurationResponseArrayOutput
	ToApplicationGatewayRedirectConfigurationResponseArrayOutputWithContext(context.Context) ApplicationGatewayRedirectConfigurationResponseArrayOutput
}

type ApplicationGatewayRedirectConfigurationResponseArray []ApplicationGatewayRedirectConfigurationResponseInput

func (ApplicationGatewayRedirectConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRedirectConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayRedirectConfigurationResponseArray) ToApplicationGatewayRedirectConfigurationResponseArrayOutput() ApplicationGatewayRedirectConfigurationResponseArrayOutput {
	return i.ToApplicationGatewayRedirectConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRedirectConfigurationResponseArray) ToApplicationGatewayRedirectConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRedirectConfigurationResponseArrayOutput)
}

// Redirect configuration of an application gateway.
type ApplicationGatewayRedirectConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRedirectConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationResponseOutput) ToApplicationGatewayRedirectConfigurationResponseOutput() ApplicationGatewayRedirectConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationResponseOutput) ToApplicationGatewayRedirectConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Include path in the redirected url.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) IncludePath() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *bool { return v.IncludePath }).(pulumi.BoolPtrOutput)
}

// Include query string in the redirected url.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) IncludeQueryString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *bool { return v.IncludeQueryString }).(pulumi.BoolPtrOutput)
}

// Name of the redirect configuration that is unique within an Application Gateway.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rules specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) PathRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) []SubResourceResponse { return v.PathRules }).(SubResourceResponseArrayOutput)
}

// Supported http redirection types - Permanent, Temporary, Found, SeeOther.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) RedirectType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *string { return v.RedirectType }).(pulumi.StringPtrOutput)
}

// Request routing specifying redirect configuration.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) RequestRoutingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) []SubResourceResponse {
		return v.RequestRoutingRules
	}).(SubResourceResponseArrayOutput)
}

// Reference to a listener to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) TargetListener() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *SubResourceResponse { return v.TargetListener }).(SubResourceResponsePtrOutput)
}

// Url to redirect the request to.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) TargetUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *string { return v.TargetUrl }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Url path maps specifying default redirect configuration.
func (o ApplicationGatewayRedirectConfigurationResponseOutput) UrlPathMaps() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayRedirectConfigurationResponse) []SubResourceResponse { return v.UrlPathMaps }).(SubResourceResponseArrayOutput)
}

type ApplicationGatewayRedirectConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRedirectConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRedirectConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayRedirectConfigurationResponseArrayOutput) ToApplicationGatewayRedirectConfigurationResponseArrayOutput() ApplicationGatewayRedirectConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationResponseArrayOutput) ToApplicationGatewayRedirectConfigurationResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRedirectConfigurationResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRedirectConfigurationResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRedirectConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRedirectConfigurationResponse {
		return vs[0].([]ApplicationGatewayRedirectConfigurationResponse)[vs[1].(int)]
	}).(ApplicationGatewayRedirectConfigurationResponseOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRule struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool *SubResource `pulumi:"backendAddressPool"`
	// Backend http settings resource of the application gateway.
	BackendHttpSettings *SubResource `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Http listener resource of the application gateway.
	HttpListener *SubResource `pulumi:"httpListener"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the request routing rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Redirect configuration resource of the application gateway.
	RedirectConfiguration *SubResource `pulumi:"redirectConfiguration"`
	// Rule type.
	RuleType *string `pulumi:"ruleType"`
	// Type of the resource.
	Type *string `pulumi:"type"`
	// URL path map resource of the application gateway.
	UrlPathMap *SubResource `pulumi:"urlPathMap"`
}

// ApplicationGatewayRequestRoutingRuleInput is an input type that accepts ApplicationGatewayRequestRoutingRuleArgs and ApplicationGatewayRequestRoutingRuleOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleInput` via:
//
//          ApplicationGatewayRequestRoutingRuleArgs{...}
type ApplicationGatewayRequestRoutingRuleInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleOutput() ApplicationGatewayRequestRoutingRuleOutput
	ToApplicationGatewayRequestRoutingRuleOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleOutput
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleArgs struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool SubResourcePtrInput `pulumi:"backendAddressPool"`
	// Backend http settings resource of the application gateway.
	BackendHttpSettings SubResourcePtrInput `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Http listener resource of the application gateway.
	HttpListener SubResourcePtrInput `pulumi:"httpListener"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the request routing rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Redirect configuration resource of the application gateway.
	RedirectConfiguration SubResourcePtrInput `pulumi:"redirectConfiguration"`
	// Rule type.
	RuleType pulumi.StringPtrInput `pulumi:"ruleType"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// URL path map resource of the application gateway.
	UrlPathMap SubResourcePtrInput `pulumi:"urlPathMap"`
}

func (ApplicationGatewayRequestRoutingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleArgs) ToApplicationGatewayRequestRoutingRuleOutput() ApplicationGatewayRequestRoutingRuleOutput {
	return i.ToApplicationGatewayRequestRoutingRuleOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleArgs) ToApplicationGatewayRequestRoutingRuleOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleOutput)
}

// ApplicationGatewayRequestRoutingRuleArrayInput is an input type that accepts ApplicationGatewayRequestRoutingRuleArray and ApplicationGatewayRequestRoutingRuleArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleArrayInput` via:
//
//          ApplicationGatewayRequestRoutingRuleArray{ ApplicationGatewayRequestRoutingRuleArgs{...} }
type ApplicationGatewayRequestRoutingRuleArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleArrayOutput() ApplicationGatewayRequestRoutingRuleArrayOutput
	ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleArrayOutput
}

type ApplicationGatewayRequestRoutingRuleArray []ApplicationGatewayRequestRoutingRuleInput

func (ApplicationGatewayRequestRoutingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleArray) ToApplicationGatewayRequestRoutingRuleArrayOutput() ApplicationGatewayRequestRoutingRuleArrayOutput {
	return i.ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleArray) ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleArrayOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleOutput) ToApplicationGatewayRequestRoutingRuleOutput() ApplicationGatewayRequestRoutingRuleOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleOutput) ToApplicationGatewayRequestRoutingRuleOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleOutput {
	return o
}

// Backend address pool resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.BackendAddressPool }).(SubResourcePtrOutput)
}

// Backend http settings resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) BackendHttpSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.BackendHttpSettings }).(SubResourcePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayRequestRoutingRuleOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Http listener resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) HttpListener() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.HttpListener }).(SubResourcePtrOutput)
}

// Resource ID.
func (o ApplicationGatewayRequestRoutingRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the request routing rule that is unique within an Application Gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayRequestRoutingRuleOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Redirect configuration resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) RedirectConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.RedirectConfiguration }).(SubResourcePtrOutput)
}

// Rule type.
func (o ApplicationGatewayRequestRoutingRuleOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.RuleType }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayRequestRoutingRuleOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// URL path map resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleOutput) UrlPathMap() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRule) *SubResource { return v.UrlPathMap }).(SubResourcePtrOutput)
}

type ApplicationGatewayRequestRoutingRuleArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRule)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleArrayOutput) ToApplicationGatewayRequestRoutingRuleArrayOutput() ApplicationGatewayRequestRoutingRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleArrayOutput) ToApplicationGatewayRequestRoutingRuleArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRequestRoutingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRequestRoutingRule {
		return vs[0].([]ApplicationGatewayRequestRoutingRule)[vs[1].(int)]
	}).(ApplicationGatewayRequestRoutingRuleOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleResponse struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool *SubResourceResponse `pulumi:"backendAddressPool"`
	// Backend http settings resource of the application gateway.
	BackendHttpSettings *SubResourceResponse `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Http listener resource of the application gateway.
	HttpListener *SubResourceResponse `pulumi:"httpListener"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the request routing rule that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Redirect configuration resource of the application gateway.
	RedirectConfiguration *SubResourceResponse `pulumi:"redirectConfiguration"`
	// Rule type.
	RuleType *string `pulumi:"ruleType"`
	// Type of the resource.
	Type *string `pulumi:"type"`
	// URL path map resource of the application gateway.
	UrlPathMap *SubResourceResponse `pulumi:"urlPathMap"`
}

// ApplicationGatewayRequestRoutingRuleResponseInput is an input type that accepts ApplicationGatewayRequestRoutingRuleResponseArgs and ApplicationGatewayRequestRoutingRuleResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleResponseInput` via:
//
//          ApplicationGatewayRequestRoutingRuleResponseArgs{...}
type ApplicationGatewayRequestRoutingRuleResponseInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleResponseOutput() ApplicationGatewayRequestRoutingRuleResponseOutput
	ToApplicationGatewayRequestRoutingRuleResponseOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleResponseOutput
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleResponseArgs struct {
	// Backend address pool resource of the application gateway.
	BackendAddressPool SubResourceResponsePtrInput `pulumi:"backendAddressPool"`
	// Backend http settings resource of the application gateway.
	BackendHttpSettings SubResourceResponsePtrInput `pulumi:"backendHttpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Http listener resource of the application gateway.
	HttpListener SubResourceResponsePtrInput `pulumi:"httpListener"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the request routing rule that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Redirect configuration resource of the application gateway.
	RedirectConfiguration SubResourceResponsePtrInput `pulumi:"redirectConfiguration"`
	// Rule type.
	RuleType pulumi.StringPtrInput `pulumi:"ruleType"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// URL path map resource of the application gateway.
	UrlPathMap SubResourceResponsePtrInput `pulumi:"urlPathMap"`
}

func (ApplicationGatewayRequestRoutingRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleResponseArgs) ToApplicationGatewayRequestRoutingRuleResponseOutput() ApplicationGatewayRequestRoutingRuleResponseOutput {
	return i.ToApplicationGatewayRequestRoutingRuleResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleResponseArgs) ToApplicationGatewayRequestRoutingRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleResponseOutput)
}

// ApplicationGatewayRequestRoutingRuleResponseArrayInput is an input type that accepts ApplicationGatewayRequestRoutingRuleResponseArray and ApplicationGatewayRequestRoutingRuleResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayRequestRoutingRuleResponseArrayInput` via:
//
//          ApplicationGatewayRequestRoutingRuleResponseArray{ ApplicationGatewayRequestRoutingRuleResponseArgs{...} }
type ApplicationGatewayRequestRoutingRuleResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayRequestRoutingRuleResponseArrayOutput() ApplicationGatewayRequestRoutingRuleResponseArrayOutput
	ToApplicationGatewayRequestRoutingRuleResponseArrayOutputWithContext(context.Context) ApplicationGatewayRequestRoutingRuleResponseArrayOutput
}

type ApplicationGatewayRequestRoutingRuleResponseArray []ApplicationGatewayRequestRoutingRuleResponseInput

func (ApplicationGatewayRequestRoutingRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRuleResponse)(nil)).Elem()
}

func (i ApplicationGatewayRequestRoutingRuleResponseArray) ToApplicationGatewayRequestRoutingRuleResponseArrayOutput() ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return i.ToApplicationGatewayRequestRoutingRuleResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayRequestRoutingRuleResponseArray) ToApplicationGatewayRequestRoutingRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayRequestRoutingRuleResponseArrayOutput)
}

// Request routing rule of an application gateway.
type ApplicationGatewayRequestRoutingRuleResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayRequestRoutingRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleResponseOutput) ToApplicationGatewayRequestRoutingRuleResponseOutput() ApplicationGatewayRequestRoutingRuleResponseOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleResponseOutput) ToApplicationGatewayRequestRoutingRuleResponseOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleResponseOutput {
	return o
}

// Backend address pool resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponsePtrOutput)
}

// Backend http settings resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) BackendHttpSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse {
		return v.BackendHttpSettings
	}).(SubResourceResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Http listener resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) HttpListener() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse { return v.HttpListener }).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the request routing rule that is unique within an Application Gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Provisioning state of the request routing rule resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Redirect configuration resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) RedirectConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse {
		return v.RedirectConfiguration
	}).(SubResourceResponsePtrOutput)
}

// Rule type.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.RuleType }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// URL path map resource of the application gateway.
func (o ApplicationGatewayRequestRoutingRuleResponseOutput) UrlPathMap() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayRequestRoutingRuleResponse) *SubResourceResponse { return v.UrlPathMap }).(SubResourceResponsePtrOutput)
}

type ApplicationGatewayRequestRoutingRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayRequestRoutingRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayRequestRoutingRuleResponse)(nil)).Elem()
}

func (o ApplicationGatewayRequestRoutingRuleResponseArrayOutput) ToApplicationGatewayRequestRoutingRuleResponseArrayOutput() ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleResponseArrayOutput) ToApplicationGatewayRequestRoutingRuleResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayRequestRoutingRuleResponseArrayOutput {
	return o
}

func (o ApplicationGatewayRequestRoutingRuleResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayRequestRoutingRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayRequestRoutingRuleResponse {
		return vs[0].([]ApplicationGatewayRequestRoutingRuleResponse)[vs[1].(int)]
	}).(ApplicationGatewayRequestRoutingRuleResponseOutput)
}

// SKU of an application gateway
type ApplicationGatewaySku struct {
	// Capacity (instance count) of an application gateway.
	Capacity *int `pulumi:"capacity"`
	// Name of an application gateway SKU.
	Name *string `pulumi:"name"`
	// Tier of an application gateway.
	Tier *string `pulumi:"tier"`
}

// ApplicationGatewaySkuInput is an input type that accepts ApplicationGatewaySkuArgs and ApplicationGatewaySkuOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuInput` via:
//
//          ApplicationGatewaySkuArgs{...}
type ApplicationGatewaySkuInput interface {
	pulumi.Input

	ToApplicationGatewaySkuOutput() ApplicationGatewaySkuOutput
	ToApplicationGatewaySkuOutputWithContext(context.Context) ApplicationGatewaySkuOutput
}

// SKU of an application gateway
type ApplicationGatewaySkuArgs struct {
	// Capacity (instance count) of an application gateway.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Name of an application gateway SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of an application gateway.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ApplicationGatewaySkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySku)(nil)).Elem()
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuOutput() ApplicationGatewaySkuOutput {
	return i.ToApplicationGatewaySkuOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuOutputWithContext(ctx context.Context) ApplicationGatewaySkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuOutput)
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return i.ToApplicationGatewaySkuPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuArgs) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuOutput).ToApplicationGatewaySkuPtrOutputWithContext(ctx)
}

// ApplicationGatewaySkuPtrInput is an input type that accepts ApplicationGatewaySkuArgs, ApplicationGatewaySkuPtr and ApplicationGatewaySkuPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuPtrInput` via:
//
//          ApplicationGatewaySkuArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewaySkuPtrInput interface {
	pulumi.Input

	ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput
	ToApplicationGatewaySkuPtrOutputWithContext(context.Context) ApplicationGatewaySkuPtrOutput
}

type applicationGatewaySkuPtrType ApplicationGatewaySkuArgs

func ApplicationGatewaySkuPtr(v *ApplicationGatewaySkuArgs) ApplicationGatewaySkuPtrInput {
	return (*applicationGatewaySkuPtrType)(v)
}

func (*applicationGatewaySkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySku)(nil)).Elem()
}

func (i *applicationGatewaySkuPtrType) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return i.ToApplicationGatewaySkuPtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySkuPtrType) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuPtrOutput)
}

// SKU of an application gateway
type ApplicationGatewaySkuOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySku)(nil)).Elem()
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuOutput() ApplicationGatewaySkuOutput {
	return o
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuOutputWithContext(ctx context.Context) ApplicationGatewaySkuOutput {
	return o
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return o.ToApplicationGatewaySkuPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySkuOutput) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *ApplicationGatewaySku {
		return &v
	}).(ApplicationGatewaySkuPtrOutput)
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU.
func (o ApplicationGatewaySkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySkuPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySku)(nil)).Elem()
}

func (o ApplicationGatewaySkuPtrOutput) ToApplicationGatewaySkuPtrOutput() ApplicationGatewaySkuPtrOutput {
	return o
}

func (o ApplicationGatewaySkuPtrOutput) ToApplicationGatewaySkuPtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuPtrOutput {
	return o
}

func (o ApplicationGatewaySkuPtrOutput) Elem() ApplicationGatewaySkuOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) ApplicationGatewaySku { return *v }).(ApplicationGatewaySkuOutput)
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU.
func (o ApplicationGatewaySkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SKU of an application gateway
type ApplicationGatewaySkuResponse struct {
	// Capacity (instance count) of an application gateway.
	Capacity *int `pulumi:"capacity"`
	// Name of an application gateway SKU.
	Name *string `pulumi:"name"`
	// Tier of an application gateway.
	Tier *string `pulumi:"tier"`
}

// ApplicationGatewaySkuResponseInput is an input type that accepts ApplicationGatewaySkuResponseArgs and ApplicationGatewaySkuResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuResponseInput` via:
//
//          ApplicationGatewaySkuResponseArgs{...}
type ApplicationGatewaySkuResponseInput interface {
	pulumi.Input

	ToApplicationGatewaySkuResponseOutput() ApplicationGatewaySkuResponseOutput
	ToApplicationGatewaySkuResponseOutputWithContext(context.Context) ApplicationGatewaySkuResponseOutput
}

// SKU of an application gateway
type ApplicationGatewaySkuResponseArgs struct {
	// Capacity (instance count) of an application gateway.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Name of an application gateway SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Tier of an application gateway.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ApplicationGatewaySkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySkuResponse)(nil)).Elem()
}

func (i ApplicationGatewaySkuResponseArgs) ToApplicationGatewaySkuResponseOutput() ApplicationGatewaySkuResponseOutput {
	return i.ToApplicationGatewaySkuResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuResponseArgs) ToApplicationGatewaySkuResponseOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuResponseOutput)
}

func (i ApplicationGatewaySkuResponseArgs) ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput {
	return i.ToApplicationGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySkuResponseArgs) ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuResponseOutput).ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewaySkuResponsePtrInput is an input type that accepts ApplicationGatewaySkuResponseArgs, ApplicationGatewaySkuResponsePtr and ApplicationGatewaySkuResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySkuResponsePtrInput` via:
//
//          ApplicationGatewaySkuResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewaySkuResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput
	ToApplicationGatewaySkuResponsePtrOutputWithContext(context.Context) ApplicationGatewaySkuResponsePtrOutput
}

type applicationGatewaySkuResponsePtrType ApplicationGatewaySkuResponseArgs

func ApplicationGatewaySkuResponsePtr(v *ApplicationGatewaySkuResponseArgs) ApplicationGatewaySkuResponsePtrInput {
	return (*applicationGatewaySkuResponsePtrType)(v)
}

func (*applicationGatewaySkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySkuResponse)(nil)).Elem()
}

func (i *applicationGatewaySkuResponsePtrType) ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput {
	return i.ToApplicationGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySkuResponsePtrType) ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySkuResponsePtrOutput)
}

// SKU of an application gateway
type ApplicationGatewaySkuResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySkuResponse)(nil)).Elem()
}

func (o ApplicationGatewaySkuResponseOutput) ToApplicationGatewaySkuResponseOutput() ApplicationGatewaySkuResponseOutput {
	return o
}

func (o ApplicationGatewaySkuResponseOutput) ToApplicationGatewaySkuResponseOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponseOutput {
	return o
}

func (o ApplicationGatewaySkuResponseOutput) ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput {
	return o.ToApplicationGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySkuResponseOutput) ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuResponse) *ApplicationGatewaySkuResponse {
		return &v
	}).(ApplicationGatewaySkuResponsePtrOutput)
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU.
func (o ApplicationGatewaySkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySkuResponse)(nil)).Elem()
}

func (o ApplicationGatewaySkuResponsePtrOutput) ToApplicationGatewaySkuResponsePtrOutput() ApplicationGatewaySkuResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySkuResponsePtrOutput) ToApplicationGatewaySkuResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySkuResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySkuResponsePtrOutput) Elem() ApplicationGatewaySkuResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) ApplicationGatewaySkuResponse { return *v }).(ApplicationGatewaySkuResponseOutput)
}

// Capacity (instance count) of an application gateway.
func (o ApplicationGatewaySkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Name of an application gateway SKU.
func (o ApplicationGatewaySkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Tier of an application gateway.
func (o ApplicationGatewaySkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificate struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data *string `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the SSL certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password *string `pulumi:"password"`
	// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
	PublicCertData *string `pulumi:"publicCertData"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewaySslCertificateInput is an input type that accepts ApplicationGatewaySslCertificateArgs and ApplicationGatewaySslCertificateOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateInput` via:
//
//          ApplicationGatewaySslCertificateArgs{...}
type ApplicationGatewaySslCertificateInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateOutput() ApplicationGatewaySslCertificateOutput
	ToApplicationGatewaySslCertificateOutputWithContext(context.Context) ApplicationGatewaySslCertificateOutput
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateArgs struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the SSL certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
	PublicCertData pulumi.StringPtrInput `pulumi:"publicCertData"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewaySslCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateArgs) ToApplicationGatewaySslCertificateOutput() ApplicationGatewaySslCertificateOutput {
	return i.ToApplicationGatewaySslCertificateOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateArgs) ToApplicationGatewaySslCertificateOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateOutput)
}

// ApplicationGatewaySslCertificateArrayInput is an input type that accepts ApplicationGatewaySslCertificateArray and ApplicationGatewaySslCertificateArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateArrayInput` via:
//
//          ApplicationGatewaySslCertificateArray{ ApplicationGatewaySslCertificateArgs{...} }
type ApplicationGatewaySslCertificateArrayInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateArrayOutput() ApplicationGatewaySslCertificateArrayOutput
	ToApplicationGatewaySslCertificateArrayOutputWithContext(context.Context) ApplicationGatewaySslCertificateArrayOutput
}

type ApplicationGatewaySslCertificateArray []ApplicationGatewaySslCertificateInput

func (ApplicationGatewaySslCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateArray) ToApplicationGatewaySslCertificateArrayOutput() ApplicationGatewaySslCertificateArrayOutput {
	return i.ToApplicationGatewaySslCertificateArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateArray) ToApplicationGatewaySslCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateArrayOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateOutput) ToApplicationGatewaySslCertificateOutput() ApplicationGatewaySslCertificateOutput {
	return o
}

func (o ApplicationGatewaySslCertificateOutput) ToApplicationGatewaySslCertificateOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateOutput {
	return o
}

// Base-64 encoded pfx certificate. Only applicable in PUT Request.
func (o ApplicationGatewaySslCertificateOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewaySslCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewaySslCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the SSL certificate that is unique within an Application Gateway.
func (o ApplicationGatewaySslCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Password for the pfx file specified in data. Only applicable in PUT request.
func (o ApplicationGatewaySslCertificateOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewaySslCertificateOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
func (o ApplicationGatewaySslCertificateOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewaySslCertificateOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificate) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslCertificateArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificate)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateArrayOutput) ToApplicationGatewaySslCertificateArrayOutput() ApplicationGatewaySslCertificateArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateArrayOutput) ToApplicationGatewaySslCertificateArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateArrayOutput) Index(i pulumi.IntInput) ApplicationGatewaySslCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewaySslCertificate {
		return vs[0].([]ApplicationGatewaySslCertificate)[vs[1].(int)]
	}).(ApplicationGatewaySslCertificateOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateResponse struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data *string `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the SSL certificate that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password *string `pulumi:"password"`
	// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
	PublicCertData *string `pulumi:"publicCertData"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewaySslCertificateResponseInput is an input type that accepts ApplicationGatewaySslCertificateResponseArgs and ApplicationGatewaySslCertificateResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateResponseInput` via:
//
//          ApplicationGatewaySslCertificateResponseArgs{...}
type ApplicationGatewaySslCertificateResponseInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateResponseOutput() ApplicationGatewaySslCertificateResponseOutput
	ToApplicationGatewaySslCertificateResponseOutputWithContext(context.Context) ApplicationGatewaySslCertificateResponseOutput
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateResponseArgs struct {
	// Base-64 encoded pfx certificate. Only applicable in PUT Request.
	Data pulumi.StringPtrInput `pulumi:"data"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the SSL certificate that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Password for the pfx file specified in data. Only applicable in PUT request.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
	PublicCertData pulumi.StringPtrInput `pulumi:"publicCertData"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewaySslCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateResponseArgs) ToApplicationGatewaySslCertificateResponseOutput() ApplicationGatewaySslCertificateResponseOutput {
	return i.ToApplicationGatewaySslCertificateResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateResponseArgs) ToApplicationGatewaySslCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateResponseOutput)
}

// ApplicationGatewaySslCertificateResponseArrayInput is an input type that accepts ApplicationGatewaySslCertificateResponseArray and ApplicationGatewaySslCertificateResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslCertificateResponseArrayInput` via:
//
//          ApplicationGatewaySslCertificateResponseArray{ ApplicationGatewaySslCertificateResponseArgs{...} }
type ApplicationGatewaySslCertificateResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewaySslCertificateResponseArrayOutput() ApplicationGatewaySslCertificateResponseArrayOutput
	ToApplicationGatewaySslCertificateResponseArrayOutputWithContext(context.Context) ApplicationGatewaySslCertificateResponseArrayOutput
}

type ApplicationGatewaySslCertificateResponseArray []ApplicationGatewaySslCertificateResponseInput

func (ApplicationGatewaySslCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificateResponse)(nil)).Elem()
}

func (i ApplicationGatewaySslCertificateResponseArray) ToApplicationGatewaySslCertificateResponseArrayOutput() ApplicationGatewaySslCertificateResponseArrayOutput {
	return i.ToApplicationGatewaySslCertificateResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslCertificateResponseArray) ToApplicationGatewaySslCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslCertificateResponseArrayOutput)
}

// SSL certificates of an application gateway.
type ApplicationGatewaySslCertificateResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateResponseOutput) ToApplicationGatewaySslCertificateResponseOutput() ApplicationGatewaySslCertificateResponseOutput {
	return o
}

func (o ApplicationGatewaySslCertificateResponseOutput) ToApplicationGatewaySslCertificateResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateResponseOutput {
	return o
}

// Base-64 encoded pfx certificate. Only applicable in PUT Request.
func (o ApplicationGatewaySslCertificateResponseOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Data }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewaySslCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewaySslCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the SSL certificate that is unique within an Application Gateway.
func (o ApplicationGatewaySslCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Password for the pfx file specified in data. Only applicable in PUT request.
func (o ApplicationGatewaySslCertificateResponseOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// Provisioning state of the SSL certificate resource Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewaySslCertificateResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Base-64 encoded Public cert data corresponding to pfx specified in data. Only applicable in GET request.
func (o ApplicationGatewaySslCertificateResponseOutput) PublicCertData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.PublicCertData }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewaySslCertificateResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslCertificateResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewaySslCertificateResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslCertificateResponseArrayOutput) ToApplicationGatewaySslCertificateResponseArrayOutput() ApplicationGatewaySslCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateResponseArrayOutput) ToApplicationGatewaySslCertificateResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewaySslCertificateResponseArrayOutput {
	return o
}

func (o ApplicationGatewaySslCertificateResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewaySslCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewaySslCertificateResponse {
		return vs[0].([]ApplicationGatewaySslCertificateResponse)[vs[1].(int)]
	}).(ApplicationGatewaySslCertificateResponseOutput)
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicy struct {
	// Ssl cipher suites to be enabled in the specified order to application gateway.
	CipherSuites []string `pulumi:"cipherSuites"`
	// Ssl protocols to be disabled on application gateway.
	DisabledSslProtocols []string `pulumi:"disabledSslProtocols"`
	// Minimum version of Ssl protocol to be supported on application gateway.
	MinProtocolVersion *string `pulumi:"minProtocolVersion"`
	// Name of Ssl predefined policy
	PolicyName *string `pulumi:"policyName"`
	// Type of Ssl Policy
	PolicyType *string `pulumi:"policyType"`
}

// ApplicationGatewaySslPolicyInput is an input type that accepts ApplicationGatewaySslPolicyArgs and ApplicationGatewaySslPolicyOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslPolicyInput` via:
//
//          ApplicationGatewaySslPolicyArgs{...}
type ApplicationGatewaySslPolicyInput interface {
	pulumi.Input

	ToApplicationGatewaySslPolicyOutput() ApplicationGatewaySslPolicyOutput
	ToApplicationGatewaySslPolicyOutputWithContext(context.Context) ApplicationGatewaySslPolicyOutput
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicyArgs struct {
	// Ssl cipher suites to be enabled in the specified order to application gateway.
	CipherSuites pulumi.StringArrayInput `pulumi:"cipherSuites"`
	// Ssl protocols to be disabled on application gateway.
	DisabledSslProtocols pulumi.StringArrayInput `pulumi:"disabledSslProtocols"`
	// Minimum version of Ssl protocol to be supported on application gateway.
	MinProtocolVersion pulumi.StringPtrInput `pulumi:"minProtocolVersion"`
	// Name of Ssl predefined policy
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Type of Ssl Policy
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
}

func (ApplicationGatewaySslPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyOutput() ApplicationGatewaySslPolicyOutput {
	return i.ToApplicationGatewaySslPolicyOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyOutput)
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return i.ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslPolicyArgs) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyOutput).ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx)
}

// ApplicationGatewaySslPolicyPtrInput is an input type that accepts ApplicationGatewaySslPolicyArgs, ApplicationGatewaySslPolicyPtr and ApplicationGatewaySslPolicyPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslPolicyPtrInput` via:
//
//          ApplicationGatewaySslPolicyArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewaySslPolicyPtrInput interface {
	pulumi.Input

	ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput
	ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Context) ApplicationGatewaySslPolicyPtrOutput
}

type applicationGatewaySslPolicyPtrType ApplicationGatewaySslPolicyArgs

func ApplicationGatewaySslPolicyPtr(v *ApplicationGatewaySslPolicyArgs) ApplicationGatewaySslPolicyPtrInput {
	return (*applicationGatewaySslPolicyPtrType)(v)
}

func (*applicationGatewaySslPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (i *applicationGatewaySslPolicyPtrType) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return i.ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySslPolicyPtrType) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyPtrOutput)
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicyOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyOutput() ApplicationGatewaySslPolicyOutput {
	return o
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyOutput {
	return o
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return o.ToApplicationGatewaySslPolicyPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySslPolicyOutput) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) *ApplicationGatewaySslPolicy {
		return &v
	}).(ApplicationGatewaySslPolicyPtrOutput)
}

// Ssl cipher suites to be enabled in the specified order to application gateway.
func (o ApplicationGatewaySslPolicyOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) []string { return v.CipherSuites }).(pulumi.StringArrayOutput)
}

// Ssl protocols to be disabled on application gateway.
func (o ApplicationGatewaySslPolicyOutput) DisabledSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) []string { return v.DisabledSslProtocols }).(pulumi.StringArrayOutput)
}

// Minimum version of Ssl protocol to be supported on application gateway.
func (o ApplicationGatewaySslPolicyOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) *string { return v.MinProtocolVersion }).(pulumi.StringPtrOutput)
}

// Name of Ssl predefined policy
func (o ApplicationGatewaySslPolicyOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Type of Ssl Policy
func (o ApplicationGatewaySslPolicyOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicy) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslPolicyPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslPolicy)(nil)).Elem()
}

func (o ApplicationGatewaySslPolicyPtrOutput) ToApplicationGatewaySslPolicyPtrOutput() ApplicationGatewaySslPolicyPtrOutput {
	return o
}

func (o ApplicationGatewaySslPolicyPtrOutput) ToApplicationGatewaySslPolicyPtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyPtrOutput {
	return o
}

func (o ApplicationGatewaySslPolicyPtrOutput) Elem() ApplicationGatewaySslPolicyOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) ApplicationGatewaySslPolicy { return *v }).(ApplicationGatewaySslPolicyOutput)
}

// Ssl cipher suites to be enabled in the specified order to application gateway.
func (o ApplicationGatewaySslPolicyPtrOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) []string {
		if v == nil {
			return nil
		}
		return v.CipherSuites
	}).(pulumi.StringArrayOutput)
}

// Ssl protocols to be disabled on application gateway.
func (o ApplicationGatewaySslPolicyPtrOutput) DisabledSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) []string {
		if v == nil {
			return nil
		}
		return v.DisabledSslProtocols
	}).(pulumi.StringArrayOutput)
}

// Minimum version of Ssl protocol to be supported on application gateway.
func (o ApplicationGatewaySslPolicyPtrOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) *string {
		if v == nil {
			return nil
		}
		return v.MinProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// Name of Ssl predefined policy
func (o ApplicationGatewaySslPolicyPtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Type of Ssl Policy
func (o ApplicationGatewaySslPolicyPtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicy) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicyResponse struct {
	// Ssl cipher suites to be enabled in the specified order to application gateway.
	CipherSuites []string `pulumi:"cipherSuites"`
	// Ssl protocols to be disabled on application gateway.
	DisabledSslProtocols []string `pulumi:"disabledSslProtocols"`
	// Minimum version of Ssl protocol to be supported on application gateway.
	MinProtocolVersion *string `pulumi:"minProtocolVersion"`
	// Name of Ssl predefined policy
	PolicyName *string `pulumi:"policyName"`
	// Type of Ssl Policy
	PolicyType *string `pulumi:"policyType"`
}

// ApplicationGatewaySslPolicyResponseInput is an input type that accepts ApplicationGatewaySslPolicyResponseArgs and ApplicationGatewaySslPolicyResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslPolicyResponseInput` via:
//
//          ApplicationGatewaySslPolicyResponseArgs{...}
type ApplicationGatewaySslPolicyResponseInput interface {
	pulumi.Input

	ToApplicationGatewaySslPolicyResponseOutput() ApplicationGatewaySslPolicyResponseOutput
	ToApplicationGatewaySslPolicyResponseOutputWithContext(context.Context) ApplicationGatewaySslPolicyResponseOutput
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicyResponseArgs struct {
	// Ssl cipher suites to be enabled in the specified order to application gateway.
	CipherSuites pulumi.StringArrayInput `pulumi:"cipherSuites"`
	// Ssl protocols to be disabled on application gateway.
	DisabledSslProtocols pulumi.StringArrayInput `pulumi:"disabledSslProtocols"`
	// Minimum version of Ssl protocol to be supported on application gateway.
	MinProtocolVersion pulumi.StringPtrInput `pulumi:"minProtocolVersion"`
	// Name of Ssl predefined policy
	PolicyName pulumi.StringPtrInput `pulumi:"policyName"`
	// Type of Ssl Policy
	PolicyType pulumi.StringPtrInput `pulumi:"policyType"`
}

func (ApplicationGatewaySslPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslPolicyResponse)(nil)).Elem()
}

func (i ApplicationGatewaySslPolicyResponseArgs) ToApplicationGatewaySslPolicyResponseOutput() ApplicationGatewaySslPolicyResponseOutput {
	return i.ToApplicationGatewaySslPolicyResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslPolicyResponseArgs) ToApplicationGatewaySslPolicyResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyResponseOutput)
}

func (i ApplicationGatewaySslPolicyResponseArgs) ToApplicationGatewaySslPolicyResponsePtrOutput() ApplicationGatewaySslPolicyResponsePtrOutput {
	return i.ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewaySslPolicyResponseArgs) ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyResponseOutput).ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewaySslPolicyResponsePtrInput is an input type that accepts ApplicationGatewaySslPolicyResponseArgs, ApplicationGatewaySslPolicyResponsePtr and ApplicationGatewaySslPolicyResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewaySslPolicyResponsePtrInput` via:
//
//          ApplicationGatewaySslPolicyResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewaySslPolicyResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewaySslPolicyResponsePtrOutput() ApplicationGatewaySslPolicyResponsePtrOutput
	ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(context.Context) ApplicationGatewaySslPolicyResponsePtrOutput
}

type applicationGatewaySslPolicyResponsePtrType ApplicationGatewaySslPolicyResponseArgs

func ApplicationGatewaySslPolicyResponsePtr(v *ApplicationGatewaySslPolicyResponseArgs) ApplicationGatewaySslPolicyResponsePtrInput {
	return (*applicationGatewaySslPolicyResponsePtrType)(v)
}

func (*applicationGatewaySslPolicyResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslPolicyResponse)(nil)).Elem()
}

func (i *applicationGatewaySslPolicyResponsePtrType) ToApplicationGatewaySslPolicyResponsePtrOutput() ApplicationGatewaySslPolicyResponsePtrOutput {
	return i.ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewaySslPolicyResponsePtrType) ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewaySslPolicyResponsePtrOutput)
}

// Application Gateway Ssl policy.
type ApplicationGatewaySslPolicyResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewaySslPolicyResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslPolicyResponseOutput) ToApplicationGatewaySslPolicyResponseOutput() ApplicationGatewaySslPolicyResponseOutput {
	return o
}

func (o ApplicationGatewaySslPolicyResponseOutput) ToApplicationGatewaySslPolicyResponseOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponseOutput {
	return o
}

func (o ApplicationGatewaySslPolicyResponseOutput) ToApplicationGatewaySslPolicyResponsePtrOutput() ApplicationGatewaySslPolicyResponsePtrOutput {
	return o.ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewaySslPolicyResponseOutput) ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) *ApplicationGatewaySslPolicyResponse {
		return &v
	}).(ApplicationGatewaySslPolicyResponsePtrOutput)
}

// Ssl cipher suites to be enabled in the specified order to application gateway.
func (o ApplicationGatewaySslPolicyResponseOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) []string { return v.CipherSuites }).(pulumi.StringArrayOutput)
}

// Ssl protocols to be disabled on application gateway.
func (o ApplicationGatewaySslPolicyResponseOutput) DisabledSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) []string { return v.DisabledSslProtocols }).(pulumi.StringArrayOutput)
}

// Minimum version of Ssl protocol to be supported on application gateway.
func (o ApplicationGatewaySslPolicyResponseOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) *string { return v.MinProtocolVersion }).(pulumi.StringPtrOutput)
}

// Name of Ssl predefined policy
func (o ApplicationGatewaySslPolicyResponseOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

// Type of Ssl Policy
func (o ApplicationGatewaySslPolicyResponseOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewaySslPolicyResponse) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

type ApplicationGatewaySslPolicyResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewaySslPolicyResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewaySslPolicyResponse)(nil)).Elem()
}

func (o ApplicationGatewaySslPolicyResponsePtrOutput) ToApplicationGatewaySslPolicyResponsePtrOutput() ApplicationGatewaySslPolicyResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySslPolicyResponsePtrOutput) ToApplicationGatewaySslPolicyResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewaySslPolicyResponsePtrOutput {
	return o
}

func (o ApplicationGatewaySslPolicyResponsePtrOutput) Elem() ApplicationGatewaySslPolicyResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) ApplicationGatewaySslPolicyResponse { return *v }).(ApplicationGatewaySslPolicyResponseOutput)
}

// Ssl cipher suites to be enabled in the specified order to application gateway.
func (o ApplicationGatewaySslPolicyResponsePtrOutput) CipherSuites() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) []string {
		if v == nil {
			return nil
		}
		return v.CipherSuites
	}).(pulumi.StringArrayOutput)
}

// Ssl protocols to be disabled on application gateway.
func (o ApplicationGatewaySslPolicyResponsePtrOutput) DisabledSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) []string {
		if v == nil {
			return nil
		}
		return v.DisabledSslProtocols
	}).(pulumi.StringArrayOutput)
}

// Minimum version of Ssl protocol to be supported on application gateway.
func (o ApplicationGatewaySslPolicyResponsePtrOutput) MinProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.MinProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// Name of Ssl predefined policy
func (o ApplicationGatewaySslPolicyResponsePtrOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyName
	}).(pulumi.StringPtrOutput)
}

// Type of Ssl Policy
func (o ApplicationGatewaySslPolicyResponsePtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewaySslPolicyResponse) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMap struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool *SubResource `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings *SubResource `pulumi:"defaultBackendHttpSettings"`
	// Default redirect configuration resource of URL path map.
	DefaultRedirectConfiguration *SubResource `pulumi:"defaultRedirectConfiguration"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the URL path map that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path rule of URL path map resource.
	PathRules []ApplicationGatewayPathRule `pulumi:"pathRules"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayUrlPathMapInput is an input type that accepts ApplicationGatewayUrlPathMap and ApplicationGatewayUrlPathMapOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapInput` via:
//
//          ApplicationGatewayUrlPathMap{ "key": ApplicationGatewayUrlPathArgs{...} }
type ApplicationGatewayUrlPathMapInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapOutput() ApplicationGatewayUrlPathMapOutput
	ToApplicationGatewayUrlPathMapOutputWithContext(context.Context) ApplicationGatewayUrlPathMapOutput
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapArgs struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool SubResourcePtrInput `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings SubResourcePtrInput `pulumi:"defaultBackendHttpSettings"`
	// Default redirect configuration resource of URL path map.
	DefaultRedirectConfiguration SubResourcePtrInput `pulumi:"defaultRedirectConfiguration"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the URL path map that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rule of URL path map resource.
	PathRules ApplicationGatewayPathRuleArrayInput `pulumi:"pathRules"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayUrlPathMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapArgs) ToApplicationGatewayUrlPathMapOutput() ApplicationGatewayUrlPathMapOutput {
	return i.ToApplicationGatewayUrlPathMapOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapArgs) ToApplicationGatewayUrlPathMapOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapOutput)
}

// ApplicationGatewayUrlPathMapArrayInput is an input type that accepts ApplicationGatewayUrlPathMapArray and ApplicationGatewayUrlPathMapArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapArrayInput` via:
//
//          ApplicationGatewayUrlPathMapArray{ ApplicationGatewayUrlPathMapArgs{...} }
type ApplicationGatewayUrlPathMapArrayInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapArrayOutput() ApplicationGatewayUrlPathMapArrayOutput
	ToApplicationGatewayUrlPathMapArrayOutputWithContext(context.Context) ApplicationGatewayUrlPathMapArrayOutput
}

type ApplicationGatewayUrlPathMapArray []ApplicationGatewayUrlPathMapInput

func (ApplicationGatewayUrlPathMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapArray) ToApplicationGatewayUrlPathMapArrayOutput() ApplicationGatewayUrlPathMapArrayOutput {
	return i.ToApplicationGatewayUrlPathMapArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapArray) ToApplicationGatewayUrlPathMapArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapArrayOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapOutput) ToApplicationGatewayUrlPathMapOutput() ApplicationGatewayUrlPathMapOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapOutput) ToApplicationGatewayUrlPathMapOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapOutput {
	return o
}

// Default backend address pool resource of URL path map.
func (o ApplicationGatewayUrlPathMapOutput) DefaultBackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *SubResource { return v.DefaultBackendAddressPool }).(SubResourcePtrOutput)
}

// Default backend http settings resource of URL path map.
func (o ApplicationGatewayUrlPathMapOutput) DefaultBackendHttpSettings() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *SubResource { return v.DefaultBackendHttpSettings }).(SubResourcePtrOutput)
}

// Default redirect configuration resource of URL path map.
func (o ApplicationGatewayUrlPathMapOutput) DefaultRedirectConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *SubResource { return v.DefaultRedirectConfiguration }).(SubResourcePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayUrlPathMapOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayUrlPathMapOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the URL path map that is unique within an Application Gateway.
func (o ApplicationGatewayUrlPathMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rule of URL path map resource.
func (o ApplicationGatewayUrlPathMapOutput) PathRules() ApplicationGatewayPathRuleArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) []ApplicationGatewayPathRule { return v.PathRules }).(ApplicationGatewayPathRuleArrayOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayUrlPathMapOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayUrlPathMapOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMap) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayUrlPathMapArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMap)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapArrayOutput) ToApplicationGatewayUrlPathMapArrayOutput() ApplicationGatewayUrlPathMapArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapArrayOutput) ToApplicationGatewayUrlPathMapArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayUrlPathMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayUrlPathMap {
		return vs[0].([]ApplicationGatewayUrlPathMap)[vs[1].(int)]
	}).(ApplicationGatewayUrlPathMapOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapResponse struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool *SubResourceResponse `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings *SubResourceResponse `pulumi:"defaultBackendHttpSettings"`
	// Default redirect configuration resource of URL path map.
	DefaultRedirectConfiguration *SubResourceResponse `pulumi:"defaultRedirectConfiguration"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Name of the URL path map that is unique within an Application Gateway.
	Name *string `pulumi:"name"`
	// Path rule of URL path map resource.
	PathRules []ApplicationGatewayPathRuleResponse `pulumi:"pathRules"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Type of the resource.
	Type *string `pulumi:"type"`
}

// ApplicationGatewayUrlPathMapResponseInput is an input type that accepts ApplicationGatewayUrlPathMapResponseArgs and ApplicationGatewayUrlPathMapResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapResponseInput` via:
//
//          ApplicationGatewayUrlPathMapResponseArgs{...}
type ApplicationGatewayUrlPathMapResponseInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapResponseOutput() ApplicationGatewayUrlPathMapResponseOutput
	ToApplicationGatewayUrlPathMapResponseOutputWithContext(context.Context) ApplicationGatewayUrlPathMapResponseOutput
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapResponseArgs struct {
	// Default backend address pool resource of URL path map.
	DefaultBackendAddressPool SubResourceResponsePtrInput `pulumi:"defaultBackendAddressPool"`
	// Default backend http settings resource of URL path map.
	DefaultBackendHttpSettings SubResourceResponsePtrInput `pulumi:"defaultBackendHttpSettings"`
	// Default redirect configuration resource of URL path map.
	DefaultRedirectConfiguration SubResourceResponsePtrInput `pulumi:"defaultRedirectConfiguration"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the URL path map that is unique within an Application Gateway.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Path rule of URL path map resource.
	PathRules ApplicationGatewayPathRuleResponseArrayInput `pulumi:"pathRules"`
	// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Type of the resource.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationGatewayUrlPathMapResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMapResponse)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapResponseArgs) ToApplicationGatewayUrlPathMapResponseOutput() ApplicationGatewayUrlPathMapResponseOutput {
	return i.ToApplicationGatewayUrlPathMapResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapResponseArgs) ToApplicationGatewayUrlPathMapResponseOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapResponseOutput)
}

// ApplicationGatewayUrlPathMapResponseArrayInput is an input type that accepts ApplicationGatewayUrlPathMapResponseArray and ApplicationGatewayUrlPathMapResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationGatewayUrlPathMapResponseArrayInput` via:
//
//          ApplicationGatewayUrlPathMapResponseArray{ ApplicationGatewayUrlPathMapResponseArgs{...} }
type ApplicationGatewayUrlPathMapResponseArrayInput interface {
	pulumi.Input

	ToApplicationGatewayUrlPathMapResponseArrayOutput() ApplicationGatewayUrlPathMapResponseArrayOutput
	ToApplicationGatewayUrlPathMapResponseArrayOutputWithContext(context.Context) ApplicationGatewayUrlPathMapResponseArrayOutput
}

type ApplicationGatewayUrlPathMapResponseArray []ApplicationGatewayUrlPathMapResponseInput

func (ApplicationGatewayUrlPathMapResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMapResponse)(nil)).Elem()
}

func (i ApplicationGatewayUrlPathMapResponseArray) ToApplicationGatewayUrlPathMapResponseArrayOutput() ApplicationGatewayUrlPathMapResponseArrayOutput {
	return i.ToApplicationGatewayUrlPathMapResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationGatewayUrlPathMapResponseArray) ToApplicationGatewayUrlPathMapResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayUrlPathMapResponseArrayOutput)
}

// UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.
type ApplicationGatewayUrlPathMapResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayUrlPathMapResponse)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapResponseOutput) ToApplicationGatewayUrlPathMapResponseOutput() ApplicationGatewayUrlPathMapResponseOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapResponseOutput) ToApplicationGatewayUrlPathMapResponseOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapResponseOutput {
	return o
}

// Default backend address pool resource of URL path map.
func (o ApplicationGatewayUrlPathMapResponseOutput) DefaultBackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *SubResourceResponse { return v.DefaultBackendAddressPool }).(SubResourceResponsePtrOutput)
}

// Default backend http settings resource of URL path map.
func (o ApplicationGatewayUrlPathMapResponseOutput) DefaultBackendHttpSettings() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *SubResourceResponse { return v.DefaultBackendHttpSettings }).(SubResourceResponsePtrOutput)
}

// Default redirect configuration resource of URL path map.
func (o ApplicationGatewayUrlPathMapResponseOutput) DefaultRedirectConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *SubResourceResponse {
		return v.DefaultRedirectConfiguration
	}).(SubResourceResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationGatewayUrlPathMapResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ApplicationGatewayUrlPathMapResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Name of the URL path map that is unique within an Application Gateway.
func (o ApplicationGatewayUrlPathMapResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Path rule of URL path map resource.
func (o ApplicationGatewayUrlPathMapResponseOutput) PathRules() ApplicationGatewayPathRuleResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) []ApplicationGatewayPathRuleResponse { return v.PathRules }).(ApplicationGatewayPathRuleResponseArrayOutput)
}

// Provisioning state of the backend http settings resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationGatewayUrlPathMapResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Type of the resource.
func (o ApplicationGatewayUrlPathMapResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayUrlPathMapResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationGatewayUrlPathMapResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayUrlPathMapResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationGatewayUrlPathMapResponse)(nil)).Elem()
}

func (o ApplicationGatewayUrlPathMapResponseArrayOutput) ToApplicationGatewayUrlPathMapResponseArrayOutput() ApplicationGatewayUrlPathMapResponseArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapResponseArrayOutput) ToApplicationGatewayUrlPathMapResponseArrayOutputWithContext(ctx context.Context) ApplicationGatewayUrlPathMapResponseArrayOutput {
	return o
}

func (o ApplicationGatewayUrlPathMapResponseArrayOutput) Index(i pulumi.IntInput) ApplicationGatewayUrlPathMapResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationGatewayUrlPathMapResponse {
		return vs[0].([]ApplicationGatewayUrlPathMapResponse)[vs[1].(int)]
	}).(ApplicationGatewayUrlPathMapResponseOutput)
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfiguration struct {
	// The disabled rule groups.
	DisabledRuleGroups []ApplicationGatewayFirewallDisabledRuleGroup `pulumi:"disabledRuleGroups"`
	// Whether the web application firewall is enabled or not.
	Enabled bool `pulumi:"enabled"`
	// Web application firewall mode.
	FirewallMode string `pulumi:"firewallMode"`
	// Maximum request body size for WAF.
	MaxRequestBodySize *int `pulumi:"maxRequestBodySize"`
	// Whether allow WAF to check request Body.
	RequestBodyCheck *bool `pulumi:"requestBodyCheck"`
	// The type of the web application firewall rule set. Possible values are: 'OWASP'.
	RuleSetType string `pulumi:"ruleSetType"`
	// The version of the rule set type.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// ApplicationGatewayWebApplicationFirewallConfigurationInput is an input type that accepts ApplicationGatewayWebApplicationFirewallConfigurationArgs and ApplicationGatewayWebApplicationFirewallConfigurationOutput values.
// You can construct a concrete instance of `ApplicationGatewayWebApplicationFirewallConfigurationInput` via:
//
//          ApplicationGatewayWebApplicationFirewallConfigurationArgs{...}
type ApplicationGatewayWebApplicationFirewallConfigurationInput interface {
	pulumi.Input

	ToApplicationGatewayWebApplicationFirewallConfigurationOutput() ApplicationGatewayWebApplicationFirewallConfigurationOutput
	ToApplicationGatewayWebApplicationFirewallConfigurationOutputWithContext(context.Context) ApplicationGatewayWebApplicationFirewallConfigurationOutput
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfigurationArgs struct {
	// The disabled rule groups.
	DisabledRuleGroups ApplicationGatewayFirewallDisabledRuleGroupArrayInput `pulumi:"disabledRuleGroups"`
	// Whether the web application firewall is enabled or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Web application firewall mode.
	FirewallMode pulumi.StringInput `pulumi:"firewallMode"`
	// Maximum request body size for WAF.
	MaxRequestBodySize pulumi.IntPtrInput `pulumi:"maxRequestBodySize"`
	// Whether allow WAF to check request Body.
	RequestBodyCheck pulumi.BoolPtrInput `pulumi:"requestBodyCheck"`
	// The type of the web application firewall rule set. Possible values are: 'OWASP'.
	RuleSetType pulumi.StringInput `pulumi:"ruleSetType"`
	// The version of the rule set type.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (ApplicationGatewayWebApplicationFirewallConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWebApplicationFirewallConfiguration)(nil)).Elem()
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationArgs) ToApplicationGatewayWebApplicationFirewallConfigurationOutput() ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationOutputWithContext(context.Background())
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationArgs) ToApplicationGatewayWebApplicationFirewallConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationOutput)
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationArgs) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationArgs) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationOutput).ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx)
}

// ApplicationGatewayWebApplicationFirewallConfigurationPtrInput is an input type that accepts ApplicationGatewayWebApplicationFirewallConfigurationArgs, ApplicationGatewayWebApplicationFirewallConfigurationPtr and ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayWebApplicationFirewallConfigurationPtrInput` via:
//
//          ApplicationGatewayWebApplicationFirewallConfigurationArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayWebApplicationFirewallConfigurationPtrInput interface {
	pulumi.Input

	ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput
	ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput
}

type applicationGatewayWebApplicationFirewallConfigurationPtrType ApplicationGatewayWebApplicationFirewallConfigurationArgs

func ApplicationGatewayWebApplicationFirewallConfigurationPtr(v *ApplicationGatewayWebApplicationFirewallConfigurationArgs) ApplicationGatewayWebApplicationFirewallConfigurationPtrInput {
	return (*applicationGatewayWebApplicationFirewallConfigurationPtrType)(v)
}

func (*applicationGatewayWebApplicationFirewallConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayWebApplicationFirewallConfiguration)(nil)).Elem()
}

func (i *applicationGatewayWebApplicationFirewallConfigurationPtrType) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(context.Background())
}

func (i *applicationGatewayWebApplicationFirewallConfigurationPtrType) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput)
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfigurationOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWebApplicationFirewallConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWebApplicationFirewallConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) ToApplicationGatewayWebApplicationFirewallConfigurationOutput() ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) ToApplicationGatewayWebApplicationFirewallConfigurationOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return o.ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) *ApplicationGatewayWebApplicationFirewallConfiguration {
		return &v
	}).(ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput)
}

// The disabled rule groups.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) DisabledRuleGroups() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) []ApplicationGatewayFirewallDisabledRuleGroup {
		return v.DisabledRuleGroups
	}).(ApplicationGatewayFirewallDisabledRuleGroupArrayOutput)
}

// Whether the web application firewall is enabled or not.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Web application firewall mode.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) FirewallMode() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) string { return v.FirewallMode }).(pulumi.StringOutput)
}

// Maximum request body size for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) MaxRequestBodySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) *int { return v.MaxRequestBodySize }).(pulumi.IntPtrOutput)
}

// Whether allow WAF to check request Body.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) *bool { return v.RequestBodyCheck }).(pulumi.BoolPtrOutput)
}

// The type of the web application firewall rule set. Possible values are: 'OWASP'.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// The version of the rule set type.
func (o ApplicationGatewayWebApplicationFirewallConfigurationOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfiguration) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayWebApplicationFirewallConfiguration)(nil)).Elem()
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) ToApplicationGatewayWebApplicationFirewallConfigurationPtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) Elem() ApplicationGatewayWebApplicationFirewallConfigurationOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) ApplicationGatewayWebApplicationFirewallConfiguration {
		return *v
	}).(ApplicationGatewayWebApplicationFirewallConfigurationOutput)
}

// The disabled rule groups.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) DisabledRuleGroups() ApplicationGatewayFirewallDisabledRuleGroupArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) []ApplicationGatewayFirewallDisabledRuleGroup {
		if v == nil {
			return nil
		}
		return v.DisabledRuleGroups
	}).(ApplicationGatewayFirewallDisabledRuleGroupArrayOutput)
}

// Whether the web application firewall is enabled or not.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Web application firewall mode.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) FirewallMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.FirewallMode
	}).(pulumi.StringPtrOutput)
}

// Maximum request body size for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) MaxRequestBodySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySize
	}).(pulumi.IntPtrOutput)
}

// Whether allow WAF to check request Body.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.RequestBodyCheck
	}).(pulumi.BoolPtrOutput)
}

// The type of the web application firewall rule set. Possible values are: 'OWASP'.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) RuleSetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RuleSetType
	}).(pulumi.StringPtrOutput)
}

// The version of the rule set type.
func (o ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput) RuleSetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RuleSetVersion
	}).(pulumi.StringPtrOutput)
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfigurationResponse struct {
	// The disabled rule groups.
	DisabledRuleGroups []ApplicationGatewayFirewallDisabledRuleGroupResponse `pulumi:"disabledRuleGroups"`
	// Whether the web application firewall is enabled or not.
	Enabled bool `pulumi:"enabled"`
	// Web application firewall mode.
	FirewallMode string `pulumi:"firewallMode"`
	// Maximum request body size for WAF.
	MaxRequestBodySize *int `pulumi:"maxRequestBodySize"`
	// Whether allow WAF to check request Body.
	RequestBodyCheck *bool `pulumi:"requestBodyCheck"`
	// The type of the web application firewall rule set. Possible values are: 'OWASP'.
	RuleSetType string `pulumi:"ruleSetType"`
	// The version of the rule set type.
	RuleSetVersion string `pulumi:"ruleSetVersion"`
}

// ApplicationGatewayWebApplicationFirewallConfigurationResponseInput is an input type that accepts ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs and ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput values.
// You can construct a concrete instance of `ApplicationGatewayWebApplicationFirewallConfigurationResponseInput` via:
//
//          ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs{...}
type ApplicationGatewayWebApplicationFirewallConfigurationResponseInput interface {
	pulumi.Input

	ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput
	ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutputWithContext(context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs struct {
	// The disabled rule groups.
	DisabledRuleGroups ApplicationGatewayFirewallDisabledRuleGroupResponseArrayInput `pulumi:"disabledRuleGroups"`
	// Whether the web application firewall is enabled or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Web application firewall mode.
	FirewallMode pulumi.StringInput `pulumi:"firewallMode"`
	// Maximum request body size for WAF.
	MaxRequestBodySize pulumi.IntPtrInput `pulumi:"maxRequestBodySize"`
	// Whether allow WAF to check request Body.
	RequestBodyCheck pulumi.BoolPtrInput `pulumi:"requestBodyCheck"`
	// The type of the web application firewall rule set. Possible values are: 'OWASP'.
	RuleSetType pulumi.StringInput `pulumi:"ruleSetType"`
	// The version of the rule set type.
	RuleSetVersion pulumi.StringInput `pulumi:"ruleSetVersion"`
}

func (ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWebApplicationFirewallConfigurationResponse)(nil)).Elem()
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs) ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutputWithContext(context.Background())
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs) ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput)
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput).ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(ctx)
}

// ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrInput is an input type that accepts ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs, ApplicationGatewayWebApplicationFirewallConfigurationResponsePtr and ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrInput` via:
//
//          ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrInput interface {
	pulumi.Input

	ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput
	ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput
}

type applicationGatewayWebApplicationFirewallConfigurationResponsePtrType ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs

func ApplicationGatewayWebApplicationFirewallConfigurationResponsePtr(v *ApplicationGatewayWebApplicationFirewallConfigurationResponseArgs) ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrInput {
	return (*applicationGatewayWebApplicationFirewallConfigurationResponsePtrType)(v)
}

func (*applicationGatewayWebApplicationFirewallConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayWebApplicationFirewallConfigurationResponse)(nil)).Elem()
}

func (i *applicationGatewayWebApplicationFirewallConfigurationResponsePtrType) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return i.ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *applicationGatewayWebApplicationFirewallConfigurationResponsePtrType) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput)
}

// Application gateway web application firewall configuration.
type ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationGatewayWebApplicationFirewallConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponseOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return o.ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) *ApplicationGatewayWebApplicationFirewallConfigurationResponse {
		return &v
	}).(ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput)
}

// The disabled rule groups.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) DisabledRuleGroups() ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) []ApplicationGatewayFirewallDisabledRuleGroupResponse {
		return v.DisabledRuleGroups
	}).(ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput)
}

// Whether the web application firewall is enabled or not.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Web application firewall mode.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) FirewallMode() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) string { return v.FirewallMode }).(pulumi.StringOutput)
}

// Maximum request body size for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) MaxRequestBodySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		return v.MaxRequestBodySize
	}).(pulumi.IntPtrOutput)
}

// Whether allow WAF to check request Body.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) *bool { return v.RequestBodyCheck }).(pulumi.BoolPtrOutput)
}

// The type of the web application firewall rule set. Possible values are: 'OWASP'.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) RuleSetType() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) string { return v.RuleSetType }).(pulumi.StringOutput)
}

// The version of the rule set type.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput) RuleSetVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationGatewayWebApplicationFirewallConfigurationResponse) string { return v.RuleSetVersion }).(pulumi.StringOutput)
}

type ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationGatewayWebApplicationFirewallConfigurationResponse)(nil)).Elem()
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput() ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) ToApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutputWithContext(ctx context.Context) ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput {
	return o
}

func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) Elem() ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) ApplicationGatewayWebApplicationFirewallConfigurationResponse {
		return *v
	}).(ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput)
}

// The disabled rule groups.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) DisabledRuleGroups() ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) []ApplicationGatewayFirewallDisabledRuleGroupResponse {
		if v == nil {
			return nil
		}
		return v.DisabledRuleGroups
	}).(ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput)
}

// Whether the web application firewall is enabled or not.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Web application firewall mode.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) FirewallMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.FirewallMode
	}).(pulumi.StringPtrOutput)
}

// Maximum request body size for WAF.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) MaxRequestBodySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestBodySize
	}).(pulumi.IntPtrOutput)
}

// Whether allow WAF to check request Body.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) RequestBodyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.RequestBodyCheck
	}).(pulumi.BoolPtrOutput)
}

// The type of the web application firewall rule set. Possible values are: 'OWASP'.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) RuleSetType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RuleSetType
	}).(pulumi.StringPtrOutput)
}

// The version of the rule set type.
func (o ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput) RuleSetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationGatewayWebApplicationFirewallConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return &v.RuleSetVersion
	}).(pulumi.StringPtrOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroupType struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// ApplicationSecurityGroupTypeInput is an input type that accepts ApplicationSecurityGroupTypeArgs and ApplicationSecurityGroupTypeOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupTypeInput` via:
//
//          ApplicationSecurityGroupTypeArgs{...}
type ApplicationSecurityGroupTypeInput interface {
	pulumi.Input

	ToApplicationSecurityGroupTypeOutput() ApplicationSecurityGroupTypeOutput
	ToApplicationSecurityGroupTypeOutputWithContext(context.Context) ApplicationSecurityGroupTypeOutput
}

// An application security group in a resource group.
type ApplicationSecurityGroupTypeArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (ApplicationSecurityGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupType)(nil)).Elem()
}

func (i ApplicationSecurityGroupTypeArgs) ToApplicationSecurityGroupTypeOutput() ApplicationSecurityGroupTypeOutput {
	return i.ToApplicationSecurityGroupTypeOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupTypeArgs) ToApplicationSecurityGroupTypeOutputWithContext(ctx context.Context) ApplicationSecurityGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupTypeOutput)
}

// ApplicationSecurityGroupTypeArrayInput is an input type that accepts ApplicationSecurityGroupTypeArray and ApplicationSecurityGroupTypeArrayOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupTypeArrayInput` via:
//
//          ApplicationSecurityGroupTypeArray{ ApplicationSecurityGroupTypeArgs{...} }
type ApplicationSecurityGroupTypeArrayInput interface {
	pulumi.Input

	ToApplicationSecurityGroupTypeArrayOutput() ApplicationSecurityGroupTypeArrayOutput
	ToApplicationSecurityGroupTypeArrayOutputWithContext(context.Context) ApplicationSecurityGroupTypeArrayOutput
}

type ApplicationSecurityGroupTypeArray []ApplicationSecurityGroupTypeInput

func (ApplicationSecurityGroupTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroupType)(nil)).Elem()
}

func (i ApplicationSecurityGroupTypeArray) ToApplicationSecurityGroupTypeArrayOutput() ApplicationSecurityGroupTypeArrayOutput {
	return i.ToApplicationSecurityGroupTypeArrayOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupTypeArray) ToApplicationSecurityGroupTypeArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupTypeArrayOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroupTypeOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupType)(nil)).Elem()
}

func (o ApplicationSecurityGroupTypeOutput) ToApplicationSecurityGroupTypeOutput() ApplicationSecurityGroupTypeOutput {
	return o
}

func (o ApplicationSecurityGroupTypeOutput) ToApplicationSecurityGroupTypeOutputWithContext(ctx context.Context) ApplicationSecurityGroupTypeOutput {
	return o
}

// Resource ID.
func (o ApplicationSecurityGroupTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ApplicationSecurityGroupTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o ApplicationSecurityGroupTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type ApplicationSecurityGroupTypeArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroupType)(nil)).Elem()
}

func (o ApplicationSecurityGroupTypeArrayOutput) ToApplicationSecurityGroupTypeArrayOutput() ApplicationSecurityGroupTypeArrayOutput {
	return o
}

func (o ApplicationSecurityGroupTypeArrayOutput) ToApplicationSecurityGroupTypeArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupTypeArrayOutput {
	return o
}

func (o ApplicationSecurityGroupTypeArrayOutput) Index(i pulumi.IntInput) ApplicationSecurityGroupTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSecurityGroupType {
		return vs[0].([]ApplicationSecurityGroupType)[vs[1].(int)]
	}).(ApplicationSecurityGroupTypeOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroupResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
	ResourceGuid string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// ApplicationSecurityGroupResponseInput is an input type that accepts ApplicationSecurityGroupResponseArgs and ApplicationSecurityGroupResponseOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupResponseInput` via:
//
//          ApplicationSecurityGroupResponseArgs{...}
type ApplicationSecurityGroupResponseInput interface {
	pulumi.Input

	ToApplicationSecurityGroupResponseOutput() ApplicationSecurityGroupResponseOutput
	ToApplicationSecurityGroupResponseOutputWithContext(context.Context) ApplicationSecurityGroupResponseOutput
}

// An application security group in a resource group.
type ApplicationSecurityGroupResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
	ResourceGuid pulumi.StringInput `pulumi:"resourceGuid"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationSecurityGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupResponse)(nil)).Elem()
}

func (i ApplicationSecurityGroupResponseArgs) ToApplicationSecurityGroupResponseOutput() ApplicationSecurityGroupResponseOutput {
	return i.ToApplicationSecurityGroupResponseOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupResponseArgs) ToApplicationSecurityGroupResponseOutputWithContext(ctx context.Context) ApplicationSecurityGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupResponseOutput)
}

// ApplicationSecurityGroupResponseArrayInput is an input type that accepts ApplicationSecurityGroupResponseArray and ApplicationSecurityGroupResponseArrayOutput values.
// You can construct a concrete instance of `ApplicationSecurityGroupResponseArrayInput` via:
//
//          ApplicationSecurityGroupResponseArray{ ApplicationSecurityGroupResponseArgs{...} }
type ApplicationSecurityGroupResponseArrayInput interface {
	pulumi.Input

	ToApplicationSecurityGroupResponseArrayOutput() ApplicationSecurityGroupResponseArrayOutput
	ToApplicationSecurityGroupResponseArrayOutputWithContext(context.Context) ApplicationSecurityGroupResponseArrayOutput
}

type ApplicationSecurityGroupResponseArray []ApplicationSecurityGroupResponseInput

func (ApplicationSecurityGroupResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroupResponse)(nil)).Elem()
}

func (i ApplicationSecurityGroupResponseArray) ToApplicationSecurityGroupResponseArrayOutput() ApplicationSecurityGroupResponseArrayOutput {
	return i.ToApplicationSecurityGroupResponseArrayOutputWithContext(context.Background())
}

func (i ApplicationSecurityGroupResponseArray) ToApplicationSecurityGroupResponseArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSecurityGroupResponseArrayOutput)
}

// An application security group in a resource group.
type ApplicationSecurityGroupResponseOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSecurityGroupResponse)(nil)).Elem()
}

func (o ApplicationSecurityGroupResponseOutput) ToApplicationSecurityGroupResponseOutput() ApplicationSecurityGroupResponseOutput {
	return o
}

func (o ApplicationSecurityGroupResponseOutput) ToApplicationSecurityGroupResponseOutputWithContext(ctx context.Context) ApplicationSecurityGroupResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ApplicationSecurityGroupResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ApplicationSecurityGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o ApplicationSecurityGroupResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o ApplicationSecurityGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the application security group resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
func (o ApplicationSecurityGroupResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the application security group resource. It uniquely identifies a resource, even if the user changes its name or migrate the resource across subscriptions or resource groups.
func (o ApplicationSecurityGroupResponseOutput) ResourceGuid() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.ResourceGuid }).(pulumi.StringOutput)
}

// Resource tags.
func (o ApplicationSecurityGroupResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o ApplicationSecurityGroupResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSecurityGroupResponse) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationSecurityGroupResponseArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSecurityGroupResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSecurityGroupResponse)(nil)).Elem()
}

func (o ApplicationSecurityGroupResponseArrayOutput) ToApplicationSecurityGroupResponseArrayOutput() ApplicationSecurityGroupResponseArrayOutput {
	return o
}

func (o ApplicationSecurityGroupResponseArrayOutput) ToApplicationSecurityGroupResponseArrayOutputWithContext(ctx context.Context) ApplicationSecurityGroupResponseArrayOutput {
	return o
}

func (o ApplicationSecurityGroupResponseArrayOutput) Index(i pulumi.IntInput) ApplicationSecurityGroupResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSecurityGroupResponse {
		return vs[0].([]ApplicationSecurityGroupResponse)[vs[1].(int)]
	}).(ApplicationSecurityGroupResponseOutput)
}

// Properties of an application rule.
type AzureFirewallApplicationRule struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// Name of the application rule.
	Name *string `pulumi:"name"`
	// Array of ApplicationRuleProtocols.
	Protocols []AzureFirewallApplicationRuleProtocol `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of URLs for this rule.
	TargetUrls []string `pulumi:"targetUrls"`
}

// AzureFirewallApplicationRuleInput is an input type that accepts AzureFirewallApplicationRuleArgs and AzureFirewallApplicationRuleOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleInput` via:
//
//          AzureFirewallApplicationRuleArgs{...}
type AzureFirewallApplicationRuleInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleOutput() AzureFirewallApplicationRuleOutput
	ToAzureFirewallApplicationRuleOutputWithContext(context.Context) AzureFirewallApplicationRuleOutput
}

// Properties of an application rule.
type AzureFirewallApplicationRuleArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of the application rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of ApplicationRuleProtocols.
	Protocols AzureFirewallApplicationRuleProtocolArrayInput `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of URLs for this rule.
	TargetUrls pulumi.StringArrayInput `pulumi:"targetUrls"`
}

func (AzureFirewallApplicationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRule)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleArgs) ToAzureFirewallApplicationRuleOutput() AzureFirewallApplicationRuleOutput {
	return i.ToAzureFirewallApplicationRuleOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleArgs) ToAzureFirewallApplicationRuleOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleOutput)
}

// AzureFirewallApplicationRuleArrayInput is an input type that accepts AzureFirewallApplicationRuleArray and AzureFirewallApplicationRuleArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleArrayInput` via:
//
//          AzureFirewallApplicationRuleArray{ AzureFirewallApplicationRuleArgs{...} }
type AzureFirewallApplicationRuleArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleArrayOutput() AzureFirewallApplicationRuleArrayOutput
	ToAzureFirewallApplicationRuleArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleArrayOutput
}

type AzureFirewallApplicationRuleArray []AzureFirewallApplicationRuleInput

func (AzureFirewallApplicationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRule)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleArray) ToAzureFirewallApplicationRuleArrayOutput() AzureFirewallApplicationRuleArrayOutput {
	return i.ToAzureFirewallApplicationRuleArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleArray) ToAzureFirewallApplicationRuleArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleArrayOutput)
}

// Properties of an application rule.
type AzureFirewallApplicationRuleOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRule)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleOutput) ToAzureFirewallApplicationRuleOutput() AzureFirewallApplicationRuleOutput {
	return o
}

func (o AzureFirewallApplicationRuleOutput) ToAzureFirewallApplicationRuleOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallApplicationRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of the application rule.
func (o AzureFirewallApplicationRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of ApplicationRuleProtocols.
func (o AzureFirewallApplicationRuleOutput) Protocols() AzureFirewallApplicationRuleProtocolArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) []AzureFirewallApplicationRuleProtocol { return v.Protocols }).(AzureFirewallApplicationRuleProtocolArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallApplicationRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of URLs for this rule.
func (o AzureFirewallApplicationRuleOutput) TargetUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRule) []string { return v.TargetUrls }).(pulumi.StringArrayOutput)
}

type AzureFirewallApplicationRuleArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRule)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleArrayOutput) ToAzureFirewallApplicationRuleArrayOutput() AzureFirewallApplicationRuleArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleArrayOutput) ToAzureFirewallApplicationRuleArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRule {
		return vs[0].([]AzureFirewallApplicationRule)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleOutput)
}

// Application rule collection resource
type AzureFirewallApplicationRuleCollection struct {
	// The action type of a rule collection
	Action *AzureFirewallRCAction `pulumi:"action"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the application rule collection resource.
	Priority *int `pulumi:"priority"`
	// Collection of rules used by a application rule collection.
	Rules []AzureFirewallApplicationRule `pulumi:"rules"`
}

// AzureFirewallApplicationRuleCollectionInput is an input type that accepts AzureFirewallApplicationRuleCollectionArgs and AzureFirewallApplicationRuleCollectionOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleCollectionInput` via:
//
//          AzureFirewallApplicationRuleCollectionArgs{...}
type AzureFirewallApplicationRuleCollectionInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleCollectionOutput() AzureFirewallApplicationRuleCollectionOutput
	ToAzureFirewallApplicationRuleCollectionOutputWithContext(context.Context) AzureFirewallApplicationRuleCollectionOutput
}

// Application rule collection resource
type AzureFirewallApplicationRuleCollectionArgs struct {
	// The action type of a rule collection
	Action AzureFirewallRCActionPtrInput `pulumi:"action"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the application rule collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Collection of rules used by a application rule collection.
	Rules AzureFirewallApplicationRuleArrayInput `pulumi:"rules"`
}

func (AzureFirewallApplicationRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleCollection)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleCollectionArgs) ToAzureFirewallApplicationRuleCollectionOutput() AzureFirewallApplicationRuleCollectionOutput {
	return i.ToAzureFirewallApplicationRuleCollectionOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleCollectionArgs) ToAzureFirewallApplicationRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionOutput)
}

// AzureFirewallApplicationRuleCollectionArrayInput is an input type that accepts AzureFirewallApplicationRuleCollectionArray and AzureFirewallApplicationRuleCollectionArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleCollectionArrayInput` via:
//
//          AzureFirewallApplicationRuleCollectionArray{ AzureFirewallApplicationRuleCollectionArgs{...} }
type AzureFirewallApplicationRuleCollectionArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleCollectionArrayOutput() AzureFirewallApplicationRuleCollectionArrayOutput
	ToAzureFirewallApplicationRuleCollectionArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleCollectionArrayOutput
}

type AzureFirewallApplicationRuleCollectionArray []AzureFirewallApplicationRuleCollectionInput

func (AzureFirewallApplicationRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleCollection)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleCollectionArray) ToAzureFirewallApplicationRuleCollectionArrayOutput() AzureFirewallApplicationRuleCollectionArrayOutput {
	return i.ToAzureFirewallApplicationRuleCollectionArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleCollectionArray) ToAzureFirewallApplicationRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionArrayOutput)
}

// Application rule collection resource
type AzureFirewallApplicationRuleCollectionOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleCollection)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionOutput) ToAzureFirewallApplicationRuleCollectionOutput() AzureFirewallApplicationRuleCollectionOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionOutput) ToAzureFirewallApplicationRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionOutput {
	return o
}

// The action type of a rule collection
func (o AzureFirewallApplicationRuleCollectionOutput) Action() AzureFirewallRCActionPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollection) *AzureFirewallRCAction { return v.Action }).(AzureFirewallRCActionPtrOutput)
}

// Resource ID.
func (o AzureFirewallApplicationRuleCollectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallApplicationRuleCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the application rule collection resource.
func (o AzureFirewallApplicationRuleCollectionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollection) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Collection of rules used by a application rule collection.
func (o AzureFirewallApplicationRuleCollectionOutput) Rules() AzureFirewallApplicationRuleArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollection) []AzureFirewallApplicationRule { return v.Rules }).(AzureFirewallApplicationRuleArrayOutput)
}

type AzureFirewallApplicationRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleCollection)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionArrayOutput) ToAzureFirewallApplicationRuleCollectionArrayOutput() AzureFirewallApplicationRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionArrayOutput) ToAzureFirewallApplicationRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleCollection {
		return vs[0].([]AzureFirewallApplicationRuleCollection)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleCollectionOutput)
}

// Application rule collection resource
type AzureFirewallApplicationRuleCollectionResponse struct {
	// The action type of a rule collection
	Action *AzureFirewallRCActionResponse `pulumi:"action"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the application rule collection resource.
	Priority *int `pulumi:"priority"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Collection of rules used by a application rule collection.
	Rules []AzureFirewallApplicationRuleResponse `pulumi:"rules"`
}

// AzureFirewallApplicationRuleCollectionResponseInput is an input type that accepts AzureFirewallApplicationRuleCollectionResponseArgs and AzureFirewallApplicationRuleCollectionResponseOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleCollectionResponseInput` via:
//
//          AzureFirewallApplicationRuleCollectionResponseArgs{...}
type AzureFirewallApplicationRuleCollectionResponseInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleCollectionResponseOutput() AzureFirewallApplicationRuleCollectionResponseOutput
	ToAzureFirewallApplicationRuleCollectionResponseOutputWithContext(context.Context) AzureFirewallApplicationRuleCollectionResponseOutput
}

// Application rule collection resource
type AzureFirewallApplicationRuleCollectionResponseArgs struct {
	// The action type of a rule collection
	Action AzureFirewallRCActionResponsePtrInput `pulumi:"action"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the application rule collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Collection of rules used by a application rule collection.
	Rules AzureFirewallApplicationRuleResponseArrayInput `pulumi:"rules"`
}

func (AzureFirewallApplicationRuleCollectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleCollectionResponse)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleCollectionResponseArgs) ToAzureFirewallApplicationRuleCollectionResponseOutput() AzureFirewallApplicationRuleCollectionResponseOutput {
	return i.ToAzureFirewallApplicationRuleCollectionResponseOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleCollectionResponseArgs) ToAzureFirewallApplicationRuleCollectionResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionResponseOutput)
}

// AzureFirewallApplicationRuleCollectionResponseArrayInput is an input type that accepts AzureFirewallApplicationRuleCollectionResponseArray and AzureFirewallApplicationRuleCollectionResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleCollectionResponseArrayInput` via:
//
//          AzureFirewallApplicationRuleCollectionResponseArray{ AzureFirewallApplicationRuleCollectionResponseArgs{...} }
type AzureFirewallApplicationRuleCollectionResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleCollectionResponseArrayOutput() AzureFirewallApplicationRuleCollectionResponseArrayOutput
	ToAzureFirewallApplicationRuleCollectionResponseArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleCollectionResponseArrayOutput
}

type AzureFirewallApplicationRuleCollectionResponseArray []AzureFirewallApplicationRuleCollectionResponseInput

func (AzureFirewallApplicationRuleCollectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleCollectionResponse)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleCollectionResponseArray) ToAzureFirewallApplicationRuleCollectionResponseArrayOutput() AzureFirewallApplicationRuleCollectionResponseArrayOutput {
	return i.ToAzureFirewallApplicationRuleCollectionResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleCollectionResponseArray) ToAzureFirewallApplicationRuleCollectionResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleCollectionResponseArrayOutput)
}

// Application rule collection resource
type AzureFirewallApplicationRuleCollectionResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionResponseOutput) ToAzureFirewallApplicationRuleCollectionResponseOutput() AzureFirewallApplicationRuleCollectionResponseOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionResponseOutput) ToAzureFirewallApplicationRuleCollectionResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionResponseOutput {
	return o
}

// The action type of a rule collection
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Action() AzureFirewallRCActionResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) *AzureFirewallRCActionResponse { return v.Action }).(AzureFirewallRCActionResponsePtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the application rule collection resource.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Collection of rules used by a application rule collection.
func (o AzureFirewallApplicationRuleCollectionResponseOutput) Rules() AzureFirewallApplicationRuleResponseArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleCollectionResponse) []AzureFirewallApplicationRuleResponse {
		return v.Rules
	}).(AzureFirewallApplicationRuleResponseArrayOutput)
}

type AzureFirewallApplicationRuleCollectionResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleCollectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleCollectionResponseArrayOutput) ToAzureFirewallApplicationRuleCollectionResponseArrayOutput() AzureFirewallApplicationRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionResponseArrayOutput) ToAzureFirewallApplicationRuleCollectionResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleCollectionResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleCollectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleCollectionResponse {
		return vs[0].([]AzureFirewallApplicationRuleCollectionResponse)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleCollectionResponseOutput)
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocol struct {
	// Port number for the protocol, cannot be greater than 64000. This field is optional.
	Port *int `pulumi:"port"`
	// Protocol type
	ProtocolType *string `pulumi:"protocolType"`
}

// AzureFirewallApplicationRuleProtocolInput is an input type that accepts AzureFirewallApplicationRuleProtocolArgs and AzureFirewallApplicationRuleProtocolOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleProtocolInput` via:
//
//          AzureFirewallApplicationRuleProtocolArgs{...}
type AzureFirewallApplicationRuleProtocolInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleProtocolOutput() AzureFirewallApplicationRuleProtocolOutput
	ToAzureFirewallApplicationRuleProtocolOutputWithContext(context.Context) AzureFirewallApplicationRuleProtocolOutput
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocolArgs struct {
	// Port number for the protocol, cannot be greater than 64000. This field is optional.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Protocol type
	ProtocolType pulumi.StringPtrInput `pulumi:"protocolType"`
}

func (AzureFirewallApplicationRuleProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleProtocol)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleProtocolArgs) ToAzureFirewallApplicationRuleProtocolOutput() AzureFirewallApplicationRuleProtocolOutput {
	return i.ToAzureFirewallApplicationRuleProtocolOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleProtocolArgs) ToAzureFirewallApplicationRuleProtocolOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleProtocolOutput)
}

// AzureFirewallApplicationRuleProtocolArrayInput is an input type that accepts AzureFirewallApplicationRuleProtocolArray and AzureFirewallApplicationRuleProtocolArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleProtocolArrayInput` via:
//
//          AzureFirewallApplicationRuleProtocolArray{ AzureFirewallApplicationRuleProtocolArgs{...} }
type AzureFirewallApplicationRuleProtocolArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleProtocolArrayOutput() AzureFirewallApplicationRuleProtocolArrayOutput
	ToAzureFirewallApplicationRuleProtocolArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleProtocolArrayOutput
}

type AzureFirewallApplicationRuleProtocolArray []AzureFirewallApplicationRuleProtocolInput

func (AzureFirewallApplicationRuleProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleProtocol)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleProtocolArray) ToAzureFirewallApplicationRuleProtocolArrayOutput() AzureFirewallApplicationRuleProtocolArrayOutput {
	return i.ToAzureFirewallApplicationRuleProtocolArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleProtocolArray) ToAzureFirewallApplicationRuleProtocolArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleProtocolArrayOutput)
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocolOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleProtocol)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleProtocolOutput) ToAzureFirewallApplicationRuleProtocolOutput() AzureFirewallApplicationRuleProtocolOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolOutput) ToAzureFirewallApplicationRuleProtocolOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolOutput {
	return o
}

// Port number for the protocol, cannot be greater than 64000. This field is optional.
func (o AzureFirewallApplicationRuleProtocolOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleProtocol) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol type
func (o AzureFirewallApplicationRuleProtocolOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleProtocol) *string { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

type AzureFirewallApplicationRuleProtocolArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleProtocol)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleProtocolArrayOutput) ToAzureFirewallApplicationRuleProtocolArrayOutput() AzureFirewallApplicationRuleProtocolArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolArrayOutput) ToAzureFirewallApplicationRuleProtocolArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleProtocol {
		return vs[0].([]AzureFirewallApplicationRuleProtocol)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleProtocolOutput)
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocolResponse struct {
	// Port number for the protocol, cannot be greater than 64000. This field is optional.
	Port *int `pulumi:"port"`
	// Protocol type
	ProtocolType *string `pulumi:"protocolType"`
}

// AzureFirewallApplicationRuleProtocolResponseInput is an input type that accepts AzureFirewallApplicationRuleProtocolResponseArgs and AzureFirewallApplicationRuleProtocolResponseOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleProtocolResponseInput` via:
//
//          AzureFirewallApplicationRuleProtocolResponseArgs{...}
type AzureFirewallApplicationRuleProtocolResponseInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleProtocolResponseOutput() AzureFirewallApplicationRuleProtocolResponseOutput
	ToAzureFirewallApplicationRuleProtocolResponseOutputWithContext(context.Context) AzureFirewallApplicationRuleProtocolResponseOutput
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocolResponseArgs struct {
	// Port number for the protocol, cannot be greater than 64000. This field is optional.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Protocol type
	ProtocolType pulumi.StringPtrInput `pulumi:"protocolType"`
}

func (AzureFirewallApplicationRuleProtocolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleProtocolResponse)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleProtocolResponseArgs) ToAzureFirewallApplicationRuleProtocolResponseOutput() AzureFirewallApplicationRuleProtocolResponseOutput {
	return i.ToAzureFirewallApplicationRuleProtocolResponseOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleProtocolResponseArgs) ToAzureFirewallApplicationRuleProtocolResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleProtocolResponseOutput)
}

// AzureFirewallApplicationRuleProtocolResponseArrayInput is an input type that accepts AzureFirewallApplicationRuleProtocolResponseArray and AzureFirewallApplicationRuleProtocolResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleProtocolResponseArrayInput` via:
//
//          AzureFirewallApplicationRuleProtocolResponseArray{ AzureFirewallApplicationRuleProtocolResponseArgs{...} }
type AzureFirewallApplicationRuleProtocolResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleProtocolResponseArrayOutput() AzureFirewallApplicationRuleProtocolResponseArrayOutput
	ToAzureFirewallApplicationRuleProtocolResponseArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleProtocolResponseArrayOutput
}

type AzureFirewallApplicationRuleProtocolResponseArray []AzureFirewallApplicationRuleProtocolResponseInput

func (AzureFirewallApplicationRuleProtocolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleProtocolResponse)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleProtocolResponseArray) ToAzureFirewallApplicationRuleProtocolResponseArrayOutput() AzureFirewallApplicationRuleProtocolResponseArrayOutput {
	return i.ToAzureFirewallApplicationRuleProtocolResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleProtocolResponseArray) ToAzureFirewallApplicationRuleProtocolResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleProtocolResponseArrayOutput)
}

// Properties of the application rule protocol.
type AzureFirewallApplicationRuleProtocolResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleProtocolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleProtocolResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleProtocolResponseOutput) ToAzureFirewallApplicationRuleProtocolResponseOutput() AzureFirewallApplicationRuleProtocolResponseOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolResponseOutput) ToAzureFirewallApplicationRuleProtocolResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolResponseOutput {
	return o
}

// Port number for the protocol, cannot be greater than 64000. This field is optional.
func (o AzureFirewallApplicationRuleProtocolResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleProtocolResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Protocol type
func (o AzureFirewallApplicationRuleProtocolResponseOutput) ProtocolType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleProtocolResponse) *string { return v.ProtocolType }).(pulumi.StringPtrOutput)
}

type AzureFirewallApplicationRuleProtocolResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleProtocolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleProtocolResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleProtocolResponseArrayOutput) ToAzureFirewallApplicationRuleProtocolResponseArrayOutput() AzureFirewallApplicationRuleProtocolResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolResponseArrayOutput) ToAzureFirewallApplicationRuleProtocolResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleProtocolResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleProtocolResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleProtocolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleProtocolResponse {
		return vs[0].([]AzureFirewallApplicationRuleProtocolResponse)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleProtocolResponseOutput)
}

// Properties of an application rule.
type AzureFirewallApplicationRuleResponse struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// Name of the application rule.
	Name *string `pulumi:"name"`
	// Array of ApplicationRuleProtocols.
	Protocols []AzureFirewallApplicationRuleProtocolResponse `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// List of URLs for this rule.
	TargetUrls []string `pulumi:"targetUrls"`
}

// AzureFirewallApplicationRuleResponseInput is an input type that accepts AzureFirewallApplicationRuleResponseArgs and AzureFirewallApplicationRuleResponseOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleResponseInput` via:
//
//          AzureFirewallApplicationRuleResponseArgs{...}
type AzureFirewallApplicationRuleResponseInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleResponseOutput() AzureFirewallApplicationRuleResponseOutput
	ToAzureFirewallApplicationRuleResponseOutputWithContext(context.Context) AzureFirewallApplicationRuleResponseOutput
}

// Properties of an application rule.
type AzureFirewallApplicationRuleResponseArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of the application rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of ApplicationRuleProtocols.
	Protocols AzureFirewallApplicationRuleProtocolResponseArrayInput `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// List of URLs for this rule.
	TargetUrls pulumi.StringArrayInput `pulumi:"targetUrls"`
}

func (AzureFirewallApplicationRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleResponse)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleResponseArgs) ToAzureFirewallApplicationRuleResponseOutput() AzureFirewallApplicationRuleResponseOutput {
	return i.ToAzureFirewallApplicationRuleResponseOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleResponseArgs) ToAzureFirewallApplicationRuleResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleResponseOutput)
}

// AzureFirewallApplicationRuleResponseArrayInput is an input type that accepts AzureFirewallApplicationRuleResponseArray and AzureFirewallApplicationRuleResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallApplicationRuleResponseArrayInput` via:
//
//          AzureFirewallApplicationRuleResponseArray{ AzureFirewallApplicationRuleResponseArgs{...} }
type AzureFirewallApplicationRuleResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallApplicationRuleResponseArrayOutput() AzureFirewallApplicationRuleResponseArrayOutput
	ToAzureFirewallApplicationRuleResponseArrayOutputWithContext(context.Context) AzureFirewallApplicationRuleResponseArrayOutput
}

type AzureFirewallApplicationRuleResponseArray []AzureFirewallApplicationRuleResponseInput

func (AzureFirewallApplicationRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleResponse)(nil)).Elem()
}

func (i AzureFirewallApplicationRuleResponseArray) ToAzureFirewallApplicationRuleResponseArrayOutput() AzureFirewallApplicationRuleResponseArrayOutput {
	return i.ToAzureFirewallApplicationRuleResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallApplicationRuleResponseArray) ToAzureFirewallApplicationRuleResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallApplicationRuleResponseArrayOutput)
}

// Properties of an application rule.
type AzureFirewallApplicationRuleResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallApplicationRuleResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleResponseOutput) ToAzureFirewallApplicationRuleResponseOutput() AzureFirewallApplicationRuleResponseOutput {
	return o
}

func (o AzureFirewallApplicationRuleResponseOutput) ToAzureFirewallApplicationRuleResponseOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleResponseOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallApplicationRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of the application rule.
func (o AzureFirewallApplicationRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of ApplicationRuleProtocols.
func (o AzureFirewallApplicationRuleResponseOutput) Protocols() AzureFirewallApplicationRuleProtocolResponseArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) []AzureFirewallApplicationRuleProtocolResponse {
		return v.Protocols
	}).(AzureFirewallApplicationRuleProtocolResponseArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallApplicationRuleResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// List of URLs for this rule.
func (o AzureFirewallApplicationRuleResponseOutput) TargetUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallApplicationRuleResponse) []string { return v.TargetUrls }).(pulumi.StringArrayOutput)
}

type AzureFirewallApplicationRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallApplicationRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallApplicationRuleResponse)(nil)).Elem()
}

func (o AzureFirewallApplicationRuleResponseArrayOutput) ToAzureFirewallApplicationRuleResponseArrayOutput() AzureFirewallApplicationRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleResponseArrayOutput) ToAzureFirewallApplicationRuleResponseArrayOutputWithContext(ctx context.Context) AzureFirewallApplicationRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallApplicationRuleResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallApplicationRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallApplicationRuleResponse {
		return vs[0].([]AzureFirewallApplicationRuleResponse)[vs[1].(int)]
	}).(AzureFirewallApplicationRuleResponseOutput)
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Reference of the PublicIP resource. This field is a mandatory input.
	InternalPublicIpAddress *SubResource `pulumi:"internalPublicIpAddress"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Reference of the PublicIP resource. This field is populated in the output.
	PublicIPAddress *SubResource `pulumi:"publicIPAddress"`
	// Reference of the subnet resource. This resource must be named 'AzureFirewallSubnet'.
	Subnet *SubResource `pulumi:"subnet"`
}

// AzureFirewallIPConfigurationInput is an input type that accepts AzureFirewallIPConfigurationArgs and AzureFirewallIPConfigurationOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationInput` via:
//
//          AzureFirewallIPConfigurationArgs{...}
type AzureFirewallIPConfigurationInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationOutput() AzureFirewallIPConfigurationOutput
	ToAzureFirewallIPConfigurationOutputWithContext(context.Context) AzureFirewallIPConfigurationOutput
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Reference of the PublicIP resource. This field is a mandatory input.
	InternalPublicIpAddress SubResourcePtrInput `pulumi:"internalPublicIpAddress"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Reference of the PublicIP resource. This field is populated in the output.
	PublicIPAddress SubResourcePtrInput `pulumi:"publicIPAddress"`
	// Reference of the subnet resource. This resource must be named 'AzureFirewallSubnet'.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (AzureFirewallIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIPConfiguration)(nil)).Elem()
}

func (i AzureFirewallIPConfigurationArgs) ToAzureFirewallIPConfigurationOutput() AzureFirewallIPConfigurationOutput {
	return i.ToAzureFirewallIPConfigurationOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationArgs) ToAzureFirewallIPConfigurationOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationOutput)
}

// AzureFirewallIPConfigurationArrayInput is an input type that accepts AzureFirewallIPConfigurationArray and AzureFirewallIPConfigurationArrayOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationArrayInput` via:
//
//          AzureFirewallIPConfigurationArray{ AzureFirewallIPConfigurationArgs{...} }
type AzureFirewallIPConfigurationArrayInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationArrayOutput() AzureFirewallIPConfigurationArrayOutput
	ToAzureFirewallIPConfigurationArrayOutputWithContext(context.Context) AzureFirewallIPConfigurationArrayOutput
}

type AzureFirewallIPConfigurationArray []AzureFirewallIPConfigurationInput

func (AzureFirewallIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallIPConfiguration)(nil)).Elem()
}

func (i AzureFirewallIPConfigurationArray) ToAzureFirewallIPConfigurationArrayOutput() AzureFirewallIPConfigurationArrayOutput {
	return i.ToAzureFirewallIPConfigurationArrayOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationArray) ToAzureFirewallIPConfigurationArrayOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationArrayOutput)
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIPConfiguration)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationOutput) ToAzureFirewallIPConfigurationOutput() AzureFirewallIPConfigurationOutput {
	return o
}

func (o AzureFirewallIPConfigurationOutput) ToAzureFirewallIPConfigurationOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o AzureFirewallIPConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o AzureFirewallIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Reference of the PublicIP resource. This field is a mandatory input.
func (o AzureFirewallIPConfigurationOutput) InternalPublicIpAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfiguration) *SubResource { return v.InternalPublicIpAddress }).(SubResourcePtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
func (o AzureFirewallIPConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Reference of the PublicIP resource. This field is populated in the output.
func (o AzureFirewallIPConfigurationOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfiguration) *SubResource { return v.PublicIPAddress }).(SubResourcePtrOutput)
}

// Reference of the subnet resource. This resource must be named 'AzureFirewallSubnet'.
func (o AzureFirewallIPConfigurationOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfiguration) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type AzureFirewallIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallIPConfiguration)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationArrayOutput) ToAzureFirewallIPConfigurationArrayOutput() AzureFirewallIPConfigurationArrayOutput {
	return o
}

func (o AzureFirewallIPConfigurationArrayOutput) ToAzureFirewallIPConfigurationArrayOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationArrayOutput {
	return o
}

func (o AzureFirewallIPConfigurationArrayOutput) Index(i pulumi.IntInput) AzureFirewallIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallIPConfiguration {
		return vs[0].([]AzureFirewallIPConfiguration)[vs[1].(int)]
	}).(AzureFirewallIPConfigurationOutput)
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Reference of the PublicIP resource. This field is a mandatory input.
	InternalPublicIpAddress *SubResourceResponse `pulumi:"internalPublicIpAddress"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Reference of the PublicIP resource. This field is populated in the output.
	PublicIPAddress *SubResourceResponse `pulumi:"publicIPAddress"`
	// Reference of the subnet resource. This resource must be named 'AzureFirewallSubnet'.
	Subnet *SubResourceResponse `pulumi:"subnet"`
}

// AzureFirewallIPConfigurationResponseInput is an input type that accepts AzureFirewallIPConfigurationResponseArgs and AzureFirewallIPConfigurationResponseOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationResponseInput` via:
//
//          AzureFirewallIPConfigurationResponseArgs{...}
type AzureFirewallIPConfigurationResponseInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationResponseOutput() AzureFirewallIPConfigurationResponseOutput
	ToAzureFirewallIPConfigurationResponseOutputWithContext(context.Context) AzureFirewallIPConfigurationResponseOutput
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Reference of the PublicIP resource. This field is a mandatory input.
	InternalPublicIpAddress SubResourceResponsePtrInput `pulumi:"internalPublicIpAddress"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Reference of the PublicIP resource. This field is populated in the output.
	PublicIPAddress SubResourceResponsePtrInput `pulumi:"publicIPAddress"`
	// Reference of the subnet resource. This resource must be named 'AzureFirewallSubnet'.
	Subnet SubResourceResponsePtrInput `pulumi:"subnet"`
}

func (AzureFirewallIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIPConfigurationResponse)(nil)).Elem()
}

func (i AzureFirewallIPConfigurationResponseArgs) ToAzureFirewallIPConfigurationResponseOutput() AzureFirewallIPConfigurationResponseOutput {
	return i.ToAzureFirewallIPConfigurationResponseOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationResponseArgs) ToAzureFirewallIPConfigurationResponseOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationResponseOutput)
}

// AzureFirewallIPConfigurationResponseArrayInput is an input type that accepts AzureFirewallIPConfigurationResponseArray and AzureFirewallIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallIPConfigurationResponseArrayInput` via:
//
//          AzureFirewallIPConfigurationResponseArray{ AzureFirewallIPConfigurationResponseArgs{...} }
type AzureFirewallIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallIPConfigurationResponseArrayOutput() AzureFirewallIPConfigurationResponseArrayOutput
	ToAzureFirewallIPConfigurationResponseArrayOutputWithContext(context.Context) AzureFirewallIPConfigurationResponseArrayOutput
}

type AzureFirewallIPConfigurationResponseArray []AzureFirewallIPConfigurationResponseInput

func (AzureFirewallIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallIPConfigurationResponse)(nil)).Elem()
}

func (i AzureFirewallIPConfigurationResponseArray) ToAzureFirewallIPConfigurationResponseArrayOutput() AzureFirewallIPConfigurationResponseArrayOutput {
	return i.ToAzureFirewallIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallIPConfigurationResponseArray) ToAzureFirewallIPConfigurationResponseArrayOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallIPConfigurationResponseArrayOutput)
}

// IP configuration of an Azure Firewall.
type AzureFirewallIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallIPConfigurationResponse)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationResponseOutput) ToAzureFirewallIPConfigurationResponseOutput() AzureFirewallIPConfigurationResponseOutput {
	return o
}

func (o AzureFirewallIPConfigurationResponseOutput) ToAzureFirewallIPConfigurationResponseOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o AzureFirewallIPConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o AzureFirewallIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Reference of the PublicIP resource. This field is a mandatory input.
func (o AzureFirewallIPConfigurationResponseOutput) InternalPublicIpAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) *SubResourceResponse { return v.InternalPublicIpAddress }).(SubResourceResponsePtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Firewall Internal Load Balancer IP to be used as the next hop in User Defined Routes.
func (o AzureFirewallIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Reference of the PublicIP resource. This field is populated in the output.
func (o AzureFirewallIPConfigurationResponseOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) *SubResourceResponse { return v.PublicIPAddress }).(SubResourceResponsePtrOutput)
}

// Reference of the subnet resource. This resource must be named 'AzureFirewallSubnet'.
func (o AzureFirewallIPConfigurationResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallIPConfigurationResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

type AzureFirewallIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallIPConfigurationResponse)(nil)).Elem()
}

func (o AzureFirewallIPConfigurationResponseArrayOutput) ToAzureFirewallIPConfigurationResponseArrayOutput() AzureFirewallIPConfigurationResponseArrayOutput {
	return o
}

func (o AzureFirewallIPConfigurationResponseArrayOutput) ToAzureFirewallIPConfigurationResponseArrayOutputWithContext(ctx context.Context) AzureFirewallIPConfigurationResponseArrayOutput {
	return o
}

func (o AzureFirewallIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallIPConfigurationResponse {
		return vs[0].([]AzureFirewallIPConfigurationResponse)[vs[1].(int)]
	}).(AzureFirewallIPConfigurationResponseOutput)
}

// Properties of the network rule.
type AzureFirewallNetworkRule struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Name of the network rule.
	Name *string `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols.
	Protocols []string `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
}

// AzureFirewallNetworkRuleInput is an input type that accepts AzureFirewallNetworkRuleArgs and AzureFirewallNetworkRuleOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleInput` via:
//
//          AzureFirewallNetworkRuleArgs{...}
type AzureFirewallNetworkRuleInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleOutput() AzureFirewallNetworkRuleOutput
	ToAzureFirewallNetworkRuleOutputWithContext(context.Context) AzureFirewallNetworkRuleOutput
}

// Properties of the network rule.
type AzureFirewallNetworkRuleArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Name of the network rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
}

func (AzureFirewallNetworkRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRule)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleArgs) ToAzureFirewallNetworkRuleOutput() AzureFirewallNetworkRuleOutput {
	return i.ToAzureFirewallNetworkRuleOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleArgs) ToAzureFirewallNetworkRuleOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleOutput)
}

// AzureFirewallNetworkRuleArrayInput is an input type that accepts AzureFirewallNetworkRuleArray and AzureFirewallNetworkRuleArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleArrayInput` via:
//
//          AzureFirewallNetworkRuleArray{ AzureFirewallNetworkRuleArgs{...} }
type AzureFirewallNetworkRuleArrayInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleArrayOutput() AzureFirewallNetworkRuleArrayOutput
	ToAzureFirewallNetworkRuleArrayOutputWithContext(context.Context) AzureFirewallNetworkRuleArrayOutput
}

type AzureFirewallNetworkRuleArray []AzureFirewallNetworkRuleInput

func (AzureFirewallNetworkRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRule)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleArray) ToAzureFirewallNetworkRuleArrayOutput() AzureFirewallNetworkRuleArrayOutput {
	return i.ToAzureFirewallNetworkRuleArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleArray) ToAzureFirewallNetworkRuleArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleArrayOutput)
}

// Properties of the network rule.
type AzureFirewallNetworkRuleOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRule)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleOutput) ToAzureFirewallNetworkRuleOutput() AzureFirewallNetworkRuleOutput {
	return o
}

func (o AzureFirewallNetworkRuleOutput) ToAzureFirewallNetworkRuleOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallNetworkRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses.
func (o AzureFirewallNetworkRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o AzureFirewallNetworkRuleOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Name of the network rule.
func (o AzureFirewallNetworkRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of AzureFirewallNetworkRuleProtocols.
func (o AzureFirewallNetworkRuleOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallNetworkRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

type AzureFirewallNetworkRuleArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRule)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleArrayOutput) ToAzureFirewallNetworkRuleArrayOutput() AzureFirewallNetworkRuleArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleArrayOutput) ToAzureFirewallNetworkRuleArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleArrayOutput) Index(i pulumi.IntInput) AzureFirewallNetworkRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNetworkRule {
		return vs[0].([]AzureFirewallNetworkRule)[vs[1].(int)]
	}).(AzureFirewallNetworkRuleOutput)
}

// Network rule collection resource
type AzureFirewallNetworkRuleCollection struct {
	// The action type of a rule collection
	Action *AzureFirewallRCAction `pulumi:"action"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the network rule collection resource.
	Priority *int `pulumi:"priority"`
	// Collection of rules used by a network rule collection.
	Rules []AzureFirewallNetworkRule `pulumi:"rules"`
}

// AzureFirewallNetworkRuleCollectionInput is an input type that accepts AzureFirewallNetworkRuleCollectionArgs and AzureFirewallNetworkRuleCollectionOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleCollectionInput` via:
//
//          AzureFirewallNetworkRuleCollectionArgs{...}
type AzureFirewallNetworkRuleCollectionInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleCollectionOutput() AzureFirewallNetworkRuleCollectionOutput
	ToAzureFirewallNetworkRuleCollectionOutputWithContext(context.Context) AzureFirewallNetworkRuleCollectionOutput
}

// Network rule collection resource
type AzureFirewallNetworkRuleCollectionArgs struct {
	// The action type of a rule collection
	Action AzureFirewallRCActionPtrInput `pulumi:"action"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the network rule collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Collection of rules used by a network rule collection.
	Rules AzureFirewallNetworkRuleArrayInput `pulumi:"rules"`
}

func (AzureFirewallNetworkRuleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleCollection)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleCollectionArgs) ToAzureFirewallNetworkRuleCollectionOutput() AzureFirewallNetworkRuleCollectionOutput {
	return i.ToAzureFirewallNetworkRuleCollectionOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleCollectionArgs) ToAzureFirewallNetworkRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionOutput)
}

// AzureFirewallNetworkRuleCollectionArrayInput is an input type that accepts AzureFirewallNetworkRuleCollectionArray and AzureFirewallNetworkRuleCollectionArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleCollectionArrayInput` via:
//
//          AzureFirewallNetworkRuleCollectionArray{ AzureFirewallNetworkRuleCollectionArgs{...} }
type AzureFirewallNetworkRuleCollectionArrayInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleCollectionArrayOutput() AzureFirewallNetworkRuleCollectionArrayOutput
	ToAzureFirewallNetworkRuleCollectionArrayOutputWithContext(context.Context) AzureFirewallNetworkRuleCollectionArrayOutput
}

type AzureFirewallNetworkRuleCollectionArray []AzureFirewallNetworkRuleCollectionInput

func (AzureFirewallNetworkRuleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleCollection)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleCollectionArray) ToAzureFirewallNetworkRuleCollectionArrayOutput() AzureFirewallNetworkRuleCollectionArrayOutput {
	return i.ToAzureFirewallNetworkRuleCollectionArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleCollectionArray) ToAzureFirewallNetworkRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionArrayOutput)
}

// Network rule collection resource
type AzureFirewallNetworkRuleCollectionOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleCollection)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionOutput) ToAzureFirewallNetworkRuleCollectionOutput() AzureFirewallNetworkRuleCollectionOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionOutput) ToAzureFirewallNetworkRuleCollectionOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionOutput {
	return o
}

// The action type of a rule collection
func (o AzureFirewallNetworkRuleCollectionOutput) Action() AzureFirewallRCActionPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollection) *AzureFirewallRCAction { return v.Action }).(AzureFirewallRCActionPtrOutput)
}

// Resource ID.
func (o AzureFirewallNetworkRuleCollectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallNetworkRuleCollectionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollection) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the network rule collection resource.
func (o AzureFirewallNetworkRuleCollectionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollection) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Collection of rules used by a network rule collection.
func (o AzureFirewallNetworkRuleCollectionOutput) Rules() AzureFirewallNetworkRuleArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollection) []AzureFirewallNetworkRule { return v.Rules }).(AzureFirewallNetworkRuleArrayOutput)
}

type AzureFirewallNetworkRuleCollectionArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleCollection)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionArrayOutput) ToAzureFirewallNetworkRuleCollectionArrayOutput() AzureFirewallNetworkRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionArrayOutput) ToAzureFirewallNetworkRuleCollectionArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionArrayOutput) Index(i pulumi.IntInput) AzureFirewallNetworkRuleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNetworkRuleCollection {
		return vs[0].([]AzureFirewallNetworkRuleCollection)[vs[1].(int)]
	}).(AzureFirewallNetworkRuleCollectionOutput)
}

// Network rule collection resource
type AzureFirewallNetworkRuleCollectionResponse struct {
	// The action type of a rule collection
	Action *AzureFirewallRCActionResponse `pulumi:"action"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Priority of the network rule collection resource.
	Priority *int `pulumi:"priority"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Collection of rules used by a network rule collection.
	Rules []AzureFirewallNetworkRuleResponse `pulumi:"rules"`
}

// AzureFirewallNetworkRuleCollectionResponseInput is an input type that accepts AzureFirewallNetworkRuleCollectionResponseArgs and AzureFirewallNetworkRuleCollectionResponseOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleCollectionResponseInput` via:
//
//          AzureFirewallNetworkRuleCollectionResponseArgs{...}
type AzureFirewallNetworkRuleCollectionResponseInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleCollectionResponseOutput() AzureFirewallNetworkRuleCollectionResponseOutput
	ToAzureFirewallNetworkRuleCollectionResponseOutputWithContext(context.Context) AzureFirewallNetworkRuleCollectionResponseOutput
}

// Network rule collection resource
type AzureFirewallNetworkRuleCollectionResponseArgs struct {
	// The action type of a rule collection
	Action AzureFirewallRCActionResponsePtrInput `pulumi:"action"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Priority of the network rule collection resource.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Collection of rules used by a network rule collection.
	Rules AzureFirewallNetworkRuleResponseArrayInput `pulumi:"rules"`
}

func (AzureFirewallNetworkRuleCollectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleCollectionResponse)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleCollectionResponseArgs) ToAzureFirewallNetworkRuleCollectionResponseOutput() AzureFirewallNetworkRuleCollectionResponseOutput {
	return i.ToAzureFirewallNetworkRuleCollectionResponseOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleCollectionResponseArgs) ToAzureFirewallNetworkRuleCollectionResponseOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionResponseOutput)
}

// AzureFirewallNetworkRuleCollectionResponseArrayInput is an input type that accepts AzureFirewallNetworkRuleCollectionResponseArray and AzureFirewallNetworkRuleCollectionResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleCollectionResponseArrayInput` via:
//
//          AzureFirewallNetworkRuleCollectionResponseArray{ AzureFirewallNetworkRuleCollectionResponseArgs{...} }
type AzureFirewallNetworkRuleCollectionResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleCollectionResponseArrayOutput() AzureFirewallNetworkRuleCollectionResponseArrayOutput
	ToAzureFirewallNetworkRuleCollectionResponseArrayOutputWithContext(context.Context) AzureFirewallNetworkRuleCollectionResponseArrayOutput
}

type AzureFirewallNetworkRuleCollectionResponseArray []AzureFirewallNetworkRuleCollectionResponseInput

func (AzureFirewallNetworkRuleCollectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleCollectionResponse)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleCollectionResponseArray) ToAzureFirewallNetworkRuleCollectionResponseArrayOutput() AzureFirewallNetworkRuleCollectionResponseArrayOutput {
	return i.ToAzureFirewallNetworkRuleCollectionResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleCollectionResponseArray) ToAzureFirewallNetworkRuleCollectionResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleCollectionResponseArrayOutput)
}

// Network rule collection resource
type AzureFirewallNetworkRuleCollectionResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionResponseOutput) ToAzureFirewallNetworkRuleCollectionResponseOutput() AzureFirewallNetworkRuleCollectionResponseOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionResponseOutput) ToAzureFirewallNetworkRuleCollectionResponseOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionResponseOutput {
	return o
}

// The action type of a rule collection
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Action() AzureFirewallRCActionResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) *AzureFirewallRCActionResponse { return v.Action }).(AzureFirewallRCActionResponsePtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Priority of the network rule collection resource.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The provisioning state of the resource.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Collection of rules used by a network rule collection.
func (o AzureFirewallNetworkRuleCollectionResponseOutput) Rules() AzureFirewallNetworkRuleResponseArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleCollectionResponse) []AzureFirewallNetworkRuleResponse { return v.Rules }).(AzureFirewallNetworkRuleResponseArrayOutput)
}

type AzureFirewallNetworkRuleCollectionResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleCollectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleCollectionResponse)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleCollectionResponseArrayOutput) ToAzureFirewallNetworkRuleCollectionResponseArrayOutput() AzureFirewallNetworkRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionResponseArrayOutput) ToAzureFirewallNetworkRuleCollectionResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleCollectionResponseArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleCollectionResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallNetworkRuleCollectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNetworkRuleCollectionResponse {
		return vs[0].([]AzureFirewallNetworkRuleCollectionResponse)[vs[1].(int)]
	}).(AzureFirewallNetworkRuleCollectionResponseOutput)
}

// Properties of the network rule.
type AzureFirewallNetworkRuleResponse struct {
	// Description of the rule.
	Description *string `pulumi:"description"`
	// List of destination IP addresses.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts []string `pulumi:"destinationPorts"`
	// Name of the network rule.
	Name *string `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols.
	Protocols []string `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses []string `pulumi:"sourceAddresses"`
}

// AzureFirewallNetworkRuleResponseInput is an input type that accepts AzureFirewallNetworkRuleResponseArgs and AzureFirewallNetworkRuleResponseOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleResponseInput` via:
//
//          AzureFirewallNetworkRuleResponseArgs{...}
type AzureFirewallNetworkRuleResponseInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleResponseOutput() AzureFirewallNetworkRuleResponseOutput
	ToAzureFirewallNetworkRuleResponseOutputWithContext(context.Context) AzureFirewallNetworkRuleResponseOutput
}

// Properties of the network rule.
type AzureFirewallNetworkRuleResponseArgs struct {
	// Description of the rule.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// List of destination IP addresses.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// List of destination ports.
	DestinationPorts pulumi.StringArrayInput `pulumi:"destinationPorts"`
	// Name of the network rule.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Array of AzureFirewallNetworkRuleProtocols.
	Protocols pulumi.StringArrayInput `pulumi:"protocols"`
	// List of source IP addresses for this rule.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
}

func (AzureFirewallNetworkRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleResponse)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleResponseArgs) ToAzureFirewallNetworkRuleResponseOutput() AzureFirewallNetworkRuleResponseOutput {
	return i.ToAzureFirewallNetworkRuleResponseOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleResponseArgs) ToAzureFirewallNetworkRuleResponseOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleResponseOutput)
}

// AzureFirewallNetworkRuleResponseArrayInput is an input type that accepts AzureFirewallNetworkRuleResponseArray and AzureFirewallNetworkRuleResponseArrayOutput values.
// You can construct a concrete instance of `AzureFirewallNetworkRuleResponseArrayInput` via:
//
//          AzureFirewallNetworkRuleResponseArray{ AzureFirewallNetworkRuleResponseArgs{...} }
type AzureFirewallNetworkRuleResponseArrayInput interface {
	pulumi.Input

	ToAzureFirewallNetworkRuleResponseArrayOutput() AzureFirewallNetworkRuleResponseArrayOutput
	ToAzureFirewallNetworkRuleResponseArrayOutputWithContext(context.Context) AzureFirewallNetworkRuleResponseArrayOutput
}

type AzureFirewallNetworkRuleResponseArray []AzureFirewallNetworkRuleResponseInput

func (AzureFirewallNetworkRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleResponse)(nil)).Elem()
}

func (i AzureFirewallNetworkRuleResponseArray) ToAzureFirewallNetworkRuleResponseArrayOutput() AzureFirewallNetworkRuleResponseArrayOutput {
	return i.ToAzureFirewallNetworkRuleResponseArrayOutputWithContext(context.Background())
}

func (i AzureFirewallNetworkRuleResponseArray) ToAzureFirewallNetworkRuleResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallNetworkRuleResponseArrayOutput)
}

// Properties of the network rule.
type AzureFirewallNetworkRuleResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallNetworkRuleResponse)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleResponseOutput) ToAzureFirewallNetworkRuleResponseOutput() AzureFirewallNetworkRuleResponseOutput {
	return o
}

func (o AzureFirewallNetworkRuleResponseOutput) ToAzureFirewallNetworkRuleResponseOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleResponseOutput {
	return o
}

// Description of the rule.
func (o AzureFirewallNetworkRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// List of destination IP addresses.
func (o AzureFirewallNetworkRuleResponseOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// List of destination ports.
func (o AzureFirewallNetworkRuleResponseOutput) DestinationPorts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.DestinationPorts }).(pulumi.StringArrayOutput)
}

// Name of the network rule.
func (o AzureFirewallNetworkRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Array of AzureFirewallNetworkRuleProtocols.
func (o AzureFirewallNetworkRuleResponseOutput) Protocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.Protocols }).(pulumi.StringArrayOutput)
}

// List of source IP addresses for this rule.
func (o AzureFirewallNetworkRuleResponseOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AzureFirewallNetworkRuleResponse) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

type AzureFirewallNetworkRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (AzureFirewallNetworkRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AzureFirewallNetworkRuleResponse)(nil)).Elem()
}

func (o AzureFirewallNetworkRuleResponseArrayOutput) ToAzureFirewallNetworkRuleResponseArrayOutput() AzureFirewallNetworkRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleResponseArrayOutput) ToAzureFirewallNetworkRuleResponseArrayOutputWithContext(ctx context.Context) AzureFirewallNetworkRuleResponseArrayOutput {
	return o
}

func (o AzureFirewallNetworkRuleResponseArrayOutput) Index(i pulumi.IntInput) AzureFirewallNetworkRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AzureFirewallNetworkRuleResponse {
		return vs[0].([]AzureFirewallNetworkRuleResponse)[vs[1].(int)]
	}).(AzureFirewallNetworkRuleResponseOutput)
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCAction struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// AzureFirewallRCActionInput is an input type that accepts AzureFirewallRCActionArgs and AzureFirewallRCActionOutput values.
// You can construct a concrete instance of `AzureFirewallRCActionInput` via:
//
//          AzureFirewallRCActionArgs{...}
type AzureFirewallRCActionInput interface {
	pulumi.Input

	ToAzureFirewallRCActionOutput() AzureFirewallRCActionOutput
	ToAzureFirewallRCActionOutputWithContext(context.Context) AzureFirewallRCActionOutput
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCActionArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AzureFirewallRCActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallRCAction)(nil)).Elem()
}

func (i AzureFirewallRCActionArgs) ToAzureFirewallRCActionOutput() AzureFirewallRCActionOutput {
	return i.ToAzureFirewallRCActionOutputWithContext(context.Background())
}

func (i AzureFirewallRCActionArgs) ToAzureFirewallRCActionOutputWithContext(ctx context.Context) AzureFirewallRCActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionOutput)
}

func (i AzureFirewallRCActionArgs) ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput {
	return i.ToAzureFirewallRCActionPtrOutputWithContext(context.Background())
}

func (i AzureFirewallRCActionArgs) ToAzureFirewallRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallRCActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionOutput).ToAzureFirewallRCActionPtrOutputWithContext(ctx)
}

// AzureFirewallRCActionPtrInput is an input type that accepts AzureFirewallRCActionArgs, AzureFirewallRCActionPtr and AzureFirewallRCActionPtrOutput values.
// You can construct a concrete instance of `AzureFirewallRCActionPtrInput` via:
//
//          AzureFirewallRCActionArgs{...}
//
//  or:
//
//          nil
type AzureFirewallRCActionPtrInput interface {
	pulumi.Input

	ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput
	ToAzureFirewallRCActionPtrOutputWithContext(context.Context) AzureFirewallRCActionPtrOutput
}

type azureFirewallRCActionPtrType AzureFirewallRCActionArgs

func AzureFirewallRCActionPtr(v *AzureFirewallRCActionArgs) AzureFirewallRCActionPtrInput {
	return (*azureFirewallRCActionPtrType)(v)
}

func (*azureFirewallRCActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallRCAction)(nil)).Elem()
}

func (i *azureFirewallRCActionPtrType) ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput {
	return i.ToAzureFirewallRCActionPtrOutputWithContext(context.Background())
}

func (i *azureFirewallRCActionPtrType) ToAzureFirewallRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallRCActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionPtrOutput)
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCActionOutput struct{ *pulumi.OutputState }

func (AzureFirewallRCActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallRCAction)(nil)).Elem()
}

func (o AzureFirewallRCActionOutput) ToAzureFirewallRCActionOutput() AzureFirewallRCActionOutput {
	return o
}

func (o AzureFirewallRCActionOutput) ToAzureFirewallRCActionOutputWithContext(ctx context.Context) AzureFirewallRCActionOutput {
	return o
}

func (o AzureFirewallRCActionOutput) ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput {
	return o.ToAzureFirewallRCActionPtrOutputWithContext(context.Background())
}

func (o AzureFirewallRCActionOutput) ToAzureFirewallRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallRCActionPtrOutput {
	return o.ApplyT(func(v AzureFirewallRCAction) *AzureFirewallRCAction {
		return &v
	}).(AzureFirewallRCActionPtrOutput)
}

// The type of action.
func (o AzureFirewallRCActionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallRCAction) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AzureFirewallRCActionPtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallRCActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallRCAction)(nil)).Elem()
}

func (o AzureFirewallRCActionPtrOutput) ToAzureFirewallRCActionPtrOutput() AzureFirewallRCActionPtrOutput {
	return o
}

func (o AzureFirewallRCActionPtrOutput) ToAzureFirewallRCActionPtrOutputWithContext(ctx context.Context) AzureFirewallRCActionPtrOutput {
	return o
}

func (o AzureFirewallRCActionPtrOutput) Elem() AzureFirewallRCActionOutput {
	return o.ApplyT(func(v *AzureFirewallRCAction) AzureFirewallRCAction { return *v }).(AzureFirewallRCActionOutput)
}

// The type of action.
func (o AzureFirewallRCActionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallRCAction) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCActionResponse struct {
	// The type of action.
	Type *string `pulumi:"type"`
}

// AzureFirewallRCActionResponseInput is an input type that accepts AzureFirewallRCActionResponseArgs and AzureFirewallRCActionResponseOutput values.
// You can construct a concrete instance of `AzureFirewallRCActionResponseInput` via:
//
//          AzureFirewallRCActionResponseArgs{...}
type AzureFirewallRCActionResponseInput interface {
	pulumi.Input

	ToAzureFirewallRCActionResponseOutput() AzureFirewallRCActionResponseOutput
	ToAzureFirewallRCActionResponseOutputWithContext(context.Context) AzureFirewallRCActionResponseOutput
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCActionResponseArgs struct {
	// The type of action.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (AzureFirewallRCActionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallRCActionResponse)(nil)).Elem()
}

func (i AzureFirewallRCActionResponseArgs) ToAzureFirewallRCActionResponseOutput() AzureFirewallRCActionResponseOutput {
	return i.ToAzureFirewallRCActionResponseOutputWithContext(context.Background())
}

func (i AzureFirewallRCActionResponseArgs) ToAzureFirewallRCActionResponseOutputWithContext(ctx context.Context) AzureFirewallRCActionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionResponseOutput)
}

func (i AzureFirewallRCActionResponseArgs) ToAzureFirewallRCActionResponsePtrOutput() AzureFirewallRCActionResponsePtrOutput {
	return i.ToAzureFirewallRCActionResponsePtrOutputWithContext(context.Background())
}

func (i AzureFirewallRCActionResponseArgs) ToAzureFirewallRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallRCActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionResponseOutput).ToAzureFirewallRCActionResponsePtrOutputWithContext(ctx)
}

// AzureFirewallRCActionResponsePtrInput is an input type that accepts AzureFirewallRCActionResponseArgs, AzureFirewallRCActionResponsePtr and AzureFirewallRCActionResponsePtrOutput values.
// You can construct a concrete instance of `AzureFirewallRCActionResponsePtrInput` via:
//
//          AzureFirewallRCActionResponseArgs{...}
//
//  or:
//
//          nil
type AzureFirewallRCActionResponsePtrInput interface {
	pulumi.Input

	ToAzureFirewallRCActionResponsePtrOutput() AzureFirewallRCActionResponsePtrOutput
	ToAzureFirewallRCActionResponsePtrOutputWithContext(context.Context) AzureFirewallRCActionResponsePtrOutput
}

type azureFirewallRCActionResponsePtrType AzureFirewallRCActionResponseArgs

func AzureFirewallRCActionResponsePtr(v *AzureFirewallRCActionResponseArgs) AzureFirewallRCActionResponsePtrInput {
	return (*azureFirewallRCActionResponsePtrType)(v)
}

func (*azureFirewallRCActionResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallRCActionResponse)(nil)).Elem()
}

func (i *azureFirewallRCActionResponsePtrType) ToAzureFirewallRCActionResponsePtrOutput() AzureFirewallRCActionResponsePtrOutput {
	return i.ToAzureFirewallRCActionResponsePtrOutputWithContext(context.Background())
}

func (i *azureFirewallRCActionResponsePtrType) ToAzureFirewallRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallRCActionResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureFirewallRCActionResponsePtrOutput)
}

// Properties of the AzureFirewallRCAction.
type AzureFirewallRCActionResponseOutput struct{ *pulumi.OutputState }

func (AzureFirewallRCActionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AzureFirewallRCActionResponse)(nil)).Elem()
}

func (o AzureFirewallRCActionResponseOutput) ToAzureFirewallRCActionResponseOutput() AzureFirewallRCActionResponseOutput {
	return o
}

func (o AzureFirewallRCActionResponseOutput) ToAzureFirewallRCActionResponseOutputWithContext(ctx context.Context) AzureFirewallRCActionResponseOutput {
	return o
}

func (o AzureFirewallRCActionResponseOutput) ToAzureFirewallRCActionResponsePtrOutput() AzureFirewallRCActionResponsePtrOutput {
	return o.ToAzureFirewallRCActionResponsePtrOutputWithContext(context.Background())
}

func (o AzureFirewallRCActionResponseOutput) ToAzureFirewallRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallRCActionResponsePtrOutput {
	return o.ApplyT(func(v AzureFirewallRCActionResponse) *AzureFirewallRCActionResponse {
		return &v
	}).(AzureFirewallRCActionResponsePtrOutput)
}

// The type of action.
func (o AzureFirewallRCActionResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AzureFirewallRCActionResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type AzureFirewallRCActionResponsePtrOutput struct{ *pulumi.OutputState }

func (AzureFirewallRCActionResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureFirewallRCActionResponse)(nil)).Elem()
}

func (o AzureFirewallRCActionResponsePtrOutput) ToAzureFirewallRCActionResponsePtrOutput() AzureFirewallRCActionResponsePtrOutput {
	return o
}

func (o AzureFirewallRCActionResponsePtrOutput) ToAzureFirewallRCActionResponsePtrOutputWithContext(ctx context.Context) AzureFirewallRCActionResponsePtrOutput {
	return o
}

func (o AzureFirewallRCActionResponsePtrOutput) Elem() AzureFirewallRCActionResponseOutput {
	return o.ApplyT(func(v *AzureFirewallRCActionResponse) AzureFirewallRCActionResponse { return *v }).(AzureFirewallRCActionResponseOutput)
}

// The type of action.
func (o AzureFirewallRCActionResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureFirewallRCActionResponse) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Pool of backend IP addresses.
type BackendAddressPool struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// BackendAddressPoolInput is an input type that accepts BackendAddressPoolArgs and BackendAddressPoolOutput values.
// You can construct a concrete instance of `BackendAddressPoolInput` via:
//
//          BackendAddressPoolArgs{...}
type BackendAddressPoolInput interface {
	pulumi.Input

	ToBackendAddressPoolOutput() BackendAddressPoolOutput
	ToBackendAddressPoolOutputWithContext(context.Context) BackendAddressPoolOutput
}

// Pool of backend IP addresses.
type BackendAddressPoolArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (BackendAddressPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPool)(nil)).Elem()
}

func (i BackendAddressPoolArgs) ToBackendAddressPoolOutput() BackendAddressPoolOutput {
	return i.ToBackendAddressPoolOutputWithContext(context.Background())
}

func (i BackendAddressPoolArgs) ToBackendAddressPoolOutputWithContext(ctx context.Context) BackendAddressPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolOutput)
}

// BackendAddressPoolArrayInput is an input type that accepts BackendAddressPoolArray and BackendAddressPoolArrayOutput values.
// You can construct a concrete instance of `BackendAddressPoolArrayInput` via:
//
//          BackendAddressPoolArray{ BackendAddressPoolArgs{...} }
type BackendAddressPoolArrayInput interface {
	pulumi.Input

	ToBackendAddressPoolArrayOutput() BackendAddressPoolArrayOutput
	ToBackendAddressPoolArrayOutputWithContext(context.Context) BackendAddressPoolArrayOutput
}

type BackendAddressPoolArray []BackendAddressPoolInput

func (BackendAddressPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPool)(nil)).Elem()
}

func (i BackendAddressPoolArray) ToBackendAddressPoolArrayOutput() BackendAddressPoolArrayOutput {
	return i.ToBackendAddressPoolArrayOutputWithContext(context.Background())
}

func (i BackendAddressPoolArray) ToBackendAddressPoolArrayOutputWithContext(ctx context.Context) BackendAddressPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolArrayOutput)
}

// Pool of backend IP addresses.
type BackendAddressPoolOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPool)(nil)).Elem()
}

func (o BackendAddressPoolOutput) ToBackendAddressPoolOutput() BackendAddressPoolOutput {
	return o
}

func (o BackendAddressPoolOutput) ToBackendAddressPoolOutputWithContext(ctx context.Context) BackendAddressPoolOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o BackendAddressPoolOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o BackendAddressPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o BackendAddressPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o BackendAddressPoolOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPool) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type BackendAddressPoolArrayOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPool)(nil)).Elem()
}

func (o BackendAddressPoolArrayOutput) ToBackendAddressPoolArrayOutput() BackendAddressPoolArrayOutput {
	return o
}

func (o BackendAddressPoolArrayOutput) ToBackendAddressPoolArrayOutputWithContext(ctx context.Context) BackendAddressPoolArrayOutput {
	return o
}

func (o BackendAddressPoolArrayOutput) Index(i pulumi.IntInput) BackendAddressPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendAddressPool {
		return vs[0].([]BackendAddressPool)[vs[1].(int)]
	}).(BackendAddressPoolOutput)
}

// Pool of backend IP addresses.
type BackendAddressPoolResponse struct {
	// Gets collection of references to IP addresses defined in network interfaces.
	BackendIPConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets load balancing rules that use this backend address pool.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets outbound rules that use this backend address pool.
	OutboundNatRule SubResourceResponse `pulumi:"outboundNatRule"`
	// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// BackendAddressPoolResponseInput is an input type that accepts BackendAddressPoolResponseArgs and BackendAddressPoolResponseOutput values.
// You can construct a concrete instance of `BackendAddressPoolResponseInput` via:
//
//          BackendAddressPoolResponseArgs{...}
type BackendAddressPoolResponseInput interface {
	pulumi.Input

	ToBackendAddressPoolResponseOutput() BackendAddressPoolResponseOutput
	ToBackendAddressPoolResponseOutputWithContext(context.Context) BackendAddressPoolResponseOutput
}

// Pool of backend IP addresses.
type BackendAddressPoolResponseArgs struct {
	// Gets collection of references to IP addresses defined in network interfaces.
	BackendIPConfigurations NetworkInterfaceIPConfigurationResponseArrayInput `pulumi:"backendIPConfigurations"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets load balancing rules that use this backend address pool.
	LoadBalancingRules SubResourceResponseArrayInput `pulumi:"loadBalancingRules"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets outbound rules that use this backend address pool.
	OutboundNatRule SubResourceResponseInput `pulumi:"outboundNatRule"`
	// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (BackendAddressPoolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPoolResponse)(nil)).Elem()
}

func (i BackendAddressPoolResponseArgs) ToBackendAddressPoolResponseOutput() BackendAddressPoolResponseOutput {
	return i.ToBackendAddressPoolResponseOutputWithContext(context.Background())
}

func (i BackendAddressPoolResponseArgs) ToBackendAddressPoolResponseOutputWithContext(ctx context.Context) BackendAddressPoolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolResponseOutput)
}

// BackendAddressPoolResponseArrayInput is an input type that accepts BackendAddressPoolResponseArray and BackendAddressPoolResponseArrayOutput values.
// You can construct a concrete instance of `BackendAddressPoolResponseArrayInput` via:
//
//          BackendAddressPoolResponseArray{ BackendAddressPoolResponseArgs{...} }
type BackendAddressPoolResponseArrayInput interface {
	pulumi.Input

	ToBackendAddressPoolResponseArrayOutput() BackendAddressPoolResponseArrayOutput
	ToBackendAddressPoolResponseArrayOutputWithContext(context.Context) BackendAddressPoolResponseArrayOutput
}

type BackendAddressPoolResponseArray []BackendAddressPoolResponseInput

func (BackendAddressPoolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPoolResponse)(nil)).Elem()
}

func (i BackendAddressPoolResponseArray) ToBackendAddressPoolResponseArrayOutput() BackendAddressPoolResponseArrayOutput {
	return i.ToBackendAddressPoolResponseArrayOutputWithContext(context.Background())
}

func (i BackendAddressPoolResponseArray) ToBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) BackendAddressPoolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackendAddressPoolResponseArrayOutput)
}

// Pool of backend IP addresses.
type BackendAddressPoolResponseOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackendAddressPoolResponse)(nil)).Elem()
}

func (o BackendAddressPoolResponseOutput) ToBackendAddressPoolResponseOutput() BackendAddressPoolResponseOutput {
	return o
}

func (o BackendAddressPoolResponseOutput) ToBackendAddressPoolResponseOutputWithContext(ctx context.Context) BackendAddressPoolResponseOutput {
	return o
}

// Gets collection of references to IP addresses defined in network interfaces.
func (o BackendAddressPoolResponseOutput) BackendIPConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfigurations
	}).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o BackendAddressPoolResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o BackendAddressPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets load balancing rules that use this backend address pool.
func (o BackendAddressPoolResponseOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) []SubResourceResponse { return v.LoadBalancingRules }).(SubResourceResponseArrayOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o BackendAddressPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets outbound rules that use this backend address pool.
func (o BackendAddressPoolResponseOutput) OutboundNatRule() SubResourceResponseOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) SubResourceResponse { return v.OutboundNatRule }).(SubResourceResponseOutput)
}

// Get provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o BackendAddressPoolResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackendAddressPoolResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type BackendAddressPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (BackendAddressPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackendAddressPoolResponse)(nil)).Elem()
}

func (o BackendAddressPoolResponseArrayOutput) ToBackendAddressPoolResponseArrayOutput() BackendAddressPoolResponseArrayOutput {
	return o
}

func (o BackendAddressPoolResponseArrayOutput) ToBackendAddressPoolResponseArrayOutputWithContext(ctx context.Context) BackendAddressPoolResponseArrayOutput {
	return o
}

func (o BackendAddressPoolResponseArrayOutput) Index(i pulumi.IntInput) BackendAddressPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackendAddressPoolResponse {
		return vs[0].([]BackendAddressPoolResponse)[vs[1].(int)]
	}).(BackendAddressPoolResponseOutput)
}

// BGP peer status details
type BgpPeerStatusResponse struct {
	// The autonomous system number of the remote BGP peer
	Asn int `pulumi:"asn"`
	// For how long the peering has been up
	ConnectedDuration string `pulumi:"connectedDuration"`
	// The virtual network gateway's local address
	LocalAddress string `pulumi:"localAddress"`
	// The number of BGP messages received
	MessagesReceived int `pulumi:"messagesReceived"`
	// The number of BGP messages sent
	MessagesSent int `pulumi:"messagesSent"`
	// The remote BGP peer
	Neighbor string `pulumi:"neighbor"`
	// The number of routes learned from this peer
	RoutesReceived int `pulumi:"routesReceived"`
	// The BGP peer state
	State string `pulumi:"state"`
}

// BgpPeerStatusResponseInput is an input type that accepts BgpPeerStatusResponseArgs and BgpPeerStatusResponseOutput values.
// You can construct a concrete instance of `BgpPeerStatusResponseInput` via:
//
//          BgpPeerStatusResponseArgs{...}
type BgpPeerStatusResponseInput interface {
	pulumi.Input

	ToBgpPeerStatusResponseOutput() BgpPeerStatusResponseOutput
	ToBgpPeerStatusResponseOutputWithContext(context.Context) BgpPeerStatusResponseOutput
}

// BGP peer status details
type BgpPeerStatusResponseArgs struct {
	// The autonomous system number of the remote BGP peer
	Asn pulumi.IntInput `pulumi:"asn"`
	// For how long the peering has been up
	ConnectedDuration pulumi.StringInput `pulumi:"connectedDuration"`
	// The virtual network gateway's local address
	LocalAddress pulumi.StringInput `pulumi:"localAddress"`
	// The number of BGP messages received
	MessagesReceived pulumi.IntInput `pulumi:"messagesReceived"`
	// The number of BGP messages sent
	MessagesSent pulumi.IntInput `pulumi:"messagesSent"`
	// The remote BGP peer
	Neighbor pulumi.StringInput `pulumi:"neighbor"`
	// The number of routes learned from this peer
	RoutesReceived pulumi.IntInput `pulumi:"routesReceived"`
	// The BGP peer state
	State pulumi.StringInput `pulumi:"state"`
}

func (BgpPeerStatusResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpPeerStatusResponse)(nil)).Elem()
}

func (i BgpPeerStatusResponseArgs) ToBgpPeerStatusResponseOutput() BgpPeerStatusResponseOutput {
	return i.ToBgpPeerStatusResponseOutputWithContext(context.Background())
}

func (i BgpPeerStatusResponseArgs) ToBgpPeerStatusResponseOutputWithContext(ctx context.Context) BgpPeerStatusResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpPeerStatusResponseOutput)
}

// BgpPeerStatusResponseArrayInput is an input type that accepts BgpPeerStatusResponseArray and BgpPeerStatusResponseArrayOutput values.
// You can construct a concrete instance of `BgpPeerStatusResponseArrayInput` via:
//
//          BgpPeerStatusResponseArray{ BgpPeerStatusResponseArgs{...} }
type BgpPeerStatusResponseArrayInput interface {
	pulumi.Input

	ToBgpPeerStatusResponseArrayOutput() BgpPeerStatusResponseArrayOutput
	ToBgpPeerStatusResponseArrayOutputWithContext(context.Context) BgpPeerStatusResponseArrayOutput
}

type BgpPeerStatusResponseArray []BgpPeerStatusResponseInput

func (BgpPeerStatusResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpPeerStatusResponse)(nil)).Elem()
}

func (i BgpPeerStatusResponseArray) ToBgpPeerStatusResponseArrayOutput() BgpPeerStatusResponseArrayOutput {
	return i.ToBgpPeerStatusResponseArrayOutputWithContext(context.Background())
}

func (i BgpPeerStatusResponseArray) ToBgpPeerStatusResponseArrayOutputWithContext(ctx context.Context) BgpPeerStatusResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpPeerStatusResponseArrayOutput)
}

// BGP peer status details
type BgpPeerStatusResponseOutput struct{ *pulumi.OutputState }

func (BgpPeerStatusResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpPeerStatusResponse)(nil)).Elem()
}

func (o BgpPeerStatusResponseOutput) ToBgpPeerStatusResponseOutput() BgpPeerStatusResponseOutput {
	return o
}

func (o BgpPeerStatusResponseOutput) ToBgpPeerStatusResponseOutputWithContext(ctx context.Context) BgpPeerStatusResponseOutput {
	return o
}

// The autonomous system number of the remote BGP peer
func (o BgpPeerStatusResponseOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) int { return v.Asn }).(pulumi.IntOutput)
}

// For how long the peering has been up
func (o BgpPeerStatusResponseOutput) ConnectedDuration() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) string { return v.ConnectedDuration }).(pulumi.StringOutput)
}

// The virtual network gateway's local address
func (o BgpPeerStatusResponseOutput) LocalAddress() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) string { return v.LocalAddress }).(pulumi.StringOutput)
}

// The number of BGP messages received
func (o BgpPeerStatusResponseOutput) MessagesReceived() pulumi.IntOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) int { return v.MessagesReceived }).(pulumi.IntOutput)
}

// The number of BGP messages sent
func (o BgpPeerStatusResponseOutput) MessagesSent() pulumi.IntOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) int { return v.MessagesSent }).(pulumi.IntOutput)
}

// The remote BGP peer
func (o BgpPeerStatusResponseOutput) Neighbor() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) string { return v.Neighbor }).(pulumi.StringOutput)
}

// The number of routes learned from this peer
func (o BgpPeerStatusResponseOutput) RoutesReceived() pulumi.IntOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) int { return v.RoutesReceived }).(pulumi.IntOutput)
}

// The BGP peer state
func (o BgpPeerStatusResponseOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v BgpPeerStatusResponse) string { return v.State }).(pulumi.StringOutput)
}

type BgpPeerStatusResponseArrayOutput struct{ *pulumi.OutputState }

func (BgpPeerStatusResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BgpPeerStatusResponse)(nil)).Elem()
}

func (o BgpPeerStatusResponseArrayOutput) ToBgpPeerStatusResponseArrayOutput() BgpPeerStatusResponseArrayOutput {
	return o
}

func (o BgpPeerStatusResponseArrayOutput) ToBgpPeerStatusResponseArrayOutputWithContext(ctx context.Context) BgpPeerStatusResponseArrayOutput {
	return o
}

func (o BgpPeerStatusResponseArrayOutput) Index(i pulumi.IntInput) BgpPeerStatusResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BgpPeerStatusResponse {
		return vs[0].([]BgpPeerStatusResponse)[vs[1].(int)]
	}).(BgpPeerStatusResponseOutput)
}

// BGP settings details
type BgpSettings struct {
	// The BGP speaker's ASN.
	Asn *int `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress *string `pulumi:"bgpPeeringAddress"`
	// The weight added to routes learned from this BGP speaker.
	PeerWeight *int `pulumi:"peerWeight"`
}

// BgpSettingsInput is an input type that accepts BgpSettingsArgs and BgpSettingsOutput values.
// You can construct a concrete instance of `BgpSettingsInput` via:
//
//          BgpSettingsArgs{...}
type BgpSettingsInput interface {
	pulumi.Input

	ToBgpSettingsOutput() BgpSettingsOutput
	ToBgpSettingsOutputWithContext(context.Context) BgpSettingsOutput
}

// BGP settings details
type BgpSettingsArgs struct {
	// The BGP speaker's ASN.
	Asn pulumi.IntPtrInput `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress pulumi.StringPtrInput `pulumi:"bgpPeeringAddress"`
	// The weight added to routes learned from this BGP speaker.
	PeerWeight pulumi.IntPtrInput `pulumi:"peerWeight"`
}

func (BgpSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettings)(nil)).Elem()
}

func (i BgpSettingsArgs) ToBgpSettingsOutput() BgpSettingsOutput {
	return i.ToBgpSettingsOutputWithContext(context.Background())
}

func (i BgpSettingsArgs) ToBgpSettingsOutputWithContext(ctx context.Context) BgpSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsOutput)
}

func (i BgpSettingsArgs) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return i.ToBgpSettingsPtrOutputWithContext(context.Background())
}

func (i BgpSettingsArgs) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsOutput).ToBgpSettingsPtrOutputWithContext(ctx)
}

// BgpSettingsPtrInput is an input type that accepts BgpSettingsArgs, BgpSettingsPtr and BgpSettingsPtrOutput values.
// You can construct a concrete instance of `BgpSettingsPtrInput` via:
//
//          BgpSettingsArgs{...}
//
//  or:
//
//          nil
type BgpSettingsPtrInput interface {
	pulumi.Input

	ToBgpSettingsPtrOutput() BgpSettingsPtrOutput
	ToBgpSettingsPtrOutputWithContext(context.Context) BgpSettingsPtrOutput
}

type bgpSettingsPtrType BgpSettingsArgs

func BgpSettingsPtr(v *BgpSettingsArgs) BgpSettingsPtrInput {
	return (*bgpSettingsPtrType)(v)
}

func (*bgpSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettings)(nil)).Elem()
}

func (i *bgpSettingsPtrType) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return i.ToBgpSettingsPtrOutputWithContext(context.Background())
}

func (i *bgpSettingsPtrType) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsPtrOutput)
}

// BGP settings details
type BgpSettingsOutput struct{ *pulumi.OutputState }

func (BgpSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettings)(nil)).Elem()
}

func (o BgpSettingsOutput) ToBgpSettingsOutput() BgpSettingsOutput {
	return o
}

func (o BgpSettingsOutput) ToBgpSettingsOutputWithContext(ctx context.Context) BgpSettingsOutput {
	return o
}

func (o BgpSettingsOutput) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return o.ToBgpSettingsPtrOutputWithContext(context.Background())
}

func (o BgpSettingsOutput) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return o.ApplyT(func(v BgpSettings) *BgpSettings {
		return &v
	}).(BgpSettingsPtrOutput)
}

// The BGP speaker's ASN.
func (o BgpSettingsOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpSettings) *int { return v.Asn }).(pulumi.IntPtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o BgpSettingsOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpSettings) *string { return v.BgpPeeringAddress }).(pulumi.StringPtrOutput)
}

// The weight added to routes learned from this BGP speaker.
func (o BgpSettingsOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpSettings) *int { return v.PeerWeight }).(pulumi.IntPtrOutput)
}

type BgpSettingsPtrOutput struct{ *pulumi.OutputState }

func (BgpSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettings)(nil)).Elem()
}

func (o BgpSettingsPtrOutput) ToBgpSettingsPtrOutput() BgpSettingsPtrOutput {
	return o
}

func (o BgpSettingsPtrOutput) ToBgpSettingsPtrOutputWithContext(ctx context.Context) BgpSettingsPtrOutput {
	return o
}

func (o BgpSettingsPtrOutput) Elem() BgpSettingsOutput {
	return o.ApplyT(func(v *BgpSettings) BgpSettings { return *v }).(BgpSettingsOutput)
}

// The BGP speaker's ASN.
func (o BgpSettingsPtrOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpSettings) *int {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.IntPtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o BgpSettingsPtrOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpSettings) *string {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddress
	}).(pulumi.StringPtrOutput)
}

// The weight added to routes learned from this BGP speaker.
func (o BgpSettingsPtrOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpSettings) *int {
		if v == nil {
			return nil
		}
		return v.PeerWeight
	}).(pulumi.IntPtrOutput)
}

// BGP settings details
type BgpSettingsResponse struct {
	// The BGP speaker's ASN.
	Asn *int `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress *string `pulumi:"bgpPeeringAddress"`
	// The weight added to routes learned from this BGP speaker.
	PeerWeight *int `pulumi:"peerWeight"`
}

// BgpSettingsResponseInput is an input type that accepts BgpSettingsResponseArgs and BgpSettingsResponseOutput values.
// You can construct a concrete instance of `BgpSettingsResponseInput` via:
//
//          BgpSettingsResponseArgs{...}
type BgpSettingsResponseInput interface {
	pulumi.Input

	ToBgpSettingsResponseOutput() BgpSettingsResponseOutput
	ToBgpSettingsResponseOutputWithContext(context.Context) BgpSettingsResponseOutput
}

// BGP settings details
type BgpSettingsResponseArgs struct {
	// The BGP speaker's ASN.
	Asn pulumi.IntPtrInput `pulumi:"asn"`
	// The BGP peering address and BGP identifier of this BGP speaker.
	BgpPeeringAddress pulumi.StringPtrInput `pulumi:"bgpPeeringAddress"`
	// The weight added to routes learned from this BGP speaker.
	PeerWeight pulumi.IntPtrInput `pulumi:"peerWeight"`
}

func (BgpSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettingsResponse)(nil)).Elem()
}

func (i BgpSettingsResponseArgs) ToBgpSettingsResponseOutput() BgpSettingsResponseOutput {
	return i.ToBgpSettingsResponseOutputWithContext(context.Background())
}

func (i BgpSettingsResponseArgs) ToBgpSettingsResponseOutputWithContext(ctx context.Context) BgpSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsResponseOutput)
}

func (i BgpSettingsResponseArgs) ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput {
	return i.ToBgpSettingsResponsePtrOutputWithContext(context.Background())
}

func (i BgpSettingsResponseArgs) ToBgpSettingsResponsePtrOutputWithContext(ctx context.Context) BgpSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsResponseOutput).ToBgpSettingsResponsePtrOutputWithContext(ctx)
}

// BgpSettingsResponsePtrInput is an input type that accepts BgpSettingsResponseArgs, BgpSettingsResponsePtr and BgpSettingsResponsePtrOutput values.
// You can construct a concrete instance of `BgpSettingsResponsePtrInput` via:
//
//          BgpSettingsResponseArgs{...}
//
//  or:
//
//          nil
type BgpSettingsResponsePtrInput interface {
	pulumi.Input

	ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput
	ToBgpSettingsResponsePtrOutputWithContext(context.Context) BgpSettingsResponsePtrOutput
}

type bgpSettingsResponsePtrType BgpSettingsResponseArgs

func BgpSettingsResponsePtr(v *BgpSettingsResponseArgs) BgpSettingsResponsePtrInput {
	return (*bgpSettingsResponsePtrType)(v)
}

func (*bgpSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettingsResponse)(nil)).Elem()
}

func (i *bgpSettingsResponsePtrType) ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput {
	return i.ToBgpSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *bgpSettingsResponsePtrType) ToBgpSettingsResponsePtrOutputWithContext(ctx context.Context) BgpSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BgpSettingsResponsePtrOutput)
}

// BGP settings details
type BgpSettingsResponseOutput struct{ *pulumi.OutputState }

func (BgpSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BgpSettingsResponse)(nil)).Elem()
}

func (o BgpSettingsResponseOutput) ToBgpSettingsResponseOutput() BgpSettingsResponseOutput {
	return o
}

func (o BgpSettingsResponseOutput) ToBgpSettingsResponseOutputWithContext(ctx context.Context) BgpSettingsResponseOutput {
	return o
}

func (o BgpSettingsResponseOutput) ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput {
	return o.ToBgpSettingsResponsePtrOutputWithContext(context.Background())
}

func (o BgpSettingsResponseOutput) ToBgpSettingsResponsePtrOutputWithContext(ctx context.Context) BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v BgpSettingsResponse) *BgpSettingsResponse {
		return &v
	}).(BgpSettingsResponsePtrOutput)
}

// The BGP speaker's ASN.
func (o BgpSettingsResponseOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpSettingsResponse) *int { return v.Asn }).(pulumi.IntPtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o BgpSettingsResponseOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BgpSettingsResponse) *string { return v.BgpPeeringAddress }).(pulumi.StringPtrOutput)
}

// The weight added to routes learned from this BGP speaker.
func (o BgpSettingsResponseOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BgpSettingsResponse) *int { return v.PeerWeight }).(pulumi.IntPtrOutput)
}

type BgpSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (BgpSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BgpSettingsResponse)(nil)).Elem()
}

func (o BgpSettingsResponsePtrOutput) ToBgpSettingsResponsePtrOutput() BgpSettingsResponsePtrOutput {
	return o
}

func (o BgpSettingsResponsePtrOutput) ToBgpSettingsResponsePtrOutputWithContext(ctx context.Context) BgpSettingsResponsePtrOutput {
	return o
}

func (o BgpSettingsResponsePtrOutput) Elem() BgpSettingsResponseOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) BgpSettingsResponse { return *v }).(BgpSettingsResponseOutput)
}

// The BGP speaker's ASN.
func (o BgpSettingsResponsePtrOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.Asn
	}).(pulumi.IntPtrOutput)
}

// The BGP peering address and BGP identifier of this BGP speaker.
func (o BgpSettingsResponsePtrOutput) BgpPeeringAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.BgpPeeringAddress
	}).(pulumi.StringPtrOutput)
}

// The weight added to routes learned from this BGP speaker.
func (o BgpSettingsResponsePtrOutput) PeerWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BgpSettingsResponse) *int {
		if v == nil {
			return nil
		}
		return v.PeerWeight
	}).(pulumi.IntPtrOutput)
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestination struct {
	// Address of the connection monitor destination (IP or domain name).
	Address *string `pulumi:"address"`
	// The destination port used by connection monitor.
	Port *int `pulumi:"port"`
	// The ID of the resource used as the destination by connection monitor.
	ResourceId *string `pulumi:"resourceId"`
}

// ConnectionMonitorDestinationInput is an input type that accepts ConnectionMonitorDestinationArgs and ConnectionMonitorDestinationOutput values.
// You can construct a concrete instance of `ConnectionMonitorDestinationInput` via:
//
//          ConnectionMonitorDestinationArgs{...}
type ConnectionMonitorDestinationInput interface {
	pulumi.Input

	ToConnectionMonitorDestinationOutput() ConnectionMonitorDestinationOutput
	ToConnectionMonitorDestinationOutputWithContext(context.Context) ConnectionMonitorDestinationOutput
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestinationArgs struct {
	// Address of the connection monitor destination (IP or domain name).
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The destination port used by connection monitor.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The ID of the resource used as the destination by connection monitor.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ConnectionMonitorDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorDestination)(nil)).Elem()
}

func (i ConnectionMonitorDestinationArgs) ToConnectionMonitorDestinationOutput() ConnectionMonitorDestinationOutput {
	return i.ToConnectionMonitorDestinationOutputWithContext(context.Background())
}

func (i ConnectionMonitorDestinationArgs) ToConnectionMonitorDestinationOutputWithContext(ctx context.Context) ConnectionMonitorDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationOutput)
}

func (i ConnectionMonitorDestinationArgs) ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput {
	return i.ToConnectionMonitorDestinationPtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorDestinationArgs) ToConnectionMonitorDestinationPtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationOutput).ToConnectionMonitorDestinationPtrOutputWithContext(ctx)
}

// ConnectionMonitorDestinationPtrInput is an input type that accepts ConnectionMonitorDestinationArgs, ConnectionMonitorDestinationPtr and ConnectionMonitorDestinationPtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorDestinationPtrInput` via:
//
//          ConnectionMonitorDestinationArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorDestinationPtrInput interface {
	pulumi.Input

	ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput
	ToConnectionMonitorDestinationPtrOutputWithContext(context.Context) ConnectionMonitorDestinationPtrOutput
}

type connectionMonitorDestinationPtrType ConnectionMonitorDestinationArgs

func ConnectionMonitorDestinationPtr(v *ConnectionMonitorDestinationArgs) ConnectionMonitorDestinationPtrInput {
	return (*connectionMonitorDestinationPtrType)(v)
}

func (*connectionMonitorDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorDestination)(nil)).Elem()
}

func (i *connectionMonitorDestinationPtrType) ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput {
	return i.ToConnectionMonitorDestinationPtrOutputWithContext(context.Background())
}

func (i *connectionMonitorDestinationPtrType) ToConnectionMonitorDestinationPtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationPtrOutput)
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestinationOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorDestination)(nil)).Elem()
}

func (o ConnectionMonitorDestinationOutput) ToConnectionMonitorDestinationOutput() ConnectionMonitorDestinationOutput {
	return o
}

func (o ConnectionMonitorDestinationOutput) ToConnectionMonitorDestinationOutputWithContext(ctx context.Context) ConnectionMonitorDestinationOutput {
	return o
}

func (o ConnectionMonitorDestinationOutput) ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput {
	return o.ToConnectionMonitorDestinationPtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorDestinationOutput) ToConnectionMonitorDestinationPtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestination) *ConnectionMonitorDestination {
		return &v
	}).(ConnectionMonitorDestinationPtrOutput)
}

// Address of the connection monitor destination (IP or domain name).
func (o ConnectionMonitorDestinationOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestination) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The destination port used by connection monitor.
func (o ConnectionMonitorDestinationOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestination) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the destination by connection monitor.
func (o ConnectionMonitorDestinationOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestination) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorDestinationPtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorDestination)(nil)).Elem()
}

func (o ConnectionMonitorDestinationPtrOutput) ToConnectionMonitorDestinationPtrOutput() ConnectionMonitorDestinationPtrOutput {
	return o
}

func (o ConnectionMonitorDestinationPtrOutput) ToConnectionMonitorDestinationPtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationPtrOutput {
	return o
}

func (o ConnectionMonitorDestinationPtrOutput) Elem() ConnectionMonitorDestinationOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestination) ConnectionMonitorDestination { return *v }).(ConnectionMonitorDestinationOutput)
}

// Address of the connection monitor destination (IP or domain name).
func (o ConnectionMonitorDestinationPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestination) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The destination port used by connection monitor.
func (o ConnectionMonitorDestinationPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestination) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the destination by connection monitor.
func (o ConnectionMonitorDestinationPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestination) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestinationResponse struct {
	// Address of the connection monitor destination (IP or domain name).
	Address *string `pulumi:"address"`
	// The destination port used by connection monitor.
	Port *int `pulumi:"port"`
	// The ID of the resource used as the destination by connection monitor.
	ResourceId *string `pulumi:"resourceId"`
}

// ConnectionMonitorDestinationResponseInput is an input type that accepts ConnectionMonitorDestinationResponseArgs and ConnectionMonitorDestinationResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorDestinationResponseInput` via:
//
//          ConnectionMonitorDestinationResponseArgs{...}
type ConnectionMonitorDestinationResponseInput interface {
	pulumi.Input

	ToConnectionMonitorDestinationResponseOutput() ConnectionMonitorDestinationResponseOutput
	ToConnectionMonitorDestinationResponseOutputWithContext(context.Context) ConnectionMonitorDestinationResponseOutput
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestinationResponseArgs struct {
	// Address of the connection monitor destination (IP or domain name).
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The destination port used by connection monitor.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The ID of the resource used as the destination by connection monitor.
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
}

func (ConnectionMonitorDestinationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorDestinationResponse)(nil)).Elem()
}

func (i ConnectionMonitorDestinationResponseArgs) ToConnectionMonitorDestinationResponseOutput() ConnectionMonitorDestinationResponseOutput {
	return i.ToConnectionMonitorDestinationResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorDestinationResponseArgs) ToConnectionMonitorDestinationResponseOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationResponseOutput)
}

func (i ConnectionMonitorDestinationResponseArgs) ToConnectionMonitorDestinationResponsePtrOutput() ConnectionMonitorDestinationResponsePtrOutput {
	return i.ToConnectionMonitorDestinationResponsePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorDestinationResponseArgs) ToConnectionMonitorDestinationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationResponseOutput).ToConnectionMonitorDestinationResponsePtrOutputWithContext(ctx)
}

// ConnectionMonitorDestinationResponsePtrInput is an input type that accepts ConnectionMonitorDestinationResponseArgs, ConnectionMonitorDestinationResponsePtr and ConnectionMonitorDestinationResponsePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorDestinationResponsePtrInput` via:
//
//          ConnectionMonitorDestinationResponseArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorDestinationResponsePtrInput interface {
	pulumi.Input

	ToConnectionMonitorDestinationResponsePtrOutput() ConnectionMonitorDestinationResponsePtrOutput
	ToConnectionMonitorDestinationResponsePtrOutputWithContext(context.Context) ConnectionMonitorDestinationResponsePtrOutput
}

type connectionMonitorDestinationResponsePtrType ConnectionMonitorDestinationResponseArgs

func ConnectionMonitorDestinationResponsePtr(v *ConnectionMonitorDestinationResponseArgs) ConnectionMonitorDestinationResponsePtrInput {
	return (*connectionMonitorDestinationResponsePtrType)(v)
}

func (*connectionMonitorDestinationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorDestinationResponse)(nil)).Elem()
}

func (i *connectionMonitorDestinationResponsePtrType) ToConnectionMonitorDestinationResponsePtrOutput() ConnectionMonitorDestinationResponsePtrOutput {
	return i.ToConnectionMonitorDestinationResponsePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorDestinationResponsePtrType) ToConnectionMonitorDestinationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorDestinationResponsePtrOutput)
}

// Describes the destination of connection monitor.
type ConnectionMonitorDestinationResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorDestinationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorDestinationResponse)(nil)).Elem()
}

func (o ConnectionMonitorDestinationResponseOutput) ToConnectionMonitorDestinationResponseOutput() ConnectionMonitorDestinationResponseOutput {
	return o
}

func (o ConnectionMonitorDestinationResponseOutput) ToConnectionMonitorDestinationResponseOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponseOutput {
	return o
}

func (o ConnectionMonitorDestinationResponseOutput) ToConnectionMonitorDestinationResponsePtrOutput() ConnectionMonitorDestinationResponsePtrOutput {
	return o.ToConnectionMonitorDestinationResponsePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorDestinationResponseOutput) ToConnectionMonitorDestinationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestinationResponse) *ConnectionMonitorDestinationResponse {
		return &v
	}).(ConnectionMonitorDestinationResponsePtrOutput)
}

// Address of the connection monitor destination (IP or domain name).
func (o ConnectionMonitorDestinationResponseOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestinationResponse) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The destination port used by connection monitor.
func (o ConnectionMonitorDestinationResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestinationResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the destination by connection monitor.
func (o ConnectionMonitorDestinationResponseOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorDestinationResponse) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ConnectionMonitorDestinationResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorDestinationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorDestinationResponse)(nil)).Elem()
}

func (o ConnectionMonitorDestinationResponsePtrOutput) ToConnectionMonitorDestinationResponsePtrOutput() ConnectionMonitorDestinationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorDestinationResponsePtrOutput) ToConnectionMonitorDestinationResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorDestinationResponsePtrOutput {
	return o
}

func (o ConnectionMonitorDestinationResponsePtrOutput) Elem() ConnectionMonitorDestinationResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestinationResponse) ConnectionMonitorDestinationResponse { return *v }).(ConnectionMonitorDestinationResponseOutput)
}

// Address of the connection monitor destination (IP or domain name).
func (o ConnectionMonitorDestinationResponsePtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestinationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The destination port used by connection monitor.
func (o ConnectionMonitorDestinationResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestinationResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the destination by connection monitor.
func (o ConnectionMonitorDestinationResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorDestinationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Describes the source of connection monitor.
type ConnectionMonitorSource struct {
	// The source port used by connection monitor.
	Port *int `pulumi:"port"`
	// The ID of the resource used as the source by connection monitor.
	ResourceId string `pulumi:"resourceId"`
}

// ConnectionMonitorSourceInput is an input type that accepts ConnectionMonitorSourceArgs and ConnectionMonitorSourceOutput values.
// You can construct a concrete instance of `ConnectionMonitorSourceInput` via:
//
//          ConnectionMonitorSourceArgs{...}
type ConnectionMonitorSourceInput interface {
	pulumi.Input

	ToConnectionMonitorSourceOutput() ConnectionMonitorSourceOutput
	ToConnectionMonitorSourceOutputWithContext(context.Context) ConnectionMonitorSourceOutput
}

// Describes the source of connection monitor.
type ConnectionMonitorSourceArgs struct {
	// The source port used by connection monitor.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The ID of the resource used as the source by connection monitor.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (ConnectionMonitorSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSource)(nil)).Elem()
}

func (i ConnectionMonitorSourceArgs) ToConnectionMonitorSourceOutput() ConnectionMonitorSourceOutput {
	return i.ToConnectionMonitorSourceOutputWithContext(context.Background())
}

func (i ConnectionMonitorSourceArgs) ToConnectionMonitorSourceOutputWithContext(ctx context.Context) ConnectionMonitorSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourceOutput)
}

func (i ConnectionMonitorSourceArgs) ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput {
	return i.ToConnectionMonitorSourcePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorSourceArgs) ToConnectionMonitorSourcePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourceOutput).ToConnectionMonitorSourcePtrOutputWithContext(ctx)
}

// ConnectionMonitorSourcePtrInput is an input type that accepts ConnectionMonitorSourceArgs, ConnectionMonitorSourcePtr and ConnectionMonitorSourcePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorSourcePtrInput` via:
//
//          ConnectionMonitorSourceArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorSourcePtrInput interface {
	pulumi.Input

	ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput
	ToConnectionMonitorSourcePtrOutputWithContext(context.Context) ConnectionMonitorSourcePtrOutput
}

type connectionMonitorSourcePtrType ConnectionMonitorSourceArgs

func ConnectionMonitorSourcePtr(v *ConnectionMonitorSourceArgs) ConnectionMonitorSourcePtrInput {
	return (*connectionMonitorSourcePtrType)(v)
}

func (*connectionMonitorSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSource)(nil)).Elem()
}

func (i *connectionMonitorSourcePtrType) ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput {
	return i.ToConnectionMonitorSourcePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorSourcePtrType) ToConnectionMonitorSourcePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourcePtrOutput)
}

// Describes the source of connection monitor.
type ConnectionMonitorSourceOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSource)(nil)).Elem()
}

func (o ConnectionMonitorSourceOutput) ToConnectionMonitorSourceOutput() ConnectionMonitorSourceOutput {
	return o
}

func (o ConnectionMonitorSourceOutput) ToConnectionMonitorSourceOutputWithContext(ctx context.Context) ConnectionMonitorSourceOutput {
	return o
}

func (o ConnectionMonitorSourceOutput) ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput {
	return o.ToConnectionMonitorSourcePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorSourceOutput) ToConnectionMonitorSourcePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourcePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSource) *ConnectionMonitorSource {
		return &v
	}).(ConnectionMonitorSourcePtrOutput)
}

// The source port used by connection monitor.
func (o ConnectionMonitorSourceOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSource) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the source by connection monitor.
func (o ConnectionMonitorSourceOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorSource) string { return v.ResourceId }).(pulumi.StringOutput)
}

type ConnectionMonitorSourcePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSource)(nil)).Elem()
}

func (o ConnectionMonitorSourcePtrOutput) ToConnectionMonitorSourcePtrOutput() ConnectionMonitorSourcePtrOutput {
	return o
}

func (o ConnectionMonitorSourcePtrOutput) ToConnectionMonitorSourcePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourcePtrOutput {
	return o
}

func (o ConnectionMonitorSourcePtrOutput) Elem() ConnectionMonitorSourceOutput {
	return o.ApplyT(func(v *ConnectionMonitorSource) ConnectionMonitorSource { return *v }).(ConnectionMonitorSourceOutput)
}

// The source port used by connection monitor.
func (o ConnectionMonitorSourcePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSource) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the source by connection monitor.
func (o ConnectionMonitorSourcePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSource) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// Describes the source of connection monitor.
type ConnectionMonitorSourceResponse struct {
	// The source port used by connection monitor.
	Port *int `pulumi:"port"`
	// The ID of the resource used as the source by connection monitor.
	ResourceId string `pulumi:"resourceId"`
}

// ConnectionMonitorSourceResponseInput is an input type that accepts ConnectionMonitorSourceResponseArgs and ConnectionMonitorSourceResponseOutput values.
// You can construct a concrete instance of `ConnectionMonitorSourceResponseInput` via:
//
//          ConnectionMonitorSourceResponseArgs{...}
type ConnectionMonitorSourceResponseInput interface {
	pulumi.Input

	ToConnectionMonitorSourceResponseOutput() ConnectionMonitorSourceResponseOutput
	ToConnectionMonitorSourceResponseOutputWithContext(context.Context) ConnectionMonitorSourceResponseOutput
}

// Describes the source of connection monitor.
type ConnectionMonitorSourceResponseArgs struct {
	// The source port used by connection monitor.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The ID of the resource used as the source by connection monitor.
	ResourceId pulumi.StringInput `pulumi:"resourceId"`
}

func (ConnectionMonitorSourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSourceResponse)(nil)).Elem()
}

func (i ConnectionMonitorSourceResponseArgs) ToConnectionMonitorSourceResponseOutput() ConnectionMonitorSourceResponseOutput {
	return i.ToConnectionMonitorSourceResponseOutputWithContext(context.Background())
}

func (i ConnectionMonitorSourceResponseArgs) ToConnectionMonitorSourceResponseOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourceResponseOutput)
}

func (i ConnectionMonitorSourceResponseArgs) ToConnectionMonitorSourceResponsePtrOutput() ConnectionMonitorSourceResponsePtrOutput {
	return i.ToConnectionMonitorSourceResponsePtrOutputWithContext(context.Background())
}

func (i ConnectionMonitorSourceResponseArgs) ToConnectionMonitorSourceResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourceResponseOutput).ToConnectionMonitorSourceResponsePtrOutputWithContext(ctx)
}

// ConnectionMonitorSourceResponsePtrInput is an input type that accepts ConnectionMonitorSourceResponseArgs, ConnectionMonitorSourceResponsePtr and ConnectionMonitorSourceResponsePtrOutput values.
// You can construct a concrete instance of `ConnectionMonitorSourceResponsePtrInput` via:
//
//          ConnectionMonitorSourceResponseArgs{...}
//
//  or:
//
//          nil
type ConnectionMonitorSourceResponsePtrInput interface {
	pulumi.Input

	ToConnectionMonitorSourceResponsePtrOutput() ConnectionMonitorSourceResponsePtrOutput
	ToConnectionMonitorSourceResponsePtrOutputWithContext(context.Context) ConnectionMonitorSourceResponsePtrOutput
}

type connectionMonitorSourceResponsePtrType ConnectionMonitorSourceResponseArgs

func ConnectionMonitorSourceResponsePtr(v *ConnectionMonitorSourceResponseArgs) ConnectionMonitorSourceResponsePtrInput {
	return (*connectionMonitorSourceResponsePtrType)(v)
}

func (*connectionMonitorSourceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSourceResponse)(nil)).Elem()
}

func (i *connectionMonitorSourceResponsePtrType) ToConnectionMonitorSourceResponsePtrOutput() ConnectionMonitorSourceResponsePtrOutput {
	return i.ToConnectionMonitorSourceResponsePtrOutputWithContext(context.Background())
}

func (i *connectionMonitorSourceResponsePtrType) ToConnectionMonitorSourceResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionMonitorSourceResponsePtrOutput)
}

// Describes the source of connection monitor.
type ConnectionMonitorSourceResponseOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionMonitorSourceResponse)(nil)).Elem()
}

func (o ConnectionMonitorSourceResponseOutput) ToConnectionMonitorSourceResponseOutput() ConnectionMonitorSourceResponseOutput {
	return o
}

func (o ConnectionMonitorSourceResponseOutput) ToConnectionMonitorSourceResponseOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponseOutput {
	return o
}

func (o ConnectionMonitorSourceResponseOutput) ToConnectionMonitorSourceResponsePtrOutput() ConnectionMonitorSourceResponsePtrOutput {
	return o.ToConnectionMonitorSourceResponsePtrOutputWithContext(context.Background())
}

func (o ConnectionMonitorSourceResponseOutput) ToConnectionMonitorSourceResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponsePtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSourceResponse) *ConnectionMonitorSourceResponse {
		return &v
	}).(ConnectionMonitorSourceResponsePtrOutput)
}

// The source port used by connection monitor.
func (o ConnectionMonitorSourceResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionMonitorSourceResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the source by connection monitor.
func (o ConnectionMonitorSourceResponseOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionMonitorSourceResponse) string { return v.ResourceId }).(pulumi.StringOutput)
}

type ConnectionMonitorSourceResponsePtrOutput struct{ *pulumi.OutputState }

func (ConnectionMonitorSourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionMonitorSourceResponse)(nil)).Elem()
}

func (o ConnectionMonitorSourceResponsePtrOutput) ToConnectionMonitorSourceResponsePtrOutput() ConnectionMonitorSourceResponsePtrOutput {
	return o
}

func (o ConnectionMonitorSourceResponsePtrOutput) ToConnectionMonitorSourceResponsePtrOutputWithContext(ctx context.Context) ConnectionMonitorSourceResponsePtrOutput {
	return o
}

func (o ConnectionMonitorSourceResponsePtrOutput) Elem() ConnectionMonitorSourceResponseOutput {
	return o.ApplyT(func(v *ConnectionMonitorSourceResponse) ConnectionMonitorSourceResponse { return *v }).(ConnectionMonitorSourceResponseOutput)
}

// The source port used by connection monitor.
func (o ConnectionMonitorSourceResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSourceResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The ID of the resource used as the source by connection monitor.
func (o ConnectionMonitorSourceResponsePtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionMonitorSourceResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceId
	}).(pulumi.StringPtrOutput)
}

// List of properties of the device.
type DeviceProperties struct {
	// Model of the device.
	DeviceModel *string `pulumi:"deviceModel"`
	// Name of the device Vendor.
	DeviceVendor *string `pulumi:"deviceVendor"`
	// Link speed.
	LinkSpeedInMbps *int `pulumi:"linkSpeedInMbps"`
}

// DevicePropertiesInput is an input type that accepts DevicePropertiesArgs and DevicePropertiesOutput values.
// You can construct a concrete instance of `DevicePropertiesInput` via:
//
//          DevicePropertiesArgs{...}
type DevicePropertiesInput interface {
	pulumi.Input

	ToDevicePropertiesOutput() DevicePropertiesOutput
	ToDevicePropertiesOutputWithContext(context.Context) DevicePropertiesOutput
}

// List of properties of the device.
type DevicePropertiesArgs struct {
	// Model of the device.
	DeviceModel pulumi.StringPtrInput `pulumi:"deviceModel"`
	// Name of the device Vendor.
	DeviceVendor pulumi.StringPtrInput `pulumi:"deviceVendor"`
	// Link speed.
	LinkSpeedInMbps pulumi.IntPtrInput `pulumi:"linkSpeedInMbps"`
}

func (DevicePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceProperties)(nil)).Elem()
}

func (i DevicePropertiesArgs) ToDevicePropertiesOutput() DevicePropertiesOutput {
	return i.ToDevicePropertiesOutputWithContext(context.Background())
}

func (i DevicePropertiesArgs) ToDevicePropertiesOutputWithContext(ctx context.Context) DevicePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesOutput)
}

func (i DevicePropertiesArgs) ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput {
	return i.ToDevicePropertiesPtrOutputWithContext(context.Background())
}

func (i DevicePropertiesArgs) ToDevicePropertiesPtrOutputWithContext(ctx context.Context) DevicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesOutput).ToDevicePropertiesPtrOutputWithContext(ctx)
}

// DevicePropertiesPtrInput is an input type that accepts DevicePropertiesArgs, DevicePropertiesPtr and DevicePropertiesPtrOutput values.
// You can construct a concrete instance of `DevicePropertiesPtrInput` via:
//
//          DevicePropertiesArgs{...}
//
//  or:
//
//          nil
type DevicePropertiesPtrInput interface {
	pulumi.Input

	ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput
	ToDevicePropertiesPtrOutputWithContext(context.Context) DevicePropertiesPtrOutput
}

type devicePropertiesPtrType DevicePropertiesArgs

func DevicePropertiesPtr(v *DevicePropertiesArgs) DevicePropertiesPtrInput {
	return (*devicePropertiesPtrType)(v)
}

func (*devicePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceProperties)(nil)).Elem()
}

func (i *devicePropertiesPtrType) ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput {
	return i.ToDevicePropertiesPtrOutputWithContext(context.Background())
}

func (i *devicePropertiesPtrType) ToDevicePropertiesPtrOutputWithContext(ctx context.Context) DevicePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesPtrOutput)
}

// List of properties of the device.
type DevicePropertiesOutput struct{ *pulumi.OutputState }

func (DevicePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceProperties)(nil)).Elem()
}

func (o DevicePropertiesOutput) ToDevicePropertiesOutput() DevicePropertiesOutput {
	return o
}

func (o DevicePropertiesOutput) ToDevicePropertiesOutputWithContext(ctx context.Context) DevicePropertiesOutput {
	return o
}

func (o DevicePropertiesOutput) ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput {
	return o.ToDevicePropertiesPtrOutputWithContext(context.Background())
}

func (o DevicePropertiesOutput) ToDevicePropertiesPtrOutputWithContext(ctx context.Context) DevicePropertiesPtrOutput {
	return o.ApplyT(func(v DeviceProperties) *DeviceProperties {
		return &v
	}).(DevicePropertiesPtrOutput)
}

// Model of the device.
func (o DevicePropertiesOutput) DeviceModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceProperties) *string { return v.DeviceModel }).(pulumi.StringPtrOutput)
}

// Name of the device Vendor.
func (o DevicePropertiesOutput) DeviceVendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceProperties) *string { return v.DeviceVendor }).(pulumi.StringPtrOutput)
}

// Link speed.
func (o DevicePropertiesOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeviceProperties) *int { return v.LinkSpeedInMbps }).(pulumi.IntPtrOutput)
}

type DevicePropertiesPtrOutput struct{ *pulumi.OutputState }

func (DevicePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceProperties)(nil)).Elem()
}

func (o DevicePropertiesPtrOutput) ToDevicePropertiesPtrOutput() DevicePropertiesPtrOutput {
	return o
}

func (o DevicePropertiesPtrOutput) ToDevicePropertiesPtrOutputWithContext(ctx context.Context) DevicePropertiesPtrOutput {
	return o
}

func (o DevicePropertiesPtrOutput) Elem() DevicePropertiesOutput {
	return o.ApplyT(func(v *DeviceProperties) DeviceProperties { return *v }).(DevicePropertiesOutput)
}

// Model of the device.
func (o DevicePropertiesPtrOutput) DeviceModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeviceModel
	}).(pulumi.StringPtrOutput)
}

// Name of the device Vendor.
func (o DevicePropertiesPtrOutput) DeviceVendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeviceVendor
	}).(pulumi.StringPtrOutput)
}

// Link speed.
func (o DevicePropertiesPtrOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeviceProperties) *int {
		if v == nil {
			return nil
		}
		return v.LinkSpeedInMbps
	}).(pulumi.IntPtrOutput)
}

// List of properties of the device.
type DevicePropertiesResponse struct {
	// Model of the device.
	DeviceModel *string `pulumi:"deviceModel"`
	// Name of the device Vendor.
	DeviceVendor *string `pulumi:"deviceVendor"`
	// Link speed.
	LinkSpeedInMbps *int `pulumi:"linkSpeedInMbps"`
}

// DevicePropertiesResponseInput is an input type that accepts DevicePropertiesResponseArgs and DevicePropertiesResponseOutput values.
// You can construct a concrete instance of `DevicePropertiesResponseInput` via:
//
//          DevicePropertiesResponseArgs{...}
type DevicePropertiesResponseInput interface {
	pulumi.Input

	ToDevicePropertiesResponseOutput() DevicePropertiesResponseOutput
	ToDevicePropertiesResponseOutputWithContext(context.Context) DevicePropertiesResponseOutput
}

// List of properties of the device.
type DevicePropertiesResponseArgs struct {
	// Model of the device.
	DeviceModel pulumi.StringPtrInput `pulumi:"deviceModel"`
	// Name of the device Vendor.
	DeviceVendor pulumi.StringPtrInput `pulumi:"deviceVendor"`
	// Link speed.
	LinkSpeedInMbps pulumi.IntPtrInput `pulumi:"linkSpeedInMbps"`
}

func (DevicePropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePropertiesResponse)(nil)).Elem()
}

func (i DevicePropertiesResponseArgs) ToDevicePropertiesResponseOutput() DevicePropertiesResponseOutput {
	return i.ToDevicePropertiesResponseOutputWithContext(context.Background())
}

func (i DevicePropertiesResponseArgs) ToDevicePropertiesResponseOutputWithContext(ctx context.Context) DevicePropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesResponseOutput)
}

func (i DevicePropertiesResponseArgs) ToDevicePropertiesResponsePtrOutput() DevicePropertiesResponsePtrOutput {
	return i.ToDevicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i DevicePropertiesResponseArgs) ToDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) DevicePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesResponseOutput).ToDevicePropertiesResponsePtrOutputWithContext(ctx)
}

// DevicePropertiesResponsePtrInput is an input type that accepts DevicePropertiesResponseArgs, DevicePropertiesResponsePtr and DevicePropertiesResponsePtrOutput values.
// You can construct a concrete instance of `DevicePropertiesResponsePtrInput` via:
//
//          DevicePropertiesResponseArgs{...}
//
//  or:
//
//          nil
type DevicePropertiesResponsePtrInput interface {
	pulumi.Input

	ToDevicePropertiesResponsePtrOutput() DevicePropertiesResponsePtrOutput
	ToDevicePropertiesResponsePtrOutputWithContext(context.Context) DevicePropertiesResponsePtrOutput
}

type devicePropertiesResponsePtrType DevicePropertiesResponseArgs

func DevicePropertiesResponsePtr(v *DevicePropertiesResponseArgs) DevicePropertiesResponsePtrInput {
	return (*devicePropertiesResponsePtrType)(v)
}

func (*devicePropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DevicePropertiesResponse)(nil)).Elem()
}

func (i *devicePropertiesResponsePtrType) ToDevicePropertiesResponsePtrOutput() DevicePropertiesResponsePtrOutput {
	return i.ToDevicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *devicePropertiesResponsePtrType) ToDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) DevicePropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePropertiesResponsePtrOutput)
}

// List of properties of the device.
type DevicePropertiesResponseOutput struct{ *pulumi.OutputState }

func (DevicePropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePropertiesResponse)(nil)).Elem()
}

func (o DevicePropertiesResponseOutput) ToDevicePropertiesResponseOutput() DevicePropertiesResponseOutput {
	return o
}

func (o DevicePropertiesResponseOutput) ToDevicePropertiesResponseOutputWithContext(ctx context.Context) DevicePropertiesResponseOutput {
	return o
}

func (o DevicePropertiesResponseOutput) ToDevicePropertiesResponsePtrOutput() DevicePropertiesResponsePtrOutput {
	return o.ToDevicePropertiesResponsePtrOutputWithContext(context.Background())
}

func (o DevicePropertiesResponseOutput) ToDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) DevicePropertiesResponsePtrOutput {
	return o.ApplyT(func(v DevicePropertiesResponse) *DevicePropertiesResponse {
		return &v
	}).(DevicePropertiesResponsePtrOutput)
}

// Model of the device.
func (o DevicePropertiesResponseOutput) DeviceModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePropertiesResponse) *string { return v.DeviceModel }).(pulumi.StringPtrOutput)
}

// Name of the device Vendor.
func (o DevicePropertiesResponseOutput) DeviceVendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePropertiesResponse) *string { return v.DeviceVendor }).(pulumi.StringPtrOutput)
}

// Link speed.
func (o DevicePropertiesResponseOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DevicePropertiesResponse) *int { return v.LinkSpeedInMbps }).(pulumi.IntPtrOutput)
}

type DevicePropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (DevicePropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevicePropertiesResponse)(nil)).Elem()
}

func (o DevicePropertiesResponsePtrOutput) ToDevicePropertiesResponsePtrOutput() DevicePropertiesResponsePtrOutput {
	return o
}

func (o DevicePropertiesResponsePtrOutput) ToDevicePropertiesResponsePtrOutputWithContext(ctx context.Context) DevicePropertiesResponsePtrOutput {
	return o
}

func (o DevicePropertiesResponsePtrOutput) Elem() DevicePropertiesResponseOutput {
	return o.ApplyT(func(v *DevicePropertiesResponse) DevicePropertiesResponse { return *v }).(DevicePropertiesResponseOutput)
}

// Model of the device.
func (o DevicePropertiesResponsePtrOutput) DeviceModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeviceModel
	}).(pulumi.StringPtrOutput)
}

// Name of the device Vendor.
func (o DevicePropertiesResponsePtrOutput) DeviceVendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevicePropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.DeviceVendor
	}).(pulumi.StringPtrOutput)
}

// Link speed.
func (o DevicePropertiesResponsePtrOutput) LinkSpeedInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DevicePropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.LinkSpeedInMbps
	}).(pulumi.IntPtrOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptions struct {
	// The list of DNS servers IP addresses.
	DnsServers []string `pulumi:"dnsServers"`
}

// DhcpOptionsInput is an input type that accepts DhcpOptionsArgs and DhcpOptionsOutput values.
// You can construct a concrete instance of `DhcpOptionsInput` via:
//
//          DhcpOptionsArgs{...}
type DhcpOptionsInput interface {
	pulumi.Input

	ToDhcpOptionsOutput() DhcpOptionsOutput
	ToDhcpOptionsOutputWithContext(context.Context) DhcpOptionsOutput
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsArgs struct {
	// The list of DNS servers IP addresses.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
}

func (DhcpOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptions)(nil)).Elem()
}

func (i DhcpOptionsArgs) ToDhcpOptionsOutput() DhcpOptionsOutput {
	return i.ToDhcpOptionsOutputWithContext(context.Background())
}

func (i DhcpOptionsArgs) ToDhcpOptionsOutputWithContext(ctx context.Context) DhcpOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsOutput)
}

func (i DhcpOptionsArgs) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return i.ToDhcpOptionsPtrOutputWithContext(context.Background())
}

func (i DhcpOptionsArgs) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsOutput).ToDhcpOptionsPtrOutputWithContext(ctx)
}

// DhcpOptionsPtrInput is an input type that accepts DhcpOptionsArgs, DhcpOptionsPtr and DhcpOptionsPtrOutput values.
// You can construct a concrete instance of `DhcpOptionsPtrInput` via:
//
//          DhcpOptionsArgs{...}
//
//  or:
//
//          nil
type DhcpOptionsPtrInput interface {
	pulumi.Input

	ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput
	ToDhcpOptionsPtrOutputWithContext(context.Context) DhcpOptionsPtrOutput
}

type dhcpOptionsPtrType DhcpOptionsArgs

func DhcpOptionsPtr(v *DhcpOptionsArgs) DhcpOptionsPtrInput {
	return (*dhcpOptionsPtrType)(v)
}

func (*dhcpOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOptions)(nil)).Elem()
}

func (i *dhcpOptionsPtrType) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return i.ToDhcpOptionsPtrOutputWithContext(context.Background())
}

func (i *dhcpOptionsPtrType) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsPtrOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsOutput struct{ *pulumi.OutputState }

func (DhcpOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptions)(nil)).Elem()
}

func (o DhcpOptionsOutput) ToDhcpOptionsOutput() DhcpOptionsOutput {
	return o
}

func (o DhcpOptionsOutput) ToDhcpOptionsOutputWithContext(ctx context.Context) DhcpOptionsOutput {
	return o
}

func (o DhcpOptionsOutput) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return o.ToDhcpOptionsPtrOutputWithContext(context.Background())
}

func (o DhcpOptionsOutput) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return o.ApplyT(func(v DhcpOptions) *DhcpOptions {
		return &v
	}).(DhcpOptionsPtrOutput)
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DhcpOptions) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

type DhcpOptionsPtrOutput struct{ *pulumi.OutputState }

func (DhcpOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOptions)(nil)).Elem()
}

func (o DhcpOptionsPtrOutput) ToDhcpOptionsPtrOutput() DhcpOptionsPtrOutput {
	return o
}

func (o DhcpOptionsPtrOutput) ToDhcpOptionsPtrOutputWithContext(ctx context.Context) DhcpOptionsPtrOutput {
	return o
}

func (o DhcpOptionsPtrOutput) Elem() DhcpOptionsOutput {
	return o.ApplyT(func(v *DhcpOptions) DhcpOptions { return *v }).(DhcpOptionsOutput)
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DhcpOptions) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsResponse struct {
	// The list of DNS servers IP addresses.
	DnsServers []string `pulumi:"dnsServers"`
}

// DhcpOptionsResponseInput is an input type that accepts DhcpOptionsResponseArgs and DhcpOptionsResponseOutput values.
// You can construct a concrete instance of `DhcpOptionsResponseInput` via:
//
//          DhcpOptionsResponseArgs{...}
type DhcpOptionsResponseInput interface {
	pulumi.Input

	ToDhcpOptionsResponseOutput() DhcpOptionsResponseOutput
	ToDhcpOptionsResponseOutputWithContext(context.Context) DhcpOptionsResponseOutput
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsResponseArgs struct {
	// The list of DNS servers IP addresses.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
}

func (DhcpOptionsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptionsResponse)(nil)).Elem()
}

func (i DhcpOptionsResponseArgs) ToDhcpOptionsResponseOutput() DhcpOptionsResponseOutput {
	return i.ToDhcpOptionsResponseOutputWithContext(context.Background())
}

func (i DhcpOptionsResponseArgs) ToDhcpOptionsResponseOutputWithContext(ctx context.Context) DhcpOptionsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsResponseOutput)
}

func (i DhcpOptionsResponseArgs) ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput {
	return i.ToDhcpOptionsResponsePtrOutputWithContext(context.Background())
}

func (i DhcpOptionsResponseArgs) ToDhcpOptionsResponsePtrOutputWithContext(ctx context.Context) DhcpOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsResponseOutput).ToDhcpOptionsResponsePtrOutputWithContext(ctx)
}

// DhcpOptionsResponsePtrInput is an input type that accepts DhcpOptionsResponseArgs, DhcpOptionsResponsePtr and DhcpOptionsResponsePtrOutput values.
// You can construct a concrete instance of `DhcpOptionsResponsePtrInput` via:
//
//          DhcpOptionsResponseArgs{...}
//
//  or:
//
//          nil
type DhcpOptionsResponsePtrInput interface {
	pulumi.Input

	ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput
	ToDhcpOptionsResponsePtrOutputWithContext(context.Context) DhcpOptionsResponsePtrOutput
}

type dhcpOptionsResponsePtrType DhcpOptionsResponseArgs

func DhcpOptionsResponsePtr(v *DhcpOptionsResponseArgs) DhcpOptionsResponsePtrInput {
	return (*dhcpOptionsResponsePtrType)(v)
}

func (*dhcpOptionsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOptionsResponse)(nil)).Elem()
}

func (i *dhcpOptionsResponsePtrType) ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput {
	return i.ToDhcpOptionsResponsePtrOutputWithContext(context.Background())
}

func (i *dhcpOptionsResponsePtrType) ToDhcpOptionsResponsePtrOutputWithContext(ctx context.Context) DhcpOptionsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DhcpOptionsResponsePtrOutput)
}

// DhcpOptions contains an array of DNS servers available to VMs deployed in the virtual network. Standard DHCP option for a subnet overrides VNET DHCP options.
type DhcpOptionsResponseOutput struct{ *pulumi.OutputState }

func (DhcpOptionsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DhcpOptionsResponse)(nil)).Elem()
}

func (o DhcpOptionsResponseOutput) ToDhcpOptionsResponseOutput() DhcpOptionsResponseOutput {
	return o
}

func (o DhcpOptionsResponseOutput) ToDhcpOptionsResponseOutputWithContext(ctx context.Context) DhcpOptionsResponseOutput {
	return o
}

func (o DhcpOptionsResponseOutput) ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput {
	return o.ToDhcpOptionsResponsePtrOutputWithContext(context.Background())
}

func (o DhcpOptionsResponseOutput) ToDhcpOptionsResponsePtrOutputWithContext(ctx context.Context) DhcpOptionsResponsePtrOutput {
	return o.ApplyT(func(v DhcpOptionsResponse) *DhcpOptionsResponse {
		return &v
	}).(DhcpOptionsResponsePtrOutput)
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DhcpOptionsResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

type DhcpOptionsResponsePtrOutput struct{ *pulumi.OutputState }

func (DhcpOptionsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DhcpOptionsResponse)(nil)).Elem()
}

func (o DhcpOptionsResponsePtrOutput) ToDhcpOptionsResponsePtrOutput() DhcpOptionsResponsePtrOutput {
	return o
}

func (o DhcpOptionsResponsePtrOutput) ToDhcpOptionsResponsePtrOutputWithContext(ctx context.Context) DhcpOptionsResponsePtrOutput {
	return o
}

func (o DhcpOptionsResponsePtrOutput) Elem() DhcpOptionsResponseOutput {
	return o.ApplyT(func(v *DhcpOptionsResponse) DhcpOptionsResponse { return *v }).(DhcpOptionsResponseOutput)
}

// The list of DNS servers IP addresses.
func (o DhcpOptionsResponsePtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DhcpOptionsResponse) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Class containing DNS settings in a Traffic Manager profile.
type DnsConfig struct {
	// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
	RelativeName *string `pulumi:"relativeName"`
	// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
	Ttl *int `pulumi:"ttl"`
}

// DnsConfigInput is an input type that accepts DnsConfigArgs and DnsConfigOutput values.
// You can construct a concrete instance of `DnsConfigInput` via:
//
//          DnsConfigArgs{...}
type DnsConfigInput interface {
	pulumi.Input

	ToDnsConfigOutput() DnsConfigOutput
	ToDnsConfigOutputWithContext(context.Context) DnsConfigOutput
}

// Class containing DNS settings in a Traffic Manager profile.
type DnsConfigArgs struct {
	// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
	RelativeName pulumi.StringPtrInput `pulumi:"relativeName"`
	// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
	Ttl pulumi.IntPtrInput `pulumi:"ttl"`
}

func (DnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsConfig)(nil)).Elem()
}

func (i DnsConfigArgs) ToDnsConfigOutput() DnsConfigOutput {
	return i.ToDnsConfigOutputWithContext(context.Background())
}

func (i DnsConfigArgs) ToDnsConfigOutputWithContext(ctx context.Context) DnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsConfigOutput)
}

func (i DnsConfigArgs) ToDnsConfigPtrOutput() DnsConfigPtrOutput {
	return i.ToDnsConfigPtrOutputWithContext(context.Background())
}

func (i DnsConfigArgs) ToDnsConfigPtrOutputWithContext(ctx context.Context) DnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsConfigOutput).ToDnsConfigPtrOutputWithContext(ctx)
}

// DnsConfigPtrInput is an input type that accepts DnsConfigArgs, DnsConfigPtr and DnsConfigPtrOutput values.
// You can construct a concrete instance of `DnsConfigPtrInput` via:
//
//          DnsConfigArgs{...}
//
//  or:
//
//          nil
type DnsConfigPtrInput interface {
	pulumi.Input

	ToDnsConfigPtrOutput() DnsConfigPtrOutput
	ToDnsConfigPtrOutputWithContext(context.Context) DnsConfigPtrOutput
}

type dnsConfigPtrType DnsConfigArgs

func DnsConfigPtr(v *DnsConfigArgs) DnsConfigPtrInput {
	return (*dnsConfigPtrType)(v)
}

func (*dnsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsConfig)(nil)).Elem()
}

func (i *dnsConfigPtrType) ToDnsConfigPtrOutput() DnsConfigPtrOutput {
	return i.ToDnsConfigPtrOutputWithContext(context.Background())
}

func (i *dnsConfigPtrType) ToDnsConfigPtrOutputWithContext(ctx context.Context) DnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsConfigPtrOutput)
}

// Class containing DNS settings in a Traffic Manager profile.
type DnsConfigOutput struct{ *pulumi.OutputState }

func (DnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsConfig)(nil)).Elem()
}

func (o DnsConfigOutput) ToDnsConfigOutput() DnsConfigOutput {
	return o
}

func (o DnsConfigOutput) ToDnsConfigOutputWithContext(ctx context.Context) DnsConfigOutput {
	return o
}

func (o DnsConfigOutput) ToDnsConfigPtrOutput() DnsConfigPtrOutput {
	return o.ToDnsConfigPtrOutputWithContext(context.Background())
}

func (o DnsConfigOutput) ToDnsConfigPtrOutputWithContext(ctx context.Context) DnsConfigPtrOutput {
	return o.ApplyT(func(v DnsConfig) *DnsConfig {
		return &v
	}).(DnsConfigPtrOutput)
}

// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
func (o DnsConfigOutput) RelativeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsConfig) *string { return v.RelativeName }).(pulumi.StringPtrOutput)
}

// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
func (o DnsConfigOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DnsConfig) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

type DnsConfigPtrOutput struct{ *pulumi.OutputState }

func (DnsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsConfig)(nil)).Elem()
}

func (o DnsConfigPtrOutput) ToDnsConfigPtrOutput() DnsConfigPtrOutput {
	return o
}

func (o DnsConfigPtrOutput) ToDnsConfigPtrOutputWithContext(ctx context.Context) DnsConfigPtrOutput {
	return o
}

func (o DnsConfigPtrOutput) Elem() DnsConfigOutput {
	return o.ApplyT(func(v *DnsConfig) DnsConfig { return *v }).(DnsConfigOutput)
}

// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
func (o DnsConfigPtrOutput) RelativeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsConfig) *string {
		if v == nil {
			return nil
		}
		return v.RelativeName
	}).(pulumi.StringPtrOutput)
}

// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
func (o DnsConfigPtrOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsConfig) *int {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.IntPtrOutput)
}

// Class containing DNS settings in a Traffic Manager profile.
type DnsConfigResponse struct {
	// The fully-qualified domain name (FQDN) of the Traffic Manager profile. This is formed from the concatenation of the RelativeName with the DNS domain used by Azure Traffic Manager.
	Fqdn string `pulumi:"fqdn"`
	// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
	RelativeName *string `pulumi:"relativeName"`
	// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
	Ttl *int `pulumi:"ttl"`
}

// DnsConfigResponseInput is an input type that accepts DnsConfigResponseArgs and DnsConfigResponseOutput values.
// You can construct a concrete instance of `DnsConfigResponseInput` via:
//
//          DnsConfigResponseArgs{...}
type DnsConfigResponseInput interface {
	pulumi.Input

	ToDnsConfigResponseOutput() DnsConfigResponseOutput
	ToDnsConfigResponseOutputWithContext(context.Context) DnsConfigResponseOutput
}

// Class containing DNS settings in a Traffic Manager profile.
type DnsConfigResponseArgs struct {
	// The fully-qualified domain name (FQDN) of the Traffic Manager profile. This is formed from the concatenation of the RelativeName with the DNS domain used by Azure Traffic Manager.
	Fqdn pulumi.StringInput `pulumi:"fqdn"`
	// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
	RelativeName pulumi.StringPtrInput `pulumi:"relativeName"`
	// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
	Ttl pulumi.IntPtrInput `pulumi:"ttl"`
}

func (DnsConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsConfigResponse)(nil)).Elem()
}

func (i DnsConfigResponseArgs) ToDnsConfigResponseOutput() DnsConfigResponseOutput {
	return i.ToDnsConfigResponseOutputWithContext(context.Background())
}

func (i DnsConfigResponseArgs) ToDnsConfigResponseOutputWithContext(ctx context.Context) DnsConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsConfigResponseOutput)
}

func (i DnsConfigResponseArgs) ToDnsConfigResponsePtrOutput() DnsConfigResponsePtrOutput {
	return i.ToDnsConfigResponsePtrOutputWithContext(context.Background())
}

func (i DnsConfigResponseArgs) ToDnsConfigResponsePtrOutputWithContext(ctx context.Context) DnsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsConfigResponseOutput).ToDnsConfigResponsePtrOutputWithContext(ctx)
}

// DnsConfigResponsePtrInput is an input type that accepts DnsConfigResponseArgs, DnsConfigResponsePtr and DnsConfigResponsePtrOutput values.
// You can construct a concrete instance of `DnsConfigResponsePtrInput` via:
//
//          DnsConfigResponseArgs{...}
//
//  or:
//
//          nil
type DnsConfigResponsePtrInput interface {
	pulumi.Input

	ToDnsConfigResponsePtrOutput() DnsConfigResponsePtrOutput
	ToDnsConfigResponsePtrOutputWithContext(context.Context) DnsConfigResponsePtrOutput
}

type dnsConfigResponsePtrType DnsConfigResponseArgs

func DnsConfigResponsePtr(v *DnsConfigResponseArgs) DnsConfigResponsePtrInput {
	return (*dnsConfigResponsePtrType)(v)
}

func (*dnsConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsConfigResponse)(nil)).Elem()
}

func (i *dnsConfigResponsePtrType) ToDnsConfigResponsePtrOutput() DnsConfigResponsePtrOutput {
	return i.ToDnsConfigResponsePtrOutputWithContext(context.Background())
}

func (i *dnsConfigResponsePtrType) ToDnsConfigResponsePtrOutputWithContext(ctx context.Context) DnsConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DnsConfigResponsePtrOutput)
}

// Class containing DNS settings in a Traffic Manager profile.
type DnsConfigResponseOutput struct{ *pulumi.OutputState }

func (DnsConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DnsConfigResponse)(nil)).Elem()
}

func (o DnsConfigResponseOutput) ToDnsConfigResponseOutput() DnsConfigResponseOutput {
	return o
}

func (o DnsConfigResponseOutput) ToDnsConfigResponseOutputWithContext(ctx context.Context) DnsConfigResponseOutput {
	return o
}

func (o DnsConfigResponseOutput) ToDnsConfigResponsePtrOutput() DnsConfigResponsePtrOutput {
	return o.ToDnsConfigResponsePtrOutputWithContext(context.Background())
}

func (o DnsConfigResponseOutput) ToDnsConfigResponsePtrOutputWithContext(ctx context.Context) DnsConfigResponsePtrOutput {
	return o.ApplyT(func(v DnsConfigResponse) *DnsConfigResponse {
		return &v
	}).(DnsConfigResponsePtrOutput)
}

// The fully-qualified domain name (FQDN) of the Traffic Manager profile. This is formed from the concatenation of the RelativeName with the DNS domain used by Azure Traffic Manager.
func (o DnsConfigResponseOutput) Fqdn() pulumi.StringOutput {
	return o.ApplyT(func(v DnsConfigResponse) string { return v.Fqdn }).(pulumi.StringOutput)
}

// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
func (o DnsConfigResponseOutput) RelativeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DnsConfigResponse) *string { return v.RelativeName }).(pulumi.StringPtrOutput)
}

// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
func (o DnsConfigResponseOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DnsConfigResponse) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

type DnsConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (DnsConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DnsConfigResponse)(nil)).Elem()
}

func (o DnsConfigResponsePtrOutput) ToDnsConfigResponsePtrOutput() DnsConfigResponsePtrOutput {
	return o
}

func (o DnsConfigResponsePtrOutput) ToDnsConfigResponsePtrOutputWithContext(ctx context.Context) DnsConfigResponsePtrOutput {
	return o
}

func (o DnsConfigResponsePtrOutput) Elem() DnsConfigResponseOutput {
	return o.ApplyT(func(v *DnsConfigResponse) DnsConfigResponse { return *v }).(DnsConfigResponseOutput)
}

// The fully-qualified domain name (FQDN) of the Traffic Manager profile. This is formed from the concatenation of the RelativeName with the DNS domain used by Azure Traffic Manager.
func (o DnsConfigResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// The relative DNS name provided by this Traffic Manager profile. This value is combined with the DNS domain name used by Azure Traffic Manager to form the fully-qualified domain name (FQDN) of the profile.
func (o DnsConfigResponsePtrOutput) RelativeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DnsConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.RelativeName
	}).(pulumi.StringPtrOutput)
}

// The DNS Time-To-Live (TTL), in seconds. This informs the local DNS resolvers and DNS clients how long to cache DNS responses provided by this Traffic Manager profile.
func (o DnsConfigResponsePtrOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DnsConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.IntPtrOutput)
}

// Class representing a Traffic Manager endpoint.
type EndpointType struct {
	// List of custom headers.
	CustomHeaders []EndpointPropertiesCustomHeaders `pulumi:"customHeaders"`
	// Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
	EndpointLocation *string `pulumi:"endpointLocation"`
	// The monitoring status of the endpoint.
	EndpointMonitorStatus *string `pulumi:"endpointMonitorStatus"`
	// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
	EndpointStatus *string `pulumi:"endpointStatus"`
	// The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
	GeoMapping []string `pulumi:"geoMapping"`
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
	Id *string `pulumi:"id"`
	// The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
	MinChildEndpoints *int `pulumi:"minChildEndpoints"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
	Priority *int `pulumi:"priority"`
	// The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
	Subnets []EndpointPropertiesSubnets `pulumi:"subnets"`
	// The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
	Target *string `pulumi:"target"`
	// The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
	TargetResourceId *string `pulumi:"targetResourceId"`
	// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
	Type *string `pulumi:"type"`
	// The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
	Weight *int `pulumi:"weight"`
}

// EndpointTypeInput is an input type that accepts EndpointTypeArgs and EndpointTypeOutput values.
// You can construct a concrete instance of `EndpointTypeInput` via:
//
//          EndpointTypeArgs{...}
type EndpointTypeInput interface {
	pulumi.Input

	ToEndpointTypeOutput() EndpointTypeOutput
	ToEndpointTypeOutputWithContext(context.Context) EndpointTypeOutput
}

// Class representing a Traffic Manager endpoint.
type EndpointTypeArgs struct {
	// List of custom headers.
	CustomHeaders EndpointPropertiesCustomHeadersArrayInput `pulumi:"customHeaders"`
	// Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
	EndpointLocation pulumi.StringPtrInput `pulumi:"endpointLocation"`
	// The monitoring status of the endpoint.
	EndpointMonitorStatus pulumi.StringPtrInput `pulumi:"endpointMonitorStatus"`
	// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
	EndpointStatus pulumi.StringPtrInput `pulumi:"endpointStatus"`
	// The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
	GeoMapping pulumi.StringArrayInput `pulumi:"geoMapping"`
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
	MinChildEndpoints pulumi.IntPtrInput `pulumi:"minChildEndpoints"`
	// The name of the resource
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
	Subnets EndpointPropertiesSubnetsArrayInput `pulumi:"subnets"`
	// The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
	TargetResourceId pulumi.StringPtrInput `pulumi:"targetResourceId"`
	// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (EndpointTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointType)(nil)).Elem()
}

func (i EndpointTypeArgs) ToEndpointTypeOutput() EndpointTypeOutput {
	return i.ToEndpointTypeOutputWithContext(context.Background())
}

func (i EndpointTypeArgs) ToEndpointTypeOutputWithContext(ctx context.Context) EndpointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointTypeOutput)
}

// EndpointTypeArrayInput is an input type that accepts EndpointTypeArray and EndpointTypeArrayOutput values.
// You can construct a concrete instance of `EndpointTypeArrayInput` via:
//
//          EndpointTypeArray{ EndpointTypeArgs{...} }
type EndpointTypeArrayInput interface {
	pulumi.Input

	ToEndpointTypeArrayOutput() EndpointTypeArrayOutput
	ToEndpointTypeArrayOutputWithContext(context.Context) EndpointTypeArrayOutput
}

type EndpointTypeArray []EndpointTypeInput

func (EndpointTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointType)(nil)).Elem()
}

func (i EndpointTypeArray) ToEndpointTypeArrayOutput() EndpointTypeArrayOutput {
	return i.ToEndpointTypeArrayOutputWithContext(context.Background())
}

func (i EndpointTypeArray) ToEndpointTypeArrayOutputWithContext(ctx context.Context) EndpointTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointTypeArrayOutput)
}

// Class representing a Traffic Manager endpoint.
type EndpointTypeOutput struct{ *pulumi.OutputState }

func (EndpointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointType)(nil)).Elem()
}

func (o EndpointTypeOutput) ToEndpointTypeOutput() EndpointTypeOutput {
	return o
}

func (o EndpointTypeOutput) ToEndpointTypeOutputWithContext(ctx context.Context) EndpointTypeOutput {
	return o
}

// List of custom headers.
func (o EndpointTypeOutput) CustomHeaders() EndpointPropertiesCustomHeadersArrayOutput {
	return o.ApplyT(func(v EndpointType) []EndpointPropertiesCustomHeaders { return v.CustomHeaders }).(EndpointPropertiesCustomHeadersArrayOutput)
}

// Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
func (o EndpointTypeOutput) EndpointLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.EndpointLocation }).(pulumi.StringPtrOutput)
}

// The monitoring status of the endpoint.
func (o EndpointTypeOutput) EndpointMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.EndpointMonitorStatus }).(pulumi.StringPtrOutput)
}

// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
func (o EndpointTypeOutput) EndpointStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.EndpointStatus }).(pulumi.StringPtrOutput)
}

// The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
func (o EndpointTypeOutput) GeoMapping() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointType) []string { return v.GeoMapping }).(pulumi.StringArrayOutput)
}

// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
func (o EndpointTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
func (o EndpointTypeOutput) MinChildEndpoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointType) *int { return v.MinChildEndpoints }).(pulumi.IntPtrOutput)
}

// The name of the resource
func (o EndpointTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
func (o EndpointTypeOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointType) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
func (o EndpointTypeOutput) Subnets() EndpointPropertiesSubnetsArrayOutput {
	return o.ApplyT(func(v EndpointType) []EndpointPropertiesSubnets { return v.Subnets }).(EndpointPropertiesSubnetsArrayOutput)
}

// The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
func (o EndpointTypeOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
func (o EndpointTypeOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.TargetResourceId }).(pulumi.StringPtrOutput)
}

// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
func (o EndpointTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
func (o EndpointTypeOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointType) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type EndpointTypeArrayOutput struct{ *pulumi.OutputState }

func (EndpointTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointType)(nil)).Elem()
}

func (o EndpointTypeArrayOutput) ToEndpointTypeArrayOutput() EndpointTypeArrayOutput {
	return o
}

func (o EndpointTypeArrayOutput) ToEndpointTypeArrayOutputWithContext(ctx context.Context) EndpointTypeArrayOutput {
	return o
}

func (o EndpointTypeArrayOutput) Index(i pulumi.IntInput) EndpointTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointType {
		return vs[0].([]EndpointType)[vs[1].(int)]
	}).(EndpointTypeOutput)
}

// Custom header name and value.
type EndpointPropertiesCustomHeaders struct {
	// Header name.
	Name *string `pulumi:"name"`
	// Header value.
	Value *string `pulumi:"value"`
}

// EndpointPropertiesCustomHeadersInput is an input type that accepts EndpointPropertiesCustomHeadersArgs and EndpointPropertiesCustomHeadersOutput values.
// You can construct a concrete instance of `EndpointPropertiesCustomHeadersInput` via:
//
//          EndpointPropertiesCustomHeadersArgs{...}
type EndpointPropertiesCustomHeadersInput interface {
	pulumi.Input

	ToEndpointPropertiesCustomHeadersOutput() EndpointPropertiesCustomHeadersOutput
	ToEndpointPropertiesCustomHeadersOutputWithContext(context.Context) EndpointPropertiesCustomHeadersOutput
}

// Custom header name and value.
type EndpointPropertiesCustomHeadersArgs struct {
	// Header name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Header value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EndpointPropertiesCustomHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesCustomHeaders)(nil)).Elem()
}

func (i EndpointPropertiesCustomHeadersArgs) ToEndpointPropertiesCustomHeadersOutput() EndpointPropertiesCustomHeadersOutput {
	return i.ToEndpointPropertiesCustomHeadersOutputWithContext(context.Background())
}

func (i EndpointPropertiesCustomHeadersArgs) ToEndpointPropertiesCustomHeadersOutputWithContext(ctx context.Context) EndpointPropertiesCustomHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesCustomHeadersOutput)
}

// EndpointPropertiesCustomHeadersArrayInput is an input type that accepts EndpointPropertiesCustomHeadersArray and EndpointPropertiesCustomHeadersArrayOutput values.
// You can construct a concrete instance of `EndpointPropertiesCustomHeadersArrayInput` via:
//
//          EndpointPropertiesCustomHeadersArray{ EndpointPropertiesCustomHeadersArgs{...} }
type EndpointPropertiesCustomHeadersArrayInput interface {
	pulumi.Input

	ToEndpointPropertiesCustomHeadersArrayOutput() EndpointPropertiesCustomHeadersArrayOutput
	ToEndpointPropertiesCustomHeadersArrayOutputWithContext(context.Context) EndpointPropertiesCustomHeadersArrayOutput
}

type EndpointPropertiesCustomHeadersArray []EndpointPropertiesCustomHeadersInput

func (EndpointPropertiesCustomHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesCustomHeaders)(nil)).Elem()
}

func (i EndpointPropertiesCustomHeadersArray) ToEndpointPropertiesCustomHeadersArrayOutput() EndpointPropertiesCustomHeadersArrayOutput {
	return i.ToEndpointPropertiesCustomHeadersArrayOutputWithContext(context.Background())
}

func (i EndpointPropertiesCustomHeadersArray) ToEndpointPropertiesCustomHeadersArrayOutputWithContext(ctx context.Context) EndpointPropertiesCustomHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesCustomHeadersArrayOutput)
}

// Custom header name and value.
type EndpointPropertiesCustomHeadersOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesCustomHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesCustomHeaders)(nil)).Elem()
}

func (o EndpointPropertiesCustomHeadersOutput) ToEndpointPropertiesCustomHeadersOutput() EndpointPropertiesCustomHeadersOutput {
	return o
}

func (o EndpointPropertiesCustomHeadersOutput) ToEndpointPropertiesCustomHeadersOutputWithContext(ctx context.Context) EndpointPropertiesCustomHeadersOutput {
	return o
}

// Header name.
func (o EndpointPropertiesCustomHeadersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesCustomHeaders) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Header value.
func (o EndpointPropertiesCustomHeadersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesCustomHeaders) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EndpointPropertiesCustomHeadersArrayOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesCustomHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesCustomHeaders)(nil)).Elem()
}

func (o EndpointPropertiesCustomHeadersArrayOutput) ToEndpointPropertiesCustomHeadersArrayOutput() EndpointPropertiesCustomHeadersArrayOutput {
	return o
}

func (o EndpointPropertiesCustomHeadersArrayOutput) ToEndpointPropertiesCustomHeadersArrayOutputWithContext(ctx context.Context) EndpointPropertiesCustomHeadersArrayOutput {
	return o
}

func (o EndpointPropertiesCustomHeadersArrayOutput) Index(i pulumi.IntInput) EndpointPropertiesCustomHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointPropertiesCustomHeaders {
		return vs[0].([]EndpointPropertiesCustomHeaders)[vs[1].(int)]
	}).(EndpointPropertiesCustomHeadersOutput)
}

// Custom header name and value.
type EndpointPropertiesResponseCustomHeaders struct {
	// Header name.
	Name *string `pulumi:"name"`
	// Header value.
	Value *string `pulumi:"value"`
}

// EndpointPropertiesResponseCustomHeadersInput is an input type that accepts EndpointPropertiesResponseCustomHeadersArgs and EndpointPropertiesResponseCustomHeadersOutput values.
// You can construct a concrete instance of `EndpointPropertiesResponseCustomHeadersInput` via:
//
//          EndpointPropertiesResponseCustomHeadersArgs{...}
type EndpointPropertiesResponseCustomHeadersInput interface {
	pulumi.Input

	ToEndpointPropertiesResponseCustomHeadersOutput() EndpointPropertiesResponseCustomHeadersOutput
	ToEndpointPropertiesResponseCustomHeadersOutputWithContext(context.Context) EndpointPropertiesResponseCustomHeadersOutput
}

// Custom header name and value.
type EndpointPropertiesResponseCustomHeadersArgs struct {
	// Header name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Header value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EndpointPropertiesResponseCustomHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesResponseCustomHeaders)(nil)).Elem()
}

func (i EndpointPropertiesResponseCustomHeadersArgs) ToEndpointPropertiesResponseCustomHeadersOutput() EndpointPropertiesResponseCustomHeadersOutput {
	return i.ToEndpointPropertiesResponseCustomHeadersOutputWithContext(context.Background())
}

func (i EndpointPropertiesResponseCustomHeadersArgs) ToEndpointPropertiesResponseCustomHeadersOutputWithContext(ctx context.Context) EndpointPropertiesResponseCustomHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesResponseCustomHeadersOutput)
}

// EndpointPropertiesResponseCustomHeadersArrayInput is an input type that accepts EndpointPropertiesResponseCustomHeadersArray and EndpointPropertiesResponseCustomHeadersArrayOutput values.
// You can construct a concrete instance of `EndpointPropertiesResponseCustomHeadersArrayInput` via:
//
//          EndpointPropertiesResponseCustomHeadersArray{ EndpointPropertiesResponseCustomHeadersArgs{...} }
type EndpointPropertiesResponseCustomHeadersArrayInput interface {
	pulumi.Input

	ToEndpointPropertiesResponseCustomHeadersArrayOutput() EndpointPropertiesResponseCustomHeadersArrayOutput
	ToEndpointPropertiesResponseCustomHeadersArrayOutputWithContext(context.Context) EndpointPropertiesResponseCustomHeadersArrayOutput
}

type EndpointPropertiesResponseCustomHeadersArray []EndpointPropertiesResponseCustomHeadersInput

func (EndpointPropertiesResponseCustomHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesResponseCustomHeaders)(nil)).Elem()
}

func (i EndpointPropertiesResponseCustomHeadersArray) ToEndpointPropertiesResponseCustomHeadersArrayOutput() EndpointPropertiesResponseCustomHeadersArrayOutput {
	return i.ToEndpointPropertiesResponseCustomHeadersArrayOutputWithContext(context.Background())
}

func (i EndpointPropertiesResponseCustomHeadersArray) ToEndpointPropertiesResponseCustomHeadersArrayOutputWithContext(ctx context.Context) EndpointPropertiesResponseCustomHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesResponseCustomHeadersArrayOutput)
}

// Custom header name and value.
type EndpointPropertiesResponseCustomHeadersOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesResponseCustomHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesResponseCustomHeaders)(nil)).Elem()
}

func (o EndpointPropertiesResponseCustomHeadersOutput) ToEndpointPropertiesResponseCustomHeadersOutput() EndpointPropertiesResponseCustomHeadersOutput {
	return o
}

func (o EndpointPropertiesResponseCustomHeadersOutput) ToEndpointPropertiesResponseCustomHeadersOutputWithContext(ctx context.Context) EndpointPropertiesResponseCustomHeadersOutput {
	return o
}

// Header name.
func (o EndpointPropertiesResponseCustomHeadersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponseCustomHeaders) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Header value.
func (o EndpointPropertiesResponseCustomHeadersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponseCustomHeaders) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EndpointPropertiesResponseCustomHeadersArrayOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesResponseCustomHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesResponseCustomHeaders)(nil)).Elem()
}

func (o EndpointPropertiesResponseCustomHeadersArrayOutput) ToEndpointPropertiesResponseCustomHeadersArrayOutput() EndpointPropertiesResponseCustomHeadersArrayOutput {
	return o
}

func (o EndpointPropertiesResponseCustomHeadersArrayOutput) ToEndpointPropertiesResponseCustomHeadersArrayOutputWithContext(ctx context.Context) EndpointPropertiesResponseCustomHeadersArrayOutput {
	return o
}

func (o EndpointPropertiesResponseCustomHeadersArrayOutput) Index(i pulumi.IntInput) EndpointPropertiesResponseCustomHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointPropertiesResponseCustomHeaders {
		return vs[0].([]EndpointPropertiesResponseCustomHeaders)[vs[1].(int)]
	}).(EndpointPropertiesResponseCustomHeadersOutput)
}

// Subnet first address, scope, and/or last address.
type EndpointPropertiesResponseSubnets struct {
	// First address in the subnet.
	First *string `pulumi:"first"`
	// Last address in the subnet.
	Last *string `pulumi:"last"`
	// Block size (number of leading bits in the subnet mask).
	Scope *int `pulumi:"scope"`
}

// EndpointPropertiesResponseSubnetsInput is an input type that accepts EndpointPropertiesResponseSubnetsArgs and EndpointPropertiesResponseSubnetsOutput values.
// You can construct a concrete instance of `EndpointPropertiesResponseSubnetsInput` via:
//
//          EndpointPropertiesResponseSubnetsArgs{...}
type EndpointPropertiesResponseSubnetsInput interface {
	pulumi.Input

	ToEndpointPropertiesResponseSubnetsOutput() EndpointPropertiesResponseSubnetsOutput
	ToEndpointPropertiesResponseSubnetsOutputWithContext(context.Context) EndpointPropertiesResponseSubnetsOutput
}

// Subnet first address, scope, and/or last address.
type EndpointPropertiesResponseSubnetsArgs struct {
	// First address in the subnet.
	First pulumi.StringPtrInput `pulumi:"first"`
	// Last address in the subnet.
	Last pulumi.StringPtrInput `pulumi:"last"`
	// Block size (number of leading bits in the subnet mask).
	Scope pulumi.IntPtrInput `pulumi:"scope"`
}

func (EndpointPropertiesResponseSubnetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesResponseSubnets)(nil)).Elem()
}

func (i EndpointPropertiesResponseSubnetsArgs) ToEndpointPropertiesResponseSubnetsOutput() EndpointPropertiesResponseSubnetsOutput {
	return i.ToEndpointPropertiesResponseSubnetsOutputWithContext(context.Background())
}

func (i EndpointPropertiesResponseSubnetsArgs) ToEndpointPropertiesResponseSubnetsOutputWithContext(ctx context.Context) EndpointPropertiesResponseSubnetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesResponseSubnetsOutput)
}

// EndpointPropertiesResponseSubnetsArrayInput is an input type that accepts EndpointPropertiesResponseSubnetsArray and EndpointPropertiesResponseSubnetsArrayOutput values.
// You can construct a concrete instance of `EndpointPropertiesResponseSubnetsArrayInput` via:
//
//          EndpointPropertiesResponseSubnetsArray{ EndpointPropertiesResponseSubnetsArgs{...} }
type EndpointPropertiesResponseSubnetsArrayInput interface {
	pulumi.Input

	ToEndpointPropertiesResponseSubnetsArrayOutput() EndpointPropertiesResponseSubnetsArrayOutput
	ToEndpointPropertiesResponseSubnetsArrayOutputWithContext(context.Context) EndpointPropertiesResponseSubnetsArrayOutput
}

type EndpointPropertiesResponseSubnetsArray []EndpointPropertiesResponseSubnetsInput

func (EndpointPropertiesResponseSubnetsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesResponseSubnets)(nil)).Elem()
}

func (i EndpointPropertiesResponseSubnetsArray) ToEndpointPropertiesResponseSubnetsArrayOutput() EndpointPropertiesResponseSubnetsArrayOutput {
	return i.ToEndpointPropertiesResponseSubnetsArrayOutputWithContext(context.Background())
}

func (i EndpointPropertiesResponseSubnetsArray) ToEndpointPropertiesResponseSubnetsArrayOutputWithContext(ctx context.Context) EndpointPropertiesResponseSubnetsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesResponseSubnetsArrayOutput)
}

// Subnet first address, scope, and/or last address.
type EndpointPropertiesResponseSubnetsOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesResponseSubnetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesResponseSubnets)(nil)).Elem()
}

func (o EndpointPropertiesResponseSubnetsOutput) ToEndpointPropertiesResponseSubnetsOutput() EndpointPropertiesResponseSubnetsOutput {
	return o
}

func (o EndpointPropertiesResponseSubnetsOutput) ToEndpointPropertiesResponseSubnetsOutputWithContext(ctx context.Context) EndpointPropertiesResponseSubnetsOutput {
	return o
}

// First address in the subnet.
func (o EndpointPropertiesResponseSubnetsOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponseSubnets) *string { return v.First }).(pulumi.StringPtrOutput)
}

// Last address in the subnet.
func (o EndpointPropertiesResponseSubnetsOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponseSubnets) *string { return v.Last }).(pulumi.StringPtrOutput)
}

// Block size (number of leading bits in the subnet mask).
func (o EndpointPropertiesResponseSubnetsOutput) Scope() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesResponseSubnets) *int { return v.Scope }).(pulumi.IntPtrOutput)
}

type EndpointPropertiesResponseSubnetsArrayOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesResponseSubnetsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesResponseSubnets)(nil)).Elem()
}

func (o EndpointPropertiesResponseSubnetsArrayOutput) ToEndpointPropertiesResponseSubnetsArrayOutput() EndpointPropertiesResponseSubnetsArrayOutput {
	return o
}

func (o EndpointPropertiesResponseSubnetsArrayOutput) ToEndpointPropertiesResponseSubnetsArrayOutputWithContext(ctx context.Context) EndpointPropertiesResponseSubnetsArrayOutput {
	return o
}

func (o EndpointPropertiesResponseSubnetsArrayOutput) Index(i pulumi.IntInput) EndpointPropertiesResponseSubnetsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointPropertiesResponseSubnets {
		return vs[0].([]EndpointPropertiesResponseSubnets)[vs[1].(int)]
	}).(EndpointPropertiesResponseSubnetsOutput)
}

// Subnet first address, scope, and/or last address.
type EndpointPropertiesSubnets struct {
	// First address in the subnet.
	First *string `pulumi:"first"`
	// Last address in the subnet.
	Last *string `pulumi:"last"`
	// Block size (number of leading bits in the subnet mask).
	Scope *int `pulumi:"scope"`
}

// EndpointPropertiesSubnetsInput is an input type that accepts EndpointPropertiesSubnetsArgs and EndpointPropertiesSubnetsOutput values.
// You can construct a concrete instance of `EndpointPropertiesSubnetsInput` via:
//
//          EndpointPropertiesSubnetsArgs{...}
type EndpointPropertiesSubnetsInput interface {
	pulumi.Input

	ToEndpointPropertiesSubnetsOutput() EndpointPropertiesSubnetsOutput
	ToEndpointPropertiesSubnetsOutputWithContext(context.Context) EndpointPropertiesSubnetsOutput
}

// Subnet first address, scope, and/or last address.
type EndpointPropertiesSubnetsArgs struct {
	// First address in the subnet.
	First pulumi.StringPtrInput `pulumi:"first"`
	// Last address in the subnet.
	Last pulumi.StringPtrInput `pulumi:"last"`
	// Block size (number of leading bits in the subnet mask).
	Scope pulumi.IntPtrInput `pulumi:"scope"`
}

func (EndpointPropertiesSubnetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesSubnets)(nil)).Elem()
}

func (i EndpointPropertiesSubnetsArgs) ToEndpointPropertiesSubnetsOutput() EndpointPropertiesSubnetsOutput {
	return i.ToEndpointPropertiesSubnetsOutputWithContext(context.Background())
}

func (i EndpointPropertiesSubnetsArgs) ToEndpointPropertiesSubnetsOutputWithContext(ctx context.Context) EndpointPropertiesSubnetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesSubnetsOutput)
}

// EndpointPropertiesSubnetsArrayInput is an input type that accepts EndpointPropertiesSubnetsArray and EndpointPropertiesSubnetsArrayOutput values.
// You can construct a concrete instance of `EndpointPropertiesSubnetsArrayInput` via:
//
//          EndpointPropertiesSubnetsArray{ EndpointPropertiesSubnetsArgs{...} }
type EndpointPropertiesSubnetsArrayInput interface {
	pulumi.Input

	ToEndpointPropertiesSubnetsArrayOutput() EndpointPropertiesSubnetsArrayOutput
	ToEndpointPropertiesSubnetsArrayOutputWithContext(context.Context) EndpointPropertiesSubnetsArrayOutput
}

type EndpointPropertiesSubnetsArray []EndpointPropertiesSubnetsInput

func (EndpointPropertiesSubnetsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesSubnets)(nil)).Elem()
}

func (i EndpointPropertiesSubnetsArray) ToEndpointPropertiesSubnetsArrayOutput() EndpointPropertiesSubnetsArrayOutput {
	return i.ToEndpointPropertiesSubnetsArrayOutputWithContext(context.Background())
}

func (i EndpointPropertiesSubnetsArray) ToEndpointPropertiesSubnetsArrayOutputWithContext(ctx context.Context) EndpointPropertiesSubnetsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointPropertiesSubnetsArrayOutput)
}

// Subnet first address, scope, and/or last address.
type EndpointPropertiesSubnetsOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesSubnetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointPropertiesSubnets)(nil)).Elem()
}

func (o EndpointPropertiesSubnetsOutput) ToEndpointPropertiesSubnetsOutput() EndpointPropertiesSubnetsOutput {
	return o
}

func (o EndpointPropertiesSubnetsOutput) ToEndpointPropertiesSubnetsOutputWithContext(ctx context.Context) EndpointPropertiesSubnetsOutput {
	return o
}

// First address in the subnet.
func (o EndpointPropertiesSubnetsOutput) First() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesSubnets) *string { return v.First }).(pulumi.StringPtrOutput)
}

// Last address in the subnet.
func (o EndpointPropertiesSubnetsOutput) Last() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesSubnets) *string { return v.Last }).(pulumi.StringPtrOutput)
}

// Block size (number of leading bits in the subnet mask).
func (o EndpointPropertiesSubnetsOutput) Scope() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointPropertiesSubnets) *int { return v.Scope }).(pulumi.IntPtrOutput)
}

type EndpointPropertiesSubnetsArrayOutput struct{ *pulumi.OutputState }

func (EndpointPropertiesSubnetsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointPropertiesSubnets)(nil)).Elem()
}

func (o EndpointPropertiesSubnetsArrayOutput) ToEndpointPropertiesSubnetsArrayOutput() EndpointPropertiesSubnetsArrayOutput {
	return o
}

func (o EndpointPropertiesSubnetsArrayOutput) ToEndpointPropertiesSubnetsArrayOutputWithContext(ctx context.Context) EndpointPropertiesSubnetsArrayOutput {
	return o
}

func (o EndpointPropertiesSubnetsArrayOutput) Index(i pulumi.IntInput) EndpointPropertiesSubnetsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointPropertiesSubnets {
		return vs[0].([]EndpointPropertiesSubnets)[vs[1].(int)]
	}).(EndpointPropertiesSubnetsOutput)
}

// Class representing a Traffic Manager endpoint.
type EndpointResponse struct {
	// List of custom headers.
	CustomHeaders []EndpointPropertiesResponseCustomHeaders `pulumi:"customHeaders"`
	// Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
	EndpointLocation *string `pulumi:"endpointLocation"`
	// The monitoring status of the endpoint.
	EndpointMonitorStatus *string `pulumi:"endpointMonitorStatus"`
	// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
	EndpointStatus *string `pulumi:"endpointStatus"`
	// The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
	GeoMapping []string `pulumi:"geoMapping"`
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
	Id *string `pulumi:"id"`
	// The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
	MinChildEndpoints *int `pulumi:"minChildEndpoints"`
	// The name of the resource
	Name *string `pulumi:"name"`
	// The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
	Priority *int `pulumi:"priority"`
	// The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
	Subnets []EndpointPropertiesResponseSubnets `pulumi:"subnets"`
	// The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
	Target *string `pulumi:"target"`
	// The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
	TargetResourceId *string `pulumi:"targetResourceId"`
	// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
	Type *string `pulumi:"type"`
	// The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
	Weight *int `pulumi:"weight"`
}

// EndpointResponseInput is an input type that accepts EndpointResponseArgs and EndpointResponseOutput values.
// You can construct a concrete instance of `EndpointResponseInput` via:
//
//          EndpointResponseArgs{...}
type EndpointResponseInput interface {
	pulumi.Input

	ToEndpointResponseOutput() EndpointResponseOutput
	ToEndpointResponseOutputWithContext(context.Context) EndpointResponseOutput
}

// Class representing a Traffic Manager endpoint.
type EndpointResponseArgs struct {
	// List of custom headers.
	CustomHeaders EndpointPropertiesResponseCustomHeadersArrayInput `pulumi:"customHeaders"`
	// Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
	EndpointLocation pulumi.StringPtrInput `pulumi:"endpointLocation"`
	// The monitoring status of the endpoint.
	EndpointMonitorStatus pulumi.StringPtrInput `pulumi:"endpointMonitorStatus"`
	// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
	EndpointStatus pulumi.StringPtrInput `pulumi:"endpointStatus"`
	// The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
	GeoMapping pulumi.StringArrayInput `pulumi:"geoMapping"`
	// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
	MinChildEndpoints pulumi.IntPtrInput `pulumi:"minChildEndpoints"`
	// The name of the resource
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
	Subnets EndpointPropertiesResponseSubnetsArrayInput `pulumi:"subnets"`
	// The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
	TargetResourceId pulumi.StringPtrInput `pulumi:"targetResourceId"`
	// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (EndpointResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointResponse)(nil)).Elem()
}

func (i EndpointResponseArgs) ToEndpointResponseOutput() EndpointResponseOutput {
	return i.ToEndpointResponseOutputWithContext(context.Background())
}

func (i EndpointResponseArgs) ToEndpointResponseOutputWithContext(ctx context.Context) EndpointResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointResponseOutput)
}

// EndpointResponseArrayInput is an input type that accepts EndpointResponseArray and EndpointResponseArrayOutput values.
// You can construct a concrete instance of `EndpointResponseArrayInput` via:
//
//          EndpointResponseArray{ EndpointResponseArgs{...} }
type EndpointResponseArrayInput interface {
	pulumi.Input

	ToEndpointResponseArrayOutput() EndpointResponseArrayOutput
	ToEndpointResponseArrayOutputWithContext(context.Context) EndpointResponseArrayOutput
}

type EndpointResponseArray []EndpointResponseInput

func (EndpointResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointResponse)(nil)).Elem()
}

func (i EndpointResponseArray) ToEndpointResponseArrayOutput() EndpointResponseArrayOutput {
	return i.ToEndpointResponseArrayOutputWithContext(context.Background())
}

func (i EndpointResponseArray) ToEndpointResponseArrayOutputWithContext(ctx context.Context) EndpointResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointResponseArrayOutput)
}

// Class representing a Traffic Manager endpoint.
type EndpointResponseOutput struct{ *pulumi.OutputState }

func (EndpointResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointResponse)(nil)).Elem()
}

func (o EndpointResponseOutput) ToEndpointResponseOutput() EndpointResponseOutput {
	return o
}

func (o EndpointResponseOutput) ToEndpointResponseOutputWithContext(ctx context.Context) EndpointResponseOutput {
	return o
}

// List of custom headers.
func (o EndpointResponseOutput) CustomHeaders() EndpointPropertiesResponseCustomHeadersArrayOutput {
	return o.ApplyT(func(v EndpointResponse) []EndpointPropertiesResponseCustomHeaders { return v.CustomHeaders }).(EndpointPropertiesResponseCustomHeadersArrayOutput)
}

// Specifies the location of the external or nested endpoints when using the 'Performance' traffic routing method.
func (o EndpointResponseOutput) EndpointLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.EndpointLocation }).(pulumi.StringPtrOutput)
}

// The monitoring status of the endpoint.
func (o EndpointResponseOutput) EndpointMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.EndpointMonitorStatus }).(pulumi.StringPtrOutput)
}

// The status of the endpoint. If the endpoint is Enabled, it is probed for endpoint health and is included in the traffic routing method.
func (o EndpointResponseOutput) EndpointStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.EndpointStatus }).(pulumi.StringPtrOutput)
}

// The list of countries/regions mapped to this endpoint when using the 'Geographic' traffic routing method. Please consult Traffic Manager Geographic documentation for a full list of accepted values.
func (o EndpointResponseOutput) GeoMapping() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EndpointResponse) []string { return v.GeoMapping }).(pulumi.StringArrayOutput)
}

// Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{resourceName}
func (o EndpointResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The minimum number of endpoints that must be available in the child profile in order for the parent profile to be considered available. Only applicable to endpoint of type 'NestedEndpoints'.
func (o EndpointResponseOutput) MinChildEndpoints() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *int { return v.MinChildEndpoints }).(pulumi.IntPtrOutput)
}

// The name of the resource
func (o EndpointResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of this endpoint when using the 'Priority' traffic routing method. Possible values are from 1 to 1000, lower values represent higher priority. This is an optional parameter.  If specified, it must be specified on all endpoints, and no two endpoints can share the same priority value.
func (o EndpointResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// The list of subnets, IP addresses, and/or address ranges mapped to this endpoint when using the 'Subnet' traffic routing method. An empty list will match all ranges not covered by other endpoints.
func (o EndpointResponseOutput) Subnets() EndpointPropertiesResponseSubnetsArrayOutput {
	return o.ApplyT(func(v EndpointResponse) []EndpointPropertiesResponseSubnets { return v.Subnets }).(EndpointPropertiesResponseSubnetsArrayOutput)
}

// The fully-qualified DNS name or IP address of the endpoint. Traffic Manager returns this value in DNS responses to direct traffic to this endpoint.
func (o EndpointResponseOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The Azure Resource URI of the of the endpoint. Not applicable to endpoints of type 'ExternalEndpoints'.
func (o EndpointResponseOutput) TargetResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.TargetResourceId }).(pulumi.StringPtrOutput)
}

// The type of the resource. Ex- Microsoft.Network/trafficManagerProfiles.
func (o EndpointResponseOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The weight of this endpoint when using the 'Weighted' traffic routing method. Possible values are from 1 to 1000.
func (o EndpointResponseOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointResponse) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type EndpointResponseArrayOutput struct{ *pulumi.OutputState }

func (EndpointResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointResponse)(nil)).Elem()
}

func (o EndpointResponseArrayOutput) ToEndpointResponseArrayOutput() EndpointResponseArrayOutput {
	return o
}

func (o EndpointResponseArrayOutput) ToEndpointResponseArrayOutputWithContext(ctx context.Context) EndpointResponseArrayOutput {
	return o
}

func (o EndpointResponseArrayOutput) Index(i pulumi.IntInput) EndpointResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointResponse {
		return vs[0].([]EndpointResponse)[vs[1].(int)]
	}).(EndpointResponseOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationType struct {
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
	AuthorizationUseStatus *string `pulumi:"authorizationUseStatus"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ExpressRouteCircuitAuthorizationTypeInput is an input type that accepts ExpressRouteCircuitAuthorizationTypeArgs and ExpressRouteCircuitAuthorizationTypeOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationTypeInput` via:
//
//          ExpressRouteCircuitAuthorizationTypeArgs{...}
type ExpressRouteCircuitAuthorizationTypeInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationTypeOutput() ExpressRouteCircuitAuthorizationTypeOutput
	ToExpressRouteCircuitAuthorizationTypeOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationTypeOutput
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationTypeArgs struct {
	// The authorization key.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
	AuthorizationUseStatus pulumi.StringPtrInput `pulumi:"authorizationUseStatus"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ExpressRouteCircuitAuthorizationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationTypeArgs) ToExpressRouteCircuitAuthorizationTypeOutput() ExpressRouteCircuitAuthorizationTypeOutput {
	return i.ToExpressRouteCircuitAuthorizationTypeOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationTypeArgs) ToExpressRouteCircuitAuthorizationTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationTypeOutput)
}

// ExpressRouteCircuitAuthorizationTypeArrayInput is an input type that accepts ExpressRouteCircuitAuthorizationTypeArray and ExpressRouteCircuitAuthorizationTypeArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationTypeArrayInput` via:
//
//          ExpressRouteCircuitAuthorizationTypeArray{ ExpressRouteCircuitAuthorizationTypeArgs{...} }
type ExpressRouteCircuitAuthorizationTypeArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationTypeArrayOutput() ExpressRouteCircuitAuthorizationTypeArrayOutput
	ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationTypeArrayOutput
}

type ExpressRouteCircuitAuthorizationTypeArray []ExpressRouteCircuitAuthorizationTypeInput

func (ExpressRouteCircuitAuthorizationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationTypeArray) ToExpressRouteCircuitAuthorizationTypeArrayOutput() ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return i.ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationTypeArray) ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationTypeArrayOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationTypeOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationTypeOutput) ToExpressRouteCircuitAuthorizationTypeOutput() ExpressRouteCircuitAuthorizationTypeOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationTypeOutput) ToExpressRouteCircuitAuthorizationTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeOutput {
	return o
}

// The authorization key.
func (o ExpressRouteCircuitAuthorizationTypeOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
func (o ExpressRouteCircuitAuthorizationTypeOutput) AuthorizationUseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.AuthorizationUseStatus }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ExpressRouteCircuitAuthorizationTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitAuthorizationTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitAuthorizationTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitAuthorizationTypeArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationType)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationTypeArrayOutput) ToExpressRouteCircuitAuthorizationTypeArrayOutput() ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationTypeArrayOutput) ToExpressRouteCircuitAuthorizationTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationTypeArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitAuthorizationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitAuthorizationType {
		return vs[0].([]ExpressRouteCircuitAuthorizationType)[vs[1].(int)]
	}).(ExpressRouteCircuitAuthorizationTypeOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationResponse struct {
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
	AuthorizationUseStatus *string `pulumi:"authorizationUseStatus"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// ExpressRouteCircuitAuthorizationResponseInput is an input type that accepts ExpressRouteCircuitAuthorizationResponseArgs and ExpressRouteCircuitAuthorizationResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationResponseInput` via:
//
//          ExpressRouteCircuitAuthorizationResponseArgs{...}
type ExpressRouteCircuitAuthorizationResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationResponseOutput() ExpressRouteCircuitAuthorizationResponseOutput
	ToExpressRouteCircuitAuthorizationResponseOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationResponseOutput
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationResponseArgs struct {
	// The authorization key.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
	AuthorizationUseStatus pulumi.StringPtrInput `pulumi:"authorizationUseStatus"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (ExpressRouteCircuitAuthorizationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationResponseArgs) ToExpressRouteCircuitAuthorizationResponseOutput() ExpressRouteCircuitAuthorizationResponseOutput {
	return i.ToExpressRouteCircuitAuthorizationResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationResponseArgs) ToExpressRouteCircuitAuthorizationResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationResponseOutput)
}

// ExpressRouteCircuitAuthorizationResponseArrayInput is an input type that accepts ExpressRouteCircuitAuthorizationResponseArray and ExpressRouteCircuitAuthorizationResponseArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitAuthorizationResponseArrayInput` via:
//
//          ExpressRouteCircuitAuthorizationResponseArray{ ExpressRouteCircuitAuthorizationResponseArgs{...} }
type ExpressRouteCircuitAuthorizationResponseArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitAuthorizationResponseArrayOutput() ExpressRouteCircuitAuthorizationResponseArrayOutput
	ToExpressRouteCircuitAuthorizationResponseArrayOutputWithContext(context.Context) ExpressRouteCircuitAuthorizationResponseArrayOutput
}

type ExpressRouteCircuitAuthorizationResponseArray []ExpressRouteCircuitAuthorizationResponseInput

func (ExpressRouteCircuitAuthorizationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitAuthorizationResponseArray) ToExpressRouteCircuitAuthorizationResponseArrayOutput() ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return i.ToExpressRouteCircuitAuthorizationResponseArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitAuthorizationResponseArray) ToExpressRouteCircuitAuthorizationResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitAuthorizationResponseArrayOutput)
}

// Authorization in an ExpressRouteCircuit resource.
type ExpressRouteCircuitAuthorizationResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitAuthorizationResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationResponseOutput) ToExpressRouteCircuitAuthorizationResponseOutput() ExpressRouteCircuitAuthorizationResponseOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationResponseOutput) ToExpressRouteCircuitAuthorizationResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationResponseOutput {
	return o
}

// The authorization key.
func (o ExpressRouteCircuitAuthorizationResponseOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// AuthorizationUseStatus. Possible values are: 'Available' and 'InUse'.
func (o ExpressRouteCircuitAuthorizationResponseOutput) AuthorizationUseStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.AuthorizationUseStatus }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitAuthorizationResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ExpressRouteCircuitAuthorizationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitAuthorizationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitAuthorizationResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitAuthorizationResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitAuthorizationResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitAuthorizationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitAuthorizationResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitAuthorizationResponseArrayOutput) ToExpressRouteCircuitAuthorizationResponseArrayOutput() ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationResponseArrayOutput) ToExpressRouteCircuitAuthorizationResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitAuthorizationResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitAuthorizationResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitAuthorizationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitAuthorizationResponse {
		return vs[0].([]ExpressRouteCircuitAuthorizationResponse)[vs[1].(int)]
	}).(ExpressRouteCircuitAuthorizationResponseOutput)
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionType struct {
	// /29 IP address space to carve out Customer addresses for tunnels.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
	ExpressRouteCircuitPeering *SubResource `pulumi:"expressRouteCircuitPeering"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
	PeerExpressRouteCircuitPeering *SubResource `pulumi:"peerExpressRouteCircuitPeering"`
}

// ExpressRouteCircuitConnectionTypeInput is an input type that accepts ExpressRouteCircuitConnectionTypeArgs and ExpressRouteCircuitConnectionTypeOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitConnectionTypeInput` via:
//
//          ExpressRouteCircuitConnectionTypeArgs{...}
type ExpressRouteCircuitConnectionTypeInput interface {
	pulumi.Input

	ToExpressRouteCircuitConnectionTypeOutput() ExpressRouteCircuitConnectionTypeOutput
	ToExpressRouteCircuitConnectionTypeOutputWithContext(context.Context) ExpressRouteCircuitConnectionTypeOutput
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionTypeArgs struct {
	// /29 IP address space to carve out Customer addresses for tunnels.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// The authorization key.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
	ExpressRouteCircuitPeering SubResourcePtrInput `pulumi:"expressRouteCircuitPeering"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
	PeerExpressRouteCircuitPeering SubResourcePtrInput `pulumi:"peerExpressRouteCircuitPeering"`
}

func (ExpressRouteCircuitConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitConnectionType)(nil)).Elem()
}

func (i ExpressRouteCircuitConnectionTypeArgs) ToExpressRouteCircuitConnectionTypeOutput() ExpressRouteCircuitConnectionTypeOutput {
	return i.ToExpressRouteCircuitConnectionTypeOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitConnectionTypeArgs) ToExpressRouteCircuitConnectionTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionTypeOutput)
}

// ExpressRouteCircuitConnectionTypeArrayInput is an input type that accepts ExpressRouteCircuitConnectionTypeArray and ExpressRouteCircuitConnectionTypeArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitConnectionTypeArrayInput` via:
//
//          ExpressRouteCircuitConnectionTypeArray{ ExpressRouteCircuitConnectionTypeArgs{...} }
type ExpressRouteCircuitConnectionTypeArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitConnectionTypeArrayOutput() ExpressRouteCircuitConnectionTypeArrayOutput
	ToExpressRouteCircuitConnectionTypeArrayOutputWithContext(context.Context) ExpressRouteCircuitConnectionTypeArrayOutput
}

type ExpressRouteCircuitConnectionTypeArray []ExpressRouteCircuitConnectionTypeInput

func (ExpressRouteCircuitConnectionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitConnectionType)(nil)).Elem()
}

func (i ExpressRouteCircuitConnectionTypeArray) ToExpressRouteCircuitConnectionTypeArrayOutput() ExpressRouteCircuitConnectionTypeArrayOutput {
	return i.ToExpressRouteCircuitConnectionTypeArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitConnectionTypeArray) ToExpressRouteCircuitConnectionTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionTypeArrayOutput)
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionTypeOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitConnectionType)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionTypeOutput) ToExpressRouteCircuitConnectionTypeOutput() ExpressRouteCircuitConnectionTypeOutput {
	return o
}

func (o ExpressRouteCircuitConnectionTypeOutput) ToExpressRouteCircuitConnectionTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionTypeOutput {
	return o
}

// /29 IP address space to carve out Customer addresses for tunnels.
func (o ExpressRouteCircuitConnectionTypeOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// The authorization key.
func (o ExpressRouteCircuitConnectionTypeOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
func (o ExpressRouteCircuitConnectionTypeOutput) ExpressRouteCircuitPeering() SubResourcePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *SubResource { return v.ExpressRouteCircuitPeering }).(SubResourcePtrOutput)
}

// Resource ID.
func (o ExpressRouteCircuitConnectionTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitConnectionTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
func (o ExpressRouteCircuitConnectionTypeOutput) PeerExpressRouteCircuitPeering() SubResourcePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionType) *SubResource { return v.PeerExpressRouteCircuitPeering }).(SubResourcePtrOutput)
}

type ExpressRouteCircuitConnectionTypeArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitConnectionType)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionTypeArrayOutput) ToExpressRouteCircuitConnectionTypeArrayOutput() ExpressRouteCircuitConnectionTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitConnectionTypeArrayOutput) ToExpressRouteCircuitConnectionTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitConnectionTypeArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitConnectionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitConnectionType {
		return vs[0].([]ExpressRouteCircuitConnectionType)[vs[1].(int)]
	}).(ExpressRouteCircuitConnectionTypeOutput)
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionResponse struct {
	// /29 IP address space to carve out Customer addresses for tunnels.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// The authorization key.
	AuthorizationKey *string `pulumi:"authorizationKey"`
	// Express Route Circuit Connection State. Possible values are: 'Connected' and 'Disconnected'.
	CircuitConnectionStatus string `pulumi:"circuitConnectionStatus"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
	ExpressRouteCircuitPeering *SubResourceResponse `pulumi:"expressRouteCircuitPeering"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
	PeerExpressRouteCircuitPeering *SubResourceResponse `pulumi:"peerExpressRouteCircuitPeering"`
	// Provisioning state of the circuit connection resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
}

// ExpressRouteCircuitConnectionResponseInput is an input type that accepts ExpressRouteCircuitConnectionResponseArgs and ExpressRouteCircuitConnectionResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitConnectionResponseInput` via:
//
//          ExpressRouteCircuitConnectionResponseArgs{...}
type ExpressRouteCircuitConnectionResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitConnectionResponseOutput() ExpressRouteCircuitConnectionResponseOutput
	ToExpressRouteCircuitConnectionResponseOutputWithContext(context.Context) ExpressRouteCircuitConnectionResponseOutput
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionResponseArgs struct {
	// /29 IP address space to carve out Customer addresses for tunnels.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// The authorization key.
	AuthorizationKey pulumi.StringPtrInput `pulumi:"authorizationKey"`
	// Express Route Circuit Connection State. Possible values are: 'Connected' and 'Disconnected'.
	CircuitConnectionStatus pulumi.StringInput `pulumi:"circuitConnectionStatus"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
	ExpressRouteCircuitPeering SubResourceResponsePtrInput `pulumi:"expressRouteCircuitPeering"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
	PeerExpressRouteCircuitPeering SubResourceResponsePtrInput `pulumi:"peerExpressRouteCircuitPeering"`
	// Provisioning state of the circuit connection resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (ExpressRouteCircuitConnectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitConnectionResponseArgs) ToExpressRouteCircuitConnectionResponseOutput() ExpressRouteCircuitConnectionResponseOutput {
	return i.ToExpressRouteCircuitConnectionResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitConnectionResponseArgs) ToExpressRouteCircuitConnectionResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionResponseOutput)
}

// ExpressRouteCircuitConnectionResponseArrayInput is an input type that accepts ExpressRouteCircuitConnectionResponseArray and ExpressRouteCircuitConnectionResponseArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitConnectionResponseArrayInput` via:
//
//          ExpressRouteCircuitConnectionResponseArray{ ExpressRouteCircuitConnectionResponseArgs{...} }
type ExpressRouteCircuitConnectionResponseArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitConnectionResponseArrayOutput() ExpressRouteCircuitConnectionResponseArrayOutput
	ToExpressRouteCircuitConnectionResponseArrayOutputWithContext(context.Context) ExpressRouteCircuitConnectionResponseArrayOutput
}

type ExpressRouteCircuitConnectionResponseArray []ExpressRouteCircuitConnectionResponseInput

func (ExpressRouteCircuitConnectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitConnectionResponseArray) ToExpressRouteCircuitConnectionResponseArrayOutput() ExpressRouteCircuitConnectionResponseArrayOutput {
	return i.ToExpressRouteCircuitConnectionResponseArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitConnectionResponseArray) ToExpressRouteCircuitConnectionResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitConnectionResponseArrayOutput)
}

// Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
type ExpressRouteCircuitConnectionResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionResponseOutput) ToExpressRouteCircuitConnectionResponseOutput() ExpressRouteCircuitConnectionResponseOutput {
	return o
}

func (o ExpressRouteCircuitConnectionResponseOutput) ToExpressRouteCircuitConnectionResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionResponseOutput {
	return o
}

// /29 IP address space to carve out Customer addresses for tunnels.
func (o ExpressRouteCircuitConnectionResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// The authorization key.
func (o ExpressRouteCircuitConnectionResponseOutput) AuthorizationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *string { return v.AuthorizationKey }).(pulumi.StringPtrOutput)
}

// Express Route Circuit Connection State. Possible values are: 'Connected' and 'Disconnected'.
func (o ExpressRouteCircuitConnectionResponseOutput) CircuitConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) string { return v.CircuitConnectionStatus }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the circuit initiating connection.
func (o ExpressRouteCircuitConnectionResponseOutput) ExpressRouteCircuitPeering() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *SubResourceResponse {
		return v.ExpressRouteCircuitPeering
	}).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o ExpressRouteCircuitConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Reference to Express Route Circuit Private Peering Resource of the peered circuit.
func (o ExpressRouteCircuitConnectionResponseOutput) PeerExpressRouteCircuitPeering() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) *SubResourceResponse {
		return v.PeerExpressRouteCircuitPeering
	}).(SubResourceResponsePtrOutput)
}

// Provisioning state of the circuit connection resource. Possible values are: 'Succeeded', 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type ExpressRouteCircuitConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitConnectionResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitConnectionResponseArrayOutput) ToExpressRouteCircuitConnectionResponseArrayOutput() ExpressRouteCircuitConnectionResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitConnectionResponseArrayOutput) ToExpressRouteCircuitConnectionResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitConnectionResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitConnectionResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitConnectionResponse {
		return vs[0].([]ExpressRouteCircuitConnectionResponse)[vs[1].(int)]
	}).(ExpressRouteCircuitConnectionResponseOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringType struct {
	// The Azure ASN.
	AzureASN *int `pulumi:"azureASN"`
	// The list of circuit connections associated with Azure Private Peering for this circuit.
	Connections []ExpressRouteCircuitConnectionType `pulumi:"connections"`
	// The GatewayManager Etag.
	GatewayManagerEtag *string `pulumi:"gatewayManagerEtag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The IPv6 peering configuration.
	Ipv6PeeringConfig *Ipv6ExpressRouteCircuitPeeringConfig `pulumi:"ipv6PeeringConfig"`
	// Gets whether the provider or the customer last modified the peering.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfig `pulumi:"microsoftPeeringConfig"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The peer ASN.
	PeerASN *int `pulumi:"peerASN"`
	// The peering type.
	PeeringType *string `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort *string `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the RouteFilter resource.
	RouteFilter *RouteFilterType `pulumi:"routeFilter"`
	// The secondary port.
	SecondaryAzurePort *string `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey *string `pulumi:"sharedKey"`
	// The peering state.
	State *string `pulumi:"state"`
	// Gets peering stats.
	Stats *ExpressRouteCircuitStats `pulumi:"stats"`
	// The VLAN ID.
	VlanId *int `pulumi:"vlanId"`
}

// ExpressRouteCircuitPeeringTypeInput is an input type that accepts ExpressRouteCircuitPeeringTypeArgs and ExpressRouteCircuitPeeringTypeOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringTypeInput` via:
//
//          ExpressRouteCircuitPeeringTypeArgs{...}
type ExpressRouteCircuitPeeringTypeInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringTypeOutput() ExpressRouteCircuitPeeringTypeOutput
	ToExpressRouteCircuitPeeringTypeOutputWithContext(context.Context) ExpressRouteCircuitPeeringTypeOutput
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringTypeArgs struct {
	// The Azure ASN.
	AzureASN pulumi.IntPtrInput `pulumi:"azureASN"`
	// The list of circuit connections associated with Azure Private Peering for this circuit.
	Connections ExpressRouteCircuitConnectionTypeArrayInput `pulumi:"connections"`
	// The GatewayManager Etag.
	GatewayManagerEtag pulumi.StringPtrInput `pulumi:"gatewayManagerEtag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The IPv6 peering configuration.
	Ipv6PeeringConfig Ipv6ExpressRouteCircuitPeeringConfigPtrInput `pulumi:"ipv6PeeringConfig"`
	// Gets whether the provider or the customer last modified the peering.
	LastModifiedBy pulumi.StringPtrInput `pulumi:"lastModifiedBy"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig ExpressRouteCircuitPeeringConfigPtrInput `pulumi:"microsoftPeeringConfig"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The peer ASN.
	PeerASN pulumi.IntPtrInput `pulumi:"peerASN"`
	// The peering type.
	PeeringType pulumi.StringPtrInput `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort pulumi.StringPtrInput `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"primaryPeerAddressPrefix"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the RouteFilter resource.
	RouteFilter RouteFilterTypePtrInput `pulumi:"routeFilter"`
	// The secondary port.
	SecondaryAzurePort pulumi.StringPtrInput `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// The peering state.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Gets peering stats.
	Stats ExpressRouteCircuitStatsPtrInput `pulumi:"stats"`
	// The VLAN ID.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (ExpressRouteCircuitPeeringTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringTypeArgs) ToExpressRouteCircuitPeeringTypeOutput() ExpressRouteCircuitPeeringTypeOutput {
	return i.ToExpressRouteCircuitPeeringTypeOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringTypeArgs) ToExpressRouteCircuitPeeringTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringTypeOutput)
}

// ExpressRouteCircuitPeeringTypeArrayInput is an input type that accepts ExpressRouteCircuitPeeringTypeArray and ExpressRouteCircuitPeeringTypeArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringTypeArrayInput` via:
//
//          ExpressRouteCircuitPeeringTypeArray{ ExpressRouteCircuitPeeringTypeArgs{...} }
type ExpressRouteCircuitPeeringTypeArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringTypeArrayOutput() ExpressRouteCircuitPeeringTypeArrayOutput
	ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(context.Context) ExpressRouteCircuitPeeringTypeArrayOutput
}

type ExpressRouteCircuitPeeringTypeArray []ExpressRouteCircuitPeeringTypeInput

func (ExpressRouteCircuitPeeringTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringTypeArray) ToExpressRouteCircuitPeeringTypeArrayOutput() ExpressRouteCircuitPeeringTypeArrayOutput {
	return i.ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringTypeArray) ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringTypeArrayOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringTypeOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringTypeOutput) ToExpressRouteCircuitPeeringTypeOutput() ExpressRouteCircuitPeeringTypeOutput {
	return o
}

func (o ExpressRouteCircuitPeeringTypeOutput) ToExpressRouteCircuitPeeringTypeOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeOutput {
	return o
}

// The Azure ASN.
func (o ExpressRouteCircuitPeeringTypeOutput) AzureASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *int { return v.AzureASN }).(pulumi.IntPtrOutput)
}

// The list of circuit connections associated with Azure Private Peering for this circuit.
func (o ExpressRouteCircuitPeeringTypeOutput) Connections() ExpressRouteCircuitConnectionTypeArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) []ExpressRouteCircuitConnectionType { return v.Connections }).(ExpressRouteCircuitConnectionTypeArrayOutput)
}

// The GatewayManager Etag.
func (o ExpressRouteCircuitPeeringTypeOutput) GatewayManagerEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.GatewayManagerEtag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ExpressRouteCircuitPeeringTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IPv6 peering configuration.
func (o ExpressRouteCircuitPeeringTypeOutput) Ipv6PeeringConfig() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *Ipv6ExpressRouteCircuitPeeringConfig {
		return v.Ipv6PeeringConfig
	}).(Ipv6ExpressRouteCircuitPeeringConfigPtrOutput)
}

// Gets whether the provider or the customer last modified the peering.
func (o ExpressRouteCircuitPeeringTypeOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The Microsoft peering configuration.
func (o ExpressRouteCircuitPeeringTypeOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *ExpressRouteCircuitPeeringConfig {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitPeeringTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The peer ASN.
func (o ExpressRouteCircuitPeeringTypeOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *int { return v.PeerASN }).(pulumi.IntPtrOutput)
}

// The peering type.
func (o ExpressRouteCircuitPeeringTypeOutput) PeeringType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.PeeringType }).(pulumi.StringPtrOutput)
}

// The primary port.
func (o ExpressRouteCircuitPeeringTypeOutput) PrimaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.PrimaryAzurePort }).(pulumi.StringPtrOutput)
}

// The primary address prefix.
func (o ExpressRouteCircuitPeeringTypeOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitPeeringTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the RouteFilter resource.
func (o ExpressRouteCircuitPeeringTypeOutput) RouteFilter() RouteFilterTypePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *RouteFilterType { return v.RouteFilter }).(RouteFilterTypePtrOutput)
}

// The secondary port.
func (o ExpressRouteCircuitPeeringTypeOutput) SecondaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.SecondaryAzurePort }).(pulumi.StringPtrOutput)
}

// The secondary address prefix.
func (o ExpressRouteCircuitPeeringTypeOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The shared key.
func (o ExpressRouteCircuitPeeringTypeOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// The peering state.
func (o ExpressRouteCircuitPeeringTypeOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Gets peering stats.
func (o ExpressRouteCircuitPeeringTypeOutput) Stats() ExpressRouteCircuitStatsPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *ExpressRouteCircuitStats { return v.Stats }).(ExpressRouteCircuitStatsPtrOutput)
}

// The VLAN ID.
func (o ExpressRouteCircuitPeeringTypeOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringType) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitPeeringTypeArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringType)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringTypeArrayOutput) ToExpressRouteCircuitPeeringTypeArrayOutput() ExpressRouteCircuitPeeringTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringTypeArrayOutput) ToExpressRouteCircuitPeeringTypeArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringTypeArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringTypeArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitPeeringTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitPeeringType {
		return vs[0].([]ExpressRouteCircuitPeeringType)[vs[1].(int)]
	}).(ExpressRouteCircuitPeeringTypeOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfig struct {
	// The communities of bgp peering. Specified for microsoft peering
	AdvertisedCommunities []string `pulumi:"advertisedCommunities"`
	// The reference of AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes []string `pulumi:"advertisedPublicPrefixes"`
	// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
	AdvertisedPublicPrefixesState *string `pulumi:"advertisedPublicPrefixesState"`
	// The CustomerASN of the peering.
	CustomerASN *int `pulumi:"customerASN"`
	// The legacy mode of the peering.
	LegacyMode *int `pulumi:"legacyMode"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName *string `pulumi:"routingRegistryName"`
}

// ExpressRouteCircuitPeeringConfigInput is an input type that accepts ExpressRouteCircuitPeeringConfigArgs and ExpressRouteCircuitPeeringConfigOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigInput` via:
//
//          ExpressRouteCircuitPeeringConfigArgs{...}
type ExpressRouteCircuitPeeringConfigInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigOutput() ExpressRouteCircuitPeeringConfigOutput
	ToExpressRouteCircuitPeeringConfigOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigOutput
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigArgs struct {
	// The communities of bgp peering. Specified for microsoft peering
	AdvertisedCommunities pulumi.StringArrayInput `pulumi:"advertisedCommunities"`
	// The reference of AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes pulumi.StringArrayInput `pulumi:"advertisedPublicPrefixes"`
	// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
	AdvertisedPublicPrefixesState pulumi.StringPtrInput `pulumi:"advertisedPublicPrefixesState"`
	// The CustomerASN of the peering.
	CustomerASN pulumi.IntPtrInput `pulumi:"customerASN"`
	// The legacy mode of the peering.
	LegacyMode pulumi.IntPtrInput `pulumi:"legacyMode"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName pulumi.StringPtrInput `pulumi:"routingRegistryName"`
}

func (ExpressRouteCircuitPeeringConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigOutput() ExpressRouteCircuitPeeringConfigOutput {
	return i.ToExpressRouteCircuitPeeringConfigOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigOutput)
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigArgs) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigOutput).ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPeeringConfigPtrInput is an input type that accepts ExpressRouteCircuitPeeringConfigArgs, ExpressRouteCircuitPeeringConfigPtr and ExpressRouteCircuitPeeringConfigPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigPtrInput` via:
//
//          ExpressRouteCircuitPeeringConfigArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitPeeringConfigPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput
	ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigPtrOutput
}

type expressRouteCircuitPeeringConfigPtrType ExpressRouteCircuitPeeringConfigArgs

func ExpressRouteCircuitPeeringConfigPtr(v *ExpressRouteCircuitPeeringConfigArgs) ExpressRouteCircuitPeeringConfigPtrInput {
	return (*expressRouteCircuitPeeringConfigPtrType)(v)
}

func (*expressRouteCircuitPeeringConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (i *expressRouteCircuitPeeringConfigPtrType) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPeeringConfigPtrType) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigOutput() ExpressRouteCircuitPeeringConfigOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringConfigOutput) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *ExpressRouteCircuitPeeringConfig {
		return &v
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The communities of bgp peering. Specified for microsoft peering
func (o ExpressRouteCircuitPeeringConfigOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) []string { return v.AdvertisedCommunities }).(pulumi.StringArrayOutput)
}

// The reference of AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) []string { return v.AdvertisedPublicPrefixes }).(pulumi.StringArrayOutput)
}

// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
func (o ExpressRouteCircuitPeeringConfigOutput) AdvertisedPublicPrefixesState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *string { return v.AdvertisedPublicPrefixesState }).(pulumi.StringPtrOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *int { return v.CustomerASN }).(pulumi.IntPtrOutput)
}

// The legacy mode of the peering.
func (o ExpressRouteCircuitPeeringConfigOutput) LegacyMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *int { return v.LegacyMode }).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfig) *string { return v.RoutingRegistryName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringConfigPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigPtrOutput) ToExpressRouteCircuitPeeringConfigPtrOutput() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigPtrOutput) ToExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigPtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigPtrOutput) Elem() ExpressRouteCircuitPeeringConfigOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) ExpressRouteCircuitPeeringConfig { return *v }).(ExpressRouteCircuitPeeringConfigOutput)
}

// The communities of bgp peering. Specified for microsoft peering
func (o ExpressRouteCircuitPeeringConfigPtrOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedCommunities
	}).(pulumi.StringArrayOutput)
}

// The reference of AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixes
	}).(pulumi.StringArrayOutput)
}

// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) AdvertisedPublicPrefixesState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixesState
	}).(pulumi.StringPtrOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) *int {
		if v == nil {
			return nil
		}
		return v.CustomerASN
	}).(pulumi.IntPtrOutput)
}

// The legacy mode of the peering.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) LegacyMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) *int {
		if v == nil {
			return nil
		}
		return v.LegacyMode
	}).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigPtrOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.RoutingRegistryName
	}).(pulumi.StringPtrOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigResponse struct {
	// The communities of bgp peering. Specified for microsoft peering
	AdvertisedCommunities []string `pulumi:"advertisedCommunities"`
	// The reference of AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes []string `pulumi:"advertisedPublicPrefixes"`
	// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
	AdvertisedPublicPrefixesState *string `pulumi:"advertisedPublicPrefixesState"`
	// The CustomerASN of the peering.
	CustomerASN *int `pulumi:"customerASN"`
	// The legacy mode of the peering.
	LegacyMode *int `pulumi:"legacyMode"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName *string `pulumi:"routingRegistryName"`
}

// ExpressRouteCircuitPeeringConfigResponseInput is an input type that accepts ExpressRouteCircuitPeeringConfigResponseArgs and ExpressRouteCircuitPeeringConfigResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigResponseInput` via:
//
//          ExpressRouteCircuitPeeringConfigResponseArgs{...}
type ExpressRouteCircuitPeeringConfigResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigResponseOutput() ExpressRouteCircuitPeeringConfigResponseOutput
	ToExpressRouteCircuitPeeringConfigResponseOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigResponseOutput
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigResponseArgs struct {
	// The communities of bgp peering. Specified for microsoft peering
	AdvertisedCommunities pulumi.StringArrayInput `pulumi:"advertisedCommunities"`
	// The reference of AdvertisedPublicPrefixes.
	AdvertisedPublicPrefixes pulumi.StringArrayInput `pulumi:"advertisedPublicPrefixes"`
	// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
	AdvertisedPublicPrefixesState pulumi.StringPtrInput `pulumi:"advertisedPublicPrefixesState"`
	// The CustomerASN of the peering.
	CustomerASN pulumi.IntPtrInput `pulumi:"customerASN"`
	// The legacy mode of the peering.
	LegacyMode pulumi.IntPtrInput `pulumi:"legacyMode"`
	// The RoutingRegistryName of the configuration.
	RoutingRegistryName pulumi.StringPtrInput `pulumi:"routingRegistryName"`
}

func (ExpressRouteCircuitPeeringConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringConfigResponseArgs) ToExpressRouteCircuitPeeringConfigResponseOutput() ExpressRouteCircuitPeeringConfigResponseOutput {
	return i.ToExpressRouteCircuitPeeringConfigResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigResponseArgs) ToExpressRouteCircuitPeeringConfigResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigResponseOutput)
}

func (i ExpressRouteCircuitPeeringConfigResponseArgs) ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringConfigResponseArgs) ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigResponseOutput).ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitPeeringConfigResponsePtrInput is an input type that accepts ExpressRouteCircuitPeeringConfigResponseArgs, ExpressRouteCircuitPeeringConfigResponsePtr and ExpressRouteCircuitPeeringConfigResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringConfigResponsePtrInput` via:
//
//          ExpressRouteCircuitPeeringConfigResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitPeeringConfigResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput
	ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput
}

type expressRouteCircuitPeeringConfigResponsePtrType ExpressRouteCircuitPeeringConfigResponseArgs

func ExpressRouteCircuitPeeringConfigResponsePtr(v *ExpressRouteCircuitPeeringConfigResponseArgs) ExpressRouteCircuitPeeringConfigResponsePtrInput {
	return (*expressRouteCircuitPeeringConfigResponsePtrType)(v)
}

func (*expressRouteCircuitPeeringConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (i *expressRouteCircuitPeeringConfigResponsePtrType) ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return i.ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitPeeringConfigResponsePtrType) ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// Specifies the peering configuration.
type ExpressRouteCircuitPeeringConfigResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigResponseOutput) ToExpressRouteCircuitPeeringConfigResponseOutput() ExpressRouteCircuitPeeringConfigResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigResponseOutput) ToExpressRouteCircuitPeeringConfigResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigResponseOutput) ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitPeeringConfigResponseOutput) ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *ExpressRouteCircuitPeeringConfigResponse {
		return &v
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The communities of bgp peering. Specified for microsoft peering
func (o ExpressRouteCircuitPeeringConfigResponseOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) []string { return v.AdvertisedCommunities }).(pulumi.StringArrayOutput)
}

// The reference of AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) []string { return v.AdvertisedPublicPrefixes }).(pulumi.StringArrayOutput)
}

// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) AdvertisedPublicPrefixesState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *string { return v.AdvertisedPublicPrefixesState }).(pulumi.StringPtrOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *int { return v.CustomerASN }).(pulumi.IntPtrOutput)
}

// The legacy mode of the peering.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) LegacyMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *int { return v.LegacyMode }).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigResponseOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringConfigResponse) *string { return v.RoutingRegistryName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitPeeringConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) ToExpressRouteCircuitPeeringConfigResponsePtrOutput() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) ToExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) Elem() ExpressRouteCircuitPeeringConfigResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) ExpressRouteCircuitPeeringConfigResponse { return *v }).(ExpressRouteCircuitPeeringConfigResponseOutput)
}

// The communities of bgp peering. Specified for microsoft peering
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) AdvertisedCommunities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedCommunities
	}).(pulumi.StringArrayOutput)
}

// The reference of AdvertisedPublicPrefixes.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) AdvertisedPublicPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) []string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixes
	}).(pulumi.StringArrayOutput)
}

// AdvertisedPublicPrefixState of the Peering resource. Possible values are 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) AdvertisedPublicPrefixesState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.AdvertisedPublicPrefixesState
	}).(pulumi.StringPtrOutput)
}

// The CustomerASN of the peering.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) CustomerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.CustomerASN
	}).(pulumi.IntPtrOutput)
}

// The legacy mode of the peering.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) LegacyMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.LegacyMode
	}).(pulumi.IntPtrOutput)
}

// The RoutingRegistryName of the configuration.
func (o ExpressRouteCircuitPeeringConfigResponsePtrOutput) RoutingRegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.RoutingRegistryName
	}).(pulumi.StringPtrOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringResponse struct {
	// The Azure ASN.
	AzureASN *int `pulumi:"azureASN"`
	// The list of circuit connections associated with Azure Private Peering for this circuit.
	Connections []ExpressRouteCircuitConnectionResponse `pulumi:"connections"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// The GatewayManager Etag.
	GatewayManagerEtag *string `pulumi:"gatewayManagerEtag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The IPv6 peering configuration.
	Ipv6PeeringConfig *Ipv6ExpressRouteCircuitPeeringConfigResponse `pulumi:"ipv6PeeringConfig"`
	// Gets whether the provider or the customer last modified the peering.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfigResponse `pulumi:"microsoftPeeringConfig"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The peer ASN.
	PeerASN *int `pulumi:"peerASN"`
	// The peering type.
	PeeringType *string `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort *string `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the RouteFilter resource.
	RouteFilter *RouteFilterResponse `pulumi:"routeFilter"`
	// The secondary port.
	SecondaryAzurePort *string `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey *string `pulumi:"sharedKey"`
	// The peering state.
	State *string `pulumi:"state"`
	// Gets peering stats.
	Stats *ExpressRouteCircuitStatsResponse `pulumi:"stats"`
	// The VLAN ID.
	VlanId *int `pulumi:"vlanId"`
}

// ExpressRouteCircuitPeeringResponseInput is an input type that accepts ExpressRouteCircuitPeeringResponseArgs and ExpressRouteCircuitPeeringResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringResponseInput` via:
//
//          ExpressRouteCircuitPeeringResponseArgs{...}
type ExpressRouteCircuitPeeringResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringResponseOutput() ExpressRouteCircuitPeeringResponseOutput
	ToExpressRouteCircuitPeeringResponseOutputWithContext(context.Context) ExpressRouteCircuitPeeringResponseOutput
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringResponseArgs struct {
	// The Azure ASN.
	AzureASN pulumi.IntPtrInput `pulumi:"azureASN"`
	// The list of circuit connections associated with Azure Private Peering for this circuit.
	Connections ExpressRouteCircuitConnectionResponseArrayInput `pulumi:"connections"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// The GatewayManager Etag.
	GatewayManagerEtag pulumi.StringPtrInput `pulumi:"gatewayManagerEtag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The IPv6 peering configuration.
	Ipv6PeeringConfig Ipv6ExpressRouteCircuitPeeringConfigResponsePtrInput `pulumi:"ipv6PeeringConfig"`
	// Gets whether the provider or the customer last modified the peering.
	LastModifiedBy pulumi.StringPtrInput `pulumi:"lastModifiedBy"`
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig ExpressRouteCircuitPeeringConfigResponsePtrInput `pulumi:"microsoftPeeringConfig"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The peer ASN.
	PeerASN pulumi.IntPtrInput `pulumi:"peerASN"`
	// The peering type.
	PeeringType pulumi.StringPtrInput `pulumi:"peeringType"`
	// The primary port.
	PrimaryAzurePort pulumi.StringPtrInput `pulumi:"primaryAzurePort"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"primaryPeerAddressPrefix"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the RouteFilter resource.
	RouteFilter RouteFilterResponsePtrInput `pulumi:"routeFilter"`
	// The secondary port.
	SecondaryAzurePort pulumi.StringPtrInput `pulumi:"secondaryAzurePort"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"secondaryPeerAddressPrefix"`
	// The shared key.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
	// The peering state.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Gets peering stats.
	Stats ExpressRouteCircuitStatsResponsePtrInput `pulumi:"stats"`
	// The VLAN ID.
	VlanId pulumi.IntPtrInput `pulumi:"vlanId"`
}

func (ExpressRouteCircuitPeeringResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringResponseArgs) ToExpressRouteCircuitPeeringResponseOutput() ExpressRouteCircuitPeeringResponseOutput {
	return i.ToExpressRouteCircuitPeeringResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringResponseArgs) ToExpressRouteCircuitPeeringResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringResponseOutput)
}

// ExpressRouteCircuitPeeringResponseArrayInput is an input type that accepts ExpressRouteCircuitPeeringResponseArray and ExpressRouteCircuitPeeringResponseArrayOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitPeeringResponseArrayInput` via:
//
//          ExpressRouteCircuitPeeringResponseArray{ ExpressRouteCircuitPeeringResponseArgs{...} }
type ExpressRouteCircuitPeeringResponseArrayInput interface {
	pulumi.Input

	ToExpressRouteCircuitPeeringResponseArrayOutput() ExpressRouteCircuitPeeringResponseArrayOutput
	ToExpressRouteCircuitPeeringResponseArrayOutputWithContext(context.Context) ExpressRouteCircuitPeeringResponseArrayOutput
}

type ExpressRouteCircuitPeeringResponseArray []ExpressRouteCircuitPeeringResponseInput

func (ExpressRouteCircuitPeeringResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitPeeringResponseArray) ToExpressRouteCircuitPeeringResponseArrayOutput() ExpressRouteCircuitPeeringResponseArrayOutput {
	return i.ToExpressRouteCircuitPeeringResponseArrayOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitPeeringResponseArray) ToExpressRouteCircuitPeeringResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitPeeringResponseArrayOutput)
}

// Peering in an ExpressRouteCircuit resource.
type ExpressRouteCircuitPeeringResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitPeeringResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringResponseOutput) ToExpressRouteCircuitPeeringResponseOutput() ExpressRouteCircuitPeeringResponseOutput {
	return o
}

func (o ExpressRouteCircuitPeeringResponseOutput) ToExpressRouteCircuitPeeringResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringResponseOutput {
	return o
}

// The Azure ASN.
func (o ExpressRouteCircuitPeeringResponseOutput) AzureASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *int { return v.AzureASN }).(pulumi.IntPtrOutput)
}

// The list of circuit connections associated with Azure Private Peering for this circuit.
func (o ExpressRouteCircuitPeeringResponseOutput) Connections() ExpressRouteCircuitConnectionResponseArrayOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) []ExpressRouteCircuitConnectionResponse {
		return v.Connections
	}).(ExpressRouteCircuitConnectionResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o ExpressRouteCircuitPeeringResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// The GatewayManager Etag.
func (o ExpressRouteCircuitPeeringResponseOutput) GatewayManagerEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.GatewayManagerEtag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ExpressRouteCircuitPeeringResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IPv6 peering configuration.
func (o ExpressRouteCircuitPeeringResponseOutput) Ipv6PeeringConfig() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *Ipv6ExpressRouteCircuitPeeringConfigResponse {
		return v.Ipv6PeeringConfig
	}).(Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// Gets whether the provider or the customer last modified the peering.
func (o ExpressRouteCircuitPeeringResponseOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The Microsoft peering configuration.
func (o ExpressRouteCircuitPeeringResponseOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *ExpressRouteCircuitPeeringConfigResponse {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ExpressRouteCircuitPeeringResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The peer ASN.
func (o ExpressRouteCircuitPeeringResponseOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *int { return v.PeerASN }).(pulumi.IntPtrOutput)
}

// The peering type.
func (o ExpressRouteCircuitPeeringResponseOutput) PeeringType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.PeeringType }).(pulumi.StringPtrOutput)
}

// The primary port.
func (o ExpressRouteCircuitPeeringResponseOutput) PrimaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.PrimaryAzurePort }).(pulumi.StringPtrOutput)
}

// The primary address prefix.
func (o ExpressRouteCircuitPeeringResponseOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ExpressRouteCircuitPeeringResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the RouteFilter resource.
func (o ExpressRouteCircuitPeeringResponseOutput) RouteFilter() RouteFilterResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *RouteFilterResponse { return v.RouteFilter }).(RouteFilterResponsePtrOutput)
}

// The secondary port.
func (o ExpressRouteCircuitPeeringResponseOutput) SecondaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.SecondaryAzurePort }).(pulumi.StringPtrOutput)
}

// The secondary address prefix.
func (o ExpressRouteCircuitPeeringResponseOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The shared key.
func (o ExpressRouteCircuitPeeringResponseOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// The peering state.
func (o ExpressRouteCircuitPeeringResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Gets peering stats.
func (o ExpressRouteCircuitPeeringResponseOutput) Stats() ExpressRouteCircuitStatsResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *ExpressRouteCircuitStatsResponse { return v.Stats }).(ExpressRouteCircuitStatsResponsePtrOutput)
}

// The VLAN ID.
func (o ExpressRouteCircuitPeeringResponseOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitPeeringResponse) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitPeeringResponseArrayOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitPeeringResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExpressRouteCircuitPeeringResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitPeeringResponseArrayOutput) ToExpressRouteCircuitPeeringResponseArrayOutput() ExpressRouteCircuitPeeringResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringResponseArrayOutput) ToExpressRouteCircuitPeeringResponseArrayOutputWithContext(ctx context.Context) ExpressRouteCircuitPeeringResponseArrayOutput {
	return o
}

func (o ExpressRouteCircuitPeeringResponseArrayOutput) Index(i pulumi.IntInput) ExpressRouteCircuitPeeringResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExpressRouteCircuitPeeringResponse {
		return vs[0].([]ExpressRouteCircuitPeeringResponse)[vs[1].(int)]
	}).(ExpressRouteCircuitPeeringResponseOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderProperties struct {
	// The BandwidthInMbps.
	BandwidthInMbps *int `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation *string `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName *string `pulumi:"serviceProviderName"`
}

// ExpressRouteCircuitServiceProviderPropertiesInput is an input type that accepts ExpressRouteCircuitServiceProviderPropertiesArgs and ExpressRouteCircuitServiceProviderPropertiesOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitServiceProviderPropertiesInput` via:
//
//          ExpressRouteCircuitServiceProviderPropertiesArgs{...}
type ExpressRouteCircuitServiceProviderPropertiesInput interface {
	pulumi.Input

	ToExpressRouteCircuitServiceProviderPropertiesOutput() ExpressRouteCircuitServiceProviderPropertiesOutput
	ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(context.Context) ExpressRouteCircuitServiceProviderPropertiesOutput
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesArgs struct {
	// The BandwidthInMbps.
	BandwidthInMbps pulumi.IntPtrInput `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation pulumi.StringPtrInput `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName pulumi.StringPtrInput `pulumi:"serviceProviderName"`
}

func (ExpressRouteCircuitServiceProviderPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesOutput() ExpressRouteCircuitServiceProviderPropertiesOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesOutput)
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitServiceProviderPropertiesArgs) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesOutput).ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitServiceProviderPropertiesPtrInput is an input type that accepts ExpressRouteCircuitServiceProviderPropertiesArgs, ExpressRouteCircuitServiceProviderPropertiesPtr and ExpressRouteCircuitServiceProviderPropertiesPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitServiceProviderPropertiesPtrInput` via:
//
//          ExpressRouteCircuitServiceProviderPropertiesArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitServiceProviderPropertiesPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput
	ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput
}

type expressRouteCircuitServiceProviderPropertiesPtrType ExpressRouteCircuitServiceProviderPropertiesArgs

func ExpressRouteCircuitServiceProviderPropertiesPtr(v *ExpressRouteCircuitServiceProviderPropertiesArgs) ExpressRouteCircuitServiceProviderPropertiesPtrInput {
	return (*expressRouteCircuitServiceProviderPropertiesPtrType)(v)
}

func (*expressRouteCircuitServiceProviderPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (i *expressRouteCircuitServiceProviderPropertiesPtrType) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitServiceProviderPropertiesPtrType) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesPtrOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesOutput() ExpressRouteCircuitServiceProviderPropertiesOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o.ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderProperties) *ExpressRouteCircuitServiceProviderProperties {
		return &v
	}).(ExpressRouteCircuitServiceProviderPropertiesPtrOutput)
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderProperties) *int { return v.BandwidthInMbps }).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderProperties) *string { return v.PeeringLocation }).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderProperties) *string { return v.ServiceProviderName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitServiceProviderPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitServiceProviderProperties)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutput() ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ToExpressRouteCircuitServiceProviderPropertiesPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesPtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) Elem() ExpressRouteCircuitServiceProviderPropertiesOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) ExpressRouteCircuitServiceProviderProperties {
		return *v
	}).(ExpressRouteCircuitServiceProviderPropertiesOutput)
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthInMbps
	}).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) *string {
		if v == nil {
			return nil
		}
		return v.PeeringLocation
	}).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesPtrOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderProperties) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderName
	}).(pulumi.StringPtrOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesResponse struct {
	// The BandwidthInMbps.
	BandwidthInMbps *int `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation *string `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName *string `pulumi:"serviceProviderName"`
}

// ExpressRouteCircuitServiceProviderPropertiesResponseInput is an input type that accepts ExpressRouteCircuitServiceProviderPropertiesResponseArgs and ExpressRouteCircuitServiceProviderPropertiesResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitServiceProviderPropertiesResponseInput` via:
//
//          ExpressRouteCircuitServiceProviderPropertiesResponseArgs{...}
type ExpressRouteCircuitServiceProviderPropertiesResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitServiceProviderPropertiesResponseOutput() ExpressRouteCircuitServiceProviderPropertiesResponseOutput
	ToExpressRouteCircuitServiceProviderPropertiesResponseOutputWithContext(context.Context) ExpressRouteCircuitServiceProviderPropertiesResponseOutput
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesResponseArgs struct {
	// The BandwidthInMbps.
	BandwidthInMbps pulumi.IntPtrInput `pulumi:"bandwidthInMbps"`
	// The peering location.
	PeeringLocation pulumi.StringPtrInput `pulumi:"peeringLocation"`
	// The serviceProviderName.
	ServiceProviderName pulumi.StringPtrInput `pulumi:"serviceProviderName"`
}

func (ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderPropertiesResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ToExpressRouteCircuitServiceProviderPropertiesResponseOutput() ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ToExpressRouteCircuitServiceProviderPropertiesResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesResponseOutput)
}

func (i ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesResponseOutput).ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitServiceProviderPropertiesResponsePtrInput is an input type that accepts ExpressRouteCircuitServiceProviderPropertiesResponseArgs, ExpressRouteCircuitServiceProviderPropertiesResponsePtr and ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitServiceProviderPropertiesResponsePtrInput` via:
//
//          ExpressRouteCircuitServiceProviderPropertiesResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitServiceProviderPropertiesResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput
	ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput
}

type expressRouteCircuitServiceProviderPropertiesResponsePtrType ExpressRouteCircuitServiceProviderPropertiesResponseArgs

func ExpressRouteCircuitServiceProviderPropertiesResponsePtr(v *ExpressRouteCircuitServiceProviderPropertiesResponseArgs) ExpressRouteCircuitServiceProviderPropertiesResponsePtrInput {
	return (*expressRouteCircuitServiceProviderPropertiesResponsePtrType)(v)
}

func (*expressRouteCircuitServiceProviderPropertiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitServiceProviderPropertiesResponse)(nil)).Elem()
}

func (i *expressRouteCircuitServiceProviderPropertiesResponsePtrType) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return i.ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitServiceProviderPropertiesResponsePtrType) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput)
}

// Contains ServiceProviderProperties in an ExpressRouteCircuit.
type ExpressRouteCircuitServiceProviderPropertiesResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitServiceProviderPropertiesResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesResponseOutput() ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o.ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesResponse) *ExpressRouteCircuitServiceProviderPropertiesResponse {
		return &v
	}).(ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput)
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesResponse) *int { return v.BandwidthInMbps }).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesResponse) *string { return v.PeeringLocation }).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesResponseOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitServiceProviderPropertiesResponse) *string { return v.ServiceProviderName }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitServiceProviderPropertiesResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput() ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ToExpressRouteCircuitServiceProviderPropertiesResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) Elem() ExpressRouteCircuitServiceProviderPropertiesResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) ExpressRouteCircuitServiceProviderPropertiesResponse {
		return *v
	}).(ExpressRouteCircuitServiceProviderPropertiesResponseOutput)
}

// The BandwidthInMbps.
func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) BandwidthInMbps() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) *int {
		if v == nil {
			return nil
		}
		return v.BandwidthInMbps
	}).(pulumi.IntPtrOutput)
}

// The peering location.
func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) PeeringLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.PeeringLocation
	}).(pulumi.StringPtrOutput)
}

// The serviceProviderName.
func (o ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput) ServiceProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitServiceProviderPropertiesResponse) *string {
		if v == nil {
			return nil
		}
		return v.ServiceProviderName
	}).(pulumi.StringPtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSku struct {
	// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
	Family *string `pulumi:"family"`
	// The name of the SKU.
	Name *string `pulumi:"name"`
	// The tier of the SKU. Possible values are 'Standard' and 'Premium'.
	Tier *string `pulumi:"tier"`
}

// ExpressRouteCircuitSkuInput is an input type that accepts ExpressRouteCircuitSkuArgs and ExpressRouteCircuitSkuOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuInput` via:
//
//          ExpressRouteCircuitSkuArgs{...}
type ExpressRouteCircuitSkuInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuOutput() ExpressRouteCircuitSkuOutput
	ToExpressRouteCircuitSkuOutputWithContext(context.Context) ExpressRouteCircuitSkuOutput
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuArgs struct {
	// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The tier of the SKU. Possible values are 'Standard' and 'Premium'.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ExpressRouteCircuitSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSku)(nil)).Elem()
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuOutput() ExpressRouteCircuitSkuOutput {
	return i.ToExpressRouteCircuitSkuOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuOutput)
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return i.ToExpressRouteCircuitSkuPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuArgs) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuOutput).ToExpressRouteCircuitSkuPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitSkuPtrInput is an input type that accepts ExpressRouteCircuitSkuArgs, ExpressRouteCircuitSkuPtr and ExpressRouteCircuitSkuPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuPtrInput` via:
//
//          ExpressRouteCircuitSkuArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitSkuPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput
	ToExpressRouteCircuitSkuPtrOutputWithContext(context.Context) ExpressRouteCircuitSkuPtrOutput
}

type expressRouteCircuitSkuPtrType ExpressRouteCircuitSkuArgs

func ExpressRouteCircuitSkuPtr(v *ExpressRouteCircuitSkuArgs) ExpressRouteCircuitSkuPtrInput {
	return (*expressRouteCircuitSkuPtrType)(v)
}

func (*expressRouteCircuitSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSku)(nil)).Elem()
}

func (i *expressRouteCircuitSkuPtrType) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return i.ToExpressRouteCircuitSkuPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitSkuPtrType) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuPtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSku)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuOutput() ExpressRouteCircuitSkuOutput {
	return o
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuOutput {
	return o
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return o.ToExpressRouteCircuitSkuPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitSkuOutput) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) *ExpressRouteCircuitSku {
		return &v
	}).(ExpressRouteCircuitSkuPtrOutput)
}

// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
func (o ExpressRouteCircuitSkuOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The tier of the SKU. Possible values are 'Standard' and 'Premium'.
func (o ExpressRouteCircuitSkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitSkuPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSku)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuPtrOutput) ToExpressRouteCircuitSkuPtrOutput() ExpressRouteCircuitSkuPtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuPtrOutput) ToExpressRouteCircuitSkuPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuPtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuPtrOutput) Elem() ExpressRouteCircuitSkuOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) ExpressRouteCircuitSku { return *v }).(ExpressRouteCircuitSkuOutput)
}

// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
func (o ExpressRouteCircuitSkuPtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of the SKU. Possible values are 'Standard' and 'Premium'.
func (o ExpressRouteCircuitSkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuResponse struct {
	// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
	Family *string `pulumi:"family"`
	// The name of the SKU.
	Name *string `pulumi:"name"`
	// The tier of the SKU. Possible values are 'Standard' and 'Premium'.
	Tier *string `pulumi:"tier"`
}

// ExpressRouteCircuitSkuResponseInput is an input type that accepts ExpressRouteCircuitSkuResponseArgs and ExpressRouteCircuitSkuResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuResponseInput` via:
//
//          ExpressRouteCircuitSkuResponseArgs{...}
type ExpressRouteCircuitSkuResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuResponseOutput() ExpressRouteCircuitSkuResponseOutput
	ToExpressRouteCircuitSkuResponseOutputWithContext(context.Context) ExpressRouteCircuitSkuResponseOutput
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuResponseArgs struct {
	// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
	Family pulumi.StringPtrInput `pulumi:"family"`
	// The name of the SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The tier of the SKU. Possible values are 'Standard' and 'Premium'.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (ExpressRouteCircuitSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSkuResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitSkuResponseArgs) ToExpressRouteCircuitSkuResponseOutput() ExpressRouteCircuitSkuResponseOutput {
	return i.ToExpressRouteCircuitSkuResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuResponseArgs) ToExpressRouteCircuitSkuResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuResponseOutput)
}

func (i ExpressRouteCircuitSkuResponseArgs) ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput {
	return i.ToExpressRouteCircuitSkuResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitSkuResponseArgs) ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuResponseOutput).ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitSkuResponsePtrInput is an input type that accepts ExpressRouteCircuitSkuResponseArgs, ExpressRouteCircuitSkuResponsePtr and ExpressRouteCircuitSkuResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitSkuResponsePtrInput` via:
//
//          ExpressRouteCircuitSkuResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitSkuResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput
	ToExpressRouteCircuitSkuResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitSkuResponsePtrOutput
}

type expressRouteCircuitSkuResponsePtrType ExpressRouteCircuitSkuResponseArgs

func ExpressRouteCircuitSkuResponsePtr(v *ExpressRouteCircuitSkuResponseArgs) ExpressRouteCircuitSkuResponsePtrInput {
	return (*expressRouteCircuitSkuResponsePtrType)(v)
}

func (*expressRouteCircuitSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSkuResponse)(nil)).Elem()
}

func (i *expressRouteCircuitSkuResponsePtrType) ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput {
	return i.ToExpressRouteCircuitSkuResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitSkuResponsePtrType) ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitSkuResponsePtrOutput)
}

// Contains SKU in an ExpressRouteCircuit.
type ExpressRouteCircuitSkuResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitSkuResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuResponseOutput) ToExpressRouteCircuitSkuResponseOutput() ExpressRouteCircuitSkuResponseOutput {
	return o
}

func (o ExpressRouteCircuitSkuResponseOutput) ToExpressRouteCircuitSkuResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponseOutput {
	return o
}

func (o ExpressRouteCircuitSkuResponseOutput) ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput {
	return o.ToExpressRouteCircuitSkuResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitSkuResponseOutput) ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuResponse) *ExpressRouteCircuitSkuResponse {
		return &v
	}).(ExpressRouteCircuitSkuResponsePtrOutput)
}

// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
func (o ExpressRouteCircuitSkuResponseOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuResponse) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The tier of the SKU. Possible values are 'Standard' and 'Premium'.
func (o ExpressRouteCircuitSkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitSkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type ExpressRouteCircuitSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitSkuResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitSkuResponsePtrOutput) ToExpressRouteCircuitSkuResponsePtrOutput() ExpressRouteCircuitSkuResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuResponsePtrOutput) ToExpressRouteCircuitSkuResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitSkuResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitSkuResponsePtrOutput) Elem() ExpressRouteCircuitSkuResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) ExpressRouteCircuitSkuResponse { return *v }).(ExpressRouteCircuitSkuResponseOutput)
}

// The family of the SKU. Possible values are: 'UnlimitedData' and 'MeteredData'.
func (o ExpressRouteCircuitSkuResponsePtrOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Family
	}).(pulumi.StringPtrOutput)
}

// The name of the SKU.
func (o ExpressRouteCircuitSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The tier of the SKU. Possible values are 'Standard' and 'Premium'.
func (o ExpressRouteCircuitSkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStats struct {
	// Gets BytesIn of the peering.
	PrimarybytesIn *int `pulumi:"primarybytesIn"`
	// Gets BytesOut of the peering.
	PrimarybytesOut *int `pulumi:"primarybytesOut"`
	// Gets BytesIn of the peering.
	SecondarybytesIn *int `pulumi:"secondarybytesIn"`
	// Gets BytesOut of the peering.
	SecondarybytesOut *int `pulumi:"secondarybytesOut"`
}

// ExpressRouteCircuitStatsInput is an input type that accepts ExpressRouteCircuitStatsArgs and ExpressRouteCircuitStatsOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsInput` via:
//
//          ExpressRouteCircuitStatsArgs{...}
type ExpressRouteCircuitStatsInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsOutput() ExpressRouteCircuitStatsOutput
	ToExpressRouteCircuitStatsOutputWithContext(context.Context) ExpressRouteCircuitStatsOutput
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsArgs struct {
	// Gets BytesIn of the peering.
	PrimarybytesIn pulumi.IntPtrInput `pulumi:"primarybytesIn"`
	// Gets BytesOut of the peering.
	PrimarybytesOut pulumi.IntPtrInput `pulumi:"primarybytesOut"`
	// Gets BytesIn of the peering.
	SecondarybytesIn pulumi.IntPtrInput `pulumi:"secondarybytesIn"`
	// Gets BytesOut of the peering.
	SecondarybytesOut pulumi.IntPtrInput `pulumi:"secondarybytesOut"`
}

func (ExpressRouteCircuitStatsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStats)(nil)).Elem()
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsOutput() ExpressRouteCircuitStatsOutput {
	return i.ToExpressRouteCircuitStatsOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsOutput)
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return i.ToExpressRouteCircuitStatsPtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsArgs) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsOutput).ToExpressRouteCircuitStatsPtrOutputWithContext(ctx)
}

// ExpressRouteCircuitStatsPtrInput is an input type that accepts ExpressRouteCircuitStatsArgs, ExpressRouteCircuitStatsPtr and ExpressRouteCircuitStatsPtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsPtrInput` via:
//
//          ExpressRouteCircuitStatsArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitStatsPtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput
	ToExpressRouteCircuitStatsPtrOutputWithContext(context.Context) ExpressRouteCircuitStatsPtrOutput
}

type expressRouteCircuitStatsPtrType ExpressRouteCircuitStatsArgs

func ExpressRouteCircuitStatsPtr(v *ExpressRouteCircuitStatsArgs) ExpressRouteCircuitStatsPtrInput {
	return (*expressRouteCircuitStatsPtrType)(v)
}

func (*expressRouteCircuitStatsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStats)(nil)).Elem()
}

func (i *expressRouteCircuitStatsPtrType) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return i.ToExpressRouteCircuitStatsPtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitStatsPtrType) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsPtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStats)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsOutput() ExpressRouteCircuitStatsOutput {
	return o
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsOutput {
	return o
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return o.ToExpressRouteCircuitStatsPtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitStatsOutput) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *ExpressRouteCircuitStats {
		return &v
	}).(ExpressRouteCircuitStatsPtrOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsOutput) PrimarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *int { return v.PrimarybytesIn }).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsOutput) PrimarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *int { return v.PrimarybytesOut }).(pulumi.IntPtrOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsOutput) SecondarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *int { return v.SecondarybytesIn }).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsOutput) SecondarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStats) *int { return v.SecondarybytesOut }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitStatsPtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStats)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsPtrOutput) ToExpressRouteCircuitStatsPtrOutput() ExpressRouteCircuitStatsPtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsPtrOutput) ToExpressRouteCircuitStatsPtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsPtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsPtrOutput) Elem() ExpressRouteCircuitStatsOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) ExpressRouteCircuitStats { return *v }).(ExpressRouteCircuitStatsOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsPtrOutput) PrimarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) *int {
		if v == nil {
			return nil
		}
		return v.PrimarybytesIn
	}).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsPtrOutput) PrimarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) *int {
		if v == nil {
			return nil
		}
		return v.PrimarybytesOut
	}).(pulumi.IntPtrOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsPtrOutput) SecondarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) *int {
		if v == nil {
			return nil
		}
		return v.SecondarybytesIn
	}).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsPtrOutput) SecondarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStats) *int {
		if v == nil {
			return nil
		}
		return v.SecondarybytesOut
	}).(pulumi.IntPtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsResponse struct {
	// Gets BytesIn of the peering.
	PrimarybytesIn *int `pulumi:"primarybytesIn"`
	// Gets BytesOut of the peering.
	PrimarybytesOut *int `pulumi:"primarybytesOut"`
	// Gets BytesIn of the peering.
	SecondarybytesIn *int `pulumi:"secondarybytesIn"`
	// Gets BytesOut of the peering.
	SecondarybytesOut *int `pulumi:"secondarybytesOut"`
}

// ExpressRouteCircuitStatsResponseInput is an input type that accepts ExpressRouteCircuitStatsResponseArgs and ExpressRouteCircuitStatsResponseOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsResponseInput` via:
//
//          ExpressRouteCircuitStatsResponseArgs{...}
type ExpressRouteCircuitStatsResponseInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsResponseOutput() ExpressRouteCircuitStatsResponseOutput
	ToExpressRouteCircuitStatsResponseOutputWithContext(context.Context) ExpressRouteCircuitStatsResponseOutput
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsResponseArgs struct {
	// Gets BytesIn of the peering.
	PrimarybytesIn pulumi.IntPtrInput `pulumi:"primarybytesIn"`
	// Gets BytesOut of the peering.
	PrimarybytesOut pulumi.IntPtrInput `pulumi:"primarybytesOut"`
	// Gets BytesIn of the peering.
	SecondarybytesIn pulumi.IntPtrInput `pulumi:"secondarybytesIn"`
	// Gets BytesOut of the peering.
	SecondarybytesOut pulumi.IntPtrInput `pulumi:"secondarybytesOut"`
}

func (ExpressRouteCircuitStatsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStatsResponse)(nil)).Elem()
}

func (i ExpressRouteCircuitStatsResponseArgs) ToExpressRouteCircuitStatsResponseOutput() ExpressRouteCircuitStatsResponseOutput {
	return i.ToExpressRouteCircuitStatsResponseOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsResponseArgs) ToExpressRouteCircuitStatsResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsResponseOutput)
}

func (i ExpressRouteCircuitStatsResponseArgs) ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput {
	return i.ToExpressRouteCircuitStatsResponsePtrOutputWithContext(context.Background())
}

func (i ExpressRouteCircuitStatsResponseArgs) ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsResponseOutput).ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx)
}

// ExpressRouteCircuitStatsResponsePtrInput is an input type that accepts ExpressRouteCircuitStatsResponseArgs, ExpressRouteCircuitStatsResponsePtr and ExpressRouteCircuitStatsResponsePtrOutput values.
// You can construct a concrete instance of `ExpressRouteCircuitStatsResponsePtrInput` via:
//
//          ExpressRouteCircuitStatsResponseArgs{...}
//
//  or:
//
//          nil
type ExpressRouteCircuitStatsResponsePtrInput interface {
	pulumi.Input

	ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput
	ToExpressRouteCircuitStatsResponsePtrOutputWithContext(context.Context) ExpressRouteCircuitStatsResponsePtrOutput
}

type expressRouteCircuitStatsResponsePtrType ExpressRouteCircuitStatsResponseArgs

func ExpressRouteCircuitStatsResponsePtr(v *ExpressRouteCircuitStatsResponseArgs) ExpressRouteCircuitStatsResponsePtrInput {
	return (*expressRouteCircuitStatsResponsePtrType)(v)
}

func (*expressRouteCircuitStatsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStatsResponse)(nil)).Elem()
}

func (i *expressRouteCircuitStatsResponsePtrType) ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput {
	return i.ToExpressRouteCircuitStatsResponsePtrOutputWithContext(context.Background())
}

func (i *expressRouteCircuitStatsResponsePtrType) ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExpressRouteCircuitStatsResponsePtrOutput)
}

// Contains stats associated with the peering.
type ExpressRouteCircuitStatsResponseOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExpressRouteCircuitStatsResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsResponseOutput) ToExpressRouteCircuitStatsResponseOutput() ExpressRouteCircuitStatsResponseOutput {
	return o
}

func (o ExpressRouteCircuitStatsResponseOutput) ToExpressRouteCircuitStatsResponseOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponseOutput {
	return o
}

func (o ExpressRouteCircuitStatsResponseOutput) ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput {
	return o.ToExpressRouteCircuitStatsResponsePtrOutputWithContext(context.Background())
}

func (o ExpressRouteCircuitStatsResponseOutput) ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponsePtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *ExpressRouteCircuitStatsResponse {
		return &v
	}).(ExpressRouteCircuitStatsResponsePtrOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsResponseOutput) PrimarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *int { return v.PrimarybytesIn }).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsResponseOutput) PrimarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *int { return v.PrimarybytesOut }).(pulumi.IntPtrOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsResponseOutput) SecondarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *int { return v.SecondarybytesIn }).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsResponseOutput) SecondarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ExpressRouteCircuitStatsResponse) *int { return v.SecondarybytesOut }).(pulumi.IntPtrOutput)
}

type ExpressRouteCircuitStatsResponsePtrOutput struct{ *pulumi.OutputState }

func (ExpressRouteCircuitStatsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExpressRouteCircuitStatsResponse)(nil)).Elem()
}

func (o ExpressRouteCircuitStatsResponsePtrOutput) ToExpressRouteCircuitStatsResponsePtrOutput() ExpressRouteCircuitStatsResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsResponsePtrOutput) ToExpressRouteCircuitStatsResponsePtrOutputWithContext(ctx context.Context) ExpressRouteCircuitStatsResponsePtrOutput {
	return o
}

func (o ExpressRouteCircuitStatsResponsePtrOutput) Elem() ExpressRouteCircuitStatsResponseOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) ExpressRouteCircuitStatsResponse { return *v }).(ExpressRouteCircuitStatsResponseOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsResponsePtrOutput) PrimarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) *int {
		if v == nil {
			return nil
		}
		return v.PrimarybytesIn
	}).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsResponsePtrOutput) PrimarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) *int {
		if v == nil {
			return nil
		}
		return v.PrimarybytesOut
	}).(pulumi.IntPtrOutput)
}

// Gets BytesIn of the peering.
func (o ExpressRouteCircuitStatsResponsePtrOutput) SecondarybytesIn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SecondarybytesIn
	}).(pulumi.IntPtrOutput)
}

// Gets BytesOut of the peering.
func (o ExpressRouteCircuitStatsResponsePtrOutput) SecondarybytesOut() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExpressRouteCircuitStatsResponse) *int {
		if v == nil {
			return nil
		}
		return v.SecondarybytesOut
	}).(pulumi.IntPtrOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the Public IP resource.
	PublicIPAddress *PublicIPAddressType `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet *SubnetType `pulumi:"subnet"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// FrontendIPConfigurationInput is an input type that accepts FrontendIPConfigurationArgs and FrontendIPConfigurationOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationInput` via:
//
//          FrontendIPConfigurationArgs{...}
type FrontendIPConfigurationInput interface {
	pulumi.Input

	ToFrontendIPConfigurationOutput() FrontendIPConfigurationOutput
	ToFrontendIPConfigurationOutputWithContext(context.Context) FrontendIPConfigurationOutput
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the Public IP resource.
	PublicIPAddress PublicIPAddressTypePtrInput `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet SubnetTypePtrInput `pulumi:"subnet"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (FrontendIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfiguration)(nil)).Elem()
}

func (i FrontendIPConfigurationArgs) ToFrontendIPConfigurationOutput() FrontendIPConfigurationOutput {
	return i.ToFrontendIPConfigurationOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationArgs) ToFrontendIPConfigurationOutputWithContext(ctx context.Context) FrontendIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationOutput)
}

// FrontendIPConfigurationArrayInput is an input type that accepts FrontendIPConfigurationArray and FrontendIPConfigurationArrayOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationArrayInput` via:
//
//          FrontendIPConfigurationArray{ FrontendIPConfigurationArgs{...} }
type FrontendIPConfigurationArrayInput interface {
	pulumi.Input

	ToFrontendIPConfigurationArrayOutput() FrontendIPConfigurationArrayOutput
	ToFrontendIPConfigurationArrayOutputWithContext(context.Context) FrontendIPConfigurationArrayOutput
}

type FrontendIPConfigurationArray []FrontendIPConfigurationInput

func (FrontendIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfiguration)(nil)).Elem()
}

func (i FrontendIPConfigurationArray) ToFrontendIPConfigurationArrayOutput() FrontendIPConfigurationArrayOutput {
	return i.ToFrontendIPConfigurationArrayOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationArray) ToFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationArrayOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfiguration)(nil)).Elem()
}

func (o FrontendIPConfigurationOutput) ToFrontendIPConfigurationOutput() FrontendIPConfigurationOutput {
	return o
}

func (o FrontendIPConfigurationOutput) ToFrontendIPConfigurationOutputWithContext(ctx context.Context) FrontendIPConfigurationOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o FrontendIPConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o FrontendIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o FrontendIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o FrontendIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o FrontendIPConfigurationOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the Public IP resource.
func (o FrontendIPConfigurationOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *PublicIPAddressType { return v.PublicIPAddress }).(PublicIPAddressTypePtrOutput)
}

// The reference of the subnet resource.
func (o FrontendIPConfigurationOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) *SubnetType { return v.Subnet }).(SubnetTypePtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o FrontendIPConfigurationOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FrontendIPConfiguration) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type FrontendIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfiguration)(nil)).Elem()
}

func (o FrontendIPConfigurationArrayOutput) ToFrontendIPConfigurationArrayOutput() FrontendIPConfigurationArrayOutput {
	return o
}

func (o FrontendIPConfigurationArrayOutput) ToFrontendIPConfigurationArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationArrayOutput {
	return o
}

func (o FrontendIPConfigurationArrayOutput) Index(i pulumi.IntInput) FrontendIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontendIPConfiguration {
		return vs[0].([]FrontendIPConfiguration)[vs[1].(int)]
	}).(FrontendIPConfigurationOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Read only. Inbound pools URIs that use this frontend IP.
	InboundNatPools []SubResourceResponse `pulumi:"inboundNatPools"`
	// Read only. Inbound rules URIs that use this frontend IP.
	InboundNatRules []SubResourceResponse `pulumi:"inboundNatRules"`
	// Gets load balancing rules URIs that use this frontend IP.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Read only. Outbound rules URIs that use this frontend IP.
	OutboundNatRules []SubResourceResponse `pulumi:"outboundNatRules"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the Public IP resource.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet *SubnetResponse `pulumi:"subnet"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// FrontendIPConfigurationResponseInput is an input type that accepts FrontendIPConfigurationResponseArgs and FrontendIPConfigurationResponseOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationResponseInput` via:
//
//          FrontendIPConfigurationResponseArgs{...}
type FrontendIPConfigurationResponseInput interface {
	pulumi.Input

	ToFrontendIPConfigurationResponseOutput() FrontendIPConfigurationResponseOutput
	ToFrontendIPConfigurationResponseOutputWithContext(context.Context) FrontendIPConfigurationResponseOutput
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Read only. Inbound pools URIs that use this frontend IP.
	InboundNatPools SubResourceResponseArrayInput `pulumi:"inboundNatPools"`
	// Read only. Inbound rules URIs that use this frontend IP.
	InboundNatRules SubResourceResponseArrayInput `pulumi:"inboundNatRules"`
	// Gets load balancing rules URIs that use this frontend IP.
	LoadBalancingRules SubResourceResponseArrayInput `pulumi:"loadBalancingRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Read only. Outbound rules URIs that use this frontend IP.
	OutboundNatRules SubResourceResponseArrayInput `pulumi:"outboundNatRules"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the Public IP resource.
	PublicIPAddress PublicIPAddressResponsePtrInput `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet SubnetResponsePtrInput `pulumi:"subnet"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (FrontendIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfigurationResponse)(nil)).Elem()
}

func (i FrontendIPConfigurationResponseArgs) ToFrontendIPConfigurationResponseOutput() FrontendIPConfigurationResponseOutput {
	return i.ToFrontendIPConfigurationResponseOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationResponseArgs) ToFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationResponseOutput)
}

// FrontendIPConfigurationResponseArrayInput is an input type that accepts FrontendIPConfigurationResponseArray and FrontendIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `FrontendIPConfigurationResponseArrayInput` via:
//
//          FrontendIPConfigurationResponseArray{ FrontendIPConfigurationResponseArgs{...} }
type FrontendIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToFrontendIPConfigurationResponseArrayOutput() FrontendIPConfigurationResponseArrayOutput
	ToFrontendIPConfigurationResponseArrayOutputWithContext(context.Context) FrontendIPConfigurationResponseArrayOutput
}

type FrontendIPConfigurationResponseArray []FrontendIPConfigurationResponseInput

func (FrontendIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfigurationResponse)(nil)).Elem()
}

func (i FrontendIPConfigurationResponseArray) ToFrontendIPConfigurationResponseArrayOutput() FrontendIPConfigurationResponseArrayOutput {
	return i.ToFrontendIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i FrontendIPConfigurationResponseArray) ToFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrontendIPConfigurationResponseArrayOutput)
}

// Frontend IP address of the load balancer.
type FrontendIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrontendIPConfigurationResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationResponseOutput) ToFrontendIPConfigurationResponseOutput() FrontendIPConfigurationResponseOutput {
	return o
}

func (o FrontendIPConfigurationResponseOutput) ToFrontendIPConfigurationResponseOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o FrontendIPConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o FrontendIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Read only. Inbound pools URIs that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) InboundNatPools() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.InboundNatPools }).(SubResourceResponseArrayOutput)
}

// Read only. Inbound rules URIs that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) InboundNatRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.InboundNatRules }).(SubResourceResponseArrayOutput)
}

// Gets load balancing rules URIs that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.LoadBalancingRules }).(SubResourceResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o FrontendIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Read only. Outbound rules URIs that use this frontend IP.
func (o FrontendIPConfigurationResponseOutput) OutboundNatRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []SubResourceResponse { return v.OutboundNatRules }).(SubResourceResponseArrayOutput)
}

// The private IP address of the IP configuration.
func (o FrontendIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The Private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o FrontendIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o FrontendIPConfigurationResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the Public IP resource.
func (o FrontendIPConfigurationResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *PublicIPAddressResponse { return v.PublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// The reference of the subnet resource.
func (o FrontendIPConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o FrontendIPConfigurationResponseOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FrontendIPConfigurationResponse) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type FrontendIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (FrontendIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrontendIPConfigurationResponse)(nil)).Elem()
}

func (o FrontendIPConfigurationResponseArrayOutput) ToFrontendIPConfigurationResponseArrayOutput() FrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o FrontendIPConfigurationResponseArrayOutput) ToFrontendIPConfigurationResponseArrayOutputWithContext(ctx context.Context) FrontendIPConfigurationResponseArrayOutput {
	return o
}

func (o FrontendIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) FrontendIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrontendIPConfigurationResponse {
		return vs[0].([]FrontendIPConfigurationResponse)[vs[1].(int)]
	}).(FrontendIPConfigurationResponseOutput)
}

// Gateway routing details
type GatewayRouteResponse struct {
	// The route's AS path sequence
	AsPath string `pulumi:"asPath"`
	// The gateway's local address
	LocalAddress string `pulumi:"localAddress"`
	// The route's network prefix
	Network string `pulumi:"network"`
	// The route's next hop
	NextHop string `pulumi:"nextHop"`
	// The source this route was learned from
	Origin string `pulumi:"origin"`
	// The peer this route was learned from
	SourcePeer string `pulumi:"sourcePeer"`
	// The route's weight
	Weight int `pulumi:"weight"`
}

// GatewayRouteResponseInput is an input type that accepts GatewayRouteResponseArgs and GatewayRouteResponseOutput values.
// You can construct a concrete instance of `GatewayRouteResponseInput` via:
//
//          GatewayRouteResponseArgs{...}
type GatewayRouteResponseInput interface {
	pulumi.Input

	ToGatewayRouteResponseOutput() GatewayRouteResponseOutput
	ToGatewayRouteResponseOutputWithContext(context.Context) GatewayRouteResponseOutput
}

// Gateway routing details
type GatewayRouteResponseArgs struct {
	// The route's AS path sequence
	AsPath pulumi.StringInput `pulumi:"asPath"`
	// The gateway's local address
	LocalAddress pulumi.StringInput `pulumi:"localAddress"`
	// The route's network prefix
	Network pulumi.StringInput `pulumi:"network"`
	// The route's next hop
	NextHop pulumi.StringInput `pulumi:"nextHop"`
	// The source this route was learned from
	Origin pulumi.StringInput `pulumi:"origin"`
	// The peer this route was learned from
	SourcePeer pulumi.StringInput `pulumi:"sourcePeer"`
	// The route's weight
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GatewayRouteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteResponse)(nil)).Elem()
}

func (i GatewayRouteResponseArgs) ToGatewayRouteResponseOutput() GatewayRouteResponseOutput {
	return i.ToGatewayRouteResponseOutputWithContext(context.Background())
}

func (i GatewayRouteResponseArgs) ToGatewayRouteResponseOutputWithContext(ctx context.Context) GatewayRouteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteResponseOutput)
}

// GatewayRouteResponseArrayInput is an input type that accepts GatewayRouteResponseArray and GatewayRouteResponseArrayOutput values.
// You can construct a concrete instance of `GatewayRouteResponseArrayInput` via:
//
//          GatewayRouteResponseArray{ GatewayRouteResponseArgs{...} }
type GatewayRouteResponseArrayInput interface {
	pulumi.Input

	ToGatewayRouteResponseArrayOutput() GatewayRouteResponseArrayOutput
	ToGatewayRouteResponseArrayOutputWithContext(context.Context) GatewayRouteResponseArrayOutput
}

type GatewayRouteResponseArray []GatewayRouteResponseInput

func (GatewayRouteResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteResponse)(nil)).Elem()
}

func (i GatewayRouteResponseArray) ToGatewayRouteResponseArrayOutput() GatewayRouteResponseArrayOutput {
	return i.ToGatewayRouteResponseArrayOutputWithContext(context.Background())
}

func (i GatewayRouteResponseArray) ToGatewayRouteResponseArrayOutputWithContext(ctx context.Context) GatewayRouteResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteResponseArrayOutput)
}

// Gateway routing details
type GatewayRouteResponseOutput struct{ *pulumi.OutputState }

func (GatewayRouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteResponse)(nil)).Elem()
}

func (o GatewayRouteResponseOutput) ToGatewayRouteResponseOutput() GatewayRouteResponseOutput {
	return o
}

func (o GatewayRouteResponseOutput) ToGatewayRouteResponseOutputWithContext(ctx context.Context) GatewayRouteResponseOutput {
	return o
}

// The route's AS path sequence
func (o GatewayRouteResponseOutput) AsPath() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteResponse) string { return v.AsPath }).(pulumi.StringOutput)
}

// The gateway's local address
func (o GatewayRouteResponseOutput) LocalAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteResponse) string { return v.LocalAddress }).(pulumi.StringOutput)
}

// The route's network prefix
func (o GatewayRouteResponseOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteResponse) string { return v.Network }).(pulumi.StringOutput)
}

// The route's next hop
func (o GatewayRouteResponseOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteResponse) string { return v.NextHop }).(pulumi.StringOutput)
}

// The source this route was learned from
func (o GatewayRouteResponseOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteResponse) string { return v.Origin }).(pulumi.StringOutput)
}

// The peer this route was learned from
func (o GatewayRouteResponseOutput) SourcePeer() pulumi.StringOutput {
	return o.ApplyT(func(v GatewayRouteResponse) string { return v.SourcePeer }).(pulumi.StringOutput)
}

// The route's weight
func (o GatewayRouteResponseOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GatewayRouteResponse) int { return v.Weight }).(pulumi.IntOutput)
}

type GatewayRouteResponseArrayOutput struct{ *pulumi.OutputState }

func (GatewayRouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GatewayRouteResponse)(nil)).Elem()
}

func (o GatewayRouteResponseArrayOutput) ToGatewayRouteResponseArrayOutput() GatewayRouteResponseArrayOutput {
	return o
}

func (o GatewayRouteResponseArrayOutput) ToGatewayRouteResponseArrayOutputWithContext(ctx context.Context) GatewayRouteResponseArrayOutput {
	return o
}

func (o GatewayRouteResponseArrayOutput) Index(i pulumi.IntInput) GatewayRouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GatewayRouteResponse {
		return vs[0].([]GatewayRouteResponse)[vs[1].(int)]
	}).(GatewayRouteResponseOutput)
}

// HubVirtualNetworkConnection Resource.
type HubVirtualNetworkConnection struct {
	// VirtualHub to RemoteVnet transit to enabled or not.
	AllowHubToRemoteVnetTransit *bool `pulumi:"allowHubToRemoteVnetTransit"`
	// Allow RemoteVnet to use Virtual Hub's gateways.
	AllowRemoteVnetToUseHubVnetGateways *bool `pulumi:"allowRemoteVnetToUseHubVnetGateways"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Reference to the remote virtual network.
	RemoteVirtualNetwork *SubResource `pulumi:"remoteVirtualNetwork"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// HubVirtualNetworkConnectionInput is an input type that accepts HubVirtualNetworkConnectionArgs and HubVirtualNetworkConnectionOutput values.
// You can construct a concrete instance of `HubVirtualNetworkConnectionInput` via:
//
//          HubVirtualNetworkConnectionArgs{...}
type HubVirtualNetworkConnectionInput interface {
	pulumi.Input

	ToHubVirtualNetworkConnectionOutput() HubVirtualNetworkConnectionOutput
	ToHubVirtualNetworkConnectionOutputWithContext(context.Context) HubVirtualNetworkConnectionOutput
}

// HubVirtualNetworkConnection Resource.
type HubVirtualNetworkConnectionArgs struct {
	// VirtualHub to RemoteVnet transit to enabled or not.
	AllowHubToRemoteVnetTransit pulumi.BoolPtrInput `pulumi:"allowHubToRemoteVnetTransit"`
	// Allow RemoteVnet to use Virtual Hub's gateways.
	AllowRemoteVnetToUseHubVnetGateways pulumi.BoolPtrInput `pulumi:"allowRemoteVnetToUseHubVnetGateways"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Reference to the remote virtual network.
	RemoteVirtualNetwork SubResourcePtrInput `pulumi:"remoteVirtualNetwork"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (HubVirtualNetworkConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubVirtualNetworkConnection)(nil)).Elem()
}

func (i HubVirtualNetworkConnectionArgs) ToHubVirtualNetworkConnectionOutput() HubVirtualNetworkConnectionOutput {
	return i.ToHubVirtualNetworkConnectionOutputWithContext(context.Background())
}

func (i HubVirtualNetworkConnectionArgs) ToHubVirtualNetworkConnectionOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubVirtualNetworkConnectionOutput)
}

// HubVirtualNetworkConnectionArrayInput is an input type that accepts HubVirtualNetworkConnectionArray and HubVirtualNetworkConnectionArrayOutput values.
// You can construct a concrete instance of `HubVirtualNetworkConnectionArrayInput` via:
//
//          HubVirtualNetworkConnectionArray{ HubVirtualNetworkConnectionArgs{...} }
type HubVirtualNetworkConnectionArrayInput interface {
	pulumi.Input

	ToHubVirtualNetworkConnectionArrayOutput() HubVirtualNetworkConnectionArrayOutput
	ToHubVirtualNetworkConnectionArrayOutputWithContext(context.Context) HubVirtualNetworkConnectionArrayOutput
}

type HubVirtualNetworkConnectionArray []HubVirtualNetworkConnectionInput

func (HubVirtualNetworkConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HubVirtualNetworkConnection)(nil)).Elem()
}

func (i HubVirtualNetworkConnectionArray) ToHubVirtualNetworkConnectionArrayOutput() HubVirtualNetworkConnectionArrayOutput {
	return i.ToHubVirtualNetworkConnectionArrayOutputWithContext(context.Background())
}

func (i HubVirtualNetworkConnectionArray) ToHubVirtualNetworkConnectionArrayOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubVirtualNetworkConnectionArrayOutput)
}

// HubVirtualNetworkConnection Resource.
type HubVirtualNetworkConnectionOutput struct{ *pulumi.OutputState }

func (HubVirtualNetworkConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubVirtualNetworkConnection)(nil)).Elem()
}

func (o HubVirtualNetworkConnectionOutput) ToHubVirtualNetworkConnectionOutput() HubVirtualNetworkConnectionOutput {
	return o
}

func (o HubVirtualNetworkConnectionOutput) ToHubVirtualNetworkConnectionOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionOutput {
	return o
}

// VirtualHub to RemoteVnet transit to enabled or not.
func (o HubVirtualNetworkConnectionOutput) AllowHubToRemoteVnetTransit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnection) *bool { return v.AllowHubToRemoteVnetTransit }).(pulumi.BoolPtrOutput)
}

// Allow RemoteVnet to use Virtual Hub's gateways.
func (o HubVirtualNetworkConnectionOutput) AllowRemoteVnetToUseHubVnetGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnection) *bool { return v.AllowRemoteVnetToUseHubVnetGateways }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o HubVirtualNetworkConnectionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnection) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o HubVirtualNetworkConnectionOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnection) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Reference to the remote virtual network.
func (o HubVirtualNetworkConnectionOutput) RemoteVirtualNetwork() SubResourcePtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnection) *SubResource { return v.RemoteVirtualNetwork }).(SubResourcePtrOutput)
}

// Resource tags.
func (o HubVirtualNetworkConnectionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnection) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type HubVirtualNetworkConnectionArrayOutput struct{ *pulumi.OutputState }

func (HubVirtualNetworkConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HubVirtualNetworkConnection)(nil)).Elem()
}

func (o HubVirtualNetworkConnectionArrayOutput) ToHubVirtualNetworkConnectionArrayOutput() HubVirtualNetworkConnectionArrayOutput {
	return o
}

func (o HubVirtualNetworkConnectionArrayOutput) ToHubVirtualNetworkConnectionArrayOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionArrayOutput {
	return o
}

func (o HubVirtualNetworkConnectionArrayOutput) Index(i pulumi.IntInput) HubVirtualNetworkConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HubVirtualNetworkConnection {
		return vs[0].([]HubVirtualNetworkConnection)[vs[1].(int)]
	}).(HubVirtualNetworkConnectionOutput)
}

// HubVirtualNetworkConnection Resource.
type HubVirtualNetworkConnectionResponse struct {
	// VirtualHub to RemoteVnet transit to enabled or not.
	AllowHubToRemoteVnetTransit *bool `pulumi:"allowHubToRemoteVnetTransit"`
	// Allow RemoteVnet to use Virtual Hub's gateways.
	AllowRemoteVnetToUseHubVnetGateways *bool `pulumi:"allowRemoteVnetToUseHubVnetGateways"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Reference to the remote virtual network.
	RemoteVirtualNetwork *SubResourceResponse `pulumi:"remoteVirtualNetwork"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// HubVirtualNetworkConnectionResponseInput is an input type that accepts HubVirtualNetworkConnectionResponseArgs and HubVirtualNetworkConnectionResponseOutput values.
// You can construct a concrete instance of `HubVirtualNetworkConnectionResponseInput` via:
//
//          HubVirtualNetworkConnectionResponseArgs{...}
type HubVirtualNetworkConnectionResponseInput interface {
	pulumi.Input

	ToHubVirtualNetworkConnectionResponseOutput() HubVirtualNetworkConnectionResponseOutput
	ToHubVirtualNetworkConnectionResponseOutputWithContext(context.Context) HubVirtualNetworkConnectionResponseOutput
}

// HubVirtualNetworkConnection Resource.
type HubVirtualNetworkConnectionResponseArgs struct {
	// VirtualHub to RemoteVnet transit to enabled or not.
	AllowHubToRemoteVnetTransit pulumi.BoolPtrInput `pulumi:"allowHubToRemoteVnetTransit"`
	// Allow RemoteVnet to use Virtual Hub's gateways.
	AllowRemoteVnetToUseHubVnetGateways pulumi.BoolPtrInput `pulumi:"allowRemoteVnetToUseHubVnetGateways"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Reference to the remote virtual network.
	RemoteVirtualNetwork SubResourceResponsePtrInput `pulumi:"remoteVirtualNetwork"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (HubVirtualNetworkConnectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HubVirtualNetworkConnectionResponse)(nil)).Elem()
}

func (i HubVirtualNetworkConnectionResponseArgs) ToHubVirtualNetworkConnectionResponseOutput() HubVirtualNetworkConnectionResponseOutput {
	return i.ToHubVirtualNetworkConnectionResponseOutputWithContext(context.Background())
}

func (i HubVirtualNetworkConnectionResponseArgs) ToHubVirtualNetworkConnectionResponseOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubVirtualNetworkConnectionResponseOutput)
}

// HubVirtualNetworkConnectionResponseArrayInput is an input type that accepts HubVirtualNetworkConnectionResponseArray and HubVirtualNetworkConnectionResponseArrayOutput values.
// You can construct a concrete instance of `HubVirtualNetworkConnectionResponseArrayInput` via:
//
//          HubVirtualNetworkConnectionResponseArray{ HubVirtualNetworkConnectionResponseArgs{...} }
type HubVirtualNetworkConnectionResponseArrayInput interface {
	pulumi.Input

	ToHubVirtualNetworkConnectionResponseArrayOutput() HubVirtualNetworkConnectionResponseArrayOutput
	ToHubVirtualNetworkConnectionResponseArrayOutputWithContext(context.Context) HubVirtualNetworkConnectionResponseArrayOutput
}

type HubVirtualNetworkConnectionResponseArray []HubVirtualNetworkConnectionResponseInput

func (HubVirtualNetworkConnectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HubVirtualNetworkConnectionResponse)(nil)).Elem()
}

func (i HubVirtualNetworkConnectionResponseArray) ToHubVirtualNetworkConnectionResponseArrayOutput() HubVirtualNetworkConnectionResponseArrayOutput {
	return i.ToHubVirtualNetworkConnectionResponseArrayOutputWithContext(context.Background())
}

func (i HubVirtualNetworkConnectionResponseArray) ToHubVirtualNetworkConnectionResponseArrayOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HubVirtualNetworkConnectionResponseArrayOutput)
}

// HubVirtualNetworkConnection Resource.
type HubVirtualNetworkConnectionResponseOutput struct{ *pulumi.OutputState }

func (HubVirtualNetworkConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HubVirtualNetworkConnectionResponse)(nil)).Elem()
}

func (o HubVirtualNetworkConnectionResponseOutput) ToHubVirtualNetworkConnectionResponseOutput() HubVirtualNetworkConnectionResponseOutput {
	return o
}

func (o HubVirtualNetworkConnectionResponseOutput) ToHubVirtualNetworkConnectionResponseOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionResponseOutput {
	return o
}

// VirtualHub to RemoteVnet transit to enabled or not.
func (o HubVirtualNetworkConnectionResponseOutput) AllowHubToRemoteVnetTransit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionResponse) *bool { return v.AllowHubToRemoteVnetTransit }).(pulumi.BoolPtrOutput)
}

// Allow RemoteVnet to use Virtual Hub's gateways.
func (o HubVirtualNetworkConnectionResponseOutput) AllowRemoteVnetToUseHubVnetGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionResponse) *bool { return v.AllowRemoteVnetToUseHubVnetGateways }).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o HubVirtualNetworkConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o HubVirtualNetworkConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o HubVirtualNetworkConnectionResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o HubVirtualNetworkConnectionResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the resource.
func (o HubVirtualNetworkConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Reference to the remote virtual network.
func (o HubVirtualNetworkConnectionResponseOutput) RemoteVirtualNetwork() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionResponse) *SubResourceResponse { return v.RemoteVirtualNetwork }).(SubResourceResponsePtrOutput)
}

// Resource tags.
func (o HubVirtualNetworkConnectionResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o HubVirtualNetworkConnectionResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v HubVirtualNetworkConnectionResponse) string { return v.Type }).(pulumi.StringOutput)
}

type HubVirtualNetworkConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (HubVirtualNetworkConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HubVirtualNetworkConnectionResponse)(nil)).Elem()
}

func (o HubVirtualNetworkConnectionResponseArrayOutput) ToHubVirtualNetworkConnectionResponseArrayOutput() HubVirtualNetworkConnectionResponseArrayOutput {
	return o
}

func (o HubVirtualNetworkConnectionResponseArrayOutput) ToHubVirtualNetworkConnectionResponseArrayOutputWithContext(ctx context.Context) HubVirtualNetworkConnectionResponseArrayOutput {
	return o
}

func (o HubVirtualNetworkConnectionResponseArrayOutput) Index(i pulumi.IntInput) HubVirtualNetworkConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HubVirtualNetworkConnectionResponse {
		return vs[0].([]HubVirtualNetworkConnectionResponse)[vs[1].(int)]
	}).(HubVirtualNetworkConnectionResponseOutput)
}

// IP configuration
type IPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet *SubnetResponse `pulumi:"subnet"`
}

// IPConfigurationResponseInput is an input type that accepts IPConfigurationResponseArgs and IPConfigurationResponseOutput values.
// You can construct a concrete instance of `IPConfigurationResponseInput` via:
//
//          IPConfigurationResponseArgs{...}
type IPConfigurationResponseInput interface {
	pulumi.Input

	ToIPConfigurationResponseOutput() IPConfigurationResponseOutput
	ToIPConfigurationResponseOutputWithContext(context.Context) IPConfigurationResponseOutput
}

// IP configuration
type IPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress PublicIPAddressResponsePtrInput `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet SubnetResponsePtrInput `pulumi:"subnet"`
}

func (IPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationResponse)(nil)).Elem()
}

func (i IPConfigurationResponseArgs) ToIPConfigurationResponseOutput() IPConfigurationResponseOutput {
	return i.ToIPConfigurationResponseOutputWithContext(context.Background())
}

func (i IPConfigurationResponseArgs) ToIPConfigurationResponseOutputWithContext(ctx context.Context) IPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationResponseOutput)
}

func (i IPConfigurationResponseArgs) ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput {
	return i.ToIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i IPConfigurationResponseArgs) ToIPConfigurationResponsePtrOutputWithContext(ctx context.Context) IPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationResponseOutput).ToIPConfigurationResponsePtrOutputWithContext(ctx)
}

// IPConfigurationResponsePtrInput is an input type that accepts IPConfigurationResponseArgs, IPConfigurationResponsePtr and IPConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `IPConfigurationResponsePtrInput` via:
//
//          IPConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type IPConfigurationResponsePtrInput interface {
	pulumi.Input

	ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput
	ToIPConfigurationResponsePtrOutputWithContext(context.Context) IPConfigurationResponsePtrOutput
}

type ipconfigurationResponsePtrType IPConfigurationResponseArgs

func IPConfigurationResponsePtr(v *IPConfigurationResponseArgs) IPConfigurationResponsePtrInput {
	return (*ipconfigurationResponsePtrType)(v)
}

func (*ipconfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationResponse)(nil)).Elem()
}

func (i *ipconfigurationResponsePtrType) ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput {
	return i.ToIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *ipconfigurationResponsePtrType) ToIPConfigurationResponsePtrOutputWithContext(ctx context.Context) IPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationResponsePtrOutput)
}

// IPConfigurationResponseArrayInput is an input type that accepts IPConfigurationResponseArray and IPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `IPConfigurationResponseArrayInput` via:
//
//          IPConfigurationResponseArray{ IPConfigurationResponseArgs{...} }
type IPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToIPConfigurationResponseArrayOutput() IPConfigurationResponseArrayOutput
	ToIPConfigurationResponseArrayOutputWithContext(context.Context) IPConfigurationResponseArrayOutput
}

type IPConfigurationResponseArray []IPConfigurationResponseInput

func (IPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationResponse)(nil)).Elem()
}

func (i IPConfigurationResponseArray) ToIPConfigurationResponseArrayOutput() IPConfigurationResponseArrayOutput {
	return i.ToIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i IPConfigurationResponseArray) ToIPConfigurationResponseArrayOutputWithContext(ctx context.Context) IPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPConfigurationResponseArrayOutput)
}

// IP configuration
type IPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponseOutput() IPConfigurationResponseOutput {
	return o
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponseOutputWithContext(ctx context.Context) IPConfigurationResponseOutput {
	return o
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput {
	return o.ToIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o IPConfigurationResponseOutput) ToIPConfigurationResponsePtrOutputWithContext(ctx context.Context) IPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *IPConfigurationResponse {
		return &v
	}).(IPConfigurationResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o IPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
func (o IPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o IPConfigurationResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the public IP resource.
func (o IPConfigurationResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *PublicIPAddressResponse { return v.PublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// The reference of the subnet resource.
func (o IPConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v IPConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

type IPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponsePtrOutput) ToIPConfigurationResponsePtrOutput() IPConfigurationResponsePtrOutput {
	return o
}

func (o IPConfigurationResponsePtrOutput) ToIPConfigurationResponsePtrOutputWithContext(ctx context.Context) IPConfigurationResponsePtrOutput {
	return o
}

func (o IPConfigurationResponsePtrOutput) Elem() IPConfigurationResponseOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) IPConfigurationResponse { return *v }).(IPConfigurationResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o IPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o IPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o IPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The private IP address of the IP configuration.
func (o IPConfigurationResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// The private IP allocation method. Possible values are 'Static' and 'Dynamic'.
func (o IPConfigurationResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o IPConfigurationResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The reference of the public IP resource.
func (o IPConfigurationResponsePtrOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// The reference of the subnet resource.
func (o IPConfigurationResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *IPConfigurationResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

type IPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (IPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPConfigurationResponse)(nil)).Elem()
}

func (o IPConfigurationResponseArrayOutput) ToIPConfigurationResponseArrayOutput() IPConfigurationResponseArrayOutput {
	return o
}

func (o IPConfigurationResponseArrayOutput) ToIPConfigurationResponseArrayOutputWithContext(ctx context.Context) IPConfigurationResponseArrayOutput {
	return o
}

func (o IPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) IPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPConfigurationResponse {
		return vs[0].([]IPConfigurationResponse)[vs[1].(int)]
	}).(IPConfigurationResponseOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPool struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd int `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart int `pulumi:"frontendPortRangeStart"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// InboundNatPoolInput is an input type that accepts InboundNatPoolArgs and InboundNatPoolOutput values.
// You can construct a concrete instance of `InboundNatPoolInput` via:
//
//          InboundNatPoolArgs{...}
type InboundNatPoolInput interface {
	pulumi.Input

	ToInboundNatPoolOutput() InboundNatPoolOutput
	ToInboundNatPoolOutputWithContext(context.Context) InboundNatPoolOutput
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolArgs struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort pulumi.IntInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd pulumi.IntInput `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart pulumi.IntInput `pulumi:"frontendPortRangeStart"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (InboundNatPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPool)(nil)).Elem()
}

func (i InboundNatPoolArgs) ToInboundNatPoolOutput() InboundNatPoolOutput {
	return i.ToInboundNatPoolOutputWithContext(context.Background())
}

func (i InboundNatPoolArgs) ToInboundNatPoolOutputWithContext(ctx context.Context) InboundNatPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolOutput)
}

// InboundNatPoolArrayInput is an input type that accepts InboundNatPoolArray and InboundNatPoolArrayOutput values.
// You can construct a concrete instance of `InboundNatPoolArrayInput` via:
//
//          InboundNatPoolArray{ InboundNatPoolArgs{...} }
type InboundNatPoolArrayInput interface {
	pulumi.Input

	ToInboundNatPoolArrayOutput() InboundNatPoolArrayOutput
	ToInboundNatPoolArrayOutputWithContext(context.Context) InboundNatPoolArrayOutput
}

type InboundNatPoolArray []InboundNatPoolInput

func (InboundNatPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPool)(nil)).Elem()
}

func (i InboundNatPoolArray) ToInboundNatPoolArrayOutput() InboundNatPoolArrayOutput {
	return i.ToInboundNatPoolArrayOutputWithContext(context.Background())
}

func (i InboundNatPoolArray) ToInboundNatPoolArrayOutputWithContext(ctx context.Context) InboundNatPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolArrayOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolOutput struct{ *pulumi.OutputState }

func (InboundNatPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPool)(nil)).Elem()
}

func (o InboundNatPoolOutput) ToInboundNatPoolOutput() InboundNatPoolOutput {
	return o
}

func (o InboundNatPoolOutput) ToInboundNatPoolOutputWithContext(ctx context.Context) InboundNatPoolOutput {
	return o
}

// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
func (o InboundNatPoolOutput) BackendPort() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPool) int { return v.BackendPort }).(pulumi.IntOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatPoolOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatPoolOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatPoolOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v InboundNatPool) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
func (o InboundNatPoolOutput) FrontendPortRangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPool) int { return v.FrontendPortRangeEnd }).(pulumi.IntOutput)
}

// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
func (o InboundNatPoolOutput) FrontendPortRangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPool) int { return v.FrontendPortRangeStart }).(pulumi.IntOutput)
}

// Resource ID.
func (o InboundNatPoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatPoolOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o InboundNatPoolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
func (o InboundNatPoolOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatPool) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InboundNatPoolOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPool) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type InboundNatPoolArrayOutput struct{ *pulumi.OutputState }

func (InboundNatPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPool)(nil)).Elem()
}

func (o InboundNatPoolArrayOutput) ToInboundNatPoolArrayOutput() InboundNatPoolArrayOutput {
	return o
}

func (o InboundNatPoolArrayOutput) ToInboundNatPoolArrayOutputWithContext(ctx context.Context) InboundNatPoolArrayOutput {
	return o
}

func (o InboundNatPoolArrayOutput) Index(i pulumi.IntInput) InboundNatPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatPool {
		return vs[0].([]InboundNatPool)[vs[1].(int)]
	}).(InboundNatPoolOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolResponse struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd int `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart int `pulumi:"frontendPortRangeStart"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// InboundNatPoolResponseInput is an input type that accepts InboundNatPoolResponseArgs and InboundNatPoolResponseOutput values.
// You can construct a concrete instance of `InboundNatPoolResponseInput` via:
//
//          InboundNatPoolResponseArgs{...}
type InboundNatPoolResponseInput interface {
	pulumi.Input

	ToInboundNatPoolResponseOutput() InboundNatPoolResponseOutput
	ToInboundNatPoolResponseOutputWithContext(context.Context) InboundNatPoolResponseOutput
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolResponseArgs struct {
	// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
	BackendPort pulumi.IntInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourceResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
	FrontendPortRangeEnd pulumi.IntInput `pulumi:"frontendPortRangeEnd"`
	// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
	FrontendPortRangeStart pulumi.IntInput `pulumi:"frontendPortRangeStart"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (InboundNatPoolResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPoolResponse)(nil)).Elem()
}

func (i InboundNatPoolResponseArgs) ToInboundNatPoolResponseOutput() InboundNatPoolResponseOutput {
	return i.ToInboundNatPoolResponseOutputWithContext(context.Background())
}

func (i InboundNatPoolResponseArgs) ToInboundNatPoolResponseOutputWithContext(ctx context.Context) InboundNatPoolResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolResponseOutput)
}

// InboundNatPoolResponseArrayInput is an input type that accepts InboundNatPoolResponseArray and InboundNatPoolResponseArrayOutput values.
// You can construct a concrete instance of `InboundNatPoolResponseArrayInput` via:
//
//          InboundNatPoolResponseArray{ InboundNatPoolResponseArgs{...} }
type InboundNatPoolResponseArrayInput interface {
	pulumi.Input

	ToInboundNatPoolResponseArrayOutput() InboundNatPoolResponseArrayOutput
	ToInboundNatPoolResponseArrayOutputWithContext(context.Context) InboundNatPoolResponseArrayOutput
}

type InboundNatPoolResponseArray []InboundNatPoolResponseInput

func (InboundNatPoolResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPoolResponse)(nil)).Elem()
}

func (i InboundNatPoolResponseArray) ToInboundNatPoolResponseArrayOutput() InboundNatPoolResponseArrayOutput {
	return i.ToInboundNatPoolResponseArrayOutputWithContext(context.Background())
}

func (i InboundNatPoolResponseArray) ToInboundNatPoolResponseArrayOutputWithContext(ctx context.Context) InboundNatPoolResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatPoolResponseArrayOutput)
}

// Inbound NAT pool of the load balancer.
type InboundNatPoolResponseOutput struct{ *pulumi.OutputState }

func (InboundNatPoolResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatPoolResponse)(nil)).Elem()
}

func (o InboundNatPoolResponseOutput) ToInboundNatPoolResponseOutput() InboundNatPoolResponseOutput {
	return o
}

func (o InboundNatPoolResponseOutput) ToInboundNatPoolResponseOutputWithContext(ctx context.Context) InboundNatPoolResponseOutput {
	return o
}

// The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.
func (o InboundNatPoolResponseOutput) BackendPort() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) int { return v.BackendPort }).(pulumi.IntOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatPoolResponseOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatPoolResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatPoolResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// The last port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65535.
func (o InboundNatPoolResponseOutput) FrontendPortRangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) int { return v.FrontendPortRangeEnd }).(pulumi.IntOutput)
}

// The first port number in the range of external ports that will be used to provide Inbound Nat to NICs associated with a load balancer. Acceptable values range between 1 and 65534.
func (o InboundNatPoolResponseOutput) FrontendPortRangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) int { return v.FrontendPortRangeStart }).(pulumi.IntOutput)
}

// Resource ID.
func (o InboundNatPoolResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatPoolResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o InboundNatPoolResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
func (o InboundNatPoolResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InboundNatPoolResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatPoolResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type InboundNatPoolResponseArrayOutput struct{ *pulumi.OutputState }

func (InboundNatPoolResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatPoolResponse)(nil)).Elem()
}

func (o InboundNatPoolResponseArrayOutput) ToInboundNatPoolResponseArrayOutput() InboundNatPoolResponseArrayOutput {
	return o
}

func (o InboundNatPoolResponseArrayOutput) ToInboundNatPoolResponseArrayOutputWithContext(ctx context.Context) InboundNatPoolResponseArrayOutput {
	return o
}

func (o InboundNatPoolResponseArrayOutput) Index(i pulumi.IntInput) InboundNatPoolResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatPoolResponse {
		return vs[0].([]InboundNatPoolResponse)[vs[1].(int)]
	}).(InboundNatPoolResponseOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleType struct {
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort *int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort *int `pulumi:"frontendPort"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol *string `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// InboundNatRuleTypeInput is an input type that accepts InboundNatRuleTypeArgs and InboundNatRuleTypeOutput values.
// You can construct a concrete instance of `InboundNatRuleTypeInput` via:
//
//          InboundNatRuleTypeArgs{...}
type InboundNatRuleTypeInput interface {
	pulumi.Input

	ToInboundNatRuleTypeOutput() InboundNatRuleTypeOutput
	ToInboundNatRuleTypeOutputWithContext(context.Context) InboundNatRuleTypeOutput
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleTypeArgs struct {
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort pulumi.IntPtrInput `pulumi:"frontendPort"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (InboundNatRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleType)(nil)).Elem()
}

func (i InboundNatRuleTypeArgs) ToInboundNatRuleTypeOutput() InboundNatRuleTypeOutput {
	return i.ToInboundNatRuleTypeOutputWithContext(context.Background())
}

func (i InboundNatRuleTypeArgs) ToInboundNatRuleTypeOutputWithContext(ctx context.Context) InboundNatRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleTypeOutput)
}

// InboundNatRuleTypeArrayInput is an input type that accepts InboundNatRuleTypeArray and InboundNatRuleTypeArrayOutput values.
// You can construct a concrete instance of `InboundNatRuleTypeArrayInput` via:
//
//          InboundNatRuleTypeArray{ InboundNatRuleTypeArgs{...} }
type InboundNatRuleTypeArrayInput interface {
	pulumi.Input

	ToInboundNatRuleTypeArrayOutput() InboundNatRuleTypeArrayOutput
	ToInboundNatRuleTypeArrayOutputWithContext(context.Context) InboundNatRuleTypeArrayOutput
}

type InboundNatRuleTypeArray []InboundNatRuleTypeInput

func (InboundNatRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleType)(nil)).Elem()
}

func (i InboundNatRuleTypeArray) ToInboundNatRuleTypeArrayOutput() InboundNatRuleTypeArrayOutput {
	return i.ToInboundNatRuleTypeArrayOutputWithContext(context.Background())
}

func (i InboundNatRuleTypeArray) ToInboundNatRuleTypeArrayOutputWithContext(ctx context.Context) InboundNatRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleTypeArrayOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleTypeOutput struct{ *pulumi.OutputState }

func (InboundNatRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleType)(nil)).Elem()
}

func (o InboundNatRuleTypeOutput) ToInboundNatRuleTypeOutput() InboundNatRuleTypeOutput {
	return o
}

func (o InboundNatRuleTypeOutput) ToInboundNatRuleTypeOutputWithContext(ctx context.Context) InboundNatRuleTypeOutput {
	return o
}

// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
func (o InboundNatRuleTypeOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatRuleTypeOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatRuleTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatRuleTypeOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
func (o InboundNatRuleTypeOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *int { return v.FrontendPort }).(pulumi.IntPtrOutput)
}

// Resource ID.
func (o InboundNatRuleTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatRuleTypeOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o InboundNatRuleTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
func (o InboundNatRuleTypeOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InboundNatRuleTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type InboundNatRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (InboundNatRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleType)(nil)).Elem()
}

func (o InboundNatRuleTypeArrayOutput) ToInboundNatRuleTypeArrayOutput() InboundNatRuleTypeArrayOutput {
	return o
}

func (o InboundNatRuleTypeArrayOutput) ToInboundNatRuleTypeArrayOutputWithContext(ctx context.Context) InboundNatRuleTypeArrayOutput {
	return o
}

func (o InboundNatRuleTypeArrayOutput) Index(i pulumi.IntInput) InboundNatRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatRuleType {
		return vs[0].([]InboundNatRuleType)[vs[1].(int)]
	}).(InboundNatRuleTypeOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleResponse struct {
	// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
	BackendIPConfiguration NetworkInterfaceIPConfigurationResponse `pulumi:"backendIPConfiguration"`
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort *int `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort *int `pulumi:"frontendPort"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol *string `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// InboundNatRuleResponseInput is an input type that accepts InboundNatRuleResponseArgs and InboundNatRuleResponseOutput values.
// You can construct a concrete instance of `InboundNatRuleResponseInput` via:
//
//          InboundNatRuleResponseArgs{...}
type InboundNatRuleResponseInput interface {
	pulumi.Input

	ToInboundNatRuleResponseOutput() InboundNatRuleResponseOutput
	ToInboundNatRuleResponseOutputWithContext(context.Context) InboundNatRuleResponseOutput
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleResponseArgs struct {
	// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
	BackendIPConfiguration NetworkInterfaceIPConfigurationResponseInput `pulumi:"backendIPConfiguration"`
	// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourceResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
	FrontendPort pulumi.IntPtrInput `pulumi:"frontendPort"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (InboundNatRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleResponse)(nil)).Elem()
}

func (i InboundNatRuleResponseArgs) ToInboundNatRuleResponseOutput() InboundNatRuleResponseOutput {
	return i.ToInboundNatRuleResponseOutputWithContext(context.Background())
}

func (i InboundNatRuleResponseArgs) ToInboundNatRuleResponseOutputWithContext(ctx context.Context) InboundNatRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleResponseOutput)
}

// InboundNatRuleResponseArrayInput is an input type that accepts InboundNatRuleResponseArray and InboundNatRuleResponseArrayOutput values.
// You can construct a concrete instance of `InboundNatRuleResponseArrayInput` via:
//
//          InboundNatRuleResponseArray{ InboundNatRuleResponseArgs{...} }
type InboundNatRuleResponseArrayInput interface {
	pulumi.Input

	ToInboundNatRuleResponseArrayOutput() InboundNatRuleResponseArrayOutput
	ToInboundNatRuleResponseArrayOutputWithContext(context.Context) InboundNatRuleResponseArrayOutput
}

type InboundNatRuleResponseArray []InboundNatRuleResponseInput

func (InboundNatRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleResponse)(nil)).Elem()
}

func (i InboundNatRuleResponseArray) ToInboundNatRuleResponseArrayOutput() InboundNatRuleResponseArrayOutput {
	return i.ToInboundNatRuleResponseArrayOutputWithContext(context.Background())
}

func (i InboundNatRuleResponseArray) ToInboundNatRuleResponseArrayOutputWithContext(ctx context.Context) InboundNatRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InboundNatRuleResponseArrayOutput)
}

// Inbound NAT rule of the load balancer.
type InboundNatRuleResponseOutput struct{ *pulumi.OutputState }

func (InboundNatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InboundNatRuleResponse)(nil)).Elem()
}

func (o InboundNatRuleResponseOutput) ToInboundNatRuleResponseOutput() InboundNatRuleResponseOutput {
	return o
}

func (o InboundNatRuleResponseOutput) ToInboundNatRuleResponseOutputWithContext(ctx context.Context) InboundNatRuleResponseOutput {
	return o
}

// A reference to a private IP address defined on a network interface of a VM. Traffic sent to the frontend port of each of the frontend IP configurations is forwarded to the backend IP.
func (o InboundNatRuleResponseOutput) BackendIPConfiguration() NetworkInterfaceIPConfigurationResponseOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) NetworkInterfaceIPConfigurationResponse {
		return v.BackendIPConfiguration
	}).(NetworkInterfaceIPConfigurationResponseOutput)
}

// The port used for the internal endpoint. Acceptable values range from 1 to 65535.
func (o InboundNatRuleResponseOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o InboundNatRuleResponseOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o InboundNatRuleResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// A reference to frontend IP addresses.
func (o InboundNatRuleResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values range from 1 to 65534.
func (o InboundNatRuleResponseOutput) FrontendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.FrontendPort }).(pulumi.IntPtrOutput)
}

// Resource ID.
func (o InboundNatRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o InboundNatRuleResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o InboundNatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
func (o InboundNatRuleResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o InboundNatRuleResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InboundNatRuleResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type InboundNatRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (InboundNatRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InboundNatRuleResponse)(nil)).Elem()
}

func (o InboundNatRuleResponseArrayOutput) ToInboundNatRuleResponseArrayOutput() InboundNatRuleResponseArrayOutput {
	return o
}

func (o InboundNatRuleResponseArrayOutput) ToInboundNatRuleResponseArrayOutputWithContext(ctx context.Context) InboundNatRuleResponseArrayOutput {
	return o
}

func (o InboundNatRuleResponseArrayOutput) Index(i pulumi.IntInput) InboundNatRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InboundNatRuleResponse {
		return vs[0].([]InboundNatRuleResponse)[vs[1].(int)]
	}).(InboundNatRuleResponseOutput)
}

// Contains the IpTag associated with the public IP address
type IpTag struct {
	// Gets or sets the ipTag type: Example FirstPartyUsage.
	IpTagType *string `pulumi:"ipTagType"`
	// Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc
	Tag *string `pulumi:"tag"`
}

// IpTagInput is an input type that accepts IpTagArgs and IpTagOutput values.
// You can construct a concrete instance of `IpTagInput` via:
//
//          IpTagArgs{...}
type IpTagInput interface {
	pulumi.Input

	ToIpTagOutput() IpTagOutput
	ToIpTagOutputWithContext(context.Context) IpTagOutput
}

// Contains the IpTag associated with the public IP address
type IpTagArgs struct {
	// Gets or sets the ipTag type: Example FirstPartyUsage.
	IpTagType pulumi.StringPtrInput `pulumi:"ipTagType"`
	// Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (IpTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpTag)(nil)).Elem()
}

func (i IpTagArgs) ToIpTagOutput() IpTagOutput {
	return i.ToIpTagOutputWithContext(context.Background())
}

func (i IpTagArgs) ToIpTagOutputWithContext(ctx context.Context) IpTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpTagOutput)
}

// IpTagArrayInput is an input type that accepts IpTagArray and IpTagArrayOutput values.
// You can construct a concrete instance of `IpTagArrayInput` via:
//
//          IpTagArray{ IpTagArgs{...} }
type IpTagArrayInput interface {
	pulumi.Input

	ToIpTagArrayOutput() IpTagArrayOutput
	ToIpTagArrayOutputWithContext(context.Context) IpTagArrayOutput
}

type IpTagArray []IpTagInput

func (IpTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpTag)(nil)).Elem()
}

func (i IpTagArray) ToIpTagArrayOutput() IpTagArrayOutput {
	return i.ToIpTagArrayOutputWithContext(context.Background())
}

func (i IpTagArray) ToIpTagArrayOutputWithContext(ctx context.Context) IpTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpTagArrayOutput)
}

// Contains the IpTag associated with the public IP address
type IpTagOutput struct{ *pulumi.OutputState }

func (IpTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpTag)(nil)).Elem()
}

func (o IpTagOutput) ToIpTagOutput() IpTagOutput {
	return o
}

func (o IpTagOutput) ToIpTagOutputWithContext(ctx context.Context) IpTagOutput {
	return o
}

// Gets or sets the ipTag type: Example FirstPartyUsage.
func (o IpTagOutput) IpTagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTag) *string { return v.IpTagType }).(pulumi.StringPtrOutput)
}

// Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc
func (o IpTagOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTag) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type IpTagArrayOutput struct{ *pulumi.OutputState }

func (IpTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpTag)(nil)).Elem()
}

func (o IpTagArrayOutput) ToIpTagArrayOutput() IpTagArrayOutput {
	return o
}

func (o IpTagArrayOutput) ToIpTagArrayOutputWithContext(ctx context.Context) IpTagArrayOutput {
	return o
}

func (o IpTagArrayOutput) Index(i pulumi.IntInput) IpTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpTag {
		return vs[0].([]IpTag)[vs[1].(int)]
	}).(IpTagOutput)
}

// Contains the IpTag associated with the public IP address
type IpTagResponse struct {
	// Gets or sets the ipTag type: Example FirstPartyUsage.
	IpTagType *string `pulumi:"ipTagType"`
	// Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc
	Tag *string `pulumi:"tag"`
}

// IpTagResponseInput is an input type that accepts IpTagResponseArgs and IpTagResponseOutput values.
// You can construct a concrete instance of `IpTagResponseInput` via:
//
//          IpTagResponseArgs{...}
type IpTagResponseInput interface {
	pulumi.Input

	ToIpTagResponseOutput() IpTagResponseOutput
	ToIpTagResponseOutputWithContext(context.Context) IpTagResponseOutput
}

// Contains the IpTag associated with the public IP address
type IpTagResponseArgs struct {
	// Gets or sets the ipTag type: Example FirstPartyUsage.
	IpTagType pulumi.StringPtrInput `pulumi:"ipTagType"`
	// Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (IpTagResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpTagResponse)(nil)).Elem()
}

func (i IpTagResponseArgs) ToIpTagResponseOutput() IpTagResponseOutput {
	return i.ToIpTagResponseOutputWithContext(context.Background())
}

func (i IpTagResponseArgs) ToIpTagResponseOutputWithContext(ctx context.Context) IpTagResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpTagResponseOutput)
}

// IpTagResponseArrayInput is an input type that accepts IpTagResponseArray and IpTagResponseArrayOutput values.
// You can construct a concrete instance of `IpTagResponseArrayInput` via:
//
//          IpTagResponseArray{ IpTagResponseArgs{...} }
type IpTagResponseArrayInput interface {
	pulumi.Input

	ToIpTagResponseArrayOutput() IpTagResponseArrayOutput
	ToIpTagResponseArrayOutputWithContext(context.Context) IpTagResponseArrayOutput
}

type IpTagResponseArray []IpTagResponseInput

func (IpTagResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpTagResponse)(nil)).Elem()
}

func (i IpTagResponseArray) ToIpTagResponseArrayOutput() IpTagResponseArrayOutput {
	return i.ToIpTagResponseArrayOutputWithContext(context.Background())
}

func (i IpTagResponseArray) ToIpTagResponseArrayOutputWithContext(ctx context.Context) IpTagResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpTagResponseArrayOutput)
}

// Contains the IpTag associated with the public IP address
type IpTagResponseOutput struct{ *pulumi.OutputState }

func (IpTagResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpTagResponse)(nil)).Elem()
}

func (o IpTagResponseOutput) ToIpTagResponseOutput() IpTagResponseOutput {
	return o
}

func (o IpTagResponseOutput) ToIpTagResponseOutputWithContext(ctx context.Context) IpTagResponseOutput {
	return o
}

// Gets or sets the ipTag type: Example FirstPartyUsage.
func (o IpTagResponseOutput) IpTagType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTagResponse) *string { return v.IpTagType }).(pulumi.StringPtrOutput)
}

// Gets or sets value of the IpTag associated with the public IP. Example SQL, Storage etc
func (o IpTagResponseOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpTagResponse) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type IpTagResponseArrayOutput struct{ *pulumi.OutputState }

func (IpTagResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpTagResponse)(nil)).Elem()
}

func (o IpTagResponseArrayOutput) ToIpTagResponseArrayOutput() IpTagResponseArrayOutput {
	return o
}

func (o IpTagResponseArrayOutput) ToIpTagResponseArrayOutputWithContext(ctx context.Context) IpTagResponseArrayOutput {
	return o
}

func (o IpTagResponseArrayOutput) Index(i pulumi.IntInput) IpTagResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpTagResponse {
		return vs[0].([]IpTagResponse)[vs[1].(int)]
	}).(IpTagResponseOutput)
}

// An IPSec Policy configuration for a virtual network gateway connection
type IpsecPolicy struct {
	// The DH Groups used in IKE Phase 1 for initial SA.
	DhGroup string `pulumi:"dhGroup"`
	// The IKE encryption algorithm (IKE phase 2).
	IkeEncryption string `pulumi:"ikeEncryption"`
	// The IKE integrity algorithm (IKE phase 2).
	IkeIntegrity string `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm (IKE phase 1).
	IpsecEncryption string `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm (IKE phase 1).
	IpsecIntegrity string `pulumi:"ipsecIntegrity"`
	// The Pfs Groups used in IKE Phase 2 for new child SA.
	PfsGroup string `pulumi:"pfsGroup"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
	SaDataSizeKilobytes int `pulumi:"saDataSizeKilobytes"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
	SaLifeTimeSeconds int `pulumi:"saLifeTimeSeconds"`
}

// IpsecPolicyInput is an input type that accepts IpsecPolicyArgs and IpsecPolicyOutput values.
// You can construct a concrete instance of `IpsecPolicyInput` via:
//
//          IpsecPolicyArgs{...}
type IpsecPolicyInput interface {
	pulumi.Input

	ToIpsecPolicyOutput() IpsecPolicyOutput
	ToIpsecPolicyOutputWithContext(context.Context) IpsecPolicyOutput
}

// An IPSec Policy configuration for a virtual network gateway connection
type IpsecPolicyArgs struct {
	// The DH Groups used in IKE Phase 1 for initial SA.
	DhGroup pulumi.StringInput `pulumi:"dhGroup"`
	// The IKE encryption algorithm (IKE phase 2).
	IkeEncryption pulumi.StringInput `pulumi:"ikeEncryption"`
	// The IKE integrity algorithm (IKE phase 2).
	IkeIntegrity pulumi.StringInput `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm (IKE phase 1).
	IpsecEncryption pulumi.StringInput `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm (IKE phase 1).
	IpsecIntegrity pulumi.StringInput `pulumi:"ipsecIntegrity"`
	// The Pfs Groups used in IKE Phase 2 for new child SA.
	PfsGroup pulumi.StringInput `pulumi:"pfsGroup"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
	SaDataSizeKilobytes pulumi.IntInput `pulumi:"saDataSizeKilobytes"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
	SaLifeTimeSeconds pulumi.IntInput `pulumi:"saLifeTimeSeconds"`
}

func (IpsecPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecPolicy)(nil)).Elem()
}

func (i IpsecPolicyArgs) ToIpsecPolicyOutput() IpsecPolicyOutput {
	return i.ToIpsecPolicyOutputWithContext(context.Background())
}

func (i IpsecPolicyArgs) ToIpsecPolicyOutputWithContext(ctx context.Context) IpsecPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecPolicyOutput)
}

// IpsecPolicyArrayInput is an input type that accepts IpsecPolicyArray and IpsecPolicyArrayOutput values.
// You can construct a concrete instance of `IpsecPolicyArrayInput` via:
//
//          IpsecPolicyArray{ IpsecPolicyArgs{...} }
type IpsecPolicyArrayInput interface {
	pulumi.Input

	ToIpsecPolicyArrayOutput() IpsecPolicyArrayOutput
	ToIpsecPolicyArrayOutputWithContext(context.Context) IpsecPolicyArrayOutput
}

type IpsecPolicyArray []IpsecPolicyInput

func (IpsecPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecPolicy)(nil)).Elem()
}

func (i IpsecPolicyArray) ToIpsecPolicyArrayOutput() IpsecPolicyArrayOutput {
	return i.ToIpsecPolicyArrayOutputWithContext(context.Background())
}

func (i IpsecPolicyArray) ToIpsecPolicyArrayOutputWithContext(ctx context.Context) IpsecPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecPolicyArrayOutput)
}

// An IPSec Policy configuration for a virtual network gateway connection
type IpsecPolicyOutput struct{ *pulumi.OutputState }

func (IpsecPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecPolicy)(nil)).Elem()
}

func (o IpsecPolicyOutput) ToIpsecPolicyOutput() IpsecPolicyOutput {
	return o
}

func (o IpsecPolicyOutput) ToIpsecPolicyOutputWithContext(ctx context.Context) IpsecPolicyOutput {
	return o
}

// The DH Groups used in IKE Phase 1 for initial SA.
func (o IpsecPolicyOutput) DhGroup() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.DhGroup }).(pulumi.StringOutput)
}

// The IKE encryption algorithm (IKE phase 2).
func (o IpsecPolicyOutput) IkeEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.IkeEncryption }).(pulumi.StringOutput)
}

// The IKE integrity algorithm (IKE phase 2).
func (o IpsecPolicyOutput) IkeIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.IkeIntegrity }).(pulumi.StringOutput)
}

// The IPSec encryption algorithm (IKE phase 1).
func (o IpsecPolicyOutput) IpsecEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.IpsecEncryption }).(pulumi.StringOutput)
}

// The IPSec integrity algorithm (IKE phase 1).
func (o IpsecPolicyOutput) IpsecIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.IpsecIntegrity }).(pulumi.StringOutput)
}

// The Pfs Groups used in IKE Phase 2 for new child SA.
func (o IpsecPolicyOutput) PfsGroup() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicy) string { return v.PfsGroup }).(pulumi.StringOutput)
}

// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
func (o IpsecPolicyOutput) SaDataSizeKilobytes() pulumi.IntOutput {
	return o.ApplyT(func(v IpsecPolicy) int { return v.SaDataSizeKilobytes }).(pulumi.IntOutput)
}

// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
func (o IpsecPolicyOutput) SaLifeTimeSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v IpsecPolicy) int { return v.SaLifeTimeSeconds }).(pulumi.IntOutput)
}

type IpsecPolicyArrayOutput struct{ *pulumi.OutputState }

func (IpsecPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecPolicy)(nil)).Elem()
}

func (o IpsecPolicyArrayOutput) ToIpsecPolicyArrayOutput() IpsecPolicyArrayOutput {
	return o
}

func (o IpsecPolicyArrayOutput) ToIpsecPolicyArrayOutputWithContext(ctx context.Context) IpsecPolicyArrayOutput {
	return o
}

func (o IpsecPolicyArrayOutput) Index(i pulumi.IntInput) IpsecPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsecPolicy {
		return vs[0].([]IpsecPolicy)[vs[1].(int)]
	}).(IpsecPolicyOutput)
}

// An IPSec Policy configuration for a virtual network gateway connection
type IpsecPolicyResponse struct {
	// The DH Groups used in IKE Phase 1 for initial SA.
	DhGroup string `pulumi:"dhGroup"`
	// The IKE encryption algorithm (IKE phase 2).
	IkeEncryption string `pulumi:"ikeEncryption"`
	// The IKE integrity algorithm (IKE phase 2).
	IkeIntegrity string `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm (IKE phase 1).
	IpsecEncryption string `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm (IKE phase 1).
	IpsecIntegrity string `pulumi:"ipsecIntegrity"`
	// The Pfs Groups used in IKE Phase 2 for new child SA.
	PfsGroup string `pulumi:"pfsGroup"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
	SaDataSizeKilobytes int `pulumi:"saDataSizeKilobytes"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
	SaLifeTimeSeconds int `pulumi:"saLifeTimeSeconds"`
}

// IpsecPolicyResponseInput is an input type that accepts IpsecPolicyResponseArgs and IpsecPolicyResponseOutput values.
// You can construct a concrete instance of `IpsecPolicyResponseInput` via:
//
//          IpsecPolicyResponseArgs{...}
type IpsecPolicyResponseInput interface {
	pulumi.Input

	ToIpsecPolicyResponseOutput() IpsecPolicyResponseOutput
	ToIpsecPolicyResponseOutputWithContext(context.Context) IpsecPolicyResponseOutput
}

// An IPSec Policy configuration for a virtual network gateway connection
type IpsecPolicyResponseArgs struct {
	// The DH Groups used in IKE Phase 1 for initial SA.
	DhGroup pulumi.StringInput `pulumi:"dhGroup"`
	// The IKE encryption algorithm (IKE phase 2).
	IkeEncryption pulumi.StringInput `pulumi:"ikeEncryption"`
	// The IKE integrity algorithm (IKE phase 2).
	IkeIntegrity pulumi.StringInput `pulumi:"ikeIntegrity"`
	// The IPSec encryption algorithm (IKE phase 1).
	IpsecEncryption pulumi.StringInput `pulumi:"ipsecEncryption"`
	// The IPSec integrity algorithm (IKE phase 1).
	IpsecIntegrity pulumi.StringInput `pulumi:"ipsecIntegrity"`
	// The Pfs Groups used in IKE Phase 2 for new child SA.
	PfsGroup pulumi.StringInput `pulumi:"pfsGroup"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
	SaDataSizeKilobytes pulumi.IntInput `pulumi:"saDataSizeKilobytes"`
	// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
	SaLifeTimeSeconds pulumi.IntInput `pulumi:"saLifeTimeSeconds"`
}

func (IpsecPolicyResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecPolicyResponse)(nil)).Elem()
}

func (i IpsecPolicyResponseArgs) ToIpsecPolicyResponseOutput() IpsecPolicyResponseOutput {
	return i.ToIpsecPolicyResponseOutputWithContext(context.Background())
}

func (i IpsecPolicyResponseArgs) ToIpsecPolicyResponseOutputWithContext(ctx context.Context) IpsecPolicyResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecPolicyResponseOutput)
}

// IpsecPolicyResponseArrayInput is an input type that accepts IpsecPolicyResponseArray and IpsecPolicyResponseArrayOutput values.
// You can construct a concrete instance of `IpsecPolicyResponseArrayInput` via:
//
//          IpsecPolicyResponseArray{ IpsecPolicyResponseArgs{...} }
type IpsecPolicyResponseArrayInput interface {
	pulumi.Input

	ToIpsecPolicyResponseArrayOutput() IpsecPolicyResponseArrayOutput
	ToIpsecPolicyResponseArrayOutputWithContext(context.Context) IpsecPolicyResponseArrayOutput
}

type IpsecPolicyResponseArray []IpsecPolicyResponseInput

func (IpsecPolicyResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecPolicyResponse)(nil)).Elem()
}

func (i IpsecPolicyResponseArray) ToIpsecPolicyResponseArrayOutput() IpsecPolicyResponseArrayOutput {
	return i.ToIpsecPolicyResponseArrayOutputWithContext(context.Background())
}

func (i IpsecPolicyResponseArray) ToIpsecPolicyResponseArrayOutputWithContext(ctx context.Context) IpsecPolicyResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpsecPolicyResponseArrayOutput)
}

// An IPSec Policy configuration for a virtual network gateway connection
type IpsecPolicyResponseOutput struct{ *pulumi.OutputState }

func (IpsecPolicyResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpsecPolicyResponse)(nil)).Elem()
}

func (o IpsecPolicyResponseOutput) ToIpsecPolicyResponseOutput() IpsecPolicyResponseOutput {
	return o
}

func (o IpsecPolicyResponseOutput) ToIpsecPolicyResponseOutputWithContext(ctx context.Context) IpsecPolicyResponseOutput {
	return o
}

// The DH Groups used in IKE Phase 1 for initial SA.
func (o IpsecPolicyResponseOutput) DhGroup() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.DhGroup }).(pulumi.StringOutput)
}

// The IKE encryption algorithm (IKE phase 2).
func (o IpsecPolicyResponseOutput) IkeEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.IkeEncryption }).(pulumi.StringOutput)
}

// The IKE integrity algorithm (IKE phase 2).
func (o IpsecPolicyResponseOutput) IkeIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.IkeIntegrity }).(pulumi.StringOutput)
}

// The IPSec encryption algorithm (IKE phase 1).
func (o IpsecPolicyResponseOutput) IpsecEncryption() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.IpsecEncryption }).(pulumi.StringOutput)
}

// The IPSec integrity algorithm (IKE phase 1).
func (o IpsecPolicyResponseOutput) IpsecIntegrity() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.IpsecIntegrity }).(pulumi.StringOutput)
}

// The Pfs Groups used in IKE Phase 2 for new child SA.
func (o IpsecPolicyResponseOutput) PfsGroup() pulumi.StringOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) string { return v.PfsGroup }).(pulumi.StringOutput)
}

// The IPSec Security Association (also called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN tunnel.
func (o IpsecPolicyResponseOutput) SaDataSizeKilobytes() pulumi.IntOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) int { return v.SaDataSizeKilobytes }).(pulumi.IntOutput)
}

// The IPSec Security Association (also called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN tunnel.
func (o IpsecPolicyResponseOutput) SaLifeTimeSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v IpsecPolicyResponse) int { return v.SaLifeTimeSeconds }).(pulumi.IntOutput)
}

type IpsecPolicyResponseArrayOutput struct{ *pulumi.OutputState }

func (IpsecPolicyResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpsecPolicyResponse)(nil)).Elem()
}

func (o IpsecPolicyResponseArrayOutput) ToIpsecPolicyResponseArrayOutput() IpsecPolicyResponseArrayOutput {
	return o
}

func (o IpsecPolicyResponseArrayOutput) ToIpsecPolicyResponseArrayOutputWithContext(ctx context.Context) IpsecPolicyResponseArrayOutput {
	return o
}

func (o IpsecPolicyResponseArrayOutput) Index(i pulumi.IntInput) IpsecPolicyResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpsecPolicyResponse {
		return vs[0].([]IpsecPolicyResponse)[vs[1].(int)]
	}).(IpsecPolicyResponseOutput)
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfig struct {
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfig `pulumi:"microsoftPeeringConfig"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// The reference of the RouteFilter resource.
	RouteFilter *RouteFilterType `pulumi:"routeFilter"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The state of peering. Possible values are: 'Disabled' and 'Enabled'
	State *string `pulumi:"state"`
}

// Ipv6ExpressRouteCircuitPeeringConfigInput is an input type that accepts Ipv6ExpressRouteCircuitPeeringConfigArgs and Ipv6ExpressRouteCircuitPeeringConfigOutput values.
// You can construct a concrete instance of `Ipv6ExpressRouteCircuitPeeringConfigInput` via:
//
//          Ipv6ExpressRouteCircuitPeeringConfigArgs{...}
type Ipv6ExpressRouteCircuitPeeringConfigInput interface {
	pulumi.Input

	ToIpv6ExpressRouteCircuitPeeringConfigOutput() Ipv6ExpressRouteCircuitPeeringConfigOutput
	ToIpv6ExpressRouteCircuitPeeringConfigOutputWithContext(context.Context) Ipv6ExpressRouteCircuitPeeringConfigOutput
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfigArgs struct {
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig ExpressRouteCircuitPeeringConfigPtrInput `pulumi:"microsoftPeeringConfig"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"primaryPeerAddressPrefix"`
	// The reference of the RouteFilter resource.
	RouteFilter RouteFilterTypePtrInput `pulumi:"routeFilter"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"secondaryPeerAddressPrefix"`
	// The state of peering. Possible values are: 'Disabled' and 'Enabled'
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (Ipv6ExpressRouteCircuitPeeringConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (i Ipv6ExpressRouteCircuitPeeringConfigArgs) ToIpv6ExpressRouteCircuitPeeringConfigOutput() Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigOutputWithContext(context.Background())
}

func (i Ipv6ExpressRouteCircuitPeeringConfigArgs) ToIpv6ExpressRouteCircuitPeeringConfigOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigOutput)
}

func (i Ipv6ExpressRouteCircuitPeeringConfigArgs) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (i Ipv6ExpressRouteCircuitPeeringConfigArgs) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigOutput).ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx)
}

// Ipv6ExpressRouteCircuitPeeringConfigPtrInput is an input type that accepts Ipv6ExpressRouteCircuitPeeringConfigArgs, Ipv6ExpressRouteCircuitPeeringConfigPtr and Ipv6ExpressRouteCircuitPeeringConfigPtrOutput values.
// You can construct a concrete instance of `Ipv6ExpressRouteCircuitPeeringConfigPtrInput` via:
//
//          Ipv6ExpressRouteCircuitPeeringConfigArgs{...}
//
//  or:
//
//          nil
type Ipv6ExpressRouteCircuitPeeringConfigPtrInput interface {
	pulumi.Input

	ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput
	ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput
}

type ipv6ExpressRouteCircuitPeeringConfigPtrType Ipv6ExpressRouteCircuitPeeringConfigArgs

func Ipv6ExpressRouteCircuitPeeringConfigPtr(v *Ipv6ExpressRouteCircuitPeeringConfigArgs) Ipv6ExpressRouteCircuitPeeringConfigPtrInput {
	return (*ipv6ExpressRouteCircuitPeeringConfigPtrType)(v)
}

func (*ipv6ExpressRouteCircuitPeeringConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (i *ipv6ExpressRouteCircuitPeeringConfigPtrType) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (i *ipv6ExpressRouteCircuitPeeringConfigPtrType) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigPtrOutput)
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfigOutput struct{ *pulumi.OutputState }

func (Ipv6ExpressRouteCircuitPeeringConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) ToIpv6ExpressRouteCircuitPeeringConfigOutput() Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) ToIpv6ExpressRouteCircuitPeeringConfigOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(context.Background())
}

func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *Ipv6ExpressRouteCircuitPeeringConfig {
		return &v
	}).(Ipv6ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The Microsoft peering configuration.
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *ExpressRouteCircuitPeeringConfig {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The primary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The reference of the RouteFilter resource.
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) RouteFilter() RouteFilterTypePtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *RouteFilterType { return v.RouteFilter }).(RouteFilterTypePtrOutput)
}

// The secondary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The state of peering. Possible values are: 'Disabled' and 'Enabled'
func (o Ipv6ExpressRouteCircuitPeeringConfigOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfig) *string { return v.State }).(pulumi.StringPtrOutput)
}

type Ipv6ExpressRouteCircuitPeeringConfigPtrOutput struct{ *pulumi.OutputState }

func (Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6ExpressRouteCircuitPeeringConfig)(nil)).Elem()
}

func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutput() Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) ToIpv6ExpressRouteCircuitPeeringConfigPtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigPtrOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) Elem() Ipv6ExpressRouteCircuitPeeringConfigOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) Ipv6ExpressRouteCircuitPeeringConfig { return *v }).(Ipv6ExpressRouteCircuitPeeringConfigOutput)
}

// The Microsoft peering configuration.
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *ExpressRouteCircuitPeeringConfig {
		if v == nil {
			return nil
		}
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigPtrOutput)
}

// The primary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The reference of the RouteFilter resource.
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) RouteFilter() RouteFilterTypePtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *RouteFilterType {
		if v == nil {
			return nil
		}
		return v.RouteFilter
	}).(RouteFilterTypePtrOutput)
}

// The secondary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The state of peering. Possible values are: 'Disabled' and 'Enabled'
func (o Ipv6ExpressRouteCircuitPeeringConfigPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfig) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfigResponse struct {
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfigResponse `pulumi:"microsoftPeeringConfig"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// The reference of the RouteFilter resource.
	RouteFilter *RouteFilterResponse `pulumi:"routeFilter"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// The state of peering. Possible values are: 'Disabled' and 'Enabled'
	State *string `pulumi:"state"`
}

// Ipv6ExpressRouteCircuitPeeringConfigResponseInput is an input type that accepts Ipv6ExpressRouteCircuitPeeringConfigResponseArgs and Ipv6ExpressRouteCircuitPeeringConfigResponseOutput values.
// You can construct a concrete instance of `Ipv6ExpressRouteCircuitPeeringConfigResponseInput` via:
//
//          Ipv6ExpressRouteCircuitPeeringConfigResponseArgs{...}
type Ipv6ExpressRouteCircuitPeeringConfigResponseInput interface {
	pulumi.Input

	ToIpv6ExpressRouteCircuitPeeringConfigResponseOutput() Ipv6ExpressRouteCircuitPeeringConfigResponseOutput
	ToIpv6ExpressRouteCircuitPeeringConfigResponseOutputWithContext(context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponseOutput
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfigResponseArgs struct {
	// The Microsoft peering configuration.
	MicrosoftPeeringConfig ExpressRouteCircuitPeeringConfigResponsePtrInput `pulumi:"microsoftPeeringConfig"`
	// The primary address prefix.
	PrimaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"primaryPeerAddressPrefix"`
	// The reference of the RouteFilter resource.
	RouteFilter RouteFilterResponsePtrInput `pulumi:"routeFilter"`
	// The secondary address prefix.
	SecondaryPeerAddressPrefix pulumi.StringPtrInput `pulumi:"secondaryPeerAddressPrefix"`
	// The state of peering. Possible values are: 'Disabled' and 'Enabled'
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (Ipv6ExpressRouteCircuitPeeringConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (i Ipv6ExpressRouteCircuitPeeringConfigResponseArgs) ToIpv6ExpressRouteCircuitPeeringConfigResponseOutput() Ipv6ExpressRouteCircuitPeeringConfigResponseOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigResponseOutputWithContext(context.Background())
}

func (i Ipv6ExpressRouteCircuitPeeringConfigResponseArgs) ToIpv6ExpressRouteCircuitPeeringConfigResponseOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigResponseOutput)
}

func (i Ipv6ExpressRouteCircuitPeeringConfigResponseArgs) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutput() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (i Ipv6ExpressRouteCircuitPeeringConfigResponseArgs) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigResponseOutput).ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx)
}

// Ipv6ExpressRouteCircuitPeeringConfigResponsePtrInput is an input type that accepts Ipv6ExpressRouteCircuitPeeringConfigResponseArgs, Ipv6ExpressRouteCircuitPeeringConfigResponsePtr and Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput values.
// You can construct a concrete instance of `Ipv6ExpressRouteCircuitPeeringConfigResponsePtrInput` via:
//
//          Ipv6ExpressRouteCircuitPeeringConfigResponseArgs{...}
//
//  or:
//
//          nil
type Ipv6ExpressRouteCircuitPeeringConfigResponsePtrInput interface {
	pulumi.Input

	ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutput() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput
	ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput
}

type ipv6ExpressRouteCircuitPeeringConfigResponsePtrType Ipv6ExpressRouteCircuitPeeringConfigResponseArgs

func Ipv6ExpressRouteCircuitPeeringConfigResponsePtr(v *Ipv6ExpressRouteCircuitPeeringConfigResponseArgs) Ipv6ExpressRouteCircuitPeeringConfigResponsePtrInput {
	return (*ipv6ExpressRouteCircuitPeeringConfigResponsePtrType)(v)
}

func (*ipv6ExpressRouteCircuitPeeringConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (i *ipv6ExpressRouteCircuitPeeringConfigResponsePtrType) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutput() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return i.ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (i *ipv6ExpressRouteCircuitPeeringConfigResponsePtrType) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// Contains IPv6 peering config.
type Ipv6ExpressRouteCircuitPeeringConfigResponseOutput struct{ *pulumi.OutputState }

func (Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Ipv6ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponseOutput() Ipv6ExpressRouteCircuitPeeringConfigResponseOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponseOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponseOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutput() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(context.Background())
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *Ipv6ExpressRouteCircuitPeeringConfigResponse {
		return &v
	}).(Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The Microsoft peering configuration.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *ExpressRouteCircuitPeeringConfigResponse {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The primary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The reference of the RouteFilter resource.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) RouteFilter() RouteFilterResponsePtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *RouteFilterResponse { return v.RouteFilter }).(RouteFilterResponsePtrOutput)
}

// The secondary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// The state of peering. Possible values are: 'Disabled' and 'Enabled'
func (o Ipv6ExpressRouteCircuitPeeringConfigResponseOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Ipv6ExpressRouteCircuitPeeringConfigResponse) *string { return v.State }).(pulumi.StringPtrOutput)
}

type Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ipv6ExpressRouteCircuitPeeringConfigResponse)(nil)).Elem()
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutput() Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) ToIpv6ExpressRouteCircuitPeeringConfigResponsePtrOutputWithContext(ctx context.Context) Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o
}

func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) Elem() Ipv6ExpressRouteCircuitPeeringConfigResponseOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) Ipv6ExpressRouteCircuitPeeringConfigResponse {
		return *v
	}).(Ipv6ExpressRouteCircuitPeeringConfigResponseOutput)
}

// The Microsoft peering configuration.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *ExpressRouteCircuitPeeringConfigResponse {
		if v == nil {
			return nil
		}
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// The primary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The reference of the RouteFilter resource.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) RouteFilter() RouteFilterResponsePtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *RouteFilterResponse {
		if v == nil {
			return nil
		}
		return v.RouteFilter
	}).(RouteFilterResponsePtrOutput)
}

// The secondary address prefix.
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryPeerAddressPrefix
	}).(pulumi.StringPtrOutput)
}

// The state of peering. Possible values are: 'Disabled' and 'Enabled'
func (o Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ipv6ExpressRouteCircuitPeeringConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// SKU of a load balancer
type LoadBalancerSku struct {
	// Name of a load balancer SKU.
	Name *string `pulumi:"name"`
}

// LoadBalancerSkuInput is an input type that accepts LoadBalancerSkuArgs and LoadBalancerSkuOutput values.
// You can construct a concrete instance of `LoadBalancerSkuInput` via:
//
//          LoadBalancerSkuArgs{...}
type LoadBalancerSkuInput interface {
	pulumi.Input

	ToLoadBalancerSkuOutput() LoadBalancerSkuOutput
	ToLoadBalancerSkuOutputWithContext(context.Context) LoadBalancerSkuOutput
}

// SKU of a load balancer
type LoadBalancerSkuArgs struct {
	// Name of a load balancer SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LoadBalancerSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSku)(nil)).Elem()
}

func (i LoadBalancerSkuArgs) ToLoadBalancerSkuOutput() LoadBalancerSkuOutput {
	return i.ToLoadBalancerSkuOutputWithContext(context.Background())
}

func (i LoadBalancerSkuArgs) ToLoadBalancerSkuOutputWithContext(ctx context.Context) LoadBalancerSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuOutput)
}

func (i LoadBalancerSkuArgs) ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput {
	return i.ToLoadBalancerSkuPtrOutputWithContext(context.Background())
}

func (i LoadBalancerSkuArgs) ToLoadBalancerSkuPtrOutputWithContext(ctx context.Context) LoadBalancerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuOutput).ToLoadBalancerSkuPtrOutputWithContext(ctx)
}

// LoadBalancerSkuPtrInput is an input type that accepts LoadBalancerSkuArgs, LoadBalancerSkuPtr and LoadBalancerSkuPtrOutput values.
// You can construct a concrete instance of `LoadBalancerSkuPtrInput` via:
//
//          LoadBalancerSkuArgs{...}
//
//  or:
//
//          nil
type LoadBalancerSkuPtrInput interface {
	pulumi.Input

	ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput
	ToLoadBalancerSkuPtrOutputWithContext(context.Context) LoadBalancerSkuPtrOutput
}

type loadBalancerSkuPtrType LoadBalancerSkuArgs

func LoadBalancerSkuPtr(v *LoadBalancerSkuArgs) LoadBalancerSkuPtrInput {
	return (*loadBalancerSkuPtrType)(v)
}

func (*loadBalancerSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerSku)(nil)).Elem()
}

func (i *loadBalancerSkuPtrType) ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput {
	return i.ToLoadBalancerSkuPtrOutputWithContext(context.Background())
}

func (i *loadBalancerSkuPtrType) ToLoadBalancerSkuPtrOutputWithContext(ctx context.Context) LoadBalancerSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuPtrOutput)
}

// SKU of a load balancer
type LoadBalancerSkuOutput struct{ *pulumi.OutputState }

func (LoadBalancerSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSku)(nil)).Elem()
}

func (o LoadBalancerSkuOutput) ToLoadBalancerSkuOutput() LoadBalancerSkuOutput {
	return o
}

func (o LoadBalancerSkuOutput) ToLoadBalancerSkuOutputWithContext(ctx context.Context) LoadBalancerSkuOutput {
	return o
}

func (o LoadBalancerSkuOutput) ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput {
	return o.ToLoadBalancerSkuPtrOutputWithContext(context.Background())
}

func (o LoadBalancerSkuOutput) ToLoadBalancerSkuPtrOutputWithContext(ctx context.Context) LoadBalancerSkuPtrOutput {
	return o.ApplyT(func(v LoadBalancerSku) *LoadBalancerSku {
		return &v
	}).(LoadBalancerSkuPtrOutput)
}

// Name of a load balancer SKU.
func (o LoadBalancerSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LoadBalancerSkuPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerSku)(nil)).Elem()
}

func (o LoadBalancerSkuPtrOutput) ToLoadBalancerSkuPtrOutput() LoadBalancerSkuPtrOutput {
	return o
}

func (o LoadBalancerSkuPtrOutput) ToLoadBalancerSkuPtrOutputWithContext(ctx context.Context) LoadBalancerSkuPtrOutput {
	return o
}

func (o LoadBalancerSkuPtrOutput) Elem() LoadBalancerSkuOutput {
	return o.ApplyT(func(v *LoadBalancerSku) LoadBalancerSku { return *v }).(LoadBalancerSkuOutput)
}

// Name of a load balancer SKU.
func (o LoadBalancerSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// SKU of a load balancer
type LoadBalancerSkuResponse struct {
	// Name of a load balancer SKU.
	Name *string `pulumi:"name"`
}

// LoadBalancerSkuResponseInput is an input type that accepts LoadBalancerSkuResponseArgs and LoadBalancerSkuResponseOutput values.
// You can construct a concrete instance of `LoadBalancerSkuResponseInput` via:
//
//          LoadBalancerSkuResponseArgs{...}
type LoadBalancerSkuResponseInput interface {
	pulumi.Input

	ToLoadBalancerSkuResponseOutput() LoadBalancerSkuResponseOutput
	ToLoadBalancerSkuResponseOutputWithContext(context.Context) LoadBalancerSkuResponseOutput
}

// SKU of a load balancer
type LoadBalancerSkuResponseArgs struct {
	// Name of a load balancer SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LoadBalancerSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSkuResponse)(nil)).Elem()
}

func (i LoadBalancerSkuResponseArgs) ToLoadBalancerSkuResponseOutput() LoadBalancerSkuResponseOutput {
	return i.ToLoadBalancerSkuResponseOutputWithContext(context.Background())
}

func (i LoadBalancerSkuResponseArgs) ToLoadBalancerSkuResponseOutputWithContext(ctx context.Context) LoadBalancerSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuResponseOutput)
}

func (i LoadBalancerSkuResponseArgs) ToLoadBalancerSkuResponsePtrOutput() LoadBalancerSkuResponsePtrOutput {
	return i.ToLoadBalancerSkuResponsePtrOutputWithContext(context.Background())
}

func (i LoadBalancerSkuResponseArgs) ToLoadBalancerSkuResponsePtrOutputWithContext(ctx context.Context) LoadBalancerSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuResponseOutput).ToLoadBalancerSkuResponsePtrOutputWithContext(ctx)
}

// LoadBalancerSkuResponsePtrInput is an input type that accepts LoadBalancerSkuResponseArgs, LoadBalancerSkuResponsePtr and LoadBalancerSkuResponsePtrOutput values.
// You can construct a concrete instance of `LoadBalancerSkuResponsePtrInput` via:
//
//          LoadBalancerSkuResponseArgs{...}
//
//  or:
//
//          nil
type LoadBalancerSkuResponsePtrInput interface {
	pulumi.Input

	ToLoadBalancerSkuResponsePtrOutput() LoadBalancerSkuResponsePtrOutput
	ToLoadBalancerSkuResponsePtrOutputWithContext(context.Context) LoadBalancerSkuResponsePtrOutput
}

type loadBalancerSkuResponsePtrType LoadBalancerSkuResponseArgs

func LoadBalancerSkuResponsePtr(v *LoadBalancerSkuResponseArgs) LoadBalancerSkuResponsePtrInput {
	return (*loadBalancerSkuResponsePtrType)(v)
}

func (*loadBalancerSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerSkuResponse)(nil)).Elem()
}

func (i *loadBalancerSkuResponsePtrType) ToLoadBalancerSkuResponsePtrOutput() LoadBalancerSkuResponsePtrOutput {
	return i.ToLoadBalancerSkuResponsePtrOutputWithContext(context.Background())
}

func (i *loadBalancerSkuResponsePtrType) ToLoadBalancerSkuResponsePtrOutputWithContext(ctx context.Context) LoadBalancerSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSkuResponsePtrOutput)
}

// SKU of a load balancer
type LoadBalancerSkuResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancerSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSkuResponse)(nil)).Elem()
}

func (o LoadBalancerSkuResponseOutput) ToLoadBalancerSkuResponseOutput() LoadBalancerSkuResponseOutput {
	return o
}

func (o LoadBalancerSkuResponseOutput) ToLoadBalancerSkuResponseOutputWithContext(ctx context.Context) LoadBalancerSkuResponseOutput {
	return o
}

func (o LoadBalancerSkuResponseOutput) ToLoadBalancerSkuResponsePtrOutput() LoadBalancerSkuResponsePtrOutput {
	return o.ToLoadBalancerSkuResponsePtrOutputWithContext(context.Background())
}

func (o LoadBalancerSkuResponseOutput) ToLoadBalancerSkuResponsePtrOutputWithContext(ctx context.Context) LoadBalancerSkuResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancerSkuResponse) *LoadBalancerSkuResponse {
		return &v
	}).(LoadBalancerSkuResponsePtrOutput)
}

// Name of a load balancer SKU.
func (o LoadBalancerSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type LoadBalancerSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerSkuResponse)(nil)).Elem()
}

func (o LoadBalancerSkuResponsePtrOutput) ToLoadBalancerSkuResponsePtrOutput() LoadBalancerSkuResponsePtrOutput {
	return o
}

func (o LoadBalancerSkuResponsePtrOutput) ToLoadBalancerSkuResponsePtrOutputWithContext(ctx context.Context) LoadBalancerSkuResponsePtrOutput {
	return o
}

func (o LoadBalancerSkuResponsePtrOutput) Elem() LoadBalancerSkuResponseOutput {
	return o.ApplyT(func(v *LoadBalancerSkuResponse) LoadBalancerSkuResponse { return *v }).(LoadBalancerSkuResponseOutput)
}

// Name of a load balancer SKU.
func (o LoadBalancerSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRule struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool *SubResource `pulumi:"backendAddressPool"`
	// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port"
	BackendPort *int `pulumi:"backendPort"`
	// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
	DisableOutboundSnat *bool `pulumi:"disableOutboundSnat"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResource `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port"
	FrontendPort int `pulumi:"frontendPort"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
	LoadDistribution *string `pulumi:"loadDistribution"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference of the load balancer probe used by the load balancing rule.
	Probe *SubResource `pulumi:"probe"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// LoadBalancingRuleInput is an input type that accepts LoadBalancingRuleArgs and LoadBalancingRuleOutput values.
// You can construct a concrete instance of `LoadBalancingRuleInput` via:
//
//          LoadBalancingRuleArgs{...}
type LoadBalancingRuleInput interface {
	pulumi.Input

	ToLoadBalancingRuleOutput() LoadBalancingRuleOutput
	ToLoadBalancingRuleOutputWithContext(context.Context) LoadBalancingRuleOutput
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleArgs struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourcePtrInput `pulumi:"backendAddressPool"`
	// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port"
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
	DisableOutboundSnat pulumi.BoolPtrInput `pulumi:"disableOutboundSnat"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourcePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port"
	FrontendPort pulumi.IntInput `pulumi:"frontendPort"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
	LoadDistribution pulumi.StringPtrInput `pulumi:"loadDistribution"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference of the load balancer probe used by the load balancing rule.
	Probe SubResourcePtrInput `pulumi:"probe"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (LoadBalancingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRule)(nil)).Elem()
}

func (i LoadBalancingRuleArgs) ToLoadBalancingRuleOutput() LoadBalancingRuleOutput {
	return i.ToLoadBalancingRuleOutputWithContext(context.Background())
}

func (i LoadBalancingRuleArgs) ToLoadBalancingRuleOutputWithContext(ctx context.Context) LoadBalancingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleOutput)
}

// LoadBalancingRuleArrayInput is an input type that accepts LoadBalancingRuleArray and LoadBalancingRuleArrayOutput values.
// You can construct a concrete instance of `LoadBalancingRuleArrayInput` via:
//
//          LoadBalancingRuleArray{ LoadBalancingRuleArgs{...} }
type LoadBalancingRuleArrayInput interface {
	pulumi.Input

	ToLoadBalancingRuleArrayOutput() LoadBalancingRuleArrayOutput
	ToLoadBalancingRuleArrayOutputWithContext(context.Context) LoadBalancingRuleArrayOutput
}

type LoadBalancingRuleArray []LoadBalancingRuleInput

func (LoadBalancingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRule)(nil)).Elem()
}

func (i LoadBalancingRuleArray) ToLoadBalancingRuleArrayOutput() LoadBalancingRuleArrayOutput {
	return i.ToLoadBalancingRuleArrayOutputWithContext(context.Background())
}

func (i LoadBalancingRuleArray) ToLoadBalancingRuleArrayOutputWithContext(ctx context.Context) LoadBalancingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleArrayOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRule)(nil)).Elem()
}

func (o LoadBalancingRuleOutput) ToLoadBalancingRuleOutput() LoadBalancingRuleOutput {
	return o
}

func (o LoadBalancingRuleOutput) ToLoadBalancingRuleOutputWithContext(ctx context.Context) LoadBalancingRuleOutput {
	return o
}

// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
func (o LoadBalancingRuleOutput) BackendAddressPool() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *SubResource { return v.BackendAddressPool }).(SubResourcePtrOutput)
}

// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port"
func (o LoadBalancingRuleOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
func (o LoadBalancingRuleOutput) DisableOutboundSnat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *bool { return v.DisableOutboundSnat }).(pulumi.BoolPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o LoadBalancingRuleOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LoadBalancingRuleOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// A reference to frontend IP addresses.
func (o LoadBalancingRuleOutput) FrontendIPConfiguration() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *SubResource { return v.FrontendIPConfiguration }).(SubResourcePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port"
func (o LoadBalancingRuleOutput) FrontendPort() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancingRule) int { return v.FrontendPort }).(pulumi.IntOutput)
}

// Resource ID.
func (o LoadBalancingRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRuleOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
func (o LoadBalancingRuleOutput) LoadDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *string { return v.LoadDistribution }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o LoadBalancingRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference of the load balancer probe used by the load balancing rule.
func (o LoadBalancingRuleOutput) Probe() SubResourcePtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *SubResource { return v.Probe }).(SubResourcePtrOutput)
}

// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
func (o LoadBalancingRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o LoadBalancingRuleOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRule) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type LoadBalancingRuleArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRule)(nil)).Elem()
}

func (o LoadBalancingRuleArrayOutput) ToLoadBalancingRuleArrayOutput() LoadBalancingRuleArrayOutput {
	return o
}

func (o LoadBalancingRuleArrayOutput) ToLoadBalancingRuleArrayOutputWithContext(ctx context.Context) LoadBalancingRuleArrayOutput {
	return o
}

func (o LoadBalancingRuleArrayOutput) Index(i pulumi.IntInput) LoadBalancingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancingRule {
		return vs[0].([]LoadBalancingRule)[vs[1].(int)]
	}).(LoadBalancingRuleOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleResponse struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool *SubResourceResponse `pulumi:"backendAddressPool"`
	// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port"
	BackendPort *int `pulumi:"backendPort"`
	// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
	DisableOutboundSnat *bool `pulumi:"disableOutboundSnat"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP *bool `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration *SubResourceResponse `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port"
	FrontendPort int `pulumi:"frontendPort"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
	LoadDistribution *string `pulumi:"loadDistribution"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference of the load balancer probe used by the load balancing rule.
	Probe *SubResourceResponse `pulumi:"probe"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// LoadBalancingRuleResponseInput is an input type that accepts LoadBalancingRuleResponseArgs and LoadBalancingRuleResponseOutput values.
// You can construct a concrete instance of `LoadBalancingRuleResponseInput` via:
//
//          LoadBalancingRuleResponseArgs{...}
type LoadBalancingRuleResponseInput interface {
	pulumi.Input

	ToLoadBalancingRuleResponseOutput() LoadBalancingRuleResponseOutput
	ToLoadBalancingRuleResponseOutputWithContext(context.Context) LoadBalancingRuleResponseOutput
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleResponseArgs struct {
	// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceResponsePtrInput `pulumi:"backendAddressPool"`
	// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port"
	BackendPort pulumi.IntPtrInput `pulumi:"backendPort"`
	// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
	DisableOutboundSnat pulumi.BoolPtrInput `pulumi:"disableOutboundSnat"`
	// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
	EnableFloatingIP pulumi.BoolPtrInput `pulumi:"enableFloatingIP"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// A reference to frontend IP addresses.
	FrontendIPConfiguration SubResourceResponsePtrInput `pulumi:"frontendIPConfiguration"`
	// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port"
	FrontendPort pulumi.IntInput `pulumi:"frontendPort"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
	LoadDistribution pulumi.StringPtrInput `pulumi:"loadDistribution"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference of the load balancer probe used by the load balancing rule.
	Probe SubResourceResponsePtrInput `pulumi:"probe"`
	// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (LoadBalancingRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRuleResponse)(nil)).Elem()
}

func (i LoadBalancingRuleResponseArgs) ToLoadBalancingRuleResponseOutput() LoadBalancingRuleResponseOutput {
	return i.ToLoadBalancingRuleResponseOutputWithContext(context.Background())
}

func (i LoadBalancingRuleResponseArgs) ToLoadBalancingRuleResponseOutputWithContext(ctx context.Context) LoadBalancingRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleResponseOutput)
}

// LoadBalancingRuleResponseArrayInput is an input type that accepts LoadBalancingRuleResponseArray and LoadBalancingRuleResponseArrayOutput values.
// You can construct a concrete instance of `LoadBalancingRuleResponseArrayInput` via:
//
//          LoadBalancingRuleResponseArray{ LoadBalancingRuleResponseArgs{...} }
type LoadBalancingRuleResponseArrayInput interface {
	pulumi.Input

	ToLoadBalancingRuleResponseArrayOutput() LoadBalancingRuleResponseArrayOutput
	ToLoadBalancingRuleResponseArrayOutputWithContext(context.Context) LoadBalancingRuleResponseArrayOutput
}

type LoadBalancingRuleResponseArray []LoadBalancingRuleResponseInput

func (LoadBalancingRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRuleResponse)(nil)).Elem()
}

func (i LoadBalancingRuleResponseArray) ToLoadBalancingRuleResponseArrayOutput() LoadBalancingRuleResponseArrayOutput {
	return i.ToLoadBalancingRuleResponseArrayOutputWithContext(context.Background())
}

func (i LoadBalancingRuleResponseArray) ToLoadBalancingRuleResponseArrayOutputWithContext(ctx context.Context) LoadBalancingRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancingRuleResponseArrayOutput)
}

// A load balancing rule for a load balancer.
type LoadBalancingRuleResponseOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancingRuleResponse)(nil)).Elem()
}

func (o LoadBalancingRuleResponseOutput) ToLoadBalancingRuleResponseOutput() LoadBalancingRuleResponseOutput {
	return o
}

func (o LoadBalancingRuleResponseOutput) ToLoadBalancingRuleResponseOutputWithContext(ctx context.Context) LoadBalancingRuleResponseOutput {
	return o
}

// A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend IPs.
func (o LoadBalancingRuleResponseOutput) BackendAddressPool() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponsePtrOutput)
}

// The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note that value 0 enables "Any Port"
func (o LoadBalancingRuleResponseOutput) BackendPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *int { return v.BackendPort }).(pulumi.IntPtrOutput)
}

// Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the frontend of the load balancing rule.
func (o LoadBalancingRuleResponseOutput) DisableOutboundSnat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *bool { return v.DisableOutboundSnat }).(pulumi.BoolPtrOutput)
}

// Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL AlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server. This setting can't be changed after you create the endpoint.
func (o LoadBalancingRuleResponseOutput) EnableFloatingIP() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *bool { return v.EnableFloatingIP }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LoadBalancingRuleResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// A reference to frontend IP addresses.
func (o LoadBalancingRuleResponseOutput) FrontendIPConfiguration() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *SubResourceResponse { return v.FrontendIPConfiguration }).(SubResourceResponsePtrOutput)
}

// The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 0 and 65534. Note that value 0 enables "Any Port"
func (o LoadBalancingRuleResponseOutput) FrontendPort() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) int { return v.FrontendPort }).(pulumi.IntOutput)
}

// Resource ID.
func (o LoadBalancingRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The default value is 4 minutes. This element is only used when the protocol is set to TCP.
func (o LoadBalancingRuleResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The load distribution policy for this rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
func (o LoadBalancingRuleResponseOutput) LoadDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *string { return v.LoadDistribution }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o LoadBalancingRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference of the load balancer probe used by the load balancing rule.
func (o LoadBalancingRuleResponseOutput) Probe() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *SubResourceResponse { return v.Probe }).(SubResourceResponsePtrOutput)
}

// The transport protocol for the endpoint. Possible values are 'Udp' or 'Tcp' or 'All'.
func (o LoadBalancingRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o LoadBalancingRuleResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancingRuleResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type LoadBalancingRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancingRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancingRuleResponse)(nil)).Elem()
}

func (o LoadBalancingRuleResponseArrayOutput) ToLoadBalancingRuleResponseArrayOutput() LoadBalancingRuleResponseArrayOutput {
	return o
}

func (o LoadBalancingRuleResponseArrayOutput) ToLoadBalancingRuleResponseArrayOutputWithContext(ctx context.Context) LoadBalancingRuleResponseArrayOutput {
	return o
}

func (o LoadBalancingRuleResponseArrayOutput) Index(i pulumi.IntInput) LoadBalancingRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancingRuleResponse {
		return vs[0].([]LoadBalancingRuleResponse)[vs[1].(int)]
	}).(LoadBalancingRuleResponseOutput)
}

// A common class for general resource information
type LocalNetworkGatewayType struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings *BgpSettings `pulumi:"bgpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// IP address of local network gateway.
	GatewayIpAddress *string `pulumi:"gatewayIpAddress"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Local network site address space.
	LocalNetworkAddressSpace *AddressSpace `pulumi:"localNetworkAddressSpace"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The resource GUID property of the LocalNetworkGateway resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// LocalNetworkGatewayTypeInput is an input type that accepts LocalNetworkGatewayTypeArgs and LocalNetworkGatewayTypeOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayTypeInput` via:
//
//          LocalNetworkGatewayTypeArgs{...}
type LocalNetworkGatewayTypeInput interface {
	pulumi.Input

	ToLocalNetworkGatewayTypeOutput() LocalNetworkGatewayTypeOutput
	ToLocalNetworkGatewayTypeOutputWithContext(context.Context) LocalNetworkGatewayTypeOutput
}

// A common class for general resource information
type LocalNetworkGatewayTypeArgs struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings BgpSettingsPtrInput `pulumi:"bgpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// IP address of local network gateway.
	GatewayIpAddress pulumi.StringPtrInput `pulumi:"gatewayIpAddress"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Local network site address space.
	LocalNetworkAddressSpace AddressSpacePtrInput `pulumi:"localNetworkAddressSpace"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The resource GUID property of the LocalNetworkGateway resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LocalNetworkGatewayTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayType)(nil)).Elem()
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypeOutput() LocalNetworkGatewayTypeOutput {
	return i.ToLocalNetworkGatewayTypeOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypeOutputWithContext(ctx context.Context) LocalNetworkGatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayTypeOutput)
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return i.ToLocalNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayTypeArgs) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayTypeOutput).ToLocalNetworkGatewayTypePtrOutputWithContext(ctx)
}

// LocalNetworkGatewayTypePtrInput is an input type that accepts LocalNetworkGatewayTypeArgs, LocalNetworkGatewayTypePtr and LocalNetworkGatewayTypePtrOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayTypePtrInput` via:
//
//          LocalNetworkGatewayTypeArgs{...}
//
//  or:
//
//          nil
type LocalNetworkGatewayTypePtrInput interface {
	pulumi.Input

	ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput
	ToLocalNetworkGatewayTypePtrOutputWithContext(context.Context) LocalNetworkGatewayTypePtrOutput
}

type localNetworkGatewayTypePtrType LocalNetworkGatewayTypeArgs

func LocalNetworkGatewayTypePtr(v *LocalNetworkGatewayTypeArgs) LocalNetworkGatewayTypePtrInput {
	return (*localNetworkGatewayTypePtrType)(v)
}

func (*localNetworkGatewayTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayType)(nil)).Elem()
}

func (i *localNetworkGatewayTypePtrType) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return i.ToLocalNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i *localNetworkGatewayTypePtrType) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayTypePtrOutput)
}

// A common class for general resource information
type LocalNetworkGatewayTypeOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayType)(nil)).Elem()
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypeOutput() LocalNetworkGatewayTypeOutput {
	return o
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypeOutputWithContext(ctx context.Context) LocalNetworkGatewayTypeOutput {
	return o
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return o.ToLocalNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (o LocalNetworkGatewayTypeOutput) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *LocalNetworkGatewayType {
		return &v
	}).(LocalNetworkGatewayTypePtrOutput)
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayTypeOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *BgpSettings { return v.BgpSettings }).(BgpSettingsPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LocalNetworkGatewayTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayTypeOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.GatewayIpAddress }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o LocalNetworkGatewayTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayTypeOutput) LocalNetworkAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *AddressSpace { return v.LocalNetworkAddressSpace }).(AddressSpacePtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the LocalNetworkGateway resource.
func (o LocalNetworkGatewayTypeOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o LocalNetworkGatewayTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LocalNetworkGatewayType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type LocalNetworkGatewayTypePtrOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayType)(nil)).Elem()
}

func (o LocalNetworkGatewayTypePtrOutput) ToLocalNetworkGatewayTypePtrOutput() LocalNetworkGatewayTypePtrOutput {
	return o
}

func (o LocalNetworkGatewayTypePtrOutput) ToLocalNetworkGatewayTypePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayTypePtrOutput {
	return o
}

func (o LocalNetworkGatewayTypePtrOutput) Elem() LocalNetworkGatewayTypeOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) LocalNetworkGatewayType { return *v }).(LocalNetworkGatewayTypeOutput)
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayTypePtrOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *BgpSettings {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LocalNetworkGatewayTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayTypePtrOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.GatewayIpAddress
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o LocalNetworkGatewayTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayTypePtrOutput) LocalNetworkAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *AddressSpace {
		if v == nil {
			return nil
		}
		return v.LocalNetworkAddressSpace
	}).(AddressSpacePtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the LocalNetworkGateway resource.
func (o LocalNetworkGatewayTypePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o LocalNetworkGatewayTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// A common class for general resource information
type LocalNetworkGatewayResponse struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings *BgpSettingsResponse `pulumi:"bgpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// IP address of local network gateway.
	GatewayIpAddress *string `pulumi:"gatewayIpAddress"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Local network site address space.
	LocalNetworkAddressSpace *AddressSpaceResponse `pulumi:"localNetworkAddressSpace"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the LocalNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the LocalNetworkGateway resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// LocalNetworkGatewayResponseInput is an input type that accepts LocalNetworkGatewayResponseArgs and LocalNetworkGatewayResponseOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayResponseInput` via:
//
//          LocalNetworkGatewayResponseArgs{...}
type LocalNetworkGatewayResponseInput interface {
	pulumi.Input

	ToLocalNetworkGatewayResponseOutput() LocalNetworkGatewayResponseOutput
	ToLocalNetworkGatewayResponseOutputWithContext(context.Context) LocalNetworkGatewayResponseOutput
}

// A common class for general resource information
type LocalNetworkGatewayResponseArgs struct {
	// Local network gateway's BGP speaker settings.
	BgpSettings BgpSettingsResponsePtrInput `pulumi:"bgpSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// IP address of local network gateway.
	GatewayIpAddress pulumi.StringPtrInput `pulumi:"gatewayIpAddress"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Local network site address space.
	LocalNetworkAddressSpace AddressSpaceResponsePtrInput `pulumi:"localNetworkAddressSpace"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the LocalNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resource GUID property of the LocalNetworkGateway resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LocalNetworkGatewayResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayResponse)(nil)).Elem()
}

func (i LocalNetworkGatewayResponseArgs) ToLocalNetworkGatewayResponseOutput() LocalNetworkGatewayResponseOutput {
	return i.ToLocalNetworkGatewayResponseOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayResponseArgs) ToLocalNetworkGatewayResponseOutputWithContext(ctx context.Context) LocalNetworkGatewayResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayResponseOutput)
}

func (i LocalNetworkGatewayResponseArgs) ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput {
	return i.ToLocalNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (i LocalNetworkGatewayResponseArgs) ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayResponseOutput).ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx)
}

// LocalNetworkGatewayResponsePtrInput is an input type that accepts LocalNetworkGatewayResponseArgs, LocalNetworkGatewayResponsePtr and LocalNetworkGatewayResponsePtrOutput values.
// You can construct a concrete instance of `LocalNetworkGatewayResponsePtrInput` via:
//
//          LocalNetworkGatewayResponseArgs{...}
//
//  or:
//
//          nil
type LocalNetworkGatewayResponsePtrInput interface {
	pulumi.Input

	ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput
	ToLocalNetworkGatewayResponsePtrOutputWithContext(context.Context) LocalNetworkGatewayResponsePtrOutput
}

type localNetworkGatewayResponsePtrType LocalNetworkGatewayResponseArgs

func LocalNetworkGatewayResponsePtr(v *LocalNetworkGatewayResponseArgs) LocalNetworkGatewayResponsePtrInput {
	return (*localNetworkGatewayResponsePtrType)(v)
}

func (*localNetworkGatewayResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayResponse)(nil)).Elem()
}

func (i *localNetworkGatewayResponsePtrType) ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput {
	return i.ToLocalNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (i *localNetworkGatewayResponsePtrType) ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalNetworkGatewayResponsePtrOutput)
}

// A common class for general resource information
type LocalNetworkGatewayResponseOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalNetworkGatewayResponse)(nil)).Elem()
}

func (o LocalNetworkGatewayResponseOutput) ToLocalNetworkGatewayResponseOutput() LocalNetworkGatewayResponseOutput {
	return o
}

func (o LocalNetworkGatewayResponseOutput) ToLocalNetworkGatewayResponseOutputWithContext(ctx context.Context) LocalNetworkGatewayResponseOutput {
	return o
}

func (o LocalNetworkGatewayResponseOutput) ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput {
	return o.ToLocalNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (o LocalNetworkGatewayResponseOutput) ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayResponsePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *LocalNetworkGatewayResponse {
		return &v
	}).(LocalNetworkGatewayResponsePtrOutput)
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayResponseOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *BgpSettingsResponse { return v.BgpSettings }).(BgpSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LocalNetworkGatewayResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayResponseOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.GatewayIpAddress }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o LocalNetworkGatewayResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayResponseOutput) LocalNetworkAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *AddressSpaceResponse { return v.LocalNetworkAddressSpace }).(AddressSpaceResponsePtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LocalNetworkGatewayResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the LocalNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o LocalNetworkGatewayResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the LocalNetworkGateway resource.
func (o LocalNetworkGatewayResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o LocalNetworkGatewayResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o LocalNetworkGatewayResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LocalNetworkGatewayResponse) string { return v.Type }).(pulumi.StringOutput)
}

type LocalNetworkGatewayResponsePtrOutput struct{ *pulumi.OutputState }

func (LocalNetworkGatewayResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalNetworkGatewayResponse)(nil)).Elem()
}

func (o LocalNetworkGatewayResponsePtrOutput) ToLocalNetworkGatewayResponsePtrOutput() LocalNetworkGatewayResponsePtrOutput {
	return o
}

func (o LocalNetworkGatewayResponsePtrOutput) ToLocalNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) LocalNetworkGatewayResponsePtrOutput {
	return o
}

func (o LocalNetworkGatewayResponsePtrOutput) Elem() LocalNetworkGatewayResponseOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) LocalNetworkGatewayResponse { return *v }).(LocalNetworkGatewayResponseOutput)
}

// Local network gateway's BGP speaker settings.
func (o LocalNetworkGatewayResponsePtrOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *BgpSettingsResponse {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o LocalNetworkGatewayResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// IP address of local network gateway.
func (o LocalNetworkGatewayResponsePtrOutput) GatewayIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.GatewayIpAddress
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o LocalNetworkGatewayResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Local network site address space.
func (o LocalNetworkGatewayResponsePtrOutput) LocalNetworkAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *AddressSpaceResponse {
		if v == nil {
			return nil
		}
		return v.LocalNetworkAddressSpace
	}).(AddressSpaceResponsePtrOutput)
}

// Resource location.
func (o LocalNetworkGatewayResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o LocalNetworkGatewayResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the LocalNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o LocalNetworkGatewayResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the LocalNetworkGateway resource.
func (o LocalNetworkGatewayResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o LocalNetworkGatewayResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o LocalNetworkGatewayResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Class containing endpoint monitoring settings in a Traffic Manager profile.
type MonitorConfig struct {
	// List of custom headers.
	CustomHeaders []MonitorConfigCustomHeaders `pulumi:"customHeaders"`
	// List of expected status code ranges.
	ExpectedStatusCodeRanges []MonitorConfigExpectedStatusCodeRanges `pulumi:"expectedStatusCodeRanges"`
	// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// The path relative to the endpoint domain name used to probe for endpoint health.
	Path *string `pulumi:"path"`
	// The TCP port used to probe for endpoint health.
	Port *int `pulumi:"port"`
	// The profile-level monitoring status of the Traffic Manager profile.
	ProfileMonitorStatus *string `pulumi:"profileMonitorStatus"`
	// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
	Protocol *string `pulumi:"protocol"`
	// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
	TimeoutInSeconds *int `pulumi:"timeoutInSeconds"`
	// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
	ToleratedNumberOfFailures *int `pulumi:"toleratedNumberOfFailures"`
}

// MonitorConfigInput is an input type that accepts MonitorConfigArgs and MonitorConfigOutput values.
// You can construct a concrete instance of `MonitorConfigInput` via:
//
//          MonitorConfigArgs{...}
type MonitorConfigInput interface {
	pulumi.Input

	ToMonitorConfigOutput() MonitorConfigOutput
	ToMonitorConfigOutputWithContext(context.Context) MonitorConfigOutput
}

// Class containing endpoint monitoring settings in a Traffic Manager profile.
type MonitorConfigArgs struct {
	// List of custom headers.
	CustomHeaders MonitorConfigCustomHeadersArrayInput `pulumi:"customHeaders"`
	// List of expected status code ranges.
	ExpectedStatusCodeRanges MonitorConfigExpectedStatusCodeRangesArrayInput `pulumi:"expectedStatusCodeRanges"`
	// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// The path relative to the endpoint domain name used to probe for endpoint health.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The TCP port used to probe for endpoint health.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The profile-level monitoring status of the Traffic Manager profile.
	ProfileMonitorStatus pulumi.StringPtrInput `pulumi:"profileMonitorStatus"`
	// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
	TimeoutInSeconds pulumi.IntPtrInput `pulumi:"timeoutInSeconds"`
	// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
	ToleratedNumberOfFailures pulumi.IntPtrInput `pulumi:"toleratedNumberOfFailures"`
}

func (MonitorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfig)(nil)).Elem()
}

func (i MonitorConfigArgs) ToMonitorConfigOutput() MonitorConfigOutput {
	return i.ToMonitorConfigOutputWithContext(context.Background())
}

func (i MonitorConfigArgs) ToMonitorConfigOutputWithContext(ctx context.Context) MonitorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigOutput)
}

func (i MonitorConfigArgs) ToMonitorConfigPtrOutput() MonitorConfigPtrOutput {
	return i.ToMonitorConfigPtrOutputWithContext(context.Background())
}

func (i MonitorConfigArgs) ToMonitorConfigPtrOutputWithContext(ctx context.Context) MonitorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigOutput).ToMonitorConfigPtrOutputWithContext(ctx)
}

// MonitorConfigPtrInput is an input type that accepts MonitorConfigArgs, MonitorConfigPtr and MonitorConfigPtrOutput values.
// You can construct a concrete instance of `MonitorConfigPtrInput` via:
//
//          MonitorConfigArgs{...}
//
//  or:
//
//          nil
type MonitorConfigPtrInput interface {
	pulumi.Input

	ToMonitorConfigPtrOutput() MonitorConfigPtrOutput
	ToMonitorConfigPtrOutputWithContext(context.Context) MonitorConfigPtrOutput
}

type monitorConfigPtrType MonitorConfigArgs

func MonitorConfigPtr(v *MonitorConfigArgs) MonitorConfigPtrInput {
	return (*monitorConfigPtrType)(v)
}

func (*monitorConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorConfig)(nil)).Elem()
}

func (i *monitorConfigPtrType) ToMonitorConfigPtrOutput() MonitorConfigPtrOutput {
	return i.ToMonitorConfigPtrOutputWithContext(context.Background())
}

func (i *monitorConfigPtrType) ToMonitorConfigPtrOutputWithContext(ctx context.Context) MonitorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigPtrOutput)
}

// Class containing endpoint monitoring settings in a Traffic Manager profile.
type MonitorConfigOutput struct{ *pulumi.OutputState }

func (MonitorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfig)(nil)).Elem()
}

func (o MonitorConfigOutput) ToMonitorConfigOutput() MonitorConfigOutput {
	return o
}

func (o MonitorConfigOutput) ToMonitorConfigOutputWithContext(ctx context.Context) MonitorConfigOutput {
	return o
}

func (o MonitorConfigOutput) ToMonitorConfigPtrOutput() MonitorConfigPtrOutput {
	return o.ToMonitorConfigPtrOutputWithContext(context.Background())
}

func (o MonitorConfigOutput) ToMonitorConfigPtrOutputWithContext(ctx context.Context) MonitorConfigPtrOutput {
	return o.ApplyT(func(v MonitorConfig) *MonitorConfig {
		return &v
	}).(MonitorConfigPtrOutput)
}

// List of custom headers.
func (o MonitorConfigOutput) CustomHeaders() MonitorConfigCustomHeadersArrayOutput {
	return o.ApplyT(func(v MonitorConfig) []MonitorConfigCustomHeaders { return v.CustomHeaders }).(MonitorConfigCustomHeadersArrayOutput)
}

// List of expected status code ranges.
func (o MonitorConfigOutput) ExpectedStatusCodeRanges() MonitorConfigExpectedStatusCodeRangesArrayOutput {
	return o.ApplyT(func(v MonitorConfig) []MonitorConfigExpectedStatusCodeRanges { return v.ExpectedStatusCodeRanges }).(MonitorConfigExpectedStatusCodeRangesArrayOutput)
}

// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
func (o MonitorConfigOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfig) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The path relative to the endpoint domain name used to probe for endpoint health.
func (o MonitorConfigOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfig) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The TCP port used to probe for endpoint health.
func (o MonitorConfigOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfig) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The profile-level monitoring status of the Traffic Manager profile.
func (o MonitorConfigOutput) ProfileMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfig) *string { return v.ProfileMonitorStatus }).(pulumi.StringPtrOutput)
}

// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
func (o MonitorConfigOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfig) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
func (o MonitorConfigOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfig) *int { return v.TimeoutInSeconds }).(pulumi.IntPtrOutput)
}

// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
func (o MonitorConfigOutput) ToleratedNumberOfFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfig) *int { return v.ToleratedNumberOfFailures }).(pulumi.IntPtrOutput)
}

type MonitorConfigPtrOutput struct{ *pulumi.OutputState }

func (MonitorConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorConfig)(nil)).Elem()
}

func (o MonitorConfigPtrOutput) ToMonitorConfigPtrOutput() MonitorConfigPtrOutput {
	return o
}

func (o MonitorConfigPtrOutput) ToMonitorConfigPtrOutputWithContext(ctx context.Context) MonitorConfigPtrOutput {
	return o
}

func (o MonitorConfigPtrOutput) Elem() MonitorConfigOutput {
	return o.ApplyT(func(v *MonitorConfig) MonitorConfig { return *v }).(MonitorConfigOutput)
}

// List of custom headers.
func (o MonitorConfigPtrOutput) CustomHeaders() MonitorConfigCustomHeadersArrayOutput {
	return o.ApplyT(func(v *MonitorConfig) []MonitorConfigCustomHeaders {
		if v == nil {
			return nil
		}
		return v.CustomHeaders
	}).(MonitorConfigCustomHeadersArrayOutput)
}

// List of expected status code ranges.
func (o MonitorConfigPtrOutput) ExpectedStatusCodeRanges() MonitorConfigExpectedStatusCodeRangesArrayOutput {
	return o.ApplyT(func(v *MonitorConfig) []MonitorConfigExpectedStatusCodeRanges {
		if v == nil {
			return nil
		}
		return v.ExpectedStatusCodeRanges
	}).(MonitorConfigExpectedStatusCodeRangesArrayOutput)
}

// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
func (o MonitorConfigPtrOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The path relative to the endpoint domain name used to probe for endpoint health.
func (o MonitorConfigPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The TCP port used to probe for endpoint health.
func (o MonitorConfigPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The profile-level monitoring status of the Traffic Manager profile.
func (o MonitorConfigPtrOutput) ProfileMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *string {
		if v == nil {
			return nil
		}
		return v.ProfileMonitorStatus
	}).(pulumi.StringPtrOutput)
}

// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
func (o MonitorConfigPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
func (o MonitorConfigPtrOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
func (o MonitorConfigPtrOutput) ToleratedNumberOfFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorConfig) *int {
		if v == nil {
			return nil
		}
		return v.ToleratedNumberOfFailures
	}).(pulumi.IntPtrOutput)
}

// Custom header name and value.
type MonitorConfigCustomHeaders struct {
	// Header name.
	Name *string `pulumi:"name"`
	// Header value.
	Value *string `pulumi:"value"`
}

// MonitorConfigCustomHeadersInput is an input type that accepts MonitorConfigCustomHeadersArgs and MonitorConfigCustomHeadersOutput values.
// You can construct a concrete instance of `MonitorConfigCustomHeadersInput` via:
//
//          MonitorConfigCustomHeadersArgs{...}
type MonitorConfigCustomHeadersInput interface {
	pulumi.Input

	ToMonitorConfigCustomHeadersOutput() MonitorConfigCustomHeadersOutput
	ToMonitorConfigCustomHeadersOutputWithContext(context.Context) MonitorConfigCustomHeadersOutput
}

// Custom header name and value.
type MonitorConfigCustomHeadersArgs struct {
	// Header name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Header value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (MonitorConfigCustomHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigCustomHeaders)(nil)).Elem()
}

func (i MonitorConfigCustomHeadersArgs) ToMonitorConfigCustomHeadersOutput() MonitorConfigCustomHeadersOutput {
	return i.ToMonitorConfigCustomHeadersOutputWithContext(context.Background())
}

func (i MonitorConfigCustomHeadersArgs) ToMonitorConfigCustomHeadersOutputWithContext(ctx context.Context) MonitorConfigCustomHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigCustomHeadersOutput)
}

// MonitorConfigCustomHeadersArrayInput is an input type that accepts MonitorConfigCustomHeadersArray and MonitorConfigCustomHeadersArrayOutput values.
// You can construct a concrete instance of `MonitorConfigCustomHeadersArrayInput` via:
//
//          MonitorConfigCustomHeadersArray{ MonitorConfigCustomHeadersArgs{...} }
type MonitorConfigCustomHeadersArrayInput interface {
	pulumi.Input

	ToMonitorConfigCustomHeadersArrayOutput() MonitorConfigCustomHeadersArrayOutput
	ToMonitorConfigCustomHeadersArrayOutputWithContext(context.Context) MonitorConfigCustomHeadersArrayOutput
}

type MonitorConfigCustomHeadersArray []MonitorConfigCustomHeadersInput

func (MonitorConfigCustomHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigCustomHeaders)(nil)).Elem()
}

func (i MonitorConfigCustomHeadersArray) ToMonitorConfigCustomHeadersArrayOutput() MonitorConfigCustomHeadersArrayOutput {
	return i.ToMonitorConfigCustomHeadersArrayOutputWithContext(context.Background())
}

func (i MonitorConfigCustomHeadersArray) ToMonitorConfigCustomHeadersArrayOutputWithContext(ctx context.Context) MonitorConfigCustomHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigCustomHeadersArrayOutput)
}

// Custom header name and value.
type MonitorConfigCustomHeadersOutput struct{ *pulumi.OutputState }

func (MonitorConfigCustomHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigCustomHeaders)(nil)).Elem()
}

func (o MonitorConfigCustomHeadersOutput) ToMonitorConfigCustomHeadersOutput() MonitorConfigCustomHeadersOutput {
	return o
}

func (o MonitorConfigCustomHeadersOutput) ToMonitorConfigCustomHeadersOutputWithContext(ctx context.Context) MonitorConfigCustomHeadersOutput {
	return o
}

// Header name.
func (o MonitorConfigCustomHeadersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigCustomHeaders) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Header value.
func (o MonitorConfigCustomHeadersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigCustomHeaders) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type MonitorConfigCustomHeadersArrayOutput struct{ *pulumi.OutputState }

func (MonitorConfigCustomHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigCustomHeaders)(nil)).Elem()
}

func (o MonitorConfigCustomHeadersArrayOutput) ToMonitorConfigCustomHeadersArrayOutput() MonitorConfigCustomHeadersArrayOutput {
	return o
}

func (o MonitorConfigCustomHeadersArrayOutput) ToMonitorConfigCustomHeadersArrayOutputWithContext(ctx context.Context) MonitorConfigCustomHeadersArrayOutput {
	return o
}

func (o MonitorConfigCustomHeadersArrayOutput) Index(i pulumi.IntInput) MonitorConfigCustomHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorConfigCustomHeaders {
		return vs[0].([]MonitorConfigCustomHeaders)[vs[1].(int)]
	}).(MonitorConfigCustomHeadersOutput)
}

// Min and max value of a status code range.
type MonitorConfigExpectedStatusCodeRanges struct {
	// Max status code.
	Max *int `pulumi:"max"`
	// Min status code.
	Min *int `pulumi:"min"`
}

// MonitorConfigExpectedStatusCodeRangesInput is an input type that accepts MonitorConfigExpectedStatusCodeRangesArgs and MonitorConfigExpectedStatusCodeRangesOutput values.
// You can construct a concrete instance of `MonitorConfigExpectedStatusCodeRangesInput` via:
//
//          MonitorConfigExpectedStatusCodeRangesArgs{...}
type MonitorConfigExpectedStatusCodeRangesInput interface {
	pulumi.Input

	ToMonitorConfigExpectedStatusCodeRangesOutput() MonitorConfigExpectedStatusCodeRangesOutput
	ToMonitorConfigExpectedStatusCodeRangesOutputWithContext(context.Context) MonitorConfigExpectedStatusCodeRangesOutput
}

// Min and max value of a status code range.
type MonitorConfigExpectedStatusCodeRangesArgs struct {
	// Max status code.
	Max pulumi.IntPtrInput `pulumi:"max"`
	// Min status code.
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (MonitorConfigExpectedStatusCodeRangesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigExpectedStatusCodeRanges)(nil)).Elem()
}

func (i MonitorConfigExpectedStatusCodeRangesArgs) ToMonitorConfigExpectedStatusCodeRangesOutput() MonitorConfigExpectedStatusCodeRangesOutput {
	return i.ToMonitorConfigExpectedStatusCodeRangesOutputWithContext(context.Background())
}

func (i MonitorConfigExpectedStatusCodeRangesArgs) ToMonitorConfigExpectedStatusCodeRangesOutputWithContext(ctx context.Context) MonitorConfigExpectedStatusCodeRangesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigExpectedStatusCodeRangesOutput)
}

// MonitorConfigExpectedStatusCodeRangesArrayInput is an input type that accepts MonitorConfigExpectedStatusCodeRangesArray and MonitorConfigExpectedStatusCodeRangesArrayOutput values.
// You can construct a concrete instance of `MonitorConfigExpectedStatusCodeRangesArrayInput` via:
//
//          MonitorConfigExpectedStatusCodeRangesArray{ MonitorConfigExpectedStatusCodeRangesArgs{...} }
type MonitorConfigExpectedStatusCodeRangesArrayInput interface {
	pulumi.Input

	ToMonitorConfigExpectedStatusCodeRangesArrayOutput() MonitorConfigExpectedStatusCodeRangesArrayOutput
	ToMonitorConfigExpectedStatusCodeRangesArrayOutputWithContext(context.Context) MonitorConfigExpectedStatusCodeRangesArrayOutput
}

type MonitorConfigExpectedStatusCodeRangesArray []MonitorConfigExpectedStatusCodeRangesInput

func (MonitorConfigExpectedStatusCodeRangesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigExpectedStatusCodeRanges)(nil)).Elem()
}

func (i MonitorConfigExpectedStatusCodeRangesArray) ToMonitorConfigExpectedStatusCodeRangesArrayOutput() MonitorConfigExpectedStatusCodeRangesArrayOutput {
	return i.ToMonitorConfigExpectedStatusCodeRangesArrayOutputWithContext(context.Background())
}

func (i MonitorConfigExpectedStatusCodeRangesArray) ToMonitorConfigExpectedStatusCodeRangesArrayOutputWithContext(ctx context.Context) MonitorConfigExpectedStatusCodeRangesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigExpectedStatusCodeRangesArrayOutput)
}

// Min and max value of a status code range.
type MonitorConfigExpectedStatusCodeRangesOutput struct{ *pulumi.OutputState }

func (MonitorConfigExpectedStatusCodeRangesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigExpectedStatusCodeRanges)(nil)).Elem()
}

func (o MonitorConfigExpectedStatusCodeRangesOutput) ToMonitorConfigExpectedStatusCodeRangesOutput() MonitorConfigExpectedStatusCodeRangesOutput {
	return o
}

func (o MonitorConfigExpectedStatusCodeRangesOutput) ToMonitorConfigExpectedStatusCodeRangesOutputWithContext(ctx context.Context) MonitorConfigExpectedStatusCodeRangesOutput {
	return o
}

// Max status code.
func (o MonitorConfigExpectedStatusCodeRangesOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigExpectedStatusCodeRanges) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// Min status code.
func (o MonitorConfigExpectedStatusCodeRangesOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigExpectedStatusCodeRanges) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type MonitorConfigExpectedStatusCodeRangesArrayOutput struct{ *pulumi.OutputState }

func (MonitorConfigExpectedStatusCodeRangesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigExpectedStatusCodeRanges)(nil)).Elem()
}

func (o MonitorConfigExpectedStatusCodeRangesArrayOutput) ToMonitorConfigExpectedStatusCodeRangesArrayOutput() MonitorConfigExpectedStatusCodeRangesArrayOutput {
	return o
}

func (o MonitorConfigExpectedStatusCodeRangesArrayOutput) ToMonitorConfigExpectedStatusCodeRangesArrayOutputWithContext(ctx context.Context) MonitorConfigExpectedStatusCodeRangesArrayOutput {
	return o
}

func (o MonitorConfigExpectedStatusCodeRangesArrayOutput) Index(i pulumi.IntInput) MonitorConfigExpectedStatusCodeRangesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorConfigExpectedStatusCodeRanges {
		return vs[0].([]MonitorConfigExpectedStatusCodeRanges)[vs[1].(int)]
	}).(MonitorConfigExpectedStatusCodeRangesOutput)
}

// Class containing endpoint monitoring settings in a Traffic Manager profile.
type MonitorConfigResponse struct {
	// List of custom headers.
	CustomHeaders []MonitorConfigResponseCustomHeaders `pulumi:"customHeaders"`
	// List of expected status code ranges.
	ExpectedStatusCodeRanges []MonitorConfigResponseExpectedStatusCodeRanges `pulumi:"expectedStatusCodeRanges"`
	// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// The path relative to the endpoint domain name used to probe for endpoint health.
	Path *string `pulumi:"path"`
	// The TCP port used to probe for endpoint health.
	Port *int `pulumi:"port"`
	// The profile-level monitoring status of the Traffic Manager profile.
	ProfileMonitorStatus *string `pulumi:"profileMonitorStatus"`
	// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
	Protocol *string `pulumi:"protocol"`
	// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
	TimeoutInSeconds *int `pulumi:"timeoutInSeconds"`
	// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
	ToleratedNumberOfFailures *int `pulumi:"toleratedNumberOfFailures"`
}

// MonitorConfigResponseInput is an input type that accepts MonitorConfigResponseArgs and MonitorConfigResponseOutput values.
// You can construct a concrete instance of `MonitorConfigResponseInput` via:
//
//          MonitorConfigResponseArgs{...}
type MonitorConfigResponseInput interface {
	pulumi.Input

	ToMonitorConfigResponseOutput() MonitorConfigResponseOutput
	ToMonitorConfigResponseOutputWithContext(context.Context) MonitorConfigResponseOutput
}

// Class containing endpoint monitoring settings in a Traffic Manager profile.
type MonitorConfigResponseArgs struct {
	// List of custom headers.
	CustomHeaders MonitorConfigResponseCustomHeadersArrayInput `pulumi:"customHeaders"`
	// List of expected status code ranges.
	ExpectedStatusCodeRanges MonitorConfigResponseExpectedStatusCodeRangesArrayInput `pulumi:"expectedStatusCodeRanges"`
	// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// The path relative to the endpoint domain name used to probe for endpoint health.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The TCP port used to probe for endpoint health.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// The profile-level monitoring status of the Traffic Manager profile.
	ProfileMonitorStatus pulumi.StringPtrInput `pulumi:"profileMonitorStatus"`
	// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
	TimeoutInSeconds pulumi.IntPtrInput `pulumi:"timeoutInSeconds"`
	// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
	ToleratedNumberOfFailures pulumi.IntPtrInput `pulumi:"toleratedNumberOfFailures"`
}

func (MonitorConfigResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigResponse)(nil)).Elem()
}

func (i MonitorConfigResponseArgs) ToMonitorConfigResponseOutput() MonitorConfigResponseOutput {
	return i.ToMonitorConfigResponseOutputWithContext(context.Background())
}

func (i MonitorConfigResponseArgs) ToMonitorConfigResponseOutputWithContext(ctx context.Context) MonitorConfigResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigResponseOutput)
}

func (i MonitorConfigResponseArgs) ToMonitorConfigResponsePtrOutput() MonitorConfigResponsePtrOutput {
	return i.ToMonitorConfigResponsePtrOutputWithContext(context.Background())
}

func (i MonitorConfigResponseArgs) ToMonitorConfigResponsePtrOutputWithContext(ctx context.Context) MonitorConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigResponseOutput).ToMonitorConfigResponsePtrOutputWithContext(ctx)
}

// MonitorConfigResponsePtrInput is an input type that accepts MonitorConfigResponseArgs, MonitorConfigResponsePtr and MonitorConfigResponsePtrOutput values.
// You can construct a concrete instance of `MonitorConfigResponsePtrInput` via:
//
//          MonitorConfigResponseArgs{...}
//
//  or:
//
//          nil
type MonitorConfigResponsePtrInput interface {
	pulumi.Input

	ToMonitorConfigResponsePtrOutput() MonitorConfigResponsePtrOutput
	ToMonitorConfigResponsePtrOutputWithContext(context.Context) MonitorConfigResponsePtrOutput
}

type monitorConfigResponsePtrType MonitorConfigResponseArgs

func MonitorConfigResponsePtr(v *MonitorConfigResponseArgs) MonitorConfigResponsePtrInput {
	return (*monitorConfigResponsePtrType)(v)
}

func (*monitorConfigResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorConfigResponse)(nil)).Elem()
}

func (i *monitorConfigResponsePtrType) ToMonitorConfigResponsePtrOutput() MonitorConfigResponsePtrOutput {
	return i.ToMonitorConfigResponsePtrOutputWithContext(context.Background())
}

func (i *monitorConfigResponsePtrType) ToMonitorConfigResponsePtrOutputWithContext(ctx context.Context) MonitorConfigResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigResponsePtrOutput)
}

// Class containing endpoint monitoring settings in a Traffic Manager profile.
type MonitorConfigResponseOutput struct{ *pulumi.OutputState }

func (MonitorConfigResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigResponse)(nil)).Elem()
}

func (o MonitorConfigResponseOutput) ToMonitorConfigResponseOutput() MonitorConfigResponseOutput {
	return o
}

func (o MonitorConfigResponseOutput) ToMonitorConfigResponseOutputWithContext(ctx context.Context) MonitorConfigResponseOutput {
	return o
}

func (o MonitorConfigResponseOutput) ToMonitorConfigResponsePtrOutput() MonitorConfigResponsePtrOutput {
	return o.ToMonitorConfigResponsePtrOutputWithContext(context.Background())
}

func (o MonitorConfigResponseOutput) ToMonitorConfigResponsePtrOutputWithContext(ctx context.Context) MonitorConfigResponsePtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *MonitorConfigResponse {
		return &v
	}).(MonitorConfigResponsePtrOutput)
}

// List of custom headers.
func (o MonitorConfigResponseOutput) CustomHeaders() MonitorConfigResponseCustomHeadersArrayOutput {
	return o.ApplyT(func(v MonitorConfigResponse) []MonitorConfigResponseCustomHeaders { return v.CustomHeaders }).(MonitorConfigResponseCustomHeadersArrayOutput)
}

// List of expected status code ranges.
func (o MonitorConfigResponseOutput) ExpectedStatusCodeRanges() MonitorConfigResponseExpectedStatusCodeRangesArrayOutput {
	return o.ApplyT(func(v MonitorConfigResponse) []MonitorConfigResponseExpectedStatusCodeRanges {
		return v.ExpectedStatusCodeRanges
	}).(MonitorConfigResponseExpectedStatusCodeRangesArrayOutput)
}

// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
func (o MonitorConfigResponseOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The path relative to the endpoint domain name used to probe for endpoint health.
func (o MonitorConfigResponseOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The TCP port used to probe for endpoint health.
func (o MonitorConfigResponseOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The profile-level monitoring status of the Traffic Manager profile.
func (o MonitorConfigResponseOutput) ProfileMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *string { return v.ProfileMonitorStatus }).(pulumi.StringPtrOutput)
}

// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
func (o MonitorConfigResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
func (o MonitorConfigResponseOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *int { return v.TimeoutInSeconds }).(pulumi.IntPtrOutput)
}

// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
func (o MonitorConfigResponseOutput) ToleratedNumberOfFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponse) *int { return v.ToleratedNumberOfFailures }).(pulumi.IntPtrOutput)
}

type MonitorConfigResponsePtrOutput struct{ *pulumi.OutputState }

func (MonitorConfigResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorConfigResponse)(nil)).Elem()
}

func (o MonitorConfigResponsePtrOutput) ToMonitorConfigResponsePtrOutput() MonitorConfigResponsePtrOutput {
	return o
}

func (o MonitorConfigResponsePtrOutput) ToMonitorConfigResponsePtrOutputWithContext(ctx context.Context) MonitorConfigResponsePtrOutput {
	return o
}

func (o MonitorConfigResponsePtrOutput) Elem() MonitorConfigResponseOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) MonitorConfigResponse { return *v }).(MonitorConfigResponseOutput)
}

// List of custom headers.
func (o MonitorConfigResponsePtrOutput) CustomHeaders() MonitorConfigResponseCustomHeadersArrayOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) []MonitorConfigResponseCustomHeaders {
		if v == nil {
			return nil
		}
		return v.CustomHeaders
	}).(MonitorConfigResponseCustomHeadersArrayOutput)
}

// List of expected status code ranges.
func (o MonitorConfigResponsePtrOutput) ExpectedStatusCodeRanges() MonitorConfigResponseExpectedStatusCodeRangesArrayOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) []MonitorConfigResponseExpectedStatusCodeRanges {
		if v == nil {
			return nil
		}
		return v.ExpectedStatusCodeRanges
	}).(MonitorConfigResponseExpectedStatusCodeRangesArrayOutput)
}

// The monitor interval for endpoints in this profile. This is the interval at which Traffic Manager will check the health of each endpoint in this profile.
func (o MonitorConfigResponsePtrOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The path relative to the endpoint domain name used to probe for endpoint health.
func (o MonitorConfigResponsePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The TCP port used to probe for endpoint health.
func (o MonitorConfigResponsePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// The profile-level monitoring status of the Traffic Manager profile.
func (o MonitorConfigResponsePtrOutput) ProfileMonitorStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProfileMonitorStatus
	}).(pulumi.StringPtrOutput)
}

// The protocol (HTTP, HTTPS or TCP) used to probe for endpoint health.
func (o MonitorConfigResponsePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The monitor timeout for endpoints in this profile. This is the time that Traffic Manager allows endpoints in this profile to response to the health check.
func (o MonitorConfigResponsePtrOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive failed health check that Traffic Manager tolerates before declaring an endpoint in this profile Degraded after the next failed health check.
func (o MonitorConfigResponsePtrOutput) ToleratedNumberOfFailures() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorConfigResponse) *int {
		if v == nil {
			return nil
		}
		return v.ToleratedNumberOfFailures
	}).(pulumi.IntPtrOutput)
}

// Custom header name and value.
type MonitorConfigResponseCustomHeaders struct {
	// Header name.
	Name *string `pulumi:"name"`
	// Header value.
	Value *string `pulumi:"value"`
}

// MonitorConfigResponseCustomHeadersInput is an input type that accepts MonitorConfigResponseCustomHeadersArgs and MonitorConfigResponseCustomHeadersOutput values.
// You can construct a concrete instance of `MonitorConfigResponseCustomHeadersInput` via:
//
//          MonitorConfigResponseCustomHeadersArgs{...}
type MonitorConfigResponseCustomHeadersInput interface {
	pulumi.Input

	ToMonitorConfigResponseCustomHeadersOutput() MonitorConfigResponseCustomHeadersOutput
	ToMonitorConfigResponseCustomHeadersOutputWithContext(context.Context) MonitorConfigResponseCustomHeadersOutput
}

// Custom header name and value.
type MonitorConfigResponseCustomHeadersArgs struct {
	// Header name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Header value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (MonitorConfigResponseCustomHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigResponseCustomHeaders)(nil)).Elem()
}

func (i MonitorConfigResponseCustomHeadersArgs) ToMonitorConfigResponseCustomHeadersOutput() MonitorConfigResponseCustomHeadersOutput {
	return i.ToMonitorConfigResponseCustomHeadersOutputWithContext(context.Background())
}

func (i MonitorConfigResponseCustomHeadersArgs) ToMonitorConfigResponseCustomHeadersOutputWithContext(ctx context.Context) MonitorConfigResponseCustomHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigResponseCustomHeadersOutput)
}

// MonitorConfigResponseCustomHeadersArrayInput is an input type that accepts MonitorConfigResponseCustomHeadersArray and MonitorConfigResponseCustomHeadersArrayOutput values.
// You can construct a concrete instance of `MonitorConfigResponseCustomHeadersArrayInput` via:
//
//          MonitorConfigResponseCustomHeadersArray{ MonitorConfigResponseCustomHeadersArgs{...} }
type MonitorConfigResponseCustomHeadersArrayInput interface {
	pulumi.Input

	ToMonitorConfigResponseCustomHeadersArrayOutput() MonitorConfigResponseCustomHeadersArrayOutput
	ToMonitorConfigResponseCustomHeadersArrayOutputWithContext(context.Context) MonitorConfigResponseCustomHeadersArrayOutput
}

type MonitorConfigResponseCustomHeadersArray []MonitorConfigResponseCustomHeadersInput

func (MonitorConfigResponseCustomHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigResponseCustomHeaders)(nil)).Elem()
}

func (i MonitorConfigResponseCustomHeadersArray) ToMonitorConfigResponseCustomHeadersArrayOutput() MonitorConfigResponseCustomHeadersArrayOutput {
	return i.ToMonitorConfigResponseCustomHeadersArrayOutputWithContext(context.Background())
}

func (i MonitorConfigResponseCustomHeadersArray) ToMonitorConfigResponseCustomHeadersArrayOutputWithContext(ctx context.Context) MonitorConfigResponseCustomHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigResponseCustomHeadersArrayOutput)
}

// Custom header name and value.
type MonitorConfigResponseCustomHeadersOutput struct{ *pulumi.OutputState }

func (MonitorConfigResponseCustomHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigResponseCustomHeaders)(nil)).Elem()
}

func (o MonitorConfigResponseCustomHeadersOutput) ToMonitorConfigResponseCustomHeadersOutput() MonitorConfigResponseCustomHeadersOutput {
	return o
}

func (o MonitorConfigResponseCustomHeadersOutput) ToMonitorConfigResponseCustomHeadersOutputWithContext(ctx context.Context) MonitorConfigResponseCustomHeadersOutput {
	return o
}

// Header name.
func (o MonitorConfigResponseCustomHeadersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponseCustomHeaders) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Header value.
func (o MonitorConfigResponseCustomHeadersOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponseCustomHeaders) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type MonitorConfigResponseCustomHeadersArrayOutput struct{ *pulumi.OutputState }

func (MonitorConfigResponseCustomHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigResponseCustomHeaders)(nil)).Elem()
}

func (o MonitorConfigResponseCustomHeadersArrayOutput) ToMonitorConfigResponseCustomHeadersArrayOutput() MonitorConfigResponseCustomHeadersArrayOutput {
	return o
}

func (o MonitorConfigResponseCustomHeadersArrayOutput) ToMonitorConfigResponseCustomHeadersArrayOutputWithContext(ctx context.Context) MonitorConfigResponseCustomHeadersArrayOutput {
	return o
}

func (o MonitorConfigResponseCustomHeadersArrayOutput) Index(i pulumi.IntInput) MonitorConfigResponseCustomHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorConfigResponseCustomHeaders {
		return vs[0].([]MonitorConfigResponseCustomHeaders)[vs[1].(int)]
	}).(MonitorConfigResponseCustomHeadersOutput)
}

// Min and max value of a status code range.
type MonitorConfigResponseExpectedStatusCodeRanges struct {
	// Max status code.
	Max *int `pulumi:"max"`
	// Min status code.
	Min *int `pulumi:"min"`
}

// MonitorConfigResponseExpectedStatusCodeRangesInput is an input type that accepts MonitorConfigResponseExpectedStatusCodeRangesArgs and MonitorConfigResponseExpectedStatusCodeRangesOutput values.
// You can construct a concrete instance of `MonitorConfigResponseExpectedStatusCodeRangesInput` via:
//
//          MonitorConfigResponseExpectedStatusCodeRangesArgs{...}
type MonitorConfigResponseExpectedStatusCodeRangesInput interface {
	pulumi.Input

	ToMonitorConfigResponseExpectedStatusCodeRangesOutput() MonitorConfigResponseExpectedStatusCodeRangesOutput
	ToMonitorConfigResponseExpectedStatusCodeRangesOutputWithContext(context.Context) MonitorConfigResponseExpectedStatusCodeRangesOutput
}

// Min and max value of a status code range.
type MonitorConfigResponseExpectedStatusCodeRangesArgs struct {
	// Max status code.
	Max pulumi.IntPtrInput `pulumi:"max"`
	// Min status code.
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (MonitorConfigResponseExpectedStatusCodeRangesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigResponseExpectedStatusCodeRanges)(nil)).Elem()
}

func (i MonitorConfigResponseExpectedStatusCodeRangesArgs) ToMonitorConfigResponseExpectedStatusCodeRangesOutput() MonitorConfigResponseExpectedStatusCodeRangesOutput {
	return i.ToMonitorConfigResponseExpectedStatusCodeRangesOutputWithContext(context.Background())
}

func (i MonitorConfigResponseExpectedStatusCodeRangesArgs) ToMonitorConfigResponseExpectedStatusCodeRangesOutputWithContext(ctx context.Context) MonitorConfigResponseExpectedStatusCodeRangesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigResponseExpectedStatusCodeRangesOutput)
}

// MonitorConfigResponseExpectedStatusCodeRangesArrayInput is an input type that accepts MonitorConfigResponseExpectedStatusCodeRangesArray and MonitorConfigResponseExpectedStatusCodeRangesArrayOutput values.
// You can construct a concrete instance of `MonitorConfigResponseExpectedStatusCodeRangesArrayInput` via:
//
//          MonitorConfigResponseExpectedStatusCodeRangesArray{ MonitorConfigResponseExpectedStatusCodeRangesArgs{...} }
type MonitorConfigResponseExpectedStatusCodeRangesArrayInput interface {
	pulumi.Input

	ToMonitorConfigResponseExpectedStatusCodeRangesArrayOutput() MonitorConfigResponseExpectedStatusCodeRangesArrayOutput
	ToMonitorConfigResponseExpectedStatusCodeRangesArrayOutputWithContext(context.Context) MonitorConfigResponseExpectedStatusCodeRangesArrayOutput
}

type MonitorConfigResponseExpectedStatusCodeRangesArray []MonitorConfigResponseExpectedStatusCodeRangesInput

func (MonitorConfigResponseExpectedStatusCodeRangesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigResponseExpectedStatusCodeRanges)(nil)).Elem()
}

func (i MonitorConfigResponseExpectedStatusCodeRangesArray) ToMonitorConfigResponseExpectedStatusCodeRangesArrayOutput() MonitorConfigResponseExpectedStatusCodeRangesArrayOutput {
	return i.ToMonitorConfigResponseExpectedStatusCodeRangesArrayOutputWithContext(context.Background())
}

func (i MonitorConfigResponseExpectedStatusCodeRangesArray) ToMonitorConfigResponseExpectedStatusCodeRangesArrayOutputWithContext(ctx context.Context) MonitorConfigResponseExpectedStatusCodeRangesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorConfigResponseExpectedStatusCodeRangesArrayOutput)
}

// Min and max value of a status code range.
type MonitorConfigResponseExpectedStatusCodeRangesOutput struct{ *pulumi.OutputState }

func (MonitorConfigResponseExpectedStatusCodeRangesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorConfigResponseExpectedStatusCodeRanges)(nil)).Elem()
}

func (o MonitorConfigResponseExpectedStatusCodeRangesOutput) ToMonitorConfigResponseExpectedStatusCodeRangesOutput() MonitorConfigResponseExpectedStatusCodeRangesOutput {
	return o
}

func (o MonitorConfigResponseExpectedStatusCodeRangesOutput) ToMonitorConfigResponseExpectedStatusCodeRangesOutputWithContext(ctx context.Context) MonitorConfigResponseExpectedStatusCodeRangesOutput {
	return o
}

// Max status code.
func (o MonitorConfigResponseExpectedStatusCodeRangesOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponseExpectedStatusCodeRanges) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// Min status code.
func (o MonitorConfigResponseExpectedStatusCodeRangesOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorConfigResponseExpectedStatusCodeRanges) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type MonitorConfigResponseExpectedStatusCodeRangesArrayOutput struct{ *pulumi.OutputState }

func (MonitorConfigResponseExpectedStatusCodeRangesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorConfigResponseExpectedStatusCodeRanges)(nil)).Elem()
}

func (o MonitorConfigResponseExpectedStatusCodeRangesArrayOutput) ToMonitorConfigResponseExpectedStatusCodeRangesArrayOutput() MonitorConfigResponseExpectedStatusCodeRangesArrayOutput {
	return o
}

func (o MonitorConfigResponseExpectedStatusCodeRangesArrayOutput) ToMonitorConfigResponseExpectedStatusCodeRangesArrayOutputWithContext(ctx context.Context) MonitorConfigResponseExpectedStatusCodeRangesArrayOutput {
	return o
}

func (o MonitorConfigResponseExpectedStatusCodeRangesArrayOutput) Index(i pulumi.IntInput) MonitorConfigResponseExpectedStatusCodeRangesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorConfigResponseExpectedStatusCodeRanges {
		return vs[0].([]MonitorConfigResponseExpectedStatusCodeRanges)[vs[1].(int)]
	}).(MonitorConfigResponseExpectedStatusCodeRangesOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettings struct {
	// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
	AppliedDnsServers []string `pulumi:"appliedDnsServers"`
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers []string `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel *string `pulumi:"internalDnsNameLabel"`
	// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
	InternalDomainNameSuffix *string `pulumi:"internalDomainNameSuffix"`
	// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn *string `pulumi:"internalFqdn"`
}

// NetworkInterfaceDnsSettingsInput is an input type that accepts NetworkInterfaceDnsSettingsArgs and NetworkInterfaceDnsSettingsOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsInput` via:
//
//          NetworkInterfaceDnsSettingsArgs{...}
type NetworkInterfaceDnsSettingsInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsOutput() NetworkInterfaceDnsSettingsOutput
	ToNetworkInterfaceDnsSettingsOutputWithContext(context.Context) NetworkInterfaceDnsSettingsOutput
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsArgs struct {
	// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
	AppliedDnsServers pulumi.StringArrayInput `pulumi:"appliedDnsServers"`
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel pulumi.StringPtrInput `pulumi:"internalDnsNameLabel"`
	// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
	InternalDomainNameSuffix pulumi.StringPtrInput `pulumi:"internalDomainNameSuffix"`
	// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn pulumi.StringPtrInput `pulumi:"internalFqdn"`
}

func (NetworkInterfaceDnsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsOutput() NetworkInterfaceDnsSettingsOutput {
	return i.ToNetworkInterfaceDnsSettingsOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsOutput)
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return i.ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsArgs) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsOutput).ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx)
}

// NetworkInterfaceDnsSettingsPtrInput is an input type that accepts NetworkInterfaceDnsSettingsArgs, NetworkInterfaceDnsSettingsPtr and NetworkInterfaceDnsSettingsPtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsPtrInput` via:
//
//          NetworkInterfaceDnsSettingsArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceDnsSettingsPtrInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput
	ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Context) NetworkInterfaceDnsSettingsPtrOutput
}

type networkInterfaceDnsSettingsPtrType NetworkInterfaceDnsSettingsArgs

func NetworkInterfaceDnsSettingsPtr(v *NetworkInterfaceDnsSettingsArgs) NetworkInterfaceDnsSettingsPtrInput {
	return (*networkInterfaceDnsSettingsPtrType)(v)
}

func (*networkInterfaceDnsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (i *networkInterfaceDnsSettingsPtrType) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return i.ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Background())
}

func (i *networkInterfaceDnsSettingsPtrType) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsPtrOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsOutput() NetworkInterfaceDnsSettingsOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return o.ToNetworkInterfaceDnsSettingsPtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceDnsSettingsOutput) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) *NetworkInterfaceDnsSettings {
		return &v
	}).(NetworkInterfaceDnsSettingsPtrOutput)
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) []string { return v.AppliedDnsServers }).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) *string { return v.InternalDnsNameLabel }).(pulumi.StringPtrOutput)
}

// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
func (o NetworkInterfaceDnsSettingsOutput) InternalDomainNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) *string { return v.InternalDomainNameSuffix }).(pulumi.StringPtrOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsOutput) InternalFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettings) *string { return v.InternalFqdn }).(pulumi.StringPtrOutput)
}

type NetworkInterfaceDnsSettingsPtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettings)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsPtrOutput) ToNetworkInterfaceDnsSettingsPtrOutput() NetworkInterfaceDnsSettingsPtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsPtrOutput) ToNetworkInterfaceDnsSettingsPtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsPtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsPtrOutput) Elem() NetworkInterfaceDnsSettingsOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) NetworkInterfaceDnsSettings { return *v }).(NetworkInterfaceDnsSettingsOutput)
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsPtrOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) []string {
		if v == nil {
			return nil
		}
		return v.AppliedDnsServers
	}).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsPtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsPtrOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.InternalDnsNameLabel
	}).(pulumi.StringPtrOutput)
}

// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
func (o NetworkInterfaceDnsSettingsPtrOutput) InternalDomainNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.InternalDomainNameSuffix
	}).(pulumi.StringPtrOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsPtrOutput) InternalFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.InternalFqdn
	}).(pulumi.StringPtrOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsResponse struct {
	// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
	AppliedDnsServers []string `pulumi:"appliedDnsServers"`
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers []string `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel *string `pulumi:"internalDnsNameLabel"`
	// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
	InternalDomainNameSuffix *string `pulumi:"internalDomainNameSuffix"`
	// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn *string `pulumi:"internalFqdn"`
}

// NetworkInterfaceDnsSettingsResponseInput is an input type that accepts NetworkInterfaceDnsSettingsResponseArgs and NetworkInterfaceDnsSettingsResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsResponseInput` via:
//
//          NetworkInterfaceDnsSettingsResponseArgs{...}
type NetworkInterfaceDnsSettingsResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsResponseOutput() NetworkInterfaceDnsSettingsResponseOutput
	ToNetworkInterfaceDnsSettingsResponseOutputWithContext(context.Context) NetworkInterfaceDnsSettingsResponseOutput
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsResponseArgs struct {
	// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
	AppliedDnsServers pulumi.StringArrayInput `pulumi:"appliedDnsServers"`
	// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
	InternalDnsNameLabel pulumi.StringPtrInput `pulumi:"internalDnsNameLabel"`
	// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
	InternalDomainNameSuffix pulumi.StringPtrInput `pulumi:"internalDomainNameSuffix"`
	// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
	InternalFqdn pulumi.StringPtrInput `pulumi:"internalFqdn"`
}

func (NetworkInterfaceDnsSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (i NetworkInterfaceDnsSettingsResponseArgs) ToNetworkInterfaceDnsSettingsResponseOutput() NetworkInterfaceDnsSettingsResponseOutput {
	return i.ToNetworkInterfaceDnsSettingsResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsResponseArgs) ToNetworkInterfaceDnsSettingsResponseOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsResponseOutput)
}

func (i NetworkInterfaceDnsSettingsResponseArgs) ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return i.ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceDnsSettingsResponseArgs) ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsResponseOutput).ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx)
}

// NetworkInterfaceDnsSettingsResponsePtrInput is an input type that accepts NetworkInterfaceDnsSettingsResponseArgs, NetworkInterfaceDnsSettingsResponsePtr and NetworkInterfaceDnsSettingsResponsePtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceDnsSettingsResponsePtrInput` via:
//
//          NetworkInterfaceDnsSettingsResponseArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceDnsSettingsResponsePtrInput interface {
	pulumi.Input

	ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput
	ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput
}

type networkInterfaceDnsSettingsResponsePtrType NetworkInterfaceDnsSettingsResponseArgs

func NetworkInterfaceDnsSettingsResponsePtr(v *NetworkInterfaceDnsSettingsResponseArgs) NetworkInterfaceDnsSettingsResponsePtrInput {
	return (*networkInterfaceDnsSettingsResponsePtrType)(v)
}

func (*networkInterfaceDnsSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (i *networkInterfaceDnsSettingsResponsePtrType) ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return i.ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *networkInterfaceDnsSettingsResponsePtrType) ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceDnsSettingsResponsePtrOutput)
}

// DNS settings of a network interface.
type NetworkInterfaceDnsSettingsResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponseOutput() NetworkInterfaceDnsSettingsResponseOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponseOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponseOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o.ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceDnsSettingsResponseOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) *NetworkInterfaceDnsSettingsResponse {
		return &v
	}).(NetworkInterfaceDnsSettingsResponsePtrOutput)
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsResponseOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) []string { return v.AppliedDnsServers }).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsResponseOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) *string { return v.InternalDnsNameLabel }).(pulumi.StringPtrOutput)
}

// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalDomainNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) *string { return v.InternalDomainNameSuffix }).(pulumi.StringPtrOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponseOutput) InternalFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceDnsSettingsResponse) *string { return v.InternalFqdn }).(pulumi.StringPtrOutput)
}

type NetworkInterfaceDnsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceDnsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceDnsSettingsResponse)(nil)).Elem()
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutput() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) ToNetworkInterfaceDnsSettingsResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o
}

func (o NetworkInterfaceDnsSettingsResponsePtrOutput) Elem() NetworkInterfaceDnsSettingsResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) NetworkInterfaceDnsSettingsResponse { return *v }).(NetworkInterfaceDnsSettingsResponseOutput)
}

// If the VM that uses this NIC is part of an Availability Set, then this list will have the union of all DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of those VMs.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) AppliedDnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.AppliedDnsServers
	}).(pulumi.StringArrayOutput)
}

// List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution. 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) []string {
		if v == nil {
			return nil
		}
		return v.DnsServers
	}).(pulumi.StringArrayOutput)
}

// Relative DNS name for this NIC used for internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalDnsNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalDnsNameLabel
	}).(pulumi.StringPtrOutput)
}

// Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalDomainNameSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalDomainNameSuffix
	}).(pulumi.StringPtrOutput)
}

// Fully qualified DNS name supporting internal communications between VMs in the same virtual network.
func (o NetworkInterfaceDnsSettingsResponsePtrOutput) InternalFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.InternalFqdn
	}).(pulumi.StringPtrOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfiguration struct {
	// The reference of ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools []ApplicationGatewayBackendAddressPool `pulumi:"applicationGatewayBackendAddressPools"`
	// Application security groups in which the IP configuration is included.
	ApplicationSecurityGroups []ApplicationSecurityGroupType `pulumi:"applicationSecurityGroups"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The reference of LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools []BackendAddressPool `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules []InboundNatRuleType `pulumi:"loadBalancerInboundNatRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets whether this is a primary customer address on the network interface.
	Primary *bool `pulumi:"primary"`
	// Private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Public IP address bound to the IP configuration.
	PublicIPAddress *PublicIPAddressType `pulumi:"publicIPAddress"`
	// Subnet bound to the IP configuration.
	Subnet *SubnetType `pulumi:"subnet"`
}

// NetworkInterfaceIPConfigurationInput is an input type that accepts NetworkInterfaceIPConfigurationArgs and NetworkInterfaceIPConfigurationOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationInput` via:
//
//          NetworkInterfaceIPConfigurationArgs{...}
type NetworkInterfaceIPConfigurationInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationOutput() NetworkInterfaceIPConfigurationOutput
	ToNetworkInterfaceIPConfigurationOutputWithContext(context.Context) NetworkInterfaceIPConfigurationOutput
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationArgs struct {
	// The reference of ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools ApplicationGatewayBackendAddressPoolArrayInput `pulumi:"applicationGatewayBackendAddressPools"`
	// Application security groups in which the IP configuration is included.
	ApplicationSecurityGroups ApplicationSecurityGroupTypeArrayInput `pulumi:"applicationSecurityGroups"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The reference of LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools BackendAddressPoolArrayInput `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules InboundNatRuleTypeArrayInput `pulumi:"loadBalancerInboundNatRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets whether this is a primary customer address on the network interface.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// Private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
	PrivateIPAddressVersion pulumi.StringPtrInput `pulumi:"privateIPAddressVersion"`
	// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Public IP address bound to the IP configuration.
	PublicIPAddress PublicIPAddressTypePtrInput `pulumi:"publicIPAddress"`
	// Subnet bound to the IP configuration.
	Subnet SubnetTypePtrInput `pulumi:"subnet"`
}

func (NetworkInterfaceIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationArgs) ToNetworkInterfaceIPConfigurationOutput() NetworkInterfaceIPConfigurationOutput {
	return i.ToNetworkInterfaceIPConfigurationOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationArgs) ToNetworkInterfaceIPConfigurationOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationOutput)
}

// NetworkInterfaceIPConfigurationArrayInput is an input type that accepts NetworkInterfaceIPConfigurationArray and NetworkInterfaceIPConfigurationArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationArrayInput` via:
//
//          NetworkInterfaceIPConfigurationArray{ NetworkInterfaceIPConfigurationArgs{...} }
type NetworkInterfaceIPConfigurationArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationArrayOutput() NetworkInterfaceIPConfigurationArrayOutput
	ToNetworkInterfaceIPConfigurationArrayOutputWithContext(context.Context) NetworkInterfaceIPConfigurationArrayOutput
}

type NetworkInterfaceIPConfigurationArray []NetworkInterfaceIPConfigurationInput

func (NetworkInterfaceIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationArray) ToNetworkInterfaceIPConfigurationArrayOutput() NetworkInterfaceIPConfigurationArrayOutput {
	return i.ToNetworkInterfaceIPConfigurationArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationArray) ToNetworkInterfaceIPConfigurationArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationArrayOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationOutput) ToNetworkInterfaceIPConfigurationOutput() NetworkInterfaceIPConfigurationOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationOutput) ToNetworkInterfaceIPConfigurationOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationOutput {
	return o
}

// The reference of ApplicationGatewayBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationOutput) ApplicationGatewayBackendAddressPools() ApplicationGatewayBackendAddressPoolArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) []ApplicationGatewayBackendAddressPool {
		return v.ApplicationGatewayBackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolArrayOutput)
}

// Application security groups in which the IP configuration is included.
func (o NetworkInterfaceIPConfigurationOutput) ApplicationSecurityGroups() ApplicationSecurityGroupTypeArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) []ApplicationSecurityGroupType {
		return v.ApplicationSecurityGroups
	}).(ApplicationSecurityGroupTypeArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkInterfaceIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The reference of LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationOutput) LoadBalancerBackendAddressPools() BackendAddressPoolArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) []BackendAddressPool { return v.LoadBalancerBackendAddressPools }).(BackendAddressPoolArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationOutput) LoadBalancerInboundNatRules() InboundNatRuleTypeArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) []InboundNatRuleType { return v.LoadBalancerInboundNatRules }).(InboundNatRuleTypeArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// Private IP address of the IP configuration.
func (o NetworkInterfaceIPConfigurationOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
func (o NetworkInterfaceIPConfigurationOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
func (o NetworkInterfaceIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkInterfaceIPConfigurationOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Public IP address bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationOutput) PublicIPAddress() PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *PublicIPAddressType { return v.PublicIPAddress }).(PublicIPAddressTypePtrOutput)
}

// Subnet bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationOutput) Subnet() SubnetTypePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfiguration) *SubnetType { return v.Subnet }).(SubnetTypePtrOutput)
}

type NetworkInterfaceIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfiguration)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationArrayOutput) ToNetworkInterfaceIPConfigurationArrayOutput() NetworkInterfaceIPConfigurationArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationArrayOutput) ToNetworkInterfaceIPConfigurationArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceIPConfiguration {
		return vs[0].([]NetworkInterfaceIPConfiguration)[vs[1].(int)]
	}).(NetworkInterfaceIPConfigurationOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationResponse struct {
	// The reference of ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools []ApplicationGatewayBackendAddressPoolResponse `pulumi:"applicationGatewayBackendAddressPools"`
	// Application security groups in which the IP configuration is included.
	ApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"applicationSecurityGroups"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The reference of LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools []BackendAddressPoolResponse `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules []InboundNatRuleResponse `pulumi:"loadBalancerInboundNatRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets whether this is a primary customer address on the network interface.
	Primary *bool `pulumi:"primary"`
	// Private IP address of the IP configuration.
	PrivateIPAddress *string `pulumi:"privateIPAddress"`
	// Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
	PrivateIPAddressVersion *string `pulumi:"privateIPAddressVersion"`
	// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Public IP address bound to the IP configuration.
	PublicIPAddress *PublicIPAddressResponse `pulumi:"publicIPAddress"`
	// Subnet bound to the IP configuration.
	Subnet *SubnetResponse `pulumi:"subnet"`
}

// NetworkInterfaceIPConfigurationResponseInput is an input type that accepts NetworkInterfaceIPConfigurationResponseArgs and NetworkInterfaceIPConfigurationResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationResponseInput` via:
//
//          NetworkInterfaceIPConfigurationResponseArgs{...}
type NetworkInterfaceIPConfigurationResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationResponseOutput() NetworkInterfaceIPConfigurationResponseOutput
	ToNetworkInterfaceIPConfigurationResponseOutputWithContext(context.Context) NetworkInterfaceIPConfigurationResponseOutput
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationResponseArgs struct {
	// The reference of ApplicationGatewayBackendAddressPool resource.
	ApplicationGatewayBackendAddressPools ApplicationGatewayBackendAddressPoolResponseArrayInput `pulumi:"applicationGatewayBackendAddressPools"`
	// Application security groups in which the IP configuration is included.
	ApplicationSecurityGroups ApplicationSecurityGroupResponseArrayInput `pulumi:"applicationSecurityGroups"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The reference of LoadBalancerBackendAddressPool resource.
	LoadBalancerBackendAddressPools BackendAddressPoolResponseArrayInput `pulumi:"loadBalancerBackendAddressPools"`
	// A list of references of LoadBalancerInboundNatRules.
	LoadBalancerInboundNatRules InboundNatRuleResponseArrayInput `pulumi:"loadBalancerInboundNatRules"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets whether this is a primary customer address on the network interface.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// Private IP address of the IP configuration.
	PrivateIPAddress pulumi.StringPtrInput `pulumi:"privateIPAddress"`
	// Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
	PrivateIPAddressVersion pulumi.StringPtrInput `pulumi:"privateIPAddressVersion"`
	// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Public IP address bound to the IP configuration.
	PublicIPAddress PublicIPAddressResponsePtrInput `pulumi:"publicIPAddress"`
	// Subnet bound to the IP configuration.
	Subnet SubnetResponsePtrInput `pulumi:"subnet"`
}

func (NetworkInterfaceIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationResponseArgs) ToNetworkInterfaceIPConfigurationResponseOutput() NetworkInterfaceIPConfigurationResponseOutput {
	return i.ToNetworkInterfaceIPConfigurationResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationResponseArgs) ToNetworkInterfaceIPConfigurationResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationResponseOutput)
}

func (i NetworkInterfaceIPConfigurationResponseArgs) ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return i.ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationResponseArgs) ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationResponseOutput).ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx)
}

// NetworkInterfaceIPConfigurationResponsePtrInput is an input type that accepts NetworkInterfaceIPConfigurationResponseArgs, NetworkInterfaceIPConfigurationResponsePtr and NetworkInterfaceIPConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationResponsePtrInput` via:
//
//          NetworkInterfaceIPConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type NetworkInterfaceIPConfigurationResponsePtrInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput
	ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput
}

type networkInterfaceIPConfigurationResponsePtrType NetworkInterfaceIPConfigurationResponseArgs

func NetworkInterfaceIPConfigurationResponsePtr(v *NetworkInterfaceIPConfigurationResponseArgs) NetworkInterfaceIPConfigurationResponsePtrInput {
	return (*networkInterfaceIPConfigurationResponsePtrType)(v)
}

func (*networkInterfaceIPConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (i *networkInterfaceIPConfigurationResponsePtrType) ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return i.ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *networkInterfaceIPConfigurationResponsePtrType) ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// NetworkInterfaceIPConfigurationResponseArrayInput is an input type that accepts NetworkInterfaceIPConfigurationResponseArray and NetworkInterfaceIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceIPConfigurationResponseArrayInput` via:
//
//          NetworkInterfaceIPConfigurationResponseArray{ NetworkInterfaceIPConfigurationResponseArgs{...} }
type NetworkInterfaceIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceIPConfigurationResponseArrayOutput() NetworkInterfaceIPConfigurationResponseArrayOutput
	ToNetworkInterfaceIPConfigurationResponseArrayOutputWithContext(context.Context) NetworkInterfaceIPConfigurationResponseArrayOutput
}

type NetworkInterfaceIPConfigurationResponseArray []NetworkInterfaceIPConfigurationResponseInput

func (NetworkInterfaceIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (i NetworkInterfaceIPConfigurationResponseArray) ToNetworkInterfaceIPConfigurationResponseArrayOutput() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return i.ToNetworkInterfaceIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceIPConfigurationResponseArray) ToNetworkInterfaceIPConfigurationResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// IPConfiguration in a network interface.
type NetworkInterfaceIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponseOutput() NetworkInterfaceIPConfigurationResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponseOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o NetworkInterfaceIPConfigurationResponseOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *NetworkInterfaceIPConfigurationResponse {
		return &v
	}).(NetworkInterfaceIPConfigurationResponsePtrOutput)
}

// The reference of ApplicationGatewayBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) ApplicationGatewayBackendAddressPools() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []ApplicationGatewayBackendAddressPoolResponse {
		return v.ApplicationGatewayBackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Application security groups in which the IP configuration is included.
func (o NetworkInterfaceIPConfigurationResponseOutput) ApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []ApplicationSecurityGroupResponse {
		return v.ApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkInterfaceIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The reference of LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) LoadBalancerBackendAddressPools() BackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []BackendAddressPoolResponse {
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolResponseArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationResponseOutput) LoadBalancerInboundNatRules() InboundNatRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) []InboundNatRuleResponse {
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// Private IP address of the IP configuration.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.PrivateIPAddress }).(pulumi.StringPtrOutput)
}

// Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.PrivateIPAddressVersion }).(pulumi.StringPtrOutput)
}

// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
func (o NetworkInterfaceIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkInterfaceIPConfigurationResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Public IP address bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponseOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *PublicIPAddressResponse { return v.PublicIPAddress }).(PublicIPAddressResponsePtrOutput)
}

// Subnet bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponseOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceIPConfigurationResponse) *SubnetResponse { return v.Subnet }).(SubnetResponsePtrOutput)
}

type NetworkInterfaceIPConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutput() NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ToNetworkInterfaceIPConfigurationResponsePtrOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponsePtrOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Elem() NetworkInterfaceIPConfigurationResponseOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) NetworkInterfaceIPConfigurationResponse { return *v }).(NetworkInterfaceIPConfigurationResponseOutput)
}

// The reference of ApplicationGatewayBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ApplicationGatewayBackendAddressPools() ApplicationGatewayBackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []ApplicationGatewayBackendAddressPoolResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationGatewayBackendAddressPools
	}).(ApplicationGatewayBackendAddressPoolResponseArrayOutput)
}

// Application security groups in which the IP configuration is included.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []ApplicationSecurityGroupResponse {
		if v == nil {
			return nil
		}
		return v.ApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The reference of LoadBalancerBackendAddressPool resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) LoadBalancerBackendAddressPools() BackendAddressPoolResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []BackendAddressPoolResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerBackendAddressPools
	}).(BackendAddressPoolResponseArrayOutput)
}

// A list of references of LoadBalancerInboundNatRules.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) LoadBalancerInboundNatRules() InboundNatRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) []InboundNatRuleResponse {
		if v == nil {
			return nil
		}
		return v.LoadBalancerInboundNatRules
	}).(InboundNatRuleResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gets whether this is a primary customer address on the network interface.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *bool {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.BoolPtrOutput)
}

// Private IP address of the IP configuration.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddress
	}).(pulumi.StringPtrOutput)
}

// Available from Api-Version 2016-03-30 onwards, it represents whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// Defines how a private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.PrivateIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the network interface IP configuration. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Public IP address bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) PublicIPAddress() PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *PublicIPAddressResponse {
		if v == nil {
			return nil
		}
		return v.PublicIPAddress
	}).(PublicIPAddressResponsePtrOutput)
}

// Subnet bound to the IP configuration.
func (o NetworkInterfaceIPConfigurationResponsePtrOutput) Subnet() SubnetResponsePtrOutput {
	return o.ApplyT(func(v *NetworkInterfaceIPConfigurationResponse) *SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnet
	}).(SubnetResponsePtrOutput)
}

type NetworkInterfaceIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceIPConfigurationResponse)(nil)).Elem()
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) ToNetworkInterfaceIPConfigurationResponseArrayOutput() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) ToNetworkInterfaceIPConfigurationResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o
}

func (o NetworkInterfaceIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceIPConfigurationResponse {
		return vs[0].([]NetworkInterfaceIPConfigurationResponse)[vs[1].(int)]
	}).(NetworkInterfaceIPConfigurationResponseOutput)
}

// A network interface in a resource group.
type NetworkInterfaceResponse struct {
	// The DNS settings in network interface.
	DnsSettings *NetworkInterfaceDnsSettingsResponse `pulumi:"dnsSettings"`
	// If the network interface is accelerated networking enabled.
	EnableAcceleratedNetworking *bool `pulumi:"enableAcceleratedNetworking"`
	// Indicates whether IP forwarding is enabled on this network interface.
	EnableIPForwarding *bool `pulumi:"enableIPForwarding"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// A list of IPConfigurations of the network interface.
	IpConfigurations []NetworkInterfaceIPConfigurationResponse `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The MAC address of the network interface.
	MacAddress *string `pulumi:"macAddress"`
	// Resource name.
	Name string `pulumi:"name"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupResponse `pulumi:"networkSecurityGroup"`
	// Gets whether this is a primary network interface on a virtual machine.
	Primary *bool `pulumi:"primary"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the network interface resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// The reference of a virtual machine.
	VirtualMachine *SubResourceResponse `pulumi:"virtualMachine"`
}

// NetworkInterfaceResponseInput is an input type that accepts NetworkInterfaceResponseArgs and NetworkInterfaceResponseOutput values.
// You can construct a concrete instance of `NetworkInterfaceResponseInput` via:
//
//          NetworkInterfaceResponseArgs{...}
type NetworkInterfaceResponseInput interface {
	pulumi.Input

	ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput
	ToNetworkInterfaceResponseOutputWithContext(context.Context) NetworkInterfaceResponseOutput
}

// A network interface in a resource group.
type NetworkInterfaceResponseArgs struct {
	// The DNS settings in network interface.
	DnsSettings NetworkInterfaceDnsSettingsResponsePtrInput `pulumi:"dnsSettings"`
	// If the network interface is accelerated networking enabled.
	EnableAcceleratedNetworking pulumi.BoolPtrInput `pulumi:"enableAcceleratedNetworking"`
	// Indicates whether IP forwarding is enabled on this network interface.
	EnableIPForwarding pulumi.BoolPtrInput `pulumi:"enableIPForwarding"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A list of IPConfigurations of the network interface.
	IpConfigurations NetworkInterfaceIPConfigurationResponseArrayInput `pulumi:"ipConfigurations"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The MAC address of the network interface.
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup NetworkSecurityGroupResponsePtrInput `pulumi:"networkSecurityGroup"`
	// Gets whether this is a primary network interface on a virtual machine.
	Primary pulumi.BoolPtrInput `pulumi:"primary"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the network interface resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// The reference of a virtual machine.
	VirtualMachine SubResourceResponsePtrInput `pulumi:"virtualMachine"`
}

func (NetworkInterfaceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResponse)(nil)).Elem()
}

func (i NetworkInterfaceResponseArgs) ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput {
	return i.ToNetworkInterfaceResponseOutputWithContext(context.Background())
}

func (i NetworkInterfaceResponseArgs) ToNetworkInterfaceResponseOutputWithContext(ctx context.Context) NetworkInterfaceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceResponseOutput)
}

// NetworkInterfaceResponseArrayInput is an input type that accepts NetworkInterfaceResponseArray and NetworkInterfaceResponseArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceResponseArrayInput` via:
//
//          NetworkInterfaceResponseArray{ NetworkInterfaceResponseArgs{...} }
type NetworkInterfaceResponseArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceResponseArrayOutput() NetworkInterfaceResponseArrayOutput
	ToNetworkInterfaceResponseArrayOutputWithContext(context.Context) NetworkInterfaceResponseArrayOutput
}

type NetworkInterfaceResponseArray []NetworkInterfaceResponseInput

func (NetworkInterfaceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceResponse)(nil)).Elem()
}

func (i NetworkInterfaceResponseArray) ToNetworkInterfaceResponseArrayOutput() NetworkInterfaceResponseArrayOutput {
	return i.ToNetworkInterfaceResponseArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceResponseArray) ToNetworkInterfaceResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceResponseArrayOutput)
}

// A network interface in a resource group.
type NetworkInterfaceResponseOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutput() NetworkInterfaceResponseOutput {
	return o
}

func (o NetworkInterfaceResponseOutput) ToNetworkInterfaceResponseOutputWithContext(ctx context.Context) NetworkInterfaceResponseOutput {
	return o
}

// The DNS settings in network interface.
func (o NetworkInterfaceResponseOutput) DnsSettings() NetworkInterfaceDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *NetworkInterfaceDnsSettingsResponse { return v.DnsSettings }).(NetworkInterfaceDnsSettingsResponsePtrOutput)
}

// If the network interface is accelerated networking enabled.
func (o NetworkInterfaceResponseOutput) EnableAcceleratedNetworking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *bool { return v.EnableAcceleratedNetworking }).(pulumi.BoolPtrOutput)
}

// Indicates whether IP forwarding is enabled on this network interface.
func (o NetworkInterfaceResponseOutput) EnableIPForwarding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *bool { return v.EnableIPForwarding }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkInterfaceResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkInterfaceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A list of IPConfigurations of the network interface.
func (o NetworkInterfaceResponseOutput) IpConfigurations() NetworkInterfaceIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) []NetworkInterfaceIPConfigurationResponse { return v.IpConfigurations }).(NetworkInterfaceIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o NetworkInterfaceResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The MAC address of the network interface.
func (o NetworkInterfaceResponseOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkInterfaceResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o NetworkInterfaceResponseOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *NetworkSecurityGroupResponse { return v.NetworkSecurityGroup }).(NetworkSecurityGroupResponsePtrOutput)
}

// Gets whether this is a primary network interface on a virtual machine.
func (o NetworkInterfaceResponseOutput) Primary() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *bool { return v.Primary }).(pulumi.BoolPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkInterfaceResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network interface resource.
func (o NetworkInterfaceResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// Resource tags.
func (o NetworkInterfaceResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkInterfaceResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The reference of a virtual machine.
func (o NetworkInterfaceResponseOutput) VirtualMachine() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v NetworkInterfaceResponse) *SubResourceResponse { return v.VirtualMachine }).(SubResourceResponsePtrOutput)
}

type NetworkInterfaceResponseArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NetworkInterfaceResponse)(nil)).Elem()
}

func (o NetworkInterfaceResponseArrayOutput) ToNetworkInterfaceResponseArrayOutput() NetworkInterfaceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceResponseArrayOutput) ToNetworkInterfaceResponseArrayOutputWithContext(ctx context.Context) NetworkInterfaceResponseArrayOutput {
	return o
}

func (o NetworkInterfaceResponseArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NetworkInterfaceResponse {
		return vs[0].([]NetworkInterfaceResponse)[vs[1].(int)]
	}).(NetworkInterfaceResponseOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupType struct {
	// The default security rules of network security group.
	DefaultSecurityRules []SecurityRuleType `pulumi:"defaultSecurityRules"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules []SecurityRuleType `pulumi:"securityRules"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// NetworkSecurityGroupTypeInput is an input type that accepts NetworkSecurityGroupTypeArgs and NetworkSecurityGroupTypeOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupTypeInput` via:
//
//          NetworkSecurityGroupTypeArgs{...}
type NetworkSecurityGroupTypeInput interface {
	pulumi.Input

	ToNetworkSecurityGroupTypeOutput() NetworkSecurityGroupTypeOutput
	ToNetworkSecurityGroupTypeOutputWithContext(context.Context) NetworkSecurityGroupTypeOutput
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupTypeArgs struct {
	// The default security rules of network security group.
	DefaultSecurityRules SecurityRuleTypeArrayInput `pulumi:"defaultSecurityRules"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules SecurityRuleTypeArrayInput `pulumi:"securityRules"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (NetworkSecurityGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupType)(nil)).Elem()
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypeOutput() NetworkSecurityGroupTypeOutput {
	return i.ToNetworkSecurityGroupTypeOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypeOutputWithContext(ctx context.Context) NetworkSecurityGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupTypeOutput)
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return i.ToNetworkSecurityGroupTypePtrOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupTypeArgs) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupTypeOutput).ToNetworkSecurityGroupTypePtrOutputWithContext(ctx)
}

// NetworkSecurityGroupTypePtrInput is an input type that accepts NetworkSecurityGroupTypeArgs, NetworkSecurityGroupTypePtr and NetworkSecurityGroupTypePtrOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupTypePtrInput` via:
//
//          NetworkSecurityGroupTypeArgs{...}
//
//  or:
//
//          nil
type NetworkSecurityGroupTypePtrInput interface {
	pulumi.Input

	ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput
	ToNetworkSecurityGroupTypePtrOutputWithContext(context.Context) NetworkSecurityGroupTypePtrOutput
}

type networkSecurityGroupTypePtrType NetworkSecurityGroupTypeArgs

func NetworkSecurityGroupTypePtr(v *NetworkSecurityGroupTypeArgs) NetworkSecurityGroupTypePtrInput {
	return (*networkSecurityGroupTypePtrType)(v)
}

func (*networkSecurityGroupTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupType)(nil)).Elem()
}

func (i *networkSecurityGroupTypePtrType) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return i.ToNetworkSecurityGroupTypePtrOutputWithContext(context.Background())
}

func (i *networkSecurityGroupTypePtrType) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupTypePtrOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupTypeOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupType)(nil)).Elem()
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypeOutput() NetworkSecurityGroupTypeOutput {
	return o
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypeOutputWithContext(ctx context.Context) NetworkSecurityGroupTypeOutput {
	return o
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return o.ToNetworkSecurityGroupTypePtrOutputWithContext(context.Background())
}

func (o NetworkSecurityGroupTypeOutput) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *NetworkSecurityGroupType {
		return &v
	}).(NetworkSecurityGroupTypePtrOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupTypeOutput) DefaultSecurityRules() SecurityRuleTypeArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) []SecurityRuleType { return v.DefaultSecurityRules }).(SecurityRuleTypeArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkSecurityGroupTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkSecurityGroupTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupTypeOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupTypeOutput) SecurityRules() SecurityRuleTypeArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) []SecurityRuleType { return v.SecurityRules }).(SecurityRuleTypeArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityGroupType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type NetworkSecurityGroupTypePtrOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupType)(nil)).Elem()
}

func (o NetworkSecurityGroupTypePtrOutput) ToNetworkSecurityGroupTypePtrOutput() NetworkSecurityGroupTypePtrOutput {
	return o
}

func (o NetworkSecurityGroupTypePtrOutput) ToNetworkSecurityGroupTypePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupTypePtrOutput {
	return o
}

func (o NetworkSecurityGroupTypePtrOutput) Elem() NetworkSecurityGroupTypeOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) NetworkSecurityGroupType { return *v }).(NetworkSecurityGroupTypeOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupTypePtrOutput) DefaultSecurityRules() SecurityRuleTypeArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) []SecurityRuleType {
		if v == nil {
			return nil
		}
		return v.DefaultSecurityRules
	}).(SecurityRuleTypeArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkSecurityGroupTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkSecurityGroupTypePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupTypePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupTypePtrOutput) SecurityRules() SecurityRuleTypeArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) []SecurityRuleType {
		if v == nil {
			return nil
		}
		return v.SecurityRules
	}).(SecurityRuleTypeArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupResponse struct {
	// The default security rules of network security group.
	DefaultSecurityRules []SecurityRuleResponse `pulumi:"defaultSecurityRules"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// A collection of references to network interfaces.
	NetworkInterfaces []NetworkInterfaceResponse `pulumi:"networkInterfaces"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules []SecurityRuleResponse `pulumi:"securityRules"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// NetworkSecurityGroupResponseInput is an input type that accepts NetworkSecurityGroupResponseArgs and NetworkSecurityGroupResponseOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupResponseInput` via:
//
//          NetworkSecurityGroupResponseArgs{...}
type NetworkSecurityGroupResponseInput interface {
	pulumi.Input

	ToNetworkSecurityGroupResponseOutput() NetworkSecurityGroupResponseOutput
	ToNetworkSecurityGroupResponseOutputWithContext(context.Context) NetworkSecurityGroupResponseOutput
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupResponseArgs struct {
	// The default security rules of network security group.
	DefaultSecurityRules SecurityRuleResponseArrayInput `pulumi:"defaultSecurityRules"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// A collection of references to network interfaces.
	NetworkInterfaces NetworkInterfaceResponseArrayInput `pulumi:"networkInterfaces"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The resource GUID property of the network security group resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// A collection of security rules of the network security group.
	SecurityRules SecurityRuleResponseArrayInput `pulumi:"securityRules"`
	// A collection of references to subnets.
	Subnets SubnetResponseArrayInput `pulumi:"subnets"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (NetworkSecurityGroupResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupResponse)(nil)).Elem()
}

func (i NetworkSecurityGroupResponseArgs) ToNetworkSecurityGroupResponseOutput() NetworkSecurityGroupResponseOutput {
	return i.ToNetworkSecurityGroupResponseOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupResponseArgs) ToNetworkSecurityGroupResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupResponseOutput)
}

func (i NetworkSecurityGroupResponseArgs) ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput {
	return i.ToNetworkSecurityGroupResponsePtrOutputWithContext(context.Background())
}

func (i NetworkSecurityGroupResponseArgs) ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupResponseOutput).ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx)
}

// NetworkSecurityGroupResponsePtrInput is an input type that accepts NetworkSecurityGroupResponseArgs, NetworkSecurityGroupResponsePtr and NetworkSecurityGroupResponsePtrOutput values.
// You can construct a concrete instance of `NetworkSecurityGroupResponsePtrInput` via:
//
//          NetworkSecurityGroupResponseArgs{...}
//
//  or:
//
//          nil
type NetworkSecurityGroupResponsePtrInput interface {
	pulumi.Input

	ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput
	ToNetworkSecurityGroupResponsePtrOutputWithContext(context.Context) NetworkSecurityGroupResponsePtrOutput
}

type networkSecurityGroupResponsePtrType NetworkSecurityGroupResponseArgs

func NetworkSecurityGroupResponsePtr(v *NetworkSecurityGroupResponseArgs) NetworkSecurityGroupResponsePtrInput {
	return (*networkSecurityGroupResponsePtrType)(v)
}

func (*networkSecurityGroupResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupResponse)(nil)).Elem()
}

func (i *networkSecurityGroupResponsePtrType) ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput {
	return i.ToNetworkSecurityGroupResponsePtrOutputWithContext(context.Background())
}

func (i *networkSecurityGroupResponsePtrType) ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkSecurityGroupResponsePtrOutput)
}

// NetworkSecurityGroup resource.
type NetworkSecurityGroupResponseOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkSecurityGroupResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponseOutput() NetworkSecurityGroupResponseOutput {
	return o
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponseOutputWithContext(ctx context.Context) NetworkSecurityGroupResponseOutput {
	return o
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput {
	return o.ToNetworkSecurityGroupResponsePtrOutputWithContext(context.Background())
}

func (o NetworkSecurityGroupResponseOutput) ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *NetworkSecurityGroupResponse {
		return &v
	}).(NetworkSecurityGroupResponsePtrOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupResponseOutput) DefaultSecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []SecurityRuleResponse { return v.DefaultSecurityRules }).(SecurityRuleResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkSecurityGroupResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkSecurityGroupResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.Name }).(pulumi.StringOutput)
}

// A collection of references to network interfaces.
func (o NetworkSecurityGroupResponseOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []NetworkInterfaceResponse { return v.NetworkInterfaces }).(NetworkInterfaceResponseArrayOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkSecurityGroupResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupResponseOutput) SecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []SecurityRuleResponse { return v.SecurityRules }).(SecurityRuleResponseArrayOutput)
}

// A collection of references to subnets.
func (o NetworkSecurityGroupResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkSecurityGroupResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NetworkSecurityGroupResponse) string { return v.Type }).(pulumi.StringOutput)
}

type NetworkSecurityGroupResponsePtrOutput struct{ *pulumi.OutputState }

func (NetworkSecurityGroupResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkSecurityGroupResponse)(nil)).Elem()
}

func (o NetworkSecurityGroupResponsePtrOutput) ToNetworkSecurityGroupResponsePtrOutput() NetworkSecurityGroupResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupResponsePtrOutput) ToNetworkSecurityGroupResponsePtrOutputWithContext(ctx context.Context) NetworkSecurityGroupResponsePtrOutput {
	return o
}

func (o NetworkSecurityGroupResponsePtrOutput) Elem() NetworkSecurityGroupResponseOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) NetworkSecurityGroupResponse { return *v }).(NetworkSecurityGroupResponseOutput)
}

// The default security rules of network security group.
func (o NetworkSecurityGroupResponsePtrOutput) DefaultSecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []SecurityRuleResponse {
		if v == nil {
			return nil
		}
		return v.DefaultSecurityRules
	}).(SecurityRuleResponseArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o NetworkSecurityGroupResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o NetworkSecurityGroupResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o NetworkSecurityGroupResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o NetworkSecurityGroupResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A collection of references to network interfaces.
func (o NetworkSecurityGroupResponsePtrOutput) NetworkInterfaces() NetworkInterfaceResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []NetworkInterfaceResponse {
		if v == nil {
			return nil
		}
		return v.NetworkInterfaces
	}).(NetworkInterfaceResponseArrayOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o NetworkSecurityGroupResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the network security group resource.
func (o NetworkSecurityGroupResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// A collection of security rules of the network security group.
func (o NetworkSecurityGroupResponsePtrOutput) SecurityRules() SecurityRuleResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []SecurityRuleResponse {
		if v == nil {
			return nil
		}
		return v.SecurityRules
	}).(SecurityRuleResponseArrayOutput)
}

// A collection of references to subnets.
func (o NetworkSecurityGroupResponsePtrOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) []SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o NetworkSecurityGroupResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o NetworkSecurityGroupResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkSecurityGroupResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Outbound NAT pool of the load balancer.
type OutboundNatRule struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts *int `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResource `pulumi:"backendAddressPool"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations []SubResource `pulumi:"frontendIPConfigurations"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// OutboundNatRuleInput is an input type that accepts OutboundNatRuleArgs and OutboundNatRuleOutput values.
// You can construct a concrete instance of `OutboundNatRuleInput` via:
//
//          OutboundNatRuleArgs{...}
type OutboundNatRuleInput interface {
	pulumi.Input

	ToOutboundNatRuleOutput() OutboundNatRuleOutput
	ToOutboundNatRuleOutputWithContext(context.Context) OutboundNatRuleOutput
}

// Outbound NAT pool of the load balancer.
type OutboundNatRuleArgs struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts pulumi.IntPtrInput `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceInput `pulumi:"backendAddressPool"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations SubResourceArrayInput `pulumi:"frontendIPConfigurations"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (OutboundNatRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundNatRule)(nil)).Elem()
}

func (i OutboundNatRuleArgs) ToOutboundNatRuleOutput() OutboundNatRuleOutput {
	return i.ToOutboundNatRuleOutputWithContext(context.Background())
}

func (i OutboundNatRuleArgs) ToOutboundNatRuleOutputWithContext(ctx context.Context) OutboundNatRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundNatRuleOutput)
}

// OutboundNatRuleArrayInput is an input type that accepts OutboundNatRuleArray and OutboundNatRuleArrayOutput values.
// You can construct a concrete instance of `OutboundNatRuleArrayInput` via:
//
//          OutboundNatRuleArray{ OutboundNatRuleArgs{...} }
type OutboundNatRuleArrayInput interface {
	pulumi.Input

	ToOutboundNatRuleArrayOutput() OutboundNatRuleArrayOutput
	ToOutboundNatRuleArrayOutputWithContext(context.Context) OutboundNatRuleArrayOutput
}

type OutboundNatRuleArray []OutboundNatRuleInput

func (OutboundNatRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundNatRule)(nil)).Elem()
}

func (i OutboundNatRuleArray) ToOutboundNatRuleArrayOutput() OutboundNatRuleArrayOutput {
	return i.ToOutboundNatRuleArrayOutputWithContext(context.Background())
}

func (i OutboundNatRuleArray) ToOutboundNatRuleArrayOutputWithContext(ctx context.Context) OutboundNatRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundNatRuleArrayOutput)
}

// Outbound NAT pool of the load balancer.
type OutboundNatRuleOutput struct{ *pulumi.OutputState }

func (OutboundNatRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundNatRule)(nil)).Elem()
}

func (o OutboundNatRuleOutput) ToOutboundNatRuleOutput() OutboundNatRuleOutput {
	return o
}

func (o OutboundNatRuleOutput) ToOutboundNatRuleOutputWithContext(ctx context.Context) OutboundNatRuleOutput {
	return o
}

// The number of outbound ports to be used for NAT.
func (o OutboundNatRuleOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OutboundNatRule) *int { return v.AllocatedOutboundPorts }).(pulumi.IntPtrOutput)
}

// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
func (o OutboundNatRuleOutput) BackendAddressPool() SubResourceOutput {
	return o.ApplyT(func(v OutboundNatRule) SubResource { return v.BackendAddressPool }).(SubResourceOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o OutboundNatRuleOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRule) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The Frontend IP addresses of the load balancer.
func (o OutboundNatRuleOutput) FrontendIPConfigurations() SubResourceArrayOutput {
	return o.ApplyT(func(v OutboundNatRule) []SubResource { return v.FrontendIPConfigurations }).(SubResourceArrayOutput)
}

// Resource ID.
func (o OutboundNatRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o OutboundNatRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o OutboundNatRuleOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRule) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type OutboundNatRuleArrayOutput struct{ *pulumi.OutputState }

func (OutboundNatRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundNatRule)(nil)).Elem()
}

func (o OutboundNatRuleArrayOutput) ToOutboundNatRuleArrayOutput() OutboundNatRuleArrayOutput {
	return o
}

func (o OutboundNatRuleArrayOutput) ToOutboundNatRuleArrayOutputWithContext(ctx context.Context) OutboundNatRuleArrayOutput {
	return o
}

func (o OutboundNatRuleArrayOutput) Index(i pulumi.IntInput) OutboundNatRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OutboundNatRule {
		return vs[0].([]OutboundNatRule)[vs[1].(int)]
	}).(OutboundNatRuleOutput)
}

// Outbound NAT pool of the load balancer.
type OutboundNatRuleResponse struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts *int `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceResponse `pulumi:"backendAddressPool"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations []SubResourceResponse `pulumi:"frontendIPConfigurations"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// OutboundNatRuleResponseInput is an input type that accepts OutboundNatRuleResponseArgs and OutboundNatRuleResponseOutput values.
// You can construct a concrete instance of `OutboundNatRuleResponseInput` via:
//
//          OutboundNatRuleResponseArgs{...}
type OutboundNatRuleResponseInput interface {
	pulumi.Input

	ToOutboundNatRuleResponseOutput() OutboundNatRuleResponseOutput
	ToOutboundNatRuleResponseOutputWithContext(context.Context) OutboundNatRuleResponseOutput
}

// Outbound NAT pool of the load balancer.
type OutboundNatRuleResponseArgs struct {
	// The number of outbound ports to be used for NAT.
	AllocatedOutboundPorts pulumi.IntPtrInput `pulumi:"allocatedOutboundPorts"`
	// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
	BackendAddressPool SubResourceResponseInput `pulumi:"backendAddressPool"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The Frontend IP addresses of the load balancer.
	FrontendIPConfigurations SubResourceResponseArrayInput `pulumi:"frontendIPConfigurations"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (OutboundNatRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundNatRuleResponse)(nil)).Elem()
}

func (i OutboundNatRuleResponseArgs) ToOutboundNatRuleResponseOutput() OutboundNatRuleResponseOutput {
	return i.ToOutboundNatRuleResponseOutputWithContext(context.Background())
}

func (i OutboundNatRuleResponseArgs) ToOutboundNatRuleResponseOutputWithContext(ctx context.Context) OutboundNatRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundNatRuleResponseOutput)
}

// OutboundNatRuleResponseArrayInput is an input type that accepts OutboundNatRuleResponseArray and OutboundNatRuleResponseArrayOutput values.
// You can construct a concrete instance of `OutboundNatRuleResponseArrayInput` via:
//
//          OutboundNatRuleResponseArray{ OutboundNatRuleResponseArgs{...} }
type OutboundNatRuleResponseArrayInput interface {
	pulumi.Input

	ToOutboundNatRuleResponseArrayOutput() OutboundNatRuleResponseArrayOutput
	ToOutboundNatRuleResponseArrayOutputWithContext(context.Context) OutboundNatRuleResponseArrayOutput
}

type OutboundNatRuleResponseArray []OutboundNatRuleResponseInput

func (OutboundNatRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundNatRuleResponse)(nil)).Elem()
}

func (i OutboundNatRuleResponseArray) ToOutboundNatRuleResponseArrayOutput() OutboundNatRuleResponseArrayOutput {
	return i.ToOutboundNatRuleResponseArrayOutputWithContext(context.Background())
}

func (i OutboundNatRuleResponseArray) ToOutboundNatRuleResponseArrayOutputWithContext(ctx context.Context) OutboundNatRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OutboundNatRuleResponseArrayOutput)
}

// Outbound NAT pool of the load balancer.
type OutboundNatRuleResponseOutput struct{ *pulumi.OutputState }

func (OutboundNatRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OutboundNatRuleResponse)(nil)).Elem()
}

func (o OutboundNatRuleResponseOutput) ToOutboundNatRuleResponseOutput() OutboundNatRuleResponseOutput {
	return o
}

func (o OutboundNatRuleResponseOutput) ToOutboundNatRuleResponseOutputWithContext(ctx context.Context) OutboundNatRuleResponseOutput {
	return o
}

// The number of outbound ports to be used for NAT.
func (o OutboundNatRuleResponseOutput) AllocatedOutboundPorts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OutboundNatRuleResponse) *int { return v.AllocatedOutboundPorts }).(pulumi.IntPtrOutput)
}

// A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend IPs.
func (o OutboundNatRuleResponseOutput) BackendAddressPool() SubResourceResponseOutput {
	return o.ApplyT(func(v OutboundNatRuleResponse) SubResourceResponse { return v.BackendAddressPool }).(SubResourceResponseOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o OutboundNatRuleResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRuleResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The Frontend IP addresses of the load balancer.
func (o OutboundNatRuleResponseOutput) FrontendIPConfigurations() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v OutboundNatRuleResponse) []SubResourceResponse { return v.FrontendIPConfigurations }).(SubResourceResponseArrayOutput)
}

// Resource ID.
func (o OutboundNatRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o OutboundNatRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets the provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o OutboundNatRuleResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OutboundNatRuleResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type OutboundNatRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (OutboundNatRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OutboundNatRuleResponse)(nil)).Elem()
}

func (o OutboundNatRuleResponseArrayOutput) ToOutboundNatRuleResponseArrayOutput() OutboundNatRuleResponseArrayOutput {
	return o
}

func (o OutboundNatRuleResponseArrayOutput) ToOutboundNatRuleResponseArrayOutputWithContext(ctx context.Context) OutboundNatRuleResponseArrayOutput {
	return o
}

func (o OutboundNatRuleResponseArrayOutput) Index(i pulumi.IntInput) OutboundNatRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OutboundNatRuleResponse {
		return vs[0].([]OutboundNatRuleResponse)[vs[1].(int)]
	}).(OutboundNatRuleResponseOutput)
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilter struct {
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalIPAddress *string `pulumi:"localIPAddress"`
	// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalPort *string `pulumi:"localPort"`
	// Protocol to be filtered on.
	Protocol *string `pulumi:"protocol"`
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemoteIPAddress *string `pulumi:"remoteIPAddress"`
	// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemotePort *string `pulumi:"remotePort"`
}

// PacketCaptureFilterInput is an input type that accepts PacketCaptureFilterArgs and PacketCaptureFilterOutput values.
// You can construct a concrete instance of `PacketCaptureFilterInput` via:
//
//          PacketCaptureFilterArgs{...}
type PacketCaptureFilterInput interface {
	pulumi.Input

	ToPacketCaptureFilterOutput() PacketCaptureFilterOutput
	ToPacketCaptureFilterOutputWithContext(context.Context) PacketCaptureFilterOutput
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterArgs struct {
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalIPAddress pulumi.StringPtrInput `pulumi:"localIPAddress"`
	// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalPort pulumi.StringPtrInput `pulumi:"localPort"`
	// Protocol to be filtered on.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemoteIPAddress pulumi.StringPtrInput `pulumi:"remoteIPAddress"`
	// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemotePort pulumi.StringPtrInput `pulumi:"remotePort"`
}

func (PacketCaptureFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureFilter)(nil)).Elem()
}

func (i PacketCaptureFilterArgs) ToPacketCaptureFilterOutput() PacketCaptureFilterOutput {
	return i.ToPacketCaptureFilterOutputWithContext(context.Background())
}

func (i PacketCaptureFilterArgs) ToPacketCaptureFilterOutputWithContext(ctx context.Context) PacketCaptureFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureFilterOutput)
}

// PacketCaptureFilterArrayInput is an input type that accepts PacketCaptureFilterArray and PacketCaptureFilterArrayOutput values.
// You can construct a concrete instance of `PacketCaptureFilterArrayInput` via:
//
//          PacketCaptureFilterArray{ PacketCaptureFilterArgs{...} }
type PacketCaptureFilterArrayInput interface {
	pulumi.Input

	ToPacketCaptureFilterArrayOutput() PacketCaptureFilterArrayOutput
	ToPacketCaptureFilterArrayOutputWithContext(context.Context) PacketCaptureFilterArrayOutput
}

type PacketCaptureFilterArray []PacketCaptureFilterInput

func (PacketCaptureFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketCaptureFilter)(nil)).Elem()
}

func (i PacketCaptureFilterArray) ToPacketCaptureFilterArrayOutput() PacketCaptureFilterArrayOutput {
	return i.ToPacketCaptureFilterArrayOutputWithContext(context.Background())
}

func (i PacketCaptureFilterArray) ToPacketCaptureFilterArrayOutputWithContext(ctx context.Context) PacketCaptureFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureFilterArrayOutput)
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureFilter)(nil)).Elem()
}

func (o PacketCaptureFilterOutput) ToPacketCaptureFilterOutput() PacketCaptureFilterOutput {
	return o
}

func (o PacketCaptureFilterOutput) ToPacketCaptureFilterOutputWithContext(ctx context.Context) PacketCaptureFilterOutput {
	return o
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) LocalIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.LocalIPAddress }).(pulumi.StringPtrOutput)
}

// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) LocalPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.LocalPort }).(pulumi.StringPtrOutput)
}

// Protocol to be filtered on.
func (o PacketCaptureFilterOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) RemoteIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.RemoteIPAddress }).(pulumi.StringPtrOutput)
}

// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterOutput) RemotePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilter) *string { return v.RemotePort }).(pulumi.StringPtrOutput)
}

type PacketCaptureFilterArrayOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketCaptureFilter)(nil)).Elem()
}

func (o PacketCaptureFilterArrayOutput) ToPacketCaptureFilterArrayOutput() PacketCaptureFilterArrayOutput {
	return o
}

func (o PacketCaptureFilterArrayOutput) ToPacketCaptureFilterArrayOutputWithContext(ctx context.Context) PacketCaptureFilterArrayOutput {
	return o
}

func (o PacketCaptureFilterArrayOutput) Index(i pulumi.IntInput) PacketCaptureFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PacketCaptureFilter {
		return vs[0].([]PacketCaptureFilter)[vs[1].(int)]
	}).(PacketCaptureFilterOutput)
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterResponse struct {
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalIPAddress *string `pulumi:"localIPAddress"`
	// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalPort *string `pulumi:"localPort"`
	// Protocol to be filtered on.
	Protocol *string `pulumi:"protocol"`
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemoteIPAddress *string `pulumi:"remoteIPAddress"`
	// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemotePort *string `pulumi:"remotePort"`
}

// PacketCaptureFilterResponseInput is an input type that accepts PacketCaptureFilterResponseArgs and PacketCaptureFilterResponseOutput values.
// You can construct a concrete instance of `PacketCaptureFilterResponseInput` via:
//
//          PacketCaptureFilterResponseArgs{...}
type PacketCaptureFilterResponseInput interface {
	pulumi.Input

	ToPacketCaptureFilterResponseOutput() PacketCaptureFilterResponseOutput
	ToPacketCaptureFilterResponseOutputWithContext(context.Context) PacketCaptureFilterResponseOutput
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterResponseArgs struct {
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalIPAddress pulumi.StringPtrInput `pulumi:"localIPAddress"`
	// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	LocalPort pulumi.StringPtrInput `pulumi:"localPort"`
	// Protocol to be filtered on.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemoteIPAddress pulumi.StringPtrInput `pulumi:"remoteIPAddress"`
	// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
	RemotePort pulumi.StringPtrInput `pulumi:"remotePort"`
}

func (PacketCaptureFilterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureFilterResponse)(nil)).Elem()
}

func (i PacketCaptureFilterResponseArgs) ToPacketCaptureFilterResponseOutput() PacketCaptureFilterResponseOutput {
	return i.ToPacketCaptureFilterResponseOutputWithContext(context.Background())
}

func (i PacketCaptureFilterResponseArgs) ToPacketCaptureFilterResponseOutputWithContext(ctx context.Context) PacketCaptureFilterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureFilterResponseOutput)
}

// PacketCaptureFilterResponseArrayInput is an input type that accepts PacketCaptureFilterResponseArray and PacketCaptureFilterResponseArrayOutput values.
// You can construct a concrete instance of `PacketCaptureFilterResponseArrayInput` via:
//
//          PacketCaptureFilterResponseArray{ PacketCaptureFilterResponseArgs{...} }
type PacketCaptureFilterResponseArrayInput interface {
	pulumi.Input

	ToPacketCaptureFilterResponseArrayOutput() PacketCaptureFilterResponseArrayOutput
	ToPacketCaptureFilterResponseArrayOutputWithContext(context.Context) PacketCaptureFilterResponseArrayOutput
}

type PacketCaptureFilterResponseArray []PacketCaptureFilterResponseInput

func (PacketCaptureFilterResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketCaptureFilterResponse)(nil)).Elem()
}

func (i PacketCaptureFilterResponseArray) ToPacketCaptureFilterResponseArrayOutput() PacketCaptureFilterResponseArrayOutput {
	return i.ToPacketCaptureFilterResponseArrayOutputWithContext(context.Background())
}

func (i PacketCaptureFilterResponseArray) ToPacketCaptureFilterResponseArrayOutputWithContext(ctx context.Context) PacketCaptureFilterResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureFilterResponseArrayOutput)
}

// Filter that is applied to packet capture request. Multiple filters can be applied.
type PacketCaptureFilterResponseOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureFilterResponse)(nil)).Elem()
}

func (o PacketCaptureFilterResponseOutput) ToPacketCaptureFilterResponseOutput() PacketCaptureFilterResponseOutput {
	return o
}

func (o PacketCaptureFilterResponseOutput) ToPacketCaptureFilterResponseOutputWithContext(ctx context.Context) PacketCaptureFilterResponseOutput {
	return o
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) LocalIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.LocalIPAddress }).(pulumi.StringPtrOutput)
}

// Local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) LocalPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.LocalPort }).(pulumi.StringPtrOutput)
}

// Protocol to be filtered on.
func (o PacketCaptureFilterResponseOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) RemoteIPAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.RemoteIPAddress }).(pulumi.StringPtrOutput)
}

// Remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Default = null.
func (o PacketCaptureFilterResponseOutput) RemotePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureFilterResponse) *string { return v.RemotePort }).(pulumi.StringPtrOutput)
}

type PacketCaptureFilterResponseArrayOutput struct{ *pulumi.OutputState }

func (PacketCaptureFilterResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketCaptureFilterResponse)(nil)).Elem()
}

func (o PacketCaptureFilterResponseArrayOutput) ToPacketCaptureFilterResponseArrayOutput() PacketCaptureFilterResponseArrayOutput {
	return o
}

func (o PacketCaptureFilterResponseArrayOutput) ToPacketCaptureFilterResponseArrayOutputWithContext(ctx context.Context) PacketCaptureFilterResponseArrayOutput {
	return o
}

func (o PacketCaptureFilterResponseArrayOutput) Index(i pulumi.IntInput) PacketCaptureFilterResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PacketCaptureFilterResponse {
		return vs[0].([]PacketCaptureFilterResponse)[vs[1].(int)]
	}).(PacketCaptureFilterResponseOutput)
}

// Describes the storage location for a packet capture session.
type PacketCaptureStorageLocation struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
	FilePath *string `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
	StorageId *string `pulumi:"storageId"`
	// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
	StoragePath *string `pulumi:"storagePath"`
}

// PacketCaptureStorageLocationInput is an input type that accepts PacketCaptureStorageLocationArgs and PacketCaptureStorageLocationOutput values.
// You can construct a concrete instance of `PacketCaptureStorageLocationInput` via:
//
//          PacketCaptureStorageLocationArgs{...}
type PacketCaptureStorageLocationInput interface {
	pulumi.Input

	ToPacketCaptureStorageLocationOutput() PacketCaptureStorageLocationOutput
	ToPacketCaptureStorageLocationOutputWithContext(context.Context) PacketCaptureStorageLocationOutput
}

// Describes the storage location for a packet capture session.
type PacketCaptureStorageLocationArgs struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
	StorageId pulumi.StringPtrInput `pulumi:"storageId"`
	// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
	StoragePath pulumi.StringPtrInput `pulumi:"storagePath"`
}

func (PacketCaptureStorageLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureStorageLocation)(nil)).Elem()
}

func (i PacketCaptureStorageLocationArgs) ToPacketCaptureStorageLocationOutput() PacketCaptureStorageLocationOutput {
	return i.ToPacketCaptureStorageLocationOutputWithContext(context.Background())
}

func (i PacketCaptureStorageLocationArgs) ToPacketCaptureStorageLocationOutputWithContext(ctx context.Context) PacketCaptureStorageLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationOutput)
}

func (i PacketCaptureStorageLocationArgs) ToPacketCaptureStorageLocationPtrOutput() PacketCaptureStorageLocationPtrOutput {
	return i.ToPacketCaptureStorageLocationPtrOutputWithContext(context.Background())
}

func (i PacketCaptureStorageLocationArgs) ToPacketCaptureStorageLocationPtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationOutput).ToPacketCaptureStorageLocationPtrOutputWithContext(ctx)
}

// PacketCaptureStorageLocationPtrInput is an input type that accepts PacketCaptureStorageLocationArgs, PacketCaptureStorageLocationPtr and PacketCaptureStorageLocationPtrOutput values.
// You can construct a concrete instance of `PacketCaptureStorageLocationPtrInput` via:
//
//          PacketCaptureStorageLocationArgs{...}
//
//  or:
//
//          nil
type PacketCaptureStorageLocationPtrInput interface {
	pulumi.Input

	ToPacketCaptureStorageLocationPtrOutput() PacketCaptureStorageLocationPtrOutput
	ToPacketCaptureStorageLocationPtrOutputWithContext(context.Context) PacketCaptureStorageLocationPtrOutput
}

type packetCaptureStorageLocationPtrType PacketCaptureStorageLocationArgs

func PacketCaptureStorageLocationPtr(v *PacketCaptureStorageLocationArgs) PacketCaptureStorageLocationPtrInput {
	return (*packetCaptureStorageLocationPtrType)(v)
}

func (*packetCaptureStorageLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCaptureStorageLocation)(nil)).Elem()
}

func (i *packetCaptureStorageLocationPtrType) ToPacketCaptureStorageLocationPtrOutput() PacketCaptureStorageLocationPtrOutput {
	return i.ToPacketCaptureStorageLocationPtrOutputWithContext(context.Background())
}

func (i *packetCaptureStorageLocationPtrType) ToPacketCaptureStorageLocationPtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationPtrOutput)
}

// Describes the storage location for a packet capture session.
type PacketCaptureStorageLocationOutput struct{ *pulumi.OutputState }

func (PacketCaptureStorageLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureStorageLocation)(nil)).Elem()
}

func (o PacketCaptureStorageLocationOutput) ToPacketCaptureStorageLocationOutput() PacketCaptureStorageLocationOutput {
	return o
}

func (o PacketCaptureStorageLocationOutput) ToPacketCaptureStorageLocationOutputWithContext(ctx context.Context) PacketCaptureStorageLocationOutput {
	return o
}

func (o PacketCaptureStorageLocationOutput) ToPacketCaptureStorageLocationPtrOutput() PacketCaptureStorageLocationPtrOutput {
	return o.ToPacketCaptureStorageLocationPtrOutputWithContext(context.Background())
}

func (o PacketCaptureStorageLocationOutput) ToPacketCaptureStorageLocationPtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocation) *PacketCaptureStorageLocation {
		return &v
	}).(PacketCaptureStorageLocationPtrOutput)
}

// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
func (o PacketCaptureStorageLocationOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocation) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
func (o PacketCaptureStorageLocationOutput) StorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocation) *string { return v.StorageId }).(pulumi.StringPtrOutput)
}

// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
func (o PacketCaptureStorageLocationOutput) StoragePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocation) *string { return v.StoragePath }).(pulumi.StringPtrOutput)
}

type PacketCaptureStorageLocationPtrOutput struct{ *pulumi.OutputState }

func (PacketCaptureStorageLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCaptureStorageLocation)(nil)).Elem()
}

func (o PacketCaptureStorageLocationPtrOutput) ToPacketCaptureStorageLocationPtrOutput() PacketCaptureStorageLocationPtrOutput {
	return o
}

func (o PacketCaptureStorageLocationPtrOutput) ToPacketCaptureStorageLocationPtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationPtrOutput {
	return o
}

func (o PacketCaptureStorageLocationPtrOutput) Elem() PacketCaptureStorageLocationOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocation) PacketCaptureStorageLocation { return *v }).(PacketCaptureStorageLocationOutput)
}

// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
func (o PacketCaptureStorageLocationPtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocation) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
func (o PacketCaptureStorageLocationPtrOutput) StorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocation) *string {
		if v == nil {
			return nil
		}
		return v.StorageId
	}).(pulumi.StringPtrOutput)
}

// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
func (o PacketCaptureStorageLocationPtrOutput) StoragePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocation) *string {
		if v == nil {
			return nil
		}
		return v.StoragePath
	}).(pulumi.StringPtrOutput)
}

// Describes the storage location for a packet capture session.
type PacketCaptureStorageLocationResponse struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
	FilePath *string `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
	StorageId *string `pulumi:"storageId"`
	// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
	StoragePath *string `pulumi:"storagePath"`
}

// PacketCaptureStorageLocationResponseInput is an input type that accepts PacketCaptureStorageLocationResponseArgs and PacketCaptureStorageLocationResponseOutput values.
// You can construct a concrete instance of `PacketCaptureStorageLocationResponseInput` via:
//
//          PacketCaptureStorageLocationResponseArgs{...}
type PacketCaptureStorageLocationResponseInput interface {
	pulumi.Input

	ToPacketCaptureStorageLocationResponseOutput() PacketCaptureStorageLocationResponseOutput
	ToPacketCaptureStorageLocationResponseOutputWithContext(context.Context) PacketCaptureStorageLocationResponseOutput
}

// Describes the storage location for a packet capture session.
type PacketCaptureStorageLocationResponseArgs struct {
	// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
	FilePath pulumi.StringPtrInput `pulumi:"filePath"`
	// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
	StorageId pulumi.StringPtrInput `pulumi:"storageId"`
	// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
	StoragePath pulumi.StringPtrInput `pulumi:"storagePath"`
}

func (PacketCaptureStorageLocationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureStorageLocationResponse)(nil)).Elem()
}

func (i PacketCaptureStorageLocationResponseArgs) ToPacketCaptureStorageLocationResponseOutput() PacketCaptureStorageLocationResponseOutput {
	return i.ToPacketCaptureStorageLocationResponseOutputWithContext(context.Background())
}

func (i PacketCaptureStorageLocationResponseArgs) ToPacketCaptureStorageLocationResponseOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationResponseOutput)
}

func (i PacketCaptureStorageLocationResponseArgs) ToPacketCaptureStorageLocationResponsePtrOutput() PacketCaptureStorageLocationResponsePtrOutput {
	return i.ToPacketCaptureStorageLocationResponsePtrOutputWithContext(context.Background())
}

func (i PacketCaptureStorageLocationResponseArgs) ToPacketCaptureStorageLocationResponsePtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationResponseOutput).ToPacketCaptureStorageLocationResponsePtrOutputWithContext(ctx)
}

// PacketCaptureStorageLocationResponsePtrInput is an input type that accepts PacketCaptureStorageLocationResponseArgs, PacketCaptureStorageLocationResponsePtr and PacketCaptureStorageLocationResponsePtrOutput values.
// You can construct a concrete instance of `PacketCaptureStorageLocationResponsePtrInput` via:
//
//          PacketCaptureStorageLocationResponseArgs{...}
//
//  or:
//
//          nil
type PacketCaptureStorageLocationResponsePtrInput interface {
	pulumi.Input

	ToPacketCaptureStorageLocationResponsePtrOutput() PacketCaptureStorageLocationResponsePtrOutput
	ToPacketCaptureStorageLocationResponsePtrOutputWithContext(context.Context) PacketCaptureStorageLocationResponsePtrOutput
}

type packetCaptureStorageLocationResponsePtrType PacketCaptureStorageLocationResponseArgs

func PacketCaptureStorageLocationResponsePtr(v *PacketCaptureStorageLocationResponseArgs) PacketCaptureStorageLocationResponsePtrInput {
	return (*packetCaptureStorageLocationResponsePtrType)(v)
}

func (*packetCaptureStorageLocationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCaptureStorageLocationResponse)(nil)).Elem()
}

func (i *packetCaptureStorageLocationResponsePtrType) ToPacketCaptureStorageLocationResponsePtrOutput() PacketCaptureStorageLocationResponsePtrOutput {
	return i.ToPacketCaptureStorageLocationResponsePtrOutputWithContext(context.Background())
}

func (i *packetCaptureStorageLocationResponsePtrType) ToPacketCaptureStorageLocationResponsePtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketCaptureStorageLocationResponsePtrOutput)
}

// Describes the storage location for a packet capture session.
type PacketCaptureStorageLocationResponseOutput struct{ *pulumi.OutputState }

func (PacketCaptureStorageLocationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketCaptureStorageLocationResponse)(nil)).Elem()
}

func (o PacketCaptureStorageLocationResponseOutput) ToPacketCaptureStorageLocationResponseOutput() PacketCaptureStorageLocationResponseOutput {
	return o
}

func (o PacketCaptureStorageLocationResponseOutput) ToPacketCaptureStorageLocationResponseOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponseOutput {
	return o
}

func (o PacketCaptureStorageLocationResponseOutput) ToPacketCaptureStorageLocationResponsePtrOutput() PacketCaptureStorageLocationResponsePtrOutput {
	return o.ToPacketCaptureStorageLocationResponsePtrOutputWithContext(context.Background())
}

func (o PacketCaptureStorageLocationResponseOutput) ToPacketCaptureStorageLocationResponsePtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponsePtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocationResponse) *PacketCaptureStorageLocationResponse {
		return &v
	}).(PacketCaptureStorageLocationResponsePtrOutput)
}

// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
func (o PacketCaptureStorageLocationResponseOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocationResponse) *string { return v.FilePath }).(pulumi.StringPtrOutput)
}

// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
func (o PacketCaptureStorageLocationResponseOutput) StorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocationResponse) *string { return v.StorageId }).(pulumi.StringPtrOutput)
}

// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
func (o PacketCaptureStorageLocationResponseOutput) StoragePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PacketCaptureStorageLocationResponse) *string { return v.StoragePath }).(pulumi.StringPtrOutput)
}

type PacketCaptureStorageLocationResponsePtrOutput struct{ *pulumi.OutputState }

func (PacketCaptureStorageLocationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PacketCaptureStorageLocationResponse)(nil)).Elem()
}

func (o PacketCaptureStorageLocationResponsePtrOutput) ToPacketCaptureStorageLocationResponsePtrOutput() PacketCaptureStorageLocationResponsePtrOutput {
	return o
}

func (o PacketCaptureStorageLocationResponsePtrOutput) ToPacketCaptureStorageLocationResponsePtrOutputWithContext(ctx context.Context) PacketCaptureStorageLocationResponsePtrOutput {
	return o
}

func (o PacketCaptureStorageLocationResponsePtrOutput) Elem() PacketCaptureStorageLocationResponseOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocationResponse) PacketCaptureStorageLocationResponse { return *v }).(PacketCaptureStorageLocationResponseOutput)
}

// A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
func (o PacketCaptureStorageLocationResponsePtrOutput) FilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.FilePath
	}).(pulumi.StringPtrOutput)
}

// The ID of the storage account to save the packet capture session. Required if no local file path is provided.
func (o PacketCaptureStorageLocationResponsePtrOutput) StorageId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.StorageId
	}).(pulumi.StringPtrOutput)
}

// The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
func (o PacketCaptureStorageLocationResponsePtrOutput) StoragePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PacketCaptureStorageLocationResponse) *string {
		if v == nil {
			return nil
		}
		return v.StoragePath
	}).(pulumi.StringPtrOutput)
}

// Policies for vpn gateway.
type Policies struct {
	// True if branch to branch traffic is allowed.
	AllowBranchToBranchTraffic *bool `pulumi:"allowBranchToBranchTraffic"`
	// True if Vnet to Vnet traffic is allowed.
	AllowVnetToVnetTraffic *bool `pulumi:"allowVnetToVnetTraffic"`
}

// PoliciesInput is an input type that accepts PoliciesArgs and PoliciesOutput values.
// You can construct a concrete instance of `PoliciesInput` via:
//
//          PoliciesArgs{...}
type PoliciesInput interface {
	pulumi.Input

	ToPoliciesOutput() PoliciesOutput
	ToPoliciesOutputWithContext(context.Context) PoliciesOutput
}

// Policies for vpn gateway.
type PoliciesArgs struct {
	// True if branch to branch traffic is allowed.
	AllowBranchToBranchTraffic pulumi.BoolPtrInput `pulumi:"allowBranchToBranchTraffic"`
	// True if Vnet to Vnet traffic is allowed.
	AllowVnetToVnetTraffic pulumi.BoolPtrInput `pulumi:"allowVnetToVnetTraffic"`
}

func (PoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Policies)(nil)).Elem()
}

func (i PoliciesArgs) ToPoliciesOutput() PoliciesOutput {
	return i.ToPoliciesOutputWithContext(context.Background())
}

func (i PoliciesArgs) ToPoliciesOutputWithContext(ctx context.Context) PoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesOutput)
}

func (i PoliciesArgs) ToPoliciesPtrOutput() PoliciesPtrOutput {
	return i.ToPoliciesPtrOutputWithContext(context.Background())
}

func (i PoliciesArgs) ToPoliciesPtrOutputWithContext(ctx context.Context) PoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesOutput).ToPoliciesPtrOutputWithContext(ctx)
}

// PoliciesPtrInput is an input type that accepts PoliciesArgs, PoliciesPtr and PoliciesPtrOutput values.
// You can construct a concrete instance of `PoliciesPtrInput` via:
//
//          PoliciesArgs{...}
//
//  or:
//
//          nil
type PoliciesPtrInput interface {
	pulumi.Input

	ToPoliciesPtrOutput() PoliciesPtrOutput
	ToPoliciesPtrOutputWithContext(context.Context) PoliciesPtrOutput
}

type policiesPtrType PoliciesArgs

func PoliciesPtr(v *PoliciesArgs) PoliciesPtrInput {
	return (*policiesPtrType)(v)
}

func (*policiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Policies)(nil)).Elem()
}

func (i *policiesPtrType) ToPoliciesPtrOutput() PoliciesPtrOutput {
	return i.ToPoliciesPtrOutputWithContext(context.Background())
}

func (i *policiesPtrType) ToPoliciesPtrOutputWithContext(ctx context.Context) PoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesPtrOutput)
}

// Policies for vpn gateway.
type PoliciesOutput struct{ *pulumi.OutputState }

func (PoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Policies)(nil)).Elem()
}

func (o PoliciesOutput) ToPoliciesOutput() PoliciesOutput {
	return o
}

func (o PoliciesOutput) ToPoliciesOutputWithContext(ctx context.Context) PoliciesOutput {
	return o
}

func (o PoliciesOutput) ToPoliciesPtrOutput() PoliciesPtrOutput {
	return o.ToPoliciesPtrOutputWithContext(context.Background())
}

func (o PoliciesOutput) ToPoliciesPtrOutputWithContext(ctx context.Context) PoliciesPtrOutput {
	return o.ApplyT(func(v Policies) *Policies {
		return &v
	}).(PoliciesPtrOutput)
}

// True if branch to branch traffic is allowed.
func (o PoliciesOutput) AllowBranchToBranchTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Policies) *bool { return v.AllowBranchToBranchTraffic }).(pulumi.BoolPtrOutput)
}

// True if Vnet to Vnet traffic is allowed.
func (o PoliciesOutput) AllowVnetToVnetTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v Policies) *bool { return v.AllowVnetToVnetTraffic }).(pulumi.BoolPtrOutput)
}

type PoliciesPtrOutput struct{ *pulumi.OutputState }

func (PoliciesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Policies)(nil)).Elem()
}

func (o PoliciesPtrOutput) ToPoliciesPtrOutput() PoliciesPtrOutput {
	return o
}

func (o PoliciesPtrOutput) ToPoliciesPtrOutputWithContext(ctx context.Context) PoliciesPtrOutput {
	return o
}

func (o PoliciesPtrOutput) Elem() PoliciesOutput {
	return o.ApplyT(func(v *Policies) Policies { return *v }).(PoliciesOutput)
}

// True if branch to branch traffic is allowed.
func (o PoliciesPtrOutput) AllowBranchToBranchTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Policies) *bool {
		if v == nil {
			return nil
		}
		return v.AllowBranchToBranchTraffic
	}).(pulumi.BoolPtrOutput)
}

// True if Vnet to Vnet traffic is allowed.
func (o PoliciesPtrOutput) AllowVnetToVnetTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Policies) *bool {
		if v == nil {
			return nil
		}
		return v.AllowVnetToVnetTraffic
	}).(pulumi.BoolPtrOutput)
}

// Policies for vpn gateway.
type PoliciesResponse struct {
	// True if branch to branch traffic is allowed.
	AllowBranchToBranchTraffic *bool `pulumi:"allowBranchToBranchTraffic"`
	// True if Vnet to Vnet traffic is allowed.
	AllowVnetToVnetTraffic *bool `pulumi:"allowVnetToVnetTraffic"`
}

// PoliciesResponseInput is an input type that accepts PoliciesResponseArgs and PoliciesResponseOutput values.
// You can construct a concrete instance of `PoliciesResponseInput` via:
//
//          PoliciesResponseArgs{...}
type PoliciesResponseInput interface {
	pulumi.Input

	ToPoliciesResponseOutput() PoliciesResponseOutput
	ToPoliciesResponseOutputWithContext(context.Context) PoliciesResponseOutput
}

// Policies for vpn gateway.
type PoliciesResponseArgs struct {
	// True if branch to branch traffic is allowed.
	AllowBranchToBranchTraffic pulumi.BoolPtrInput `pulumi:"allowBranchToBranchTraffic"`
	// True if Vnet to Vnet traffic is allowed.
	AllowVnetToVnetTraffic pulumi.BoolPtrInput `pulumi:"allowVnetToVnetTraffic"`
}

func (PoliciesResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoliciesResponse)(nil)).Elem()
}

func (i PoliciesResponseArgs) ToPoliciesResponseOutput() PoliciesResponseOutput {
	return i.ToPoliciesResponseOutputWithContext(context.Background())
}

func (i PoliciesResponseArgs) ToPoliciesResponseOutputWithContext(ctx context.Context) PoliciesResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesResponseOutput)
}

func (i PoliciesResponseArgs) ToPoliciesResponsePtrOutput() PoliciesResponsePtrOutput {
	return i.ToPoliciesResponsePtrOutputWithContext(context.Background())
}

func (i PoliciesResponseArgs) ToPoliciesResponsePtrOutputWithContext(ctx context.Context) PoliciesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesResponseOutput).ToPoliciesResponsePtrOutputWithContext(ctx)
}

// PoliciesResponsePtrInput is an input type that accepts PoliciesResponseArgs, PoliciesResponsePtr and PoliciesResponsePtrOutput values.
// You can construct a concrete instance of `PoliciesResponsePtrInput` via:
//
//          PoliciesResponseArgs{...}
//
//  or:
//
//          nil
type PoliciesResponsePtrInput interface {
	pulumi.Input

	ToPoliciesResponsePtrOutput() PoliciesResponsePtrOutput
	ToPoliciesResponsePtrOutputWithContext(context.Context) PoliciesResponsePtrOutput
}

type policiesResponsePtrType PoliciesResponseArgs

func PoliciesResponsePtr(v *PoliciesResponseArgs) PoliciesResponsePtrInput {
	return (*policiesResponsePtrType)(v)
}

func (*policiesResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoliciesResponse)(nil)).Elem()
}

func (i *policiesResponsePtrType) ToPoliciesResponsePtrOutput() PoliciesResponsePtrOutput {
	return i.ToPoliciesResponsePtrOutputWithContext(context.Background())
}

func (i *policiesResponsePtrType) ToPoliciesResponsePtrOutputWithContext(ctx context.Context) PoliciesResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoliciesResponsePtrOutput)
}

// Policies for vpn gateway.
type PoliciesResponseOutput struct{ *pulumi.OutputState }

func (PoliciesResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoliciesResponse)(nil)).Elem()
}

func (o PoliciesResponseOutput) ToPoliciesResponseOutput() PoliciesResponseOutput {
	return o
}

func (o PoliciesResponseOutput) ToPoliciesResponseOutputWithContext(ctx context.Context) PoliciesResponseOutput {
	return o
}

func (o PoliciesResponseOutput) ToPoliciesResponsePtrOutput() PoliciesResponsePtrOutput {
	return o.ToPoliciesResponsePtrOutputWithContext(context.Background())
}

func (o PoliciesResponseOutput) ToPoliciesResponsePtrOutputWithContext(ctx context.Context) PoliciesResponsePtrOutput {
	return o.ApplyT(func(v PoliciesResponse) *PoliciesResponse {
		return &v
	}).(PoliciesResponsePtrOutput)
}

// True if branch to branch traffic is allowed.
func (o PoliciesResponseOutput) AllowBranchToBranchTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoliciesResponse) *bool { return v.AllowBranchToBranchTraffic }).(pulumi.BoolPtrOutput)
}

// True if Vnet to Vnet traffic is allowed.
func (o PoliciesResponseOutput) AllowVnetToVnetTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoliciesResponse) *bool { return v.AllowVnetToVnetTraffic }).(pulumi.BoolPtrOutput)
}

type PoliciesResponsePtrOutput struct{ *pulumi.OutputState }

func (PoliciesResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoliciesResponse)(nil)).Elem()
}

func (o PoliciesResponsePtrOutput) ToPoliciesResponsePtrOutput() PoliciesResponsePtrOutput {
	return o
}

func (o PoliciesResponsePtrOutput) ToPoliciesResponsePtrOutputWithContext(ctx context.Context) PoliciesResponsePtrOutput {
	return o
}

func (o PoliciesResponsePtrOutput) Elem() PoliciesResponseOutput {
	return o.ApplyT(func(v *PoliciesResponse) PoliciesResponse { return *v }).(PoliciesResponseOutput)
}

// True if branch to branch traffic is allowed.
func (o PoliciesResponsePtrOutput) AllowBranchToBranchTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoliciesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowBranchToBranchTraffic
	}).(pulumi.BoolPtrOutput)
}

// True if Vnet to Vnet traffic is allowed.
func (o PoliciesResponsePtrOutput) AllowVnetToVnetTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoliciesResponse) *bool {
		if v == nil {
			return nil
		}
		return v.AllowVnetToVnetTraffic
	}).(pulumi.BoolPtrOutput)
}

// A load balancer probe.
type Probe struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes *int `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port int `pulumi:"port"`
	// The protocol of the end point. Possible values are: 'Http', 'Tcp', or 'Https'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath *string `pulumi:"requestPath"`
}

// ProbeInput is an input type that accepts ProbeArgs and ProbeOutput values.
// You can construct a concrete instance of `ProbeInput` via:
//
//          ProbeArgs{...}
type ProbeInput interface {
	pulumi.Input

	ToProbeOutput() ProbeOutput
	ToProbeOutputWithContext(context.Context) ProbeOutput
}

// A load balancer probe.
type ProbeArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes pulumi.IntPtrInput `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol of the end point. Possible values are: 'Http', 'Tcp', or 'Https'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath pulumi.StringPtrInput `pulumi:"requestPath"`
}

func (ProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Probe)(nil)).Elem()
}

func (i ProbeArgs) ToProbeOutput() ProbeOutput {
	return i.ToProbeOutputWithContext(context.Background())
}

func (i ProbeArgs) ToProbeOutputWithContext(ctx context.Context) ProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeOutput)
}

// ProbeArrayInput is an input type that accepts ProbeArray and ProbeArrayOutput values.
// You can construct a concrete instance of `ProbeArrayInput` via:
//
//          ProbeArray{ ProbeArgs{...} }
type ProbeArrayInput interface {
	pulumi.Input

	ToProbeArrayOutput() ProbeArrayOutput
	ToProbeArrayOutputWithContext(context.Context) ProbeArrayOutput
}

type ProbeArray []ProbeInput

func (ProbeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Probe)(nil)).Elem()
}

func (i ProbeArray) ToProbeArrayOutput() ProbeArrayOutput {
	return i.ToProbeArrayOutputWithContext(context.Background())
}

func (i ProbeArray) ToProbeArrayOutputWithContext(ctx context.Context) ProbeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeArrayOutput)
}

// A load balancer probe.
type ProbeOutput struct{ *pulumi.OutputState }

func (ProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Probe)(nil)).Elem()
}

func (o ProbeOutput) ToProbeOutput() ProbeOutput {
	return o
}

func (o ProbeOutput) ToProbeOutputWithContext(ctx context.Context) ProbeOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ProbeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Probe) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ProbeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Probe) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
func (o ProbeOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Probe) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ProbeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Probe) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
func (o ProbeOutput) NumberOfProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v Probe) *int { return v.NumberOfProbes }).(pulumi.IntPtrOutput)
}

// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
func (o ProbeOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v Probe) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol of the end point. Possible values are: 'Http', 'Tcp', or 'Https'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
func (o ProbeOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v Probe) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ProbeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Probe) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
func (o ProbeOutput) RequestPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v Probe) *string { return v.RequestPath }).(pulumi.StringPtrOutput)
}

type ProbeArrayOutput struct{ *pulumi.OutputState }

func (ProbeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Probe)(nil)).Elem()
}

func (o ProbeArrayOutput) ToProbeArrayOutput() ProbeArrayOutput {
	return o
}

func (o ProbeArrayOutput) ToProbeArrayOutputWithContext(ctx context.Context) ProbeArrayOutput {
	return o
}

func (o ProbeArrayOutput) Index(i pulumi.IntInput) ProbeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Probe {
		return vs[0].([]Probe)[vs[1].(int)]
	}).(ProbeOutput)
}

// A load balancer probe.
type ProbeResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// The load balancer rules that use this probe.
	LoadBalancingRules []SubResourceResponse `pulumi:"loadBalancingRules"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes *int `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port int `pulumi:"port"`
	// The protocol of the end point. Possible values are: 'Http', 'Tcp', or 'Https'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol string `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath *string `pulumi:"requestPath"`
}

// ProbeResponseInput is an input type that accepts ProbeResponseArgs and ProbeResponseOutput values.
// You can construct a concrete instance of `ProbeResponseInput` via:
//
//          ProbeResponseArgs{...}
type ProbeResponseInput interface {
	pulumi.Input

	ToProbeResponseOutput() ProbeResponseOutput
	ToProbeResponseOutputWithContext(context.Context) ProbeResponseOutput
}

// A load balancer probe.
type ProbeResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// The load balancer rules that use this probe.
	LoadBalancingRules SubResourceResponseArrayInput `pulumi:"loadBalancingRules"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
	NumberOfProbes pulumi.IntPtrInput `pulumi:"numberOfProbes"`
	// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol of the end point. Possible values are: 'Http', 'Tcp', or 'Https'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
	RequestPath pulumi.StringPtrInput `pulumi:"requestPath"`
}

func (ProbeResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeResponse)(nil)).Elem()
}

func (i ProbeResponseArgs) ToProbeResponseOutput() ProbeResponseOutput {
	return i.ToProbeResponseOutputWithContext(context.Background())
}

func (i ProbeResponseArgs) ToProbeResponseOutputWithContext(ctx context.Context) ProbeResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeResponseOutput)
}

// ProbeResponseArrayInput is an input type that accepts ProbeResponseArray and ProbeResponseArrayOutput values.
// You can construct a concrete instance of `ProbeResponseArrayInput` via:
//
//          ProbeResponseArray{ ProbeResponseArgs{...} }
type ProbeResponseArrayInput interface {
	pulumi.Input

	ToProbeResponseArrayOutput() ProbeResponseArrayOutput
	ToProbeResponseArrayOutputWithContext(context.Context) ProbeResponseArrayOutput
}

type ProbeResponseArray []ProbeResponseInput

func (ProbeResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProbeResponse)(nil)).Elem()
}

func (i ProbeResponseArray) ToProbeResponseArrayOutput() ProbeResponseArrayOutput {
	return i.ToProbeResponseArrayOutputWithContext(context.Background())
}

func (i ProbeResponseArray) ToProbeResponseArrayOutputWithContext(ctx context.Context) ProbeResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProbeResponseArrayOutput)
}

// A load balancer probe.
type ProbeResponseOutput struct{ *pulumi.OutputState }

func (ProbeResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProbeResponse)(nil)).Elem()
}

func (o ProbeResponseOutput) ToProbeResponseOutput() ProbeResponseOutput {
	return o
}

func (o ProbeResponseOutput) ToProbeResponseOutputWithContext(ctx context.Context) ProbeResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ProbeResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o ProbeResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the interval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking the instance out of rotation. The default value is 15, the minimum value is 5.
func (o ProbeResponseOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The load balancer rules that use this probe.
func (o ProbeResponseOutput) LoadBalancingRules() SubResourceResponseArrayOutput {
	return o.ApplyT(func(v ProbeResponse) []SubResourceResponse { return v.LoadBalancingRules }).(SubResourceResponseArrayOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ProbeResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The number of probes where if no response, will result in stopping further traffic from being delivered to the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used in Azure.
func (o ProbeResponseOutput) NumberOfProbes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *int { return v.NumberOfProbes }).(pulumi.IntPtrOutput)
}

// The port for communicating the probe. Possible values range from 1 to 65535, inclusive.
func (o ProbeResponseOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ProbeResponse) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol of the end point. Possible values are: 'Http', 'Tcp', or 'Https'. If 'Tcp' is specified, a received ACK is required for the probe to be successful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be successful.
func (o ProbeResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ProbeResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// Gets the provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o ProbeResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The URI used for requesting health status from the VM. Path is required if a protocol is set to http. Otherwise, it is not allowed. There is no default value.
func (o ProbeResponseOutput) RequestPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProbeResponse) *string { return v.RequestPath }).(pulumi.StringPtrOutput)
}

type ProbeResponseArrayOutput struct{ *pulumi.OutputState }

func (ProbeResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProbeResponse)(nil)).Elem()
}

func (o ProbeResponseArrayOutput) ToProbeResponseArrayOutput() ProbeResponseArrayOutput {
	return o
}

func (o ProbeResponseArrayOutput) ToProbeResponseArrayOutputWithContext(ctx context.Context) ProbeResponseArrayOutput {
	return o
}

func (o ProbeResponseArrayOutput) Index(i pulumi.IntInput) ProbeResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProbeResponse {
		return vs[0].([]ProbeResponse)[vs[1].(int)]
	}).(ProbeResponseOutput)
}

// Public IP address resource.
type PublicIPAddressType struct {
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings *PublicIPAddressDnsSettings `pulumi:"dnsSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The IP address associated with the public IP address resource.
	IpAddress *string `pulumi:"ipAddress"`
	// The list of tags associated with the public IP address.
	IpTags []IpTag `pulumi:"ipTags"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
	PublicIPAddressVersion *string `pulumi:"publicIPAddressVersion"`
	// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PublicIPAllocationMethod *string `pulumi:"publicIPAllocationMethod"`
	// The resource GUID property of the public IP resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// The public IP address SKU.
	Sku *PublicIPAddressSku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// PublicIPAddressTypeInput is an input type that accepts PublicIPAddressTypeArgs and PublicIPAddressTypeOutput values.
// You can construct a concrete instance of `PublicIPAddressTypeInput` via:
//
//          PublicIPAddressTypeArgs{...}
type PublicIPAddressTypeInput interface {
	pulumi.Input

	ToPublicIPAddressTypeOutput() PublicIPAddressTypeOutput
	ToPublicIPAddressTypeOutputWithContext(context.Context) PublicIPAddressTypeOutput
}

// Public IP address resource.
type PublicIPAddressTypeArgs struct {
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings PublicIPAddressDnsSettingsPtrInput `pulumi:"dnsSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The IP address associated with the public IP address resource.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The list of tags associated with the public IP address.
	IpTags IpTagArrayInput `pulumi:"ipTags"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
	PublicIPAddressVersion pulumi.StringPtrInput `pulumi:"publicIPAddressVersion"`
	// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PublicIPAllocationMethod pulumi.StringPtrInput `pulumi:"publicIPAllocationMethod"`
	// The resource GUID property of the public IP resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// The public IP address SKU.
	Sku PublicIPAddressSkuPtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (PublicIPAddressTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressType)(nil)).Elem()
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypeOutput() PublicIPAddressTypeOutput {
	return i.ToPublicIPAddressTypeOutputWithContext(context.Background())
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypeOutputWithContext(ctx context.Context) PublicIPAddressTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressTypeOutput)
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return i.ToPublicIPAddressTypePtrOutputWithContext(context.Background())
}

func (i PublicIPAddressTypeArgs) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressTypeOutput).ToPublicIPAddressTypePtrOutputWithContext(ctx)
}

// PublicIPAddressTypePtrInput is an input type that accepts PublicIPAddressTypeArgs, PublicIPAddressTypePtr and PublicIPAddressTypePtrOutput values.
// You can construct a concrete instance of `PublicIPAddressTypePtrInput` via:
//
//          PublicIPAddressTypeArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressTypePtrInput interface {
	pulumi.Input

	ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput
	ToPublicIPAddressTypePtrOutputWithContext(context.Context) PublicIPAddressTypePtrOutput
}

type publicIPAddressTypePtrType PublicIPAddressTypeArgs

func PublicIPAddressTypePtr(v *PublicIPAddressTypeArgs) PublicIPAddressTypePtrInput {
	return (*publicIPAddressTypePtrType)(v)
}

func (*publicIPAddressTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressType)(nil)).Elem()
}

func (i *publicIPAddressTypePtrType) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return i.ToPublicIPAddressTypePtrOutputWithContext(context.Background())
}

func (i *publicIPAddressTypePtrType) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressTypePtrOutput)
}

// Public IP address resource.
type PublicIPAddressTypeOutput struct{ *pulumi.OutputState }

func (PublicIPAddressTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressType)(nil)).Elem()
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypeOutput() PublicIPAddressTypeOutput {
	return o
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypeOutputWithContext(ctx context.Context) PublicIPAddressTypeOutput {
	return o
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return o.ToPublicIPAddressTypePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressTypeOutput) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *PublicIPAddressType {
		return &v
	}).(PublicIPAddressTypePtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressTypeOutput) DnsSettings() PublicIPAddressDnsSettingsPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *PublicIPAddressDnsSettings { return v.DnsSettings }).(PublicIPAddressDnsSettingsPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o PublicIPAddressTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressTypeOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressTypeOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressTypeOutput) IpTags() IpTagArrayOutput {
	return o.ApplyT(func(v PublicIPAddressType) []IpTag { return v.IpTags }).(IpTagArrayOutput)
}

// Resource location.
func (o PublicIPAddressTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o PublicIPAddressTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
func (o PublicIPAddressTypeOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.PublicIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o PublicIPAddressTypeOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.PublicIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the public IP resource.
func (o PublicIPAddressTypeOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressTypeOutput) Sku() PublicIPAddressSkuPtrOutput {
	return o.ApplyT(func(v PublicIPAddressType) *PublicIPAddressSku { return v.Sku }).(PublicIPAddressSkuPtrOutput)
}

// Resource tags.
func (o PublicIPAddressTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PublicIPAddressType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressTypeOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PublicIPAddressType) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type PublicIPAddressTypePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressType)(nil)).Elem()
}

func (o PublicIPAddressTypePtrOutput) ToPublicIPAddressTypePtrOutput() PublicIPAddressTypePtrOutput {
	return o
}

func (o PublicIPAddressTypePtrOutput) ToPublicIPAddressTypePtrOutputWithContext(ctx context.Context) PublicIPAddressTypePtrOutput {
	return o
}

func (o PublicIPAddressTypePtrOutput) Elem() PublicIPAddressTypeOutput {
	return o.ApplyT(func(v *PublicIPAddressType) PublicIPAddressType { return *v }).(PublicIPAddressTypeOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressTypePtrOutput) DnsSettings() PublicIPAddressDnsSettingsPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *PublicIPAddressDnsSettings {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(PublicIPAddressDnsSettingsPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o PublicIPAddressTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressTypePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressTypePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressTypePtrOutput) IpTags() IpTagArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressType) []IpTag {
		if v == nil {
			return nil
		}
		return v.IpTags
	}).(IpTagArrayOutput)
}

// Resource location.
func (o PublicIPAddressTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o PublicIPAddressTypePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
func (o PublicIPAddressTypePtrOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o PublicIPAddressTypePtrOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the public IP resource.
func (o PublicIPAddressTypePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressTypePtrOutput) Sku() PublicIPAddressSkuPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressType) *PublicIPAddressSku {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(PublicIPAddressSkuPtrOutput)
}

// Resource tags.
func (o PublicIPAddressTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PublicIPAddressType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressTypePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressType) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettings struct {
	// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn *string `pulumi:"fqdn"`
	// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn *string `pulumi:"reverseFqdn"`
}

// PublicIPAddressDnsSettingsInput is an input type that accepts PublicIPAddressDnsSettingsArgs and PublicIPAddressDnsSettingsOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsInput` via:
//
//          PublicIPAddressDnsSettingsArgs{...}
type PublicIPAddressDnsSettingsInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsOutput() PublicIPAddressDnsSettingsOutput
	ToPublicIPAddressDnsSettingsOutputWithContext(context.Context) PublicIPAddressDnsSettingsOutput
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettingsArgs struct {
	// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel pulumi.StringPtrInput `pulumi:"domainNameLabel"`
	// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn pulumi.StringPtrInput `pulumi:"reverseFqdn"`
}

func (PublicIPAddressDnsSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettings)(nil)).Elem()
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsOutput() PublicIPAddressDnsSettingsOutput {
	return i.ToPublicIPAddressDnsSettingsOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsOutput)
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return i.ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsArgs) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsOutput).ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx)
}

// PublicIPAddressDnsSettingsPtrInput is an input type that accepts PublicIPAddressDnsSettingsArgs, PublicIPAddressDnsSettingsPtr and PublicIPAddressDnsSettingsPtrOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsPtrInput` via:
//
//          PublicIPAddressDnsSettingsArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressDnsSettingsPtrInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput
	ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Context) PublicIPAddressDnsSettingsPtrOutput
}

type publicIPAddressDnsSettingsPtrType PublicIPAddressDnsSettingsArgs

func PublicIPAddressDnsSettingsPtr(v *PublicIPAddressDnsSettingsArgs) PublicIPAddressDnsSettingsPtrInput {
	return (*publicIPAddressDnsSettingsPtrType)(v)
}

func (*publicIPAddressDnsSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettings)(nil)).Elem()
}

func (i *publicIPAddressDnsSettingsPtrType) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return i.ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Background())
}

func (i *publicIPAddressDnsSettingsPtrType) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsPtrOutput)
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettingsOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettings)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsOutput() PublicIPAddressDnsSettingsOutput {
	return o
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsOutput {
	return o
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return o.ToPublicIPAddressDnsSettingsPtrOutputWithContext(context.Background())
}

func (o PublicIPAddressDnsSettingsOutput) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *PublicIPAddressDnsSettings {
		return &v
	}).(PublicIPAddressDnsSettingsPtrOutput)
}

// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *string { return v.DomainNameLabel }).(pulumi.StringPtrOutput)
}

// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettings) *string { return v.ReverseFqdn }).(pulumi.StringPtrOutput)
}

type PublicIPAddressDnsSettingsPtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettings)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsPtrOutput) ToPublicIPAddressDnsSettingsPtrOutput() PublicIPAddressDnsSettingsPtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsPtrOutput) ToPublicIPAddressDnsSettingsPtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsPtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsPtrOutput) Elem() PublicIPAddressDnsSettingsOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) PublicIPAddressDnsSettings { return *v }).(PublicIPAddressDnsSettingsOutput)
}

// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsPtrOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.DomainNameLabel
	}).(pulumi.StringPtrOutput)
}

// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsPtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsPtrOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettings) *string {
		if v == nil {
			return nil
		}
		return v.ReverseFqdn
	}).(pulumi.StringPtrOutput)
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettingsResponse struct {
	// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel *string `pulumi:"domainNameLabel"`
	// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn *string `pulumi:"fqdn"`
	// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn *string `pulumi:"reverseFqdn"`
}

// PublicIPAddressDnsSettingsResponseInput is an input type that accepts PublicIPAddressDnsSettingsResponseArgs and PublicIPAddressDnsSettingsResponseOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsResponseInput` via:
//
//          PublicIPAddressDnsSettingsResponseArgs{...}
type PublicIPAddressDnsSettingsResponseInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsResponseOutput() PublicIPAddressDnsSettingsResponseOutput
	ToPublicIPAddressDnsSettingsResponseOutputWithContext(context.Context) PublicIPAddressDnsSettingsResponseOutput
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettingsResponseArgs struct {
	// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
	DomainNameLabel pulumi.StringPtrInput `pulumi:"domainNameLabel"`
	// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
	Fqdn pulumi.StringPtrInput `pulumi:"fqdn"`
	// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
	ReverseFqdn pulumi.StringPtrInput `pulumi:"reverseFqdn"`
}

func (PublicIPAddressDnsSettingsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (i PublicIPAddressDnsSettingsResponseArgs) ToPublicIPAddressDnsSettingsResponseOutput() PublicIPAddressDnsSettingsResponseOutput {
	return i.ToPublicIPAddressDnsSettingsResponseOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsResponseArgs) ToPublicIPAddressDnsSettingsResponseOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsResponseOutput)
}

func (i PublicIPAddressDnsSettingsResponseArgs) ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput {
	return i.ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i PublicIPAddressDnsSettingsResponseArgs) ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsResponseOutput).ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx)
}

// PublicIPAddressDnsSettingsResponsePtrInput is an input type that accepts PublicIPAddressDnsSettingsResponseArgs, PublicIPAddressDnsSettingsResponsePtr and PublicIPAddressDnsSettingsResponsePtrOutput values.
// You can construct a concrete instance of `PublicIPAddressDnsSettingsResponsePtrInput` via:
//
//          PublicIPAddressDnsSettingsResponseArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressDnsSettingsResponsePtrInput interface {
	pulumi.Input

	ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput
	ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(context.Context) PublicIPAddressDnsSettingsResponsePtrOutput
}

type publicIPAddressDnsSettingsResponsePtrType PublicIPAddressDnsSettingsResponseArgs

func PublicIPAddressDnsSettingsResponsePtr(v *PublicIPAddressDnsSettingsResponseArgs) PublicIPAddressDnsSettingsResponsePtrInput {
	return (*publicIPAddressDnsSettingsResponsePtrType)(v)
}

func (*publicIPAddressDnsSettingsResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (i *publicIPAddressDnsSettingsResponsePtrType) ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput {
	return i.ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (i *publicIPAddressDnsSettingsResponsePtrType) ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// Contains FQDN of the DNS record associated with the public IP address
type PublicIPAddressDnsSettingsResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponseOutput() PublicIPAddressDnsSettingsResponseOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponseOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponseOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressDnsSettingsResponseOutput) ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *PublicIPAddressDnsSettingsResponse {
		return &v
	}).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsResponseOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.DomainNameLabel }).(pulumi.StringPtrOutput)
}

// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsResponseOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.Fqdn }).(pulumi.StringPtrOutput)
}

// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsResponseOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressDnsSettingsResponse) *string { return v.ReverseFqdn }).(pulumi.StringPtrOutput)
}

type PublicIPAddressDnsSettingsResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressDnsSettingsResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressDnsSettingsResponse)(nil)).Elem()
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) ToPublicIPAddressDnsSettingsResponsePtrOutput() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) ToPublicIPAddressDnsSettingsResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressDnsSettingsResponsePtrOutput {
	return o
}

func (o PublicIPAddressDnsSettingsResponsePtrOutput) Elem() PublicIPAddressDnsSettingsResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) PublicIPAddressDnsSettingsResponse { return *v }).(PublicIPAddressDnsSettingsResponseOutput)
}

// Gets or sets the Domain name label.The concatenation of the domain name label and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address. If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) DomainNameLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.DomainNameLabel
	}).(pulumi.StringPtrOutput)
}

// Gets the FQDN, Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) Fqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.Fqdn
	}).(pulumi.StringPtrOutput)
}

// Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
func (o PublicIPAddressDnsSettingsResponsePtrOutput) ReverseFqdn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressDnsSettingsResponse) *string {
		if v == nil {
			return nil
		}
		return v.ReverseFqdn
	}).(pulumi.StringPtrOutput)
}

// Public IP address resource.
type PublicIPAddressResponse struct {
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings *PublicIPAddressDnsSettingsResponse `pulumi:"dnsSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes *int `pulumi:"idleTimeoutInMinutes"`
	// The IP address associated with the public IP address resource.
	IpAddress *string `pulumi:"ipAddress"`
	// The IP configuration associated with the public IP address.
	IpConfiguration IPConfigurationResponse `pulumi:"ipConfiguration"`
	// The list of tags associated with the public IP address.
	IpTags []IpTagResponse `pulumi:"ipTags"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
	PublicIPAddressVersion *string `pulumi:"publicIPAddressVersion"`
	// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PublicIPAllocationMethod *string `pulumi:"publicIPAllocationMethod"`
	// The resource GUID property of the public IP resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// The public IP address SKU.
	Sku *PublicIPAddressSkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones []string `pulumi:"zones"`
}

// PublicIPAddressResponseInput is an input type that accepts PublicIPAddressResponseArgs and PublicIPAddressResponseOutput values.
// You can construct a concrete instance of `PublicIPAddressResponseInput` via:
//
//          PublicIPAddressResponseArgs{...}
type PublicIPAddressResponseInput interface {
	pulumi.Input

	ToPublicIPAddressResponseOutput() PublicIPAddressResponseOutput
	ToPublicIPAddressResponseOutputWithContext(context.Context) PublicIPAddressResponseOutput
}

// Public IP address resource.
type PublicIPAddressResponseArgs struct {
	// The FQDN of the DNS record associated with the public IP address.
	DnsSettings PublicIPAddressDnsSettingsResponsePtrInput `pulumi:"dnsSettings"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The idle timeout of the public IP address.
	IdleTimeoutInMinutes pulumi.IntPtrInput `pulumi:"idleTimeoutInMinutes"`
	// The IP address associated with the public IP address resource.
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	// The IP configuration associated with the public IP address.
	IpConfiguration IPConfigurationResponseInput `pulumi:"ipConfiguration"`
	// The list of tags associated with the public IP address.
	IpTags IpTagResponseArrayInput `pulumi:"ipTags"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
	PublicIPAddressVersion pulumi.StringPtrInput `pulumi:"publicIPAddressVersion"`
	// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PublicIPAllocationMethod pulumi.StringPtrInput `pulumi:"publicIPAllocationMethod"`
	// The resource GUID property of the public IP resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// The public IP address SKU.
	Sku PublicIPAddressSkuResponsePtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// A list of availability zones denoting the IP allocated for the resource needs to come from.
	Zones pulumi.StringArrayInput `pulumi:"zones"`
}

func (PublicIPAddressResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressResponse)(nil)).Elem()
}

func (i PublicIPAddressResponseArgs) ToPublicIPAddressResponseOutput() PublicIPAddressResponseOutput {
	return i.ToPublicIPAddressResponseOutputWithContext(context.Background())
}

func (i PublicIPAddressResponseArgs) ToPublicIPAddressResponseOutputWithContext(ctx context.Context) PublicIPAddressResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressResponseOutput)
}

func (i PublicIPAddressResponseArgs) ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput {
	return i.ToPublicIPAddressResponsePtrOutputWithContext(context.Background())
}

func (i PublicIPAddressResponseArgs) ToPublicIPAddressResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressResponseOutput).ToPublicIPAddressResponsePtrOutputWithContext(ctx)
}

// PublicIPAddressResponsePtrInput is an input type that accepts PublicIPAddressResponseArgs, PublicIPAddressResponsePtr and PublicIPAddressResponsePtrOutput values.
// You can construct a concrete instance of `PublicIPAddressResponsePtrInput` via:
//
//          PublicIPAddressResponseArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressResponsePtrInput interface {
	pulumi.Input

	ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput
	ToPublicIPAddressResponsePtrOutputWithContext(context.Context) PublicIPAddressResponsePtrOutput
}

type publicIPAddressResponsePtrType PublicIPAddressResponseArgs

func PublicIPAddressResponsePtr(v *PublicIPAddressResponseArgs) PublicIPAddressResponsePtrInput {
	return (*publicIPAddressResponsePtrType)(v)
}

func (*publicIPAddressResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressResponse)(nil)).Elem()
}

func (i *publicIPAddressResponsePtrType) ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput {
	return i.ToPublicIPAddressResponsePtrOutputWithContext(context.Background())
}

func (i *publicIPAddressResponsePtrType) ToPublicIPAddressResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressResponsePtrOutput)
}

// Public IP address resource.
type PublicIPAddressResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressResponse)(nil)).Elem()
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponseOutput() PublicIPAddressResponseOutput {
	return o
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponseOutputWithContext(ctx context.Context) PublicIPAddressResponseOutput {
	return o
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput {
	return o.ToPublicIPAddressResponsePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressResponseOutput) ToPublicIPAddressResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressResponse {
		return &v
	}).(PublicIPAddressResponsePtrOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressResponseOutput) DnsSettings() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressDnsSettingsResponse { return v.DnsSettings }).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o PublicIPAddressResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressResponseOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *int { return v.IdleTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressResponseOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

// The IP configuration associated with the public IP address.
func (o PublicIPAddressResponseOutput) IpConfiguration() IPConfigurationResponseOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) IPConfigurationResponse { return v.IpConfiguration }).(IPConfigurationResponseOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressResponseOutput) IpTags() IpTagResponseArrayOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) []IpTagResponse { return v.IpTags }).(IpTagResponseArrayOutput)
}

// Resource location.
func (o PublicIPAddressResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PublicIPAddressResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o PublicIPAddressResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
func (o PublicIPAddressResponseOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.PublicIPAddressVersion }).(pulumi.StringPtrOutput)
}

// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o PublicIPAddressResponseOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.PublicIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the public IP resource.
func (o PublicIPAddressResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressResponseOutput) Sku() PublicIPAddressSkuResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) *PublicIPAddressSkuResponse { return v.Sku }).(PublicIPAddressSkuResponsePtrOutput)
}

// Resource tags.
func (o PublicIPAddressResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o PublicIPAddressResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) string { return v.Type }).(pulumi.StringOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressResponseOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PublicIPAddressResponse) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

type PublicIPAddressResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressResponse)(nil)).Elem()
}

func (o PublicIPAddressResponsePtrOutput) ToPublicIPAddressResponsePtrOutput() PublicIPAddressResponsePtrOutput {
	return o
}

func (o PublicIPAddressResponsePtrOutput) ToPublicIPAddressResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressResponsePtrOutput {
	return o
}

func (o PublicIPAddressResponsePtrOutput) Elem() PublicIPAddressResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) PublicIPAddressResponse { return *v }).(PublicIPAddressResponseOutput)
}

// The FQDN of the DNS record associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) DnsSettings() PublicIPAddressDnsSettingsResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *PublicIPAddressDnsSettingsResponse {
		if v == nil {
			return nil
		}
		return v.DnsSettings
	}).(PublicIPAddressDnsSettingsResponsePtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o PublicIPAddressResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o PublicIPAddressResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The idle timeout of the public IP address.
func (o PublicIPAddressResponsePtrOutput) IdleTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *int {
		if v == nil {
			return nil
		}
		return v.IdleTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

// The IP address associated with the public IP address resource.
func (o PublicIPAddressResponsePtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.IpAddress
	}).(pulumi.StringPtrOutput)
}

// The IP configuration associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) IpConfiguration() IPConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *IPConfigurationResponse {
		if v == nil {
			return nil
		}
		return &v.IpConfiguration
	}).(IPConfigurationResponsePtrOutput)
}

// The list of tags associated with the public IP address.
func (o PublicIPAddressResponsePtrOutput) IpTags() IpTagResponseArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) []IpTagResponse {
		if v == nil {
			return nil
		}
		return v.IpTags
	}).(IpTagResponseArrayOutput)
}

// Resource location.
func (o PublicIPAddressResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o PublicIPAddressResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o PublicIPAddressResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
func (o PublicIPAddressResponsePtrOutput) PublicIPAddressVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAddressVersion
	}).(pulumi.StringPtrOutput)
}

// The public IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o PublicIPAddressResponsePtrOutput) PublicIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.PublicIPAllocationMethod
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the public IP resource.
func (o PublicIPAddressResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The public IP address SKU.
func (o PublicIPAddressResponsePtrOutput) Sku() PublicIPAddressSkuResponsePtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *PublicIPAddressSkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(PublicIPAddressSkuResponsePtrOutput)
}

// Resource tags.
func (o PublicIPAddressResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o PublicIPAddressResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// A list of availability zones denoting the IP allocated for the resource needs to come from.
func (o PublicIPAddressResponsePtrOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PublicIPAddressResponse) []string {
		if v == nil {
			return nil
		}
		return v.Zones
	}).(pulumi.StringArrayOutput)
}

// SKU of a public IP address
type PublicIPAddressSku struct {
	// Name of a public IP address SKU.
	Name *string `pulumi:"name"`
}

// PublicIPAddressSkuInput is an input type that accepts PublicIPAddressSkuArgs and PublicIPAddressSkuOutput values.
// You can construct a concrete instance of `PublicIPAddressSkuInput` via:
//
//          PublicIPAddressSkuArgs{...}
type PublicIPAddressSkuInput interface {
	pulumi.Input

	ToPublicIPAddressSkuOutput() PublicIPAddressSkuOutput
	ToPublicIPAddressSkuOutputWithContext(context.Context) PublicIPAddressSkuOutput
}

// SKU of a public IP address
type PublicIPAddressSkuArgs struct {
	// Name of a public IP address SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PublicIPAddressSkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSku)(nil)).Elem()
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuOutput() PublicIPAddressSkuOutput {
	return i.ToPublicIPAddressSkuOutputWithContext(context.Background())
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuOutputWithContext(ctx context.Context) PublicIPAddressSkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuOutput)
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return i.ToPublicIPAddressSkuPtrOutputWithContext(context.Background())
}

func (i PublicIPAddressSkuArgs) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuOutput).ToPublicIPAddressSkuPtrOutputWithContext(ctx)
}

// PublicIPAddressSkuPtrInput is an input type that accepts PublicIPAddressSkuArgs, PublicIPAddressSkuPtr and PublicIPAddressSkuPtrOutput values.
// You can construct a concrete instance of `PublicIPAddressSkuPtrInput` via:
//
//          PublicIPAddressSkuArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressSkuPtrInput interface {
	pulumi.Input

	ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput
	ToPublicIPAddressSkuPtrOutputWithContext(context.Context) PublicIPAddressSkuPtrOutput
}

type publicIPAddressSkuPtrType PublicIPAddressSkuArgs

func PublicIPAddressSkuPtr(v *PublicIPAddressSkuArgs) PublicIPAddressSkuPtrInput {
	return (*publicIPAddressSkuPtrType)(v)
}

func (*publicIPAddressSkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSku)(nil)).Elem()
}

func (i *publicIPAddressSkuPtrType) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return i.ToPublicIPAddressSkuPtrOutputWithContext(context.Background())
}

func (i *publicIPAddressSkuPtrType) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuPtrOutput)
}

// SKU of a public IP address
type PublicIPAddressSkuOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSku)(nil)).Elem()
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuOutput() PublicIPAddressSkuOutput {
	return o
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuOutputWithContext(ctx context.Context) PublicIPAddressSkuOutput {
	return o
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return o.ToPublicIPAddressSkuPtrOutputWithContext(context.Background())
}

func (o PublicIPAddressSkuOutput) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSku) *PublicIPAddressSku {
		return &v
	}).(PublicIPAddressSkuPtrOutput)
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PublicIPAddressSkuPtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSku)(nil)).Elem()
}

func (o PublicIPAddressSkuPtrOutput) ToPublicIPAddressSkuPtrOutput() PublicIPAddressSkuPtrOutput {
	return o
}

func (o PublicIPAddressSkuPtrOutput) ToPublicIPAddressSkuPtrOutputWithContext(ctx context.Context) PublicIPAddressSkuPtrOutput {
	return o
}

func (o PublicIPAddressSkuPtrOutput) Elem() PublicIPAddressSkuOutput {
	return o.ApplyT(func(v *PublicIPAddressSku) PublicIPAddressSku { return *v }).(PublicIPAddressSkuOutput)
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// SKU of a public IP address
type PublicIPAddressSkuResponse struct {
	// Name of a public IP address SKU.
	Name *string `pulumi:"name"`
}

// PublicIPAddressSkuResponseInput is an input type that accepts PublicIPAddressSkuResponseArgs and PublicIPAddressSkuResponseOutput values.
// You can construct a concrete instance of `PublicIPAddressSkuResponseInput` via:
//
//          PublicIPAddressSkuResponseArgs{...}
type PublicIPAddressSkuResponseInput interface {
	pulumi.Input

	ToPublicIPAddressSkuResponseOutput() PublicIPAddressSkuResponseOutput
	ToPublicIPAddressSkuResponseOutputWithContext(context.Context) PublicIPAddressSkuResponseOutput
}

// SKU of a public IP address
type PublicIPAddressSkuResponseArgs struct {
	// Name of a public IP address SKU.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PublicIPAddressSkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSkuResponse)(nil)).Elem()
}

func (i PublicIPAddressSkuResponseArgs) ToPublicIPAddressSkuResponseOutput() PublicIPAddressSkuResponseOutput {
	return i.ToPublicIPAddressSkuResponseOutputWithContext(context.Background())
}

func (i PublicIPAddressSkuResponseArgs) ToPublicIPAddressSkuResponseOutputWithContext(ctx context.Context) PublicIPAddressSkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuResponseOutput)
}

func (i PublicIPAddressSkuResponseArgs) ToPublicIPAddressSkuResponsePtrOutput() PublicIPAddressSkuResponsePtrOutput {
	return i.ToPublicIPAddressSkuResponsePtrOutputWithContext(context.Background())
}

func (i PublicIPAddressSkuResponseArgs) ToPublicIPAddressSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuResponseOutput).ToPublicIPAddressSkuResponsePtrOutputWithContext(ctx)
}

// PublicIPAddressSkuResponsePtrInput is an input type that accepts PublicIPAddressSkuResponseArgs, PublicIPAddressSkuResponsePtr and PublicIPAddressSkuResponsePtrOutput values.
// You can construct a concrete instance of `PublicIPAddressSkuResponsePtrInput` via:
//
//          PublicIPAddressSkuResponseArgs{...}
//
//  or:
//
//          nil
type PublicIPAddressSkuResponsePtrInput interface {
	pulumi.Input

	ToPublicIPAddressSkuResponsePtrOutput() PublicIPAddressSkuResponsePtrOutput
	ToPublicIPAddressSkuResponsePtrOutputWithContext(context.Context) PublicIPAddressSkuResponsePtrOutput
}

type publicIPAddressSkuResponsePtrType PublicIPAddressSkuResponseArgs

func PublicIPAddressSkuResponsePtr(v *PublicIPAddressSkuResponseArgs) PublicIPAddressSkuResponsePtrInput {
	return (*publicIPAddressSkuResponsePtrType)(v)
}

func (*publicIPAddressSkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSkuResponse)(nil)).Elem()
}

func (i *publicIPAddressSkuResponsePtrType) ToPublicIPAddressSkuResponsePtrOutput() PublicIPAddressSkuResponsePtrOutput {
	return i.ToPublicIPAddressSkuResponsePtrOutputWithContext(context.Background())
}

func (i *publicIPAddressSkuResponsePtrType) ToPublicIPAddressSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicIPAddressSkuResponsePtrOutput)
}

// SKU of a public IP address
type PublicIPAddressSkuResponseOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicIPAddressSkuResponse)(nil)).Elem()
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponseOutput() PublicIPAddressSkuResponseOutput {
	return o
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponseOutputWithContext(ctx context.Context) PublicIPAddressSkuResponseOutput {
	return o
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponsePtrOutput() PublicIPAddressSkuResponsePtrOutput {
	return o.ToPublicIPAddressSkuResponsePtrOutputWithContext(context.Background())
}

func (o PublicIPAddressSkuResponseOutput) ToPublicIPAddressSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuResponsePtrOutput {
	return o.ApplyT(func(v PublicIPAddressSkuResponse) *PublicIPAddressSkuResponse {
		return &v
	}).(PublicIPAddressSkuResponsePtrOutput)
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicIPAddressSkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PublicIPAddressSkuResponsePtrOutput struct{ *pulumi.OutputState }

func (PublicIPAddressSkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicIPAddressSkuResponse)(nil)).Elem()
}

func (o PublicIPAddressSkuResponsePtrOutput) ToPublicIPAddressSkuResponsePtrOutput() PublicIPAddressSkuResponsePtrOutput {
	return o
}

func (o PublicIPAddressSkuResponsePtrOutput) ToPublicIPAddressSkuResponsePtrOutputWithContext(ctx context.Context) PublicIPAddressSkuResponsePtrOutput {
	return o
}

func (o PublicIPAddressSkuResponsePtrOutput) Elem() PublicIPAddressSkuResponseOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuResponse) PublicIPAddressSkuResponse { return *v }).(PublicIPAddressSkuResponseOutput)
}

// Name of a public IP address SKU.
func (o PublicIPAddressSkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicIPAddressSkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLink struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Link to the external resource
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
}

// ResourceNavigationLinkInput is an input type that accepts ResourceNavigationLinkArgs and ResourceNavigationLinkOutput values.
// You can construct a concrete instance of `ResourceNavigationLinkInput` via:
//
//          ResourceNavigationLinkArgs{...}
type ResourceNavigationLinkInput interface {
	pulumi.Input

	ToResourceNavigationLinkOutput() ResourceNavigationLinkOutput
	ToResourceNavigationLinkOutputWithContext(context.Context) ResourceNavigationLinkOutput
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Link to the external resource
	Link pulumi.StringPtrInput `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType pulumi.StringPtrInput `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ResourceNavigationLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLink)(nil)).Elem()
}

func (i ResourceNavigationLinkArgs) ToResourceNavigationLinkOutput() ResourceNavigationLinkOutput {
	return i.ToResourceNavigationLinkOutputWithContext(context.Background())
}

func (i ResourceNavigationLinkArgs) ToResourceNavigationLinkOutputWithContext(ctx context.Context) ResourceNavigationLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkOutput)
}

// ResourceNavigationLinkArrayInput is an input type that accepts ResourceNavigationLinkArray and ResourceNavigationLinkArrayOutput values.
// You can construct a concrete instance of `ResourceNavigationLinkArrayInput` via:
//
//          ResourceNavigationLinkArray{ ResourceNavigationLinkArgs{...} }
type ResourceNavigationLinkArrayInput interface {
	pulumi.Input

	ToResourceNavigationLinkArrayOutput() ResourceNavigationLinkArrayOutput
	ToResourceNavigationLinkArrayOutputWithContext(context.Context) ResourceNavigationLinkArrayOutput
}

type ResourceNavigationLinkArray []ResourceNavigationLinkInput

func (ResourceNavigationLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceNavigationLink)(nil)).Elem()
}

func (i ResourceNavigationLinkArray) ToResourceNavigationLinkArrayOutput() ResourceNavigationLinkArrayOutput {
	return i.ToResourceNavigationLinkArrayOutputWithContext(context.Background())
}

func (i ResourceNavigationLinkArray) ToResourceNavigationLinkArrayOutputWithContext(ctx context.Context) ResourceNavigationLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkArrayOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLink)(nil)).Elem()
}

func (o ResourceNavigationLinkOutput) ToResourceNavigationLinkOutput() ResourceNavigationLinkOutput {
	return o
}

func (o ResourceNavigationLinkOutput) ToResourceNavigationLinkOutputWithContext(ctx context.Context) ResourceNavigationLinkOutput {
	return o
}

// Resource ID.
func (o ResourceNavigationLinkOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLink) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Link to the external resource
func (o ResourceNavigationLinkOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLink) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ResourceNavigationLinkOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLink) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ResourceNavigationLinkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLink) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ResourceNavigationLinkArrayOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceNavigationLink)(nil)).Elem()
}

func (o ResourceNavigationLinkArrayOutput) ToResourceNavigationLinkArrayOutput() ResourceNavigationLinkArrayOutput {
	return o
}

func (o ResourceNavigationLinkArrayOutput) ToResourceNavigationLinkArrayOutputWithContext(ctx context.Context) ResourceNavigationLinkArrayOutput {
	return o
}

func (o ResourceNavigationLinkArrayOutput) Index(i pulumi.IntInput) ResourceNavigationLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceNavigationLink {
		return vs[0].([]ResourceNavigationLink)[vs[1].(int)]
	}).(ResourceNavigationLinkOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Link to the external resource
	Link *string `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType *string `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Provisioning state of the ResourceNavigationLink resource.
	ProvisioningState string `pulumi:"provisioningState"`
}

// ResourceNavigationLinkResponseInput is an input type that accepts ResourceNavigationLinkResponseArgs and ResourceNavigationLinkResponseOutput values.
// You can construct a concrete instance of `ResourceNavigationLinkResponseInput` via:
//
//          ResourceNavigationLinkResponseArgs{...}
type ResourceNavigationLinkResponseInput interface {
	pulumi.Input

	ToResourceNavigationLinkResponseOutput() ResourceNavigationLinkResponseOutput
	ToResourceNavigationLinkResponseOutputWithContext(context.Context) ResourceNavigationLinkResponseOutput
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Link to the external resource
	Link pulumi.StringPtrInput `pulumi:"link"`
	// Resource type of the linked resource.
	LinkedResourceType pulumi.StringPtrInput `pulumi:"linkedResourceType"`
	// Name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Provisioning state of the ResourceNavigationLink resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
}

func (ResourceNavigationLinkResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLinkResponse)(nil)).Elem()
}

func (i ResourceNavigationLinkResponseArgs) ToResourceNavigationLinkResponseOutput() ResourceNavigationLinkResponseOutput {
	return i.ToResourceNavigationLinkResponseOutputWithContext(context.Background())
}

func (i ResourceNavigationLinkResponseArgs) ToResourceNavigationLinkResponseOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkResponseOutput)
}

// ResourceNavigationLinkResponseArrayInput is an input type that accepts ResourceNavigationLinkResponseArray and ResourceNavigationLinkResponseArrayOutput values.
// You can construct a concrete instance of `ResourceNavigationLinkResponseArrayInput` via:
//
//          ResourceNavigationLinkResponseArray{ ResourceNavigationLinkResponseArgs{...} }
type ResourceNavigationLinkResponseArrayInput interface {
	pulumi.Input

	ToResourceNavigationLinkResponseArrayOutput() ResourceNavigationLinkResponseArrayOutput
	ToResourceNavigationLinkResponseArrayOutputWithContext(context.Context) ResourceNavigationLinkResponseArrayOutput
}

type ResourceNavigationLinkResponseArray []ResourceNavigationLinkResponseInput

func (ResourceNavigationLinkResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceNavigationLinkResponse)(nil)).Elem()
}

func (i ResourceNavigationLinkResponseArray) ToResourceNavigationLinkResponseArrayOutput() ResourceNavigationLinkResponseArrayOutput {
	return i.ToResourceNavigationLinkResponseArrayOutputWithContext(context.Background())
}

func (i ResourceNavigationLinkResponseArray) ToResourceNavigationLinkResponseArrayOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceNavigationLinkResponseArrayOutput)
}

// ResourceNavigationLink resource.
type ResourceNavigationLinkResponseOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceNavigationLinkResponse)(nil)).Elem()
}

func (o ResourceNavigationLinkResponseOutput) ToResourceNavigationLinkResponseOutput() ResourceNavigationLinkResponseOutput {
	return o
}

func (o ResourceNavigationLinkResponseOutput) ToResourceNavigationLinkResponseOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o ResourceNavigationLinkResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o ResourceNavigationLinkResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Link to the external resource
func (o ResourceNavigationLinkResponseOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.Link }).(pulumi.StringPtrOutput)
}

// Resource type of the linked resource.
func (o ResourceNavigationLinkResponseOutput) LinkedResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.LinkedResourceType }).(pulumi.StringPtrOutput)
}

// Name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o ResourceNavigationLinkResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Provisioning state of the ResourceNavigationLink resource.
func (o ResourceNavigationLinkResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceNavigationLinkResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

type ResourceNavigationLinkResponseArrayOutput struct{ *pulumi.OutputState }

func (ResourceNavigationLinkResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceNavigationLinkResponse)(nil)).Elem()
}

func (o ResourceNavigationLinkResponseArrayOutput) ToResourceNavigationLinkResponseArrayOutput() ResourceNavigationLinkResponseArrayOutput {
	return o
}

func (o ResourceNavigationLinkResponseArrayOutput) ToResourceNavigationLinkResponseArrayOutputWithContext(ctx context.Context) ResourceNavigationLinkResponseArrayOutput {
	return o
}

func (o ResourceNavigationLinkResponseArrayOutput) Index(i pulumi.IntInput) ResourceNavigationLinkResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceNavigationLinkResponse {
		return vs[0].([]ResourceNavigationLinkResponse)[vs[1].(int)]
	}).(ResourceNavigationLinkResponseOutput)
}

// Route resource
type RouteType struct {
	// The destination CIDR to which the route applies.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
	NextHopType string `pulumi:"nextHopType"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// RouteTypeInput is an input type that accepts RouteTypeArgs and RouteTypeOutput values.
// You can construct a concrete instance of `RouteTypeInput` via:
//
//          RouteTypeArgs{...}
type RouteTypeInput interface {
	pulumi.Input

	ToRouteTypeOutput() RouteTypeOutput
	ToRouteTypeOutputWithContext(context.Context) RouteTypeOutput
}

// Route resource
type RouteTypeArgs struct {
	// The destination CIDR to which the route applies.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (RouteTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteType)(nil)).Elem()
}

func (i RouteTypeArgs) ToRouteTypeOutput() RouteTypeOutput {
	return i.ToRouteTypeOutputWithContext(context.Background())
}

func (i RouteTypeArgs) ToRouteTypeOutputWithContext(ctx context.Context) RouteTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTypeOutput)
}

// RouteTypeArrayInput is an input type that accepts RouteTypeArray and RouteTypeArrayOutput values.
// You can construct a concrete instance of `RouteTypeArrayInput` via:
//
//          RouteTypeArray{ RouteTypeArgs{...} }
type RouteTypeArrayInput interface {
	pulumi.Input

	ToRouteTypeArrayOutput() RouteTypeArrayOutput
	ToRouteTypeArrayOutputWithContext(context.Context) RouteTypeArrayOutput
}

type RouteTypeArray []RouteTypeInput

func (RouteTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteType)(nil)).Elem()
}

func (i RouteTypeArray) ToRouteTypeArrayOutput() RouteTypeArrayOutput {
	return i.ToRouteTypeArrayOutputWithContext(context.Background())
}

func (i RouteTypeArray) ToRouteTypeArrayOutputWithContext(ctx context.Context) RouteTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTypeArrayOutput)
}

// Route resource
type RouteTypeOutput struct{ *pulumi.OutputState }

func (RouteTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteType)(nil)).Elem()
}

func (o RouteTypeOutput) ToRouteTypeOutput() RouteTypeOutput {
	return o
}

func (o RouteTypeOutput) ToRouteTypeOutputWithContext(ctx context.Context) RouteTypeOutput {
	return o
}

// The destination CIDR to which the route applies.
func (o RouteTypeOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RouteTypeOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
func (o RouteTypeOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteType) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type RouteTypeArrayOutput struct{ *pulumi.OutputState }

func (RouteTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteType)(nil)).Elem()
}

func (o RouteTypeArrayOutput) ToRouteTypeArrayOutput() RouteTypeArrayOutput {
	return o
}

func (o RouteTypeArrayOutput) ToRouteTypeArrayOutputWithContext(ctx context.Context) RouteTypeArrayOutput {
	return o
}

func (o RouteTypeArrayOutput) Index(i pulumi.IntInput) RouteTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteType {
		return vs[0].([]RouteType)[vs[1].(int)]
	}).(RouteTypeOutput)
}

// Route Filter Resource.
type RouteFilterType struct {
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location string `pulumi:"location"`
	// A collection of references to express route circuit peerings.
	Peerings []ExpressRouteCircuitPeeringType `pulumi:"peerings"`
	// Collection of RouteFilterRules contained within a route filter.
	Rules []RouteFilterRuleType `pulumi:"rules"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// RouteFilterTypeInput is an input type that accepts RouteFilterTypeArgs and RouteFilterTypeOutput values.
// You can construct a concrete instance of `RouteFilterTypeInput` via:
//
//          RouteFilterTypeArgs{...}
type RouteFilterTypeInput interface {
	pulumi.Input

	ToRouteFilterTypeOutput() RouteFilterTypeOutput
	ToRouteFilterTypeOutputWithContext(context.Context) RouteFilterTypeOutput
}

// Route Filter Resource.
type RouteFilterTypeArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringInput `pulumi:"location"`
	// A collection of references to express route circuit peerings.
	Peerings ExpressRouteCircuitPeeringTypeArrayInput `pulumi:"peerings"`
	// Collection of RouteFilterRules contained within a route filter.
	Rules RouteFilterRuleTypeArrayInput `pulumi:"rules"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (RouteFilterTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterType)(nil)).Elem()
}

func (i RouteFilterTypeArgs) ToRouteFilterTypeOutput() RouteFilterTypeOutput {
	return i.ToRouteFilterTypeOutputWithContext(context.Background())
}

func (i RouteFilterTypeArgs) ToRouteFilterTypeOutputWithContext(ctx context.Context) RouteFilterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterTypeOutput)
}

func (i RouteFilterTypeArgs) ToRouteFilterTypePtrOutput() RouteFilterTypePtrOutput {
	return i.ToRouteFilterTypePtrOutputWithContext(context.Background())
}

func (i RouteFilterTypeArgs) ToRouteFilterTypePtrOutputWithContext(ctx context.Context) RouteFilterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterTypeOutput).ToRouteFilterTypePtrOutputWithContext(ctx)
}

// RouteFilterTypePtrInput is an input type that accepts RouteFilterTypeArgs, RouteFilterTypePtr and RouteFilterTypePtrOutput values.
// You can construct a concrete instance of `RouteFilterTypePtrInput` via:
//
//          RouteFilterTypeArgs{...}
//
//  or:
//
//          nil
type RouteFilterTypePtrInput interface {
	pulumi.Input

	ToRouteFilterTypePtrOutput() RouteFilterTypePtrOutput
	ToRouteFilterTypePtrOutputWithContext(context.Context) RouteFilterTypePtrOutput
}

type routeFilterTypePtrType RouteFilterTypeArgs

func RouteFilterTypePtr(v *RouteFilterTypeArgs) RouteFilterTypePtrInput {
	return (*routeFilterTypePtrType)(v)
}

func (*routeFilterTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteFilterType)(nil)).Elem()
}

func (i *routeFilterTypePtrType) ToRouteFilterTypePtrOutput() RouteFilterTypePtrOutput {
	return i.ToRouteFilterTypePtrOutputWithContext(context.Background())
}

func (i *routeFilterTypePtrType) ToRouteFilterTypePtrOutputWithContext(ctx context.Context) RouteFilterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterTypePtrOutput)
}

// Route Filter Resource.
type RouteFilterTypeOutput struct{ *pulumi.OutputState }

func (RouteFilterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterType)(nil)).Elem()
}

func (o RouteFilterTypeOutput) ToRouteFilterTypeOutput() RouteFilterTypeOutput {
	return o
}

func (o RouteFilterTypeOutput) ToRouteFilterTypeOutputWithContext(ctx context.Context) RouteFilterTypeOutput {
	return o
}

func (o RouteFilterTypeOutput) ToRouteFilterTypePtrOutput() RouteFilterTypePtrOutput {
	return o.ToRouteFilterTypePtrOutputWithContext(context.Background())
}

func (o RouteFilterTypeOutput) ToRouteFilterTypePtrOutputWithContext(ctx context.Context) RouteFilterTypePtrOutput {
	return o.ApplyT(func(v RouteFilterType) *RouteFilterType {
		return &v
	}).(RouteFilterTypePtrOutput)
}

// Resource ID.
func (o RouteFilterTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteFilterTypeOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterType) string { return v.Location }).(pulumi.StringOutput)
}

// A collection of references to express route circuit peerings.
func (o RouteFilterTypeOutput) Peerings() ExpressRouteCircuitPeeringTypeArrayOutput {
	return o.ApplyT(func(v RouteFilterType) []ExpressRouteCircuitPeeringType { return v.Peerings }).(ExpressRouteCircuitPeeringTypeArrayOutput)
}

// Collection of RouteFilterRules contained within a route filter.
func (o RouteFilterTypeOutput) Rules() RouteFilterRuleTypeArrayOutput {
	return o.ApplyT(func(v RouteFilterType) []RouteFilterRuleType { return v.Rules }).(RouteFilterRuleTypeArrayOutput)
}

// Resource tags.
func (o RouteFilterTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteFilterType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type RouteFilterTypePtrOutput struct{ *pulumi.OutputState }

func (RouteFilterTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteFilterType)(nil)).Elem()
}

func (o RouteFilterTypePtrOutput) ToRouteFilterTypePtrOutput() RouteFilterTypePtrOutput {
	return o
}

func (o RouteFilterTypePtrOutput) ToRouteFilterTypePtrOutputWithContext(ctx context.Context) RouteFilterTypePtrOutput {
	return o
}

func (o RouteFilterTypePtrOutput) Elem() RouteFilterTypeOutput {
	return o.ApplyT(func(v *RouteFilterType) RouteFilterType { return *v }).(RouteFilterTypeOutput)
}

// Resource ID.
func (o RouteFilterTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteFilterTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterType) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

// A collection of references to express route circuit peerings.
func (o RouteFilterTypePtrOutput) Peerings() ExpressRouteCircuitPeeringTypeArrayOutput {
	return o.ApplyT(func(v *RouteFilterType) []ExpressRouteCircuitPeeringType {
		if v == nil {
			return nil
		}
		return v.Peerings
	}).(ExpressRouteCircuitPeeringTypeArrayOutput)
}

// Collection of RouteFilterRules contained within a route filter.
func (o RouteFilterTypePtrOutput) Rules() RouteFilterRuleTypeArrayOutput {
	return o.ApplyT(func(v *RouteFilterType) []RouteFilterRuleType {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(RouteFilterRuleTypeArrayOutput)
}

// Resource tags.
func (o RouteFilterTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteFilterType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Route Filter Resource.
type RouteFilterResponse struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// A collection of references to express route circuit peerings.
	Peerings []ExpressRouteCircuitPeeringResponse `pulumi:"peerings"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// Collection of RouteFilterRules contained within a route filter.
	Rules []RouteFilterRuleResponse `pulumi:"rules"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// RouteFilterResponseInput is an input type that accepts RouteFilterResponseArgs and RouteFilterResponseOutput values.
// You can construct a concrete instance of `RouteFilterResponseInput` via:
//
//          RouteFilterResponseArgs{...}
type RouteFilterResponseInput interface {
	pulumi.Input

	ToRouteFilterResponseOutput() RouteFilterResponseOutput
	ToRouteFilterResponseOutputWithContext(context.Context) RouteFilterResponseOutput
}

// Route Filter Resource.
type RouteFilterResponseArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// A collection of references to express route circuit peerings.
	Peerings ExpressRouteCircuitPeeringResponseArrayInput `pulumi:"peerings"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Collection of RouteFilterRules contained within a route filter.
	Rules RouteFilterRuleResponseArrayInput `pulumi:"rules"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RouteFilterResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterResponse)(nil)).Elem()
}

func (i RouteFilterResponseArgs) ToRouteFilterResponseOutput() RouteFilterResponseOutput {
	return i.ToRouteFilterResponseOutputWithContext(context.Background())
}

func (i RouteFilterResponseArgs) ToRouteFilterResponseOutputWithContext(ctx context.Context) RouteFilterResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterResponseOutput)
}

func (i RouteFilterResponseArgs) ToRouteFilterResponsePtrOutput() RouteFilterResponsePtrOutput {
	return i.ToRouteFilterResponsePtrOutputWithContext(context.Background())
}

func (i RouteFilterResponseArgs) ToRouteFilterResponsePtrOutputWithContext(ctx context.Context) RouteFilterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterResponseOutput).ToRouteFilterResponsePtrOutputWithContext(ctx)
}

// RouteFilterResponsePtrInput is an input type that accepts RouteFilterResponseArgs, RouteFilterResponsePtr and RouteFilterResponsePtrOutput values.
// You can construct a concrete instance of `RouteFilterResponsePtrInput` via:
//
//          RouteFilterResponseArgs{...}
//
//  or:
//
//          nil
type RouteFilterResponsePtrInput interface {
	pulumi.Input

	ToRouteFilterResponsePtrOutput() RouteFilterResponsePtrOutput
	ToRouteFilterResponsePtrOutputWithContext(context.Context) RouteFilterResponsePtrOutput
}

type routeFilterResponsePtrType RouteFilterResponseArgs

func RouteFilterResponsePtr(v *RouteFilterResponseArgs) RouteFilterResponsePtrInput {
	return (*routeFilterResponsePtrType)(v)
}

func (*routeFilterResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteFilterResponse)(nil)).Elem()
}

func (i *routeFilterResponsePtrType) ToRouteFilterResponsePtrOutput() RouteFilterResponsePtrOutput {
	return i.ToRouteFilterResponsePtrOutputWithContext(context.Background())
}

func (i *routeFilterResponsePtrType) ToRouteFilterResponsePtrOutputWithContext(ctx context.Context) RouteFilterResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterResponsePtrOutput)
}

// Route Filter Resource.
type RouteFilterResponseOutput struct{ *pulumi.OutputState }

func (RouteFilterResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterResponse)(nil)).Elem()
}

func (o RouteFilterResponseOutput) ToRouteFilterResponseOutput() RouteFilterResponseOutput {
	return o
}

func (o RouteFilterResponseOutput) ToRouteFilterResponseOutputWithContext(ctx context.Context) RouteFilterResponseOutput {
	return o
}

func (o RouteFilterResponseOutput) ToRouteFilterResponsePtrOutput() RouteFilterResponsePtrOutput {
	return o.ToRouteFilterResponsePtrOutputWithContext(context.Background())
}

func (o RouteFilterResponseOutput) ToRouteFilterResponsePtrOutputWithContext(ctx context.Context) RouteFilterResponsePtrOutput {
	return o.ApplyT(func(v RouteFilterResponse) *RouteFilterResponse {
		return &v
	}).(RouteFilterResponsePtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteFilterResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o RouteFilterResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteFilterResponseOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterResponse) string { return v.Location }).(pulumi.StringOutput)
}

// Resource name.
func (o RouteFilterResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterResponse) string { return v.Name }).(pulumi.StringOutput)
}

// A collection of references to express route circuit peerings.
func (o RouteFilterResponseOutput) Peerings() ExpressRouteCircuitPeeringResponseArrayOutput {
	return o.ApplyT(func(v RouteFilterResponse) []ExpressRouteCircuitPeeringResponse { return v.Peerings }).(ExpressRouteCircuitPeeringResponseArrayOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.
func (o RouteFilterResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Collection of RouteFilterRules contained within a route filter.
func (o RouteFilterResponseOutput) Rules() RouteFilterRuleResponseArrayOutput {
	return o.ApplyT(func(v RouteFilterResponse) []RouteFilterRuleResponse { return v.Rules }).(RouteFilterRuleResponseArrayOutput)
}

// Resource tags.
func (o RouteFilterResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteFilterResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteFilterResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterResponse) string { return v.Type }).(pulumi.StringOutput)
}

type RouteFilterResponsePtrOutput struct{ *pulumi.OutputState }

func (RouteFilterResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteFilterResponse)(nil)).Elem()
}

func (o RouteFilterResponsePtrOutput) ToRouteFilterResponsePtrOutput() RouteFilterResponsePtrOutput {
	return o
}

func (o RouteFilterResponsePtrOutput) ToRouteFilterResponsePtrOutputWithContext(ctx context.Context) RouteFilterResponsePtrOutput {
	return o
}

func (o RouteFilterResponsePtrOutput) Elem() RouteFilterResponseOutput {
	return o.ApplyT(func(v *RouteFilterResponse) RouteFilterResponse { return *v }).(RouteFilterResponseOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteFilterResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteFilterResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteFilterResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteFilterResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A collection of references to express route circuit peerings.
func (o RouteFilterResponsePtrOutput) Peerings() ExpressRouteCircuitPeeringResponseArrayOutput {
	return o.ApplyT(func(v *RouteFilterResponse) []ExpressRouteCircuitPeeringResponse {
		if v == nil {
			return nil
		}
		return v.Peerings
	}).(ExpressRouteCircuitPeeringResponseArrayOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.
func (o RouteFilterResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of RouteFilterRules contained within a route filter.
func (o RouteFilterResponsePtrOutput) Rules() RouteFilterRuleResponseArrayOutput {
	return o.ApplyT(func(v *RouteFilterResponse) []RouteFilterRuleResponse {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(RouteFilterRuleResponseArrayOutput)
}

// Resource tags.
func (o RouteFilterResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteFilterResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteFilterResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteFilterResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Route Filter Rule Resource
type RouteFilterRuleType struct {
	// The access type of the rule. Valid values are: 'Allow', 'Deny'
	Access string `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']
	Communities []string `pulumi:"communities"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The rule type of the rule. Valid value is: 'Community'
	RouteFilterRuleType string `pulumi:"routeFilterRuleType"`
}

// RouteFilterRuleTypeInput is an input type that accepts RouteFilterRuleTypeArgs and RouteFilterRuleTypeOutput values.
// You can construct a concrete instance of `RouteFilterRuleTypeInput` via:
//
//          RouteFilterRuleTypeArgs{...}
type RouteFilterRuleTypeInput interface {
	pulumi.Input

	ToRouteFilterRuleTypeOutput() RouteFilterRuleTypeOutput
	ToRouteFilterRuleTypeOutputWithContext(context.Context) RouteFilterRuleTypeOutput
}

// Route Filter Rule Resource
type RouteFilterRuleTypeArgs struct {
	// The access type of the rule. Valid values are: 'Allow', 'Deny'
	Access pulumi.StringInput `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']
	Communities pulumi.StringArrayInput `pulumi:"communities"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The rule type of the rule. Valid value is: 'Community'
	RouteFilterRuleType pulumi.StringInput `pulumi:"routeFilterRuleType"`
}

func (RouteFilterRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleType)(nil)).Elem()
}

func (i RouteFilterRuleTypeArgs) ToRouteFilterRuleTypeOutput() RouteFilterRuleTypeOutput {
	return i.ToRouteFilterRuleTypeOutputWithContext(context.Background())
}

func (i RouteFilterRuleTypeArgs) ToRouteFilterRuleTypeOutputWithContext(ctx context.Context) RouteFilterRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRuleTypeOutput)
}

// RouteFilterRuleTypeArrayInput is an input type that accepts RouteFilterRuleTypeArray and RouteFilterRuleTypeArrayOutput values.
// You can construct a concrete instance of `RouteFilterRuleTypeArrayInput` via:
//
//          RouteFilterRuleTypeArray{ RouteFilterRuleTypeArgs{...} }
type RouteFilterRuleTypeArrayInput interface {
	pulumi.Input

	ToRouteFilterRuleTypeArrayOutput() RouteFilterRuleTypeArrayOutput
	ToRouteFilterRuleTypeArrayOutputWithContext(context.Context) RouteFilterRuleTypeArrayOutput
}

type RouteFilterRuleTypeArray []RouteFilterRuleTypeInput

func (RouteFilterRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteFilterRuleType)(nil)).Elem()
}

func (i RouteFilterRuleTypeArray) ToRouteFilterRuleTypeArrayOutput() RouteFilterRuleTypeArrayOutput {
	return i.ToRouteFilterRuleTypeArrayOutputWithContext(context.Background())
}

func (i RouteFilterRuleTypeArray) ToRouteFilterRuleTypeArrayOutputWithContext(ctx context.Context) RouteFilterRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRuleTypeArrayOutput)
}

// Route Filter Rule Resource
type RouteFilterRuleTypeOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleType)(nil)).Elem()
}

func (o RouteFilterRuleTypeOutput) ToRouteFilterRuleTypeOutput() RouteFilterRuleTypeOutput {
	return o
}

func (o RouteFilterRuleTypeOutput) ToRouteFilterRuleTypeOutputWithContext(ctx context.Context) RouteFilterRuleTypeOutput {
	return o
}

// The access type of the rule. Valid values are: 'Allow', 'Deny'
func (o RouteFilterRuleTypeOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleType) string { return v.Access }).(pulumi.StringOutput)
}

// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']
func (o RouteFilterRuleTypeOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteFilterRuleType) []string { return v.Communities }).(pulumi.StringArrayOutput)
}

// Resource ID.
func (o RouteFilterRuleTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteFilterRuleTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteFilterRuleTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The rule type of the rule. Valid value is: 'Community'
func (o RouteFilterRuleTypeOutput) RouteFilterRuleType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleType) string { return v.RouteFilterRuleType }).(pulumi.StringOutput)
}

type RouteFilterRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteFilterRuleType)(nil)).Elem()
}

func (o RouteFilterRuleTypeArrayOutput) ToRouteFilterRuleTypeArrayOutput() RouteFilterRuleTypeArrayOutput {
	return o
}

func (o RouteFilterRuleTypeArrayOutput) ToRouteFilterRuleTypeArrayOutputWithContext(ctx context.Context) RouteFilterRuleTypeArrayOutput {
	return o
}

func (o RouteFilterRuleTypeArrayOutput) Index(i pulumi.IntInput) RouteFilterRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteFilterRuleType {
		return vs[0].([]RouteFilterRuleType)[vs[1].(int)]
	}).(RouteFilterRuleTypeOutput)
}

// Route Filter Rule Resource
type RouteFilterRuleResponse struct {
	// The access type of the rule. Valid values are: 'Allow', 'Deny'
	Access string `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']
	Communities []string `pulumi:"communities"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The rule type of the rule. Valid value is: 'Community'
	RouteFilterRuleType string `pulumi:"routeFilterRuleType"`
}

// RouteFilterRuleResponseInput is an input type that accepts RouteFilterRuleResponseArgs and RouteFilterRuleResponseOutput values.
// You can construct a concrete instance of `RouteFilterRuleResponseInput` via:
//
//          RouteFilterRuleResponseArgs{...}
type RouteFilterRuleResponseInput interface {
	pulumi.Input

	ToRouteFilterRuleResponseOutput() RouteFilterRuleResponseOutput
	ToRouteFilterRuleResponseOutputWithContext(context.Context) RouteFilterRuleResponseOutput
}

// Route Filter Rule Resource
type RouteFilterRuleResponseArgs struct {
	// The access type of the rule. Valid values are: 'Allow', 'Deny'
	Access pulumi.StringInput `pulumi:"access"`
	// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']
	Communities pulumi.StringArrayInput `pulumi:"communities"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The rule type of the rule. Valid value is: 'Community'
	RouteFilterRuleType pulumi.StringInput `pulumi:"routeFilterRuleType"`
}

func (RouteFilterRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleResponse)(nil)).Elem()
}

func (i RouteFilterRuleResponseArgs) ToRouteFilterRuleResponseOutput() RouteFilterRuleResponseOutput {
	return i.ToRouteFilterRuleResponseOutputWithContext(context.Background())
}

func (i RouteFilterRuleResponseArgs) ToRouteFilterRuleResponseOutputWithContext(ctx context.Context) RouteFilterRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRuleResponseOutput)
}

// RouteFilterRuleResponseArrayInput is an input type that accepts RouteFilterRuleResponseArray and RouteFilterRuleResponseArrayOutput values.
// You can construct a concrete instance of `RouteFilterRuleResponseArrayInput` via:
//
//          RouteFilterRuleResponseArray{ RouteFilterRuleResponseArgs{...} }
type RouteFilterRuleResponseArrayInput interface {
	pulumi.Input

	ToRouteFilterRuleResponseArrayOutput() RouteFilterRuleResponseArrayOutput
	ToRouteFilterRuleResponseArrayOutputWithContext(context.Context) RouteFilterRuleResponseArrayOutput
}

type RouteFilterRuleResponseArray []RouteFilterRuleResponseInput

func (RouteFilterRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteFilterRuleResponse)(nil)).Elem()
}

func (i RouteFilterRuleResponseArray) ToRouteFilterRuleResponseArrayOutput() RouteFilterRuleResponseArrayOutput {
	return i.ToRouteFilterRuleResponseArrayOutputWithContext(context.Background())
}

func (i RouteFilterRuleResponseArray) ToRouteFilterRuleResponseArrayOutputWithContext(ctx context.Context) RouteFilterRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteFilterRuleResponseArrayOutput)
}

// Route Filter Rule Resource
type RouteFilterRuleResponseOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteFilterRuleResponse)(nil)).Elem()
}

func (o RouteFilterRuleResponseOutput) ToRouteFilterRuleResponseOutput() RouteFilterRuleResponseOutput {
	return o
}

func (o RouteFilterRuleResponseOutput) ToRouteFilterRuleResponseOutputWithContext(ctx context.Context) RouteFilterRuleResponseOutput {
	return o
}

// The access type of the rule. Valid values are: 'Allow', 'Deny'
func (o RouteFilterRuleResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) string { return v.Access }).(pulumi.StringOutput)
}

// The collection for bgp community values to filter on. e.g. ['12076:5010','12076:5020']
func (o RouteFilterRuleResponseOutput) Communities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) []string { return v.Communities }).(pulumi.StringArrayOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteFilterRuleResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o RouteFilterRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteFilterRuleResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteFilterRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.
func (o RouteFilterRuleResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The rule type of the rule. Valid value is: 'Community'
func (o RouteFilterRuleResponseOutput) RouteFilterRuleType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteFilterRuleResponse) string { return v.RouteFilterRuleType }).(pulumi.StringOutput)
}

type RouteFilterRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (RouteFilterRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteFilterRuleResponse)(nil)).Elem()
}

func (o RouteFilterRuleResponseArrayOutput) ToRouteFilterRuleResponseArrayOutput() RouteFilterRuleResponseArrayOutput {
	return o
}

func (o RouteFilterRuleResponseArrayOutput) ToRouteFilterRuleResponseArrayOutputWithContext(ctx context.Context) RouteFilterRuleResponseArrayOutput {
	return o
}

func (o RouteFilterRuleResponseArrayOutput) Index(i pulumi.IntInput) RouteFilterRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteFilterRuleResponse {
		return vs[0].([]RouteFilterRuleResponse)[vs[1].(int)]
	}).(RouteFilterRuleResponseOutput)
}

// Route resource
type RouteResponse struct {
	// The destination CIDR to which the route applies.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress *string `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
	NextHopType string `pulumi:"nextHopType"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
}

// RouteResponseInput is an input type that accepts RouteResponseArgs and RouteResponseOutput values.
// You can construct a concrete instance of `RouteResponseInput` via:
//
//          RouteResponseArgs{...}
type RouteResponseInput interface {
	pulumi.Input

	ToRouteResponseOutput() RouteResponseOutput
	ToRouteResponseOutputWithContext(context.Context) RouteResponseOutput
}

// Route resource
type RouteResponseArgs struct {
	// The destination CIDR to which the route applies.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
	NextHopIpAddress pulumi.StringPtrInput `pulumi:"nextHopIpAddress"`
	// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
	NextHopType pulumi.StringInput `pulumi:"nextHopType"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
}

func (RouteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteResponse)(nil)).Elem()
}

func (i RouteResponseArgs) ToRouteResponseOutput() RouteResponseOutput {
	return i.ToRouteResponseOutputWithContext(context.Background())
}

func (i RouteResponseArgs) ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteResponseOutput)
}

// RouteResponseArrayInput is an input type that accepts RouteResponseArray and RouteResponseArrayOutput values.
// You can construct a concrete instance of `RouteResponseArrayInput` via:
//
//          RouteResponseArray{ RouteResponseArgs{...} }
type RouteResponseArrayInput interface {
	pulumi.Input

	ToRouteResponseArrayOutput() RouteResponseArrayOutput
	ToRouteResponseArrayOutputWithContext(context.Context) RouteResponseArrayOutput
}

type RouteResponseArray []RouteResponseInput

func (RouteResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteResponse)(nil)).Elem()
}

func (i RouteResponseArray) ToRouteResponseArrayOutput() RouteResponseArrayOutput {
	return i.ToRouteResponseArrayOutputWithContext(context.Background())
}

func (i RouteResponseArray) ToRouteResponseArrayOutputWithContext(ctx context.Context) RouteResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteResponseArrayOutput)
}

// Route resource
type RouteResponseOutput struct{ *pulumi.OutputState }

func (RouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteResponse)(nil)).Elem()
}

func (o RouteResponseOutput) ToRouteResponseOutput() RouteResponseOutput {
	return o
}

func (o RouteResponseOutput) ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput {
	return o
}

// The destination CIDR to which the route applies.
func (o RouteResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o RouteResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o RouteResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is VirtualAppliance.
func (o RouteResponseOutput) NextHopIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.NextHopIpAddress }).(pulumi.StringPtrOutput)
}

// The type of Azure hop the packet should be sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', and 'None'
func (o RouteResponseOutput) NextHopType() pulumi.StringOutput {
	return o.ApplyT(func(v RouteResponse) string { return v.NextHopType }).(pulumi.StringOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

type RouteResponseArrayOutput struct{ *pulumi.OutputState }

func (RouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteResponse)(nil)).Elem()
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutput() RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutputWithContext(ctx context.Context) RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) Index(i pulumi.IntInput) RouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteResponse {
		return vs[0].([]RouteResponse)[vs[1].(int)]
	}).(RouteResponseOutput)
}

// Route table resource.
type RouteTableType struct {
	// Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation *bool `pulumi:"disableBgpRoutePropagation"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes []RouteType `pulumi:"routes"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
}

// RouteTableTypeInput is an input type that accepts RouteTableTypeArgs and RouteTableTypeOutput values.
// You can construct a concrete instance of `RouteTableTypeInput` via:
//
//          RouteTableTypeArgs{...}
type RouteTableTypeInput interface {
	pulumi.Input

	ToRouteTableTypeOutput() RouteTableTypeOutput
	ToRouteTableTypeOutputWithContext(context.Context) RouteTableTypeOutput
}

// Route table resource.
type RouteTableTypeArgs struct {
	// Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation pulumi.BoolPtrInput `pulumi:"disableBgpRoutePropagation"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes RouteTypeArrayInput `pulumi:"routes"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (RouteTableTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableType)(nil)).Elem()
}

func (i RouteTableTypeArgs) ToRouteTableTypeOutput() RouteTableTypeOutput {
	return i.ToRouteTableTypeOutputWithContext(context.Background())
}

func (i RouteTableTypeArgs) ToRouteTableTypeOutputWithContext(ctx context.Context) RouteTableTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTypeOutput)
}

func (i RouteTableTypeArgs) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return i.ToRouteTableTypePtrOutputWithContext(context.Background())
}

func (i RouteTableTypeArgs) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTypeOutput).ToRouteTableTypePtrOutputWithContext(ctx)
}

// RouteTableTypePtrInput is an input type that accepts RouteTableTypeArgs, RouteTableTypePtr and RouteTableTypePtrOutput values.
// You can construct a concrete instance of `RouteTableTypePtrInput` via:
//
//          RouteTableTypeArgs{...}
//
//  or:
//
//          nil
type RouteTableTypePtrInput interface {
	pulumi.Input

	ToRouteTableTypePtrOutput() RouteTableTypePtrOutput
	ToRouteTableTypePtrOutputWithContext(context.Context) RouteTableTypePtrOutput
}

type routeTableTypePtrType RouteTableTypeArgs

func RouteTableTypePtr(v *RouteTableTypeArgs) RouteTableTypePtrInput {
	return (*routeTableTypePtrType)(v)
}

func (*routeTableTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableType)(nil)).Elem()
}

func (i *routeTableTypePtrType) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return i.ToRouteTableTypePtrOutputWithContext(context.Background())
}

func (i *routeTableTypePtrType) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableTypePtrOutput)
}

// Route table resource.
type RouteTableTypeOutput struct{ *pulumi.OutputState }

func (RouteTableTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableType)(nil)).Elem()
}

func (o RouteTableTypeOutput) ToRouteTableTypeOutput() RouteTableTypeOutput {
	return o
}

func (o RouteTableTypeOutput) ToRouteTableTypeOutputWithContext(ctx context.Context) RouteTableTypeOutput {
	return o
}

func (o RouteTableTypeOutput) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return o.ToRouteTableTypePtrOutputWithContext(context.Background())
}

func (o RouteTableTypeOutput) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return o.ApplyT(func(v RouteTableType) *RouteTableType {
		return &v
	}).(RouteTableTypePtrOutput)
}

// Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableTypeOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteTableType) *bool { return v.DisableBgpRoutePropagation }).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteTableTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTableTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTableTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableTypeOutput) Routes() RouteTypeArrayOutput {
	return o.ApplyT(func(v RouteTableType) []RouteType { return v.Routes }).(RouteTypeArrayOutput)
}

// Resource tags.
func (o RouteTableTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteTableType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type RouteTableTypePtrOutput struct{ *pulumi.OutputState }

func (RouteTableTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableType)(nil)).Elem()
}

func (o RouteTableTypePtrOutput) ToRouteTableTypePtrOutput() RouteTableTypePtrOutput {
	return o
}

func (o RouteTableTypePtrOutput) ToRouteTableTypePtrOutputWithContext(ctx context.Context) RouteTableTypePtrOutput {
	return o
}

func (o RouteTableTypePtrOutput) Elem() RouteTableTypeOutput {
	return o.ApplyT(func(v *RouteTableType) RouteTableType { return *v }).(RouteTableTypeOutput)
}

// Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableTypePtrOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *bool {
		if v == nil {
			return nil
		}
		return v.DisableBgpRoutePropagation
	}).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteTableTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTableTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTableTypePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableType) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableTypePtrOutput) Routes() RouteTypeArrayOutput {
	return o.ApplyT(func(v *RouteTableType) []RouteType {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RouteTypeArrayOutput)
}

// Resource tags.
func (o RouteTableTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteTableType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Route table resource.
type RouteTableResponse struct {
	// Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation *bool `pulumi:"disableBgpRoutePropagation"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes []RouteResponse `pulumi:"routes"`
	// A collection of references to subnets.
	Subnets []SubnetResponse `pulumi:"subnets"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
}

// RouteTableResponseInput is an input type that accepts RouteTableResponseArgs and RouteTableResponseOutput values.
// You can construct a concrete instance of `RouteTableResponseInput` via:
//
//          RouteTableResponseArgs{...}
type RouteTableResponseInput interface {
	pulumi.Input

	ToRouteTableResponseOutput() RouteTableResponseOutput
	ToRouteTableResponseOutputWithContext(context.Context) RouteTableResponseOutput
}

// Route table resource.
type RouteTableResponseArgs struct {
	// Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
	DisableBgpRoutePropagation pulumi.BoolPtrInput `pulumi:"disableBgpRoutePropagation"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Collection of routes contained within a route table.
	Routes RouteResponseArrayInput `pulumi:"routes"`
	// A collection of references to subnets.
	Subnets SubnetResponseArrayInput `pulumi:"subnets"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (RouteTableResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableResponse)(nil)).Elem()
}

func (i RouteTableResponseArgs) ToRouteTableResponseOutput() RouteTableResponseOutput {
	return i.ToRouteTableResponseOutputWithContext(context.Background())
}

func (i RouteTableResponseArgs) ToRouteTableResponseOutputWithContext(ctx context.Context) RouteTableResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableResponseOutput)
}

func (i RouteTableResponseArgs) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return i.ToRouteTableResponsePtrOutputWithContext(context.Background())
}

func (i RouteTableResponseArgs) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableResponseOutput).ToRouteTableResponsePtrOutputWithContext(ctx)
}

// RouteTableResponsePtrInput is an input type that accepts RouteTableResponseArgs, RouteTableResponsePtr and RouteTableResponsePtrOutput values.
// You can construct a concrete instance of `RouteTableResponsePtrInput` via:
//
//          RouteTableResponseArgs{...}
//
//  or:
//
//          nil
type RouteTableResponsePtrInput interface {
	pulumi.Input

	ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput
	ToRouteTableResponsePtrOutputWithContext(context.Context) RouteTableResponsePtrOutput
}

type routeTableResponsePtrType RouteTableResponseArgs

func RouteTableResponsePtr(v *RouteTableResponseArgs) RouteTableResponsePtrInput {
	return (*routeTableResponsePtrType)(v)
}

func (*routeTableResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableResponse)(nil)).Elem()
}

func (i *routeTableResponsePtrType) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return i.ToRouteTableResponsePtrOutputWithContext(context.Background())
}

func (i *routeTableResponsePtrType) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteTableResponsePtrOutput)
}

// Route table resource.
type RouteTableResponseOutput struct{ *pulumi.OutputState }

func (RouteTableResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteTableResponse)(nil)).Elem()
}

func (o RouteTableResponseOutput) ToRouteTableResponseOutput() RouteTableResponseOutput {
	return o
}

func (o RouteTableResponseOutput) ToRouteTableResponseOutputWithContext(ctx context.Context) RouteTableResponseOutput {
	return o
}

func (o RouteTableResponseOutput) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return o.ToRouteTableResponsePtrOutputWithContext(context.Background())
}

func (o RouteTableResponseOutput) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *RouteTableResponse {
		return &v
	}).(RouteTableResponsePtrOutput)
}

// Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableResponseOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *bool { return v.DisableBgpRoutePropagation }).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteTableResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTableResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteTableResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTableResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RouteTableResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableResponseOutput) Routes() RouteResponseArrayOutput {
	return o.ApplyT(func(v RouteTableResponse) []RouteResponse { return v.Routes }).(RouteResponseArrayOutput)
}

// A collection of references to subnets.
func (o RouteTableResponseOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v RouteTableResponse) []SubnetResponse { return v.Subnets }).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o RouteTableResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v RouteTableResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteTableResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RouteTableResponse) string { return v.Type }).(pulumi.StringOutput)
}

type RouteTableResponsePtrOutput struct{ *pulumi.OutputState }

func (RouteTableResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteTableResponse)(nil)).Elem()
}

func (o RouteTableResponsePtrOutput) ToRouteTableResponsePtrOutput() RouteTableResponsePtrOutput {
	return o
}

func (o RouteTableResponsePtrOutput) ToRouteTableResponsePtrOutputWithContext(ctx context.Context) RouteTableResponsePtrOutput {
	return o
}

func (o RouteTableResponsePtrOutput) Elem() RouteTableResponseOutput {
	return o.ApplyT(func(v *RouteTableResponse) RouteTableResponse { return *v }).(RouteTableResponseOutput)
}

// Gets or sets whether to disable the routes learned by BGP on that route table. True means disable.
func (o RouteTableResponsePtrOutput) DisableBgpRoutePropagation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *bool {
		if v == nil {
			return nil
		}
		return v.DisableBgpRoutePropagation
	}).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o RouteTableResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o RouteTableResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource location.
func (o RouteTableResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o RouteTableResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o RouteTableResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Collection of routes contained within a route table.
func (o RouteTableResponsePtrOutput) Routes() RouteResponseArrayOutput {
	return o.ApplyT(func(v *RouteTableResponse) []RouteResponse {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(RouteResponseArrayOutput)
}

// A collection of references to subnets.
func (o RouteTableResponsePtrOutput) Subnets() SubnetResponseArrayOutput {
	return o.ApplyT(func(v *RouteTableResponse) []SubnetResponse {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(SubnetResponseArrayOutput)
}

// Resource tags.
func (o RouteTableResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RouteTableResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o RouteTableResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RouteTableResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Network security rule.
type SecurityRuleType struct {
	// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
	Access string `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes []string `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups []ApplicationSecurityGroupType `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
	Direction string `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes []string `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups []ApplicationSecurityGroupType `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
}

// SecurityRuleTypeInput is an input type that accepts SecurityRuleTypeArgs and SecurityRuleTypeOutput values.
// You can construct a concrete instance of `SecurityRuleTypeInput` via:
//
//          SecurityRuleTypeArgs{...}
type SecurityRuleTypeInput interface {
	pulumi.Input

	ToSecurityRuleTypeOutput() SecurityRuleTypeOutput
	ToSecurityRuleTypeOutputWithContext(context.Context) SecurityRuleTypeOutput
}

// Network security rule.
type SecurityRuleTypeArgs struct {
	// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
	Access pulumi.StringInput `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix pulumi.StringPtrInput `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes pulumi.StringArrayInput `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups ApplicationSecurityGroupTypeArrayInput `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange pulumi.StringPtrInput `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges pulumi.StringArrayInput `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
	Direction pulumi.StringInput `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix pulumi.StringPtrInput `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes pulumi.StringArrayInput `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups ApplicationSecurityGroupTypeArrayInput `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange pulumi.StringPtrInput `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges pulumi.StringArrayInput `pulumi:"sourcePortRanges"`
}

func (SecurityRuleTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleType)(nil)).Elem()
}

func (i SecurityRuleTypeArgs) ToSecurityRuleTypeOutput() SecurityRuleTypeOutput {
	return i.ToSecurityRuleTypeOutputWithContext(context.Background())
}

func (i SecurityRuleTypeArgs) ToSecurityRuleTypeOutputWithContext(ctx context.Context) SecurityRuleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleTypeOutput)
}

// SecurityRuleTypeArrayInput is an input type that accepts SecurityRuleTypeArray and SecurityRuleTypeArrayOutput values.
// You can construct a concrete instance of `SecurityRuleTypeArrayInput` via:
//
//          SecurityRuleTypeArray{ SecurityRuleTypeArgs{...} }
type SecurityRuleTypeArrayInput interface {
	pulumi.Input

	ToSecurityRuleTypeArrayOutput() SecurityRuleTypeArrayOutput
	ToSecurityRuleTypeArrayOutputWithContext(context.Context) SecurityRuleTypeArrayOutput
}

type SecurityRuleTypeArray []SecurityRuleTypeInput

func (SecurityRuleTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleType)(nil)).Elem()
}

func (i SecurityRuleTypeArray) ToSecurityRuleTypeArrayOutput() SecurityRuleTypeArrayOutput {
	return i.ToSecurityRuleTypeArrayOutputWithContext(context.Background())
}

func (i SecurityRuleTypeArray) ToSecurityRuleTypeArrayOutputWithContext(ctx context.Context) SecurityRuleTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleTypeArrayOutput)
}

// Network security rule.
type SecurityRuleTypeOutput struct{ *pulumi.OutputState }

func (SecurityRuleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleType)(nil)).Elem()
}

func (o SecurityRuleTypeOutput) ToSecurityRuleTypeOutput() SecurityRuleTypeOutput {
	return o
}

func (o SecurityRuleTypeOutput) ToSecurityRuleTypeOutputWithContext(ctx context.Context) SecurityRuleTypeOutput {
	return o
}

// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
func (o SecurityRuleTypeOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleType) string { return v.Access }).(pulumi.StringOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o SecurityRuleTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
func (o SecurityRuleTypeOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.DestinationAddressPrefix }).(pulumi.StringPtrOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o SecurityRuleTypeOutput) DestinationAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []string { return v.DestinationAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as destination.
func (o SecurityRuleTypeOutput) DestinationApplicationSecurityGroups() ApplicationSecurityGroupTypeArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []ApplicationSecurityGroupType { return v.DestinationApplicationSecurityGroups }).(ApplicationSecurityGroupTypeArrayOutput)
}

// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleTypeOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o SecurityRuleTypeOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
func (o SecurityRuleTypeOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleType) string { return v.Direction }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SecurityRuleTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SecurityRuleTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SecurityRuleTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o SecurityRuleTypeOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
func (o SecurityRuleTypeOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleType) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o SecurityRuleTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
func (o SecurityRuleTypeOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.SourceAddressPrefix }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP ranges.
func (o SecurityRuleTypeOutput) SourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []string { return v.SourceAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as source.
func (o SecurityRuleTypeOutput) SourceApplicationSecurityGroups() ApplicationSecurityGroupTypeArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []ApplicationSecurityGroupType { return v.SourceApplicationSecurityGroups }).(ApplicationSecurityGroupTypeArrayOutput)
}

// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleTypeOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleType) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

// The source port ranges.
func (o SecurityRuleTypeOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleType) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

type SecurityRuleTypeArrayOutput struct{ *pulumi.OutputState }

func (SecurityRuleTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleType)(nil)).Elem()
}

func (o SecurityRuleTypeArrayOutput) ToSecurityRuleTypeArrayOutput() SecurityRuleTypeArrayOutput {
	return o
}

func (o SecurityRuleTypeArrayOutput) ToSecurityRuleTypeArrayOutputWithContext(ctx context.Context) SecurityRuleTypeArrayOutput {
	return o
}

func (o SecurityRuleTypeArrayOutput) Index(i pulumi.IntInput) SecurityRuleTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityRuleType {
		return vs[0].([]SecurityRuleType)[vs[1].(int)]
	}).(SecurityRuleTypeOutput)
}

// Network security rule.
type SecurityRuleResponse struct {
	// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
	Access string `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description *string `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix *string `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes []string `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange *string `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges []string `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
	Direction string `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority *int `pulumi:"priority"`
	// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
	Protocol string `pulumi:"protocol"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix *string `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes []string `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups []ApplicationSecurityGroupResponse `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange *string `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges []string `pulumi:"sourcePortRanges"`
}

// SecurityRuleResponseInput is an input type that accepts SecurityRuleResponseArgs and SecurityRuleResponseOutput values.
// You can construct a concrete instance of `SecurityRuleResponseInput` via:
//
//          SecurityRuleResponseArgs{...}
type SecurityRuleResponseInput interface {
	pulumi.Input

	ToSecurityRuleResponseOutput() SecurityRuleResponseOutput
	ToSecurityRuleResponseOutputWithContext(context.Context) SecurityRuleResponseOutput
}

// Network security rule.
type SecurityRuleResponseArgs struct {
	// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
	Access pulumi.StringInput `pulumi:"access"`
	// A description for this rule. Restricted to 140 chars.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
	DestinationAddressPrefix pulumi.StringPtrInput `pulumi:"destinationAddressPrefix"`
	// The destination address prefixes. CIDR or destination IP ranges.
	DestinationAddressPrefixes pulumi.StringArrayInput `pulumi:"destinationAddressPrefixes"`
	// The application security group specified as destination.
	DestinationApplicationSecurityGroups ApplicationSecurityGroupResponseArrayInput `pulumi:"destinationApplicationSecurityGroups"`
	// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	DestinationPortRange pulumi.StringPtrInput `pulumi:"destinationPortRange"`
	// The destination port ranges.
	DestinationPortRanges pulumi.StringArrayInput `pulumi:"destinationPortRanges"`
	// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
	Direction pulumi.StringInput `pulumi:"direction"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
	SourceAddressPrefix pulumi.StringPtrInput `pulumi:"sourceAddressPrefix"`
	// The CIDR or source IP ranges.
	SourceAddressPrefixes pulumi.StringArrayInput `pulumi:"sourceAddressPrefixes"`
	// The application security group specified as source.
	SourceApplicationSecurityGroups ApplicationSecurityGroupResponseArrayInput `pulumi:"sourceApplicationSecurityGroups"`
	// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
	SourcePortRange pulumi.StringPtrInput `pulumi:"sourcePortRange"`
	// The source port ranges.
	SourcePortRanges pulumi.StringArrayInput `pulumi:"sourcePortRanges"`
}

func (SecurityRuleResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleResponse)(nil)).Elem()
}

func (i SecurityRuleResponseArgs) ToSecurityRuleResponseOutput() SecurityRuleResponseOutput {
	return i.ToSecurityRuleResponseOutputWithContext(context.Background())
}

func (i SecurityRuleResponseArgs) ToSecurityRuleResponseOutputWithContext(ctx context.Context) SecurityRuleResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleResponseOutput)
}

// SecurityRuleResponseArrayInput is an input type that accepts SecurityRuleResponseArray and SecurityRuleResponseArrayOutput values.
// You can construct a concrete instance of `SecurityRuleResponseArrayInput` via:
//
//          SecurityRuleResponseArray{ SecurityRuleResponseArgs{...} }
type SecurityRuleResponseArrayInput interface {
	pulumi.Input

	ToSecurityRuleResponseArrayOutput() SecurityRuleResponseArrayOutput
	ToSecurityRuleResponseArrayOutputWithContext(context.Context) SecurityRuleResponseArrayOutput
}

type SecurityRuleResponseArray []SecurityRuleResponseInput

func (SecurityRuleResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleResponse)(nil)).Elem()
}

func (i SecurityRuleResponseArray) ToSecurityRuleResponseArrayOutput() SecurityRuleResponseArrayOutput {
	return i.ToSecurityRuleResponseArrayOutputWithContext(context.Background())
}

func (i SecurityRuleResponseArray) ToSecurityRuleResponseArrayOutputWithContext(ctx context.Context) SecurityRuleResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityRuleResponseArrayOutput)
}

// Network security rule.
type SecurityRuleResponseOutput struct{ *pulumi.OutputState }

func (SecurityRuleResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityRuleResponse)(nil)).Elem()
}

func (o SecurityRuleResponseOutput) ToSecurityRuleResponseOutput() SecurityRuleResponseOutput {
	return o
}

func (o SecurityRuleResponseOutput) ToSecurityRuleResponseOutputWithContext(ctx context.Context) SecurityRuleResponseOutput {
	return o
}

// The network traffic is allowed or denied. Possible values are: 'Allow' and 'Deny'.
func (o SecurityRuleResponseOutput) Access() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Access }).(pulumi.StringOutput)
}

// A description for this rule. Restricted to 140 chars.
func (o SecurityRuleResponseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The destination address prefix. CIDR or destination IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
func (o SecurityRuleResponseOutput) DestinationAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.DestinationAddressPrefix }).(pulumi.StringPtrOutput)
}

// The destination address prefixes. CIDR or destination IP ranges.
func (o SecurityRuleResponseOutput) DestinationAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.DestinationAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as destination.
func (o SecurityRuleResponseOutput) DestinationApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []ApplicationSecurityGroupResponse {
		return v.DestinationApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// The destination port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleResponseOutput) DestinationPortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.DestinationPortRange }).(pulumi.StringPtrOutput)
}

// The destination port ranges.
func (o SecurityRuleResponseOutput) DestinationPortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.DestinationPortRanges }).(pulumi.StringArrayOutput)
}

// The direction of the rule. The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are: 'Inbound' and 'Outbound'.
func (o SecurityRuleResponseOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Direction }).(pulumi.StringOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SecurityRuleResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SecurityRuleResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SecurityRuleResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
func (o SecurityRuleResponseOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Network protocol this rule applies to. Possible values are 'Tcp', 'Udp', and '*'.
func (o SecurityRuleResponseOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityRuleResponse) string { return v.Protocol }).(pulumi.StringOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o SecurityRuleResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP range. Asterisk '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
func (o SecurityRuleResponseOutput) SourceAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.SourceAddressPrefix }).(pulumi.StringPtrOutput)
}

// The CIDR or source IP ranges.
func (o SecurityRuleResponseOutput) SourceAddressPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.SourceAddressPrefixes }).(pulumi.StringArrayOutput)
}

// The application security group specified as source.
func (o SecurityRuleResponseOutput) SourceApplicationSecurityGroups() ApplicationSecurityGroupResponseArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []ApplicationSecurityGroupResponse {
		return v.SourceApplicationSecurityGroups
	}).(ApplicationSecurityGroupResponseArrayOutput)
}

// The source port or range. Integer or range between 0 and 65535. Asterisk '*' can also be used to match all ports.
func (o SecurityRuleResponseOutput) SourcePortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SecurityRuleResponse) *string { return v.SourcePortRange }).(pulumi.StringPtrOutput)
}

// The source port ranges.
func (o SecurityRuleResponseOutput) SourcePortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SecurityRuleResponse) []string { return v.SourcePortRanges }).(pulumi.StringArrayOutput)
}

type SecurityRuleResponseArrayOutput struct{ *pulumi.OutputState }

func (SecurityRuleResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityRuleResponse)(nil)).Elem()
}

func (o SecurityRuleResponseArrayOutput) ToSecurityRuleResponseArrayOutput() SecurityRuleResponseArrayOutput {
	return o
}

func (o SecurityRuleResponseArrayOutput) ToSecurityRuleResponseArrayOutputWithContext(ctx context.Context) SecurityRuleResponseArrayOutput {
	return o
}

func (o SecurityRuleResponseArrayOutput) Index(i pulumi.IntInput) SecurityRuleResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityRuleResponse {
		return vs[0].([]SecurityRuleResponse)[vs[1].(int)]
	}).(SecurityRuleResponseOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormat struct {
	// A list of locations.
	Locations []string `pulumi:"locations"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The type of the endpoint service.
	Service *string `pulumi:"service"`
}

// ServiceEndpointPropertiesFormatInput is an input type that accepts ServiceEndpointPropertiesFormatArgs and ServiceEndpointPropertiesFormatOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatInput` via:
//
//          ServiceEndpointPropertiesFormatArgs{...}
type ServiceEndpointPropertiesFormatInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput
	ToServiceEndpointPropertiesFormatOutputWithContext(context.Context) ServiceEndpointPropertiesFormatOutput
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatArgs struct {
	// A list of locations.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The type of the endpoint service.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (ServiceEndpointPropertiesFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatArgs) ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput {
	return i.ToServiceEndpointPropertiesFormatOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatArgs) ToServiceEndpointPropertiesFormatOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatOutput)
}

// ServiceEndpointPropertiesFormatArrayInput is an input type that accepts ServiceEndpointPropertiesFormatArray and ServiceEndpointPropertiesFormatArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatArrayInput` via:
//
//          ServiceEndpointPropertiesFormatArray{ ServiceEndpointPropertiesFormatArgs{...} }
type ServiceEndpointPropertiesFormatArrayInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput
	ToServiceEndpointPropertiesFormatArrayOutputWithContext(context.Context) ServiceEndpointPropertiesFormatArrayOutput
}

type ServiceEndpointPropertiesFormatArray []ServiceEndpointPropertiesFormatInput

func (ServiceEndpointPropertiesFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatArray) ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput {
	return i.ToServiceEndpointPropertiesFormatArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatArray) ToServiceEndpointPropertiesFormatArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatArrayOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatOutput) ToServiceEndpointPropertiesFormatOutput() ServiceEndpointPropertiesFormatOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatOutput) ToServiceEndpointPropertiesFormatOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatOutput {
	return o
}

// A list of locations.
func (o ServiceEndpointPropertiesFormatOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormat) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// The provisioning state of the resource.
func (o ServiceEndpointPropertiesFormatOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormat) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The type of the endpoint service.
func (o ServiceEndpointPropertiesFormatOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormat) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ServiceEndpointPropertiesFormatArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormat)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatArrayOutput) ToServiceEndpointPropertiesFormatArrayOutput() ServiceEndpointPropertiesFormatArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatArrayOutput) ToServiceEndpointPropertiesFormatArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPropertiesFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPropertiesFormat {
		return vs[0].([]ServiceEndpointPropertiesFormat)[vs[1].(int)]
	}).(ServiceEndpointPropertiesFormatOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatResponse struct {
	// A list of locations.
	Locations []string `pulumi:"locations"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The type of the endpoint service.
	Service *string `pulumi:"service"`
}

// ServiceEndpointPropertiesFormatResponseInput is an input type that accepts ServiceEndpointPropertiesFormatResponseArgs and ServiceEndpointPropertiesFormatResponseOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatResponseInput` via:
//
//          ServiceEndpointPropertiesFormatResponseArgs{...}
type ServiceEndpointPropertiesFormatResponseInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatResponseOutput() ServiceEndpointPropertiesFormatResponseOutput
	ToServiceEndpointPropertiesFormatResponseOutputWithContext(context.Context) ServiceEndpointPropertiesFormatResponseOutput
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatResponseArgs struct {
	// A list of locations.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The type of the endpoint service.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (ServiceEndpointPropertiesFormatResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatResponseArgs) ToServiceEndpointPropertiesFormatResponseOutput() ServiceEndpointPropertiesFormatResponseOutput {
	return i.ToServiceEndpointPropertiesFormatResponseOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatResponseArgs) ToServiceEndpointPropertiesFormatResponseOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatResponseOutput)
}

// ServiceEndpointPropertiesFormatResponseArrayInput is an input type that accepts ServiceEndpointPropertiesFormatResponseArray and ServiceEndpointPropertiesFormatResponseArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointPropertiesFormatResponseArrayInput` via:
//
//          ServiceEndpointPropertiesFormatResponseArray{ ServiceEndpointPropertiesFormatResponseArgs{...} }
type ServiceEndpointPropertiesFormatResponseArrayInput interface {
	pulumi.Input

	ToServiceEndpointPropertiesFormatResponseArrayOutput() ServiceEndpointPropertiesFormatResponseArrayOutput
	ToServiceEndpointPropertiesFormatResponseArrayOutputWithContext(context.Context) ServiceEndpointPropertiesFormatResponseArrayOutput
}

type ServiceEndpointPropertiesFormatResponseArray []ServiceEndpointPropertiesFormatResponseInput

func (ServiceEndpointPropertiesFormatResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (i ServiceEndpointPropertiesFormatResponseArray) ToServiceEndpointPropertiesFormatResponseArrayOutput() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return i.ToServiceEndpointPropertiesFormatResponseArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointPropertiesFormatResponseArray) ToServiceEndpointPropertiesFormatResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointPropertiesFormatResponseArrayOutput)
}

// The service endpoint properties.
type ServiceEndpointPropertiesFormatResponseOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatResponseOutput) ToServiceEndpointPropertiesFormatResponseOutput() ServiceEndpointPropertiesFormatResponseOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseOutput) ToServiceEndpointPropertiesFormatResponseOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseOutput {
	return o
}

// A list of locations.
func (o ServiceEndpointPropertiesFormatResponseOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// The provisioning state of the resource.
func (o ServiceEndpointPropertiesFormatResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The type of the endpoint service.
func (o ServiceEndpointPropertiesFormatResponseOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceEndpointPropertiesFormatResponse) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type ServiceEndpointPropertiesFormatResponseArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointPropertiesFormatResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceEndpointPropertiesFormatResponse)(nil)).Elem()
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) ToServiceEndpointPropertiesFormatResponseArrayOutput() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) ToServiceEndpointPropertiesFormatResponseArrayOutputWithContext(ctx context.Context) ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o
}

func (o ServiceEndpointPropertiesFormatResponseArrayOutput) Index(i pulumi.IntInput) ServiceEndpointPropertiesFormatResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceEndpointPropertiesFormatResponse {
		return vs[0].([]ServiceEndpointPropertiesFormatResponse)[vs[1].(int)]
	}).(ServiceEndpointPropertiesFormatResponseOutput)
}

// Reference to another subresource.
type SubResource struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// SubResourceInput is an input type that accepts SubResourceArgs and SubResourceOutput values.
// You can construct a concrete instance of `SubResourceInput` via:
//
//          SubResourceArgs{...}
type SubResourceInput interface {
	pulumi.Input

	ToSubResourceOutput() SubResourceOutput
	ToSubResourceOutputWithContext(context.Context) SubResourceOutput
}

// Reference to another subresource.
type SubResourceArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (i SubResourceArgs) ToSubResourceOutput() SubResourceOutput {
	return i.ToSubResourceOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput)
}

func (i SubResourceArgs) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i SubResourceArgs) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceOutput).ToSubResourcePtrOutputWithContext(ctx)
}

// SubResourcePtrInput is an input type that accepts SubResourceArgs, SubResourcePtr and SubResourcePtrOutput values.
// You can construct a concrete instance of `SubResourcePtrInput` via:
//
//          SubResourceArgs{...}
//
//  or:
//
//          nil
type SubResourcePtrInput interface {
	pulumi.Input

	ToSubResourcePtrOutput() SubResourcePtrOutput
	ToSubResourcePtrOutputWithContext(context.Context) SubResourcePtrOutput
}

type subResourcePtrType SubResourceArgs

func SubResourcePtr(v *SubResourceArgs) SubResourcePtrInput {
	return (*subResourcePtrType)(v)
}

func (*subResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (i *subResourcePtrType) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return i.ToSubResourcePtrOutputWithContext(context.Background())
}

func (i *subResourcePtrType) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourcePtrOutput)
}

// SubResourceArrayInput is an input type that accepts SubResourceArray and SubResourceArrayOutput values.
// You can construct a concrete instance of `SubResourceArrayInput` via:
//
//          SubResourceArray{ SubResourceArgs{...} }
type SubResourceArrayInput interface {
	pulumi.Input

	ToSubResourceArrayOutput() SubResourceArrayOutput
	ToSubResourceArrayOutputWithContext(context.Context) SubResourceArrayOutput
}

type SubResourceArray []SubResourceInput

func (SubResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (i SubResourceArray) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return i.ToSubResourceArrayOutputWithContext(context.Background())
}

func (i SubResourceArray) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceArrayOutput)
}

// Reference to another subresource.
type SubResourceOutput struct{ *pulumi.OutputState }

func (SubResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResource)(nil)).Elem()
}

func (o SubResourceOutput) ToSubResourceOutput() SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourceOutputWithContext(ctx context.Context) SubResourceOutput {
	return o
}

func (o SubResourceOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o.ToSubResourcePtrOutputWithContext(context.Background())
}

func (o SubResourceOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o.ApplyT(func(v SubResource) *SubResource {
		return &v
	}).(SubResourcePtrOutput)
}

// Resource ID.
func (o SubResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourcePtrOutput struct{ *pulumi.OutputState }

func (SubResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResource)(nil)).Elem()
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutput() SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) ToSubResourcePtrOutputWithContext(ctx context.Context) SubResourcePtrOutput {
	return o
}

func (o SubResourcePtrOutput) Elem() SubResourceOutput {
	return o.ApplyT(func(v *SubResource) SubResource { return *v }).(SubResourceOutput)
}

// Resource ID.
func (o SubResourcePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResource) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceArrayOutput struct{ *pulumi.OutputState }

func (SubResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResource)(nil)).Elem()
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutput() SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) ToSubResourceArrayOutputWithContext(ctx context.Context) SubResourceArrayOutput {
	return o
}

func (o SubResourceArrayOutput) Index(i pulumi.IntInput) SubResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResource {
		return vs[0].([]SubResource)[vs[1].(int)]
	}).(SubResourceOutput)
}

// Reference to another subresource.
type SubResourceResponse struct {
	// Resource ID.
	Id *string `pulumi:"id"`
}

// SubResourceResponseInput is an input type that accepts SubResourceResponseArgs and SubResourceResponseOutput values.
// You can construct a concrete instance of `SubResourceResponseInput` via:
//
//          SubResourceResponseArgs{...}
type SubResourceResponseInput interface {
	pulumi.Input

	ToSubResourceResponseOutput() SubResourceResponseOutput
	ToSubResourceResponseOutputWithContext(context.Context) SubResourceResponseOutput
}

// Reference to another subresource.
type SubResourceResponseArgs struct {
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (SubResourceResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceResponse)(nil)).Elem()
}

func (i SubResourceResponseArgs) ToSubResourceResponseOutput() SubResourceResponseOutput {
	return i.ToSubResourceResponseOutputWithContext(context.Background())
}

func (i SubResourceResponseArgs) ToSubResourceResponseOutputWithContext(ctx context.Context) SubResourceResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponseOutput)
}

func (i SubResourceResponseArgs) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return i.ToSubResourceResponsePtrOutputWithContext(context.Background())
}

func (i SubResourceResponseArgs) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponseOutput).ToSubResourceResponsePtrOutputWithContext(ctx)
}

// SubResourceResponsePtrInput is an input type that accepts SubResourceResponseArgs, SubResourceResponsePtr and SubResourceResponsePtrOutput values.
// You can construct a concrete instance of `SubResourceResponsePtrInput` via:
//
//          SubResourceResponseArgs{...}
//
//  or:
//
//          nil
type SubResourceResponsePtrInput interface {
	pulumi.Input

	ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput
	ToSubResourceResponsePtrOutputWithContext(context.Context) SubResourceResponsePtrOutput
}

type subResourceResponsePtrType SubResourceResponseArgs

func SubResourceResponsePtr(v *SubResourceResponseArgs) SubResourceResponsePtrInput {
	return (*subResourceResponsePtrType)(v)
}

func (*subResourceResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceResponse)(nil)).Elem()
}

func (i *subResourceResponsePtrType) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return i.ToSubResourceResponsePtrOutputWithContext(context.Background())
}

func (i *subResourceResponsePtrType) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponsePtrOutput)
}

// SubResourceResponseArrayInput is an input type that accepts SubResourceResponseArray and SubResourceResponseArrayOutput values.
// You can construct a concrete instance of `SubResourceResponseArrayInput` via:
//
//          SubResourceResponseArray{ SubResourceResponseArgs{...} }
type SubResourceResponseArrayInput interface {
	pulumi.Input

	ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput
	ToSubResourceResponseArrayOutputWithContext(context.Context) SubResourceResponseArrayOutput
}

type SubResourceResponseArray []SubResourceResponseInput

func (SubResourceResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceResponse)(nil)).Elem()
}

func (i SubResourceResponseArray) ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput {
	return i.ToSubResourceResponseArrayOutputWithContext(context.Background())
}

func (i SubResourceResponseArray) ToSubResourceResponseArrayOutputWithContext(ctx context.Context) SubResourceResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubResourceResponseArrayOutput)
}

// Reference to another subresource.
type SubResourceResponseOutput struct{ *pulumi.OutputState }

func (SubResourceResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutput() SubResourceResponseOutput {
	return o
}

func (o SubResourceResponseOutput) ToSubResourceResponseOutputWithContext(ctx context.Context) SubResourceResponseOutput {
	return o
}

func (o SubResourceResponseOutput) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return o.ToSubResourceResponsePtrOutputWithContext(context.Background())
}

func (o SubResourceResponseOutput) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return o.ApplyT(func(v SubResourceResponse) *SubResourceResponse {
		return &v
	}).(SubResourceResponsePtrOutput)
}

// Resource ID.
func (o SubResourceResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubResourceResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

type SubResourceResponsePtrOutput struct{ *pulumi.OutputState }

func (SubResourceResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutput() SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) ToSubResourceResponsePtrOutputWithContext(ctx context.Context) SubResourceResponsePtrOutput {
	return o
}

func (o SubResourceResponsePtrOutput) Elem() SubResourceResponseOutput {
	return o.ApplyT(func(v *SubResourceResponse) SubResourceResponse { return *v }).(SubResourceResponseOutput)
}

// Resource ID.
func (o SubResourceResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubResourceResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

type SubResourceResponseArrayOutput struct{ *pulumi.OutputState }

func (SubResourceResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubResourceResponse)(nil)).Elem()
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutput() SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) ToSubResourceResponseArrayOutputWithContext(ctx context.Context) SubResourceResponseArrayOutput {
	return o
}

func (o SubResourceResponseArrayOutput) Index(i pulumi.IntInput) SubResourceResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubResourceResponse {
		return vs[0].([]SubResourceResponse)[vs[1].(int)]
	}).(SubResourceResponseOutput)
}

// Subnet in a virtual network resource.
type SubnetType struct {
	// The address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupType `pulumi:"networkSecurityGroup"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Gets an array of references to the external resources using subnet.
	ResourceNavigationLinks []ResourceNavigationLink `pulumi:"resourceNavigationLinks"`
	// The reference of the RouteTable resource.
	RouteTable *RouteTableType `pulumi:"routeTable"`
	// An array of service endpoints.
	ServiceEndpoints []ServiceEndpointPropertiesFormat `pulumi:"serviceEndpoints"`
}

// SubnetTypeInput is an input type that accepts SubnetTypeArgs and SubnetTypeOutput values.
// You can construct a concrete instance of `SubnetTypeInput` via:
//
//          SubnetTypeArgs{...}
type SubnetTypeInput interface {
	pulumi.Input

	ToSubnetTypeOutput() SubnetTypeOutput
	ToSubnetTypeOutputWithContext(context.Context) SubnetTypeOutput
}

// Subnet in a virtual network resource.
type SubnetTypeArgs struct {
	// The address prefix for the subnet.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup NetworkSecurityGroupTypePtrInput `pulumi:"networkSecurityGroup"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Gets an array of references to the external resources using subnet.
	ResourceNavigationLinks ResourceNavigationLinkArrayInput `pulumi:"resourceNavigationLinks"`
	// The reference of the RouteTable resource.
	RouteTable RouteTableTypePtrInput `pulumi:"routeTable"`
	// An array of service endpoints.
	ServiceEndpoints ServiceEndpointPropertiesFormatArrayInput `pulumi:"serviceEndpoints"`
}

func (SubnetTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetType)(nil)).Elem()
}

func (i SubnetTypeArgs) ToSubnetTypeOutput() SubnetTypeOutput {
	return i.ToSubnetTypeOutputWithContext(context.Background())
}

func (i SubnetTypeArgs) ToSubnetTypeOutputWithContext(ctx context.Context) SubnetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypeOutput)
}

func (i SubnetTypeArgs) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return i.ToSubnetTypePtrOutputWithContext(context.Background())
}

func (i SubnetTypeArgs) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypeOutput).ToSubnetTypePtrOutputWithContext(ctx)
}

// SubnetTypePtrInput is an input type that accepts SubnetTypeArgs, SubnetTypePtr and SubnetTypePtrOutput values.
// You can construct a concrete instance of `SubnetTypePtrInput` via:
//
//          SubnetTypeArgs{...}
//
//  or:
//
//          nil
type SubnetTypePtrInput interface {
	pulumi.Input

	ToSubnetTypePtrOutput() SubnetTypePtrOutput
	ToSubnetTypePtrOutputWithContext(context.Context) SubnetTypePtrOutput
}

type subnetTypePtrType SubnetTypeArgs

func SubnetTypePtr(v *SubnetTypeArgs) SubnetTypePtrInput {
	return (*subnetTypePtrType)(v)
}

func (*subnetTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetType)(nil)).Elem()
}

func (i *subnetTypePtrType) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return i.ToSubnetTypePtrOutputWithContext(context.Background())
}

func (i *subnetTypePtrType) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypePtrOutput)
}

// SubnetTypeArrayInput is an input type that accepts SubnetTypeArray and SubnetTypeArrayOutput values.
// You can construct a concrete instance of `SubnetTypeArrayInput` via:
//
//          SubnetTypeArray{ SubnetTypeArgs{...} }
type SubnetTypeArrayInput interface {
	pulumi.Input

	ToSubnetTypeArrayOutput() SubnetTypeArrayOutput
	ToSubnetTypeArrayOutputWithContext(context.Context) SubnetTypeArrayOutput
}

type SubnetTypeArray []SubnetTypeInput

func (SubnetTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetType)(nil)).Elem()
}

func (i SubnetTypeArray) ToSubnetTypeArrayOutput() SubnetTypeArrayOutput {
	return i.ToSubnetTypeArrayOutputWithContext(context.Background())
}

func (i SubnetTypeArray) ToSubnetTypeArrayOutputWithContext(ctx context.Context) SubnetTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetTypeArrayOutput)
}

// Subnet in a virtual network resource.
type SubnetTypeOutput struct{ *pulumi.OutputState }

func (SubnetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetType)(nil)).Elem()
}

func (o SubnetTypeOutput) ToSubnetTypeOutput() SubnetTypeOutput {
	return o
}

func (o SubnetTypeOutput) ToSubnetTypeOutputWithContext(ctx context.Context) SubnetTypeOutput {
	return o
}

func (o SubnetTypeOutput) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return o.ToSubnetTypePtrOutputWithContext(context.Background())
}

func (o SubnetTypeOutput) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return o.ApplyT(func(v SubnetType) *SubnetType {
		return &v
	}).(SubnetTypePtrOutput)
}

// The address prefix for the subnet.
func (o SubnetTypeOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SubnetTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o SubnetTypeOutput) NetworkSecurityGroup() NetworkSecurityGroupTypePtrOutput {
	return o.ApplyT(func(v SubnetType) *NetworkSecurityGroupType { return v.NetworkSecurityGroup }).(NetworkSecurityGroupTypePtrOutput)
}

// The provisioning state of the resource.
func (o SubnetTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Gets an array of references to the external resources using subnet.
func (o SubnetTypeOutput) ResourceNavigationLinks() ResourceNavigationLinkArrayOutput {
	return o.ApplyT(func(v SubnetType) []ResourceNavigationLink { return v.ResourceNavigationLinks }).(ResourceNavigationLinkArrayOutput)
}

// The reference of the RouteTable resource.
func (o SubnetTypeOutput) RouteTable() RouteTableTypePtrOutput {
	return o.ApplyT(func(v SubnetType) *RouteTableType { return v.RouteTable }).(RouteTableTypePtrOutput)
}

// An array of service endpoints.
func (o SubnetTypeOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatArrayOutput {
	return o.ApplyT(func(v SubnetType) []ServiceEndpointPropertiesFormat { return v.ServiceEndpoints }).(ServiceEndpointPropertiesFormatArrayOutput)
}

type SubnetTypePtrOutput struct{ *pulumi.OutputState }

func (SubnetTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetType)(nil)).Elem()
}

func (o SubnetTypePtrOutput) ToSubnetTypePtrOutput() SubnetTypePtrOutput {
	return o
}

func (o SubnetTypePtrOutput) ToSubnetTypePtrOutputWithContext(ctx context.Context) SubnetTypePtrOutput {
	return o
}

func (o SubnetTypePtrOutput) Elem() SubnetTypeOutput {
	return o.ApplyT(func(v *SubnetType) SubnetType { return *v }).(SubnetTypeOutput)
}

// The address prefix for the subnet.
func (o SubnetTypePtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SubnetTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o SubnetTypePtrOutput) NetworkSecurityGroup() NetworkSecurityGroupTypePtrOutput {
	return o.ApplyT(func(v *SubnetType) *NetworkSecurityGroupType {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupTypePtrOutput)
}

// The provisioning state of the resource.
func (o SubnetTypePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetType) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Gets an array of references to the external resources using subnet.
func (o SubnetTypePtrOutput) ResourceNavigationLinks() ResourceNavigationLinkArrayOutput {
	return o.ApplyT(func(v *SubnetType) []ResourceNavigationLink {
		if v == nil {
			return nil
		}
		return v.ResourceNavigationLinks
	}).(ResourceNavigationLinkArrayOutput)
}

// The reference of the RouteTable resource.
func (o SubnetTypePtrOutput) RouteTable() RouteTableTypePtrOutput {
	return o.ApplyT(func(v *SubnetType) *RouteTableType {
		if v == nil {
			return nil
		}
		return v.RouteTable
	}).(RouteTableTypePtrOutput)
}

// An array of service endpoints.
func (o SubnetTypePtrOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatArrayOutput {
	return o.ApplyT(func(v *SubnetType) []ServiceEndpointPropertiesFormat {
		if v == nil {
			return nil
		}
		return v.ServiceEndpoints
	}).(ServiceEndpointPropertiesFormatArrayOutput)
}

type SubnetTypeArrayOutput struct{ *pulumi.OutputState }

func (SubnetTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetType)(nil)).Elem()
}

func (o SubnetTypeArrayOutput) ToSubnetTypeArrayOutput() SubnetTypeArrayOutput {
	return o
}

func (o SubnetTypeArrayOutput) ToSubnetTypeArrayOutputWithContext(ctx context.Context) SubnetTypeArrayOutput {
	return o
}

func (o SubnetTypeArrayOutput) Index(i pulumi.IntInput) SubnetTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetType {
		return vs[0].([]SubnetType)[vs[1].(int)]
	}).(SubnetTypeOutput)
}

// Subnet in a virtual network resource.
type SubnetResponse struct {
	// The address prefix for the subnet.
	AddressPrefix *string `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Gets an array of references to the network interface IP configurations using subnet.
	IpConfigurations []IPConfigurationResponse `pulumi:"ipConfigurations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup *NetworkSecurityGroupResponse `pulumi:"networkSecurityGroup"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// Gets an array of references to the external resources using subnet.
	ResourceNavigationLinks []ResourceNavigationLinkResponse `pulumi:"resourceNavigationLinks"`
	// The reference of the RouteTable resource.
	RouteTable *RouteTableResponse `pulumi:"routeTable"`
	// An array of service endpoints.
	ServiceEndpoints []ServiceEndpointPropertiesFormatResponse `pulumi:"serviceEndpoints"`
}

// SubnetResponseInput is an input type that accepts SubnetResponseArgs and SubnetResponseOutput values.
// You can construct a concrete instance of `SubnetResponseInput` via:
//
//          SubnetResponseArgs{...}
type SubnetResponseInput interface {
	pulumi.Input

	ToSubnetResponseOutput() SubnetResponseOutput
	ToSubnetResponseOutputWithContext(context.Context) SubnetResponseOutput
}

// Subnet in a virtual network resource.
type SubnetResponseArgs struct {
	// The address prefix for the subnet.
	AddressPrefix pulumi.StringPtrInput `pulumi:"addressPrefix"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Gets an array of references to the network interface IP configurations using subnet.
	IpConfigurations IPConfigurationResponseArrayInput `pulumi:"ipConfigurations"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The reference of the NetworkSecurityGroup resource.
	NetworkSecurityGroup NetworkSecurityGroupResponsePtrInput `pulumi:"networkSecurityGroup"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// Gets an array of references to the external resources using subnet.
	ResourceNavigationLinks ResourceNavigationLinkResponseArrayInput `pulumi:"resourceNavigationLinks"`
	// The reference of the RouteTable resource.
	RouteTable RouteTableResponsePtrInput `pulumi:"routeTable"`
	// An array of service endpoints.
	ServiceEndpoints ServiceEndpointPropertiesFormatResponseArrayInput `pulumi:"serviceEndpoints"`
}

func (SubnetResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResponse)(nil)).Elem()
}

func (i SubnetResponseArgs) ToSubnetResponseOutput() SubnetResponseOutput {
	return i.ToSubnetResponseOutputWithContext(context.Background())
}

func (i SubnetResponseArgs) ToSubnetResponseOutputWithContext(ctx context.Context) SubnetResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponseOutput)
}

func (i SubnetResponseArgs) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return i.ToSubnetResponsePtrOutputWithContext(context.Background())
}

func (i SubnetResponseArgs) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponseOutput).ToSubnetResponsePtrOutputWithContext(ctx)
}

// SubnetResponsePtrInput is an input type that accepts SubnetResponseArgs, SubnetResponsePtr and SubnetResponsePtrOutput values.
// You can construct a concrete instance of `SubnetResponsePtrInput` via:
//
//          SubnetResponseArgs{...}
//
//  or:
//
//          nil
type SubnetResponsePtrInput interface {
	pulumi.Input

	ToSubnetResponsePtrOutput() SubnetResponsePtrOutput
	ToSubnetResponsePtrOutputWithContext(context.Context) SubnetResponsePtrOutput
}

type subnetResponsePtrType SubnetResponseArgs

func SubnetResponsePtr(v *SubnetResponseArgs) SubnetResponsePtrInput {
	return (*subnetResponsePtrType)(v)
}

func (*subnetResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetResponse)(nil)).Elem()
}

func (i *subnetResponsePtrType) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return i.ToSubnetResponsePtrOutputWithContext(context.Background())
}

func (i *subnetResponsePtrType) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponsePtrOutput)
}

// SubnetResponseArrayInput is an input type that accepts SubnetResponseArray and SubnetResponseArrayOutput values.
// You can construct a concrete instance of `SubnetResponseArrayInput` via:
//
//          SubnetResponseArray{ SubnetResponseArgs{...} }
type SubnetResponseArrayInput interface {
	pulumi.Input

	ToSubnetResponseArrayOutput() SubnetResponseArrayOutput
	ToSubnetResponseArrayOutputWithContext(context.Context) SubnetResponseArrayOutput
}

type SubnetResponseArray []SubnetResponseInput

func (SubnetResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResponse)(nil)).Elem()
}

func (i SubnetResponseArray) ToSubnetResponseArrayOutput() SubnetResponseArrayOutput {
	return i.ToSubnetResponseArrayOutputWithContext(context.Background())
}

func (i SubnetResponseArray) ToSubnetResponseArrayOutputWithContext(ctx context.Context) SubnetResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetResponseArrayOutput)
}

// Subnet in a virtual network resource.
type SubnetResponseOutput struct{ *pulumi.OutputState }

func (SubnetResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseOutput) ToSubnetResponseOutput() SubnetResponseOutput {
	return o
}

func (o SubnetResponseOutput) ToSubnetResponseOutputWithContext(ctx context.Context) SubnetResponseOutput {
	return o
}

func (o SubnetResponseOutput) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return o.ToSubnetResponsePtrOutputWithContext(context.Background())
}

func (o SubnetResponseOutput) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *SubnetResponse {
		return &v
	}).(SubnetResponsePtrOutput)
}

// The address prefix for the subnet.
func (o SubnetResponseOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.AddressPrefix }).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SubnetResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets an array of references to the network interface IP configurations using subnet.
func (o SubnetResponseOutput) IpConfigurations() IPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []IPConfigurationResponse { return v.IpConfigurations }).(IPConfigurationResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o SubnetResponseOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *NetworkSecurityGroupResponse { return v.NetworkSecurityGroup }).(NetworkSecurityGroupResponsePtrOutput)
}

// The provisioning state of the resource.
func (o SubnetResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubnetResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Gets an array of references to the external resources using subnet.
func (o SubnetResponseOutput) ResourceNavigationLinks() ResourceNavigationLinkResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ResourceNavigationLinkResponse { return v.ResourceNavigationLinks }).(ResourceNavigationLinkResponseArrayOutput)
}

// The reference of the RouteTable resource.
func (o SubnetResponseOutput) RouteTable() RouteTableResponsePtrOutput {
	return o.ApplyT(func(v SubnetResponse) *RouteTableResponse { return v.RouteTable }).(RouteTableResponsePtrOutput)
}

// An array of service endpoints.
func (o SubnetResponseOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v SubnetResponse) []ServiceEndpointPropertiesFormatResponse { return v.ServiceEndpoints }).(ServiceEndpointPropertiesFormatResponseArrayOutput)
}

type SubnetResponsePtrOutput struct{ *pulumi.OutputState }

func (SubnetResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubnetResponse)(nil)).Elem()
}

func (o SubnetResponsePtrOutput) ToSubnetResponsePtrOutput() SubnetResponsePtrOutput {
	return o
}

func (o SubnetResponsePtrOutput) ToSubnetResponsePtrOutputWithContext(ctx context.Context) SubnetResponsePtrOutput {
	return o
}

func (o SubnetResponsePtrOutput) Elem() SubnetResponseOutput {
	return o.ApplyT(func(v *SubnetResponse) SubnetResponse { return *v }).(SubnetResponseOutput)
}

// The address prefix for the subnet.
func (o SubnetResponsePtrOutput) AddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.AddressPrefix
	}).(pulumi.StringPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o SubnetResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o SubnetResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Gets an array of references to the network interface IP configurations using subnet.
func (o SubnetResponsePtrOutput) IpConfigurations() IPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []IPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(IPConfigurationResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o SubnetResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The reference of the NetworkSecurityGroup resource.
func (o SubnetResponsePtrOutput) NetworkSecurityGroup() NetworkSecurityGroupResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *NetworkSecurityGroupResponse {
		if v == nil {
			return nil
		}
		return v.NetworkSecurityGroup
	}).(NetworkSecurityGroupResponsePtrOutput)
}

// The provisioning state of the resource.
func (o SubnetResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *string {
		if v == nil {
			return nil
		}
		return v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// Gets an array of references to the external resources using subnet.
func (o SubnetResponsePtrOutput) ResourceNavigationLinks() ResourceNavigationLinkResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ResourceNavigationLinkResponse {
		if v == nil {
			return nil
		}
		return v.ResourceNavigationLinks
	}).(ResourceNavigationLinkResponseArrayOutput)
}

// The reference of the RouteTable resource.
func (o SubnetResponsePtrOutput) RouteTable() RouteTableResponsePtrOutput {
	return o.ApplyT(func(v *SubnetResponse) *RouteTableResponse {
		if v == nil {
			return nil
		}
		return v.RouteTable
	}).(RouteTableResponsePtrOutput)
}

// An array of service endpoints.
func (o SubnetResponsePtrOutput) ServiceEndpoints() ServiceEndpointPropertiesFormatResponseArrayOutput {
	return o.ApplyT(func(v *SubnetResponse) []ServiceEndpointPropertiesFormatResponse {
		if v == nil {
			return nil
		}
		return v.ServiceEndpoints
	}).(ServiceEndpointPropertiesFormatResponseArrayOutput)
}

type SubnetResponseArrayOutput struct{ *pulumi.OutputState }

func (SubnetResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetResponse)(nil)).Elem()
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutput() SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) ToSubnetResponseArrayOutputWithContext(ctx context.Context) SubnetResponseArrayOutput {
	return o
}

func (o SubnetResponseArrayOutput) Index(i pulumi.IntInput) SubnetResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetResponse {
		return vs[0].([]SubnetResponse)[vs[1].(int)]
	}).(SubnetResponseOutput)
}

// VirtualNetworkGatewayConnection properties
type TunnelConnectionHealthResponse struct {
	// Virtual network Gateway connection status
	ConnectionStatus string `pulumi:"connectionStatus"`
	// The Egress Bytes Transferred in this connection
	EgressBytesTransferred int `pulumi:"egressBytesTransferred"`
	// The Ingress Bytes Transferred in this connection
	IngressBytesTransferred int `pulumi:"ingressBytesTransferred"`
	// The time at which connection was established in Utc format.
	LastConnectionEstablishedUtcTime string `pulumi:"lastConnectionEstablishedUtcTime"`
	// Tunnel name.
	Tunnel string `pulumi:"tunnel"`
}

// TunnelConnectionHealthResponseInput is an input type that accepts TunnelConnectionHealthResponseArgs and TunnelConnectionHealthResponseOutput values.
// You can construct a concrete instance of `TunnelConnectionHealthResponseInput` via:
//
//          TunnelConnectionHealthResponseArgs{...}
type TunnelConnectionHealthResponseInput interface {
	pulumi.Input

	ToTunnelConnectionHealthResponseOutput() TunnelConnectionHealthResponseOutput
	ToTunnelConnectionHealthResponseOutputWithContext(context.Context) TunnelConnectionHealthResponseOutput
}

// VirtualNetworkGatewayConnection properties
type TunnelConnectionHealthResponseArgs struct {
	// Virtual network Gateway connection status
	ConnectionStatus pulumi.StringInput `pulumi:"connectionStatus"`
	// The Egress Bytes Transferred in this connection
	EgressBytesTransferred pulumi.IntInput `pulumi:"egressBytesTransferred"`
	// The Ingress Bytes Transferred in this connection
	IngressBytesTransferred pulumi.IntInput `pulumi:"ingressBytesTransferred"`
	// The time at which connection was established in Utc format.
	LastConnectionEstablishedUtcTime pulumi.StringInput `pulumi:"lastConnectionEstablishedUtcTime"`
	// Tunnel name.
	Tunnel pulumi.StringInput `pulumi:"tunnel"`
}

func (TunnelConnectionHealthResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelConnectionHealthResponse)(nil)).Elem()
}

func (i TunnelConnectionHealthResponseArgs) ToTunnelConnectionHealthResponseOutput() TunnelConnectionHealthResponseOutput {
	return i.ToTunnelConnectionHealthResponseOutputWithContext(context.Background())
}

func (i TunnelConnectionHealthResponseArgs) ToTunnelConnectionHealthResponseOutputWithContext(ctx context.Context) TunnelConnectionHealthResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelConnectionHealthResponseOutput)
}

// TunnelConnectionHealthResponseArrayInput is an input type that accepts TunnelConnectionHealthResponseArray and TunnelConnectionHealthResponseArrayOutput values.
// You can construct a concrete instance of `TunnelConnectionHealthResponseArrayInput` via:
//
//          TunnelConnectionHealthResponseArray{ TunnelConnectionHealthResponseArgs{...} }
type TunnelConnectionHealthResponseArrayInput interface {
	pulumi.Input

	ToTunnelConnectionHealthResponseArrayOutput() TunnelConnectionHealthResponseArrayOutput
	ToTunnelConnectionHealthResponseArrayOutputWithContext(context.Context) TunnelConnectionHealthResponseArrayOutput
}

type TunnelConnectionHealthResponseArray []TunnelConnectionHealthResponseInput

func (TunnelConnectionHealthResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TunnelConnectionHealthResponse)(nil)).Elem()
}

func (i TunnelConnectionHealthResponseArray) ToTunnelConnectionHealthResponseArrayOutput() TunnelConnectionHealthResponseArrayOutput {
	return i.ToTunnelConnectionHealthResponseArrayOutputWithContext(context.Background())
}

func (i TunnelConnectionHealthResponseArray) ToTunnelConnectionHealthResponseArrayOutputWithContext(ctx context.Context) TunnelConnectionHealthResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TunnelConnectionHealthResponseArrayOutput)
}

// VirtualNetworkGatewayConnection properties
type TunnelConnectionHealthResponseOutput struct{ *pulumi.OutputState }

func (TunnelConnectionHealthResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TunnelConnectionHealthResponse)(nil)).Elem()
}

func (o TunnelConnectionHealthResponseOutput) ToTunnelConnectionHealthResponseOutput() TunnelConnectionHealthResponseOutput {
	return o
}

func (o TunnelConnectionHealthResponseOutput) ToTunnelConnectionHealthResponseOutputWithContext(ctx context.Context) TunnelConnectionHealthResponseOutput {
	return o
}

// Virtual network Gateway connection status
func (o TunnelConnectionHealthResponseOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) string { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// The Egress Bytes Transferred in this connection
func (o TunnelConnectionHealthResponseOutput) EgressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) int { return v.EgressBytesTransferred }).(pulumi.IntOutput)
}

// The Ingress Bytes Transferred in this connection
func (o TunnelConnectionHealthResponseOutput) IngressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) int { return v.IngressBytesTransferred }).(pulumi.IntOutput)
}

// The time at which connection was established in Utc format.
func (o TunnelConnectionHealthResponseOutput) LastConnectionEstablishedUtcTime() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) string { return v.LastConnectionEstablishedUtcTime }).(pulumi.StringOutput)
}

// Tunnel name.
func (o TunnelConnectionHealthResponseOutput) Tunnel() pulumi.StringOutput {
	return o.ApplyT(func(v TunnelConnectionHealthResponse) string { return v.Tunnel }).(pulumi.StringOutput)
}

type TunnelConnectionHealthResponseArrayOutput struct{ *pulumi.OutputState }

func (TunnelConnectionHealthResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TunnelConnectionHealthResponse)(nil)).Elem()
}

func (o TunnelConnectionHealthResponseArrayOutput) ToTunnelConnectionHealthResponseArrayOutput() TunnelConnectionHealthResponseArrayOutput {
	return o
}

func (o TunnelConnectionHealthResponseArrayOutput) ToTunnelConnectionHealthResponseArrayOutputWithContext(ctx context.Context) TunnelConnectionHealthResponseArrayOutput {
	return o
}

func (o TunnelConnectionHealthResponseArrayOutput) Index(i pulumi.IntInput) TunnelConnectionHealthResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TunnelConnectionHealthResponse {
		return vs[0].([]TunnelConnectionHealthResponse)[vs[1].(int)]
	}).(TunnelConnectionHealthResponseOutput)
}

// A common class for general resource information
type VirtualNetworkGatewayType struct {
	// ActiveActive flag
	ActiveActive *bool `pulumi:"activeActive"`
	// Virtual network gateway's BGP speaker settings.
	BgpSettings *BgpSettings `pulumi:"bgpSettings"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp *bool `pulumi:"enableBgp"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite *SubResource `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
	GatewayType *string `pulumi:"gatewayType"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// IP configurations for virtual network gateway.
	IpConfigurations []VirtualNetworkGatewayIPConfiguration `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// The resource GUID property of the VirtualNetworkGateway resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku *VirtualNetworkGatewaySku `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration *VpnClientConfiguration `pulumi:"vpnClientConfiguration"`
	// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
	VpnType *string `pulumi:"vpnType"`
}

// VirtualNetworkGatewayTypeInput is an input type that accepts VirtualNetworkGatewayTypeArgs and VirtualNetworkGatewayTypeOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayTypeInput` via:
//
//          VirtualNetworkGatewayTypeArgs{...}
type VirtualNetworkGatewayTypeInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayTypeOutput() VirtualNetworkGatewayTypeOutput
	ToVirtualNetworkGatewayTypeOutputWithContext(context.Context) VirtualNetworkGatewayTypeOutput
}

// A common class for general resource information
type VirtualNetworkGatewayTypeArgs struct {
	// ActiveActive flag
	ActiveActive pulumi.BoolPtrInput `pulumi:"activeActive"`
	// Virtual network gateway's BGP speaker settings.
	BgpSettings BgpSettingsPtrInput `pulumi:"bgpSettings"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite SubResourcePtrInput `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
	GatewayType pulumi.StringPtrInput `pulumi:"gatewayType"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// IP configurations for virtual network gateway.
	IpConfigurations VirtualNetworkGatewayIPConfigurationArrayInput `pulumi:"ipConfigurations"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// The resource GUID property of the VirtualNetworkGateway resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku VirtualNetworkGatewaySkuPtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration VpnClientConfigurationPtrInput `pulumi:"vpnClientConfiguration"`
	// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
	VpnType pulumi.StringPtrInput `pulumi:"vpnType"`
}

func (VirtualNetworkGatewayTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayType)(nil)).Elem()
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypeOutput() VirtualNetworkGatewayTypeOutput {
	return i.ToVirtualNetworkGatewayTypeOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypeOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayTypeOutput)
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return i.ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayTypeArgs) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayTypeOutput).ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayTypePtrInput is an input type that accepts VirtualNetworkGatewayTypeArgs, VirtualNetworkGatewayTypePtr and VirtualNetworkGatewayTypePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayTypePtrInput` via:
//
//          VirtualNetworkGatewayTypeArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewayTypePtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput
	ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Context) VirtualNetworkGatewayTypePtrOutput
}

type virtualNetworkGatewayTypePtrType VirtualNetworkGatewayTypeArgs

func VirtualNetworkGatewayTypePtr(v *VirtualNetworkGatewayTypeArgs) VirtualNetworkGatewayTypePtrInput {
	return (*virtualNetworkGatewayTypePtrType)(v)
}

func (*virtualNetworkGatewayTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayType)(nil)).Elem()
}

func (i *virtualNetworkGatewayTypePtrType) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return i.ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayTypePtrType) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayTypePtrOutput)
}

// A common class for general resource information
type VirtualNetworkGatewayTypeOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayType)(nil)).Elem()
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypeOutput() VirtualNetworkGatewayTypeOutput {
	return o
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypeOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypeOutput {
	return o
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return o.ToVirtualNetworkGatewayTypePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayTypeOutput) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *VirtualNetworkGatewayType {
		return &v
	}).(VirtualNetworkGatewayTypePtrOutput)
}

// ActiveActive flag
func (o VirtualNetworkGatewayTypeOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.ActiveActive }).(pulumi.BoolPtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayTypeOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *BgpSettings { return v.BgpSettings }).(BgpSettingsPtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayTypeOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayTypeOutput) GatewayDefaultSite() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *SubResource { return v.GatewayDefaultSite }).(SubResourcePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
func (o VirtualNetworkGatewayTypeOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.GatewayType }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) []VirtualNetworkGatewayIPConfiguration { return v.IpConfigurations }).(VirtualNetworkGatewayIPConfigurationArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayTypeOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// The resource GUID property of the VirtualNetworkGateway resource.
func (o VirtualNetworkGatewayTypeOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayTypeOutput) Sku() VirtualNetworkGatewaySkuPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *VirtualNetworkGatewaySku { return v.Sku }).(VirtualNetworkGatewaySkuPtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayTypeOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayTypeOutput) VpnClientConfiguration() VpnClientConfigurationPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *VpnClientConfiguration { return v.VpnClientConfiguration }).(VpnClientConfigurationPtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
func (o VirtualNetworkGatewayTypeOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayType) *string { return v.VpnType }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayTypePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayType)(nil)).Elem()
}

func (o VirtualNetworkGatewayTypePtrOutput) ToVirtualNetworkGatewayTypePtrOutput() VirtualNetworkGatewayTypePtrOutput {
	return o
}

func (o VirtualNetworkGatewayTypePtrOutput) ToVirtualNetworkGatewayTypePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayTypePtrOutput {
	return o
}

func (o VirtualNetworkGatewayTypePtrOutput) Elem() VirtualNetworkGatewayTypeOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) VirtualNetworkGatewayType { return *v }).(VirtualNetworkGatewayTypeOutput)
}

// ActiveActive flag
func (o VirtualNetworkGatewayTypePtrOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.ActiveActive
	}).(pulumi.BoolPtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayTypePtrOutput) BgpSettings() BgpSettingsPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *BgpSettings {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsPtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayTypePtrOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgp
	}).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayTypePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayTypePtrOutput) GatewayDefaultSite() SubResourcePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *SubResource {
		if v == nil {
			return nil
		}
		return v.GatewayDefaultSite
	}).(SubResourcePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
func (o VirtualNetworkGatewayTypePtrOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.GatewayType
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayTypePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) []VirtualNetworkGatewayIPConfiguration {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayTypePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the VirtualNetworkGateway resource.
func (o VirtualNetworkGatewayTypePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayTypePtrOutput) Sku() VirtualNetworkGatewaySkuPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *VirtualNetworkGatewaySku {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(VirtualNetworkGatewaySkuPtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayTypePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayTypePtrOutput) VpnClientConfiguration() VpnClientConfigurationPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *VpnClientConfiguration {
		if v == nil {
			return nil
		}
		return v.VpnClientConfiguration
	}).(VpnClientConfigurationPtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
func (o VirtualNetworkGatewayTypePtrOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayType) *string {
		if v == nil {
			return nil
		}
		return v.VpnType
	}).(pulumi.StringPtrOutput)
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfiguration struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The reference of the public IP resource.
	PublicIPAddress *SubResource `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet *SubResource `pulumi:"subnet"`
}

// VirtualNetworkGatewayIPConfigurationInput is an input type that accepts VirtualNetworkGatewayIPConfigurationArgs and VirtualNetworkGatewayIPConfigurationOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationInput` via:
//
//          VirtualNetworkGatewayIPConfigurationArgs{...}
type VirtualNetworkGatewayIPConfigurationInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationOutput() VirtualNetworkGatewayIPConfigurationOutput
	ToVirtualNetworkGatewayIPConfigurationOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationOutput
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfigurationArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The reference of the public IP resource.
	PublicIPAddress SubResourcePtrInput `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet SubResourcePtrInput `pulumi:"subnet"`
}

func (VirtualNetworkGatewayIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationArgs) ToVirtualNetworkGatewayIPConfigurationOutput() VirtualNetworkGatewayIPConfigurationOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationArgs) ToVirtualNetworkGatewayIPConfigurationOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationOutput)
}

// VirtualNetworkGatewayIPConfigurationArrayInput is an input type that accepts VirtualNetworkGatewayIPConfigurationArray and VirtualNetworkGatewayIPConfigurationArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationArrayInput` via:
//
//          VirtualNetworkGatewayIPConfigurationArray{ VirtualNetworkGatewayIPConfigurationArgs{...} }
type VirtualNetworkGatewayIPConfigurationArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationArrayOutput() VirtualNetworkGatewayIPConfigurationArrayOutput
	ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationArrayOutput
}

type VirtualNetworkGatewayIPConfigurationArray []VirtualNetworkGatewayIPConfigurationInput

func (VirtualNetworkGatewayIPConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationArray) ToVirtualNetworkGatewayIPConfigurationArrayOutput() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationArray) ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationArrayOutput)
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfigurationOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationOutput) ToVirtualNetworkGatewayIPConfigurationOutput() VirtualNetworkGatewayIPConfigurationOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationOutput) ToVirtualNetworkGatewayIPConfigurationOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayIPConfigurationOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayIPConfigurationOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayIPConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o VirtualNetworkGatewayIPConfigurationOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The reference of the public IP resource.
func (o VirtualNetworkGatewayIPConfigurationOutput) PublicIPAddress() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *SubResource { return v.PublicIPAddress }).(SubResourcePtrOutput)
}

// The reference of the subnet resource.
func (o VirtualNetworkGatewayIPConfigurationOutput) Subnet() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfiguration) *SubResource { return v.Subnet }).(SubResourcePtrOutput)
}

type VirtualNetworkGatewayIPConfigurationArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfiguration)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationArrayOutput) ToVirtualNetworkGatewayIPConfigurationArrayOutput() VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationArrayOutput) ToVirtualNetworkGatewayIPConfigurationArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayIPConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayIPConfiguration {
		return vs[0].([]VirtualNetworkGatewayIPConfiguration)[vs[1].(int)]
	}).(VirtualNetworkGatewayIPConfigurationOutput)
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfigurationResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod *string `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress *SubResourceResponse `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet *SubResourceResponse `pulumi:"subnet"`
}

// VirtualNetworkGatewayIPConfigurationResponseInput is an input type that accepts VirtualNetworkGatewayIPConfigurationResponseArgs and VirtualNetworkGatewayIPConfigurationResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationResponseInput` via:
//
//          VirtualNetworkGatewayIPConfigurationResponseArgs{...}
type VirtualNetworkGatewayIPConfigurationResponseInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationResponseOutput() VirtualNetworkGatewayIPConfigurationResponseOutput
	ToVirtualNetworkGatewayIPConfigurationResponseOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationResponseOutput
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfigurationResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
	PrivateIPAllocationMethod pulumi.StringPtrInput `pulumi:"privateIPAllocationMethod"`
	// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The reference of the public IP resource.
	PublicIPAddress SubResourceResponsePtrInput `pulumi:"publicIPAddress"`
	// The reference of the subnet resource.
	Subnet SubResourceResponsePtrInput `pulumi:"subnet"`
}

func (VirtualNetworkGatewayIPConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationResponseArgs) ToVirtualNetworkGatewayIPConfigurationResponseOutput() VirtualNetworkGatewayIPConfigurationResponseOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationResponseArgs) ToVirtualNetworkGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationResponseOutput)
}

// VirtualNetworkGatewayIPConfigurationResponseArrayInput is an input type that accepts VirtualNetworkGatewayIPConfigurationResponseArray and VirtualNetworkGatewayIPConfigurationResponseArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayIPConfigurationResponseArrayInput` via:
//
//          VirtualNetworkGatewayIPConfigurationResponseArray{ VirtualNetworkGatewayIPConfigurationResponseArgs{...} }
type VirtualNetworkGatewayIPConfigurationResponseArrayInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayIPConfigurationResponseArrayOutput() VirtualNetworkGatewayIPConfigurationResponseArrayOutput
	ToVirtualNetworkGatewayIPConfigurationResponseArrayOutputWithContext(context.Context) VirtualNetworkGatewayIPConfigurationResponseArrayOutput
}

type VirtualNetworkGatewayIPConfigurationResponseArray []VirtualNetworkGatewayIPConfigurationResponseInput

func (VirtualNetworkGatewayIPConfigurationResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewayIPConfigurationResponseArray) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutput() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return i.ToVirtualNetworkGatewayIPConfigurationResponseArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayIPConfigurationResponseArray) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayIPConfigurationResponseArrayOutput)
}

// IP configuration for virtual network gateway
type VirtualNetworkGatewayIPConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationResponseOutput) ToVirtualNetworkGatewayIPConfigurationResponseOutput() VirtualNetworkGatewayIPConfigurationResponseOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationResponseOutput) ToVirtualNetworkGatewayIPConfigurationResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The private IP allocation method. Possible values are: 'Static' and 'Dynamic'.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) PrivateIPAllocationMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *string { return v.PrivateIPAllocationMethod }).(pulumi.StringPtrOutput)
}

// The provisioning state of the public IP resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The reference of the public IP resource.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) PublicIPAddress() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *SubResourceResponse { return v.PublicIPAddress }).(SubResourceResponsePtrOutput)
}

// The reference of the subnet resource.
func (o VirtualNetworkGatewayIPConfigurationResponseOutput) Subnet() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayIPConfigurationResponse) *SubResourceResponse { return v.Subnet }).(SubResourceResponsePtrOutput)
}

type VirtualNetworkGatewayIPConfigurationResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayIPConfigurationResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkGatewayIPConfigurationResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayIPConfigurationResponseArrayOutput) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutput() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationResponseArrayOutput) ToVirtualNetworkGatewayIPConfigurationResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o
}

func (o VirtualNetworkGatewayIPConfigurationResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkGatewayIPConfigurationResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkGatewayIPConfigurationResponse {
		return vs[0].([]VirtualNetworkGatewayIPConfigurationResponse)[vs[1].(int)]
	}).(VirtualNetworkGatewayIPConfigurationResponseOutput)
}

// A common class for general resource information
type VirtualNetworkGatewayResponse struct {
	// ActiveActive flag
	ActiveActive *bool `pulumi:"activeActive"`
	// Virtual network gateway's BGP speaker settings.
	BgpSettings *BgpSettingsResponse `pulumi:"bgpSettings"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp *bool `pulumi:"enableBgp"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite *SubResourceResponse `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
	GatewayType *string `pulumi:"gatewayType"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// IP configurations for virtual network gateway.
	IpConfigurations []VirtualNetworkGatewayIPConfigurationResponse `pulumi:"ipConfigurations"`
	// Resource location.
	Location *string `pulumi:"location"`
	// Resource name.
	Name string `pulumi:"name"`
	// The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The resource GUID property of the VirtualNetworkGateway resource.
	ResourceGuid *string `pulumi:"resourceGuid"`
	// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku *VirtualNetworkGatewaySkuResponse `pulumi:"sku"`
	// Resource tags.
	Tags map[string]string `pulumi:"tags"`
	// Resource type.
	Type string `pulumi:"type"`
	// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration *VpnClientConfigurationResponse `pulumi:"vpnClientConfiguration"`
	// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
	VpnType *string `pulumi:"vpnType"`
}

// VirtualNetworkGatewayResponseInput is an input type that accepts VirtualNetworkGatewayResponseArgs and VirtualNetworkGatewayResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayResponseInput` via:
//
//          VirtualNetworkGatewayResponseArgs{...}
type VirtualNetworkGatewayResponseInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayResponseOutput() VirtualNetworkGatewayResponseOutput
	ToVirtualNetworkGatewayResponseOutputWithContext(context.Context) VirtualNetworkGatewayResponseOutput
}

// A common class for general resource information
type VirtualNetworkGatewayResponseArgs struct {
	// ActiveActive flag
	ActiveActive pulumi.BoolPtrInput `pulumi:"activeActive"`
	// Virtual network gateway's BGP speaker settings.
	BgpSettings BgpSettingsResponsePtrInput `pulumi:"bgpSettings"`
	// Whether BGP is enabled for this virtual network gateway or not.
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
	GatewayDefaultSite SubResourceResponsePtrInput `pulumi:"gatewayDefaultSite"`
	// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
	GatewayType pulumi.StringPtrInput `pulumi:"gatewayType"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// IP configurations for virtual network gateway.
	IpConfigurations VirtualNetworkGatewayIPConfigurationResponseArrayInput `pulumi:"ipConfigurations"`
	// Resource location.
	Location pulumi.StringPtrInput `pulumi:"location"`
	// Resource name.
	Name pulumi.StringInput `pulumi:"name"`
	// The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The resource GUID property of the VirtualNetworkGateway resource.
	ResourceGuid pulumi.StringPtrInput `pulumi:"resourceGuid"`
	// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
	Sku VirtualNetworkGatewaySkuResponsePtrInput `pulumi:"sku"`
	// Resource tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Resource type.
	Type pulumi.StringInput `pulumi:"type"`
	// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
	VpnClientConfiguration VpnClientConfigurationResponsePtrInput `pulumi:"vpnClientConfiguration"`
	// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
	VpnType pulumi.StringPtrInput `pulumi:"vpnType"`
}

func (VirtualNetworkGatewayResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewayResponseArgs) ToVirtualNetworkGatewayResponseOutput() VirtualNetworkGatewayResponseOutput {
	return i.ToVirtualNetworkGatewayResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayResponseArgs) ToVirtualNetworkGatewayResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayResponseOutput)
}

func (i VirtualNetworkGatewayResponseArgs) ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput {
	return i.ToVirtualNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewayResponseArgs) ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayResponseOutput).ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkGatewayResponsePtrInput is an input type that accepts VirtualNetworkGatewayResponseArgs, VirtualNetworkGatewayResponsePtr and VirtualNetworkGatewayResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewayResponsePtrInput` via:
//
//          VirtualNetworkGatewayResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewayResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput
	ToVirtualNetworkGatewayResponsePtrOutputWithContext(context.Context) VirtualNetworkGatewayResponsePtrOutput
}

type virtualNetworkGatewayResponsePtrType VirtualNetworkGatewayResponseArgs

func VirtualNetworkGatewayResponsePtr(v *VirtualNetworkGatewayResponseArgs) VirtualNetworkGatewayResponsePtrInput {
	return (*virtualNetworkGatewayResponsePtrType)(v)
}

func (*virtualNetworkGatewayResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (i *virtualNetworkGatewayResponsePtrType) ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput {
	return i.ToVirtualNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewayResponsePtrType) ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewayResponsePtrOutput)
}

// A common class for general resource information
type VirtualNetworkGatewayResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponseOutput() VirtualNetworkGatewayResponseOutput {
	return o
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponseOutput {
	return o
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput {
	return o.ToVirtualNetworkGatewayResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewayResponseOutput) ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *VirtualNetworkGatewayResponse {
		return &v
	}).(VirtualNetworkGatewayResponsePtrOutput)
}

// ActiveActive flag
func (o VirtualNetworkGatewayResponseOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.ActiveActive }).(pulumi.BoolPtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayResponseOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *BgpSettingsResponse { return v.BgpSettings }).(BgpSettingsResponsePtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayResponseOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayResponseOutput) GatewayDefaultSite() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *SubResourceResponse { return v.GatewayDefaultSite }).(SubResourceResponsePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
func (o VirtualNetworkGatewayResponseOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.GatewayType }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) []VirtualNetworkGatewayIPConfigurationResponse {
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayResponseOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.Location }).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkGatewayResponseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.Name }).(pulumi.StringOutput)
}

// The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkGatewayResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The resource GUID property of the VirtualNetworkGateway resource.
func (o VirtualNetworkGatewayResponseOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.ResourceGuid }).(pulumi.StringPtrOutput)
}

// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayResponseOutput) Sku() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *VirtualNetworkGatewaySkuResponse { return v.Sku }).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayResponseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkGatewayResponseOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) string { return v.Type }).(pulumi.StringOutput)
}

// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayResponseOutput) VpnClientConfiguration() VpnClientConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *VpnClientConfigurationResponse { return v.VpnClientConfiguration }).(VpnClientConfigurationResponsePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
func (o VirtualNetworkGatewayResponseOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewayResponse) *string { return v.VpnType }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewayResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewayResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewayResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewayResponsePtrOutput) ToVirtualNetworkGatewayResponsePtrOutput() VirtualNetworkGatewayResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayResponsePtrOutput) ToVirtualNetworkGatewayResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewayResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewayResponsePtrOutput) Elem() VirtualNetworkGatewayResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) VirtualNetworkGatewayResponse { return *v }).(VirtualNetworkGatewayResponseOutput)
}

// ActiveActive flag
func (o VirtualNetworkGatewayResponsePtrOutput) ActiveActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.ActiveActive
	}).(pulumi.BoolPtrOutput)
}

// Virtual network gateway's BGP speaker settings.
func (o VirtualNetworkGatewayResponsePtrOutput) BgpSettings() BgpSettingsResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *BgpSettingsResponse {
		if v == nil {
			return nil
		}
		return v.BgpSettings
	}).(BgpSettingsResponsePtrOutput)
}

// Whether BGP is enabled for this virtual network gateway or not.
func (o VirtualNetworkGatewayResponsePtrOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *bool {
		if v == nil {
			return nil
		}
		return v.EnableBgp
	}).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkGatewayResponsePtrOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Etag
	}).(pulumi.StringPtrOutput)
}

// The reference of the LocalNetworkGateway resource which represents local network site having default routes. Assign Null value in case of removing existing default site setting.
func (o VirtualNetworkGatewayResponsePtrOutput) GatewayDefaultSite() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *SubResourceResponse {
		if v == nil {
			return nil
		}
		return v.GatewayDefaultSite
	}).(SubResourceResponsePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
func (o VirtualNetworkGatewayResponsePtrOutput) GatewayType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.GatewayType
	}).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkGatewayResponsePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// IP configurations for virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) IpConfigurations() VirtualNetworkGatewayIPConfigurationResponseArrayOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) []VirtualNetworkGatewayIPConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.IpConfigurations
	}).(VirtualNetworkGatewayIPConfigurationResponseArrayOutput)
}

// Resource location.
func (o VirtualNetworkGatewayResponsePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

// Resource name.
func (o VirtualNetworkGatewayResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The provisioning state of the VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VirtualNetworkGatewayResponsePtrOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.ProvisioningState
	}).(pulumi.StringPtrOutput)
}

// The resource GUID property of the VirtualNetworkGateway resource.
func (o VirtualNetworkGatewayResponsePtrOutput) ResourceGuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.ResourceGuid
	}).(pulumi.StringPtrOutput)
}

// The reference of the VirtualNetworkGatewaySku resource which represents the SKU selected for Virtual network gateway.
func (o VirtualNetworkGatewayResponsePtrOutput) Sku() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *VirtualNetworkGatewaySkuResponse {
		if v == nil {
			return nil
		}
		return v.Sku
	}).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// Resource tags.
func (o VirtualNetworkGatewayResponsePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// Resource type.
func (o VirtualNetworkGatewayResponsePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The reference of the VpnClientConfiguration resource which represents the P2S VpnClient configurations.
func (o VirtualNetworkGatewayResponsePtrOutput) VpnClientConfiguration() VpnClientConfigurationResponsePtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *VpnClientConfigurationResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientConfiguration
	}).(VpnClientConfigurationResponsePtrOutput)
}

// The type of this virtual network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
func (o VirtualNetworkGatewayResponsePtrOutput) VpnType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewayResponse) *string {
		if v == nil {
			return nil
		}
		return v.VpnType
	}).(pulumi.StringPtrOutput)
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySku struct {
	// The capacity.
	Capacity *int `pulumi:"capacity"`
	// Gateway SKU name.
	Name *string `pulumi:"name"`
	// Gateway SKU tier.
	Tier *string `pulumi:"tier"`
}

// VirtualNetworkGatewaySkuInput is an input type that accepts VirtualNetworkGatewaySkuArgs and VirtualNetworkGatewaySkuOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuInput` via:
//
//          VirtualNetworkGatewaySkuArgs{...}
type VirtualNetworkGatewaySkuInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuOutput() VirtualNetworkGatewaySkuOutput
	ToVirtualNetworkGatewaySkuOutputWithContext(context.Context) VirtualNetworkGatewaySkuOutput
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySkuArgs struct {
	// The capacity.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Gateway SKU name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gateway SKU tier.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (VirtualNetworkGatewaySkuArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySku)(nil)).Elem()
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuOutput() VirtualNetworkGatewaySkuOutput {
	return i.ToVirtualNetworkGatewaySkuOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuOutput)
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return i.ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuArgs) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuOutput).ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx)
}

// VirtualNetworkGatewaySkuPtrInput is an input type that accepts VirtualNetworkGatewaySkuArgs, VirtualNetworkGatewaySkuPtr and VirtualNetworkGatewaySkuPtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuPtrInput` via:
//
//          VirtualNetworkGatewaySkuArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewaySkuPtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput
	ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Context) VirtualNetworkGatewaySkuPtrOutput
}

type virtualNetworkGatewaySkuPtrType VirtualNetworkGatewaySkuArgs

func VirtualNetworkGatewaySkuPtr(v *VirtualNetworkGatewaySkuArgs) VirtualNetworkGatewaySkuPtrInput {
	return (*virtualNetworkGatewaySkuPtrType)(v)
}

func (*virtualNetworkGatewaySkuPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySku)(nil)).Elem()
}

func (i *virtualNetworkGatewaySkuPtrType) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return i.ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewaySkuPtrType) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuPtrOutput)
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySkuOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySku)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuOutput() VirtualNetworkGatewaySkuOutput {
	return o
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuOutput {
	return o
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return o.ToVirtualNetworkGatewaySkuPtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewaySkuOutput) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySku) *VirtualNetworkGatewaySku {
		return &v
	}).(VirtualNetworkGatewaySkuPtrOutput)
}

// The capacity.
func (o VirtualNetworkGatewaySkuOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySku) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySku) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySku) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewaySkuPtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySku)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuPtrOutput) ToVirtualNetworkGatewaySkuPtrOutput() VirtualNetworkGatewaySkuPtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuPtrOutput) ToVirtualNetworkGatewaySkuPtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuPtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuPtrOutput) Elem() VirtualNetworkGatewaySkuOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) VirtualNetworkGatewaySku { return *v }).(VirtualNetworkGatewaySkuOutput)
}

// The capacity.
func (o VirtualNetworkGatewaySkuPtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuPtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySku) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySkuResponse struct {
	// The capacity.
	Capacity *int `pulumi:"capacity"`
	// Gateway SKU name.
	Name *string `pulumi:"name"`
	// Gateway SKU tier.
	Tier *string `pulumi:"tier"`
}

// VirtualNetworkGatewaySkuResponseInput is an input type that accepts VirtualNetworkGatewaySkuResponseArgs and VirtualNetworkGatewaySkuResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuResponseInput` via:
//
//          VirtualNetworkGatewaySkuResponseArgs{...}
type VirtualNetworkGatewaySkuResponseInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuResponseOutput() VirtualNetworkGatewaySkuResponseOutput
	ToVirtualNetworkGatewaySkuResponseOutputWithContext(context.Context) VirtualNetworkGatewaySkuResponseOutput
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySkuResponseArgs struct {
	// The capacity.
	Capacity pulumi.IntPtrInput `pulumi:"capacity"`
	// Gateway SKU name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Gateway SKU tier.
	Tier pulumi.StringPtrInput `pulumi:"tier"`
}

func (VirtualNetworkGatewaySkuResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (i VirtualNetworkGatewaySkuResponseArgs) ToVirtualNetworkGatewaySkuResponseOutput() VirtualNetworkGatewaySkuResponseOutput {
	return i.ToVirtualNetworkGatewaySkuResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuResponseArgs) ToVirtualNetworkGatewaySkuResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuResponseOutput)
}

func (i VirtualNetworkGatewaySkuResponseArgs) ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput {
	return i.ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (i VirtualNetworkGatewaySkuResponseArgs) ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuResponseOutput).ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx)
}

// VirtualNetworkGatewaySkuResponsePtrInput is an input type that accepts VirtualNetworkGatewaySkuResponseArgs, VirtualNetworkGatewaySkuResponsePtr and VirtualNetworkGatewaySkuResponsePtrOutput values.
// You can construct a concrete instance of `VirtualNetworkGatewaySkuResponsePtrInput` via:
//
//          VirtualNetworkGatewaySkuResponseArgs{...}
//
//  or:
//
//          nil
type VirtualNetworkGatewaySkuResponsePtrInput interface {
	pulumi.Input

	ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput
	ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(context.Context) VirtualNetworkGatewaySkuResponsePtrOutput
}

type virtualNetworkGatewaySkuResponsePtrType VirtualNetworkGatewaySkuResponseArgs

func VirtualNetworkGatewaySkuResponsePtr(v *VirtualNetworkGatewaySkuResponseArgs) VirtualNetworkGatewaySkuResponsePtrInput {
	return (*virtualNetworkGatewaySkuResponsePtrType)(v)
}

func (*virtualNetworkGatewaySkuResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (i *virtualNetworkGatewaySkuResponsePtrType) ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput {
	return i.ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (i *virtualNetworkGatewaySkuResponsePtrType) ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// VirtualNetworkGatewaySku details
type VirtualNetworkGatewaySkuResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponseOutput() VirtualNetworkGatewaySkuResponseOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponseOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponseOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(context.Background())
}

func (o VirtualNetworkGatewaySkuResponseOutput) ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) *VirtualNetworkGatewaySkuResponse {
		return &v
	}).(VirtualNetworkGatewaySkuResponsePtrOutput)
}

// The capacity.
func (o VirtualNetworkGatewaySkuResponseOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) *int { return v.Capacity }).(pulumi.IntPtrOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuResponseOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkGatewaySkuResponse) *string { return v.Tier }).(pulumi.StringPtrOutput)
}

type VirtualNetworkGatewaySkuResponsePtrOutput struct{ *pulumi.OutputState }

func (VirtualNetworkGatewaySkuResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualNetworkGatewaySkuResponse)(nil)).Elem()
}

func (o VirtualNetworkGatewaySkuResponsePtrOutput) ToVirtualNetworkGatewaySkuResponsePtrOutput() VirtualNetworkGatewaySkuResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponsePtrOutput) ToVirtualNetworkGatewaySkuResponsePtrOutputWithContext(ctx context.Context) VirtualNetworkGatewaySkuResponsePtrOutput {
	return o
}

func (o VirtualNetworkGatewaySkuResponsePtrOutput) Elem() VirtualNetworkGatewaySkuResponseOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) VirtualNetworkGatewaySkuResponse { return *v }).(VirtualNetworkGatewaySkuResponseOutput)
}

// The capacity.
func (o VirtualNetworkGatewaySkuResponsePtrOutput) Capacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) *int {
		if v == nil {
			return nil
		}
		return v.Capacity
	}).(pulumi.IntPtrOutput)
}

// Gateway SKU name.
func (o VirtualNetworkGatewaySkuResponsePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Gateway SKU tier.
func (o VirtualNetworkGatewaySkuResponsePtrOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualNetworkGatewaySkuResponse) *string {
		if v == nil {
			return nil
		}
		return v.Tier
	}).(pulumi.StringPtrOutput)
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringType struct {
	// Whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed.
	AllowForwardedTraffic *bool `pulumi:"allowForwardedTraffic"`
	// If gateway links can be used in remote virtual networking to link to this virtual network.
	AllowGatewayTransit *bool `pulumi:"allowGatewayTransit"`
	// Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space.
	AllowVirtualNetworkAccess *bool `pulumi:"allowVirtualNetworkAccess"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The status of the virtual network peering. Possible values are 'Initiated', 'Connected', and 'Disconnected'.
	PeeringState *string `pulumi:"peeringState"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the remote virtual network address space.
	RemoteAddressSpace *AddressSpace `pulumi:"remoteAddressSpace"`
	// The reference of the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
	RemoteVirtualNetwork *SubResource `pulumi:"remoteVirtualNetwork"`
	// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
	UseRemoteGateways *bool `pulumi:"useRemoteGateways"`
}

// VirtualNetworkPeeringTypeInput is an input type that accepts VirtualNetworkPeeringTypeArgs and VirtualNetworkPeeringTypeOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringTypeInput` via:
//
//          VirtualNetworkPeeringTypeArgs{...}
type VirtualNetworkPeeringTypeInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringTypeOutput() VirtualNetworkPeeringTypeOutput
	ToVirtualNetworkPeeringTypeOutputWithContext(context.Context) VirtualNetworkPeeringTypeOutput
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringTypeArgs struct {
	// Whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed.
	AllowForwardedTraffic pulumi.BoolPtrInput `pulumi:"allowForwardedTraffic"`
	// If gateway links can be used in remote virtual networking to link to this virtual network.
	AllowGatewayTransit pulumi.BoolPtrInput `pulumi:"allowGatewayTransit"`
	// Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space.
	AllowVirtualNetworkAccess pulumi.BoolPtrInput `pulumi:"allowVirtualNetworkAccess"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The status of the virtual network peering. Possible values are 'Initiated', 'Connected', and 'Disconnected'.
	PeeringState pulumi.StringPtrInput `pulumi:"peeringState"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the remote virtual network address space.
	RemoteAddressSpace AddressSpacePtrInput `pulumi:"remoteAddressSpace"`
	// The reference of the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
	RemoteVirtualNetwork SubResourcePtrInput `pulumi:"remoteVirtualNetwork"`
	// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
	UseRemoteGateways pulumi.BoolPtrInput `pulumi:"useRemoteGateways"`
}

func (VirtualNetworkPeeringTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringType)(nil)).Elem()
}

func (i VirtualNetworkPeeringTypeArgs) ToVirtualNetworkPeeringTypeOutput() VirtualNetworkPeeringTypeOutput {
	return i.ToVirtualNetworkPeeringTypeOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringTypeArgs) ToVirtualNetworkPeeringTypeOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringTypeOutput)
}

// VirtualNetworkPeeringTypeArrayInput is an input type that accepts VirtualNetworkPeeringTypeArray and VirtualNetworkPeeringTypeArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringTypeArrayInput` via:
//
//          VirtualNetworkPeeringTypeArray{ VirtualNetworkPeeringTypeArgs{...} }
type VirtualNetworkPeeringTypeArrayInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringTypeArrayOutput() VirtualNetworkPeeringTypeArrayOutput
	ToVirtualNetworkPeeringTypeArrayOutputWithContext(context.Context) VirtualNetworkPeeringTypeArrayOutput
}

type VirtualNetworkPeeringTypeArray []VirtualNetworkPeeringTypeInput

func (VirtualNetworkPeeringTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPeeringType)(nil)).Elem()
}

func (i VirtualNetworkPeeringTypeArray) ToVirtualNetworkPeeringTypeArrayOutput() VirtualNetworkPeeringTypeArrayOutput {
	return i.ToVirtualNetworkPeeringTypeArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringTypeArray) ToVirtualNetworkPeeringTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringTypeArrayOutput)
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringTypeOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringType)(nil)).Elem()
}

func (o VirtualNetworkPeeringTypeOutput) ToVirtualNetworkPeeringTypeOutput() VirtualNetworkPeeringTypeOutput {
	return o
}

func (o VirtualNetworkPeeringTypeOutput) ToVirtualNetworkPeeringTypeOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeOutput {
	return o
}

// Whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed.
func (o VirtualNetworkPeeringTypeOutput) AllowForwardedTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.AllowForwardedTraffic }).(pulumi.BoolPtrOutput)
}

// If gateway links can be used in remote virtual networking to link to this virtual network.
func (o VirtualNetworkPeeringTypeOutput) AllowGatewayTransit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.AllowGatewayTransit }).(pulumi.BoolPtrOutput)
}

// Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space.
func (o VirtualNetworkPeeringTypeOutput) AllowVirtualNetworkAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.AllowVirtualNetworkAccess }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkPeeringTypeOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkPeeringTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkPeeringTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The status of the virtual network peering. Possible values are 'Initiated', 'Connected', and 'Disconnected'.
func (o VirtualNetworkPeeringTypeOutput) PeeringState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.PeeringState }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource.
func (o VirtualNetworkPeeringTypeOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the remote virtual network address space.
func (o VirtualNetworkPeeringTypeOutput) RemoteAddressSpace() AddressSpacePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *AddressSpace { return v.RemoteAddressSpace }).(AddressSpacePtrOutput)
}

// The reference of the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
func (o VirtualNetworkPeeringTypeOutput) RemoteVirtualNetwork() SubResourcePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *SubResource { return v.RemoteVirtualNetwork }).(SubResourcePtrOutput)
}

// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
func (o VirtualNetworkPeeringTypeOutput) UseRemoteGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringType) *bool { return v.UseRemoteGateways }).(pulumi.BoolPtrOutput)
}

type VirtualNetworkPeeringTypeArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPeeringType)(nil)).Elem()
}

func (o VirtualNetworkPeeringTypeArrayOutput) ToVirtualNetworkPeeringTypeArrayOutput() VirtualNetworkPeeringTypeArrayOutput {
	return o
}

func (o VirtualNetworkPeeringTypeArrayOutput) ToVirtualNetworkPeeringTypeArrayOutputWithContext(ctx context.Context) VirtualNetworkPeeringTypeArrayOutput {
	return o
}

func (o VirtualNetworkPeeringTypeArrayOutput) Index(i pulumi.IntInput) VirtualNetworkPeeringTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkPeeringType {
		return vs[0].([]VirtualNetworkPeeringType)[vs[1].(int)]
	}).(VirtualNetworkPeeringTypeOutput)
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringResponse struct {
	// Whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed.
	AllowForwardedTraffic *bool `pulumi:"allowForwardedTraffic"`
	// If gateway links can be used in remote virtual networking to link to this virtual network.
	AllowGatewayTransit *bool `pulumi:"allowGatewayTransit"`
	// Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space.
	AllowVirtualNetworkAccess *bool `pulumi:"allowVirtualNetworkAccess"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The status of the virtual network peering. Possible values are 'Initiated', 'Connected', and 'Disconnected'.
	PeeringState *string `pulumi:"peeringState"`
	// The provisioning state of the resource.
	ProvisioningState *string `pulumi:"provisioningState"`
	// The reference of the remote virtual network address space.
	RemoteAddressSpace *AddressSpaceResponse `pulumi:"remoteAddressSpace"`
	// The reference of the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
	RemoteVirtualNetwork *SubResourceResponse `pulumi:"remoteVirtualNetwork"`
	// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
	UseRemoteGateways *bool `pulumi:"useRemoteGateways"`
}

// VirtualNetworkPeeringResponseInput is an input type that accepts VirtualNetworkPeeringResponseArgs and VirtualNetworkPeeringResponseOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringResponseInput` via:
//
//          VirtualNetworkPeeringResponseArgs{...}
type VirtualNetworkPeeringResponseInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringResponseOutput() VirtualNetworkPeeringResponseOutput
	ToVirtualNetworkPeeringResponseOutputWithContext(context.Context) VirtualNetworkPeeringResponseOutput
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringResponseArgs struct {
	// Whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed.
	AllowForwardedTraffic pulumi.BoolPtrInput `pulumi:"allowForwardedTraffic"`
	// If gateway links can be used in remote virtual networking to link to this virtual network.
	AllowGatewayTransit pulumi.BoolPtrInput `pulumi:"allowGatewayTransit"`
	// Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space.
	AllowVirtualNetworkAccess pulumi.BoolPtrInput `pulumi:"allowVirtualNetworkAccess"`
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The status of the virtual network peering. Possible values are 'Initiated', 'Connected', and 'Disconnected'.
	PeeringState pulumi.StringPtrInput `pulumi:"peeringState"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringPtrInput `pulumi:"provisioningState"`
	// The reference of the remote virtual network address space.
	RemoteAddressSpace AddressSpaceResponsePtrInput `pulumi:"remoteAddressSpace"`
	// The reference of the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
	RemoteVirtualNetwork SubResourceResponsePtrInput `pulumi:"remoteVirtualNetwork"`
	// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
	UseRemoteGateways pulumi.BoolPtrInput `pulumi:"useRemoteGateways"`
}

func (VirtualNetworkPeeringResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringResponse)(nil)).Elem()
}

func (i VirtualNetworkPeeringResponseArgs) ToVirtualNetworkPeeringResponseOutput() VirtualNetworkPeeringResponseOutput {
	return i.ToVirtualNetworkPeeringResponseOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringResponseArgs) ToVirtualNetworkPeeringResponseOutputWithContext(ctx context.Context) VirtualNetworkPeeringResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringResponseOutput)
}

// VirtualNetworkPeeringResponseArrayInput is an input type that accepts VirtualNetworkPeeringResponseArray and VirtualNetworkPeeringResponseArrayOutput values.
// You can construct a concrete instance of `VirtualNetworkPeeringResponseArrayInput` via:
//
//          VirtualNetworkPeeringResponseArray{ VirtualNetworkPeeringResponseArgs{...} }
type VirtualNetworkPeeringResponseArrayInput interface {
	pulumi.Input

	ToVirtualNetworkPeeringResponseArrayOutput() VirtualNetworkPeeringResponseArrayOutput
	ToVirtualNetworkPeeringResponseArrayOutputWithContext(context.Context) VirtualNetworkPeeringResponseArrayOutput
}

type VirtualNetworkPeeringResponseArray []VirtualNetworkPeeringResponseInput

func (VirtualNetworkPeeringResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPeeringResponse)(nil)).Elem()
}

func (i VirtualNetworkPeeringResponseArray) ToVirtualNetworkPeeringResponseArrayOutput() VirtualNetworkPeeringResponseArrayOutput {
	return i.ToVirtualNetworkPeeringResponseArrayOutputWithContext(context.Background())
}

func (i VirtualNetworkPeeringResponseArray) ToVirtualNetworkPeeringResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkPeeringResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualNetworkPeeringResponseArrayOutput)
}

// Peerings in a virtual network resource.
type VirtualNetworkPeeringResponseOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VirtualNetworkPeeringResponse)(nil)).Elem()
}

func (o VirtualNetworkPeeringResponseOutput) ToVirtualNetworkPeeringResponseOutput() VirtualNetworkPeeringResponseOutput {
	return o
}

func (o VirtualNetworkPeeringResponseOutput) ToVirtualNetworkPeeringResponseOutputWithContext(ctx context.Context) VirtualNetworkPeeringResponseOutput {
	return o
}

// Whether the forwarded traffic from the VMs in the remote virtual network will be allowed/disallowed.
func (o VirtualNetworkPeeringResponseOutput) AllowForwardedTraffic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.AllowForwardedTraffic }).(pulumi.BoolPtrOutput)
}

// If gateway links can be used in remote virtual networking to link to this virtual network.
func (o VirtualNetworkPeeringResponseOutput) AllowGatewayTransit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.AllowGatewayTransit }).(pulumi.BoolPtrOutput)
}

// Whether the VMs in the linked virtual network space would be able to access all the VMs in local Virtual network space.
func (o VirtualNetworkPeeringResponseOutput) AllowVirtualNetworkAccess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.AllowVirtualNetworkAccess }).(pulumi.BoolPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated.
func (o VirtualNetworkPeeringResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VirtualNetworkPeeringResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VirtualNetworkPeeringResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The status of the virtual network peering. Possible values are 'Initiated', 'Connected', and 'Disconnected'.
func (o VirtualNetworkPeeringResponseOutput) PeeringState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.PeeringState }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource.
func (o VirtualNetworkPeeringResponseOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// The reference of the remote virtual network address space.
func (o VirtualNetworkPeeringResponseOutput) RemoteAddressSpace() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *AddressSpaceResponse { return v.RemoteAddressSpace }).(AddressSpaceResponsePtrOutput)
}

// The reference of the remote virtual network. The remote virtual network can be in the same or different region (preview). See here to register for the preview and learn more (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
func (o VirtualNetworkPeeringResponseOutput) RemoteVirtualNetwork() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *SubResourceResponse { return v.RemoteVirtualNetwork }).(SubResourceResponsePtrOutput)
}

// If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
func (o VirtualNetworkPeeringResponseOutput) UseRemoteGateways() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VirtualNetworkPeeringResponse) *bool { return v.UseRemoteGateways }).(pulumi.BoolPtrOutput)
}

type VirtualNetworkPeeringResponseArrayOutput struct{ *pulumi.OutputState }

func (VirtualNetworkPeeringResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VirtualNetworkPeeringResponse)(nil)).Elem()
}

func (o VirtualNetworkPeeringResponseArrayOutput) ToVirtualNetworkPeeringResponseArrayOutput() VirtualNetworkPeeringResponseArrayOutput {
	return o
}

func (o VirtualNetworkPeeringResponseArrayOutput) ToVirtualNetworkPeeringResponseArrayOutputWithContext(ctx context.Context) VirtualNetworkPeeringResponseArrayOutput {
	return o
}

func (o VirtualNetworkPeeringResponseArrayOutput) Index(i pulumi.IntInput) VirtualNetworkPeeringResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VirtualNetworkPeeringResponse {
		return vs[0].([]VirtualNetworkPeeringResponse)[vs[1].(int)]
	}).(VirtualNetworkPeeringResponseOutput)
}

// VpnClientConfiguration for P2S client.
type VpnClientConfiguration struct {
	// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerAddress *string `pulumi:"radiusServerAddress"`
	// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
	// The reference of the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpace `pulumi:"vpnClientAddressPool"`
	// VpnClientIpsecPolicies for virtual network gateway P2S client.
	VpnClientIpsecPolicies []IpsecPolicy `pulumi:"vpnClientIpsecPolicies"`
	// VpnClientProtocols for Virtual network gateway.
	VpnClientProtocols []string `pulumi:"vpnClientProtocols"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates []VpnClientRevokedCertificate `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for virtual network gateway.
	VpnClientRootCertificates []VpnClientRootCertificate `pulumi:"vpnClientRootCertificates"`
}

// VpnClientConfigurationInput is an input type that accepts VpnClientConfigurationArgs and VpnClientConfigurationOutput values.
// You can construct a concrete instance of `VpnClientConfigurationInput` via:
//
//          VpnClientConfigurationArgs{...}
type VpnClientConfigurationInput interface {
	pulumi.Input

	ToVpnClientConfigurationOutput() VpnClientConfigurationOutput
	ToVpnClientConfigurationOutputWithContext(context.Context) VpnClientConfigurationOutput
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationArgs struct {
	// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerAddress pulumi.StringPtrInput `pulumi:"radiusServerAddress"`
	// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerSecret pulumi.StringPtrInput `pulumi:"radiusServerSecret"`
	// The reference of the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpacePtrInput `pulumi:"vpnClientAddressPool"`
	// VpnClientIpsecPolicies for virtual network gateway P2S client.
	VpnClientIpsecPolicies IpsecPolicyArrayInput `pulumi:"vpnClientIpsecPolicies"`
	// VpnClientProtocols for Virtual network gateway.
	VpnClientProtocols pulumi.StringArrayInput `pulumi:"vpnClientProtocols"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates VpnClientRevokedCertificateArrayInput `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for virtual network gateway.
	VpnClientRootCertificates VpnClientRootCertificateArrayInput `pulumi:"vpnClientRootCertificates"`
}

func (VpnClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfiguration)(nil)).Elem()
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationOutput() VpnClientConfigurationOutput {
	return i.ToVpnClientConfigurationOutputWithContext(context.Background())
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationOutputWithContext(ctx context.Context) VpnClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationOutput)
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return i.ToVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (i VpnClientConfigurationArgs) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationOutput).ToVpnClientConfigurationPtrOutputWithContext(ctx)
}

// VpnClientConfigurationPtrInput is an input type that accepts VpnClientConfigurationArgs, VpnClientConfigurationPtr and VpnClientConfigurationPtrOutput values.
// You can construct a concrete instance of `VpnClientConfigurationPtrInput` via:
//
//          VpnClientConfigurationArgs{...}
//
//  or:
//
//          nil
type VpnClientConfigurationPtrInput interface {
	pulumi.Input

	ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput
	ToVpnClientConfigurationPtrOutputWithContext(context.Context) VpnClientConfigurationPtrOutput
}

type vpnClientConfigurationPtrType VpnClientConfigurationArgs

func VpnClientConfigurationPtr(v *VpnClientConfigurationArgs) VpnClientConfigurationPtrInput {
	return (*vpnClientConfigurationPtrType)(v)
}

func (*vpnClientConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfiguration)(nil)).Elem()
}

func (i *vpnClientConfigurationPtrType) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return i.ToVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (i *vpnClientConfigurationPtrType) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationPtrOutput)
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfiguration)(nil)).Elem()
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationOutput() VpnClientConfigurationOutput {
	return o
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationOutputWithContext(ctx context.Context) VpnClientConfigurationOutput {
	return o
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return o.ToVpnClientConfigurationPtrOutputWithContext(context.Background())
}

func (o VpnClientConfigurationOutput) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *VpnClientConfiguration {
		return &v
	}).(VpnClientConfigurationPtrOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *string { return v.RadiusServerAddress }).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *string { return v.RadiusServerSecret }).(pulumi.StringPtrOutput)
}

// The reference of the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationOutput) VpnClientAddressPool() AddressSpacePtrOutput {
	return o.ApplyT(func(v VpnClientConfiguration) *AddressSpace { return v.VpnClientAddressPool }).(AddressSpacePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationOutput) VpnClientIpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []IpsecPolicy { return v.VpnClientIpsecPolicies }).(IpsecPolicyArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []string { return v.VpnClientProtocols }).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []VpnClientRevokedCertificate { return v.VpnClientRevokedCertificates }).(VpnClientRevokedCertificateArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationOutput) VpnClientRootCertificates() VpnClientRootCertificateArrayOutput {
	return o.ApplyT(func(v VpnClientConfiguration) []VpnClientRootCertificate { return v.VpnClientRootCertificates }).(VpnClientRootCertificateArrayOutput)
}

type VpnClientConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfiguration)(nil)).Elem()
}

func (o VpnClientConfigurationPtrOutput) ToVpnClientConfigurationPtrOutput() VpnClientConfigurationPtrOutput {
	return o
}

func (o VpnClientConfigurationPtrOutput) ToVpnClientConfigurationPtrOutputWithContext(ctx context.Context) VpnClientConfigurationPtrOutput {
	return o
}

func (o VpnClientConfigurationPtrOutput) Elem() VpnClientConfigurationOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) VpnClientConfiguration { return *v }).(VpnClientConfigurationOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationPtrOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerAddress
	}).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationPtrOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerSecret
	}).(pulumi.StringPtrOutput)
}

// The reference of the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationPtrOutput) VpnClientAddressPool() AddressSpacePtrOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) *AddressSpace {
		if v == nil {
			return nil
		}
		return v.VpnClientAddressPool
	}).(AddressSpacePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationPtrOutput) VpnClientIpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []IpsecPolicy {
		if v == nil {
			return nil
		}
		return v.VpnClientIpsecPolicies
	}).(IpsecPolicyArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationPtrOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.VpnClientProtocols
	}).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationPtrOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []VpnClientRevokedCertificate {
		if v == nil {
			return nil
		}
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationPtrOutput) VpnClientRootCertificates() VpnClientRootCertificateArrayOutput {
	return o.ApplyT(func(v *VpnClientConfiguration) []VpnClientRootCertificate {
		if v == nil {
			return nil
		}
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateArrayOutput)
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationResponse struct {
	// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerAddress *string `pulumi:"radiusServerAddress"`
	// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerSecret *string `pulumi:"radiusServerSecret"`
	// The reference of the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool *AddressSpaceResponse `pulumi:"vpnClientAddressPool"`
	// VpnClientIpsecPolicies for virtual network gateway P2S client.
	VpnClientIpsecPolicies []IpsecPolicyResponse `pulumi:"vpnClientIpsecPolicies"`
	// VpnClientProtocols for Virtual network gateway.
	VpnClientProtocols []string `pulumi:"vpnClientProtocols"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates []VpnClientRevokedCertificateResponse `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for virtual network gateway.
	VpnClientRootCertificates []VpnClientRootCertificateResponse `pulumi:"vpnClientRootCertificates"`
}

// VpnClientConfigurationResponseInput is an input type that accepts VpnClientConfigurationResponseArgs and VpnClientConfigurationResponseOutput values.
// You can construct a concrete instance of `VpnClientConfigurationResponseInput` via:
//
//          VpnClientConfigurationResponseArgs{...}
type VpnClientConfigurationResponseInput interface {
	pulumi.Input

	ToVpnClientConfigurationResponseOutput() VpnClientConfigurationResponseOutput
	ToVpnClientConfigurationResponseOutputWithContext(context.Context) VpnClientConfigurationResponseOutput
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationResponseArgs struct {
	// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerAddress pulumi.StringPtrInput `pulumi:"radiusServerAddress"`
	// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
	RadiusServerSecret pulumi.StringPtrInput `pulumi:"radiusServerSecret"`
	// The reference of the address space resource which represents Address space for P2S VpnClient.
	VpnClientAddressPool AddressSpaceResponsePtrInput `pulumi:"vpnClientAddressPool"`
	// VpnClientIpsecPolicies for virtual network gateway P2S client.
	VpnClientIpsecPolicies IpsecPolicyResponseArrayInput `pulumi:"vpnClientIpsecPolicies"`
	// VpnClientProtocols for Virtual network gateway.
	VpnClientProtocols pulumi.StringArrayInput `pulumi:"vpnClientProtocols"`
	// VpnClientRevokedCertificate for Virtual network gateway.
	VpnClientRevokedCertificates VpnClientRevokedCertificateResponseArrayInput `pulumi:"vpnClientRevokedCertificates"`
	// VpnClientRootCertificate for virtual network gateway.
	VpnClientRootCertificates VpnClientRootCertificateResponseArrayInput `pulumi:"vpnClientRootCertificates"`
}

func (VpnClientConfigurationResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfigurationResponse)(nil)).Elem()
}

func (i VpnClientConfigurationResponseArgs) ToVpnClientConfigurationResponseOutput() VpnClientConfigurationResponseOutput {
	return i.ToVpnClientConfigurationResponseOutputWithContext(context.Background())
}

func (i VpnClientConfigurationResponseArgs) ToVpnClientConfigurationResponseOutputWithContext(ctx context.Context) VpnClientConfigurationResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationResponseOutput)
}

func (i VpnClientConfigurationResponseArgs) ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput {
	return i.ToVpnClientConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i VpnClientConfigurationResponseArgs) ToVpnClientConfigurationResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationResponseOutput).ToVpnClientConfigurationResponsePtrOutputWithContext(ctx)
}

// VpnClientConfigurationResponsePtrInput is an input type that accepts VpnClientConfigurationResponseArgs, VpnClientConfigurationResponsePtr and VpnClientConfigurationResponsePtrOutput values.
// You can construct a concrete instance of `VpnClientConfigurationResponsePtrInput` via:
//
//          VpnClientConfigurationResponseArgs{...}
//
//  or:
//
//          nil
type VpnClientConfigurationResponsePtrInput interface {
	pulumi.Input

	ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput
	ToVpnClientConfigurationResponsePtrOutputWithContext(context.Context) VpnClientConfigurationResponsePtrOutput
}

type vpnClientConfigurationResponsePtrType VpnClientConfigurationResponseArgs

func VpnClientConfigurationResponsePtr(v *VpnClientConfigurationResponseArgs) VpnClientConfigurationResponsePtrInput {
	return (*vpnClientConfigurationResponsePtrType)(v)
}

func (*vpnClientConfigurationResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfigurationResponse)(nil)).Elem()
}

func (i *vpnClientConfigurationResponsePtrType) ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput {
	return i.ToVpnClientConfigurationResponsePtrOutputWithContext(context.Background())
}

func (i *vpnClientConfigurationResponsePtrType) ToVpnClientConfigurationResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientConfigurationResponsePtrOutput)
}

// VpnClientConfiguration for P2S client.
type VpnClientConfigurationResponseOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientConfigurationResponse)(nil)).Elem()
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponseOutput() VpnClientConfigurationResponseOutput {
	return o
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponseOutputWithContext(ctx context.Context) VpnClientConfigurationResponseOutput {
	return o
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput {
	return o.ToVpnClientConfigurationResponsePtrOutputWithContext(context.Background())
}

func (o VpnClientConfigurationResponseOutput) ToVpnClientConfigurationResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationResponsePtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *VpnClientConfigurationResponse {
		return &v
	}).(VpnClientConfigurationResponsePtrOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponseOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *string { return v.RadiusServerAddress }).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponseOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *string { return v.RadiusServerSecret }).(pulumi.StringPtrOutput)
}

// The reference of the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationResponseOutput) VpnClientAddressPool() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) *AddressSpaceResponse { return v.VpnClientAddressPool }).(AddressSpaceResponsePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationResponseOutput) VpnClientIpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []IpsecPolicyResponse { return v.VpnClientIpsecPolicies }).(IpsecPolicyResponseArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationResponseOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []string { return v.VpnClientProtocols }).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationResponseOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []VpnClientRevokedCertificateResponse {
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateResponseArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationResponseOutput) VpnClientRootCertificates() VpnClientRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v VpnClientConfigurationResponse) []VpnClientRootCertificateResponse {
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateResponseArrayOutput)
}

type VpnClientConfigurationResponsePtrOutput struct{ *pulumi.OutputState }

func (VpnClientConfigurationResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnClientConfigurationResponse)(nil)).Elem()
}

func (o VpnClientConfigurationResponsePtrOutput) ToVpnClientConfigurationResponsePtrOutput() VpnClientConfigurationResponsePtrOutput {
	return o
}

func (o VpnClientConfigurationResponsePtrOutput) ToVpnClientConfigurationResponsePtrOutputWithContext(ctx context.Context) VpnClientConfigurationResponsePtrOutput {
	return o
}

func (o VpnClientConfigurationResponsePtrOutput) Elem() VpnClientConfigurationResponseOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) VpnClientConfigurationResponse { return *v }).(VpnClientConfigurationResponseOutput)
}

// The radius server address property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponsePtrOutput) RadiusServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerAddress
	}).(pulumi.StringPtrOutput)
}

// The radius secret property of the VirtualNetworkGateway resource for vpn client connection.
func (o VpnClientConfigurationResponsePtrOutput) RadiusServerSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *string {
		if v == nil {
			return nil
		}
		return v.RadiusServerSecret
	}).(pulumi.StringPtrOutput)
}

// The reference of the address space resource which represents Address space for P2S VpnClient.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientAddressPool() AddressSpaceResponsePtrOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) *AddressSpaceResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientAddressPool
	}).(AddressSpaceResponsePtrOutput)
}

// VpnClientIpsecPolicies for virtual network gateway P2S client.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientIpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []IpsecPolicyResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientIpsecPolicies
	}).(IpsecPolicyResponseArrayOutput)
}

// VpnClientProtocols for Virtual network gateway.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []string {
		if v == nil {
			return nil
		}
		return v.VpnClientProtocols
	}).(pulumi.StringArrayOutput)
}

// VpnClientRevokedCertificate for Virtual network gateway.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientRevokedCertificates() VpnClientRevokedCertificateResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []VpnClientRevokedCertificateResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientRevokedCertificates
	}).(VpnClientRevokedCertificateResponseArrayOutput)
}

// VpnClientRootCertificate for virtual network gateway.
func (o VpnClientConfigurationResponsePtrOutput) VpnClientRootCertificates() VpnClientRootCertificateResponseArrayOutput {
	return o.ApplyT(func(v *VpnClientConfigurationResponse) []VpnClientRootCertificateResponse {
		if v == nil {
			return nil
		}
		return v.VpnClientRootCertificates
	}).(VpnClientRootCertificateResponseArrayOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VpnClientRevokedCertificateInput is an input type that accepts VpnClientRevokedCertificateArgs and VpnClientRevokedCertificateOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateInput` via:
//
//          VpnClientRevokedCertificateArgs{...}
type VpnClientRevokedCertificateInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateOutput() VpnClientRevokedCertificateOutput
	ToVpnClientRevokedCertificateOutputWithContext(context.Context) VpnClientRevokedCertificateOutput
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (VpnClientRevokedCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificate)(nil)).Elem()
}

func (i VpnClientRevokedCertificateArgs) ToVpnClientRevokedCertificateOutput() VpnClientRevokedCertificateOutput {
	return i.ToVpnClientRevokedCertificateOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateArgs) ToVpnClientRevokedCertificateOutputWithContext(ctx context.Context) VpnClientRevokedCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateOutput)
}

// VpnClientRevokedCertificateArrayInput is an input type that accepts VpnClientRevokedCertificateArray and VpnClientRevokedCertificateArrayOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateArrayInput` via:
//
//          VpnClientRevokedCertificateArray{ VpnClientRevokedCertificateArgs{...} }
type VpnClientRevokedCertificateArrayInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateArrayOutput() VpnClientRevokedCertificateArrayOutput
	ToVpnClientRevokedCertificateArrayOutputWithContext(context.Context) VpnClientRevokedCertificateArrayOutput
}

type VpnClientRevokedCertificateArray []VpnClientRevokedCertificateInput

func (VpnClientRevokedCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificate)(nil)).Elem()
}

func (i VpnClientRevokedCertificateArray) ToVpnClientRevokedCertificateArrayOutput() VpnClientRevokedCertificateArrayOutput {
	return i.ToVpnClientRevokedCertificateArrayOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateArray) ToVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateArrayOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificate)(nil)).Elem()
}

func (o VpnClientRevokedCertificateOutput) ToVpnClientRevokedCertificateOutput() VpnClientRevokedCertificateOutput {
	return o
}

func (o VpnClientRevokedCertificateOutput) ToVpnClientRevokedCertificateOutputWithContext(ctx context.Context) VpnClientRevokedCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRevokedCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VpnClientRevokedCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRevokedCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnClientRevokedCertificateOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificate) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnClientRevokedCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificate)(nil)).Elem()
}

func (o VpnClientRevokedCertificateArrayOutput) ToVpnClientRevokedCertificateArrayOutput() VpnClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateArrayOutput) ToVpnClientRevokedCertificateArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateArrayOutput) Index(i pulumi.IntInput) VpnClientRevokedCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRevokedCertificate {
		return vs[0].([]VpnClientRevokedCertificate)[vs[1].(int)]
	}).(VpnClientRevokedCertificateOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint *string `pulumi:"thumbprint"`
}

// VpnClientRevokedCertificateResponseInput is an input type that accepts VpnClientRevokedCertificateResponseArgs and VpnClientRevokedCertificateResponseOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateResponseInput` via:
//
//          VpnClientRevokedCertificateResponseArgs{...}
type VpnClientRevokedCertificateResponseInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateResponseOutput() VpnClientRevokedCertificateResponseOutput
	ToVpnClientRevokedCertificateResponseOutputWithContext(context.Context) VpnClientRevokedCertificateResponseOutput
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The revoked VPN client certificate thumbprint.
	Thumbprint pulumi.StringPtrInput `pulumi:"thumbprint"`
}

func (VpnClientRevokedCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (i VpnClientRevokedCertificateResponseArgs) ToVpnClientRevokedCertificateResponseOutput() VpnClientRevokedCertificateResponseOutput {
	return i.ToVpnClientRevokedCertificateResponseOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateResponseArgs) ToVpnClientRevokedCertificateResponseOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateResponseOutput)
}

// VpnClientRevokedCertificateResponseArrayInput is an input type that accepts VpnClientRevokedCertificateResponseArray and VpnClientRevokedCertificateResponseArrayOutput values.
// You can construct a concrete instance of `VpnClientRevokedCertificateResponseArrayInput` via:
//
//          VpnClientRevokedCertificateResponseArray{ VpnClientRevokedCertificateResponseArgs{...} }
type VpnClientRevokedCertificateResponseArrayInput interface {
	pulumi.Input

	ToVpnClientRevokedCertificateResponseArrayOutput() VpnClientRevokedCertificateResponseArrayOutput
	ToVpnClientRevokedCertificateResponseArrayOutputWithContext(context.Context) VpnClientRevokedCertificateResponseArrayOutput
}

type VpnClientRevokedCertificateResponseArray []VpnClientRevokedCertificateResponseInput

func (VpnClientRevokedCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (i VpnClientRevokedCertificateResponseArray) ToVpnClientRevokedCertificateResponseArrayOutput() VpnClientRevokedCertificateResponseArrayOutput {
	return i.ToVpnClientRevokedCertificateResponseArrayOutputWithContext(context.Background())
}

func (i VpnClientRevokedCertificateResponseArray) ToVpnClientRevokedCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRevokedCertificateResponseArrayOutput)
}

// VPN client revoked certificate of virtual network gateway.
type VpnClientRevokedCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o VpnClientRevokedCertificateResponseOutput) ToVpnClientRevokedCertificateResponseOutput() VpnClientRevokedCertificateResponseOutput {
	return o
}

func (o VpnClientRevokedCertificateResponseOutput) ToVpnClientRevokedCertificateResponseOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRevokedCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VpnClientRevokedCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRevokedCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN client revoked certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VpnClientRevokedCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The revoked VPN client certificate thumbprint.
func (o VpnClientRevokedCertificateResponseOutput) Thumbprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRevokedCertificateResponse) *string { return v.Thumbprint }).(pulumi.StringPtrOutput)
}

type VpnClientRevokedCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRevokedCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRevokedCertificateResponse)(nil)).Elem()
}

func (o VpnClientRevokedCertificateResponseArrayOutput) ToVpnClientRevokedCertificateResponseArrayOutput() VpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateResponseArrayOutput) ToVpnClientRevokedCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRevokedCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRevokedCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnClientRevokedCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRevokedCertificateResponse {
		return vs[0].([]VpnClientRevokedCertificateResponse)[vs[1].(int)]
	}).(VpnClientRevokedCertificateResponseOutput)
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificate struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// VpnClientRootCertificateInput is an input type that accepts VpnClientRootCertificateArgs and VpnClientRootCertificateOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateInput` via:
//
//          VpnClientRootCertificateArgs{...}
type VpnClientRootCertificateInput interface {
	pulumi.Input

	ToVpnClientRootCertificateOutput() VpnClientRootCertificateOutput
	ToVpnClientRootCertificateOutputWithContext(context.Context) VpnClientRootCertificateOutput
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificateArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The certificate public data.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (VpnClientRootCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificate)(nil)).Elem()
}

func (i VpnClientRootCertificateArgs) ToVpnClientRootCertificateOutput() VpnClientRootCertificateOutput {
	return i.ToVpnClientRootCertificateOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateArgs) ToVpnClientRootCertificateOutputWithContext(ctx context.Context) VpnClientRootCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateOutput)
}

// VpnClientRootCertificateArrayInput is an input type that accepts VpnClientRootCertificateArray and VpnClientRootCertificateArrayOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateArrayInput` via:
//
//          VpnClientRootCertificateArray{ VpnClientRootCertificateArgs{...} }
type VpnClientRootCertificateArrayInput interface {
	pulumi.Input

	ToVpnClientRootCertificateArrayOutput() VpnClientRootCertificateArrayOutput
	ToVpnClientRootCertificateArrayOutputWithContext(context.Context) VpnClientRootCertificateArrayOutput
}

type VpnClientRootCertificateArray []VpnClientRootCertificateInput

func (VpnClientRootCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificate)(nil)).Elem()
}

func (i VpnClientRootCertificateArray) ToVpnClientRootCertificateArrayOutput() VpnClientRootCertificateArrayOutput {
	return i.ToVpnClientRootCertificateArrayOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateArray) ToVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateArrayOutput)
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificateOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificate)(nil)).Elem()
}

func (o VpnClientRootCertificateOutput) ToVpnClientRootCertificateOutput() VpnClientRootCertificateOutput {
	return o
}

func (o VpnClientRootCertificateOutput) ToVpnClientRootCertificateOutputWithContext(ctx context.Context) VpnClientRootCertificateOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRootCertificateOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VpnClientRootCertificateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRootCertificateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The certificate public data.
func (o VpnClientRootCertificateOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRootCertificate) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type VpnClientRootCertificateArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificate)(nil)).Elem()
}

func (o VpnClientRootCertificateArrayOutput) ToVpnClientRootCertificateArrayOutput() VpnClientRootCertificateArrayOutput {
	return o
}

func (o VpnClientRootCertificateArrayOutput) ToVpnClientRootCertificateArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateArrayOutput {
	return o
}

func (o VpnClientRootCertificateArrayOutput) Index(i pulumi.IntInput) VpnClientRootCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRootCertificate {
		return vs[0].([]VpnClientRootCertificate)[vs[1].(int)]
	}).(VpnClientRootCertificateOutput)
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificateResponse struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag *string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState string `pulumi:"provisioningState"`
	// The certificate public data.
	PublicCertData string `pulumi:"publicCertData"`
}

// VpnClientRootCertificateResponseInput is an input type that accepts VpnClientRootCertificateResponseArgs and VpnClientRootCertificateResponseOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateResponseInput` via:
//
//          VpnClientRootCertificateResponseArgs{...}
type VpnClientRootCertificateResponseInput interface {
	pulumi.Input

	ToVpnClientRootCertificateResponseOutput() VpnClientRootCertificateResponseOutput
	ToVpnClientRootCertificateResponseOutputWithContext(context.Context) VpnClientRootCertificateResponseOutput
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificateResponseArgs struct {
	// A unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringPtrInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// The certificate public data.
	PublicCertData pulumi.StringInput `pulumi:"publicCertData"`
}

func (VpnClientRootCertificateResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificateResponse)(nil)).Elem()
}

func (i VpnClientRootCertificateResponseArgs) ToVpnClientRootCertificateResponseOutput() VpnClientRootCertificateResponseOutput {
	return i.ToVpnClientRootCertificateResponseOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateResponseArgs) ToVpnClientRootCertificateResponseOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateResponseOutput)
}

// VpnClientRootCertificateResponseArrayInput is an input type that accepts VpnClientRootCertificateResponseArray and VpnClientRootCertificateResponseArrayOutput values.
// You can construct a concrete instance of `VpnClientRootCertificateResponseArrayInput` via:
//
//          VpnClientRootCertificateResponseArray{ VpnClientRootCertificateResponseArgs{...} }
type VpnClientRootCertificateResponseArrayInput interface {
	pulumi.Input

	ToVpnClientRootCertificateResponseArrayOutput() VpnClientRootCertificateResponseArrayOutput
	ToVpnClientRootCertificateResponseArrayOutputWithContext(context.Context) VpnClientRootCertificateResponseArrayOutput
}

type VpnClientRootCertificateResponseArray []VpnClientRootCertificateResponseInput

func (VpnClientRootCertificateResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificateResponse)(nil)).Elem()
}

func (i VpnClientRootCertificateResponseArray) ToVpnClientRootCertificateResponseArrayOutput() VpnClientRootCertificateResponseArrayOutput {
	return i.ToVpnClientRootCertificateResponseArrayOutputWithContext(context.Background())
}

func (i VpnClientRootCertificateResponseArray) ToVpnClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnClientRootCertificateResponseArrayOutput)
}

// VPN client root certificate of virtual network gateway
type VpnClientRootCertificateResponseOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnClientRootCertificateResponseOutput) ToVpnClientRootCertificateResponseOutput() VpnClientRootCertificateResponseOutput {
	return o
}

func (o VpnClientRootCertificateResponseOutput) ToVpnClientRootCertificateResponseOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseOutput {
	return o
}

// A unique read-only string that changes whenever the resource is updated.
func (o VpnClientRootCertificateResponseOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Resource ID.
func (o VpnClientRootCertificateResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnClientRootCertificateResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the VPN client root certificate resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
func (o VpnClientRootCertificateResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// The certificate public data.
func (o VpnClientRootCertificateResponseOutput) PublicCertData() pulumi.StringOutput {
	return o.ApplyT(func(v VpnClientRootCertificateResponse) string { return v.PublicCertData }).(pulumi.StringOutput)
}

type VpnClientRootCertificateResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnClientRootCertificateResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnClientRootCertificateResponse)(nil)).Elem()
}

func (o VpnClientRootCertificateResponseArrayOutput) ToVpnClientRootCertificateResponseArrayOutput() VpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRootCertificateResponseArrayOutput) ToVpnClientRootCertificateResponseArrayOutputWithContext(ctx context.Context) VpnClientRootCertificateResponseArrayOutput {
	return o
}

func (o VpnClientRootCertificateResponseArrayOutput) Index(i pulumi.IntInput) VpnClientRootCertificateResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnClientRootCertificateResponse {
		return vs[0].([]VpnClientRootCertificateResponse)[vs[1].(int)]
	}).(VpnClientRootCertificateResponseOutput)
}

// VpnConnection Resource.
type VpnConnectionType struct {
	// EnableBgp flag
	EnableBgp *bool `pulumi:"enableBgp"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies []IpsecPolicy `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// Id of the connected vpn site.
	RemoteVpnSite *SubResource `pulumi:"remoteVpnSite"`
	// routing weight for vpn connection.
	RoutingWeight *int `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey *string `pulumi:"sharedKey"`
}

// VpnConnectionTypeInput is an input type that accepts VpnConnectionTypeArgs and VpnConnectionTypeOutput values.
// You can construct a concrete instance of `VpnConnectionTypeInput` via:
//
//          VpnConnectionTypeArgs{...}
type VpnConnectionTypeInput interface {
	pulumi.Input

	ToVpnConnectionTypeOutput() VpnConnectionTypeOutput
	ToVpnConnectionTypeOutputWithContext(context.Context) VpnConnectionTypeOutput
}

// VpnConnection Resource.
type VpnConnectionTypeArgs struct {
	// EnableBgp flag
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies IpsecPolicyArrayInput `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Id of the connected vpn site.
	RemoteVpnSite SubResourcePtrInput `pulumi:"remoteVpnSite"`
	// routing weight for vpn connection.
	RoutingWeight pulumi.IntPtrInput `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
}

func (VpnConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionType)(nil)).Elem()
}

func (i VpnConnectionTypeArgs) ToVpnConnectionTypeOutput() VpnConnectionTypeOutput {
	return i.ToVpnConnectionTypeOutputWithContext(context.Background())
}

func (i VpnConnectionTypeArgs) ToVpnConnectionTypeOutputWithContext(ctx context.Context) VpnConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionTypeOutput)
}

// VpnConnectionTypeArrayInput is an input type that accepts VpnConnectionTypeArray and VpnConnectionTypeArrayOutput values.
// You can construct a concrete instance of `VpnConnectionTypeArrayInput` via:
//
//          VpnConnectionTypeArray{ VpnConnectionTypeArgs{...} }
type VpnConnectionTypeArrayInput interface {
	pulumi.Input

	ToVpnConnectionTypeArrayOutput() VpnConnectionTypeArrayOutput
	ToVpnConnectionTypeArrayOutputWithContext(context.Context) VpnConnectionTypeArrayOutput
}

type VpnConnectionTypeArray []VpnConnectionTypeInput

func (VpnConnectionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionType)(nil)).Elem()
}

func (i VpnConnectionTypeArray) ToVpnConnectionTypeArrayOutput() VpnConnectionTypeArrayOutput {
	return i.ToVpnConnectionTypeArrayOutputWithContext(context.Background())
}

func (i VpnConnectionTypeArray) ToVpnConnectionTypeArrayOutputWithContext(ctx context.Context) VpnConnectionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionTypeArrayOutput)
}

// VpnConnection Resource.
type VpnConnectionTypeOutput struct{ *pulumi.OutputState }

func (VpnConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionType)(nil)).Elem()
}

func (o VpnConnectionTypeOutput) ToVpnConnectionTypeOutput() VpnConnectionTypeOutput {
	return o
}

func (o VpnConnectionTypeOutput) ToVpnConnectionTypeOutputWithContext(ctx context.Context) VpnConnectionTypeOutput {
	return o
}

// EnableBgp flag
func (o VpnConnectionTypeOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Resource ID.
func (o VpnConnectionTypeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VpnConnectionTypeOutput) IpsecPolicies() IpsecPolicyArrayOutput {
	return o.ApplyT(func(v VpnConnectionType) []IpsecPolicy { return v.IpsecPolicies }).(IpsecPolicyArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnConnectionTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Id of the connected vpn site.
func (o VpnConnectionTypeOutput) RemoteVpnSite() SubResourcePtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *SubResource { return v.RemoteVpnSite }).(SubResourcePtrOutput)
}

// routing weight for vpn connection.
func (o VpnConnectionTypeOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

// SharedKey for the vpn connection.
func (o VpnConnectionTypeOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionType) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

type VpnConnectionTypeArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionType)(nil)).Elem()
}

func (o VpnConnectionTypeArrayOutput) ToVpnConnectionTypeArrayOutput() VpnConnectionTypeArrayOutput {
	return o
}

func (o VpnConnectionTypeArrayOutput) ToVpnConnectionTypeArrayOutputWithContext(ctx context.Context) VpnConnectionTypeArrayOutput {
	return o
}

func (o VpnConnectionTypeArrayOutput) Index(i pulumi.IntInput) VpnConnectionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionType {
		return vs[0].([]VpnConnectionType)[vs[1].(int)]
	}).(VpnConnectionTypeOutput)
}

// VpnConnection Resource.
type VpnConnectionResponse struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth int `pulumi:"connectionBandwidth"`
	// The connection status.
	ConnectionStatus string `pulumi:"connectionStatus"`
	// Egress bytes transferred.
	EgressBytesTransferred int `pulumi:"egressBytesTransferred"`
	// EnableBgp flag
	EnableBgp *bool `pulumi:"enableBgp"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag string `pulumi:"etag"`
	// Resource ID.
	Id *string `pulumi:"id"`
	// Ingress bytes transferred.
	IngressBytesTransferred int `pulumi:"ingressBytesTransferred"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies []IpsecPolicyResponse `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name *string `pulumi:"name"`
	// The provisioning state of the resource.
	ProvisioningState string `pulumi:"provisioningState"`
	// Id of the connected vpn site.
	RemoteVpnSite *SubResourceResponse `pulumi:"remoteVpnSite"`
	// routing weight for vpn connection.
	RoutingWeight *int `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey *string `pulumi:"sharedKey"`
}

// VpnConnectionResponseInput is an input type that accepts VpnConnectionResponseArgs and VpnConnectionResponseOutput values.
// You can construct a concrete instance of `VpnConnectionResponseInput` via:
//
//          VpnConnectionResponseArgs{...}
type VpnConnectionResponseInput interface {
	pulumi.Input

	ToVpnConnectionResponseOutput() VpnConnectionResponseOutput
	ToVpnConnectionResponseOutputWithContext(context.Context) VpnConnectionResponseOutput
}

// VpnConnection Resource.
type VpnConnectionResponseArgs struct {
	// Expected bandwidth in MBPS.
	ConnectionBandwidth pulumi.IntInput `pulumi:"connectionBandwidth"`
	// The connection status.
	ConnectionStatus pulumi.StringInput `pulumi:"connectionStatus"`
	// Egress bytes transferred.
	EgressBytesTransferred pulumi.IntInput `pulumi:"egressBytesTransferred"`
	// EnableBgp flag
	EnableBgp pulumi.BoolPtrInput `pulumi:"enableBgp"`
	// Gets a unique read-only string that changes whenever the resource is updated.
	Etag pulumi.StringInput `pulumi:"etag"`
	// Resource ID.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Ingress bytes transferred.
	IngressBytesTransferred pulumi.IntInput `pulumi:"ingressBytesTransferred"`
	// The IPSec Policies to be considered by this connection.
	IpsecPolicies IpsecPolicyResponseArrayInput `pulumi:"ipsecPolicies"`
	// The name of the resource that is unique within a resource group. This name can be used to access the resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The provisioning state of the resource.
	ProvisioningState pulumi.StringInput `pulumi:"provisioningState"`
	// Id of the connected vpn site.
	RemoteVpnSite SubResourceResponsePtrInput `pulumi:"remoteVpnSite"`
	// routing weight for vpn connection.
	RoutingWeight pulumi.IntPtrInput `pulumi:"routingWeight"`
	// SharedKey for the vpn connection.
	SharedKey pulumi.StringPtrInput `pulumi:"sharedKey"`
}

func (VpnConnectionResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionResponse)(nil)).Elem()
}

func (i VpnConnectionResponseArgs) ToVpnConnectionResponseOutput() VpnConnectionResponseOutput {
	return i.ToVpnConnectionResponseOutputWithContext(context.Background())
}

func (i VpnConnectionResponseArgs) ToVpnConnectionResponseOutputWithContext(ctx context.Context) VpnConnectionResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionResponseOutput)
}

// VpnConnectionResponseArrayInput is an input type that accepts VpnConnectionResponseArray and VpnConnectionResponseArrayOutput values.
// You can construct a concrete instance of `VpnConnectionResponseArrayInput` via:
//
//          VpnConnectionResponseArray{ VpnConnectionResponseArgs{...} }
type VpnConnectionResponseArrayInput interface {
	pulumi.Input

	ToVpnConnectionResponseArrayOutput() VpnConnectionResponseArrayOutput
	ToVpnConnectionResponseArrayOutputWithContext(context.Context) VpnConnectionResponseArrayOutput
}

type VpnConnectionResponseArray []VpnConnectionResponseInput

func (VpnConnectionResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionResponse)(nil)).Elem()
}

func (i VpnConnectionResponseArray) ToVpnConnectionResponseArrayOutput() VpnConnectionResponseArrayOutput {
	return i.ToVpnConnectionResponseArrayOutputWithContext(context.Background())
}

func (i VpnConnectionResponseArray) ToVpnConnectionResponseArrayOutputWithContext(ctx context.Context) VpnConnectionResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnConnectionResponseArrayOutput)
}

// VpnConnection Resource.
type VpnConnectionResponseOutput struct{ *pulumi.OutputState }

func (VpnConnectionResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpnConnectionResponse)(nil)).Elem()
}

func (o VpnConnectionResponseOutput) ToVpnConnectionResponseOutput() VpnConnectionResponseOutput {
	return o
}

func (o VpnConnectionResponseOutput) ToVpnConnectionResponseOutputWithContext(ctx context.Context) VpnConnectionResponseOutput {
	return o
}

// Expected bandwidth in MBPS.
func (o VpnConnectionResponseOutput) ConnectionBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v VpnConnectionResponse) int { return v.ConnectionBandwidth }).(pulumi.IntOutput)
}

// The connection status.
func (o VpnConnectionResponseOutput) ConnectionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionResponse) string { return v.ConnectionStatus }).(pulumi.StringOutput)
}

// Egress bytes transferred.
func (o VpnConnectionResponseOutput) EgressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v VpnConnectionResponse) int { return v.EgressBytesTransferred }).(pulumi.IntOutput)
}

// EnableBgp flag
func (o VpnConnectionResponseOutput) EnableBgp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *bool { return v.EnableBgp }).(pulumi.BoolPtrOutput)
}

// Gets a unique read-only string that changes whenever the resource is updated.
func (o VpnConnectionResponseOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionResponse) string { return v.Etag }).(pulumi.StringOutput)
}

// Resource ID.
func (o VpnConnectionResponseOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Ingress bytes transferred.
func (o VpnConnectionResponseOutput) IngressBytesTransferred() pulumi.IntOutput {
	return o.ApplyT(func(v VpnConnectionResponse) int { return v.IngressBytesTransferred }).(pulumi.IntOutput)
}

// The IPSec Policies to be considered by this connection.
func (o VpnConnectionResponseOutput) IpsecPolicies() IpsecPolicyResponseArrayOutput {
	return o.ApplyT(func(v VpnConnectionResponse) []IpsecPolicyResponse { return v.IpsecPolicies }).(IpsecPolicyResponseArrayOutput)
}

// The name of the resource that is unique within a resource group. This name can be used to access the resource.
func (o VpnConnectionResponseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The provisioning state of the resource.
func (o VpnConnectionResponseOutput) ProvisioningState() pulumi.StringOutput {
	return o.ApplyT(func(v VpnConnectionResponse) string { return v.ProvisioningState }).(pulumi.StringOutput)
}

// Id of the connected vpn site.
func (o VpnConnectionResponseOutput) RemoteVpnSite() SubResourceResponsePtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *SubResourceResponse { return v.RemoteVpnSite }).(SubResourceResponsePtrOutput)
}

// routing weight for vpn connection.
func (o VpnConnectionResponseOutput) RoutingWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *int { return v.RoutingWeight }).(pulumi.IntPtrOutput)
}

// SharedKey for the vpn connection.
func (o VpnConnectionResponseOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpnConnectionResponse) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

type VpnConnectionResponseArrayOutput struct{ *pulumi.OutputState }

func (VpnConnectionResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpnConnectionResponse)(nil)).Elem()
}

func (o VpnConnectionResponseArrayOutput) ToVpnConnectionResponseArrayOutput() VpnConnectionResponseArrayOutput {
	return o
}

func (o VpnConnectionResponseArrayOutput) ToVpnConnectionResponseArrayOutputWithContext(ctx context.Context) VpnConnectionResponseArrayOutput {
	return o
}

func (o VpnConnectionResponseArrayOutput) Index(i pulumi.IntInput) VpnConnectionResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpnConnectionResponse {
		return vs[0].([]VpnConnectionResponse)[vs[1].(int)]
	}).(VpnConnectionResponseOutput)
}

func init() {
	pulumi.RegisterOutputType(AddressSpaceOutput{})
	pulumi.RegisterOutputType(AddressSpacePtrOutput{})
	pulumi.RegisterOutputType(AddressSpaceResponseOutput{})
	pulumi.RegisterOutputType(AddressSpaceResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificateOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificateArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificateResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAuthenticationCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleBoundsOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleBoundsPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleBoundsResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleBoundsResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayAutoscaleConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendAddressResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayBackendHttpSettingsResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayConnectionDrainingOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayConnectionDrainingPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayConnectionDrainingResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayConnectionDrainingResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallDisabledRuleGroupOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallDisabledRuleGroupArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallDisabledRuleGroupResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFirewallDisabledRuleGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayFrontendPortResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayHttpListenerResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayPathRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeHealthResponseMatchOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeHealthResponseMatchPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeHealthResponseMatchResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeHealthResponseMatchResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayProbeResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRedirectConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayRequestRoutingRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySkuResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslPolicyOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslPolicyPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslPolicyResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewaySslPolicyResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayUrlPathMapResponseArrayOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWebApplicationFirewallConfigurationOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWebApplicationFirewallConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWebApplicationFirewallConfigurationResponseOutput{})
	pulumi.RegisterOutputType(ApplicationGatewayWebApplicationFirewallConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupTypeOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupTypeArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupResponseOutput{})
	pulumi.RegisterOutputType(ApplicationSecurityGroupResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleCollectionResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleProtocolOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleProtocolArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleProtocolResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleProtocolResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallApplicationRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleCollectionResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallNetworkRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(AzureFirewallRCActionOutput{})
	pulumi.RegisterOutputType(AzureFirewallRCActionPtrOutput{})
	pulumi.RegisterOutputType(AzureFirewallRCActionResponseOutput{})
	pulumi.RegisterOutputType(AzureFirewallRCActionResponsePtrOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolArrayOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolResponseOutput{})
	pulumi.RegisterOutputType(BackendAddressPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(BgpPeerStatusResponseOutput{})
	pulumi.RegisterOutputType(BgpPeerStatusResponseArrayOutput{})
	pulumi.RegisterOutputType(BgpSettingsOutput{})
	pulumi.RegisterOutputType(BgpSettingsPtrOutput{})
	pulumi.RegisterOutputType(BgpSettingsResponseOutput{})
	pulumi.RegisterOutputType(BgpSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorDestinationOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorDestinationPtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorDestinationResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorDestinationResponsePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSourceOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSourcePtrOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSourceResponseOutput{})
	pulumi.RegisterOutputType(ConnectionMonitorSourceResponsePtrOutput{})
	pulumi.RegisterOutputType(DevicePropertiesOutput{})
	pulumi.RegisterOutputType(DevicePropertiesPtrOutput{})
	pulumi.RegisterOutputType(DevicePropertiesResponseOutput{})
	pulumi.RegisterOutputType(DevicePropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(DhcpOptionsOutput{})
	pulumi.RegisterOutputType(DhcpOptionsPtrOutput{})
	pulumi.RegisterOutputType(DhcpOptionsResponseOutput{})
	pulumi.RegisterOutputType(DhcpOptionsResponsePtrOutput{})
	pulumi.RegisterOutputType(DnsConfigOutput{})
	pulumi.RegisterOutputType(DnsConfigPtrOutput{})
	pulumi.RegisterOutputType(DnsConfigResponseOutput{})
	pulumi.RegisterOutputType(DnsConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(EndpointTypeOutput{})
	pulumi.RegisterOutputType(EndpointTypeArrayOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesCustomHeadersOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesCustomHeadersArrayOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesResponseCustomHeadersOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesResponseCustomHeadersArrayOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesResponseSubnetsOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesResponseSubnetsArrayOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesSubnetsOutput{})
	pulumi.RegisterOutputType(EndpointPropertiesSubnetsArrayOutput{})
	pulumi.RegisterOutputType(EndpointResponseOutput{})
	pulumi.RegisterOutputType(EndpointResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationTypeOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationTypeArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitAuthorizationResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionTypeOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionTypeArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringTypeOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringTypeArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitPeeringResponseArrayOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitServiceProviderPropertiesResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsPtrOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsResponseOutput{})
	pulumi.RegisterOutputType(ExpressRouteCircuitStatsResponsePtrOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(FrontendIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(GatewayRouteResponseOutput{})
	pulumi.RegisterOutputType(GatewayRouteResponseArrayOutput{})
	pulumi.RegisterOutputType(HubVirtualNetworkConnectionOutput{})
	pulumi.RegisterOutputType(HubVirtualNetworkConnectionArrayOutput{})
	pulumi.RegisterOutputType(HubVirtualNetworkConnectionResponseOutput{})
	pulumi.RegisterOutputType(HubVirtualNetworkConnectionResponseArrayOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(IPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(InboundNatPoolOutput{})
	pulumi.RegisterOutputType(InboundNatPoolArrayOutput{})
	pulumi.RegisterOutputType(InboundNatPoolResponseOutput{})
	pulumi.RegisterOutputType(InboundNatPoolResponseArrayOutput{})
	pulumi.RegisterOutputType(InboundNatRuleTypeOutput{})
	pulumi.RegisterOutputType(InboundNatRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(InboundNatRuleResponseOutput{})
	pulumi.RegisterOutputType(InboundNatRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(IpTagOutput{})
	pulumi.RegisterOutputType(IpTagArrayOutput{})
	pulumi.RegisterOutputType(IpTagResponseOutput{})
	pulumi.RegisterOutputType(IpTagResponseArrayOutput{})
	pulumi.RegisterOutputType(IpsecPolicyOutput{})
	pulumi.RegisterOutputType(IpsecPolicyArrayOutput{})
	pulumi.RegisterOutputType(IpsecPolicyResponseOutput{})
	pulumi.RegisterOutputType(IpsecPolicyResponseArrayOutput{})
	pulumi.RegisterOutputType(Ipv6ExpressRouteCircuitPeeringConfigOutput{})
	pulumi.RegisterOutputType(Ipv6ExpressRouteCircuitPeeringConfigPtrOutput{})
	pulumi.RegisterOutputType(Ipv6ExpressRouteCircuitPeeringConfigResponseOutput{})
	pulumi.RegisterOutputType(Ipv6ExpressRouteCircuitPeeringConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerSkuOutput{})
	pulumi.RegisterOutputType(LoadBalancerSkuPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerSkuResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancerSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleResponseOutput{})
	pulumi.RegisterOutputType(LoadBalancingRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayTypeOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayTypePtrOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayResponseOutput{})
	pulumi.RegisterOutputType(LocalNetworkGatewayResponsePtrOutput{})
	pulumi.RegisterOutputType(MonitorConfigOutput{})
	pulumi.RegisterOutputType(MonitorConfigPtrOutput{})
	pulumi.RegisterOutputType(MonitorConfigCustomHeadersOutput{})
	pulumi.RegisterOutputType(MonitorConfigCustomHeadersArrayOutput{})
	pulumi.RegisterOutputType(MonitorConfigExpectedStatusCodeRangesOutput{})
	pulumi.RegisterOutputType(MonitorConfigExpectedStatusCodeRangesArrayOutput{})
	pulumi.RegisterOutputType(MonitorConfigResponseOutput{})
	pulumi.RegisterOutputType(MonitorConfigResponsePtrOutput{})
	pulumi.RegisterOutputType(MonitorConfigResponseCustomHeadersOutput{})
	pulumi.RegisterOutputType(MonitorConfigResponseCustomHeadersArrayOutput{})
	pulumi.RegisterOutputType(MonitorConfigResponseExpectedStatusCodeRangesOutput{})
	pulumi.RegisterOutputType(MonitorConfigResponseExpectedStatusCodeRangesArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsPtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceDnsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponseOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceResponseArrayOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupTypeOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupTypePtrOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupResponseOutput{})
	pulumi.RegisterOutputType(NetworkSecurityGroupResponsePtrOutput{})
	pulumi.RegisterOutputType(OutboundNatRuleOutput{})
	pulumi.RegisterOutputType(OutboundNatRuleArrayOutput{})
	pulumi.RegisterOutputType(OutboundNatRuleResponseOutput{})
	pulumi.RegisterOutputType(OutboundNatRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterArrayOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterResponseOutput{})
	pulumi.RegisterOutputType(PacketCaptureFilterResponseArrayOutput{})
	pulumi.RegisterOutputType(PacketCaptureStorageLocationOutput{})
	pulumi.RegisterOutputType(PacketCaptureStorageLocationPtrOutput{})
	pulumi.RegisterOutputType(PacketCaptureStorageLocationResponseOutput{})
	pulumi.RegisterOutputType(PacketCaptureStorageLocationResponsePtrOutput{})
	pulumi.RegisterOutputType(PoliciesOutput{})
	pulumi.RegisterOutputType(PoliciesPtrOutput{})
	pulumi.RegisterOutputType(PoliciesResponseOutput{})
	pulumi.RegisterOutputType(PoliciesResponsePtrOutput{})
	pulumi.RegisterOutputType(ProbeOutput{})
	pulumi.RegisterOutputType(ProbeArrayOutput{})
	pulumi.RegisterOutputType(ProbeResponseOutput{})
	pulumi.RegisterOutputType(ProbeResponseArrayOutput{})
	pulumi.RegisterOutputType(PublicIPAddressTypeOutput{})
	pulumi.RegisterOutputType(PublicIPAddressTypePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsPtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressDnsSettingsResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressResponsePtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuPtrOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuResponseOutput{})
	pulumi.RegisterOutputType(PublicIPAddressSkuResponsePtrOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkArrayOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkResponseOutput{})
	pulumi.RegisterOutputType(ResourceNavigationLinkResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteTypeOutput{})
	pulumi.RegisterOutputType(RouteTypeArrayOutput{})
	pulumi.RegisterOutputType(RouteFilterTypeOutput{})
	pulumi.RegisterOutputType(RouteFilterTypePtrOutput{})
	pulumi.RegisterOutputType(RouteFilterResponseOutput{})
	pulumi.RegisterOutputType(RouteFilterResponsePtrOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleTypeOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleResponseOutput{})
	pulumi.RegisterOutputType(RouteFilterRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteResponseOutput{})
	pulumi.RegisterOutputType(RouteResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteTableTypeOutput{})
	pulumi.RegisterOutputType(RouteTableTypePtrOutput{})
	pulumi.RegisterOutputType(RouteTableResponseOutput{})
	pulumi.RegisterOutputType(RouteTableResponsePtrOutput{})
	pulumi.RegisterOutputType(SecurityRuleTypeOutput{})
	pulumi.RegisterOutputType(SecurityRuleTypeArrayOutput{})
	pulumi.RegisterOutputType(SecurityRuleResponseOutput{})
	pulumi.RegisterOutputType(SecurityRuleResponseArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatResponseOutput{})
	pulumi.RegisterOutputType(ServiceEndpointPropertiesFormatResponseArrayOutput{})
	pulumi.RegisterOutputType(SubResourceOutput{})
	pulumi.RegisterOutputType(SubResourcePtrOutput{})
	pulumi.RegisterOutputType(SubResourceArrayOutput{})
	pulumi.RegisterOutputType(SubResourceResponseOutput{})
	pulumi.RegisterOutputType(SubResourceResponsePtrOutput{})
	pulumi.RegisterOutputType(SubResourceResponseArrayOutput{})
	pulumi.RegisterOutputType(SubnetTypeOutput{})
	pulumi.RegisterOutputType(SubnetTypePtrOutput{})
	pulumi.RegisterOutputType(SubnetTypeArrayOutput{})
	pulumi.RegisterOutputType(SubnetResponseOutput{})
	pulumi.RegisterOutputType(SubnetResponsePtrOutput{})
	pulumi.RegisterOutputType(SubnetResponseArrayOutput{})
	pulumi.RegisterOutputType(TunnelConnectionHealthResponseOutput{})
	pulumi.RegisterOutputType(TunnelConnectionHealthResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayTypeOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayTypePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayIPConfigurationResponseArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewayResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuPtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkGatewaySkuResponsePtrOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringTypeOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringTypeArrayOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringResponseOutput{})
	pulumi.RegisterOutputType(VirtualNetworkPeeringResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationResponseOutput{})
	pulumi.RegisterOutputType(VpnClientConfigurationResponsePtrOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnClientRevokedCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateArrayOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateResponseOutput{})
	pulumi.RegisterOutputType(VpnClientRootCertificateResponseArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionTypeOutput{})
	pulumi.RegisterOutputType(VpnConnectionTypeArrayOutput{})
	pulumi.RegisterOutputType(VpnConnectionResponseOutput{})
	pulumi.RegisterOutputType(VpnConnectionResponseArrayOutput{})
}
