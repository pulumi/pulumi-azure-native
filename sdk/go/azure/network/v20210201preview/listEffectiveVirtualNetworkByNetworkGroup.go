// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20210201preview

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Result of the request to list Effective Virtual Network. It contains a list of groups and a URL link to get the next set of results.
func ListEffectiveVirtualNetworkByNetworkGroup(ctx *pulumi.Context, args *ListEffectiveVirtualNetworkByNetworkGroupArgs, opts ...pulumi.InvokeOption) (*ListEffectiveVirtualNetworkByNetworkGroupResult, error) {
	var rv ListEffectiveVirtualNetworkByNetworkGroupResult
	err := ctx.Invoke("azure-native:network/v20210201preview:listEffectiveVirtualNetworkByNetworkGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type ListEffectiveVirtualNetworkByNetworkGroupArgs struct {
	// The name of the network group to get.
	NetworkGroupName string `pulumi:"networkGroupName"`
	// The name of the network manager.
	NetworkManagerName string `pulumi:"networkManagerName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
	SkipToken *string `pulumi:"skipToken"`
}

// Result of the request to list Effective Virtual Network. It contains a list of groups and a URL link to get the next set of results.
type ListEffectiveVirtualNetworkByNetworkGroupResult struct {
	// When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
	SkipToken *string `pulumi:"skipToken"`
	// Gets a page of EffectiveVirtualNetwork
	Value []EffectiveVirtualNetworkResponse `pulumi:"value"`
}

func ListEffectiveVirtualNetworkByNetworkGroupOutput(ctx *pulumi.Context, args ListEffectiveVirtualNetworkByNetworkGroupOutputArgs, opts ...pulumi.InvokeOption) ListEffectiveVirtualNetworkByNetworkGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ListEffectiveVirtualNetworkByNetworkGroupResult, error) {
			args := v.(ListEffectiveVirtualNetworkByNetworkGroupArgs)
			r, err := ListEffectiveVirtualNetworkByNetworkGroup(ctx, &args, opts...)
			var s ListEffectiveVirtualNetworkByNetworkGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ListEffectiveVirtualNetworkByNetworkGroupResultOutput)
}

type ListEffectiveVirtualNetworkByNetworkGroupOutputArgs struct {
	// The name of the network group to get.
	NetworkGroupName pulumi.StringInput `pulumi:"networkGroupName"`
	// The name of the network manager.
	NetworkManagerName pulumi.StringInput `pulumi:"networkManagerName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
	// When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
	SkipToken pulumi.StringPtrInput `pulumi:"skipToken"`
}

func (ListEffectiveVirtualNetworkByNetworkGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListEffectiveVirtualNetworkByNetworkGroupArgs)(nil)).Elem()
}

// Result of the request to list Effective Virtual Network. It contains a list of groups and a URL link to get the next set of results.
type ListEffectiveVirtualNetworkByNetworkGroupResultOutput struct{ *pulumi.OutputState }

func (ListEffectiveVirtualNetworkByNetworkGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListEffectiveVirtualNetworkByNetworkGroupResult)(nil)).Elem()
}

func (o ListEffectiveVirtualNetworkByNetworkGroupResultOutput) ToListEffectiveVirtualNetworkByNetworkGroupResultOutput() ListEffectiveVirtualNetworkByNetworkGroupResultOutput {
	return o
}

func (o ListEffectiveVirtualNetworkByNetworkGroupResultOutput) ToListEffectiveVirtualNetworkByNetworkGroupResultOutputWithContext(ctx context.Context) ListEffectiveVirtualNetworkByNetworkGroupResultOutput {
	return o
}

// When present, the value can be passed to a subsequent query call (together with the same query and scopes used in the current request) to retrieve the next page of data.
func (o ListEffectiveVirtualNetworkByNetworkGroupResultOutput) SkipToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListEffectiveVirtualNetworkByNetworkGroupResult) *string { return v.SkipToken }).(pulumi.StringPtrOutput)
}

// Gets a page of EffectiveVirtualNetwork
func (o ListEffectiveVirtualNetworkByNetworkGroupResultOutput) Value() EffectiveVirtualNetworkResponseArrayOutput {
	return o.ApplyT(func(v ListEffectiveVirtualNetworkByNetworkGroupResult) []EffectiveVirtualNetworkResponse {
		return v.Value
	}).(EffectiveVirtualNetworkResponseArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ListEffectiveVirtualNetworkByNetworkGroupResultOutput{})
}
