// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v20150501preview

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// RouteTable resource
type RouteTable struct {
	pulumi.CustomResourceState

	// Gets a unique read-only string that changes whenever the resource is updated
	Etag pulumi.StringPtrOutput `pulumi:"etag"`
	// Resource location
	Location pulumi.StringOutput `pulumi:"location"`
	// Resource name
	Name pulumi.StringOutput `pulumi:"name"`
	// Gets or sets Provisioning state of the resource Updating/Deleting/Failed
	ProvisioningState pulumi.StringPtrOutput `pulumi:"provisioningState"`
	// Gets or sets Routes in a Route Table
	Routes RouteResponseArrayOutput `pulumi:"routes"`
	// Gets collection of references to subnets
	Subnets SubResourceResponseArrayOutput `pulumi:"subnets"`
	// Resource tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Resource type
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewRouteTable registers a new resource with the given unique name, arguments, and options.
func NewRouteTable(ctx *pulumi.Context,
	name string, args *RouteTableArgs, opts ...pulumi.ResourceOption) (*RouteTable, error) {
	if args == nil || args.Location == nil {
		return nil, errors.New("missing required argument 'Location'")
	}
	if args == nil || args.ResourceGroupName == nil {
		return nil, errors.New("missing required argument 'ResourceGroupName'")
	}
	if args == nil || args.RouteTableName == nil {
		return nil, errors.New("missing required argument 'RouteTableName'")
	}
	if args == nil {
		args = &RouteTableArgs{}
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("azure-nextgen:network/latest:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20150615:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20160330:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20160601:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20160901:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20161201:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20170301:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20170601:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20170801:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20170901:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20171001:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20171101:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20180101:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20180201:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20180401:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20180601:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20180701:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20180801:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20181001:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20181101:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20181201:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20190201:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20190401:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20190601:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20190701:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20190801:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20190901:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20191101:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20191201:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20200301:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20200401:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20200501:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20200601:RouteTable"),
		},
		{
			Type: pulumi.String("azure-nextgen:network/v20200701:RouteTable"),
		},
	})
	opts = append(opts, aliases)
	var resource RouteTable
	err := ctx.RegisterResource("azure-nextgen:network/v20150501preview:RouteTable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouteTable gets an existing RouteTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouteTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouteTableState, opts ...pulumi.ResourceOption) (*RouteTable, error) {
	var resource RouteTable
	err := ctx.ReadResource("azure-nextgen:network/v20150501preview:RouteTable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouteTable resources.
type routeTableState struct {
	// Gets a unique read-only string that changes whenever the resource is updated
	Etag *string `pulumi:"etag"`
	// Resource location
	Location *string `pulumi:"location"`
	// Resource name
	Name *string `pulumi:"name"`
	// Gets or sets Provisioning state of the resource Updating/Deleting/Failed
	ProvisioningState *string `pulumi:"provisioningState"`
	// Gets or sets Routes in a Route Table
	Routes []RouteResponse `pulumi:"routes"`
	// Gets collection of references to subnets
	Subnets []SubResourceResponse `pulumi:"subnets"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
	// Resource type
	Type *string `pulumi:"type"`
}

type RouteTableState struct {
	// Gets a unique read-only string that changes whenever the resource is updated
	Etag pulumi.StringPtrInput
	// Resource location
	Location pulumi.StringPtrInput
	// Resource name
	Name pulumi.StringPtrInput
	// Gets or sets Provisioning state of the resource Updating/Deleting/Failed
	ProvisioningState pulumi.StringPtrInput
	// Gets or sets Routes in a Route Table
	Routes RouteResponseArrayInput
	// Gets collection of references to subnets
	Subnets SubResourceResponseArrayInput
	// Resource tags
	Tags pulumi.StringMapInput
	// Resource type
	Type pulumi.StringPtrInput
}

func (RouteTableState) ElementType() reflect.Type {
	return reflect.TypeOf((*routeTableState)(nil)).Elem()
}

type routeTableArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated
	Etag *string `pulumi:"etag"`
	// Resource location
	Location string `pulumi:"location"`
	// Gets or sets Provisioning state of the resource Updating/Deleting/Failed
	ProvisioningState *string `pulumi:"provisioningState"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
	// The name of the route table.
	RouteTableName string `pulumi:"routeTableName"`
	// Gets or sets Routes in a Route Table
	Routes []RouteType `pulumi:"routes"`
	// Gets collection of references to subnets
	Subnets []SubResource `pulumi:"subnets"`
	// Resource tags
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a RouteTable resource.
type RouteTableArgs struct {
	// Gets a unique read-only string that changes whenever the resource is updated
	Etag pulumi.StringPtrInput
	// Resource location
	Location pulumi.StringInput
	// Gets or sets Provisioning state of the resource Updating/Deleting/Failed
	ProvisioningState pulumi.StringPtrInput
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput
	// The name of the route table.
	RouteTableName pulumi.StringInput
	// Gets or sets Routes in a Route Table
	Routes RouteTypeArrayInput
	// Gets collection of references to subnets
	Subnets SubResourceArrayInput
	// Resource tags
	Tags pulumi.StringMapInput
}

func (RouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routeTableArgs)(nil)).Elem()
}
