// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v20160601

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Peering in a ExpressRouteCircuit resource
//
// Deprecated: Version 2016-06-01 will be removed in v2 of the provider.
func LookupExpressRouteCircuitPeering(ctx *pulumi.Context, args *LookupExpressRouteCircuitPeeringArgs, opts ...pulumi.InvokeOption) (*LookupExpressRouteCircuitPeeringResult, error) {
	var rv LookupExpressRouteCircuitPeeringResult
	err := ctx.Invoke("azure-native:network/v20160601:getExpressRouteCircuitPeering", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupExpressRouteCircuitPeeringArgs struct {
	// The name of the express route circuit.
	CircuitName string `pulumi:"circuitName"`
	// The name of the peering.
	PeeringName string `pulumi:"peeringName"`
	// The name of the resource group.
	ResourceGroupName string `pulumi:"resourceGroupName"`
}

// Peering in a ExpressRouteCircuit resource
type LookupExpressRouteCircuitPeeringResult struct {
	// Gets or sets the azure ASN
	AzureASN *int `pulumi:"azureASN"`
	// A unique read-only string that changes whenever the resource is updated
	Etag *string `pulumi:"etag"`
	// Gets or sets the GatewayManager Etag
	GatewayManagerEtag *string `pulumi:"gatewayManagerEtag"`
	// Resource Id
	Id *string `pulumi:"id"`
	// Gets whether the provider or the customer last modified the peering
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// Gets or sets the Microsoft peering config
	MicrosoftPeeringConfig *ExpressRouteCircuitPeeringConfigResponse `pulumi:"microsoftPeeringConfig"`
	// Gets name of the resource that is unique within a resource group. This name can be used to access the resource
	Name *string `pulumi:"name"`
	// Gets or sets the peer ASN
	PeerASN *int `pulumi:"peerASN"`
	// Gets or sets PeeringType
	PeeringType *string `pulumi:"peeringType"`
	// Gets or sets the primary port
	PrimaryAzurePort *string `pulumi:"primaryAzurePort"`
	// Gets or sets the primary address prefix
	PrimaryPeerAddressPrefix *string `pulumi:"primaryPeerAddressPrefix"`
	// Gets provisioning state of the PublicIP resource Updating/Deleting/Failed
	ProvisioningState *string `pulumi:"provisioningState"`
	// Gets or sets the secondary port
	SecondaryAzurePort *string `pulumi:"secondaryAzurePort"`
	// Gets or sets the secondary address prefix
	SecondaryPeerAddressPrefix *string `pulumi:"secondaryPeerAddressPrefix"`
	// Gets or sets the shared key
	SharedKey *string `pulumi:"sharedKey"`
	// Gets or sets state of Peering
	State *string `pulumi:"state"`
	// Gets or peering stats
	Stats *ExpressRouteCircuitStatsResponse `pulumi:"stats"`
	// Gets or sets the vlan id
	VlanId *int `pulumi:"vlanId"`
}

func LookupExpressRouteCircuitPeeringOutput(ctx *pulumi.Context, args LookupExpressRouteCircuitPeeringOutputArgs, opts ...pulumi.InvokeOption) LookupExpressRouteCircuitPeeringResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupExpressRouteCircuitPeeringResult, error) {
			args := v.(LookupExpressRouteCircuitPeeringArgs)
			r, err := LookupExpressRouteCircuitPeering(ctx, &args, opts...)
			var s LookupExpressRouteCircuitPeeringResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupExpressRouteCircuitPeeringResultOutput)
}

type LookupExpressRouteCircuitPeeringOutputArgs struct {
	// The name of the express route circuit.
	CircuitName pulumi.StringInput `pulumi:"circuitName"`
	// The name of the peering.
	PeeringName pulumi.StringInput `pulumi:"peeringName"`
	// The name of the resource group.
	ResourceGroupName pulumi.StringInput `pulumi:"resourceGroupName"`
}

func (LookupExpressRouteCircuitPeeringOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExpressRouteCircuitPeeringArgs)(nil)).Elem()
}

// Peering in a ExpressRouteCircuit resource
type LookupExpressRouteCircuitPeeringResultOutput struct{ *pulumi.OutputState }

func (LookupExpressRouteCircuitPeeringResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExpressRouteCircuitPeeringResult)(nil)).Elem()
}

func (o LookupExpressRouteCircuitPeeringResultOutput) ToLookupExpressRouteCircuitPeeringResultOutput() LookupExpressRouteCircuitPeeringResultOutput {
	return o
}

func (o LookupExpressRouteCircuitPeeringResultOutput) ToLookupExpressRouteCircuitPeeringResultOutputWithContext(ctx context.Context) LookupExpressRouteCircuitPeeringResultOutput {
	return o
}

// Gets or sets the azure ASN
func (o LookupExpressRouteCircuitPeeringResultOutput) AzureASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitPeeringResult) *int { return v.AzureASN }).(pulumi.IntPtrOutput)
}

// A unique read-only string that changes whenever the resource is updated
func (o LookupExpressRouteCircuitPeeringResultOutput) Etag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitPeeringResult) *string { return v.Etag }).(pulumi.StringPtrOutput)
}

// Gets or sets the GatewayManager Etag
func (o LookupExpressRouteCircuitPeeringResultOutput) GatewayManagerEtag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitPeeringResult) *string { return v.GatewayManagerEtag }).(pulumi.StringPtrOutput)
}

// Resource Id
func (o LookupExpressRouteCircuitPeeringResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitPeeringResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Gets whether the provider or the customer last modified the peering
func (o LookupExpressRouteCircuitPeeringResultOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitPeeringResult) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// Gets or sets the Microsoft peering config
func (o LookupExpressRouteCircuitPeeringResultOutput) MicrosoftPeeringConfig() ExpressRouteCircuitPeeringConfigResponsePtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitPeeringResult) *ExpressRouteCircuitPeeringConfigResponse {
		return v.MicrosoftPeeringConfig
	}).(ExpressRouteCircuitPeeringConfigResponsePtrOutput)
}

// Gets name of the resource that is unique within a resource group. This name can be used to access the resource
func (o LookupExpressRouteCircuitPeeringResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitPeeringResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Gets or sets the peer ASN
func (o LookupExpressRouteCircuitPeeringResultOutput) PeerASN() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitPeeringResult) *int { return v.PeerASN }).(pulumi.IntPtrOutput)
}

// Gets or sets PeeringType
func (o LookupExpressRouteCircuitPeeringResultOutput) PeeringType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitPeeringResult) *string { return v.PeeringType }).(pulumi.StringPtrOutput)
}

// Gets or sets the primary port
func (o LookupExpressRouteCircuitPeeringResultOutput) PrimaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitPeeringResult) *string { return v.PrimaryAzurePort }).(pulumi.StringPtrOutput)
}

// Gets or sets the primary address prefix
func (o LookupExpressRouteCircuitPeeringResultOutput) PrimaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitPeeringResult) *string { return v.PrimaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets provisioning state of the PublicIP resource Updating/Deleting/Failed
func (o LookupExpressRouteCircuitPeeringResultOutput) ProvisioningState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitPeeringResult) *string { return v.ProvisioningState }).(pulumi.StringPtrOutput)
}

// Gets or sets the secondary port
func (o LookupExpressRouteCircuitPeeringResultOutput) SecondaryAzurePort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitPeeringResult) *string { return v.SecondaryAzurePort }).(pulumi.StringPtrOutput)
}

// Gets or sets the secondary address prefix
func (o LookupExpressRouteCircuitPeeringResultOutput) SecondaryPeerAddressPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitPeeringResult) *string { return v.SecondaryPeerAddressPrefix }).(pulumi.StringPtrOutput)
}

// Gets or sets the shared key
func (o LookupExpressRouteCircuitPeeringResultOutput) SharedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitPeeringResult) *string { return v.SharedKey }).(pulumi.StringPtrOutput)
}

// Gets or sets state of Peering
func (o LookupExpressRouteCircuitPeeringResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitPeeringResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Gets or peering stats
func (o LookupExpressRouteCircuitPeeringResultOutput) Stats() ExpressRouteCircuitStatsResponsePtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitPeeringResult) *ExpressRouteCircuitStatsResponse { return v.Stats }).(ExpressRouteCircuitStatsResponsePtrOutput)
}

// Gets or sets the vlan id
func (o LookupExpressRouteCircuitPeeringResultOutput) VlanId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupExpressRouteCircuitPeeringResult) *int { return v.VlanId }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupExpressRouteCircuitPeeringResultOutput{})
}
